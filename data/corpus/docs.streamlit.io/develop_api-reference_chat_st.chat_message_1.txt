Title: st.chat_message Documentation
URL: https://docs.streamlit.io/develop/api-reference/chat/st.chat_message
Summary: The `st.chat_message` function in Streamlit allows users to insert a chat message container in their applications. It supports a preferred 'with' notation for adding elements to the container. For practical usage, refer to the linked tutorial on building a basic LLM chat app.
---

_star_
#### Tip
Read the [Build a basic LLM chat app](https://docs.streamlit.io/develop/tutorials/llms/build-conversational-apps) tutorial to learn how to use `st.chat_message` and `st.chat_input` to build chat-based apps.
## [](https://docs.streamlit.io/develop/api-reference/chat/st.chat_message#stchat_message)st.chat_message
Streamlit VersionVersion 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0Version 1.21.0Version 1.20.0
Insert a chat message container.
To add elements to the returned container, you can use `with` notation (preferred) or just call methods directly on the returned object. See the examples below.
Function signature[[source]](https://github.com/streamlit/streamlit/blob/1.44.0/lib/streamlit/elements/widgets/chat.py#L223 "View st.chat_message source code on GitHub")  
---  
st.chat_message(name, *, avatar=None)  
Parameters  
name ("user", "assistant", "ai", "human", or str) |  The name of the message author. Can be "human"/"user" or "ai"/"assistant" to enable preset styling and avatars. Currently, the name is not shown in the UI but is only set as an accessibility label. For accessibility reasons, you should not use an empty string.  
avatar (Anything supported by st.image (except list), str, or None) |  The avatar shown next to the message. If `avatar` is `None` (default), the icon will be determined from `name` as follows:
  * If `name` is `"user"` or `"human"`, the message will have a default user icon.
  * If `name` is `"ai"` or `"assistant"`, the message will have a default bot icon.
  * For all other values of `name`, the message will show the first letter of the name.

In addition to the types supported by [`st.image`](https://docs.streamlit.io/develop/api-reference/media/st.image) (except list), the following strings are valid:
  * A single-character emoji. For example, you can set `avatar="üßë‚Äçüíª"` or `avatar="ü¶ñ"`. Emoji short codes are not supported.
  * An icon from the Material Symbols library (rounded style) in the format `":material/icon_name:"` where "icon_name" is the name of the icon in snake case. For example, `icon=":material/thumb_up:"` will display the Thumb Up icon. Find additional icons in the [Material Symbols](https://fonts.google.com/icons?icon.set=Material+Symbols&icon.style=Rounded) font library.

  
Returns  
(Container) | A single container that can hold multiple elements.  
#### Examples
You can use `with` notation to insert any element into an expander
```
import streamlit as st
import numpy as np
with st.chat_message("user"):
  st.write("Hello üëã")
  st.line_chart(np.random.randn(30, 3))
```

Copy
[Built with Streamlit üéà](https://streamlit.io)
[Fullscreen _open_in_new_](https://doc-chat-message-user.streamlit.app//?utm_medium=oembed&)
Or you can just call methods directly in the returned objects:
```
import streamlit as st
import numpy as np
message = st.chat_message("assistant")
message.write("Hello human")
message.bar_chart(np.random.randn(30, 3))
```

Copy
[Built with Streamlit üéà](https://streamlit.io)
[Fullscreen _open_in_new_](https://doc-chat-message-user1.streamlit.app//?utm_medium=oembed&)
For an overview of the `st.chat_message` and `st.chat_input` API, check out this video tutorial by Chanin Nantasenamat ([@dataprofessor](https://www.youtube.com/dataprofessor)), a Senior Developer Advocate at Streamlit.
[Previous: st.chat_input](https://docs.streamlit.io/develop/api-reference/chat/st.chat_input)[Next: st.status](https://docs.streamlit.io/develop/api-reference/status/st.status) _forum_
### Still have questions?
Our [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.
[Home](https://docs.streamlit.io/)Contact Us[Community](https://discuss.streamlit.io)[](https://github.com/streamlit "GitHub")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q "YouTube")[](https://twitter.com/streamlit "Twitter")[](https://www.linkedin.com/company/streamlit "LinkedIn")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html "Newsletter")
¬© 2025 Snowflake Inc.Cookie policy
 _forum_ Ask AI