Title: Timezone Handling in Streamlit
URL: https://docs.streamlit.io/develop/concepts/design/timezone-handling
Summary: This document discusses the importance of timezone awareness in Streamlit applications, particularly for public apps with users in various timezones. It explains that Streamlit presents `datetime` information exactly as stored in the backend, without automatic adjustments for user's local timezone, highlighting the need for developers to understand this behavior to prevent unexpected issues.
---

# [](https://docs.streamlit.io/develop/concepts/design/timezone-handling#working-with-timezones)Working with timezones
In general, working with timezones can be tricky. Your Streamlit app users are not necessarily in the same timezone as the server running your app. It is especially true of public apps, where anyone in the world (in any timezone) can access your app. As such, it is crucial to understand how Streamlit handles timezones, so you can avoid unexpected behavior when displaying `datetime` information.
## [](https://docs.streamlit.io/develop/concepts/design/timezone-handling#how-streamlit-handles-timezones)How Streamlit handles timezones
Streamlit always shows `datetime` information on the frontend with the same information as its corresponding `datetime` instance in the backend. I.e., date or time information does not automatically adjust to the users' timezone. We distinguish between the following two cases:
### [](https://docs.streamlit.io/develop/concepts/design/timezone-handling#datetime-instance-without-a-timezone-naive)**`datetime`instance without a timezone (naive)**
When you provide a `datetime` instance _without specifying a timezone_ , the frontend shows the `datetime` instance without timezone information. For example (this also applies to other widgets like [`st.dataframe`](https://docs.streamlit.io/develop/api-reference/data/st.dataframe)):
`import streamlit as st from datetime import datetime st.write(datetime(2020, 1, 10, 10, 30)) # Outputs: 2020-01-10 10:30:00 `
Users of the above app always see the output as `2020-01-10 10:30:00`.
### [](https://docs.streamlit.io/develop/concepts/design/timezone-handling#datetime-instance-with-a-timezone)**`datetime`instance with a timezone**
When you provide a `datetime` instance _and specify a timezone_ , the frontend shows the `datetime` instance in that same timezone. For example (this also applies to other widgets like [`st.dataframe`](https://docs.streamlit.io/develop/api-reference/data/st.dataframe)):
`import streamlit as st from datetime import datetime import pytz st.write(datetime(2020, 1, 10, 10, 30, tzinfo=pytz.timezone("EST"))) # Outputs: 2020-01-10 10:30:00-05:00 `
Users of the above app always see the output as `2020-01-10 10:30:00-05:00`.
In both cases, neither the date nor time information automatically adjusts to the users' timezone on the frontend. What users see is identical to the corresponding `datetime` instance in the backend. It is currently not possible to automatically adjust the date or time information to the timezone of the users viewing the app.
_push_pin_
#### Note
The legacy version of the `st.dataframe` has issues with timezones. We do not plan to roll out additional fixes or enhancements for the legacy dataframe. If you need stable timezone support, please consider switching to the arrow serialization by changing the [config setting](https://docs.streamlit.io/develop/concepts/configuration), _config.dataFrameSerialization = "arrow"_.
[Previous: Using custom classes](https://docs.streamlit.io/develop/concepts/design/custom-classes)[Next: Connections, secrets, & authentication](https://docs.streamlit.io/develop/concepts/connections) _forum_
### Still have questions?
Our [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.
[Home](https://docs.streamlit.io/)Contact Us[Community](https://discuss.streamlit.io)[](https://github.com/streamlit "GitHub")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q "YouTube")[](https://twitter.com/streamlit "Twitter")[](https://www.linkedin.com/company/streamlit "LinkedIn")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html "Newsletter")
Â© 2025 Snowflake Inc.Cookie policy
 _forum_ Ask AI