Title: st.segmented_control Documentation
URL: https://docs.streamlit.io/develop/api-reference/widgets/st.segmented_control
Summary: The `st.segmented_control` function displays a segmented control widget in Streamlit, allowing users to choose from a linear set of toggle button-like options. This section outlines the function's signature and parameters, including `label`, `options`, `selection_mode`, and additional optional arguments.
---

## [](https://docs.streamlit.io/develop/api-reference/widgets/st.segmented_control#stsegmented_control)st.segmented_control
Streamlit VersionVersion 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0Version 1.21.0Version 1.20.0
Display a segmented control widget.
A segmented control widget is a linear set of segments where each of the passed `options` functions like a toggle button.
Function signature[[source]](https://github.com/streamlit/streamlit/blob/1.44.0/lib/streamlit/elements/widgets/button_group.py#L633 "View st.segmented_control source code on GitHub")  
---  
st.segmented_control(label, options, *, selection_mode="single", default=None, format_func=None, key=None, help=None, on_change=None, args=None, kwargs=None, disabled=False, label_visibility="visible")  
Parameters  
label (str) |  A short label explaining to the user what this widget is for. The label can optionally contain GitHub-flavored Markdown of the following types: Bold, Italics, Strikethroughs, Inline Code, Links, and Images. Images display like icons, with a max height equal to the font height. Unsupported Markdown elements are unwrapped so only their children (text contents) render. Display unsupported elements as literal characters by backslash-escaping them. E.g., `"1\. Not an ordered list"`. See the `body` parameter of [`st.markdown`](https://docs.streamlit.io/develop/api-reference/text/st.markdown) for additional, supported Markdown directives. For accessibility reasons, you should never set an empty label, but you can hide it with `label_visibility` if needed. In the future, we may disallow empty labels by raising an exception.  
options (Iterable of V) |  Labels for the select options in an `Iterable`. This can be a `list`, `set`, or anything supported by `st.dataframe`. If `options` is dataframe-like, the first column will be used. Each label will be cast to `str` internally by default and can optionally contain GitHub-flavored Markdown, including the Markdown directives described in the `body` parameter of `st.markdown`.  
selection_mode ("single" or "multi") |  The selection mode for the widget. If this is `"single"` (default), only one option can be selected. If this is `"multi"`, multiple options can be selected.  
default (Iterable of V, V, or None) |  The value of the widget when it first renders. If the `selection_mode` is `multi`, this can be a list of values, a single value, or `None`. If the `selection_mode` is `"single"`, this can be a single value or `None`.  
format_func (function) |  Function to modify the display of the options. It receives the raw option as an argument and should output the label to be shown for that option. This has no impact on the return value of the command. The output can optionally contain GitHub-flavored Markdown, including the Markdown directives described in the `body` parameter of `st.markdown`.  
key (str or int) |  An optional string or integer to use as the unique key for the widget. If this is omitted, a key will be generated for the widget based on its content. Multiple widgets of the same type may not share the same key.  
help (str or None) |  A tooltip that gets displayed next to the widget label. Streamlit only displays the tooltip when `label_visibility="visible"`. If this is `None` (default), no tooltip is displayed. The tooltip can optionally contain GitHub-flavored Markdown, including the Markdown directives described in the `body` parameter of `st.markdown`.  
on_change (callable) |  An optional callback invoked when this widget's value changes.  
args (tuple) |  An optional tuple of args to pass to the callback.  
kwargs (dict) |  An optional dict of kwargs to pass to the callback.  
disabled (bool) |  An optional boolean that disables the widget if set to `True`. The default is `False`.  
label_visibility ("visible", "hidden", or "collapsed") |  The visibility of the label. The default is `"visible"`. If this is `"hidden"`, Streamlit displays an empty spacer instead of the label, which can help keep the widget alligned with other widgets. If this is `"collapsed"`, Streamlit displays no label or spacer.  
Returns  
(list of V, V, or None) | If the `selection_mode` is `multi`, this is a list of selected options or an empty list. If the `selection_mode` is `"single"`, this is a selected option or `None`.  
#### Examples
**Example 1: Multi-select segmented control**
Display a multi-select segmented control widget, and show the selection:
```
import streamlit as st
options = ["North", "East", "South", "West"]
selection = st.segmented_control(
  "Directions", options, selection_mode="multi"
)
st.markdown(f"Your selected options: {selection}.")