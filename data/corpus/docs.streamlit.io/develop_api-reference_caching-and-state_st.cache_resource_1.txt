Title: Streamlit Cache Resource Documentation
URL: https://docs.streamlit.io/develop/api-reference/caching-and-state/st.cache_resource
Summary: This documentation page details the `st.cache_resource` function in Streamlit, which is used for caching resources. It includes sections on clearing cache, example usage, and instructions for using Streamlit commands within cached functions, along with information about static elements and input widgets.
---

1. Contents
  2. [st.cache_resource](https://docs.streamlit.io/develop/api-reference/caching-and-state/st.cache_resource#stcache_resource)
  3. [st.cache_resource.clear](https://docs.streamlit.io/develop/api-reference/caching-and-state/st.cache_resource#stcache_resourceclear)
  4. [Example](https://docs.streamlit.io/develop/api-reference/caching-and-state/st.cache_resource#example)
  5. [CachedFunc.clear](https://docs.streamlit.io/develop/api-reference/caching-and-state/st.cache_resource#cachedfuncclear)
  6. [Using Streamlit commands in cached functions](https://docs.streamlit.io/develop/api-reference/caching-and-state/st.cache_resource#using-streamlit-commands-in-cached-functions)
  7. [Static elements](https://docs.streamlit.io/develop/api-reference/caching-and-state/st.cache_resource#static-elements)
  8. [Input widgets](https://docs.streamlit.io/develop/api-reference/caching-and-state/st.cache_resource#input-widgets)


 _star_
#### Tip
This page only contains information on the `st.cache_resource` API. For a deeper dive into caching and how to use it, check out [Caching](https://docs.streamlit.io/develop/concepts/architecture/caching).
## [](https://docs.streamlit.io/develop/api-reference/caching-and-state/st.cache_resource#stcache_resource)st.cache_resource
Streamlit VersionVersion 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0Version 1.21.0Version 1.20.0
Decorator to cache functions that return global resources (e.g. database connections, ML models).
Cached objects are shared across all users, sessions, and reruns. They must be thread-safe because they can be accessed from multiple threads concurrently. If thread safety is an issue, consider using `st.session_state` to store resources per session instead.
You can clear a function's cache with `func.clear()` or clear the entire cache with `st.cache_resource.clear()`.
A function's arguments must be hashable to cache it. If you have an unhashable argument (like a database connection) or an argument you want to exclude from caching, use an underscore prefix in the argument name. In this case, Streamlit will return a cached value when all other arguments match a previous function call. Alternatively, you can declare custom hashing functions with `hash_funcs`.
To cache data, use `st.cache_data` instead. Learn more about caching at <https://docs.streamlit.io/develop/concepts/architecture/caching>.
Function signature[[source]](https://github.com/streamlit/streamlit/blob/1.44.0/lib/streamlit/runtime/caching/cache_resource_api.py#L248 "View st.cache_resource source code on GitHub")  
---  
st.cache_resource(func, *, ttl, max_entries, show_spinner, validate, experimental_allow_widgets, hash_funcs=None)  
Parameters  
func (callable) |  The function that creates the cached resource. Streamlit hashes the function's source code.  
ttl (float, timedelta, str, or None) |  The maximum time to keep an entry in the cache. Can be one of:
  * `None` if cache entries should never expire (default).
  * A number specifying the time in seconds.
  * A string specifying the time in a format supported by [Pandas's Timedelta constructor](https://pandas.pydata.org/docs/reference/api/pandas.Timedelta.html), e.g. `"1d"`, `"1.5 days"`, or `"1h23s"`.
  * A `timedelta` object from [Python's built-in datetime library](https://docs.python.org/3/library/datetime.html#timedelta-objects), e.g. `timedelta(days=1)`.