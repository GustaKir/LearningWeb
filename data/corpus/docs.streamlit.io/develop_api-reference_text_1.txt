Title: Text Elements in Streamlit
URL: https://docs.streamlit.io/develop/api-reference/text
Summary: This section outlines the text elements in Streamlit, including setting the app's title with `st.title`, utilizing heading levels with `st.header` and `st.subheader`, entering plain text via `st.text`, and using Markdown with `st.markdown`. It also introduces `st.write`, a versatile command for accepting multiple data types.
---

* [Home](https://docs.streamlit.io/)/
  * [Develop](https://docs.streamlit.io/develop)/
  * [API reference](https://docs.streamlit.io/develop/api-reference)/
  * [Text elements](https://docs.streamlit.io/develop/api-reference/text)


  1. Contents
  2. [Headings and body text](https://docs.streamlit.io/develop/api-reference/text#headings-and-body-text)
  3. [Formatted text](https://docs.streamlit.io/develop/api-reference/text#formatted-text)
  4. [Utilities](https://docs.streamlit.io/develop/api-reference/text#utilities)


# [](https://docs.streamlit.io/develop/api-reference/text#text-elements)Text elements
Streamlit apps usually start with a call to `st.title` to set the app's title. After that, there are 2 heading levels you can use: `st.header` and `st.subheader`.
Pure text is entered with `st.text`, and Markdown with `st.markdown`.
We also offer a "swiss-army knife" command called `st.write`, which accepts multiple arguments, and multiple data types. And as described above, you can also use [magic commands](https://docs.streamlit.io/develop/api-reference/write-magic/magic) in place of `st.write`.
## [](https://docs.streamlit.io/develop/api-reference/text#headings-and-body-text)Headings and body text
[![screenshot](https://docs.streamlit.io/images/api/markdown.jpg)MarkdownDisplay string formatted as Markdown.`st.markdown("Hello **world**!") `](https://docs.streamlit.io/develop/api-reference/text/st.markdown)[![screenshot](https://docs.streamlit.io/images/api/title.jpg)TitleDisplay text in title formatting.`st.title("The app title") `](https://docs.streamlit.io/develop/api-reference/text/st.title)[![screenshot](https://docs.streamlit.io/images/api/header.jpg)HeaderDisplay text in header formatting.`st.header("This is a header") `](https://docs.streamlit.io/develop/api-reference/text/st.header)[![screenshot](https://docs.streamlit.io/images/api/subheader.jpg)SubheaderDisplay text in subheader formatting.`st.subheader("This is a subheader") `](https://docs.streamlit.io/develop/api-reference/text/st.subheader)
## [](https://docs.streamlit.io/develop/api-reference/text#formatted-text)Formatted text
[![screenshot](https://docs.streamlit.io/images/api/badge.jpg)BadgeDisplay a small, colored badge.`st.badge("New") `](https://docs.streamlit.io/develop/api-reference/text/st.badge)[![screenshot](https://docs.streamlit.io/images/api/caption.jpg)CaptionDisplay text in small font.`st.caption("This is written small caption text") `](https://docs.streamlit.io/develop/api-reference/text/st.caption)[![screenshot](https://docs.streamlit.io/images/api/code.jpg)Code blockDisplay a code block with optional syntax highlighting.`st.code("a = 1234") `](https://docs.streamlit.io/develop/api-reference/text/st.code)[![screenshot](https://docs.streamlit.io/images/api/code.jpg)EchoDisplay some code on the app, then execute it. Useful for tutorials.`with st.echo():  st.write('This code will be printed') `](https://docs.streamlit.io/develop/api-reference/text/st.echo)[![screenshot](https://docs.streamlit.io/images/api/text.jpg)Preformatted textWrite fixed-width and preformatted text.`st.text("Hello world") `](https://docs.streamlit.io/develop/api-reference/text/st.text)[![screenshot](https://docs.streamlit.io/images/api/latex.jpg)LaTeXDisplay mathematical expressions formatted as LaTeX.`st.latex("\int a x^2 \,dx") `](https://docs.streamlit.io/develop/api-reference/text/st.latex)[![screenshot](https://docs.streamlit.io/images/api/divider.jpg)DividerDisplay a horizontal rule.`st.divider() `](https://docs.streamlit.io/develop/api-reference/text/st.divider)
## [](https://docs.streamlit.io/develop/api-reference/text#utilities)Utilities
#### [Get helpDisplay objectâ€™s doc string, nicely formatted.`st.help(st.write) st.help(pd.DataFrame) `](https://docs.streamlit.io/develop/api-reference/text/st.help)#### [Render HTMLRenders HTML strings to your app.`st.html("<p>Foo bar.</p>") `](https://docs.streamlit.io/develop/api-reference/text/st.html)
Third-party components
These are featured components created by our lovely community. For more examples and inspiration, check out our [Components Gallery](https://streamlit.io/components) and [Streamlit Extras](https://extras.streamlit.app)!
  * <-
  * ->