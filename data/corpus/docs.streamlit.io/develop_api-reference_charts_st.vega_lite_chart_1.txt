Title: st.vega_lite_chart Reference
URL: https://docs.streamlit.io/develop/api-reference/charts/st.vega_lite_chart
Summary: This documentation provides a comprehensive reference for the st.vega_lite_chart function in Streamlit, detailing its usage, chart selections, VegaLiteState, adding rows to charts, and theming options.
---

* [Home](https://docs.streamlit.io/)/
  * [Develop](https://docs.streamlit.io/develop)/
  * [API reference](https://docs.streamlit.io/develop/api-reference)/
  * [Chart elements](https://docs.streamlit.io/develop/api-reference/charts)/
  * [st.vega_lite_chart](https://docs.streamlit.io/develop/api-reference/charts/st.vega_lite_chart)


  1. Contents
  2. [st.vega_lite_chart](https://docs.streamlit.io/develop/api-reference/charts/st.vega_lite_chart#stvega_lite_chart)
  3. [Chart selections](https://docs.streamlit.io/develop/api-reference/charts/st.vega_lite_chart#chart-selections)
  4. [VegaLiteState](https://docs.streamlit.io/develop/api-reference/charts/st.vega_lite_chart#vegalitestate)
  5. [element.add_rows](https://docs.streamlit.io/develop/api-reference/charts/st.vega_lite_chart#elementadd_rows)
  6. [Theming](https://docs.streamlit.io/develop/api-reference/charts/st.vega_lite_chart#theming)


## [](https://docs.streamlit.io/develop/api-reference/charts/st.vega_lite_chart#stvega_lite_chart)st.vega_lite_chart
Streamlit VersionVersion 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0Version 1.21.0Version 1.20.0
Display a chart using the Vega-Lite library.
[Vega-Lite](https://vega.github.io/vega-lite/) is a high-level grammar for defining interactive graphics.
Function signature[[source]](https://github.com/streamlit/streamlit/blob/1.44.0/lib/streamlit/elements/vega_charts.py#L1661 "View st.vega_lite_chart source code on GitHub")  
---  
st.vega_lite_chart(data=None, spec=None, *, use_container_width=None, theme="streamlit", key=None, on_select="ignore", selection_mode=None, **kwargs)  
Parameters  
data (Anything supported by st.dataframe) |  Either the data to be plotted or a Vega-Lite spec containing the data (which more closely follows the Vega-Lite API).  
spec (dict or None) |  The Vega-Lite spec for the chart. If `spec` is `None` (default), Streamlit uses the spec passed in `data`. You cannot pass a spec to both `data` and `spec`. See <https://vega.github.io/vega-lite/docs/> for more info.  
use_container_width (bool or None) |  Whether to override the chart's native width with the width of the parent container. This can be one of the following:
  * `None` (default): Streamlit will use the parent container's width for all charts except those with known incompatibility (`altair.Facet`, `altair.HConcatChart`, and `altair.RepeatChart`).
  * `True`: Streamlit sets the width of the chart to match the width of the parent container.
  * `False`: Streamlit sets the width of the chart to fit its contents according to the plotting library, up to the width of the parent container.

  
theme ("streamlit" or None) |  The theme of the chart. If `theme` is `"streamlit"` (default), Streamlit uses its own design default. If `theme` is `None`, Streamlit falls back to the default behavior of the library.  
key (str) |  An optional string to use for giving this element a stable identity. If `key` is `None` (default), this element's identity will be determined based on the values of the other parameters. Additionally, if selections are activated and `key` is provided, Streamlit will register the key in Session State to store the selection state. The selection state is read-only.  
on_select ("ignore", "rerun", or callable) |  How the figure should respond to user selection events. This controls whether or not the figure behaves like an input widget. `on_select` can be one of the following:
  * `"ignore"` (default): Streamlit will not react to any selection events in the chart. The figure will not behave like an input widget.
  * `"rerun"`: Streamlit will rerun the app when the user selects data in the chart. In this case, `st.vega_lite_chart` will return the selection data as a dictionary.
  * A `callable`: Streamlit will rerun the app and execute the `callable` as a callback function before the rest of the app. In this case, `st.vega_lite_chart` will return the selection data as a dictionary.