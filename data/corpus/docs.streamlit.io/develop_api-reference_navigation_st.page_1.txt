Title: st.Page: Configure Navigation in Multipage Apps
URL: https://docs.streamlit.io/develop/api-reference/navigation/st.page
Summary: The `st.Page` function initializes a `StreamlitPage` object for use with `st.navigation` in multipage applications. It allows configuring a page and executes it upon user navigation, with specific rules regarding execution and definition.
---

## [](https://docs.streamlit.io/develop/api-reference/navigation/st.page#stpage)st.Page
Streamlit VersionVersion 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0Version 1.21.0Version 1.20.0
Configure a page for `st.navigation` in a multipage app.
Call `st.Page` to initialize a `StreamlitPage` object, and pass it to `st.navigation` to declare a page in your app.
When a user navigates to a page, `st.navigation` returns the selected `StreamlitPage` object. Call `.run()` on the returned `StreamlitPage` object to execute the page. You can only run the page returned by `st.navigation`, and you can only run it once per app rerun.
A page can be defined by a Python file or `Callable`.
Function signature[[source]](https://github.com/streamlit/streamlit/blob/1.44.0/lib/streamlit/navigation/page.py#L29 "View st.Page source code on GitHub")  
---  
st.Page(page, *, title=None, icon=None, url_path=None, default=False)  
Parameters  
page (str, Path, or callable) |  The page source as a `Callable` or path to a Python file. If the page source is defined by a Python file, the path can be a string or `pathlib.Path` object. Paths can be absolute or relative to the entrypoint file. If the page source is defined by a `Callable`, the `Callable` can't accept arguments.  
title (str or None) |  The title of the page. If this is `None` (default), the page title (in the browser tab) and label (in the navigation menu) will be inferred from the filename or callable name in `page`. For more information, see [Overview of multipage apps](https://docs.streamlit.io/st.page.automatic-page-labels).  
icon (str or None) |  An optional emoji or icon to display next to the page title and label. If `icon` is `None` (default), no icon is displayed next to the page label in the navigation menu, and a Streamlit icon is displayed next to the title (in the browser tab). If `icon` is a string, the following options are valid:
  * 

A single-character emoji. For example, you can set `icon="ðŸš¨"`
    or `icon="ðŸ”¥"`. Emoji short codes are not supported.
  * 

An icon from the Material Symbols library (rounded style) in the
    format `":material/icon_name:"` where "icon_name" is the name of the icon in snake case. For example, `icon=":material/thumb_up:"` will display the Thumb Up icon. Find additional icons in the [Material Symbols](https://fonts.google.com/icons?icon.set=Material+Symbols&icon.style=Rounded) font library.

  
url_path (str or None) |  The page's URL pathname, which is the path relative to the app's root URL. If this is `None` (default), the URL pathname will be inferred from the filename or callable name in `page`. For more information, see [Overview of multipage apps](https://docs.streamlit.io/st.page.automatic-page-urls). The default page will have a pathname of `""`, indicating the root URL of the app. If you set `default=True`, `url_path` is ignored. `url_path` can't include forward slashes; paths can't include subdirectories.  
default (bool) |  Whether this page is the default page to be shown when the app is loaded. If `default` is `False` (default), the page will have a nonempty URL pathname. However, if no default page is passed to `st.navigation` and this is the first page, this page will become the default page. If `default` is `True`, then the page will have an empty pathname and `url_path` will be ignored.  
Returns  
(StreamlitPage) | The page object associated to the given script.  
#### Example
```
import streamlit as st
def page2():
  st.title("Second page")
pg = st.navigation([
  st.Page("page1.py", title="First page", icon="ðŸ”¥"),
  st.Page(page2, title="Second page", icon=":material/favorite:"),
])
pg.run()