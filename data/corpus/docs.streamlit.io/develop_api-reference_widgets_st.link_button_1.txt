Title: Streamlit Documentation Navigation
URL: https://docs.streamlit.io/develop/api-reference/widgets/st.link_button
Summary: This chunk lists various sections and resources available in the Streamlit documentation, including connections, custom components, configuration, app testing, command line, tutorials, quick reference, deployment concepts, Streamlit Community Cloud, and integration with Snowflake and other platforms.
---

e/caching-and-state)
 _add_
      * [ Connections & secrets](https://docs.streamlit.io/develop/api-reference/connections)
 _add_
      * [ Custom components](https://docs.streamlit.io/develop/api-reference/custom-components)
 _add_
      * [ Configuration](https://docs.streamlit.io/develop/api-reference/configuration)
 _add_
      * TOOLS
      * [App testing](https://docs.streamlit.io/develop/api-reference/app-testing)
 _add_
      * [ Command line](https://docs.streamlit.io/develop/api-reference/cli)
 _add_
    * [ Tutorials](https://docs.streamlit.io/develop/tutorials)
 _add_
    * [ Quick reference](https://docs.streamlit.io/develop/quick-reference)
 _add_
  * [ _web_asset_ Deploy](https://docs.streamlit.io/deploy)
    * [Concepts](https://docs.streamlit.io/deploy/concepts)
 _add_
    * [ Streamlit Community Cloud](https://docs.streamlit.io/deploy/streamlit-community-cloud)
 _add_
    * [ Snowflake](https://docs.streamlit.io/deploy/snowflake)
    * [Other platforms](https://docs.streamlit.io/deploy/tutorials)
 _add_
  * [ _school_ Knowledge base](https://docs.streamlit.io/knowledge-base)
    * [FAQ](https://docs.streamlit.io/knowledge-base/using-streamlit)
    * [Installing dependencies](https://docs.streamlit.io/knowledge-base/dependencies)
    * [Deployment issues](https://docs.streamlit.io/knowledge-base/deploy)


  * [Home](https://docs.streamlit.io/)/
  * [Develop](https://docs.streamlit.io/develop)/
  * [API reference](https://docs.streamlit.io/develop/api-reference)/
  * [Input widgets](https://docs.streamlit.io/develop/api-reference/widgets)/
  * [st.link_button](https://docs.streamlit.io/develop/api-reference/widgets/st.link_button)


## [](https://docs.streamlit.io/develop/api-reference/widgets/st.link_button#stlink_button)st.link_button
Streamlit VersionVersion 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0Version 1.21.0Version 1.20.0
Display a link button element.
When clicked, a new tab will be opened to the specified URL. This will create a new session for the user if directed within the app.
Function signature[[source]](https://github.com/streamlit/streamlit/blob/1.44.0/lib/streamlit/elements/widgets/button.py#L545 "View st.link_button source code on GitHub")  
---  
st.link_button(label, url, *, help=None, type="secondary", icon=None, disabled=False, use_container_width=False)  
Parameters  
label (str) |  A short label explaining to the user what this button is for. The label can optionally contain GitHub-flavored Markdown of the following types: Bold, Italics, Strikethroughs, Inline Code, Links, and Images. Images display like icons, with a max height equal to the font height. Unsupported Markdown elements are unwrapped so only their children (text contents) render. Display unsupported elements as literal characters by backslash-escaping them. E.g., `"1\. Not an ordered list"`. See the `body` parameter of [`st.markdown`](https://docs.streamlit.io/develop/api-reference/text/st.markdown) for additional, supported Markdown directives.  
url (str) |  The url to be opened on user click  
help (str or None) |  A tooltip that gets displayed when the button is hovered over. If this is `None` (default), no tooltip is displayed. The tooltip can optionally contain GitHub-flavored Markdown, including the Markdown directives described in the `body` parameter of `st.markdown`.  
type ("primary", "secondary", or "tertiary") |  An optional string that specifies the button type. This can be one of the following:
  * `"primary"`: The button's background is the app's primary color for additional emphasis.
  * `"secondary"` (default): The button's background coordinates with the app's background color for normal emphasis.
  * `"tertiary"`: The button is plain text without a border or background for subtly.

  
icon (str or None) |  An optional emoji or icon to display next to the button label. If `icon` is `None` (default), no icon is displayed. If `icon` is a string, the following options are valid:
  * A single-character emoji. For example, you can set `icon="ðŸš¨"` or `icon="ðŸ”¥"`. Emoji short codes are not supported.
  * An icon from the Material Symbols library (rounded style) in the format `":material/icon_name:"` where "icon_name" is the name of the icon in snake case. For example, `icon=":material/thumb_up:"` will display the Thumb Up icon. Find additional icons in the [Material Symbols ](https://fonts.google.com/icons?icon.set=Material+Symbols&icon.style=Rounded) font library.