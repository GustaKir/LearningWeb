Title: Connecting Streamlit to MySQL
URL: https://docs.streamlit.io/develop/tutorials/databases/mysql
Summary: This guide details the process of securely connecting a remote MySQL database to Streamlit Community Cloud using `st.connection` and Streamlit's Secrets management. It notes that the example code requires Streamlit version 1.28 or higher and provides an option to create a new MySQL database or skip to configuring existing database credentials.
---

# [](https://docs.streamlit.io/develop/tutorials/databases/mysql#connect-streamlit-to-mysql)Connect Streamlit to MySQL
## [](https://docs.streamlit.io/develop/tutorials/databases/mysql#introduction)Introduction
This guide explains how to securely access a **_remote_** MySQL database from Streamlit Community Cloud. It uses [st.connection](https://docs.streamlit.io/develop/api-reference/connections/st.connection) and Streamlit's [Secrets management](https://docs.streamlit.io/develop/concepts/connections/secrets-management). The below example code will **only work on Streamlit version >= 1.28**, when `st.connection` was added.
## [](https://docs.streamlit.io/develop/tutorials/databases/mysql#create-a-mysql-database)Create a MySQL database
_push_pin_
#### Note
If you already have a database that you want to use, feel free to [skip to the next step](https://docs.streamlit.io/develop/tutorials/databases/mysql#add-username-and-password-to-your-local-app-secrets).
First, follow [this tutorial](https://dev.mysql.com/doc/mysql-getting-started/en/) to install MySQL and start the MySQL server (note down the username and password!). Once your MySQL server is up and running, connect to it with the `mysql` client and enter the following commands to create a database and a table with some example values:
`CREATE DATABASE pets; USE pets; CREATE TABLE mytable (   name varchar(80),   pet varchar(80) ); INSERT INTO mytable VALUES ('Mary', 'dog'), ('John', 'cat'), ('Robert', 'bird'); `
## [](https://docs.streamlit.io/develop/tutorials/databases/mysql#add-username-and-password-to-your-local-app-secrets)Add username and password to your local app secrets
Your local Streamlit app will read secrets from a file `.streamlit/secrets.toml` in your app's root directory. Learn more about [Streamlit secrets management here](https://docs.streamlit.io/develop/concepts/connections/secrets-management). Create this file if it doesn't exist yet and add the database name, user, and password of your MySQL server as shown below:
`# .streamlit/secrets.toml [connections.mysql] dialect = "mysql" host = "localhost" port = 3306 database = "xxx" username = "xxx" password = "xxx" query = { charset = "xxx" } `
If you use `query` when defining your connection, you must use `streamlit>=1.35.0`.
_priority_high_
#### Important
When copying your app secrets to Streamlit Community Cloud, be sure to replace the values of **host** , **port** , **database** , **username** , and **password** with those of your _remote_ MySQL database!
Add this file to `.gitignore` and don't commit it to your GitHub repo!
## [](https://docs.streamlit.io/develop/tutorials/databases/mysql#copy-your-app-secrets-to-the-cloud)Copy your app secrets to the cloud
As the `secrets.toml` file above is not committed to GitHub, you need to pass its content to your deployed app (on Streamlit Community Cloud) separately. Go to the [app dashboard](https://share.streamlit.io/) and in the app's dropdown menu, click on **Edit Secrets**. Copy the content of `secrets.toml` into the text area. More information is available at [Secrets management](https://docs.streamlit.io/deploy/streamlit-community-cloud/deploy-your-app/secrets-management).
![Secrets manager screenshot](https://docs.streamlit.io/images/databases/edit-secrets.png)
## [](https://docs.streamlit.io/develop/tutorials/databases/mysql#add-dependencies-to-your-requirements-file)Add dependencies to your requirements file
Add the [mysqlclient](https://github.com/PyMySQL/mysqlclient) and [SQLAlchemy](https://github.com/sqlalchemy/sqlalchemy) packages to your `requirements.txt` file, preferably pinning its version (replace `x.x.x` with the version you want installed):
`# requirements.txt mysqlclient==x.x.x SQLAlchemy==x.x.x `
## [](https://docs.streamlit.io/develop/tutorials/databases/mysql#write-your-streamlit-app)Write your Streamlit app
Copy the code below to your Streamlit app and run it. Make sure to adapt `query` to use the name of your table.
`# streamlit_app.py import streamlit as st # Initialize connection. conn = st.connection('mysql', type='sql') # Perform query. df = conn.query('SELECT * from mytable;', ttl=600) # Print results. for row in df.itertuples():   st.write(f"{row.name} has a :{row.pet}:") `
See `st.connection` above? This handles secrets retrieval, setup, query caching and retries. By default, `query()` results are cached without expiring. In this case, we set `ttl=600` to ensure the query result is cached for no longer than 10 minutes. You can also set `ttl=0` to disable caching. Learn more in [Caching](https://docs.streamlit.io/develop/concepts/architecture/caching).
If everything worked out (and you used the example table we created above), your app should look like this:
![Finished app screenshot](https://docs.streamlit.io/images/databases/streamlit-app.png)[Previous: MongoDB](https://docs.streamlit.io/develop/tutorials/databases/mongodb)[Next: Neon](https://docs.streamlit.io/develop/tutorials/databases/neon) _forum_
###