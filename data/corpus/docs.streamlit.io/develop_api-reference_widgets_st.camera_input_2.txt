Title: st.camera_input: Webcam Input Widget
URL: https://docs.streamlit.io/develop/api-reference/widgets/st.camera_input
Summary: The st.camera_input widget in Streamlit allows users to capture images from their webcam. This widget can be customized with parameters such as label, key, help, and more. It is available in multiple versions of Streamlit.
---

## [](https://docs.streamlit.io/develop/api-reference/widgets/st.camera_input#stcamera_input)st.camera_input
Streamlit VersionVersion 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0Version 1.21.0Version 1.20.0
Display a widget that returns pictures from the user's webcam.
Function signature[[source]](https://github.com/streamlit/streamlit/blob/1.44.0/lib/streamlit/elements/widgets/camera_input.py#L89 "View st.camera_input source code on GitHub")  
---  
st.camera_input(label, key=None, help=None, on_change=None, args=None, kwargs=None, *, disabled=False, label_visibility="visible")  
Parameters  
label (str) |  A short label explaining to the user what this widget is used for. The label can optionally contain GitHub-flavored Markdown of the following types: Bold, Italics, Strikethroughs, Inline Code, Links, and Images. Images display like icons, with a max height equal to the font height. Unsupported Markdown elements are unwrapped so only their children (text contents) render. Display unsupported elements as literal characters by backslash-escaping them. E.g., `"1\. Not an ordered list"`. See the `body` parameter of [`st.markdown`](https://docs.streamlit.io/develop/api-reference/text/st.markdown) for additional, supported Markdown directives. For accessibility reasons, you should never set an empty label, but you can hide it with `label_visibility` if needed. In the future, we may disallow empty labels by raising an exception.  
key (str or int) |  An optional string or integer to use as the unique key for the widget. If this is omitted, a key will be generated for the widget based on its content. No two widgets may have the same key.  
help (str or None) |  A tooltip that gets displayed next to the widget label. Streamlit only displays the tooltip when `label_visibility="visible"`. If this is `None` (default), no tooltip is displayed. The tooltip can optionally contain GitHub-flavored Markdown, including the Markdown directives described in the `body` parameter of `st.markdown`.  
on_change (callable) |  An optional callback invoked when this camera_input's value changes.  
args (tuple) |  An optional tuple of args to pass to the callback.  
kwargs (dict) |  An optional dict of kwargs to pass to the callback.  
disabled (bool) |  An optional boolean that disables the camera input if set to `True`. Default is `False`.  
label_visibility ("visible", "hidden", or "collapsed") |  The visibility of the label. The default is `"visible"`. If this is `"hidden"`, Streamlit displays an empty spacer instead of the label, which can help keep the widget alligned with other widgets. If this is `"collapsed"`, Streamlit displays no label or spacer.  
Returns  
(None or UploadedFile) | The UploadedFile class is a subclass of BytesIO, and therefore is "file-like". This means you can pass an instance of it anywhere a file is expected.  
#### Examples
```
import streamlit as st
enable = st.checkbox("Enable camera")
picture = st.camera_input("Take a picture", disabled=not enable)
if picture:
  st.image(picture)