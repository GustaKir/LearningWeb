Title: Chat Input Widget Examples in Streamlit
URL: https://docs.streamlit.io/develop/api-reference/chat/st.chat_input
Summary: This section provides examples for using the chat input widget inline within various layout containers in Streamlit. It demonstrates how to create chat interfaces that can be embedded alongside other content, as well as how to handle file uploads through the chat input.
---

```

Copy
[Built with Streamlit ðŸŽˆ](https://streamlit.io)
[Fullscreen _open_in_new_](https://doc-chat-input.streamlit.app//?utm_medium=oembed&)
**Example 2: Use the chat input widget inline**
The chat input can also be used inline by nesting it inside any layout container (container, columns, tabs, sidebar, etc) or fragment. Create chat interfaces embedded next to other content, or have multiple chatbots!
```
import streamlit as st
with st.sidebar:
  messages = st.container(height=300)
  if prompt := st.chat_input("Say something"):
    messages.chat_message("user").write(prompt)
    messages.chat_message("assistant").write(f"Echo: {prompt}")
```

Copy
[Built with Streamlit ðŸŽˆ](https://streamlit.io)
[Fullscreen _open_in_new_](https://doc-chat-input-inline.streamlit.app//?utm_medium=oembed&)
**Example 3: Let users upload files**
When you configure your chat input widget to allow file attachments, it will return a dict-like object when the user sends a submission. You can access the user's message through the `text` attribute of this dictionary. You can access a list of the user's submitted file(s) through the `files` attribute. Similar to `st.session_state`, you can use key or attribute notation.
```
import streamlit as st
prompt = st.chat_input(
  "Say something and/or attach an image",
  accept_file=True,
  file_type=["jpg", "jpeg", "png"],
)
if prompt and prompt.text:
  st.markdown(prompt.text)
if prompt and prompt["files"]:
  st.image(prompt["files"][0])
```

Copy
[Built with Streamlit ðŸŽˆ](https://streamlit.io)
[Fullscreen _open_in_new_](https://doc-chat-input-file-uploader.streamlit.app//?utm_medium=oembed&)
For an overview of the `st.chat_input` and `st.chat_message` API, check out this video tutorial by Chanin Nantasenamat ([@dataprofessor](https://www.youtube.com/dataprofessor)), a Senior Developer Advocate at Streamlit.
[Previous: Chat elements](https://docs.streamlit.io/develop/api-reference/chat)[Next: st.chat_message](https://docs.streamlit.io/develop/api-reference/chat/st.chat_message) _forum_
### Still have questions?
Our [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.
[Home](https://docs.streamlit.io/)Contact Us[Community](https://discuss.streamlit.io)[](https://github.com/streamlit "GitHub")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q "YouTube")[](https://twitter.com/streamlit "Twitter")[](https://www.linkedin.com/company/streamlit "LinkedIn")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html "Newsletter")
Â© 2025 Snowflake Inc.Cookie policy
 _forum_ Ask AI