Title: Execution Flow in Streamlit Apps
URL: https://docs.streamlit.io/develop/api-reference/execution-flow
Summary: Streamlit applications execute the entire script by default, but they offer functionality to manage control flow. This includes using modal dialogs that can rerun independently, defining fragments that can also rerun independently at specified intervals, and the option to rerun the script immediately.
---

# [](https://docs.streamlit.io/develop/api-reference/execution-flow#execution-flow)Execution flow
## [](https://docs.streamlit.io/develop/api-reference/execution-flow#change-execution)Change execution
By default, Streamlit apps execute the script entirely, but we allow some functionality to handle control flow in your applications.
[![screenshot](https://docs.streamlit.io/images/api/dialog.jpg)Modal dialogInsert a modal dialog that can rerun independently from the rest of the script.`@st.dialog("Sign up") def email_form():   name = st.text_input("Name")   email = st.text_input("Email") `](https://docs.streamlit.io/develop/api-reference/execution-flow/st.dialog)#### [FragmentsDefine a fragment to rerun independently from the rest of the script.`@st.fragment(run_every="10s") def fragment():   df = get_data()   st.line_chart(df) `](https://docs.streamlit.io/develop/api-reference/execution-flow/st.fragment)#### [Rerun scriptRerun the script immediately.`st.rerun() `](https://docs.streamlit.io/develop/api-reference/execution-flow/st.rerun)#### [Stop executionStops execution immediately.`st.stop() `](https://docs.streamlit.io/develop/api-reference/execution-flow/st.stop)
## [](https://docs.streamlit.io/develop/api-reference/execution-flow#group-multiple-widgets)Group multiple widgets
By default, Streamlit reruns your script everytime a user interacts with your app. However, sometimes it's a better user experience to wait until a group of related widgets is filled before actually rerunning the script. That's what `st.form` is for!
#### [FormsCreate a form that batches elements together with a ‚ÄúSubmit" button.`with st.form(key='my_form'):   name = st.text_input("Name")   email = st.text_input("Email")   st.form_submit_button("Sign up") `](https://docs.streamlit.io/develop/api-reference/execution-flow/st.form)#### [Form submit buttonDisplay a form submit button.`with st.form(key='my_form'):   name = st.text_input("Name")   email = st.text_input("Email")   st.form_submit_button("Sign up") `](https://docs.streamlit.io/develop/api-reference/execution-flow/st.form_submit_button)
Third-party components
These are featured components created by our lovely community. For more examples and inspiration, check out our [Components Gallery](https://streamlit.io/components) and [Streamlit Extras](https://extras.streamlit.app)!
[![screenshot](https://docs.streamlit.io/images/api/components/autorefresh.jpg)AutorefreshForce a refresh without tying up a script. Created by [@kmcgrady](https://github.com/kmcgrady).`from streamlit_autorefresh import st_autorefresh st_autorefresh(interval=2000, limit=100,  key="fizzbuzzcounter") `](https://github.com/kmcgrady/streamlit-autorefresh)
[![screenshot](https://docs.streamlit.io/images/api/components/pydantic.jpg)PydanticAuto-generate Streamlit UI from Pydantic Models and Dataclasses. Created by [@lukasmasuch](https://github.com/lukasmasuch).`import streamlit_pydantic as sp sp.pydantic_form(key="my_form",  model=ExampleModel) `](https://github.com/lukasmasuch/streamlit-pydantic)
[![screenshot](https://docs.streamlit.io/images/api/components/pages.jpg)Streamlit PagesAn experimental version of Streamlit Multi-Page Apps. Created by [@blackary](https://github.com/blackary).`from st_pages import Page, show_pages, add_page_title show_pages([ Page("streamlit_app.py", "Home", "üè†"),  Page("other_pages/page2.py", "Page 2", ":books:"), ]) `](https://github.com/blackary/st_pages)
[Previous: Navigation & pages](https://docs.streamlit.io/develop/api-reference/navigation)[Next: st.dialog](https://docs.streamlit.io/develop/api-reference/execution-flow/st.dialog) _forum_
### Still have questions?
Our [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.
[Home](https://docs.streamlit.io/)Contact Us[Community](https://discuss.streamlit.io)[](https://github.com/streamlit "GitHub")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q "YouTube")[](https://twitter.com/streamlit "Twitter")[](https://www.linkedin.com/company/streamlit "LinkedIn")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html "Newsletter")
¬© 2025 Snowflake Inc.Cookie policy
 _forum_ Ask AI