Title: st.graphviz_chart - Streamlit API Reference
URL: https://docs.streamlit.io/develop/api-reference/charts/st.graphviz_chart
Summary: The st.graphviz_chart function in Streamlit allows users to display graphs using the dagre-d3 library. It is part of the API reference for various versions of Streamlit.
---

* [Home](https://docs.streamlit.io/)/
  * [Develop](https://docs.streamlit.io/develop)/
  * [API reference](https://docs.streamlit.io/develop/api-reference)/
  * [Chart elements](https://docs.streamlit.io/develop/api-reference/charts)/
  * [st.graphviz_chart](https://docs.streamlit.io/develop/api-reference/charts/st.graphviz_chart)


## [](https://docs.streamlit.io/develop/api-reference/charts/st.graphviz_chart#stgraphviz_chart)st.graphviz_chart
Streamlit VersionVersion 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0Version 1.21.0Version 1.20.0
Display a graph using the dagre-d3 library.
Function signature[[source]](https://github.com/streamlit/streamlit/blob/1.44.0/lib/streamlit/elements/graphviz_chart.py#L40 "View st.graphviz_chart source code on GitHub")  
---  
st.graphviz_chart(figure_or_dot, use_container_width=False)  
Parameters  
figure_or_dot (graphviz.dot.Graph, graphviz.dot.Digraph, graphviz.sources.Source, str) |  The Graphlib graph object or dot string to display  
use_container_width (bool) |  Whether to override the figure's native width with the width of the parent container. If `use_container_width` is `False` (default), Streamlit sets the width of the chart to fit its contents according to the plotting library, up to the width of the parent container. If `use_container_width` is `True`, Streamlit sets the width of the figure to match the width of the parent container.  
#### Example
```
import streamlit as st
import graphviz
# Create a graphlib graph object
graph = graphviz.Digraph()
graph.edge("run", "intr")
graph.edge("intr", "runbl")
graph.edge("runbl", "run")
graph.edge("run", "kernel")
graph.edge("kernel", "zombie")
graph.edge("kernel", "sleep")
graph.edge("kernel", "runmem")
graph.edge("sleep", "swap")
graph.edge("swap", "runswap")
graph.edge("runswap", "new")
graph.edge("runswap", "runmem")
graph.edge("new", "runmem")
graph.edge("sleep", "runmem")
st.graphviz_chart(graph)
```

Copy
Or you can render the chart from the graph using GraphViz's Dot language:
```
st.graphviz_chart('''
  digraph {
    run -> intr
    intr -> runbl
    runbl -> run
    run -> kernel
    kernel -> zombie
    kernel -> sleep
    kernel -> runmem
    sleep -> swap
    swap -> runswap
    runswap -> new
    runswap -> runmem
    new -> runmem
    sleep -> runmem
  }
''')
```

Copy
[Built with Streamlit ðŸŽˆ](https://streamlit.io)
[Fullscreen _open_in_new_](https://doc-graphviz-chart.streamlit.app//?utm_medium=oembed&)
[ Previous: st.bokeh_chart](https://docs.streamlit.io/develop/api-reference/charts/st.bokeh_chart)[Next: st.plotly_chart](https://docs.streamlit.io/develop/api-reference/charts/st.plotly_chart) _forum_
### Still have questions?
Our [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.
[Home](https://docs.streamlit.io/)Contact Us[Community](https://discuss.streamlit.io)[](https://github.com/streamlit "GitHub")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q "YouTube")[](https://twitter.com/streamlit "Twitter")[](https://www.linkedin.com/company/streamlit "LinkedIn")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html "Newsletter")
Â© 2025 Snowflake Inc.Cookie policy
 _forum_ Ask AI