Title: st.scatter_chart - Streamlit API Reference
URL: https://docs.streamlit.io/develop/api-reference/charts/st.scatter_chart
Summary: This document provides details on the `st.scatter_chart` function in Streamlit, including its usage and compatibility across various versions (1.25.0 to 1.44.0). It is part of the chart elements within the Streamlit API reference.
---

* [Home](https://docs.streamlit.io/)/
  * [Develop](https://docs.streamlit.io/develop)/
  * [API reference](https://docs.streamlit.io/develop/api-reference)/
  * [Chart elements](https://docs.streamlit.io/develop/api-reference/charts)/
  * [st.scatter_chart](https://docs.streamlit.io/develop/api-reference/charts/st.scatter_chart)


  1. Contents
  2. [st.scatter_chart](https://docs.streamlit.io/develop/api-reference/charts/st.scatter_chart#stscatter_chart)
  3. [element.add_rows](https://docs.streamlit.io/develop/api-reference/charts/st.scatter_chart#elementadd_rows)


## [](https://docs.streamlit.io/develop/api-reference/charts/st.scatter_chart#stscatter_chart)st.scatter_chart
Streamlit VersionVersion 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0Version 1.21.0Version 1.20.0
Display a scatterplot chart.
This is syntax-sugar around `st.altair_chart`. The main difference is this command uses the data's own column and indices to figure out the chart's Altair spec. As a result this is easier to use for many "just plot this" scenarios, while being less customizable.
If `st.scatter_chart` does not guess the data specification correctly, try specifying your desired chart using `st.altair_chart`.
Function signature[[source]](https://github.com/streamlit/streamlit/blob/1.44.0/lib/streamlit/elements/vega_charts.py#L1263 "View st.scatter_chart source code on GitHub")  
---  
st.scatter_chart(data=None, *, x=None, y=None, x_label=None, y_label=None, color=None, size=None, width=None, height=None, use_container_width=True)  
Parameters  
data (Anything supported by st.dataframe) |  Data to be plotted.  
x (str or None) |  Column name or key associated to the x-axis data. If `x` is `None` (default), Streamlit uses the data index for the x-axis values.  
y (str, Sequence of str, or None) |  Column name(s) or key(s) associated to the y-axis data. If this is `None` (default), Streamlit draws the data of all remaining columns as data series. If this is a `Sequence` of strings, Streamlit draws several series on the same chart by melting your wide-format table into a long-format table behind the scenes.  
x_label (str or None) |  The label for the x-axis. If this is `None` (default), Streamlit will use the column name specified in `x` if available, or else no label will be displayed.  
y_label (str or None) |  The label for the y-axis. If this is `None` (default), Streamlit will use the column name(s) specified in `y` if available, or else no label will be displayed.  
color (str, tuple, Sequence of str, Sequence of tuple, or None) |  The color of the circles representing each datapoint. This can be:
  * None, to use the default color.
  * A hex string like "#ffaa00" or "#ffaa0088".
  * An RGB or RGBA tuple with the red, green, blue, and alpha components specified as ints from 0 to 255 or floats from 0.0 to 1.0.
  * The name of a column in the dataset where the color of that datapoint will come from. If the values in this column are in one of the color formats above (hex string or color tuple), then that color will be used. Otherwise, the color will be automatically picked from the default palette. For example: if the dataset has 1000 rows, but this column only contains the values "adult", "child", and "baby", then those 1000 datapoints be shown using three colors from the default palette. But if this column only contains floats or ints, then those 1000 datapoints will be shown using a colors from a continuous color gradient. Finally, if this column only contains the values "#ffaa00", "#f0f", "#0000ff", then then each of those 1000 datapoints will be assigned "#ffaa00", "#f0f", or "#0000ff" as appropriate.

If the dataframe is in wide format (that is, y is a Sequence of columns), this can also be:
  * A list of string colors or color tuples to be used for each of the series in the chart. This list should have the same length as the number of y values (e.g. `color=["#fd0", "#f0f", "#04f"]` for three series).

  
size (str, float, int, or None) |  The size of the circles representing each point. This can be:
  * A number like 100, to specify a single size to use for all datapoints.
  * The name of the column to use for the size. This allows each datapoint to be represented by a circle of a different size.