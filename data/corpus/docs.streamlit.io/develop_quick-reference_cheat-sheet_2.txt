Title: Streamlit API Cheat Sheet
URL: https://docs.streamlit.io/develop/quick-reference/cheat-sheet
Summary: This cheat sheet provides a quick reference for the latest version of Streamlit (v1.44.0), including installation commands, import conventions, pre-release features, and command line commands for various functionalities like caching and running apps.
---

# [](https://docs.streamlit.io/develop/quick-reference/cheat-sheet#streamlit-api-cheat-sheet)Streamlit API cheat sheet
This is a summary of the docs for the latest version of Streamlit, [v1.44.0](https://pypi.org/project/streamlit/1.44.0/).
#### [](https://docs.streamlit.io/develop/quick-reference/cheat-sheet#install--import)Install & Import
`pip install streamlit streamlit run first_app.py # Import convention >>> import streamlit as st `
#### [](https://docs.streamlit.io/develop/quick-reference/cheat-sheet#pre-release-features)Pre-release features
`pip uninstall streamlit pip install streamlit-nightly --upgrade `
Learn more about [experimental features](https://docs.streamlit.io/advanced-features/prerelease#experimental-features)
#### [](https://docs.streamlit.io/develop/quick-reference/cheat-sheet#command-line)Command line
`streamlit cache clear streamlit config show streamlit docs streamlit hello streamlit help streamlit init streamlit run streamlit_app.py streamlit version `
#### [](https://docs.streamlit.io/develop/quick-reference/cheat-sheet#magic-commands)Magic commands
`# Magic commands implicitly # call st.write(). "_This_ is some **Markdown**" my_variable "dataframe:", my_data_frame `
#### [](https://docs.streamlit.io/develop/quick-reference/cheat-sheet#display-text)Display text
`st.write("Most objects") # df, err, func, keras! st.write(["st", "is <", 3]) st.write_stream(my_generator) st.write_stream(my_llm_stream) st.text("Fixed width text") st.markdown("_Markdown_") st.latex(r""" e^{i\pi} + 1 = 0 """) st.title("My title") st.header("My header") st.subheader("My sub") st.code("for i in range(8): foo()") st.badge("New") st.html("<p>Hi!</p>") `
#### [](https://docs.streamlit.io/develop/quick-reference/cheat-sheet#display-data)Display data
`st.dataframe(my_dataframe) st.table(data.iloc[0:10]) st.json({"foo":"bar","fu":"ba"}) st.metric("My metric", 42, 2) `
#### [](https://docs.streamlit.io/develop/quick-reference/cheat-sheet#display-media)Display media
`st.image("./header.png") st.audio(data) st.video(data) st.video(data, subtitles="./subs.vtt") st.logo("logo.jpg") `
#### [](https://docs.streamlit.io/develop/quick-reference/cheat-sheet#display-charts)Display charts
`st.area_chart(df) st.bar_chart(df) st.bar_chart(df, horizontal=True) st.line_chart(df) st.map(df) st.scatter_chart(df) st.altair_chart(chart) st.bokeh_chart(fig) st.graphviz_chart(fig) st.plotly_chart(fig) st.pydeck_chart(chart) st.pyplot(fig) st.vega_lite_chart(df, spec) # Work with user selections event = st.plotly_chart(   df,   on_select="rerun" ) event = st.altair_chart(   chart,   on_select="rerun" ) event = st.vega_lite_chart(   df,   spec,   on_select="rerun" ) `
To use newer versions of Bokeh, see our custom component [`streamlit-bokeh`](https://github.com/streamlit/streamlit-bokeh).
#### [](https://docs.streamlit.io/develop/quick-reference/cheat-sheet#add-elements-to-sidebar)Add elements to sidebar
`# Just add it after st.sidebar: a = st.sidebar.radio("Select one:", [1, 2]) # Or use "with" notation: with st.sidebar:   st.radio("Select one:", [1, 2]) `
#### [](https://docs.streamlit.io/develop/quick-reference/cheat-sheet#columns)Columns
`# Two equal columns: col1, col2 = st.columns(2) col1.write("This is column 1") col2.write("This is column 2") # Three different columns: col1, col2, col3 = st.columns([3, 1, 1]) # col1 is larger. # Bottom-aligned columns col1, col2 = st.columns(2, vertical_alignment="bottom") # You can also use "with" notation: with col1:   st.radio("Select one:", [1, 2]) `
#### [](https://docs.streamlit.io/develop/quick-reference/cheat-sheet#tabs)Tabs
`# Insert containers separated into tabs: tab1, tab2 = st.tabs(["Tab 1", "Tab2"]) tab1.write("this is tab 1") tab2.write("this is tab 2") # You can also use "with" notation: with tab1:   st.radio("Select one:", [1, 2]) `
#### [](https://docs.streamlit.io/develop/quick-reference/cheat-sheet#expandable-containers)Expandable containers
`expand = st.expander("My label", icon=":material/info:") expand.write("Inside the expander.") pop = st.popover("Button label") pop.checkbox("Show all") # You can also use "with" notation: with expand:   st.radio("Select one:", [1, 2]) `
#### [](https://docs.streamlit.io/develop/quick-reference/cheat-sheet#control-flow)Control flow
`# Stop execution immediately: st.stop() # Rerun script immediately: st.rerun() # Navigate to another page: st.switch_page("pages/my_page.py") # Define a navigation widget in your entrypoint file pg = st.navigation(   st.Page("page1.py", title="Home", url_path="home", default=True)   st.Page("page2.py", title="Preferences", url_path="settings") ) pg.run() # Group multiple widgets: with st.form(key="my_form"):   username = st.text_input("Username")   password = st.text_input("Password")   st.form_submit_button("Login") # Define a dialog function @st.dialog("Welcome!") def modal_dialog():   st.write("Hello") modal_dialog() # Define a fragment @st.fragment def fragment_function():   df = get_data()   st.line_