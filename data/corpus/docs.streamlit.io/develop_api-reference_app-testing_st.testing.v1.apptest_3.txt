Title: Introduction to AppTest in Streamlit
URL: https://docs.streamlit.io/develop/api-reference/app-testing/st.testing.v1.apptest
Summary: The `AppTest` feature allows developers to test Streamlit applications without significant refactoring, requiring explicit calls to `AppTest.run()` to update widget values and switch pages. It supports quick tests with low overhead but only for single-page applications, necessitating separate testing for multipage apps.
---

Once initialized, Session State and widget values can be updated and the script can be run. Unlike an actual live-running Streamlit app, you need to call `AppTest.run()` explicitly to re-run the app after changing a widget value. Switching pages also requires an explicit, follow-up call to `AppTest.run()`.
`AppTest` enables developers to build tests on their app as-is, in the familiar python test format, without major refactoring or abstracting out logic to be tested separately from the UI. Tests can run quickly with very low overhead. A typical pattern is to build a suite of tests for an app that ensure consistent functionality as the app evolves, and run the tests locally and/or in a CI environment like Github Actions.
Note
`AppTest` only supports testing a single page of an app per instance. For multipage apps, each page will need to be tested separately. `AppTest` is not yet compatible with multipage apps using `st.navigation` and `st.Page`.
Class description[[source]](https://github.com/streamlit/streamlit/blob/1.44.0/lib/streamlit/testing/v1/app_test.py#L98 "View st.AppTest source code on GitHub")  
---  
st.testing.v1.AppTest(script_path, *, default_timeout, args=None, kwargs=None)  
Methods  
[get](https://docs.streamlit.io/develop/api-reference/app-testing/st.testing.v1.apptest#apptestget)(element_type) |  Get elements or widgets of the specified type.  
[run](https://docs.streamlit.io/develop/api-reference/app-testing/st.testing.v1.apptest#apptestrun)(*, timeout=None) |  Run the script from the current state.  
[switch_page](https://docs.streamlit.io/develop/api-reference/app-testing/st.testing.v1.apptest#apptestswitch_page)(page_path) |  Switch to another page of the app.  
Attributes  
secrets (dict[str, Any]) |  Dictionary of secrets to be used the simulated app. Use dict-like syntax to set secret values for the simulated app.  
session_state (SafeSessionState) |  Session State for the simulated app. SafeSessionState object supports read and write operations as usual for Streamlit apps.  
query_params (dict[str, Any]) |  Dictionary of query parameters to be used by the simluated app. Use dict-like syntax to set `query_params` values for the simulated app.  
[button ](https://docs.streamlit.io/develop/api-reference/app-testing/st.testing.v1.apptest#apptestbutton) |  Sequence of all `st.button` and `st.form_submit_button` widgets.  
[button_group ](https://docs.streamlit.io/develop/api-reference/app-testing/st.testing.v1.apptest#apptestbutton_group) |  Sequence of all `st.feedback` widgets.  
[caption ](https://docs.streamlit.io/develop/api-reference/app-testing/st.testing.v1.apptest#apptestcaption) |  Sequence of all `st.caption` elements.  
[chat_input ](https://docs.streamlit.io/develop/api-reference/app-testing/st.testing.v1.apptest#apptestchat_input) |  Sequence of all `st.chat_input` widgets.  
[chat_message ](https://docs.streamlit.io/develop/api-reference/app-testing/st.testing.v1.apptest#apptestchat_message) |  Sequence of all `st.chat_message` elements.  
[checkbox ](https://docs.streamlit.io/develop/api-reference/app-testing/st.testing.v1.apptest#apptestcheckbox) |  Sequence of all `st.checkbox` widgets.  
[code ](https://docs.streamlit.io/develop/api-reference/app-testing/st.testing.v1.apptest#apptestcode) |  Sequence of all `st.code` elements.  
[color_picker ](https://docs.streamlit.io/develop/api-reference/app-testing/st.testing.v1.apptest#apptestcolor_picker) |  Sequence of all `st.color_picker` widgets.  
[columns ](https://docs.streamlit.io/develop/api-reference/app-testing/st.testing.v1.apptest#apptestcolumns) |  Sequence of all columns within `st.columns` elements.  
[dataframe ](https://docs.streamlit.io/develop/api-reference/app-testing/st.testing.v1.apptest#apptestdataframe) |  Sequence of all `st.dataframe` elements.  
[date_input ](https://docs.streamlit.io/develop/api-reference/app-testing/st.testing.v1.apptest#apptestdate_input) |  Sequence of all `st.date_input` widgets.  
[divider ](https://docs.streamlit.io/develop/api-reference/app-testing/st.testing.v1.apptest#apptestdivider) |  Sequence of all `st.divider` elements.  
[error ](https://docs.streamlit.io/develop/api-reference/app-testing/st.testing.v1.apptest#apptesterror) |  Sequence of all `st.error` elements.  
[exception ](https://docs.streamlit.io/develop/api-reference/app-testing/st.testing.v1.apptest#apptestexception) |  Sequence of all `st.exception` elements.  
[expander ](https://docs.streamlit.io/develop/api-reference/app-testing/st.testing.v1.apptest#apptestexpander) |  Sequence of all `st.expander` elements.  
[header ](https://docs.streamlit.io/develop/api-reference/app-testing/st.testing.v1.apptest#apptestheader) |  Sequence of all `st.header` elements.  
[info ](https://docs.streamlit.io/develop/api-reference/app-testing/st.testing.v1.apptest#apptestinfo) |  Sequence of all `st.info` elements.  
[json ](https://docs.streamlit.io/develop/api-reference/app-testing/st.testing.v1.apptest#apptestjson) |