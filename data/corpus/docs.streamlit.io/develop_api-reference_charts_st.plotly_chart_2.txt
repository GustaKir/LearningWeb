Title: Streamlit Plotly Chart API
URL: https://docs.streamlit.io/develop/api-reference/charts/st.plotly_chart
Summary: This documentation provides details about the Streamlit `st.plotly_chart` function, which allows the integration of Plotly charts into Streamlit apps. By default, all selection modes are enabled, and the function accepts any argument supported by Plotly's `plot()` function. It returns a chart element or a dictionary-like object based on the specified `on_select` behavior. An example demonstrates how to create a distribution plot using random data with Plotly.
---

All selections modes are activated by default.  
**kwargs (null) |  Any argument accepted by Plotly's `plot()` function.  
Returns  
(element or dict) | If `on_select` is `"ignore"` (default), this command returns an internal placeholder for the chart element. Otherwise, this command returns a dictionary-like object that supports both key and attribute notation. The attributes are described by the `PlotlyState` dictionary schema.  
#### Example
The example below comes straight from the examples at <https://plot.ly/python>. Note that `plotly.figure_factory` requires `scipy` to run.
```
import streamlit as st
import numpy as np
import plotly.figure_factory as ff
# Add histogram data
x1 = np.random.randn(200) - 2
x2 = np.random.randn(200)
x3 = np.random.randn(200) + 2
# Group data together
hist_data = [x1, x2, x3]
group_labels = ['Group 1', 'Group 2', 'Group 3']
# Create distplot with custom bin_size
fig = ff.create_distplot(
    hist_data, group_labels, bin_size=[.1, .25, .5])
# Plot!
st.plotly_chart(fig)
```

Copy
[Built with Streamlit ðŸŽˆ](https://streamlit.io)
[Fullscreen _open_in_new_](https://doc-plotly-chart.streamlit.app//?utm_medium=oembed&)
## [](https://docs.streamlit.io/develop/api-reference/charts/st.plotly_chart#chart-selections)Chart selections
### [](https://docs.streamlit.io/develop/api-reference/charts/st.plotly_chart#plotlystate)PlotlyState
Streamlit VersionVersion 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0Version 1.21.0Version 1.20.0
The schema for the Plotly chart event state.
The event state is stored in a dictionary-like object that supports both key and attribute notation. Event states cannot be programmatically changed or set through Session State.
Only selection events are supported at this time.
Attributes  
---  
selection (dict) |  The state of the `on_select` event. This attribute returns a dictionary-like object that supports both key and attribute notation. The attributes are described by the `PlotlySelectionState` dictionary schema.  
#### Example
Try selecting points by any of the three available methods (direct click, box, or lasso). The current selection state is available through Session State or as the output of the chart function.
```
import streamlit as st
import plotly.express as px
df = px.data.iris() # iris is a pandas DataFrame
fig = px.scatter(df, x="sepal_width", y="sepal_length")
event = st.plotly_chart(fig, key="iris", on_select="rerun")
event
```

Copy
[Built with Streamlit ðŸŽˆ](https://streamlit.io)
[Fullscreen _open_in_new_](https://doc-chart-events-plotly-state.streamlit.app//?utm_medium=oembed&)
### [](https://docs.streamlit.io/develop/api-reference/charts/st.plotly_chart#plotlyselectionstate)PlotlySelectionState
Streamlit VersionVersion 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0Version 1.21.0Version 1.20.0
The schema for the Plotly chart selection state.
The selection state is stored in a dictionary-like object that supports both key and attribute notation. Selection states cannot be programmatically changed or set through Session State.
Attributes  
---  
points (list[dict[str, Any]]) |  The selected data points in the chart, including the data points selected by the box and lasso mode. The data includes the values associated to each point and a point index used to populate `point_indices`. If additional information has been assigned to your points, such as size or legend group, this is also included.  
point_indices (list[int]) |  The numerical indices of all selected data points in the chart. The details of each identified point are included in `points`.  
box (list[dict[str, Any]]) |  The metadata related to the box selection. This includes the coordinates of the selected area.  
lasso (list[dict[str, Any]]) |  The metadata related to the lasso selection. This includes the coordinates of the selected area.  
#### Example
When working with more complicated graphs, the `points` attribute displays additional information. Try selecting points in the following example:
```
import streamlit as st
import plotly.express as px
df = px.data.iris()
fig = px.scatter(
  df,
  x="sepal_width",
  y="sepal_length",
  color="species",
  size="petal_length",
  hover_data=["petal_width"],
)
event = st.plotly_chart(fig, key="iris", on_select="rerun")
event.selection