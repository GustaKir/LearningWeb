Title: st.echo - Streamlit API Reference
URL: https://docs.streamlit.io/develop/api-reference/text/st.echo
Summary: The st.echo function in Streamlit allows users to display code within a context manager. It is useful for showcasing code snippets in the application. The documentation includes versioning information from 1.20.0 to 1.44.0.
---

* [Home](https://docs.streamlit.io/)/
  * [Develop](https://docs.streamlit.io/develop)/
  * [API reference](https://docs.streamlit.io/develop/api-reference)/
  * [Text elements](https://docs.streamlit.io/develop/api-reference/text)/
  * [st.echo](https://docs.streamlit.io/develop/api-reference/text/st.echo)


  1. Contents
  2. [st.echo](https://docs.streamlit.io/develop/api-reference/text/st.echo#stecho)
  3. [Display code](https://docs.streamlit.io/develop/api-reference/text/st.echo#display-code)


## [](https://docs.streamlit.io/develop/api-reference/text/st.echo#stecho)st.echo
Streamlit VersionVersion 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0Version 1.21.0Version 1.20.0
Use in a with block to draw some code on the app, then execute it.
Function signature[[source]](https://github.com/streamlit/streamlit/blob/1.44.0/lib/streamlit/commands/echo.py#L33 "View st.echo source code on GitHub")  
---  
st.echo(code_location="above")  
Parameters  
code_location ("above" or "below") |  Whether to show the echoed code before or after the results of the executed code block.  
#### Example
```
import streamlit as st
with st.echo():
  st.write('This code will be printed')
```

Copy
### [](https://docs.streamlit.io/develop/api-reference/text/st.echo#display-code)Display code
Sometimes you want your Streamlit app to contain _both_ your usual Streamlit graphic elements _and_ the code that generated those elements. That's where `st.echo()` comes in.
Ok so let's say you have the following file, and you want to make its app a little bit more self-explanatory by making that middle section visible in the Streamlit app:
`import streamlit as st def get_user_name(): return 'John' # ------------------------------------------------ # Want people to see this part of the code... def get_punctuation(): return '!!!' greeting = "Hi there, " user_name = get_user_name() punctuation = get_punctuation() st.write(greeting, user_name, punctuation) # ...up to here # ------------------------------------------------ foo = 'bar' st.write('Done!') `
The file above creates a Streamlit app containing the words "Hi there, `John`", and then "Done!".
Now let's use `st.echo()` to make that middle section of the code visible in the app:
`import streamlit as st def get_user_name(): return 'John' with st.echo(): # Everything inside this block will be both printed to the screen # and executed. def get_punctuation(): return '!!!'   greeting = "Hi there, "   value = get_user_name()   punctuation = get_punctuation()   st.write(greeting, value, punctuation) # And now we're back to _not_ printing to the screen foo = 'bar' st.write('Done!') `
It's _that_ simple!
_push_pin_
#### Note
You can have multiple `st.echo()` blocks in the same file. Use it as often as you wish!
[Previous: st.divider](https://docs.streamlit.io/develop/api-reference/text/st.divider)[Next: st.latex](https://docs.streamlit.io/develop/api-reference/text/st.latex) _forum_
### Still have questions?
Our [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.
[Home](https://docs.streamlit.io/)Contact Us[Community](https://discuss.streamlit.io)[](https://github.com/streamlit "GitHub")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q "YouTube")[](https://twitter.com/streamlit "Twitter")[](https://www.linkedin.com/company/streamlit "LinkedIn")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html "Newsletter")
Â© 2025 Snowflake Inc.Cookie policy
 _forum_ Ask AI