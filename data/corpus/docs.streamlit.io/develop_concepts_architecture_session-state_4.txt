Title: Session State and Unserializable Data in Streamlit
URL: https://docs.streamlit.io/develop/concepts/architecture/session-state
Summary: This section explains the implications of using unserializable data in Streamlit's Session State. It highlights that enabling `runner.enforceSerializableSessionState` invokes the use of the insecure `pickle` module, urging users to only save and load trusted data to avoid security risks associated with malicious pickle data.
---

E.g.,
`import streamlit as st def unserializable_data(): return lambda x: x #ðŸ‘‡ results in an exception when enforceSerializableSessionState is on st.session_state.unserializable = unserializable_data() `
![UnserializableSessionStateError](https://docs.streamlit.io/images/unserializable-session-state-error.png) _priority_high_
#### Warning
When `runner.enforceSerializableSessionState` is set to `true`, Session State implicitly uses the `pickle` module, which is known to be insecure. Ensure all data saved and retrieved from Session State is trusted because it is possible to construct malicious pickle data that will execute arbitrary code during unpickling. Never load data that could have come from an untrusted source in an unsafe mode or that could have been tampered with. **Only load data you trust**.
### [](https://docs.streamlit.io/develop/concepts/architecture/session-state#caveats-and-limitations)Caveats and limitations
Here are some limitations to keep in mind when using Session State:
  * Session State exists for as long as the tab is open and connected to the Streamlit server. As soon as you close the tab, everything stored in Session State is lost.
  * Session State is not persisted. If the Streamlit server crashes, then everything stored in Session State gets wiped
  * For caveats and limitations with the Session State API, please see the [API limitations](https://docs.streamlit.io/develop/api-reference/caching-and-state/st.session_state#caveats-and-limitations).

[Previous: Caching](https://docs.streamlit.io/develop/concepts/architecture/caching)[Next: Forms](https://docs.streamlit.io/develop/concepts/architecture/forms) _forum_
### Still have questions?
Our [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.
[Home](https://docs.streamlit.io/)Contact Us[Community](https://discuss.streamlit.io)[](https://github.com/streamlit "GitHub")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q "YouTube")[](https://twitter.com/streamlit "Twitter")[](https://www.linkedin.com/company/streamlit "LinkedIn")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html "Newsletter")
Â© 2025 Snowflake Inc.Cookie policy
 _forum_ Ask AI