Title: Automating Tests for Streamlit Apps
URL: https://docs.streamlit.io/develop/concepts/app-testing/automate-tests
Summary: This section provides guidance on running Streamlit App Action without smoke tests by setting 'skip-smoke: true'. It emphasizes the importance of linting for code quality and suggests using the 'Ruff' linter for automated linting by configuring 'ruff: true' in the Streamlit App Action. A tip is provided to use 'ruff-pre-commit' hooks for local linting error resolution.
---

If you want to run Streamlit App Action without the smoke tests, you can set `skip-smoke: true`.
### [](https://docs.streamlit.io/develop/concepts/app-testing/automate-tests#linting-your-app-code)Linting your app code
Linting is the automated checking of source code for programmatic and stylistic errors. This is done by using a lint tool (otherwise known as a linter). Linting is important to reduce errors and improve the overall quality of your code, especially for repositories with multiple developers or public repositories.
You can add automated linting with [Ruff](https://docs.astral.sh/ruff/) by passing `ruff: true` to Streamlit App Action.
`- uses: streamlit/streamlit-app-action@v0.0.3  with: app-path: streamlit_app.py   ruff: true `
_star_
#### Tip
You may want to add a pre-commit hook like [ruff-pre-commit](https://github.com/astral-sh/ruff-pre-commit) in your local development environment to fix linting errors before they get to CI.
### [](https://docs.streamlit.io/develop/concepts/app-testing/automate-tests#viewing-results)Viewing results
If tests fail, the CI workflow will fail and you will see the results in GitHub. Console logs are available by clicking into the workflow run [as described here](https://docs.github.com/en/actions/using-workflows/about-workflows#viewing-the-activity-for-a-workflow-run).
![](https://docs.streamlit.io/images/test-results-logs.png)
For higher-level test results, you can use [pytest-results-action](https://github.com/marketplace/actions/pytest-results-actions). You can combine this with Streamlit App Action as follows:
`# ... setup as above ... - uses: streamlit/streamlit-app-action@v0.0.3  with: app-path: streamlit_app.py   # Add pytest-args to output junit xml pytest-args: -v --junit-xml=test-results.xml - if: always()  uses: pmeier/pytest-results-action@v0.6.0  with: path: test-results.xml   summary: true display-options: fEX `
![](https://docs.streamlit.io/images/test-results-summary.png)
## [](https://docs.streamlit.io/develop/concepts/app-testing/automate-tests#writing-your-own-actions)Writing your own actions
The above is just provided as an example. Streamlit App Action is a quick way to get started. Once you learn the basics of your CI tool of choice, it's easy to build and customize your own automated workflows. This is a great way to improve your overall productivity as a developer and the quality of your apps.
## [](https://docs.streamlit.io/develop/concepts/app-testing/automate-tests#working-example)Working example
As a final working example example, take a look at our [`streamlit/llm-examples` Actions](https://github.com/streamlit/llm-examples/actions), defined in [this workflow file](https://github.com/streamlit/llm-examples/blob/main/.github/workflows/app-testing.yml).
[Previous: Beyond the basics](https://docs.streamlit.io/develop/concepts/app-testing/beyond-the-basics)[Next: Example](https://docs.streamlit.io/develop/concepts/app-testing/examples) _forum_
### Still have questions?
Our [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.
[Home](https://docs.streamlit.io/)Contact Us[Community](https://discuss.streamlit.io)[](https://github.com/streamlit "GitHub")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q "YouTube")[](https://twitter.com/streamlit "Twitter")[](https://www.linkedin.com/company/streamlit "LinkedIn")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html "Newsletter")
Â© 2025 Snowflake Inc.Cookie policy
 _forum_ Ask AI