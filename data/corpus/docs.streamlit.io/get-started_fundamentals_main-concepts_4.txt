Title: Streamlit Widgets and Layout
URL: https://docs.streamlit.io/get-started/fundamentals/main-concepts
Summary: This section discusses using Streamlit widgets like selectboxes within a data frame and organizing widgets in a sidebar using `st.sidebar`. It provides a code example for creating a selectbox and mentions the ease of maintaining UI controls while focusing on app content.
---

you want, or pass through an array or data frame column.
Let's use the `df` data frame we created earlier.
`import streamlit as st import pandas as pd df = pd.DataFrame({ 'first column': [1, 2, 3, 4], 'second column': [10, 20, 30, 40] }) option = st.selectbox( 'Which number do you like best?',    df['first column']) 'You selected: ', option `
## [](https://docs.streamlit.io/get-started/fundamentals/main-concepts#layout)Layout
Streamlit makes it easy to organize your widgets in a left panel sidebar with [`st.sidebar`](https://docs.streamlit.io/develop/api-reference/layout/st.sidebar). Each element that's passed to [`st.sidebar`](https://docs.streamlit.io/develop/api-reference/layout/st.sidebar) is pinned to the left, allowing users to focus on the content in your app while still having access to UI controls.
For example, if you want to add a selectbox and a slider to a sidebar, use `st.sidebar.slider` and `st.sidebar.selectbox` instead of `st.slider` and `st.selectbox`:
`import streamlit as st # Add a selectbox to the sidebar: add_selectbox = st.sidebar.selectbox( 'How would you like to be contacted?', ('Email', 'Home phone', 'Mobile phone') ) # Add a slider to the sidebar: add_slider = st.sidebar.slider( 'Select a range of values', 0.0, 100.0, (25.0, 75.0) ) `
Beyond the sidebar, Streamlit offers several other ways to control the layout of your app. [`st.columns`](https://docs.streamlit.io/develop/api-reference/layout/st.columns) lets you place widgets side-by-side, and [`st.expander`](https://docs.streamlit.io/develop/api-reference/layout/st.expander) lets you conserve space by hiding away large content.
`import streamlit as st left_column, right_column = st.columns(2) # You can use a column just like st.sidebar: left_column.button('Press me!') # Or even better, call Streamlit functions inside a "with" block: with right_column:   chosen = st.radio( 'Sorting hat', ("Gryffindor", "Ravenclaw", "Hufflepuff", "Slytherin"))   st.write(f"You are in {chosen} house!") `
_push_pin_
#### Note
`st.echo` and `st.spinner` are not currently supported inside the sidebar or layout options. Rest assured, though, we're currently working on adding support for those too!
### [](https://docs.streamlit.io/get-started/fundamentals/main-concepts#show-progress)Show progress
When adding long running computations to an app, you can use [`st.progress()`](https://docs.streamlit.io/develop/api-reference/status/st.progress) to display status in real time.
First, let's import time. We're going to use the `time.sleep()` method to simulate a long running computation:
`import time `
Now, let's create a progress bar:
`import streamlit as st import time 'Starting a long computation...' # Add a placeholder latest_iteration = st.empty() bar = st.progress(0) for i in range(100): # Update the progress bar with each iteration.  latest_iteration.text(f'Iteration {i+1}')  bar.progress(i + 1)  time.sleep(0.1) '...and now we\'re done!' `
[Previous: Fundamentals](https://docs.streamlit.io/get-started/fundamentals)[Next: Advanced concepts](https://docs.streamlit.io/get-started/fundamentals/advanced-concepts) _forum_
### Still have questions?
Our [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.
[Home](https://docs.streamlit.io/)Contact Us[Community](https://discuss.streamlit.io)[](https://github.com/streamlit "GitHub")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q "YouTube")[](https://twitter.com/streamlit "Twitter")[](https://www.linkedin.com/company/streamlit "LinkedIn")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html "Newsletter")
Â© 2025 Snowflake Inc.Cookie policy
 _forum_ Ask AI