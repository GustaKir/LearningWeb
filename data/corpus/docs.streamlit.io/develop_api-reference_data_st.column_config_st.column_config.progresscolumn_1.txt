Title: Streamlit Column Configuration - ProgressColumn
URL: https://docs.streamlit.io/develop/api-reference/data/st.column_config/st.column_config.progresscolumn
Summary: This documentation section covers the 'ProgressColumn' feature in Streamlit's column configuration. It likely discusses how to implement and utilize progress indicators in a Streamlit application, along with relevant links to customization options, components, and deployment resources.
---

secrets](https://docs.streamlit.io/develop/api-reference/connections)
 _add_
      * [ Custom components](https://docs.streamlit.io/develop/api-reference/custom-components)
 _add_
      * [ Configuration](https://docs.streamlit.io/develop/api-reference/configuration)
 _add_
      * TOOLS
      * [App testing](https://docs.streamlit.io/develop/api-reference/app-testing)
 _add_
      * [ Command line](https://docs.streamlit.io/develop/api-reference/cli)
 _add_
    * [ Tutorials](https://docs.streamlit.io/develop/tutorials)
 _add_
    * [ Quick reference](https://docs.streamlit.io/develop/quick-reference)
 _add_
  * [ _web_asset_ Deploy](https://docs.streamlit.io/deploy)
    * [Concepts](https://docs.streamlit.io/deploy/concepts)
 _add_
    * [ Streamlit Community Cloud](https://docs.streamlit.io/deploy/streamlit-community-cloud)
 _add_
    * [ Snowflake](https://docs.streamlit.io/deploy/snowflake)
    * [Other platforms](https://docs.streamlit.io/deploy/tutorials)
 _add_
  * [ _school_ Knowledge base](https://docs.streamlit.io/knowledge-base)
    * [FAQ](https://docs.streamlit.io/knowledge-base/using-streamlit)
    * [Installing dependencies](https://docs.streamlit.io/knowledge-base/dependencies)
    * [Deployment issues](https://docs.streamlit.io/knowledge-base/deploy)


  * [Home](https://docs.streamlit.io/)/
  * [Develop](https://docs.streamlit.io/develop)/
  * [API reference](https://docs.streamlit.io/develop/api-reference)/
  * [Data elements](https://docs.streamlit.io/develop/api-reference/data)/
  * [st.column_config](https://docs.streamlit.io/develop/api-reference/data/st.column_config)/
  * [Progress column](https://docs.streamlit.io/develop/api-reference/data/st.column_config/st.column_config.progresscolumn)


## [](https://docs.streamlit.io/develop/api-reference/data/st.column_config/st.column_config.progresscolumn#stcolumn_configprogresscolumn)st.column_config.ProgressColumn
Streamlit VersionVersion 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0Version 1.21.0Version 1.20.0
Configure a progress column in `st.dataframe` or `st.data_editor`.
Cells need to contain a number. Progress columns are not editable at the moment. This command needs to be used in the `column_config` parameter of `st.dataframe` or `st.data_editor`.
Function signature[[source]](https://github.com/streamlit/streamlit/blob/1.44.0/lib/streamlit/elements/lib/column_types.py#L1951 "View st.ProgressColumn source code on GitHub")  
---  
st.column_config.ProgressColumn(label=None, *, width=None, help=None, pinned=None, format=None, min_value=None, max_value=None)  
Parameters  
label (str or None) |  The label shown at the top of the column. If this is `None` (default), the column name is used.  
width ("small", "medium", "large", or None) |  The display width of the column. If this is `None` (default), the column will be sized to fit the cell contents. Otherwise, this can be one of the following:
  * `"small"`: 75px wide
  * `"medium"`: 200px wide
  * `"large"`: 400px wide

  
help (str or None) |  A tooltip that gets displayed when hovering over the column label. If this is `None` (default), no tooltip is displayed. The tooltip can optionally contain GitHub-flavored Markdown, including the Markdown directives described in the `body` parameter of `st.markdown`.  
format (str, "plain", "localized", "percent", "dollar", "euro", "accounting", "compact", "scientific", "engineering", or None) |  A format string controlling how the numbers are displayed. This can be one of the following values:
  * `None` (default): Streamlit infers the formatting from the data.
  * `"plain"`: Show the full number without any formatting (e.g. "1234.567").
  * `"localized"`: Show the number in the default locale format (e.g. "1,234.567").
  * `"percent"`: Show the number as a percentage (e.g. "123456.70%").
  * `"dollar"`: Show the number as a dollar amount (e.g. "$1,234.57").
  * `"euro"`: Show the number as a euro amount (e.g. "€1,234.57").
  * `"accounting"`: Show the number in an accounting format (e.g. "1,234.00").
  * `"compact"`: Show the number in a compact format (e.g. "1.2K").
  * `"scientific"`: Show the number in scientific notation (e.g. "1.235E3").
  * `"engineering"`: Show the number in engineering notation (e.g. "1.235E3").
  * printf-style format string: Format the number with a printf specifier, like `"%d"` to show a signed integer (e.g. "1234") or `"%X"` to show an unsigned hexidecimal integer (e.g. "4D2"). You can also add prefixes and suffixes. To show British pounds, use `"£ %.2f"` (e.g. "£ 1234.57"). For more information, see [sprint-js](https://github.com/alexei/sprintf.js?tab=readme-ov-file#format-specification).