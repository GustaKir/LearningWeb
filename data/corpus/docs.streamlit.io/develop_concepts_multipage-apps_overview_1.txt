Title: Overview of Multipage Apps in Streamlit
URL: https://docs.streamlit.io/develop/concepts/multipage-apps/overview
Summary: Streamlit offers two main mechanisms for creating multipage apps: a simple method using a `pages/` directory and a more customizable approach with `st.Page` and `st.navigation`. The latter allows for flexible page definitions and shared elements, enhancing the app's overall structure and navigation.
---

# [](https://docs.streamlit.io/develop/concepts/multipage-apps/overview#overview-of-multipage-apps)Overview of multipage apps
Streamlit provides two built-in mechanisms for creating multipage apps. The simplest method is to use a `pages/` directory. However, the preferred and more customizable method is to use `st.navigation`.
## [](https://docs.streamlit.io/develop/concepts/multipage-apps/overview#stpage-and-stnavigation)`st.Page` and `st.navigation`
If you want maximum flexibility in defining your multipage app, we recommend using `st.Page` and `st.navigation`. With `st.Page` you can declare any Python file or `Callable` as a page in your app. Furthermore, you can define common elements for your pages in your entrypoint file (the file you pass to `streamlit run`). With these methods, your entrypoint file becomes like a picture frame shared by all your pages.
You must include `st.navigation` in your entrypoint file to configure your app's navigation menu. This is also how your entrypoint file serves as the router between your pages.
## [](https://docs.streamlit.io/develop/concepts/multipage-apps/overview#pages-directory)`pages/` directory
If you're looking for a quick and simple solution, just place a `pages/` directory next to your entrypoint file. For every Python file in your `pages/` directory, Streamlit will create an additional page for your app. Streamlit determines the page labels and URLs from the file name and automatically populates a navigation menu at the top of your app's sidebar.
`your_working_directory/ ├── pages/ │  ├── a_page.py │  └── another_page.py └── your_homepage.py `
Streamlit determines the page order in navigation from the filenames. You can use numerical prefixes in the filenames to adjust page order. For more information, see [How pages are sorted in the sidebar](https://docs.streamlit.io/develop/concepts/multipage-apps/pages-directory#how-pages-are-sorted-in-the-sidebar). If you want to customize your navigation menu with this option, you can deactivate the default navigation through [configuration](https://docs.streamlit.io/develop/api-reference/configuration/config.toml) (`client.showSidebarNavigation = false`). Then, you can use `st.page_link` to manually contruct a custom navigation menu. With `st.page_link`, you can change the page label and icon in your navigation menu, but you can't change the URLs of your pages.
## [](https://docs.streamlit.io/develop/concepts/multipage-apps/overview#page-terminology)Page terminology
A page has four identifying pieces as follows:
  * **Page source** : This is a Python file or callable function with the page's source code.
  * **Page label** : This is how the page is identified within the navigation menu. See _looks_one_.
  * **Page title** : This is the content of the HTML `<title>` element and how the page is identified within a browser tab. See _looks_two_.
  * **Page URL pathname** : This is the relative path of the page from the root URL of the app. See _looks_3_.


Additionly, a page can have two icons as follows:
  * **Page favicon** : This is the icon next to your page title within a browser tab. See _looks_4_.
  * **Page icon** : This is the icon next to your page label in the navigation menu. See _looks_5_.


Typically, the page icon and favicon are the same, but it's possible make them different.
![](https://docs.streamlit.io/images/page_parts.jpg)
1. Page label, 2.Page titles, 3. Page URL pathname, 4.Page favicon, 5. Page icon
## [](https://docs.streamlit.io/develop/concepts/multipage-apps/overview#automatic-page-labels-and-urls)Automatic page labels and URLs
If you use `st.Page` without declaring the page title or URL pathname, Streamlit falls back on automatically determining the page label, title, and URL pathname in the same manner as when you use a `pages/` directory with the default navigation menu. This section describes this naming convention which is shared between the two approaches to multipage apps.
### [](https://docs.streamlit.io/develop/concepts/multipage-apps/overview#parts-of-filenames-and-callables)Parts of filenames and callables
Filenames are composed of four different parts as follows (in order):
  1. `number`: A non-negative integer.
  2. `separator`: Any combination of underscore (`"_"`), dash (`"-"`), and space (`" "`).
  3. `identifier`: Everything up to, but not including, `".py"`.
  4. `".py"`