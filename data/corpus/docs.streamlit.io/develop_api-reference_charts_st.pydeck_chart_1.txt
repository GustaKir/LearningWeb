Title: st.pydeck_chart Documentation
URL: https://docs.streamlit.io/develop/api-reference/charts/st.pydeck_chart
Summary: This section provides an overview of the st.pydeck_chart function in Streamlit, detailing its features, related chart selections, and the PydeckState and PydeckSelectionState elements. It is part of the API reference for Streamlit version 1.44.0.
---

* [Home](https://docs.streamlit.io/)/
  * [Develop](https://docs.streamlit.io/develop)/
  * [API reference](https://docs.streamlit.io/develop/api-reference)/
  * [Chart elements](https://docs.streamlit.io/develop/api-reference/charts)/
  * [st.pydeck_chart](https://docs.streamlit.io/develop/api-reference/charts/st.pydeck_chart)


  1. Contents
  2. [st.pydeck_chart](https://docs.streamlit.io/develop/api-reference/charts/st.pydeck_chart#stpydeck_chart)
  3. [Chart selections](https://docs.streamlit.io/develop/api-reference/charts/st.pydeck_chart#chart-selections)
  4. [PydeckState](https://docs.streamlit.io/develop/api-reference/charts/st.pydeck_chart#pydeckstate)
  5. [PydeckSelectionState](https://docs.streamlit.io/develop/api-reference/charts/st.pydeck_chart#pydeckselectionstate)


## [](https://docs.streamlit.io/develop/api-reference/charts/st.pydeck_chart#stpydeck_chart)st.pydeck_chart
Streamlit VersionVersion 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0Version 1.21.0Version 1.20.0
Draw a chart using the PyDeck library.
This supports 3D maps, point clouds, and more! More info about PyDeck at <https://deckgl.readthedocs.io/en/latest/>.
These docs are also quite useful:
  * DeckGL docs: <https://github.com/uber/deck.gl/tree/master/docs>
  * DeckGL JSON docs: <https://github.com/uber/deck.gl/tree/master/modules/json>


When using this command, Mapbox provides the map tiles to render map content. Note that Mapbox is a third-party product and Streamlit accepts no responsibility or liability of any kind for Mapbox or for any content or information made available by Mapbox.
Mapbox requires users to register and provide a token before users can request map tiles. Currently, Streamlit provides this token for you, but this could change at any time. We strongly recommend all users create and use their own personal Mapbox token to avoid any disruptions to their experience. You can do this with the `mapbox.token` config option. The use of Mapbox is governed by Mapbox's Terms of Use.
To get a token for yourself, create an account at <https://mapbox.com>. For more info on how to set config options, see <https://docs.streamlit.io/develop/api-reference/configuration/config.toml>.
Function signature[[source]](https://github.com/streamlit/streamlit/blob/1.44.0/lib/streamlit/elements/deck_gl_json_chart.py#L289 "View st.pydeck_chart source code on GitHub")  
---  
st.pydeck_chart(pydeck_obj=None, *, use_container_width=True, width=None, height=None, selection_mode="single-object", on_select="ignore", key=None)  
Parameters  
pydeck_obj (pydeck.Deck or None) |  Object specifying the PyDeck chart to draw.  
use_container_width (bool) |  Whether to override the figure's native width with the width of the parent container. If `use_container_width` is `True` (default), Streamlit sets the width of the figure to match the width of the parent container. If `use_container_width` is `False`, Streamlit sets the width of the chart to fit its contents according to the plotting library, up to the width of the parent container.  
width (int or None) |  Desired width of the chart expressed in pixels. If `width` is `None` (default), Streamlit sets the width of the chart to fit its contents according to the plotting library, up to the width of the parent container. If `width` is greater than the width of the parent container, Streamlit sets the chart width to match the width of the parent container. To use `width`, you must set `use_container_width=False`.  
height (int or None) |  Desired height of the chart expressed in pixels. If `height` is `None` (default), Streamlit sets the height of the chart to fit its contents according to the plotting library.  
on_select ("ignore" or "rerun" or callable) |  How the figure should respond to user selection events. This controls whether or not the chart behaves like an input widget. `on_select` can be one of the following:
  * `"ignore"` (default): Streamlit will not react to any selection events in the chart. The figure will not behave like an input widget.
  * `"rerun"`: Streamlit will rerun the app when the user selects data in the chart. In this case, `st.pydeck_chart` will return the selection data as a dictionary.
  * A `callable`: Streamlit will rerun the app and execute the callable as a callback function before the rest of the app. In this case, `st.pydeck_chart` will return the selection data as a dictionary.