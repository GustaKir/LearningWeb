Title: Overview of st.data_editor API
URL: https://docs.streamlit.io/develop/api-reference/data/st.data_editor
Summary: The `st.data_editor` API allows users to display a data editor widget for editing dataframes and various data structures in a table-like interface. For additional context on working with dataframes and understanding the editor’s capabilities, refer to the Dataframes documentation.
---

_star_
#### Tip
This page only contains information on the `st.data_editor` API. For an overview of working with dataframes and to learn more about the data editor's capabilities and limitations, read [Dataframes](https://docs.streamlit.io/develop/concepts/design/dataframes).
## [](https://docs.streamlit.io/develop/api-reference/data/st.data_editor#stdata_editor)st.data_editor
Streamlit VersionVersion 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0Version 1.21.0Version 1.20.0
Display a data editor widget.
The data editor widget allows you to edit dataframes and many other data structures in a table-like UI.
Function signature[[source]](https://github.com/streamlit/streamlit/blob/1.44.0/lib/streamlit/elements/widgets/data_editor.py#L580 "View st.data_editor source code on GitHub")  
---  
st.data_editor(data, *, width=None, height=None, use_container_width=None, hide_index=None, column_order=None, column_config=None, num_rows="fixed", disabled=False, key=None, on_change=None, args=None, kwargs=None, row_height=None)  
Parameters  
data (Anything supported by st.dataframe) |  The data to edit in the data editor. Note
  * Styles from `pandas.Styler` will only be applied to non-editable columns.
  * Text and number formatting from `column_config` always takes precedence over text and number formatting from `pandas.Styler`.
  * Mixing data types within a column can make the column uneditable.
  * Additionally, the following data types are not yet supported for editing: `complex`, `list`, `tuple`, `bytes`, `bytearray`, `memoryview`, `dict`, `set`, `frozenset`, `fractions.Fraction`, `pandas.Interval`, and `pandas.Period`.
  * To prevent overflow in JavaScript, columns containing `datetime.timedelta` and `pandas.Timedelta` values will default to uneditable, but this can be changed through column configuration.

  
width (int or None) |  Desired width of the data editor expressed in pixels. If `width` is `None` (default), Streamlit sets the data editor width to fit its contents up to the width of the parent container. If `width` is greater than the width of the parent container, Streamlit sets the data editor width to match the width of the parent container.  
height (int or None) |  Desired height of the data editor expressed in pixels. If `height` is `None` (default), Streamlit sets the height to show at most ten rows. Vertical scrolling within the data editor element is enabled when the height does not accomodate all rows.  
use_container_width (bool) |  Whether to override `width` with the width of the parent container. If this is `True` (default), Streamlit sets the width of the data editor to match the width of the parent container. If this is `False`, Streamlit sets the data editor's width according to `width`.  
hide_index (bool or None) |  Whether to hide the index column(s). If `hide_index` is `None` (default), the visibility of index columns is automatically determined based on the data.  
column_order (Iterable of str or None) |  Specifies the display order of columns. This also affects which columns are visible. For example, `column_order=("col2", "col1")` will display 'col2' first, followed by 'col1', and will hide all other non-index columns. If None (default), the order is inherited from the original data structure.  
column_config (dict or None) |  Configures how columns are displayed, e.g. their title, visibility, type, or format, as well as editing properties such as min/max value or step. This needs to be a dictionary where each key is a column name and the value is one of:
  * `None` to hide the column.
  * A string to set the display label of the column.
  * One of the column types defined under `st.column_config`, e.g. `st.column_config.NumberColumn("Dollar values”, format=”$ %d")` to show a column as dollar amounts. See more info on the available column types and config options [here](https://docs.streamlit.io/develop/api-reference/data/st.column_config).