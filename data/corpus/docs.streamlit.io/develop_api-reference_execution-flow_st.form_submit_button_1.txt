Title: st.form_submit_button
URL: https://docs.streamlit.io/develop/api-reference/execution-flow/st.form_submit_button
Summary: The `st.form_submit_button` function displays a button for submitting form data in Streamlit. Upon clicking, it sends all widget values within the form to the Streamlit server in a batch. Each form must contain at least one submit button, and it cannot be placed outside of a form context.
---

## [](https://docs.streamlit.io/develop/api-reference/execution-flow/st.form_submit_button#stform_submit_button)st.form_submit_button
Streamlit VersionVersion 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0Version 1.21.0Version 1.20.0
Display a form submit button.
When this button is clicked, all widget values inside the form will be sent from the user's browser to your Streamlit server in a batch.
Every form must have at least one `st.form_submit_button`. An `st.form_submit_button` cannot exist outside of a form.
For more information about forms, check out our [docs](https://docs.streamlit.io/develop/concepts/architecture/forms).
Function signature[[source]](https://github.com/streamlit/streamlit/blob/1.44.0/lib/streamlit/elements/form.py#L191 "View st.form_submit_button source code on GitHub")  
---  
st.form_submit_button(label="Submit", help=None, on_click=None, args=None, kwargs=None, *, type="secondary", icon=None, disabled=False, use_container_width=False)  
Parameters  
label (str) |  A short label explaining to the user what this button is for. This defaults to `"Submit"`. The label can optionally contain GitHub-flavored Markdown of the following types: Bold, Italics, Strikethroughs, Inline Code, Links, and Images. Images display like icons, with a max height equal to the font height. Unsupported Markdown elements are unwrapped so only their children (text contents) render. Display unsupported elements as literal characters by backslash-escaping them. E.g., `"1\. Not an ordered list"`. See the `body` parameter of [`st.markdown`](https://docs.streamlit.io/develop/api-reference/text/st.markdown) for additional, supported Markdown directives.  
help (str or None) |  A tooltip that gets displayed when the button is hovered over. If this is `None` (default), no tooltip is displayed. The tooltip can optionally contain GitHub-flavored Markdown, including the Markdown directives described in the `body` parameter of `st.markdown`.  
on_click (callable) |  An optional callback invoked when this button is clicked.  
args (tuple) |  An optional tuple of args to pass to the callback.  
kwargs (dict) |  An optional dict of kwargs to pass to the callback.  
type ("primary", "secondary", or "tertiary") |  An optional string that specifies the button type. This can be one of the following:
  * `"primary"`: The button's background is the app's primary color for additional emphasis.
  * `"secondary"` (default): The button's background coordinates with the app's background color for normal emphasis.
  * `"tertiary"`: The button is plain text without a border or background for subtly.

  
icon (str or None) |  An optional emoji or icon to display next to the button label. If `icon` is `None` (default), no icon is displayed. If `icon` is a string, the following options are valid:
  * A single-character emoji. For example, you can set `icon="ðŸš¨"` or `icon="ðŸ”¥"`. Emoji short codes are not supported.
  * An icon from the Material Symbols library (rounded style) in the format `":material/icon_name:"` where "icon_name" is the name of the icon in snake case. For example, `icon=":material/thumb_up:"` will display the Thumb Up icon. Find additional icons in the [Material Symbols](https://fonts.google.com/icons?icon.set=Material+Symbols&icon.style=Rounded) font library.