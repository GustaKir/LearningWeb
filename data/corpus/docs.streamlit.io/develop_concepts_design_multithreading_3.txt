Title: Using Custom Threads in Streamlit
URL: https://docs.streamlit.io/develop/concepts/design/multithreading
Summary: This section discusses the use of custom threads in Streamlit, emphasizing the necessity of attaching the appropriate `ScriptRunContext` to the thread. It warns that this practice is not officially supported, may change in future versions, and could lead to security vulnerabilities if not managed correctly. An example is provided to illustrate how a custom thread can safely call Streamlit commands.
---

within your custom threads, you must attach the correct `ScriptRunContext` to the thread.
_priority_high_
#### Warning
  * This is not officially supported and may change in a future version of Streamlit.
  * This may not work with all Streamlit commands.
  * Ensure custom threads do not outlive the script thread owning the `ScriptRunContext`. Leaking of `ScriptRunContext` may cause security vulnerabilities, fatal errors, or unexpected behavior.


In the following example, a custom thread with `ScriptRunContext` attached can call `st.write` without a warning.
`import streamlit as st from streamlit.runtime.scriptrunner import add_script_run_ctx, get_script_run_ctx import time from threading import Thread  class WorkerThread(Thread): def __init__(self, delay, target): super().__init__()     self.delay = delay     self.target = target   def run(self): # runs in custom thread, but can call Streamlit APIs     start_time = time.time()     time.sleep(self.delay)     end_time = time.time()     self.target.write(f"start: {start_time}, end: {end_time}")  delays = [5, 4, 3, 2, 1] result_containers = [] for i, delay in enumerate(delays):   st.header(f"Thread {i}")   result_containers.append(st.container()) threads = [   WorkerThread(delay, container) for delay, container in zip(delays, result_containers) ] for thread in threads:   add_script_run_ctx(thread, get_script_run_ctx())   thread.start() for thread in threads:   thread.join() st.button("Rerun") `
[Built with Streamlit ðŸŽˆ](https://streamlit.io)
[Fullscreen _open_in_new_](https://doc-multithreading-expose-context.streamlit.app/?utm_medium=oembed)
[ Previous: Dataframes](https://docs.streamlit.io/develop/concepts/design/dataframes)[Next: Using custom classes](https://docs.streamlit.io/develop/concepts/design/custom-classes) _forum_
### Still have questions?
Our [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.
[Home](https://docs.streamlit.io/)Contact Us[Community](https://discuss.streamlit.io)[](https://github.com/streamlit "GitHub")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q "YouTube")[](https://twitter.com/streamlit "Twitter")[](https://www.linkedin.com/company/streamlit "LinkedIn")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html "Newsletter")
Â© 2025 Snowflake Inc.Cookie policy
 _forum_ Ask AI