Title: Theming in Altair Charts
URL: https://docs.streamlit.io/develop/api-reference/charts/st.altair_chart
Summary: Altair charts in Streamlit use a default theme that aligns with Streamlit's design. This theme can be enabled or disabled using the `theme` argument, allowing for integration with the app or reverting to Altair's native theme. An example illustrates how to implement both themes.
---

```

Copy
## [](https://docs.streamlit.io/develop/api-reference/charts/st.altair_chart#theming)Theming
Altair charts are displayed using the Streamlit theme by default. This theme is sleek, user-friendly, and incorporates Streamlit's color palette. The added benefit is that your charts better integrate with the rest of your app's design.
The Streamlit theme is available from Streamlit 1.16.0 through the `theme="streamlit"` keyword argument. To disable it, and use Altair's native theme, use `theme=None` instead.
Let's look at an example of charts with the Streamlit theme and the native Altair theme:
`import altair as alt from vega_datasets import data source = data.cars() chart = alt.Chart(source).mark_circle().encode(   x='Horsepower',   y='Miles_per_Gallon',   color='Origin', ).interactive() tab1, tab2 = st.tabs(["Streamlit theme (default)", "Altair native theme"]) with tab1: # Use the Streamlit theme. # This is the default. So you can also omit the theme argument.   st.altair_chart(chart, theme="streamlit", use_container_width=True) with tab2: # Use the native Altair theme.   st.altair_chart(chart, theme=None, use_container_width=True) `
Click the tabs in the interactive app below to see the charts with the Streamlit theme enabled and disabled.
[Built with Streamlit ðŸŽˆ](https://streamlit.io)
[Fullscreen _open_in_new_](https://doc-altair-chart.streamlit.app/?utm_medium=oembed)
If you're wondering if your own customizations will still be taken into account, don't worry! You can still make changes to your chart configurations. In other words, although we now enable the Streamlit theme by default, you can overwrite it with custom colors or fonts. For example, if you want a chart line to be green instead of the default red, you can do it!
Here's an example of an Altair chart where manual color passing is done and reflected:
See the code _expand_more_
`import altair as alt import streamlit as st from vega_datasets import data source = data.seattle_weather() scale = alt.Scale(   domain=["sun", "fog", "drizzle", "rain", "snow"], range=["#e7ba52", "#a7a7a7", "#aec7e8", "#1f77b4", "#9467bd"], ) color = alt.Color("weather:N", scale=scale) # We create two selections: # - a brush that is active on the top panel # - a multi-click that is active on the bottom panel brush = alt.selection_interval(encodings=["x"]) click = alt.selection_multi(encodings=["color"]) # Top panel is scatter plot of temperature vs time points = (   alt.Chart() .mark_point() .encode(     alt.X("monthdate(date):T", title="Date"),     alt.Y( "temp_max:Q",       title="Maximum Daily Temperature (C)",       scale=alt.Scale(domain=[-5, 40]), ),     color=alt.condition(brush, color, alt.value("lightgray")),     size=alt.Size("precipitation:Q", scale=alt.Scale(range=[5, 200])), ) .properties(width=550, height=300) .add_selection(brush) .transform_filter(click) ) # Bottom panel is a bar chart of weather type bars = (   alt.Chart() .mark_bar() .encode(     x="count()",     y="weather:N",     color=alt.condition(click, color, alt.value("lightgray")), ) .transform_filter(brush) .properties(     width=550, ) .add_selection(click) ) chart = alt.vconcat(points, bars, data=source, title="Seattle Weather: 2012-2015") tab1, tab2 = st.tabs(["Streamlit theme (default)", "Altair native theme"]) with tab1:   st.altair_chart(chart, theme="streamlit", use_container_width=True) with tab2:   st.altair_chart(chart, theme=None, use_container_width=True) `
Notice how the custom colors are still reflected in the chart, even when the Streamlit theme is enabled ðŸ‘‡
[Built with Streamlit ðŸŽˆ](https://streamlit.io)
[Fullscreen _open_in_new_](https://doc-altair-custom-colors.streamlit.app/?utm_medium=oembed)
For many more examples of Altair charts with and without the Streamlit theme, check out the [altair.streamlit.app](https://altair.streamlit.app).
[Previous: st.scatter_chart](https://docs.streamlit.io/develop/api-reference/charts/st.scatter_chart)[Next: st.bokeh_chart](https://docs.streamlit.io/develop/api-reference/charts/st.bokeh_chart) _forum_
### Still have questions?
Our [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.
[Home](https://docs.streamlit.io/)Contact Us[Community](https://discuss.streamlit.io)[](https://github.com/streamlit "GitHub")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q "YouTube")[](https://twitter.com/streamlit "Twitter")[](https://www.linkedin.com/company/streamlit "LinkedIn")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html "Newsletter")
Â© 2025 Snowflake Inc.Cookie policy
 _forum_ Ask AI