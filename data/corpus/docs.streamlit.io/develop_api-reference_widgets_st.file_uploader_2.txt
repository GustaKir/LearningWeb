Title: Streamlit File Uploader Widget Configuration
URL: https://docs.streamlit.io/develop/api-reference/widgets/st.file_uploader
Summary: This section outlines the configuration options for the Streamlit file uploader widget, including parameters for accepting multiple files, setting a unique key, providing tooltips, and defining callbacks for value changes.
---

accept_multiple_files (bool) |  Whether to accept more than one file in a submission. If this is `False` (default), the user can only submit one file at a time. If this is `True`, the user can upload multiple files at the same time, in which case the return value will be a list of files.  
key (str or int) |  An optional string or integer to use as the unique key for the widget. If this is omitted, a key will be generated for the widget based on its content. No two widgets may have the same key.  
help (str or None) |  A tooltip that gets displayed next to the widget label. Streamlit only displays the tooltip when `label_visibility="visible"`. If this is `None` (default), no tooltip is displayed. The tooltip can optionally contain GitHub-flavored Markdown, including the Markdown directives described in the `body` parameter of `st.markdown`.  
on_change (callable) |  An optional callback invoked when this file_uploader's value changes.  
args (tuple) |  An optional tuple of args to pass to the callback.  
kwargs (dict) |  An optional dict of kwargs to pass to the callback.  
disabled (bool) |  An optional boolean that disables the file uploader if set to `True`. The default is `False`.  
label_visibility ("visible", "hidden", or "collapsed") |  The visibility of the label. The default is `"visible"`. If this is `"hidden"`, Streamlit displays an empty spacer instead of the label, which can help keep the widget alligned with other widgets. If this is `"collapsed"`, Streamlit displays no label or spacer.  
Returns  
(None, UploadedFile, or list of UploadedFile) | 
  * If accept_multiple_files is False, returns either None or an UploadedFile object.
  * If accept_multiple_files is True, returns a list with the uploaded files as UploadedFile objects. If no files were uploaded, returns an empty list.

The UploadedFile class is a subclass of BytesIO, and therefore is "file-like". This means you can pass an instance of it anywhere a file is expected.  
#### Examples
Insert a file uploader that accepts a single file at a time:
```
import streamlit as st
import pandas as pd
from io import StringIO
uploaded_file = st.file_uploader("Choose a file")
if uploaded_file is not None:
  # To read file as bytes:
  bytes_data = uploaded_file.getvalue()
  st.write(bytes_data)
  # To convert to a string based IO:
  stringio = StringIO(uploaded_file.getvalue().decode("utf-8"))
  st.write(stringio)
  # To read file as string:
  string_data = stringio.read()
  st.write(string_data)
  # Can be used wherever a "file-like" object is accepted:
  dataframe = pd.read_csv(uploaded_file)
  st.write(dataframe)
```

Copy
Insert a file uploader that accepts multiple files at a time:
```
import streamlit as st
uploaded_files = st.file_uploader(
  "Choose a CSV file", accept_multiple_files=True
)
for uploaded_file in uploaded_files:
  bytes_data = uploaded_file.read()
  st.write("filename:", uploaded_file.name)
  st.write(bytes_data)
```

Copy
[Built with Streamlit ðŸŽˆ](https://streamlit.io)
[Fullscreen _open_in_new_](https://doc-file-uploader.streamlit.app//?utm_medium=oembed&)
[ Previous: st.data_editor](https://docs.streamlit.io/develop/api-reference/data/st.data_editor)[Next: Media elements](https://docs.streamlit.io/develop/api-reference/media) _forum_
### Still have questions?
Our [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.
[Home](https://docs.streamlit.io/)Contact Us[Community](https://discuss.streamlit.io)[](https://github.com/streamlit "GitHub")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q "YouTube")[](https://twitter.com/streamlit "Twitter")[](https://www.linkedin.com/company/streamlit "LinkedIn")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html "Newsletter")
Â© 2025 Snowflake Inc.Cookie policy
 _forum_ Ask AI