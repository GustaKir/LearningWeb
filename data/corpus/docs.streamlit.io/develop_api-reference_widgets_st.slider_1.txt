Title: Streamlit API Reference Overview
URL: https://docs.streamlit.io/develop/api-reference/widgets/st.slider
Summary: This chunk provides links to various sections of the Streamlit API reference, including widgets, caching, custom components, configuration, app testing, command line, tutorials, quick reference, deployment concepts, and specific platforms like Streamlit Community Cloud and Snowflake.
---

e/caching-and-state)
 _add_
      * [ Connections & secrets](https://docs.streamlit.io/develop/api-reference/connections)
 _add_
      * [ Custom components](https://docs.streamlit.io/develop/api-reference/custom-components)
 _add_
      * [ Configuration](https://docs.streamlit.io/develop/api-reference/configuration)
 _add_
      * TOOLS
      * [App testing](https://docs.streamlit.io/develop/api-reference/app-testing)
 _add_
      * [ Command line](https://docs.streamlit.io/develop/api-reference/cli)
 _add_
    * [ Tutorials](https://docs.streamlit.io/develop/tutorials)
 _add_
    * [ Quick reference](https://docs.streamlit.io/develop/quick-reference)
 _add_
  * [ _web_asset_ Deploy](https://docs.streamlit.io/deploy)
    * [Concepts](https://docs.streamlit.io/deploy/concepts)
 _add_
    * [ Streamlit Community Cloud](https://docs.streamlit.io/deploy/streamlit-community-cloud)
 _add_
    * [ Snowflake](https://docs.streamlit.io/deploy/snowflake)
    * [Other platforms](https://docs.streamlit.io/deploy/tutorials)
 _add_
  * [ _school_ Knowledge base](https://docs.streamlit.io/knowledge-base)
    * [FAQ](https://docs.streamlit.io/knowledge-base/using-streamlit)
    * [Installing dependencies](https://docs.streamlit.io/knowledge-base/dependencies)
    * [Deployment issues](https://docs.streamlit.io/knowledge-base/deploy)


  * [Home](https://docs.streamlit.io/)/
  * [Develop](https://docs.streamlit.io/develop)/
  * [API reference](https://docs.streamlit.io/develop/api-reference)/
  * [Input widgets](https://docs.streamlit.io/develop/api-reference/widgets)/
  * [st.slider](https://docs.streamlit.io/develop/api-reference/widgets/st.slider)


  1. Contents
  2. [st.slider](https://docs.streamlit.io/develop/api-reference/widgets/st.slider#stslider)
  3. [Featured videos](https://docs.streamlit.io/develop/api-reference/widgets/st.slider#featured-videos)


## [](https://docs.streamlit.io/develop/api-reference/widgets/st.slider#stslider)st.slider
Streamlit VersionVersion 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0Version 1.21.0Version 1.20.0
Display a slider widget.
This supports int, float, date, time, and datetime types.
This also allows you to render a range slider by passing a two-element tuple or list as the `value`.
The difference between `st.slider` and `st.select_slider` is that `slider` only accepts numerical or date/time data and takes a range as input, while `select_slider` accepts any datatype and takes an iterable set of options.
Note
Integer values exceeding +/- `(1<<53) - 1` cannot be accurately stored or returned by the widget due to serialization contstraints between the Python server and JavaScript client. You must handle such numbers as floats, leading to a loss in precision.
Function signature[[source]](https://github.com/streamlit/streamlit/blob/1.44.0/lib/streamlit/elements/widgets/slider.py#L339 "View st.slider source code on GitHub")  
---  
st.slider(label, min_value=None, max_value=None, value=None, step=None, format=None, key=None, help=None, on_change=None, args=None, kwargs=None, *, disabled=False, label_visibility="visible")  
Parameters  
label (str) |  A short label explaining to the user what this slider is for. The label can optionally contain GitHub-flavored Markdown of the following types: Bold, Italics, Strikethroughs, Inline Code, Links, and Images. Images display like icons, with a max height equal to the font height. Unsupported Markdown elements are unwrapped so only their children (text contents) render. Display unsupported elements as literal characters by backslash-escaping them. E.g., `"1\. Not an ordered list"`. See the `body` parameter of [`st.markdown`](https://docs.streamlit.io/develop/api-reference/text/st.markdown) for additional, supported Markdown directives. For accessibility reasons, you should never set an empty label, but you can hide it with `label_visibility` if needed. In the future, we may disallow empty labels by raising an exception.  
min_value (a supported type or None) |  The minimum permitted value. If this is `None` (default), the minimum value depends on the type as follows:
  * integer: `0`
  * float: `0.0`
  * date or datetime: `value - timedelta(days=14)`
  * time: `time.min`

  
max_value (a supported type or None) |  The maximum permitted value. If this is `None` (default), the maximum value depends on the type as follows:
  * integer: `100`
  * float: `1.0`
  * date or datetime: `value + timedelta(days=14)`
  * time: `time.max`