Title: Streamlit Button Widget Parameters
URL: https://docs.streamlit.io/develop/api-reference/widgets/st.button
Summary: This section describes parameters for the Streamlit button widget, including optional icon display, button disabling, and width settings. Users can add emojis or icons from the Material Symbols library, disable the button, or expand its width to fill the parent container.
---

icon (str or None) |  An optional emoji or icon to display next to the button label. If `icon` is `None` (default), no icon is displayed. If `icon` is a string, the following options are valid:
  * A single-character emoji. For example, you can set `icon="ðŸš¨"` or `icon="ðŸ”¥"`. Emoji short codes are not supported.
  * An icon from the Material Symbols library (rounded style) in the format `":material/icon_name:"` where "icon_name" is the name of the icon in snake case. For example, `icon=":material/thumb_up:"` will display the Thumb Up icon. Find additional icons in the [Material Symbols ](https://fonts.google.com/icons?icon.set=Material+Symbols&icon.style=Rounded) font library.

  
disabled (bool) |  An optional boolean that disables the button if set to `True`. The default is `False`.  
use_container_width (bool) |  Whether to expand the button's width to fill its parent container. If `use_container_width` is `False` (default), Streamlit sizes the button to fit its contents. If `use_container_width` is `True`, the width of the button matches its parent container. In both cases, if the contents of the button are wider than the parent container, the contents will line wrap.  
Returns  
(bool) | True if the button was clicked on the last run of the app, False otherwise.  
#### Examples
**Example 1: Customize your button type**
```
import streamlit as st
st.button("Reset", type="primary")
if st.button("Say hello"):
  st.write("Why hello there")
else:
  st.write("Goodbye")
if st.button("Aloha", type="tertiary"):
  st.write("Ciao")
```

Copy
[Built with Streamlit ðŸŽˆ](https://streamlit.io)
[Fullscreen _open_in_new_](https://doc-buton.streamlit.app//?utm_medium=oembed&)
**Example 2: Add icons to your button**
Although you can add icons to your buttons through Markdown, the `icon` parameter is a convenient and consistent alternative.
```
import streamlit as st
left, middle, right = st.columns(3)
if left.button("Plain button", use_container_width=True):
  left.markdown("You clicked the plain button.")
if middle.button("Emoji button", icon="ðŸ˜ƒ", use_container_width=True):
  middle.markdown("You clicked the emoji button.")
if right.button("Material button", icon=":material/mood:", use_container_width=True):
  right.markdown("You clicked the Material button.")
```

Copy
[Built with Streamlit ðŸŽˆ](https://streamlit.io)
[Fullscreen _open_in_new_](https://doc-button-icons.streamlit.app//?utm_medium=oembed&)
### [](https://docs.streamlit.io/develop/api-reference/widgets/st.button#advanced-functionality)Advanced functionality
Although a button is the simplest of input widgets, it's very common for buttons to be deeply tied to the use of [`st.session_state`](https://docs.streamlit.io/develop/api-reference/caching-and-state/st.session_state). Check out our advanced guide on [Button behavior and examples](https://docs.streamlit.io/develop/concepts/design/buttons).
### [](https://docs.streamlit.io/develop/api-reference/widgets/st.button#featured-videos)Featured videos
Check out our video on how to use one of Streamlit's core functions, the button!
In the video below, we'll take it a step further and learn how to combine a [button](https://docs.streamlit.io/develop/api-reference/widgets/st.button), [checkbox](https://docs.streamlit.io/develop/api-reference/widgets/st.checkbox) and [radio button](https://docs.streamlit.io/develop/api-reference/widgets/st.radio)!
[Previous: Input widgets](https://docs.streamlit.io/develop/api-reference/widgets)[Next: st.download_button](https://docs.streamlit.io/develop/api-reference/widgets/st.download_button) _forum_
### Still have questions?
Our [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.
[Home](https://docs.streamlit.io/)Contact Us[Community](https://discuss.streamlit.io)[](https://github.com/streamlit "GitHub")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q "YouTube")[](https://twitter.com/streamlit "Twitter")[](https://www.linkedin.com/company/streamlit "LinkedIn")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html "Newsletter")
Â© 2025 Snowflake Inc.Cookie policy
 _forum_ Ask AI