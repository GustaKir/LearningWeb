Title: Invoking Python Subprocess in Streamlit App
URL: https://docs.streamlit.io/knowledge-base/deploy/invoking-python-subprocess-deployed-streamlit-app
Summary: This documentation discusses how to invoke Python subprocesses within a deployed Streamlit app, highlighting relevant guidelines and practices for effective deployment.
---

[![](https://docs.streamlit.io/logo.svg)Documentation](https://docs.streamlit.io/) _search_
Search
Ctrl-K
 _dark_mode_ _light_mode_
Change to dark mode
# Hello there üëã
Thanks for stopping by! We use cookies to help us understand how you interact with our website.
By clicking ‚ÄúAccept all‚Äù, you consent to our use of cookies. For more information, please see our [privacy policy](https://docs.streamlit.io/knowledge-base/deploy/www.streamlit.io/privacy-policy).
Cookie settingsReject allAccept all
  * [ _rocket_launch_ Get started](https://docs.streamlit.io/get-started)
    * [Installation](https://docs.streamlit.io/get-started/installation)
 _add_
    * [ Fundamentals](https://docs.streamlit.io/get-started/fundamentals)
 _add_
    * [ First steps](https://docs.streamlit.io/get-started/tutorials)
 _add_
  * [ _code_ Develop](https://docs.streamlit.io/develop)
    * [Concepts](https://docs.streamlit.io/develop/concepts)
 _add_
    * [ API reference](https://docs.streamlit.io/develop/api-reference)
 _add_
    * [ Tutorials](https://docs.streamlit.io/develop/tutorials)
 _add_
    * [ Quick reference](https://docs.streamlit.io/develop/quick-reference)
 _add_
  * [ _web_asset_ Deploy](https://docs.streamlit.io/deploy)
    * [Concepts](https://docs.streamlit.io/deploy/concepts)
 _add_
    * [ Streamlit Community Cloud](https://docs.streamlit.io/deploy/streamlit-community-cloud)
 _add_
    * [ Snowflake](https://docs.streamlit.io/deploy/snowflake)
    * [Other platforms](https://docs.streamlit.io/deploy/tutorials)
 _add_
  * [ _school_ Knowledge base](https://docs.streamlit.io/knowledge-base)
    * [FAQ](https://docs.streamlit.io/knowledge-base/using-streamlit)
    * [Installing dependencies](https://docs.streamlit.io/knowledge-base/dependencies)
    * [Deployment issues](https://docs.streamlit.io/knowledge-base/deploy)


  * [Home](https://docs.streamlit.io/)/
  * [Knowledge base](https://docs.streamlit.io/knowledge-base)/
  * [Deployment issues](https://docs.streamlit.io/knowledge-base/deploy)/
  * [Invoking a Python subprocess in a deployed Streamlit app](https://docs.streamlit.io/knowledge-base/deploy/invoking-python-subprocess-deployed-streamlit-app)


  1. Contents
  2. [Problem](https://docs.streamlit.io/knowledge-base/deploy/invoking-python-subprocess-deployed-streamlit-app#problem)
  3. [Solution](https://docs.streamlit.io/knowledge-base/deploy/invoking-python-subprocess-deployed-streamlit-app#solution)
  4. [Relevant links](https://docs.streamlit.io/knowledge-base/deploy/invoking-python-subprocess-deployed-streamlit-app#relevant-links)


# [](https://docs.streamlit.io/knowledge-base/deploy/invoking-python-subprocess-deployed-streamlit-app#invoking-a-python-subprocess-in-a-deployed-streamlit-app)Invoking a Python subprocess in a deployed Streamlit app
## [](https://docs.streamlit.io/knowledge-base/deploy/invoking-python-subprocess-deployed-streamlit-app#problem)Problem
Let's suppose you want to invoke a subprocess to run a Python script `script.py` in your deployed Streamlit app `streamlit_app.py`. For example, the machine learning library [Ludwig](https://ludwig-ai.github.io/ludwig-docs/) is run using a command-line interface, or maybe you want to run a bash script or similar type of process from Python.
You have tried the following, but run into dependency issues for `script.py`, even though you have specified your Python dependencies in a requirements file:
`# streamlit_app.py import streamlit as st import subprocess subprocess.run(["python", "script.py"]) `
## [](https://docs.streamlit.io/knowledge-base/deploy/invoking-python-subprocess-deployed-streamlit-app#solution)Solution
When you run the above code block, you will get the version of Python that is on the system path‚Äînot necessarily the Python executable installed in the virtual environment that the Streamlit code is running under.
The solution is to detect the Python executable directly with [`sys.executable`](https://docs.python.org/3/library/sys.html#sys.executable):
`# streamlit_app.py import streamlit as st import subprocess import sys subprocess.run([f"{sys.executable}", "script.py"]) `
This ensures that `script.py` is running under the same Python executable as your Streamlit code‚Äîwhere your [Python dependencies](https://docs.streamlit.io/deploy/streamlit-community-cloud/deploy-your-app/app-dependencies#add-python-dependencies) are installed.
### [](https://docs.streamlit.io/knowledge-base/deploy/invoking-python-subprocess-deployed-streamlit-app#relevant-links)Relevant links
  * <https://stackoverflow.com/questions/69947867/run-portion-of-python-code-in-parallel-from-a-streamlit-app/69948545#69948545>
  * <https://discuss.streamlit.io/t/modulenotfounderror-no-module-named-cv2-streamlit/18319/3?u=snehankekre>
  * <https://docs.python.org/3/library/sys.html#sys.executable>