Title: Animating Elements in Streamlit
URL: https://docs.streamlit.io/develop/concepts/design/animate
Summary: This document discusses the use of `st.empty` containers in Streamlit, which can hold and update a single element by discarding previous content. For multiple elements, a plain container (`st.container()`) can be used within `st.empty`. Additionally, the document explains the `.add_rows()` method, applicable to `st.dataframe`, `st.table`, and chart functions, allowing dynamic updates to their contents.
---

## [](https://docs.streamlit.io/develop/concepts/design/animate#stempty-containers)`st.empty` containers
`st.empty` can hold a single element. When you write any element to an `st.empty` container, Streamlit discards its previous content displays the new element. You can also `st.empty` containers by calling `.empty()` as a method. If you want to update a set of elements, use a plain container (`st.container()`) inside `st.empty` and write contents to the plain container. Rewrite the plain container and its contents as often as desired to update your app's display.
## [](https://docs.streamlit.io/develop/concepts/design/animate#the-add_rows-method)The `.add_rows()` method
`st.dataframe`, `st.table`, and all chart functions can be mutated using the `.add_rows()` method on their output. In the following example, we use `my_data_element = st.line_chart(df)`. You can try the example with `st.table`, `st.dataframe`, and most of the other simple charts by just swapping out `st.line_chart`. Note that `st.dataframe` only shows the first ten rows by default and enables scrolling for additional rows. This means adding rows is not as visually apparent as it is with `st.table` or the chart elements.
`import streamlit as st import pandas as pd import numpy as np import time df = pd.DataFrame(np.random.randn(15, 3), columns=(["A", "B", "C"])) my_data_element = st.line_chart(df) for tick in range(10):   time.sleep(.5)   add_df = pd.DataFrame(np.random.randn(1, 3), columns=(["A", "B", "C"]))   my_data_element.add_rows(add_df) st.button("Regenerate") `
[Previous: App design](https://docs.streamlit.io/develop/concepts/design)[Next: Button behavior and examples](https://docs.streamlit.io/develop/concepts/design/buttons) _forum_
### Still have questions?
Our [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.
[Home](https://docs.streamlit.io/)Contact Us[Community](https://discuss.streamlit.io)[](https://github.com/streamlit "GitHub")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q "YouTube")[](https://twitter.com/streamlit "Twitter")[](https://www.linkedin.com/company/streamlit "LinkedIn")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html "Newsletter")
Â© 2025 Snowflake Inc.Cookie policy
 _forum_ Ask AI