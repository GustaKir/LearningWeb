Title: st.progress: Display a Progress Bar in Streamlit
URL: https://docs.streamlit.io/develop/api-reference/status/st.progress
Summary: The `st.progress` function displays a progress bar with a given value and optional text. The value can be an integer (0-100) or a float (0.0-1.0), and the text can include GitHub-flavored Markdown for enhanced formatting.
---

## [](https://docs.streamlit.io/develop/api-reference/status/st.progress#stprogress)st.progress
Streamlit VersionVersion 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0Version 1.21.0Version 1.20.0
Display a progress bar.
Function signature[[source]](https://github.com/streamlit/streamlit/blob/1.44.0/lib/streamlit/elements/progress.py#L95 "View st.progress source code on GitHub")  
---  
st.progress(value, text=None)  
Parameters  
value (int or float) |  0 <= value <= 100 for int 0.0 <= value <= 1.0 for float  
text (str or None) |  A message to display above the progress bar. The text can optionally contain GitHub-flavored Markdown of the following types: Bold, Italics, Strikethroughs, Inline Code, Links, and Images. Images display like icons, with a max height equal to the font height. Unsupported Markdown elements are unwrapped so only their children (text contents) render. Display unsupported elements as literal characters by backslash-escaping them. E.g., `"1\. Not an ordered list"`. See the `body` parameter of [`st.markdown`](https://docs.streamlit.io/develop/api-reference/text/st.markdown) for additional, supported Markdown directives.  
#### Example
Here is an example of a progress bar increasing over time and disappearing when it reaches completion:
```
import streamlit as st
import time
progress_text = "Operation in progress. Please wait."
my_bar = st.progress(0, text=progress_text)
for percent_complete in range(100):
  time.sleep(0.01)
  my_bar.progress(percent_complete + 1, text=progress_text)
time.sleep(1)
my_bar.empty()
st.button("Rerun")
```

Copy
[Built with Streamlit ðŸŽˆ](https://streamlit.io)
[Fullscreen _open_in_new_](https://doc-status-progress.streamlit.app//?utm_medium=oembed&)
[ Previous: st.exception](https://docs.streamlit.io/develop/api-reference/status/st.exception)[Next: st.spinner](https://docs.streamlit.io/develop/api-reference/status/st.spinner) _forum_
### Still have questions?
Our [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.
[Home](https://docs.streamlit.io/)Contact Us[Community](https://discuss.streamlit.io)[](https://github.com/streamlit "GitHub")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q "YouTube")[](https://twitter.com/streamlit "Twitter")[](https://www.linkedin.com/company/streamlit "LinkedIn")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html "Newsletter")
Â© 2025 Snowflake Inc.Cookie policy
 _forum_ Ask AI