Title: Dataframe Selections in Streamlit
URL: https://docs.streamlit.io/develop/api-reference/data/st.dataframe
Summary: This document section describes the DataframeState schema in Streamlit, detailing the structure of the dataframe event state stored in a dictionary-like object and noting that event states cannot be programmatically altered via Session State. It highlights that only selection events are supported.
---

```

Copy
[Built with Streamlit ðŸŽˆ](https://streamlit.io)
[Fullscreen _open_in_new_](https://doc-dataframe-config-index.streamlit.app//?utm_medium=oembed&)
## [](https://docs.streamlit.io/develop/api-reference/data/st.dataframe#dataframe-selections)Dataframe selections
### [](https://docs.streamlit.io/develop/api-reference/data/st.dataframe#dataframestate)DataframeState
Streamlit VersionVersion 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0Version 1.21.0Version 1.20.0
The schema for the dataframe event state.
The event state is stored in a dictionary-like object that supports both key and attribute notation. Event states cannot be programmatically changed or set through Session State.
Only selection events are supported at this time.
Attributes  
---  
selection (dict) |  The state of the `on_select` event. This attribute returns a dictionary-like object that supports both key and attribute notation. The attributes are described by the `DataframeSelectionState` dictionary schema.  
### [](https://docs.streamlit.io/develop/api-reference/data/st.dataframe#dataframeselectionstate)DataframeSelectionState
Streamlit VersionVersion 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0Version 1.21.0Version 1.20.0
The schema for the dataframe selection state.
The selection state is stored in a dictionary-like object that supports both key and attribute notation. Selection states cannot be programmatically changed or set through Session State.
Warning
If a user sorts a dataframe, row selections will be reset. If your users need to sort and filter the dataframe to make selections, direct them to use the search function in the dataframe toolbar instead.
Attributes  
---  
rows (list[int]) |  The selected rows, identified by their integer position. The integer positions match the original dataframe, even if the user sorts the dataframe in their browser. For a `pandas.DataFrame`, you can retrieve data from its interger position using methods like `.iloc[]` or `.iat[]`.  
columns (list[str]) |  The selected columns, identified by their names.  
#### Example
The following example has multi-row and multi-column selections enabled. Try selecting some rows. To select multiple columns, hold `Ctrl` while selecting columns. Hold `Shift` to select a range of columns.
```
import streamlit as st
import pandas as pd
import numpy as np
if "df" not in st.session_state:
  st.session_state.df = pd.DataFrame(
    np.random.randn(12, 5), columns=["a", "b", "c", "d", "e"]
  )
event = st.dataframe(
  st.session_state.df,
  key="data",
  on_select="rerun",
  selection_mode=["multi-row", "multi-column"],
)
event.selection
```

Copy
[Built with Streamlit ðŸŽˆ](https://streamlit.io)
[Fullscreen _open_in_new_](https://doc-dataframe-events-selection-state.streamlit.app//?utm_medium=oembed&)
## [](https://docs.streamlit.io/develop/api-reference/data/st.dataframe#elementadd_rows)element.add_rows
Streamlit VersionVersion 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0Version 1.21.0Version 1.20.0
Concatenate a dataframe to the bottom of the current one.
Function signature[[source]](https://github.com/streamlit/streamlit/blob/1.44.0/lib/streamlit/elements/arrow.py#L735 "View st.add_rows source code on GitHub")  
---  
element.add_rows(data=None, **kwargs)  
Parameters  
data (pandas.DataFrame, pandas.Styler, pyarrow.Table, numpy.ndarray, pyspark.sql.DataFrame, snowflake.snowpark.dataframe.DataFrame, Iterable, dict, or None) |  Table to concat. Optional.  
**kwargs (pandas.DataFrame, numpy.ndarray, Iterable, dict, or None) |  The named dataset to concat. Optional. You can only pass in 1 dataset (including the one in the data parameter).  
#### Example
```
import streamlit as st
import pandas as pd
import numpy as np
df1 = pd.DataFrame(
  np.random.randn(50, 20), columns=("col %d" % i for i in range(20))
)
my_table = st.table(df1)
df2 = pd.DataFrame(
  np.random.randn(50, 20), columns=("col %d" % i for i in range(20))
)
my_table.add_rows(df2)
# Now the table shown in the Streamlit app contains the data for
# df1 followed by the data for df2.
```

Copy
You can do the same thing with plots. For example, if you want to add more data to a line chart: