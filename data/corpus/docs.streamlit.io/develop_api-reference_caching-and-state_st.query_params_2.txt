Title: Controlling Query Parameters with st.query_params
URL: https://docs.streamlit.io/develop/api-reference/caching-and-state/st.query_params
Summary: This section discusses how to manage multiple query parameters in Streamlit using `st.query_params.from_dict()`. It notes limitations and details about handling repeated keys. It also clarifies that `.from_dict()` is not a direct inverse of `.to_dict()` for repeated keys, and provides a function signature and parameter details.
---

o want to control multiple query parameters in a single update. To set individual query parameters, use key or attribute notation instead.
This method inherits limitations from `st.query_params` and can't be used to set embedding options as described in [Embed your app](https://docs.streamlit.io/deploy/streamlit-community-cloud/share-your-app/embed-your-app#embed-options).
To handle repeated keys, the value in a key-value pair should be a list.
Note
`.from_dict()` is not a direct inverse of `.to_dict()` if you are working with repeated keys. A true inverse operation is `{key: st.query_params.get_all(key) for key in st.query_params}`.
Function signature[[source]](https://github.com/streamlit/streamlit/blob/1.44.0/lib/streamlit/runtime/state/query_params_proxy.py#L177 "View st.from_dict source code on GitHub")  
---  
st.query_params.from_dict(params)  
Parameters  
params (dict) |  A dictionary used to replace the current query parameters.  
#### Example
```
import streamlit as st
st.query_params.from_dict({"foo": "bar", "baz": [1, "two"]})
```

Copy
## [](https://docs.streamlit.io/develop/api-reference/caching-and-state/st.query_params#stquery_paramsget_all)st.query_params.get_all
Streamlit VersionVersion 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0Version 1.21.0Version 1.20.0
Get a list of all query parameter values associated to a given key.
When a key is repeated as a query parameter within the URL, this method allows all values to be obtained. In contrast, dict-like methods only retrieve the last value when a key is repeated in the URL.
Function signature[[source]](https://github.com/streamlit/streamlit/blob/1.44.0/lib/streamlit/runtime/state/query_params_proxy.py#L112 "View st.get_all source code on GitHub")  
---  
st.query_params.get_all(key)  
Parameters  
key (str) |  The label of the query parameter in the URL.  
Returns  
(List[str]) | A list of values associated to the given key. May return zero, one, or multiple values.  
## [](https://docs.streamlit.io/develop/api-reference/caching-and-state/st.query_params#stquery_paramsto_dict)st.query_params.to_dict
Streamlit VersionVersion 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0Version 1.21.0Version 1.20.0
Get all query parameters as a dictionary.
This method primarily exists for internal use and is not needed for most cases. `st.query_params` returns an object that inherits from `dict` by default.
When a key is repeated as a query parameter within the URL, this method will return only the last value of each unique key.
Function signature[[source]](https://github.com/streamlit/streamlit/blob/1.44.0/lib/streamlit/runtime/state/query_params_proxy.py#L147 "View st.to_dict source code on GitHub")  
---  
st.query_params.to_dict()  
Returns  
(Dict[str,str]) | A dictionary of the current query paramters in the app's URL.  
[Previous: st.context](https://docs.streamlit.io/develop/api-reference/caching-and-state/st.context)[Next: st.experimental_get_query_params](https://docs.streamlit.io/develop/api-reference/caching-and-state/st.experimental_get_query_params) _forum_
### Still have questions?
Our [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.
[Home](https://docs.streamlit.io/)Contact Us[Community](https://discuss.streamlit.io)[](https://github.com/streamlit "GitHub")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q "YouTube")[](https://twitter.com/streamlit "Twitter")[](https://www.linkedin.com/company/streamlit "LinkedIn")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html "Newsletter")
Â© 2025 Snowflake Inc.Cookie policy
 _forum_ Ask AI