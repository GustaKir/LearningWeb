Title: Widget Behavior in Streamlit
URL: https://docs.streamlit.io/develop/concepts/architecture/widget-behavior
Summary: This document outlines the architecture of widgets in Streamlit, covering their anatomy, session dependency, data types returned, and the importance of keys for distinguishing and accessing widget values. It emphasizes the need for unique keys to manage identical widgets on the same page.
---

1. Contents
  2. [Anatomy of a widget](https://docs.streamlit.io/develop/concepts/architecture/widget-behavior#anatomy-of-a-widget)
  3. [Widgets are session dependent](https://docs.streamlit.io/develop/concepts/architecture/widget-behavior#widgets-are-session-dependent)
  4. [Widgets return simple Python data types](https://docs.streamlit.io/develop/concepts/architecture/widget-behavior#widgets-return-simple-python-data-types)
  5. [Keys help distinguish widgets and access their values](https://docs.streamlit.io/develop/concepts/architecture/widget-behavior#keys-help-distinguish-widgets-and-access-their-values)
  6. [Streamlit can't understand two identical widgets on the same page](https://docs.streamlit.io/develop/concepts/architecture/widget-behavior#streamlit-cant-understand-two-identical-widgets-on-the-same-page)
  7. [Use keys to distinguish otherwise identical widgets](https://docs.streamlit.io/develop/concepts/architecture/widget-behavior#use-keys-to-distinguish-otherwise-identical-widgets)
  8. [Order of operations](https://docs.streamlit.io/develop/concepts/architecture/widget-behavior#order-of-operations)
  9. [Using callback functions with forms](https://docs.streamlit.io/develop/concepts/architecture/widget-behavior#using-callback-functions-with-forms)
  10. [Statefulness of widgets](https://docs.streamlit.io/develop/concepts/architecture/widget-behavior#statefulness-of-widgets)
  11. [Changing parameters of a widget will reset it](https://docs.streamlit.io/develop/concepts/architecture/widget-behavior#changing-parameters-of-a-widget-will-reset-it)
  12. [Updating a slider with no default value](https://docs.streamlit.io/develop/concepts/architecture/widget-behavior#updating-a-slider-with-no-default-value)
  13. [Updating a slider with a default value](https://docs.streamlit.io/develop/concepts/architecture/widget-behavior#updating-a-slider-with-a-default-value)
  14. [Widgets do not persist when not continually rendered](https://docs.streamlit.io/develop/concepts/architecture/widget-behavior#widgets-do-not-persist-when-not-continually-rendered)
  15. [Save widget values in Session State to preserve them between pages](https://docs.streamlit.io/develop/concepts/architecture/widget-behavior#save-widget-values-in-session-state-to-preserve-them-between-pages)
  16. [Widget life cycle](https://docs.streamlit.io/develop/concepts/architecture/widget-behavior#widget-life-cycle)
  17. [Calling a widget function when the widget doesn't already exist](https://docs.streamlit.io/develop/concepts/architecture/widget-behavior#calling-a-widget-function-when-the-widget-doesnt-already-exist)
  18. [Calling a widget function when the widget already exists](https://docs.streamlit.io/develop/concepts/architecture/widget-behavior#calling-a-widget-function-when-the-widget-already-exists)
  19. [Widget clean-up process](https://docs.streamlit.io/develop/concepts/architecture/widget-behavior#widget-clean-up-process)
  20. [Additional examples](https://docs.streamlit.io/develop/concepts/architecture/widget-behavior#additional-examples)
  21. [Interrupting the widget clean-up process](https://docs.streamlit.io/develop/concepts/architecture/widget-behavior#interrupting-the-widget-clean-up-process)
  22. [Retain statefulness when changing a widget's parameters](https://docs.streamlit.io/develop/concepts/architecture/widget-behavior#retain-statefulness-when-changing-a-widgets-parameters)