Title: Streamlit API Reference
URL: https://docs.streamlit.io/develop/api-reference
Summary: This section discusses various components available in Streamlit, including an image comparison tool, a simple image cropper, and a utility for obtaining image coordinates through user clicks. It provides code snippets for each component created by different contributors.
---

ghtlab.com/). Created by [@fcakyon](https://github.com/fcakyon).`from streamlit_image_comparison import image_comparison image_comparison(img1="image1.jpg", img2="image2.jpg",) `](https://github.com/fcakyon/streamlit-image-comparison)
[![screenshot](https://docs.streamlit.io/images/api/components/cropper.jpg)Streamlit CropperA simple image cropper for Streamlit. Created by [@turner-anderson](https://github.com/turner-anderson).`from streamlit_cropper import st_cropper st_cropper(img, realtime_update=realtime_update, box_color=box_color, aspect_ratio=aspect_ratio) `](https://github.com/turner-anderson/streamlit-cropper)
[![screenshot](https://docs.streamlit.io/images/api/components/image-coordinates.jpg)Image CoordinatesGet the coordinates of clicks on an image. Created by [@blackary](https://github.com/blackary/).`from streamlit_image_coordinates import streamlit_image_coordinates streamlit_image_coordinates("https://placekitten.com/200/300") `](https://github.com/blackary/streamlit-image-coordinates)
[![screenshot](https://docs.streamlit.io/images/api/components/lottie.jpg)Streamlit LottieIntegrate [Lottie](https://lottiefiles.com/) animations inside your Streamlit app. Created by [@andfanilo](https://github.com/andfanilo).`lottie_hello = load_lottieurl("https://assets5.lottiefiles.com/packages/lf20_V9t630.json") st_lottie(lottie_hello, key="hello") `](https://github.com/andfanilo/streamlit-lottie)
Next
### [](https://docs.streamlit.io/develop/api-reference#layouts-and-containers)Layouts and containers
[![screenshot](https://docs.streamlit.io/images/api/columns.jpg)ColumnsInsert containers laid out as side-by-side columns.`col1, col2 = st.columns(2) col1.write("this is column 1") col2.write("this is column 2") `](https://docs.streamlit.io/develop/api-reference/layout/st.columns)[![screenshot](https://docs.streamlit.io/images/api/container.jpg)ContainerInsert a multi-element container.`c = st.container() st.write("This will show last") c.write("This will show first") c.write("This will show second") `](https://docs.streamlit.io/develop/api-reference/layout/st.container)[![screenshot](https://docs.streamlit.io/images/api/dialog.jpg)Modal dialogInsert a modal dialog that can rerun independently from the rest of the script.`@st.dialog("Sign up") def email_form():   name = st.text_input("Name")   email = st.text_input("Email") `](https://docs.streamlit.io/develop/api-reference/execution-flow/st.dialog)[![screenshot](https://docs.streamlit.io/images/api/empty.jpg)EmptyInsert a single-element container.`c = st.empty() st.write("This will show last") c.write("This will be replaced") c.write("This will show first") `](https://docs.streamlit.io/develop/api-reference/layout/st.empty)[![screenshot](https://docs.streamlit.io/images/api/expander.jpg)ExpanderInsert a multi-element container that can be expanded/collapsed.`with st.expander("Open to see more"):  st.write("This is more content") `](https://docs.streamlit.io/develop/api-reference/layout/st.expander)[![screenshot](https://docs.streamlit.io/images/api/popover.svg)PopoverInsert a multi-element popover container that can be opened/closed.`with st.popover("Settings"):  st.checkbox("Show completed") `](https://docs.streamlit.io/develop/api-reference/layout/st.popover)[![screenshot](https://docs.streamlit.io/images/api/sidebar.jpg)SidebarDisplay items in a sidebar.`st.sidebar.write("This lives in the sidebar") st.sidebar.button("Click me!") `](https://docs.streamlit.io/develop/api-reference/layout/st.sidebar)[![screenshot](https://docs.streamlit.io/images/api/tabs.jpg)TabsInsert containers separated into tabs.`tab1, tab2 = st.tabs(["Tab 1", "Tab2"]) tab1.write("this is tab 1") tab2.write("this is tab 2") `](https://docs.streamlit.io/develop/api-reference/layout/st.tabs)
Third-party components
These are featured components created by our lovely community. For more examples and inspiration, check out our [Components Gallery](https://streamlit.io/components) and [Streamlit Extras](https://extras.streamlit.app)!
[![screenshot](https://docs.streamlit.io/images/api/components/elements.jpg)Streamlit ElementsCreate a draggable and resizable dashboard in Streamlit. Created by [@okls](https://github.com/okls).`from streamlit_elements import elements, mui, html with elements("new_element"):  mui.Typography("Hello world") `](https://github.com/okld/streamlit-elements)
[![screenshot](https://docs.streamlit.io/images/api/components/pydantic.jpg)PydanticAuto-generate Streamlit UI from Pydantic Models and Dataclasses. Created by [@lukasmasuch](https://github.com/lukasmasuch).`import streamlit_pydantic as sp sp.pydantic_form(key="my_form",  model=ExampleModel) `](https://github.com/lukasmasuch/streamlit-pydantic)
[![screenshot](https://docs.streamlit.io/images/api/components/pages.jpg)Streamlit PagesAn experimental version of Streamlit Multi-Page Apps.