Title: st.line_chart API Reference
URL: https://docs.streamlit.io/develop/api-reference/charts/st.line_chart
Summary: This document provides an overview of the st.line_chart function in Streamlit, which is used to create line charts. It includes version history for various releases of the Streamlit library.
---

* [Home](https://docs.streamlit.io/)/
  * [Develop](https://docs.streamlit.io/develop)/
  * [API reference](https://docs.streamlit.io/develop/api-reference)/
  * [Chart elements](https://docs.streamlit.io/develop/api-reference/charts)/
  * [st.line_chart](https://docs.streamlit.io/develop/api-reference/charts/st.line_chart)


  1. Contents
  2. [st.line_chart](https://docs.streamlit.io/develop/api-reference/charts/st.line_chart#stline_chart)
  3. [element.add_rows](https://docs.streamlit.io/develop/api-reference/charts/st.line_chart#elementadd_rows)


## [](https://docs.streamlit.io/develop/api-reference/charts/st.line_chart#stline_chart)st.line_chart
Streamlit VersionVersion 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0Version 1.21.0Version 1.20.0
Display a line chart.
This is syntax-sugar around `st.altair_chart`. The main difference is this command uses the data's own column and indices to figure out the chart's Altair spec. As a result this is easier to use for many "just plot this" scenarios, while being less customizable.
If `st.line_chart` does not guess the data specification correctly, try specifying your desired chart using `st.altair_chart`.
Function signature[[source]](https://github.com/streamlit/streamlit/blob/1.44.0/lib/streamlit/elements/vega_charts.py#L560 "View st.line_chart source code on GitHub")  
---  
st.line_chart(data=None, *, x=None, y=None, x_label=None, y_label=None, color=None, width=None, height=None, use_container_width=True)  
Parameters  
data (Anything supported by st.dataframe) |  Data to be plotted.  
x (str or None) |  Column name or key associated to the x-axis data. If `x` is `None` (default), Streamlit uses the data index for the x-axis values.  
y (str, Sequence of str, or None) |  Column name(s) or key(s) associated to the y-axis data. If this is `None` (default), Streamlit draws the data of all remaining columns as data series. If this is a `Sequence` of strings, Streamlit draws several series on the same chart by melting your wide-format table into a long-format table behind the scenes.  
x_label (str or None) |  The label for the x-axis. If this is `None` (default), Streamlit will use the column name specified in `x` if available, or else no label will be displayed.  
y_label (str or None) |  The label for the y-axis. If this is `None` (default), Streamlit will use the column name(s) specified in `y` if available, or else no label will be displayed.  
color (str, tuple, Sequence of str, Sequence of tuple, or None) |  The color to use for different lines in this chart. For a line chart with just one line, this can be:
  * None, to use the default color.
  * A hex string like "#ffaa00" or "#ffaa0088".
  * An RGB or RGBA tuple with the red, green, blue, and alpha components specified as ints from 0 to 255 or floats from 0.0 to 1.0.

For a line chart with multiple lines, where the dataframe is in long format (that is, y is None or just one column), this can be:
  * None, to use the default colors.
  * The name of a column in the dataset. Data points will be grouped into lines of the same color based on the value of this column. In addition, if the values in this column match one of the color formats above (hex string or color tuple), then that color will be used. For example: if the dataset has 1000 rows, but this column only contains the values "adult", "child", and "baby", then those 1000 datapoints will be grouped into three lines whose colors will be automatically selected from the default palette. But, if for the same 1000-row dataset, this column contained the values "#ffaa00", "#f0f", "#0000ff", then then those 1000 datapoints would still be grouped into three lines, but their colors would be "#ffaa00", "#f0f", "#0000ff" this time around.

For a line chart with multiple lines, where the dataframe is in wide format (that is, y is a Sequence of columns), this can be:
  * None, to use the default colors.
  * A list of string colors or color tuples to be used for each of the lines in the chart. This list should have the same length as the number of y values (e.g. `color=["#fd0", "#f0f", "#04f"]` for three lines).