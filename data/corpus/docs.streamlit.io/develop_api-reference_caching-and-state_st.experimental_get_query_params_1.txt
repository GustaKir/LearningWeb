Title: st.experimental_get_query_params
URL: https://docs.streamlit.io/develop/api-reference/caching-and-state/st.experimental_get_query_params
Summary: The `st.experimental_get_query_params` function, available in Streamlit up to version 1.29.0, has been deprecated as of version 1.30.0. Developers are advised to use `st.query_params` instead. This function was used to return the query parameters currently displayed in the browser's URL bar.
---

## [](https://docs.streamlit.io/develop/api-reference/caching-and-state/st.experimental_get_query_params#stexperimental_get_query_params)st.experimental_get_query_params
Streamlit VersionVersion 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0Version 1.21.0Version 1.20.0
 _delete_
#### Deprecation notice
`st.experimental_get_query_params` was deprecated in version 1.30.0. Use [`st.query_params`](https://docs.streamlit.io/develop/api-reference/caching-and-state/st.query_params) instead.
Return the query parameters that is currently showing in the browser's URL bar.
Function signature[[source]](https://github.com/streamlit/streamlit/blob/1.44.0/lib/streamlit/commands/experimental_query_params.py#L31 "View st.experimental_get_query_params source code on GitHub")  
---  
st.experimental_get_query_params()  
Returns  
(dict) | The current query parameters as a dict. "Query parameters" are the part of the URL that comes after the first "?".  
#### Example
Let's say the user's web browser is at http://localhost:8501/?show_map=True&selected=asia&selected=america. Then, you can get the query parameters using the following:
```
import streamlit as st
st.experimental_get_query_params()
{"show_map": ["True"], "selected": ["asia", "america"]}
```

Copy
Note that the values in the returned dict are _always_ lists. This is because we internally use Python's urllib.parse.parse_qs(), which behaves this way. And this behavior makes sense when you consider that every item in a query string is potentially a 1-element array.
[Previous: st.query_params](https://docs.streamlit.io/develop/api-reference/caching-and-state/st.query_params)[Next: st.experimental_set_query_params](https://docs.streamlit.io/develop/api-reference/caching-and-state/st.experimental_set_query_params) _forum_
### Still have questions?
Our [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.
[Home](https://docs.streamlit.io/)Contact Us[Community](https://discuss.streamlit.io)[](https://github.com/streamlit "GitHub")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q "YouTube")[](https://twitter.com/streamlit "Twitter")[](https://www.linkedin.com/company/streamlit "LinkedIn")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html "Newsletter")
Â© 2025 Snowflake Inc.Cookie policy
 _forum_ Ask AI