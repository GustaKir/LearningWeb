Title: Streamlit Documentation Overview
URL: https://docs.streamlit.io/develop/api-reference/widgets/st.date_input
Summary: This section provides links to various parts of the Streamlit documentation, including sections on caching, connections, custom components, configuration, app testing, command line usage, tutorials, quick reference, deployment concepts, and community resources.
---

e/caching-and-state)
 _add_
      * [ Connections & secrets](https://docs.streamlit.io/develop/api-reference/connections)
 _add_
      * [ Custom components](https://docs.streamlit.io/develop/api-reference/custom-components)
 _add_
      * [ Configuration](https://docs.streamlit.io/develop/api-reference/configuration)
 _add_
      * TOOLS
      * [App testing](https://docs.streamlit.io/develop/api-reference/app-testing)
 _add_
      * [ Command line](https://docs.streamlit.io/develop/api-reference/cli)
 _add_
    * [ Tutorials](https://docs.streamlit.io/develop/tutorials)
 _add_
    * [ Quick reference](https://docs.streamlit.io/develop/quick-reference)
 _add_
  * [ _web_asset_ Deploy](https://docs.streamlit.io/deploy)
    * [Concepts](https://docs.streamlit.io/deploy/concepts)
 _add_
    * [ Streamlit Community Cloud](https://docs.streamlit.io/deploy/streamlit-community-cloud)
 _add_
    * [ Snowflake](https://docs.streamlit.io/deploy/snowflake)
    * [Other platforms](https://docs.streamlit.io/deploy/tutorials)
 _add_
  * [ _school_ Knowledge base](https://docs.streamlit.io/knowledge-base)
    * [FAQ](https://docs.streamlit.io/knowledge-base/using-streamlit)
    * [Installing dependencies](https://docs.streamlit.io/knowledge-base/dependencies)
    * [Deployment issues](https://docs.streamlit.io/knowledge-base/deploy)


  * [Home](https://docs.streamlit.io/)/
  * [Develop](https://docs.streamlit.io/develop)/
  * [API reference](https://docs.streamlit.io/develop/api-reference)/
  * [Input widgets](https://docs.streamlit.io/develop/api-reference/widgets)/
  * [st.date_input](https://docs.streamlit.io/develop/api-reference/widgets/st.date_input)


## [](https://docs.streamlit.io/develop/api-reference/widgets/st.date_input#stdate_input)st.date_input
Streamlit VersionVersion 1.44.0Version 1.43.0Version 1.42.0Version 1.41.0Version 1.40.0Version 1.39.0Version 1.38.0Version 1.37.0Version 1.36.0Version 1.35.0Version 1.34.0Version 1.33.0Version 1.32.0Version 1.31.0Version 1.30.0Version 1.29.0Version 1.28.0Version 1.27.0Version 1.26.0Version 1.25.0Version 1.24.0Version 1.23.0Version 1.22.0Version 1.21.0Version 1.20.0
Display a date input widget.
The first day of the week is determined from the user's locale in their browser.
Function signature[[source]](https://github.com/streamlit/streamlit/blob/1.44.0/lib/streamlit/elements/widgets/time_widgets.py#L632 "View st.date_input source code on GitHub")  
---  
st.date_input(label, value="today", min_value=None, max_value=None, key=None, help=None, on_change=None, args=None, kwargs=None, *, format="YYYY/MM/DD", disabled=False, label_visibility="visible")  
Parameters  
label (str) |  A short label explaining to the user what this date input is for. The label can optionally contain GitHub-flavored Markdown of the following types: Bold, Italics, Strikethroughs, Inline Code, Links, and Images. Images display like icons, with a max height equal to the font height. Unsupported Markdown elements are unwrapped so only their children (text contents) render. Display unsupported elements as literal characters by backslash-escaping them. E.g., `"1\. Not an ordered list"`. See the `body` parameter of [`st.markdown`](https://docs.streamlit.io/develop/api-reference/text/st.markdown) for additional, supported Markdown directives. For accessibility reasons, you should never set an empty label, but you can hide it with `label_visibility` if needed. In the future, we may disallow empty labels by raising an exception.  
value ("today", datetime.date, datetime.datetime, str, list/tuple of these, or None) |  The value of this widget when it first renders. This can be one of the following:
  * `"today"` (default): The widget initializes with the current date.
  * A `datetime.date` or `datetime.datetime` object: The widget initializes with the given date, ignoring any time if included.
  * An ISO-formatted date ("YYYY-MM-DD") or datetime ("YYYY-MM-DD hh:mm:ss") string: The widget initializes with the given date, ignoring any time if included.
  * A list or tuple with up to two of the above: The widget will initialize with the given date interval and return a tuple of the selected interval. You can pass an empty list to initialize the widget with an empty interval or a list with one value to initialize only the beginning date of the iterval.
  * `None`: The widget initializes with no date and returns `None` until the user selects a date.