Title: How Streamlit Converts Filenames into Labels and Titles
URL: https://docs.streamlit.io/develop/concepts/multipage-apps/overview
Summary: Streamlit converts page identifiers, numbers, and separators into navigation labels. Identifiers are displayed with underscores replaced by spaces, while numbers are shown as-is. Pages with only separators are not displayed in the sidebar.
---

For callables, the function name is the `identifier`, including any leading or trailing underscores.
### [](https://docs.streamlit.io/develop/concepts/multipage-apps/overview#how-streamlit-converts-filenames-into-labels-and-titles)How Streamlit converts filenames into labels and titles
Within the navigation menu, Streamlit displays page labels and titles as follows:
  1. If your page has an `identifier`, Streamlit displays the `identifier`. Any underscores within the page's `identifier` are treated as spaces. Therefore, leading and trailing underscores are not shown. Sequential underscores appear as a single space.
  2. Otherwise, if your page has a `number` but does not have an `identifier`, Streamlit displays the `number`, unmodified. Leading zeros are included, if present.
  3. Otherwise, if your page only has a `separator` with no `number` and no `identifier`, Streamlit will not display the page in the sidebar navigation.


The following filenames and callables would all display as "Awesome page" in the sidebar navigation.
  * `"Awesome page.py"`
  * `"Awesome_page.py"`
  * `"02Awesome_page.py"`
  * `"--Awesome_page.py"`
  * `"1_Awesome_page.py"`
  * `"33 - Awesome page.py"`
  * `Awesome_page()`
  * `_Awesome_page()`
  * `__Awesome_page__()`


### [](https://docs.streamlit.io/develop/concepts/multipage-apps/overview#how-streamlit-converts-filenames-into-url-pathnames)How Streamlit converts filenames into URL pathnames
Your app's homepage is associated to the root URL of app. For all other pages, their `identifier` or `number` becomes their URL pathname as follows:
  * If your page has an `identifier` that came from a filename, Streamlit uses the `identifier` with one modification. Streamlit condenses each consecutive grouping of spaces (`" "`) and underscores (`"_"`) to a single underscore.
  * Otherwise, if your page has an `identifier` that came from the name of a callable, Streamlit uses the `identifier` unmodified.
  * Otherwise, if your page has a `number` but does not have an `identifier`, Streamlit uses the `number`. Leading zeros are included, if present.


For each filename in the list above, the URL pathname would be "Awesome_page" relative to the root URL of the app. For example, if your app was running on `localhost` port `8501`, the full URL would be `localhost:8501/awesome_page`. For the last two callables, however, the pathname would include the leading and trailing underscores to match the callable name exactly.
## [](https://docs.streamlit.io/develop/concepts/multipage-apps/overview#navigating-between-pages)Navigating between pages
The primary way users navigate between pages is through the navigation widget. Both methods for defining multipage apps include a default navigation menu that appears in the sidebar. When a user clicks this navigation widget, the app reruns and loads the selected page. Optionally, you can hide the default navigation UI and build your own with [`st.page_link`](https://docs.streamlit.io/develop/api-reference/widgets/st.page_link). For more information, see [Build a custom navigation menu with `st.page_link`](https://docs.streamlit.io/develop/tutorials/multipage/st.page_link-nav).
If you need to programmatically switch pages, use [`st.switch_page`](https://docs.streamlit.io/develop/api-reference/navigation/st.switch_page).
Users can also navigate between pages using URLs as noted above. When multiple files have the same URL pathname, Streamlit picks the first one (based on the ordering in the navigation menu. Users can view a specific page by visiting the page's URL.
_priority_high_
#### Important
Navigating between pages by URL creates a new browser session. In particular, clicking markdown links to other pages resets `st.session_state`. In order to retain values in `st.session_state`, handle page switching through Streamlit navigation commands and widgets, like `st.navigation`, `st.switch_page`, `st.page_link`, and the built-in navigation menu.
If a user tries to access a URL for a page that does not exist, they will see a modal like the one below, saying "Page not found."
![Page not found](https://docs.streamlit.io/images/mpa-page-not-found.png)
[Previous: Multipage apps](https://docs.streamlit.io/develop/concepts/multipage-apps)[Next: Page and navigation](https://docs.streamlit.io/develop/concepts/multipage-apps/page-and-navigation) _forum_
### Still have questions?
Our [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.
[Home](https://docs.streamlit.io/)Contact Us[Community](https://discuss.streamlit.io)[](https://github.com/streamlit "GitHub")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q "YouTube")[](https://twitter.com/streamlit "Twitter")[](https://www.linkedin.com/company/streamlit "LinkedIn")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html "Newsletter")
Â© 2025 Snowflake Inc.Cookie policy
 _forum_ Ask AI