Title: Integrating AWS S3 with Streamlit
URL: https://docs.streamlit.io/develop/tutorials/databases/aws-s3
Summary: This section guides users on adding the FilesConnection and s3fs packages to their requirements.txt file for a Streamlit app, including instructions for version pinning. It also provides sample code to incorporate AWS S3 functionality into a Streamlit application, highlighting the use of access keys stored in a secrets file.
---

.io/images/databases/edit-secrets.png)
## [](https://docs.streamlit.io/develop/tutorials/databases/aws-s3#add-filesconnection-and-s3fs-to-your-requirements-file)Add FilesConnection and s3fs to your requirements file
Add the [FilesConnection](https://github.com/streamlit/files-connection) and [s3fs](https://github.com/dask/s3fs) packages to your `requirements.txt` file, preferably pinning the versions (replace `x.x.x` with the version you want installed):
`# requirements.txt s3fs==x.x.x st-files-connection `
## [](https://docs.streamlit.io/develop/tutorials/databases/aws-s3#write-your-streamlit-app)Write your Streamlit app
Copy the code below to your Streamlit app and run it. Make sure to adapt the name of your bucket and file. Note that Streamlit automatically turns the access keys from your secrets file into environment variables, where `s3fs` searches for them by default.
`# streamlit_app.py import streamlit as st from st_files_connection import FilesConnection # Create connection object and retrieve file contents. # Specify input format is a csv and to cache the result for 600 seconds. conn = st.connection('s3', type=FilesConnection) df = conn.read("testbucket-jrieke/myfile.csv", input_format="csv", ttl=600) # Print results. for row in df.itertuples():   st.write(f"{row.Owner} has a :{row.Pet}:") `
See `st.connection` above? This handles secrets retrieval, setup, result caching and retries. By default, `read()` results are cached without expiring. In this case, we set `ttl=600` to ensure the file contents is cached for no longer than 10 minutes. You can also set `ttl=0` to disable caching. Learn more in [Caching](https://docs.streamlit.io/develop/concepts/architecture/caching).
If everything worked out (and you used the example file given above), your app should look like this:
![Finished app screenshot](https://docs.streamlit.io/images/databases/streamlit-app.png)[Previous: Connect to data sources](https://docs.streamlit.io/develop/tutorials/databases)[Next: BigQuery](https://docs.streamlit.io/develop/tutorials/databases/bigquery) _forum_
### Still have questions?
Our [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.
[Home](https://docs.streamlit.io/)Contact Us[Community](https://discuss.streamlit.io)[](https://github.com/streamlit "GitHub")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q "YouTube")[](https://twitter.com/streamlit "Twitter")[](https://www.linkedin.com/company/streamlit "LinkedIn")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html "Newsletter")
Â© 2025 Snowflake Inc.Cookie policy
 _forum_ Ask AI