Title: Chat Elements in Streamlit
URL: https://docs.streamlit.io/develop/api-reference/chat
Summary: Streamlit offers several commands to create conversational apps, including `st.chat_message` for displaying chat messages and `st.chat_input` for user input. These elements can work together or be used independently, and users should also consider `st.status` for handling outputs from processes or API calls.
---

# [](https://docs.streamlit.io/develop/api-reference/chat#chat-elements)Chat elements
Streamlit provides a few commands to help you build conversational apps. These chat elements are designed to be used in conjunction with each other, but you can also use them separately.
`st.chat_message` lets you insert a chat message container into the app so you can display messages from the user or the app. Chat containers can contain other Streamlit elements, including charts, tables, text, and more. `st.chat_input` lets you display a chat input widget so the user can type in a message. Remember to check out `st.status` to display output from long-running processes and external API calls.
[![screenshot](https://docs.streamlit.io/images/api/chat_input.jpg)Chat inputDisplay a chat input widget.`prompt = st.chat_input("Say something") if prompt:   st.write(f"The user has sent: {prompt}") `](https://docs.streamlit.io/develop/api-reference/chat/st.chat_input)[![screenshot](https://docs.streamlit.io/images/api/chat_message.jpg)Chat messageInsert a chat message container.`import numpy as np with st.chat_message("user"):   st.write("Hello ðŸ‘‹")   st.line_chart(np.random.randn(30, 3)) `](https://docs.streamlit.io/develop/api-reference/chat/st.chat_message)[![screenshot](https://docs.streamlit.io/images/api/status.jpg)Status containerDisplay output of long-running tasks in a container.`with st.status('Running'):  do_something_slow() `](https://docs.streamlit.io/develop/api-reference/status/st.status)#### [st.write_streamWrite generators or streams to the app with a typewriter effect.`st.write_stream(my_generator) st.write_stream(my_llm_stream) `](https://docs.streamlit.io/develop/api-reference/write-magic/st.write_stream)[Previous: Layouts & containers](https://docs.streamlit.io/develop/api-reference/layout)[Next: st.chat_input](https://docs.streamlit.io/develop/api-reference/chat/st.chat_input) _forum_
### Still have questions?
Our [forums](https://discuss.streamlit.io) are full of helpful information and Streamlit experts.
[Home](https://docs.streamlit.io/)Contact Us[Community](https://discuss.streamlit.io)[](https://github.com/streamlit "GitHub")[](https://www.youtube.com/channel/UC3LD42rjj-Owtxsa6PwGU5Q "YouTube")[](https://twitter.com/streamlit "Twitter")[](https://www.linkedin.com/company/streamlit "LinkedIn")[](https://info.snowflake.com/streamlit-newsletter-sign-up.html "Newsletter")
Â© 2025 Snowflake Inc.Cookie policy
 _forum_ Ask AI