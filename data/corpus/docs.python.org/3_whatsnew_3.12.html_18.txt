Title: CPython Bytecode Changes in Python 3.12
URL: https://docs.python.org/3/whatsnew/3.12.html
Summary: Python 3.12 introduces significant changes to CPython bytecode, including the removal of `LOAD_METHOD`, `JUMP_IF_FALSE_OR_POP`, `JUMP_IF_TRUE_OR_POP`, and `PRECALL` instructions, with `LOAD_ATTR` now handling the functionality of `LOAD_METHOD`. New instructions such as `BINARY_SLICE` and `STORE_SLICE` have been added.
---

## CPython bytecode changes[¶](https://docs.python.org/3/whatsnew/3.12.html#cpython-bytecode-changes "Link to this heading")
  * Remove the `LOAD_METHOD` instruction. It has been merged into [`LOAD_ATTR`](https://docs.python.org/3/library/dis.html#opcode-LOAD_ATTR). [`LOAD_ATTR`](https://docs.python.org/3/library/dis.html#opcode-LOAD_ATTR) will now behave like the old `LOAD_METHOD` instruction if the low bit of its oparg is set. (Contributed by Ken Jin in [gh-93429](https://github.com/python/cpython/issues/93429).)
  * Remove the `JUMP_IF_FALSE_OR_POP` and `JUMP_IF_TRUE_OR_POP` instructions. (Contributed by Irit Katriel in [gh-102859](https://github.com/python/cpython/issues/102859).)
  * Remove the `PRECALL` instruction. (Contributed by Mark Shannon in [gh-92925](https://github.com/python/cpython/issues/92925).)
  * Add the [`BINARY_SLICE`](https://docs.python.org/3/library/dis.html#opcode-BINARY_SLICE) and [`STORE_SLICE`](https://docs.python.org/3/library/dis.html#opcode-STORE_SLICE) instructions. (Contributed by Mark Shannon in [gh-94163](https://github.com/python/cpython/issues/94163).)
  * Add the [`CALL_INTRINSIC_1`](https://docs.python.org/3/library/dis.html#opcode-CALL_INTRINSIC_1) instructions. (Contributed by Mark Shannon in [gh-99005](https://github.com/python/cpython/issues/99005).)
  * Add the [`CALL_INTRINSIC_2`](https://docs.python.org/3/library/dis.html#opcode-CALL_INTRINSIC_2) instruction. (Contributed by Irit Katriel in [gh-101799](https://github.com/python/cpython/issues/101799).)
  * Add the [`CLEANUP_THROW`](https://docs.python.org/3/library/dis.html#opcode-CLEANUP_THROW) instruction. (Contributed by Brandt Bucher in [gh-90997](https://github.com/python/cpython/issues/90997).)
  * Add the `END_SEND` instruction. (Contributed by Mark Shannon in [gh-103082](https://github.com/python/cpython/issues/103082).)
  * Add the [`LOAD_FAST_AND_CLEAR`](https://docs.python.org/3/library/dis.html#opcode-LOAD_FAST_AND_CLEAR) instruction as part of the implementation of [**PEP 709**](https://peps.python.org/pep-0709/). (Contributed by Carl Meyer in [gh-101441](https://github.com/python/cpython/issues/101441).)
  * Add the [`LOAD_FAST_CHECK`](https://docs.python.org/3/library/dis.html#opcode-LOAD_FAST_CHECK) instruction. (Contributed by Dennis Sweeney in [gh-93143](https://github.com/python/cpython/issues/93143).)
  * Add the [`LOAD_FROM_DICT_OR_DEREF`](https://docs.python.org/3/library/dis.html#opcode-LOAD_FROM_DICT_OR_DEREF), [`LOAD_FROM_DICT_OR_GLOBALS`](https://docs.python.org/3/library/dis.html#opcode-LOAD_FROM_DICT_OR_GLOBALS), and [`LOAD_LOCALS`](https://docs.python.org/3/library/dis.html#opcode-LOAD_LOCALS) opcodes as part of the implementation of [**PEP 695**](https://peps.python.org/pep-0695/). Remove the `LOAD_CLASSDEREF` opcode, which can be replaced with [`LOAD_LOCALS`](https://docs.python.org/3/library/dis.html#opcode-LOAD_LOCALS) plus [`LOAD_FROM_DICT_OR_DEREF`](https://docs.python.org/3/library/dis.html#opcode-LOAD_FROM_DICT_OR_DEREF). (Contributed by Jelle Zijlstra in [gh-103764](https://github.com/python/cpython/issues/103764).)
  * Add the [`LOAD_SUPER_ATTR`](https://docs.python.org/3/library/dis.html#opcode-LOAD_SUPER_ATTR) instruction. (Contributed by Carl Meyer and Vladimir Matveev in [gh-103497](https://github.com/python/cpython/issues/103497).)
  * Add the [`RETURN_CONST`](https://docs.python.org/3/library/dis.html#opcode-RETURN_CONST) instruction. (Contributed by Wenyang Wang in [gh-101632](https://github.com/python/cpython/issues/101632).)


## Demos and Tools[¶](https://docs.python.org/3/whatsnew/3.12.html#demos-and-tools "Link to this heading")
  * Remove the `Tools/demo/` directory which contained old demo scripts. A copy can be found in the [old-demos project](https://github.com/gvanrossum/old-demos). (Contributed by Victor Stinner in [gh-97681](https://github.com/python/cpython/issues/97681).)
  * Remove outdated example scripts of the `Tools/scripts/` directory. A copy can be found in the [old-demos project](https://github.com/gvanrossum/old-demos). (Contributed by Victor Stinner in [gh-97669](https://github.com/python/cpython/issues/97669).)