Title: os.preadv Function
URL: https://docs.python.org/3/library/os.html
Summary: The os.preadv function reads data from a file descriptor at a specified offset into multiple mutable bytes-like objects without changing the file offset. It takes buffers and optional flags (RWF_HIPRI, RWF_NOWAIT) as parameters and returns the total number of bytes read, which may be less than the combined capacity of the buffers.
---

os.preadv(_fd_ , _buffers_ , _offset_ , _flags =0_, _/_)[¶](https://docs.python.org/3/library/os.html#os.preadv "Link to this definition")
    
Read from a file descriptor _fd_ at a position of _offset_ into mutable [bytes-like objects](https://docs.python.org/3/glossary.html#term-bytes-like-object) _buffers_ , leaving the file offset unchanged. Transfer data into each buffer until it is full and then move on to the next buffer in the sequence to hold the rest of the data.
The flags argument contains a bitwise OR of zero or more of the following flags:
  * [`RWF_HIPRI`](https://docs.python.org/3/library/os.html#os.RWF_HIPRI "os.RWF_HIPRI")
  * [`RWF_NOWAIT`](https://docs.python.org/3/library/os.html#os.RWF_NOWAIT "os.RWF_NOWAIT")


Return the total number of bytes actually read which can be less than the total capacity of all the objects.
The operating system may set a limit ([`sysconf()`](https://docs.python.org/3/library/os.html#os.sysconf "os.sysconf") value `'SC_IOV_MAX'`) on the number of buffers that can be used.
Combine the functionality of [`os.readv()`](https://docs.python.org/3/library/os.html#os.readv "os.readv") and [`os.pread()`](https://docs.python.org/3/library/os.html#os.pread "os.pread").
[Availability](https://docs.python.org/3/library/intro.html#availability): Linux >= 2.6.30, FreeBSD >= 6.0, OpenBSD >= 2.7, AIX >= 7.1.
Using flags requires Linux >= 4.6.
Added in version 3.7. 

os.RWF_NOWAIT[¶](https://docs.python.org/3/library/os.html#os.RWF_NOWAIT "Link to this definition")
    
Do not wait for data which is not immediately available. If this flag is specified, the system call will return instantly if it would have to read data from the backing storage or wait for a lock.
If some data was successfully read, it will return the number of bytes read. If no bytes were read, it will return `-1` and set errno to [`errno.EAGAIN`](https://docs.python.org/3/library/errno.html#errno.EAGAIN "errno.EAGAIN").
[Availability](https://docs.python.org/3/library/intro.html#availability): Linux >= 4.14.
Added in version 3.7. 

os.RWF_HIPRI[¶](https://docs.python.org/3/library/os.html#os.RWF_HIPRI "Link to this definition")
    
High priority read/write. Allows block-based filesystems to use polling of the device, which provides lower latency, but may use additional resources.
Currently, on Linux, this feature is usable only on a file descriptor opened using the [`O_DIRECT`](https://docs.python.org/3/library/os.html#os.O_DIRECT "os.O_DIRECT") flag.
[Availability](https://docs.python.org/3/library/intro.html#availability): Linux >= 4.6.
Added in version 3.7. 

os.ptsname(_fd_ , _/_)[¶](https://docs.python.org/3/library/os.html#os.ptsname "Link to this definition")
    
Return the name of the slave pseudo-terminal device associated with the master pseudo-terminal device to which the file descriptor _fd_ refers. The file descriptor _fd_ is not closed upon failure.
Calls the reentrant C standard library function `ptsname_r()` if it is available; otherwise, the C standard library function `ptsname()`, which is not guaranteed to be thread-safe, is called.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix, not WASI.
Added in version 3.13. 

os.pwrite(_fd_ , _str_ , _offset_ , _/_)[¶](https://docs.python.org/3/library/os.html#os.pwrite "Link to this definition")
    
Write the bytestring in _str_ to file descriptor _fd_ at position of _offset_ , leaving the file offset unchanged.
Return the number of bytes actually written.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix.
Added in version 3.3. 

os.pwritev(_fd_ , _buffers_ , _offset_ , _flags =0_, _/_)[¶](https://docs.python.org/3/library/os.html#os.pwritev "Link to this definition")
    
Write the _buffers_ contents to file descriptor _fd_ at an offset _offset_ , leaving the file offset unchanged. _buffers_ must be a sequence of [bytes-like objects](https://docs.python.org/3/glossary.html#term-bytes-like-object). Buffers are processed in array order. Entire contents of the first buffer is written before proceeding to the second, and so on.
The flags argument contains a bitwise OR of zero or more of the following flags:
  * [`RWF_DSYNC`](https://docs.python.org/3/library/os.html#os.RWF_DSYNC "os.RWF_DSYNC")
  * [`RWF_SYNC`](https://docs.python.org/3/library/os.html#os.RWF_SYNC "os.RWF_SYNC")
  * [`RWF_APPEND`](https://docs.python.org/3/library/os.html#os.RWF_APPEND "os.RWF_APPEND")