Title: os.environ - Process Environment Mapping in Python
URL: https://docs.python.org/3/library/os.html
Summary: The `os.environ` is a mapping object in Python that represents the process environment, with string keys and values. It reflects the environment at the time of the first import of the `os` module and allows both querying and modifying the environment, although changes made outside of `os.environ` are not captured.
---

os.environ[¶](https://docs.python.org/3/library/os.html#os.environ "Link to this definition")
    
A [mapping](https://docs.python.org/3/glossary.html#term-mapping) object where keys and values are strings that represent the process environment. For example, `environ['HOME']` is the pathname of your home directory (on some platforms), and is equivalent to `getenv("HOME")` in C.
This mapping is captured the first time the [`os`](https://docs.python.org/3/library/os.html#module-os "os: Miscellaneous operating system interfaces.") module is imported, typically during Python startup as part of processing `site.py`. Changes to the environment made after this time are not reflected in [`os.environ`](https://docs.python.org/3/library/os.html#os.environ "os.environ"), except for changes made by modifying [`os.environ`](https://docs.python.org/3/library/os.html#os.environ "os.environ") directly.
This mapping may be used to modify the environment as well as query the environment. [`putenv()`](https://docs.python.org/3/library/os.html#os.putenv "os.putenv") will be called automatically when the mapping is modified.
On Unix, keys and values use [`sys.getfilesystemencoding()`](https://docs.python.org/3/library/sys.html#sys.getfilesystemencoding "sys.getfilesystemencoding") and `'surrogateescape'` error handler. Use [`environb`](https://docs.python.org/3/library/os.html#os.environb "os.environb") if you would like to use a different encoding.
On Windows, the keys are converted to uppercase. This also applies when getting, setting, or deleting an item. For example, `environ['monty'] = 'python'` maps the key `'MONTY'` to the value `'python'`.
Note
Calling [`putenv()`](https://docs.python.org/3/library/os.html#os.putenv "os.putenv") directly does not change [`os.environ`](https://docs.python.org/3/library/os.html#os.environ "os.environ"), so it’s better to modify [`os.environ`](https://docs.python.org/3/library/os.html#os.environ "os.environ").
Note
On some platforms, including FreeBSD and macOS, setting `environ` may cause memory leaks. Refer to the system documentation for `putenv()`.
You can delete items in this mapping to unset environment variables. [`unsetenv()`](https://docs.python.org/3/library/os.html#os.unsetenv "os.unsetenv") will be called automatically when an item is deleted from [`os.environ`](https://docs.python.org/3/library/os.html#os.environ "os.environ"), and when one of the `pop()` or `clear()` methods is called.
Changed in version 3.9: Updated to support [**PEP 584**](https://peps.python.org/pep-0584/)’s merge (`|`) and update (`|=`) operators. 

os.environb[¶](https://docs.python.org/3/library/os.html#os.environb "Link to this definition")
    
Bytes version of [`environ`](https://docs.python.org/3/library/os.html#os.environ "os.environ"): a [mapping](https://docs.python.org/3/glossary.html#term-mapping) object where both keys and values are [`bytes`](https://docs.python.org/3/library/stdtypes.html#bytes "bytes") objects representing the process environment. [`environ`](https://docs.python.org/3/library/os.html#os.environ "os.environ") and [`environb`](https://docs.python.org/3/library/os.html#os.environb "os.environb") are synchronized (modifying [`environb`](https://docs.python.org/3/library/os.html#os.environb "os.environb") updates [`environ`](https://docs.python.org/3/library/os.html#os.environ "os.environ"), and vice versa).
[`environb`](https://docs.python.org/3/library/os.html#os.environb "os.environb") is only available if [`supports_bytes_environ`](https://docs.python.org/3/library/os.html#os.supports_bytes_environ "os.supports_bytes_environ") is `True`.
Added in version 3.2.
Changed in version 3.9: Updated to support [**PEP 584**](https://peps.python.org/pep-0584/)’s merge (`|`) and update (`|=`) operators. 

os.chdir(_path_)


os.fchdir(_fd_)


os.getcwd()
    
These functions are described in [Files and Directories](https://docs.python.org/3/library/os.html#os-file-dir). 

os.fsencode(_filename_)[¶](https://docs.python.org/3/library/os.html#os.fsencode "Link to this definition")
    
Encode [path-like](https://docs.python.org/3/glossary.html#term-path-like-object) _filename_ to the [filesystem encoding and error handler](https://docs.python.org/3/glossary.html#term-filesystem-encoding-and-error-handler); return [`bytes`](https://docs.python.org/3/library/stdtypes.html#bytes "bytes") unchanged.
[`fsdecode()`](https://docs.python.org/3/library/os.html#os.fsdecode "os.fsdecode") is the reverse function.
Added in version 3.2.
Changed in version 3.6: Support added to accept objects implementing the [`os.PathLike`](https://docs.python.org/3/library/os.html#os.PathLike "os.PathLike") interface.