Title: Python 3.9 Changelog: Error Handling and Module Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: Recent changes in Python include modifying error handling, where ZeroDivisionError has been replaced with OverflowError for certain inputs. Notable updates involve `os.cpu_count()` support for VxWorks RTOS, improvements to the `tarfile` module, changes in tkinter error handling, enhancements in asyncio for cancellation management, and reductions in import overhead.
---

Inputs that used to cause ZeroDivisionError now cause an OverflowError instead.
  * [bpo-41440](https://bugs.python.org/issue?@action=redirect&bpo=41440): Add [`os.cpu_count()`](https://docs.python.org/3/library/os.html#os.cpu_count "os.cpu_count") support for VxWorks RTOS.
  * [bpo-41316](https://bugs.python.org/issue?@action=redirect&bpo=41316): Fix the [`tarfile`](https://docs.python.org/3/library/tarfile.html#module-tarfile "tarfile: Read and write tar-format archive files.") module to write only basename of TAR file to GZIP compression header.
  * [bpo-41384](https://bugs.python.org/issue?@action=redirect&bpo=41384): Raise TclError instead of TypeError when an unknown option is passed to tkinter.OptionMenu.
  * [bpo-41317](https://bugs.python.org/issue?@action=redirect&bpo=41317): Use add_done_callback() in asyncio.loop.sock_accept() to unsubscribe reader early on cancellation.
  * [bpo-41364](https://bugs.python.org/issue?@action=redirect&bpo=41364): Reduce import overhead of [`uuid`](https://docs.python.org/3/library/uuid.html#module-uuid "uuid: UUID objects \(universally unique identifiers\) according to RFC 4122").
  * [bpo-35328](https://bugs.python.org/issue?@action=redirect&bpo=35328): Set the environment variable `VIRTUAL_ENV_PROMPT` at [`venv`](https://docs.python.org/3/library/venv.html#module-venv "venv: Creation of virtual environments.") activation.
  * [bpo-41341](https://bugs.python.org/issue?@action=redirect&bpo=41341): Recursive evaluation of `typing.ForwardRef` in `get_type_hints`.
  * [bpo-41344](https://bugs.python.org/issue?@action=redirect&bpo=41344): Prevent creating `shared_memory.SharedMemory` objects with `size=0`.
  * [bpo-41333](https://bugs.python.org/issue?@action=redirect&bpo=41333): `collections.OrderedDict.pop()` is now 2 times faster.
  * [bpo-41288](https://bugs.python.org/issue?@action=redirect&bpo=41288): Unpickling invalid NEWOBJ_EX opcode with the C implementation raises now UnpicklingError instead of crashing.
  * [bpo-39017](https://bugs.python.org/issue?@action=redirect&bpo=39017): Avoid infinite loop when reading specially crafted TAR files using the tarfile module ([**CVE 2019-20907**](https://www.cve.org/CVERecord?id=CVE-2019-20907)).
  * [bpo-41273](https://bugs.python.org/issue?@action=redirect&bpo=41273): Speed up any transport using `_ProactorReadPipeTransport` by calling `recv_into` instead of `recv`, thus not creating a new buffer for each `recv` call in the transport’s read loop.
  * [bpo-41235](https://bugs.python.org/issue?@action=redirect&bpo=41235): Fix the error handling in [`ssl.SSLContext.load_dh_params()`](https://docs.python.org/3/library/ssl.html#ssl.SSLContext.load_dh_params "ssl.SSLContext.load_dh_params").
  * [bpo-41207](https://bugs.python.org/issue?@action=redirect&bpo=41207): In distutils.spawn, restore expectation that DistutilsExecError is raised when the command is not found.
  * [bpo-29727](https://bugs.python.org/issue?@action=redirect&bpo=29727): Register [`array.array`](https://docs.python.org/3/library/array.html#array.array "array.array") as a [`MutableSequence`](https://docs.python.org/3/library/collections.abc.html#collections.abc.MutableSequence "collections.abc.MutableSequence"). Patch by Pablo Galindo.
  * [bpo-39168](https://bugs.python.org/issue?@action=redirect&bpo=39168): Remove the `__new__` method of [`typing.Generic`](https://docs.python.org/3/library/typing.html#typing.Generic "typing.Generic").
  * [bpo-41194](https://bugs.python.org/issue?@action=redirect&bpo=41194): Fix a crash in the `_ast` module: it can no longer be loaded more than once. It now uses a global state rather than a module state.
  * [bpo-41195](https://bugs.python.org/issue?@action=redirect&bpo=41195): Add read-only ssl.SSLContext.security_level attribute to retrieve the context’s security level.
  * [bpo-41193](https://bugs.python.org/issue?@action=redirect&bpo=41193): The `write_history()` atexit function of the readline completer now ignores any [`OSError`](https://docs.python.org/3/library/exceptions.html#OSError "OSError") to ignore error if the filesystem is read-only, instead of only ignoring [`FileNotFoundError`](https://docs.python.org/3/library/exceptions.html#FileNotFoundError "FileNotFoundError") and [`PermissionError`](https://docs.python.org/3/library/exceptions.html#PermissionError "PermissionError").
  * [bpo-41182](https://bugs.python.org/issue?@action=redirect&bpo=41182): selector: use DefaultSelector based upon implementation
  * [bpo-41161](https://bugs.python.org/issue?@action=redirect&bpo=41161): The decimal module now requires libmpdec-2.5.0.