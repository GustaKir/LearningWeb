Title: Python 3 ChangeLog - Recent Bug Fixes and Improvements
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section lists recent bug fixes and enhancements in Python, including the prioritization of warning options, opcode prediction improvements, enhanced error handling for mock assertions, and better control over symbol visibility in gcc.
---

age in order to prevent their callbacks from executing and causing a crash.
  * [bpo-38317](https://bugs.python.org/issue?@action=redirect&bpo=38317): Fix warnings options priority: `PyConfig.warnoptions` has the highest priority, as stated in the [**PEP 587**](https://peps.python.org/pep-0587/).
  * [bpo-38310](https://bugs.python.org/issue?@action=redirect&bpo=38310): Predict `BUILD_MAP_UNPACK_WITH_CALL` -> `CALL_FUNCTION_EX` opcode pairs in the main interpreter loop. Patch by Brandt Bucher.
  * [bpo-36871](https://bugs.python.org/issue?@action=redirect&bpo=36871): Improve error handling for the assert_has_calls and assert_has_awaits methods of mocks. Fixed a bug where any errors encountered while binding the expected calls to the mock’s spec were silently swallowed, leading to misleading error output.
  * [bpo-11410](https://bugs.python.org/issue?@action=redirect&bpo=11410): Better control over symbol visibility is provided through use of the visibility attributes available in gcc >= 4.0, provided in a uniform way across POSIX and Windows. The POSIX build files have been updated to compile with -fvisibility=hidden, minimising exported symbols.
  * [bpo-38219](https://bugs.python.org/issue?@action=redirect&bpo=38219): Optimized the [`dict`](https://docs.python.org/3/library/stdtypes.html#dict "dict") constructor and the [`update()`](https://docs.python.org/3/library/stdtypes.html#dict.update "dict.update") method for the case when the argument is a dict.
  * [bpo-38236](https://bugs.python.org/issue?@action=redirect&bpo=38236): Python now dumps path configuration if it fails to import the Python codecs of the filesystem and stdio encodings.
  * [bpo-38013](https://bugs.python.org/issue?@action=redirect&bpo=38013): Allow to call `async_generator_athrow().throw(...)` even for non-started async generator helper. It fixes annoying warning at the end of [`asyncio.run()`](https://docs.python.org/3/library/asyncio-runner.html#asyncio.run "asyncio.run") call.
  * [bpo-38124](https://bugs.python.org/issue?@action=redirect&bpo=38124): Fix an off-by-one error in PyState_AddModule that could cause out-of-bounds memory access.
  * [bpo-38116](https://bugs.python.org/issue?@action=redirect&bpo=38116): The select module is now PEP-384 compliant and no longer has static state
  * [bpo-38113](https://bugs.python.org/issue?@action=redirect&bpo=38113): ast module updated to PEP-384 and all statics removed
  * [bpo-38076](https://bugs.python.org/issue?@action=redirect&bpo=38076): The struct module is now PEP-384 compatible
  * [bpo-38075](https://bugs.python.org/issue?@action=redirect&bpo=38075): The random module is now PEP-384 compatible
  * [bpo-38074](https://bugs.python.org/issue?@action=redirect&bpo=38074): zlib module made PEP-384 compatible
  * [bpo-38073](https://bugs.python.org/issue?@action=redirect&bpo=38073): Make pwd extension module PEP-384 compatible
  * [bpo-38072](https://bugs.python.org/issue?@action=redirect&bpo=38072): grp module made PEP-384 compatible
  * [bpo-38069](https://bugs.python.org/issue?@action=redirect&bpo=38069): Make _posixsubprocess PEP-384 compatible
  * [bpo-38071](https://bugs.python.org/issue?@action=redirect&bpo=38071): Make termios extension module PEP-384 compatible
  * [bpo-38005](https://bugs.python.org/issue?@action=redirect&bpo=38005): Fixed comparing and creating of InterpreterID and ChannelID.
  * [bpo-36946](https://bugs.python.org/issue?@action=redirect&bpo=36946): Fix possible signed integer overflow when handling slices. Patch by hongweipeng.
  * [bpo-37994](https://bugs.python.org/issue?@action=redirect&bpo=37994): Fixed silencing arbitrary errors if an attribute lookup fails in several sites. Only AttributeError should be silenced.
  * [bpo-8425](https://bugs.python.org/issue?@action=redirect&bpo=8425): Optimize set difference_update for the case when the other set is much larger than the base set. (Suggested by Evgeny Kapun with code contributed by Michele Orrù).
  * [bpo-37966](https://bugs.python.org/issue?@action=redirect&bpo=37966): The implementation of [`is_normalized()`](https://docs.python.org/3/library/unicodedata.html#unicodedata.is_normalized "unicodedata.is_normalized") has been greatly sped up on strings that aren’t normalized, by implementing the full normalization-quick-check algorithm from the Unicode standard.
  * [bpo-37947](https://bugs.python.org/issue?@action=redirect&bpo=37947): Adjust correctly the recursion level in the symtable generation for named expressions.