Title: Mailbox Discard Method
URL: https://docs.python.org/3/library/mailbox.html
Summary: The `discard(key)` method removes a message identified by `key` from the mailbox. Unlike `remove()` or `__delitem__()`, it does not raise a `KeyError` if the key does not exist, which can be useful in concurrent environments.
---

discard(_key_)[¶](https://docs.python.org/3/library/mailbox.html#mailbox.Mailbox.discard "Link to this definition")
    
Delete the message corresponding to _key_ from the mailbox.
If no such message exists, a [`KeyError`](https://docs.python.org/3/library/exceptions.html#KeyError "KeyError") exception is raised if the method was called as [`remove()`](https://docs.python.org/3/library/mailbox.html#mailbox.Mailbox.remove "mailbox.Mailbox.remove") or [`__delitem__()`](https://docs.python.org/3/library/mailbox.html#mailbox.Mailbox.__delitem__ "mailbox.Mailbox.__delitem__") but no exception is raised if the method was called as [`discard()`](https://docs.python.org/3/library/mailbox.html#mailbox.Mailbox.discard "mailbox.Mailbox.discard"). The behavior of [`discard()`](https://docs.python.org/3/library/mailbox.html#mailbox.Mailbox.discard "mailbox.Mailbox.discard") may be preferred if the underlying mailbox format supports concurrent modification by other processes. 

__setitem__(_key_ , _message_)[¶](https://docs.python.org/3/library/mailbox.html#mailbox.Mailbox.__setitem__ "Link to this definition")
    
Replace the message corresponding to _key_ with _message_. Raise a [`KeyError`](https://docs.python.org/3/library/exceptions.html#KeyError "KeyError") exception if no message already corresponds to _key_.
As with [`add()`](https://docs.python.org/3/library/mailbox.html#mailbox.Mailbox.add "mailbox.Mailbox.add"), parameter _message_ may be a [`Message`](https://docs.python.org/3/library/mailbox.html#mailbox.Message "mailbox.Message") instance, an [`email.message.Message`](https://docs.python.org/3/library/email.compat32-message.html#email.message.Message "email.message.Message") instance, a string, a byte string, or a file-like object (which should be open in binary mode). If _message_ is an instance of the appropriate format-specific [`Message`](https://docs.python.org/3/library/mailbox.html#mailbox.Message "mailbox.Message") subclass (e.g., if it’s an [`mboxMessage`](https://docs.python.org/3/library/mailbox.html#mailbox.mboxMessage "mailbox.mboxMessage") instance and this is an [`mbox`](https://docs.python.org/3/library/mailbox.html#mailbox.mbox "mailbox.mbox") instance), its format-specific information is used. Otherwise, the format-specific information of the message that currently corresponds to _key_ is left unchanged. 

iterkeys()[¶](https://docs.python.org/3/library/mailbox.html#mailbox.Mailbox.iterkeys "Link to this definition")
    
Return an [iterator](https://docs.python.org/3/glossary.html#term-iterator) over all keys 

keys()[¶](https://docs.python.org/3/library/mailbox.html#mailbox.Mailbox.keys "Link to this definition")
    
The same as [`iterkeys()`](https://docs.python.org/3/library/mailbox.html#mailbox.Mailbox.iterkeys "mailbox.Mailbox.iterkeys"), except that a [`list`](https://docs.python.org/3/library/stdtypes.html#list "list") is returned rather than an [iterator](https://docs.python.org/3/glossary.html#term-iterator) 

itervalues()[¶](https://docs.python.org/3/library/mailbox.html#mailbox.Mailbox.itervalues "Link to this definition")


__iter__()[¶](https://docs.python.org/3/library/mailbox.html#mailbox.Mailbox.__iter__ "Link to this definition")
    
Return an [iterator](https://docs.python.org/3/glossary.html#term-iterator) over representations of all messages. The messages are represented as instances of the appropriate format-specific [`Message`](https://docs.python.org/3/library/mailbox.html#mailbox.Message "mailbox.Message") subclass unless a custom message factory was specified when the `Mailbox` instance was initialized.
Note
The behavior of [`__iter__()`](https://docs.python.org/3/library/mailbox.html#mailbox.Mailbox.__iter__ "mailbox.Mailbox.__iter__") is unlike that of dictionaries, which iterate over keys. 

values()[¶](https://docs.python.org/3/library/mailbox.html#mailbox.Mailbox.values "Link to this definition")
    
The same as [`itervalues()`](https://docs.python.org/3/library/mailbox.html#mailbox.Mailbox.itervalues "mailbox.Mailbox.itervalues"), except that a [`list`](https://docs.python.org/3/library/stdtypes.html#list "list") is returned rather than an [iterator](https://docs.python.org/3/glossary.html#term-iterator) 

iteritems()[¶](https://docs.python.org/3/library/mailbox.html#mailbox.Mailbox.iteritems "Link to this definition")
    
Return an [iterator](https://docs.python.org/3/glossary.html#term-iterator) over (_key_ , _message_) pairs, where _key_ is a key and _message_ is a message representation. The messages are represented as instances of the appropriate format-specific [`Message`](https://docs.python.org/3/library/mailbox.html#mailbox.Message "mailbox.Message") subclass unless a custom message factory was specified when the `Mailbox` instance was initialized.