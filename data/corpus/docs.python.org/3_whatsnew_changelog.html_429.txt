Title: C API Changes
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section details updates to the C API, including the relocation of the `PyGC_Head` structure, conversion of `PyObject_IS_GC()` macro to a function for better abstraction, and the addition of new public API functions for querying garbage collection status of Python objects.
---

### C API[¶](https://docs.python.org/3/whatsnew/changelog.html#id387 "Link to this heading")
  * [bpo-40241](https://bugs.python.org/issue?@action=redirect&bpo=40241): Move the `PyGC_Head` structure to the internal C API.
  * [bpo-40170](https://bugs.python.org/issue?@action=redirect&bpo=40170): Convert [`PyObject_IS_GC()`](https://docs.python.org/3/c-api/gcsupport.html#c.PyObject_IS_GC "PyObject_IS_GC") macro to a function to hide implementation details.
  * [bpo-40241](https://bugs.python.org/issue?@action=redirect&bpo=40241): Add the functions [`PyObject_GC_IsTracked()`](https://docs.python.org/3/c-api/gcsupport.html#c.PyObject_GC_IsTracked "PyObject_GC_IsTracked") and [`PyObject_GC_IsFinalized()`](https://docs.python.org/3/c-api/gcsupport.html#c.PyObject_GC_IsFinalized "PyObject_GC_IsFinalized") to the public API to allow to query if Python objects are being currently tracked or have been already finalized by the garbage collector respectively. Patch by Pablo Galindo.
  * [bpo-40170](https://bugs.python.org/issue?@action=redirect&bpo=40170): The `PyObject_NEW()` macro becomes an alias to the [`PyObject_New()`](https://docs.python.org/3/c-api/allocation.html#c.PyObject_New "PyObject_New") macro, and the `PyObject_NEW_VAR()` macro becomes an alias to the [`PyObject_NewVar()`](https://docs.python.org/3/c-api/allocation.html#c.PyObject_NewVar "PyObject_NewVar") macro, to hide implementation details. They no longer access directly the [`PyTypeObject.tp_basicsize`](https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_basicsize "PyTypeObject.tp_basicsize") member.
  * [bpo-40170](https://bugs.python.org/issue?@action=redirect&bpo=40170): [`PyType_HasFeature()`](https://docs.python.org/3/c-api/type.html#c.PyType_HasFeature "PyType_HasFeature") now always calls [`PyType_GetFlags()`](https://docs.python.org/3/c-api/type.html#c.PyType_GetFlags "PyType_GetFlags") to hide implementation details. Previously, it accessed directly the [`PyTypeObject.tp_flags`](https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_flags "PyTypeObject.tp_flags") member when the limited C API was not used.
  * [bpo-40170](https://bugs.python.org/issue?@action=redirect&bpo=40170): Convert the `PyObject_GET_WEAKREFS_LISTPTR()` macro to a function to hide implementation details: the macro accessed directly to the [`PyTypeObject.tp_weaklistoffset`](https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_weaklistoffset "PyTypeObject.tp_weaklistoffset") member.
  * [bpo-40170](https://bugs.python.org/issue?@action=redirect&bpo=40170): Convert [`PyObject_CheckBuffer()`](https://docs.python.org/3/c-api/buffer.html#c.PyObject_CheckBuffer "PyObject_CheckBuffer") macro to a function to hide implementation details: the macro accessed directly the [`PyTypeObject.tp_as_buffer`](https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_as_buffer "PyTypeObject.tp_as_buffer") member.
  * [bpo-40170](https://bugs.python.org/issue?@action=redirect&bpo=40170): Always declare [`PyIndex_Check()`](https://docs.python.org/3/c-api/number.html#c.PyIndex_Check "PyIndex_Check") as an opaque function to hide implementation details: remove `PyIndex_Check()` macro. The macro accessed directly the [`PyTypeObject.tp_as_number`](https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_as_number "PyTypeObject.tp_as_number") member.
  * [bpo-39947](https://bugs.python.org/issue?@action=redirect&bpo=39947): Add [`PyThreadState_GetID()`](https://docs.python.org/3/c-api/init.html#c.PyThreadState_GetID "PyThreadState_GetID") function: get the unique identifier of a Python thread state.


## Python 3.9.0 alpha 5[¶](https://docs.python.org/3/whatsnew/changelog.html#python-3-9-0-alpha-5 "Link to this heading")
_Release date: 2020-03-23_
### Security[¶](https://docs.python.org/3/whatsnew/changelog.html#id388 "Link to this heading")
  * [bpo-38576](https://bugs.python.org/issue?@action=redirect&bpo=38576): Disallow control characters in hostnames in http.client, addressing [**CVE 2019-18348**](https://www.cve.org/CVERecord?id=CVE-2019-18348). Such potentially malicious header injection URLs now cause a InvalidURL to be raised.