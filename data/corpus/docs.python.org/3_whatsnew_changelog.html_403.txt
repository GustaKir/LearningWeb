Title: Python Changelog Summary
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This document lists several bug fixes and feature enhancements in Python, including: iterable members in `enum.Flag` and `enum.IntFlag`, a fix for a race condition in `asyncio.ProactorEventLoop`, and the porting of the `marshal` and `_string` modules to the multi-phase initialization API per PEP 489. An iterator has also been added to `memoryview`.
---

t__`, and `__reduce_ex__`).
  * [bpo-32218](https://bugs.python.org/issue?@action=redirect&bpo=32218): `enum.Flag` and `enum.IntFlag` members are now iterable.
  * [bpo-39651](https://bugs.python.org/issue?@action=redirect&bpo=39651): Fix a race condition in the `call_soon_threadsafe()` method of `asyncio.ProactorEventLoop`: do nothing if the self-pipe socket has been closed.
  * [bpo-1635741](https://bugs.python.org/issue?@action=redirect&bpo=1635741): Port the `mashal` extension module to the multi-phase initialization API ([**PEP 489**](https://peps.python.org/pep-0489/)).
  * [bpo-1635741](https://bugs.python.org/issue?@action=redirect&bpo=1635741): Port the `_string` extension module to the multi-phase initialization API ([**PEP 489**](https://peps.python.org/pep-0489/)).
  * [bpo-41732](https://bugs.python.org/issue?@action=redirect&bpo=41732): Added an [iterator](https://docs.python.org/3/glossary.html#term-iterator) to [`memoryview`](https://docs.python.org/3/library/stdtypes.html#memoryview "memoryview").
  * [bpo-41720](https://bugs.python.org/issue?@action=redirect&bpo=41720): Fixed `turtle.Vec2D.__rmul__()` for arguments which are not int or float.
  * [bpo-41696](https://bugs.python.org/issue?@action=redirect&bpo=41696): Fix handling of debug mode in [`asyncio.run()`](https://docs.python.org/3/library/asyncio-runner.html#asyncio.run "asyncio.run"). This allows setting `PYTHONASYNCIODEBUG` or `-X dev` to enable asyncio debug mode when using [`asyncio.run()`](https://docs.python.org/3/library/asyncio-runner.html#asyncio.run "asyncio.run").
  * [bpo-41687](https://bugs.python.org/issue?@action=redirect&bpo=41687): Fix implementation of sendfile to be compatible with Solaris.
  * [bpo-41662](https://bugs.python.org/issue?@action=redirect&bpo=41662): No longer override exceptions raised in `__len__()` of a sequence of parameters in [`sqlite3`](https://docs.python.org/3/library/sqlite3.html#module-sqlite3 "sqlite3: A DB-API 2.0 implementation using SQLite 3.x.") with [`ProgrammingError`](https://docs.python.org/3/library/sqlite3.html#sqlite3.ProgrammingError "sqlite3.ProgrammingError").
  * [bpo-39010](https://bugs.python.org/issue?@action=redirect&bpo=39010): Restarting a `ProactorEventLoop` on Windows no longer logs spurious `ConnectionResetErrors`.
  * [bpo-41638](https://bugs.python.org/issue?@action=redirect&bpo=41638): [`ProgrammingError`](https://docs.python.org/3/library/sqlite3.html#sqlite3.ProgrammingError "sqlite3.ProgrammingError") message for absent parameter in [`sqlite3`](https://docs.python.org/3/library/sqlite3.html#module-sqlite3 "sqlite3: A DB-API 2.0 implementation using SQLite 3.x.") contains now the name of the parameter instead of its index when parameters are supplied as a dict.
  * [bpo-41662](https://bugs.python.org/issue?@action=redirect&bpo=41662): Fixed crash when mutate list of parameters during iteration in [`sqlite3`](https://docs.python.org/3/library/sqlite3.html#module-sqlite3 "sqlite3: A DB-API 2.0 implementation using SQLite 3.x.").
  * [bpo-41513](https://bugs.python.org/issue?@action=redirect&bpo=41513): Improved the accuracy of math.hypot().