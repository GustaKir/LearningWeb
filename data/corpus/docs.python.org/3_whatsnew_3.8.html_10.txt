Title: Python 3.8 New Features - cProfile and csv Enhancements
URL: https://docs.python.org/3/whatsnew/3.8.html
Summary: The `cProfile.Profile` class can now be utilized as a context manager to profile code blocks more conveniently. Additionally, the `csv.DictReader` now returns instances of `dict`, allowing for more straightforward data handling.
---

.7. If the extra features of `OrderedDict` are required, the suggested remediation is to cast the result to the desired type: `OrderedDict(nt._asdict())`. (Contributed by Raymond Hettinger in [bpo-35864](https://bugs.python.org/issue?@action=redirect&bpo=35864).)
### cProfile[¶](https://docs.python.org/3/whatsnew/3.8.html#cprofile "Link to this heading")
The [`cProfile.Profile`](https://docs.python.org/3/library/profile.html#profile.Profile "profile.Profile") class can now be used as a context manager. Profile a block of code by running:
```
importcProfile
with cProfile.Profile() as profiler:
   # code to be profiled
   ...

```

(Contributed by Scott Sanderson in [bpo-29235](https://bugs.python.org/issue?@action=redirect&bpo=29235).)
### csv[¶](https://docs.python.org/3/whatsnew/3.8.html#csv "Link to this heading")
The [`csv.DictReader`](https://docs.python.org/3/library/csv.html#csv.DictReader "csv.DictReader") now returns instances of [`dict`](https://docs.python.org/3/library/stdtypes.html#dict "dict") instead of a [`collections.OrderedDict`](https://docs.python.org/3/library/collections.html#collections.OrderedDict "collections.OrderedDict"). The tool is now faster and uses less memory while still preserving the field order. (Contributed by Michael Selik in [bpo-34003](https://bugs.python.org/issue?@action=redirect&bpo=34003).)
### curses[¶](https://docs.python.org/3/whatsnew/3.8.html#curses "Link to this heading")
Added a new variable holding structured version information for the underlying ncurses library: [`ncurses_version`](https://docs.python.org/3/library/curses.html#curses.ncurses_version "curses.ncurses_version"). (Contributed by Serhiy Storchaka in [bpo-31680](https://bugs.python.org/issue?@action=redirect&bpo=31680).)
### ctypes[¶](https://docs.python.org/3/whatsnew/3.8.html#ctypes "Link to this heading")
On Windows, [`CDLL`](https://docs.python.org/3/library/ctypes.html#ctypes.CDLL "ctypes.CDLL") and subclasses now accept a _winmode_ parameter to specify flags for the underlying `LoadLibraryEx` call. The default flags are set to only load DLL dependencies from trusted locations, including the path where the DLL is stored (if a full or partial path is used to load the initial DLL) and paths added by [`add_dll_directory()`](https://docs.python.org/3/library/os.html#os.add_dll_directory "os.add_dll_directory"). (Contributed by Steve Dower in [bpo-36085](https://bugs.python.org/issue?@action=redirect&bpo=36085).)
### datetime[¶](https://docs.python.org/3/whatsnew/3.8.html#datetime "Link to this heading")
Added new alternate constructors [`datetime.date.fromisocalendar()`](https://docs.python.org/3/library/datetime.html#datetime.date.fromisocalendar "datetime.date.fromisocalendar") and [`datetime.datetime.fromisocalendar()`](https://docs.python.org/3/library/datetime.html#datetime.datetime.fromisocalendar "datetime.datetime.fromisocalendar"), which construct [`date`](https://docs.python.org/3/library/datetime.html#datetime.date "datetime.date") and [`datetime`](https://docs.python.org/3/library/datetime.html#datetime.datetime "datetime.datetime") objects respectively from ISO year, week number, and weekday; these are the inverse of each class’s `isocalendar` method. (Contributed by Paul Ganssle in [bpo-36004](https://bugs.python.org/issue?@action=redirect&bpo=36004).)
### functools[¶](https://docs.python.org/3/whatsnew/3.8.html#functools "Link to this heading")
[`functools.lru_cache()`](https://docs.python.org/3/library/functools.html#functools.lru_cache "functools.lru_cache") can now be used as a straight decorator rather than as a function returning a decorator. So both of these are now supported:
```
@lru_cache
deff(x):
  ...
@lru_cache(maxsize=256)
deff(x):
  ...

```

(Contributed by Raymond Hettinger in [bpo-36772](https://bugs.python.org/issue?@action=redirect&bpo=36772).)
Added a new [`functools.cached_property()`](https://docs.python.org/3/library/functools.html#functools.cached_property "functools.cached_property") decorator, for computed properties cached for the life of the instance.
```
importfunctools
importstatistics
classDataset:
  def__init__(self, sequence_of_numbers):
   self.data = sequence_of_numbers
  @functools.cached_property
  defvariance(self):
   return statistics.variance(self.data)

```

(Contributed by Carl Meyer in [bpo-21145](https://bugs.python.org/issue?@action=redirect&bpo=21145))
Added a new [`functools.singledispatchmethod()`](https://docs.python.org/3/library/functools.html#functools.singledispatchmethod "functools.singledispatchmethod") decorator that converts methods into [generic functions](https://docs.python.org/3/glossary.html#term-generic-function) using [single dispatch](https://docs.python.org/3/glossary.html#term-single-dispatch):