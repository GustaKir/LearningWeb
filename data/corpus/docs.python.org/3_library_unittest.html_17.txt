Title: addTypeEqualityFunc Method in unittest
URL: https://docs.python.org/3/library/unittest.html
Summary: The addTypeEqualityFunc method registers a type-specific function to compare equality between two objects of the same type, called by assertEqual(). The function should raise a failure exception with a message when the objects are not equal.
---

addTypeEqualityFunc(_typeobj_ , _function_)[¶](https://docs.python.org/3/library/unittest.html#unittest.TestCase.addTypeEqualityFunc "Link to this definition")
    
Registers a type-specific method called by [`assertEqual()`](https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertEqual "unittest.TestCase.assertEqual") to check if two objects of exactly the same _typeobj_ (not subclasses) compare equal. _function_ must take two positional arguments and a third msg=None keyword argument just as [`assertEqual()`](https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertEqual "unittest.TestCase.assertEqual") does. It must raise [`self.failureException(msg)`](https://docs.python.org/3/library/unittest.html#unittest.TestCase.failureException "unittest.TestCase.failureException") when inequality between the first two parameters is detected – possibly providing useful information and explaining the inequalities in details in the error message.
Added in version 3.1.
The list of type-specific methods automatically used by [`assertEqual()`](https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertEqual "unittest.TestCase.assertEqual") are summarized in the following table. Note that it’s usually not necessary to invoke these methods directly.
Method | Used to compare | New in  
---|---|---  
[`assertMultiLineEqual(a, b)`](https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertMultiLineEqual "unittest.TestCase.assertMultiLineEqual") | strings | 3.1  
[`assertSequenceEqual(a, b)`](https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertSequenceEqual "unittest.TestCase.assertSequenceEqual") | sequences | 3.1  
[`assertListEqual(a, b)`](https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertListEqual "unittest.TestCase.assertListEqual") | lists | 3.1  
[`assertTupleEqual(a, b)`](https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertTupleEqual "unittest.TestCase.assertTupleEqual") | tuples | 3.1  
[`assertSetEqual(a, b)`](https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertSetEqual "unittest.TestCase.assertSetEqual") | sets or frozensets | 3.1  
[`assertDictEqual(a, b)`](https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertDictEqual "unittest.TestCase.assertDictEqual") | dicts | 3.1 

assertMultiLineEqual(_first_ , _second_ , _msg =None_)[¶](https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertMultiLineEqual "Link to this definition")
      
Test that the multiline string _first_ is equal to the string _second_. When not equal a diff of the two strings highlighting the differences will be included in the error message. This method is used by default when comparing strings with [`assertEqual()`](https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertEqual "unittest.TestCase.assertEqual").
Added in version 3.1. 

assertSequenceEqual(_first_ , _second_ , _msg =None_, _seq_type =None_)[¶](https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertSequenceEqual "Link to this definition")
    
Tests that two sequences are equal. If a _seq_type_ is supplied, both _first_ and _second_ must be instances of _seq_type_ or a failure will be raised. If the sequences are different an error message is constructed that shows the difference between the two.
This method is not called directly by [`assertEqual()`](https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertEqual "unittest.TestCase.assertEqual"), but it’s used to implement [`assertListEqual()`](https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertListEqual "unittest.TestCase.assertListEqual") and [`assertTupleEqual()`](https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertTupleEqual "unittest.TestCase.assertTupleEqual").
Added in version 3.1. 

assertListEqual(_first_ , _second_ , _msg =None_)[¶](https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertListEqual "Link to this definition")


assertTupleEqual(_first_ , _second_ , _msg =None_)[¶](https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertTupleEqual "Link to this definition")
    
Tests that two lists or tuples are equal. If not, an error message is constructed that shows only the differences between the two. An error is also raised if either of the parameters are of the wrong type. These methods are used by default when comparing lists or tuples with [`assertEqual()`](https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertEqual "unittest.TestCase.assertEqual").
Added in version 3.1.