Title: send_response Method in HTTP Server
URL: https://docs.python.org/3/library/http.server.html
Summary: The `send_response` method adds a response header to the headers buffer and logs the accepted request, writing the HTTP response line to an internal buffer along with 'Server' and 'Date' headers, sourced from the `version_string()` and `date_time_string()` methods.
---

send_response(_code_ , _message =None_)[¶](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler.send_response "Link to this definition")
    
Adds a response header to the headers buffer and logs the accepted request. The HTTP response line is written to the internal buffer, followed by _Server_ and _Date_ headers. The values for these two headers are picked up from the [`version_string()`](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler.version_string "http.server.BaseHTTPRequestHandler.version_string") and [`date_time_string()`](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler.date_time_string "http.server.BaseHTTPRequestHandler.date_time_string") methods, respectively. If the server does not intend to send any other headers using the [`send_header()`](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler.send_header "http.server.BaseHTTPRequestHandler.send_header") method, then [`send_response()`](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler.send_response "http.server.BaseHTTPRequestHandler.send_response") should be followed by an [`end_headers()`](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler.end_headers "http.server.BaseHTTPRequestHandler.end_headers") call.
Changed in version 3.3: Headers are stored to an internal buffer and [`end_headers()`](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler.end_headers "http.server.BaseHTTPRequestHandler.end_headers") needs to be called explicitly. 

send_header(_keyword_ , _value_)[¶](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler.send_header "Link to this definition")
    
Adds the HTTP header to an internal buffer which will be written to the output stream when either [`end_headers()`](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler.end_headers "http.server.BaseHTTPRequestHandler.end_headers") or [`flush_headers()`](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler.flush_headers "http.server.BaseHTTPRequestHandler.flush_headers") is invoked. _keyword_ should specify the header keyword, with _value_ specifying its value. Note that, after the send_header calls are done, [`end_headers()`](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler.end_headers "http.server.BaseHTTPRequestHandler.end_headers") MUST BE called in order to complete the operation.
Changed in version 3.2: Headers are stored in an internal buffer. 

send_response_only(_code_ , _message =None_)[¶](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler.send_response_only "Link to this definition")
    
Sends the response header only, used for the purposes when `100 Continue` response is sent by the server to the client. The headers not buffered and sent directly the output stream.If the _message_ is not specified, the HTTP message corresponding the response _code_ is sent.
Added in version 3.2. 

end_headers()[¶](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler.end_headers "Link to this definition")
    
Adds a blank line (indicating the end of the HTTP headers in the response) to the headers buffer and calls [`flush_headers()`](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler.flush_headers "http.server.BaseHTTPRequestHandler.flush_headers").
Changed in version 3.2: The buffered headers are written to the output stream. 

flush_headers()[¶](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler.flush_headers "Link to this definition")
    
Finally send the headers to the output stream and flush the internal headers buffer.
Added in version 3.3. 

log_request(_code ='-'_, _size ='-'_)[¶](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler.log_request "Link to this definition")
    
Logs an accepted (successful) request. _code_ should specify the numeric HTTP code associated with the response. If a size of the response is available, then it should be passed as the _size_ parameter. 

log_error(_..._)[¶](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler.log_error "Link to this definition")
    
Logs an error when a request cannot be fulfilled. By default, it passes the message to [`log_message()`](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler.log_message "http.server.BaseHTTPRequestHandler.log_message"), so it takes the same arguments (_format_ and additional values).