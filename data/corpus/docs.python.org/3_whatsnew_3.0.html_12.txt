Title: Enhancements in Exception Handling
URL: https://docs.python.org/3/whatsnew/3.0.html
Summary: In Python 3.0, exceptions can now reference primary exceptions through the `__cause__` attribute, allowing for clearer traceback chains. This behavior is complemented by the `__context__` attribute and is similar to mechanisms in Java. Additionally, per PEP 3134, exceptions now store their traceback as a `__traceback__` attribute.
---

```

(where _primary_exception_ is any expression that produces an exception object, probably an exception that was previously caught). In this case, the primary exception is stored on the [`__cause__`](https://docs.python.org/3/library/exceptions.html#BaseException.__cause__ "BaseException.__cause__") attribute of the secondary exception. The traceback printed when an unhandled exception occurs walks the chain of `__cause__` and [`__context__`](https://docs.python.org/3/library/exceptions.html#BaseException.__context__ "BaseException.__context__") attributes and prints a separate traceback for each component of the chain, with the primary exception at the top. (Java users may recognize this behavior.)
  * [**PEP 3134**](https://peps.python.org/pep-3134/): Exception objects now store their traceback as the [`__traceback__`](https://docs.python.org/3/library/exceptions.html#BaseException.__traceback__ "BaseException.__traceback__") attribute. This means that an exception object now contains all the information pertaining to an exception, and there are fewer reasons to use [`sys.exc_info()`](https://docs.python.org/3/library/sys.html#sys.exc_info "sys.exc_info") (though the latter is not removed).
  * A few exception messages are improved when Windows fails to load an extension module. For example, `error code 193` is now `%1 is not a valid Win32 application`. Strings now deal with non-English locales.


## Miscellaneous Other Changes[¶](https://docs.python.org/3/whatsnew/3.0.html#miscellaneous-other-changes "Link to this heading")
### Operators And Special Methods[¶](https://docs.python.org/3/whatsnew/3.0.html#operators-and-special-methods "Link to this heading")
  * `!=` now returns the opposite of `==`, unless `==` returns [`NotImplemented`](https://docs.python.org/3/library/constants.html#NotImplemented "NotImplemented").
  * The concept of “unbound methods” has been removed from the language. When referencing a method as a class attribute, you now get a plain function object.
  * `__getslice__()`, `__setslice__()` and `__delslice__()` were killed. The syntax `a[i:j]` now translates to `a.__getitem__(slice(i, j))` (or [`__setitem__()`](https://docs.python.org/3/reference/datamodel.html#object.__setitem__ "object.__setitem__") or [`__delitem__()`](https://docs.python.org/3/reference/datamodel.html#object.__delitem__ "object.__delitem__"), when used as an assignment or deletion target, respectively).
  * [**PEP 3114**](https://peps.python.org/pep-3114/): the standard [`next()`](https://docs.python.org/3/library/functions.html#next "next") method has been renamed to [`__next__()`](https://docs.python.org/3/library/stdtypes.html#iterator.__next__ "iterator.__next__").
  * The `__oct__()` and `__hex__()` special methods are removed – [`oct()`](https://docs.python.org/3/library/functions.html#oct "oct") and [`hex()`](https://docs.python.org/3/library/functions.html#hex "hex") use [`__index__()`](https://docs.python.org/3/reference/datamodel.html#object.__index__ "object.__index__") now to convert the argument to an integer.
  * Removed support for `__members__` and `__methods__`.
  * The function attributes named `func_X` have been renamed to use the `__X__` form, freeing up these names in the function attribute namespace for user-defined attributes. To wit, `func_closure`, `func_code`, `func_defaults`, `func_dict`, `func_doc`, `func_globals`, `func_name` were renamed to [`__closure__`](https://docs.python.org/3/reference/datamodel.html#function.__closure__ "function.__closure__"), [`__code__`](https://docs.python.org/3/reference/datamodel.html#function.__code__ "function.__code__"), [`__defaults__`](https://docs.python.org/3/reference/datamodel.html#function.__defaults__ "function.__defaults__"), [`__dict__`](https://docs.python.org/3/reference/datamodel.html#function.__dict__ "function.__dict__"), [`__doc__`](https://docs.python.org/3/reference/datamodel.html#function.__doc__ "function.__doc__"), [`__globals__`](https://docs.python.org/3/reference/datamodel.html#function.__globals__ "function.__globals__"), [`__name__`](https://docs.python.org/3/reference/datamodel.html#function.__name__ "function.__name__"), respectively.
  * `__nonzero__()` is now [`__bool__()`](https://docs.python.org/3/reference/datamodel.html#object.__bool__ "object.__bool__").