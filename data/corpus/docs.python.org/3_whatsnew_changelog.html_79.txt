Title: Library Updates in Python
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section outlines key improvements and changes in the Python standard library, including performance enhancements for `os.path.join()` and `os.path.expanduser()`, error handling updates in `posixpath.relpath()`, mailbox ownership preservation in `mailbox.mbox`, and new error raising in `getcwd()`.
---

### Library[¶](https://docs.python.org/3/whatsnew/changelog.html#id83 "Link to this heading")
  * [gh-117648](https://github.com/python/cpython/issues/117648): Improve performance of [`os.path.join()`](https://docs.python.org/3/library/os.path.html#os.path.join "os.path.join") and [`os.path.expanduser()`](https://docs.python.org/3/library/os.path.html#os.path.expanduser "os.path.expanduser").
  * [gh-117584](https://github.com/python/cpython/issues/117584): Raise [`TypeError`](https://docs.python.org/3/library/exceptions.html#TypeError "TypeError") for non-paths in `posixpath.relpath()`.
  * [gh-117467](https://github.com/python/cpython/issues/117467): Preserve mailbox ownership when rewriting in `mailbox.mbox.flush()`. Patch by Tony Mountifield.
  * [gh-114848](https://github.com/python/cpython/issues/114848): Raise [`FileNotFoundError`](https://docs.python.org/3/library/exceptions.html#FileNotFoundError "FileNotFoundError") when `getcwd()` returns ‘(unreachable)’, which can happen on Linux >= 2.6.36 with glibc < 2.27.
  * [gh-117459](https://github.com/python/cpython/issues/117459): `asyncio.asyncio.run_coroutine_threadsafe()` now keeps the traceback of `CancelledError`, [`TimeoutError`](https://docs.python.org/3/library/exceptions.html#TimeoutError "TimeoutError") and `InvalidStateError` which are raised in the coroutine.
  * [gh-117381](https://github.com/python/cpython/issues/117381): Fix error message for `ntpath.commonpath()`.
  * [gh-117337](https://github.com/python/cpython/issues/117337): Deprecate undocumented `glob.glob0()` and `glob.glob1()` functions. Use [`glob.glob()`](https://docs.python.org/3/library/glob.html#glob.glob "glob.glob") and pass a directory to its _root_dir_ argument instead.
  * [gh-117349](https://github.com/python/cpython/issues/117349): Optimise several functions in [`os.path`](https://docs.python.org/3/library/os.path.html#module-os.path "os.path: Operations on pathnames.").
  * [gh-117348](https://github.com/python/cpython/issues/117348): Refactored `configparser.RawConfigParser._read()` to reduce cyclometric complexity and improve comprehensibility.
  * [gh-117335](https://github.com/python/cpython/issues/117335): Raise TypeError for non-sequences for `ntpath.commonpath()`.
  * [gh-66449](https://github.com/python/cpython/issues/66449): [`configparser.ConfigParser`](https://docs.python.org/3/library/configparser.html#configparser.ConfigParser "configparser.ConfigParser") now accepts unnamed sections before named ones, if configured to do so.
  * [gh-88014](https://github.com/python/cpython/issues/88014): In documentation of [`gzip.GzipFile`](https://docs.python.org/3/library/gzip.html#gzip.GzipFile "gzip.GzipFile") in module gzip, explain data type of optional constructor argument _mtime_ , and recommend `mtime = 0` for generating deterministic streams.
  * [gh-117310](https://github.com/python/cpython/issues/117310): Fixed an unlikely early & extra `Py_DECREF` triggered crash in [`ssl`](https://docs.python.org/3/library/ssl.html#module-ssl "ssl: TLS/SSL wrapper for socket objects") when creating a new `_ssl._SSLContext` if CPython was built implausibly such that the default cipher list is empty **or** the SSL library it was linked against reports a failure from its C `SSL_CTX_set_cipher_list()` API.
  * [gh-117294](https://github.com/python/cpython/issues/117294): A `DocTestCase` now reports as skipped if all examples in the doctest are skipped.
  * [gh-98966](https://github.com/python/cpython/issues/98966): In [`subprocess`](https://docs.python.org/3/library/subprocess.html#module-subprocess "subprocess: Subprocess management."), raise a more informative message when `stdout=STDOUT`.
  * [gh-117225](https://github.com/python/cpython/issues/117225): doctest: only print “and X failed” when non-zero, don’t pluralise “1 items”. Patch by Hugo van Kemenade.
  * [gh-117205](https://github.com/python/cpython/issues/117205): Speed up [`compileall.compile_dir()`](https://docs.python.org/3/library/compileall.html#compileall.compile_dir "compileall.compile_dir") by 20% when using multiprocessing by increasing `chunksize`.
  * [gh-117178](https://github.com/python/cpython/issues/117178): Fix regression in lazy loading of self-referential modules, introduced in [gh-114781](https://github.com/python/cpython/issues/114781).
  * [gh-112383](https://github.com/python/cpython/issues/112383): Fix [`dis`](https://docs.python.org/3/library/dis.html#module-dis "dis: Disassembler for Python bytecode.") module’s handling of `ENTER_EXECUTOR` instructions.
  * [gh-117182](https://github.com/python/cpython/issues/117182): Lazy-loading of modules that modify their own `__class__` no longer reverts the `__class__` to [`types.ModuleType`](https://docs.python.org/3/library/types.html#types.ModuleType "types.ModuleType").
  * [gh-117084](https://github.com/python/cpython/issues/117084): Fix [`zipfile`](https://docs.python.org/3/library/zipfile.html#module-zipfile "zipfile: Read and write ZIP-format