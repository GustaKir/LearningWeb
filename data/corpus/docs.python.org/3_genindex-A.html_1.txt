Title: Index of Locale Constants and Functions
URL: https://docs.python.org/3/genindex-A.html
Summary: This document chunk contains links to various constants and functions related to locale settings in Python, specifically the abbreviations for month names (ABMON_1 to ABMON_12) and the abort function in the C API.
---

cale.html#locale.ABMON_11)
  * [ABMON_12 (in module locale)](https://docs.python.org/3/library/locale.html#locale.ABMON_12)
  * [ABMON_2 (in module locale)](https://docs.python.org/3/library/locale.html#locale.ABMON_2)
  * [ABMON_3 (in module locale)](https://docs.python.org/3/library/locale.html#locale.ABMON_3)
  * [ABMON_4 (in module locale)](https://docs.python.org/3/library/locale.html#locale.ABMON_4)
  * [ABMON_5 (in module locale)](https://docs.python.org/3/library/locale.html#locale.ABMON_5)
  * [ABMON_6 (in module locale)](https://docs.python.org/3/library/locale.html#locale.ABMON_6)
  * [ABMON_7 (in module locale)](https://docs.python.org/3/library/locale.html#locale.ABMON_7)
  * [ABMON_8 (in module locale)](https://docs.python.org/3/library/locale.html#locale.ABMON_8)
  * [ABMON_9 (in module locale)](https://docs.python.org/3/library/locale.html#locale.ABMON_9)
  * [abort (C function)](https://docs.python.org/3/c-api/sys.html#index-2)
  * [ABORT (in module tkinter.messagebox)](https://docs.python.org/3/library/tkinter.messagebox.html#tkinter.messagebox.ABORT)
  * [abort() (asyncio.Barrier method)](https://docs.python.org/3/library/asyncio-sync.html#asyncio.Barrier.abort)
    * [(asyncio.DatagramTransport method)](https://docs.python.org/3/library/asyncio-protocol.html#asyncio.DatagramTransport.abort)
    * [(asyncio.WriteTransport method)](https://docs.python.org/3/library/asyncio-protocol.html#asyncio.WriteTransport.abort)
    * [(ftplib.FTP method)](https://docs.python.org/3/library/ftplib.html#ftplib.FTP.abort)
    * [(in module os)](https://docs.python.org/3/library/os.html#os.abort)
    * [(threading.Barrier method)](https://docs.python.org/3/library/threading.html#threading.Barrier.abort)
  * [abort_clients() (asyncio.Server method)](https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.Server.abort_clients)
  * [ABORTRETRYIGNORE (in module tkinter.messagebox)](https://docs.python.org/3/library/tkinter.messagebox.html#tkinter.messagebox.ABORTRETRYIGNORE)
  * [above() (curses.panel.Panel method)](https://docs.python.org/3/library/curses.panel.html#curses.panel.Panel.above)
  * [ABOVE_NORMAL_PRIORITY_CLASS (in module subprocess)](https://docs.python.org/3/library/subprocess.html#subprocess.ABOVE_NORMAL_PRIORITY_CLASS)
  * abs 
    * [built-in function](https://docs.python.org/3/c-api/number.html#index-2), [[1]](https://docs.python.org/3/reference/datamodel.html#index-105)
  * abs() 
    * [built-in function](https://docs.python.org/3/library/functions.html#abs)
  * [abs() (decimal.Context method)](https://docs.python.org/3/library/decimal.html#decimal.Context.abs)
    * [(in module operator)](https://docs.python.org/3/library/operator.html#operator.abs)
  * [absolute() (pathlib.Path method)](https://docs.python.org/3/library/pathlib.html#pathlib.Path.absolute)
  * [AbsoluteLinkError](https://docs.python.org/3/library/tarfile.html#tarfile.AbsoluteLinkError)
  * [AbsolutePathError](https://docs.python.org/3/library/tarfile.html#tarfile.AbsolutePathError)
  * [abspath() (in module os.path)](https://docs.python.org/3/library/os.path.html#os.path.abspath)
  * [**abstract base class**](https://docs.python.org/3/glossary.html#term-abstract-base-class)
  * [AbstractAsyncContextManager (class in contextlib)](https://docs.python.org/3/library/contextlib.html#contextlib.AbstractAsyncContextManager)
  * [AbstractBasicAuthHandler (class in urllib.request)](https://docs.python.org/3/library/urllib.request.html#urllib.request.AbstractBasicAuthHandler)
  * [AbstractChildWatcher (class in asyncio)](https://docs.python.org/3/library/asyncio-policy.html#asyncio.AbstractChildWatcher)
  * [abstractclassmethod() (in module abc)](https://docs.python.org/3/library/abc.html#abc.abstractclassmethod)
  * [AbstractContextManager (class in contextlib)](https://docs.python.org/3/library/contextlib.html#contextlib.AbstractContextManager)
  * [AbstractDigestAuthHandler (class in urllib.request)](https://docs.python.org/3/library/urllib.request.html#urllib.request.AbstractDigestAuthHandler)
  * [AbstractEventLoop (class in asyncio)](https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.AbstractEventLoop)
  * [AbstractEventLoopPolicy (class in asyncio)](https://docs.python.org/3/library/asyncio-policy.html#asyncio.AbstractEventLoopPolicy)
  * [abstractmethod() (in module abc)](https://docs.python.org/3/library/abc.html#abc.abstractmethod)
  * [abstractproperty() (in module abc)](https://docs.python.org/3/library/abc.html#abc.abstractproperty)
  * [AbstractSet (class in typing)](https://docs.python.org/3/library/typing.html#typing.AbstractSet)
  * [abstractstaticmethod() (in module abc)](https://docs.python.org/3/library/abc.html#abc.abstractstaticmethod)
  * [accept() (multiprocessing.connection.Listener method)](https://docs.python.org/3/library/multiprocessing.html#multiprocessing.connection.Listener.accept)
    * [(socket.socket method)](https://docs.python.org/3/library/socket.html#socket.socket.accep