Title: Memoryview Objects
URL: https://docs.python.org/3/c-api/memoryview.html
Summary: This section introduces memoryview objects in Python, allowing access to the memory of other objects without copying. It serves as a bridge to more efficient data handling, particularly with binary data.
---

[ ![Python logo](https://docs.python.org/3/_static/py.svg) ](https://www.python.org/) dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
Theme  Auto Light Dark
#### Previous topic
[Slice Objects](https://docs.python.org/3/c-api/slice.html "previous chapter")
#### Next topic
[Weak Reference Objects](https://docs.python.org/3/c-api/weakref.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/c-api/memoryview.rst)


### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/c-api/weakref.html "Weak Reference Objects") |
  * [previous](https://docs.python.org/3/c-api/slice.html "Slice Objects") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [Python/C API Reference Manual](https://docs.python.org/3/c-api/index.html) »
  * [Concrete Objects Layer](https://docs.python.org/3/c-api/concrete.html) »
  * [MemoryView objects](https://docs.python.org/3/c-api/memoryview.html)
  * | 
  * Theme  Auto Light Dark |


# MemoryView objects[¶](https://docs.python.org/3/c-api/memoryview.html#index-0 "Link to this heading")
A [`memoryview`](https://docs.python.org/3/library/stdtypes.html#memoryview "memoryview") object exposes the C level [buffer interface](https://docs.python.org/3/c-api/buffer.html#bufferobjects) as a Python object which can then be passed around like any other object. 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyMemoryView_FromObject([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*obj)[¶](https://docs.python.org/3/c-api/memoryview.html#c.PyMemoryView_FromObject "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Create a memoryview object from an object that provides the buffer interface. If _obj_ supports writable buffer exports, the memoryview object will be read/write, otherwise it may be either read-only or read/write at the discretion of the exporter. 

PyBUF_READ[¶](https://docs.python.org/3/c-api/memoryview.html#c.PyBUF_READ "Link to this definition")
    
Flag to request a readonly buffer. 

PyBUF_WRITE[¶](https://docs.python.org/3/c-api/memoryview.html#c.PyBUF_WRITE "Link to this definition")
    
Flag to request a writable buffer. 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyMemoryView_FromMemory(char*mem, [Py_ssize_t](https://docs.python.org/3/c-api/intro.html#c.Py_ssize_t "Py_ssize_t")size, intflags)[¶](https://docs.python.org/3/c-api/memoryview.html#c.PyMemoryView_FromMemory "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable) since version 3.7._
Create a memoryview object using _mem_ as the underlying buffer. _flags_ can be one of [`PyBUF_READ`](https://docs.python.org/3/c-api/memoryview.html#c.PyBUF_READ "PyBUF_READ") or [`PyBUF_WRITE`](https://docs.python.org/3/c-api/memoryview.html#c.PyBUF_WRITE "PyBUF_WRITE").
Added in version 3.3. 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyMemoryView_FromBuffer(const[Py_buffer](https://docs.python.org/3/c-api/buffer.html#c.Py_buffer "Py_buffer")*view)[¶](https://docs.python.org/3/c-api/memoryview.html#c.PyMemoryView_FromBuffer "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable) since version 3.11._
Create a memoryview object wrapping the given buffer structure _view_. For simple byte buffers, [`PyMemoryView_FromMemory()`](https://docs.python.org/3/c-api/memoryview.html#c.PyMemoryView_FromMemory "PyMemoryView_FromMemory") is the preferred function.