Title: Garbage Collection Debugging Flags in Python
URL: https://docs.python.org/3/library/gc.html
Summary: This section outlines various debugging flags available in Python's garbage collection module, including DEBUG_UNCOLLECTABLE, which logs uncollectable objects; DEBUG_SAVEALL, which prevents unreachable objects from being freed for debugging; and DEBUG_LEAK, which aids in tracking memory leaks.
---

gc.DEBUG_UNCOLLECTABLE[¶](https://docs.python.org/3/library/gc.html#gc.DEBUG_UNCOLLECTABLE "Link to this definition")
    
Print information of uncollectable objects found (objects which are not reachable but cannot be freed by the collector). These objects will be added to the `garbage` list.
Changed in version 3.2: Also print the contents of the [`garbage`](https://docs.python.org/3/library/gc.html#gc.garbage "gc.garbage") list at [interpreter shutdown](https://docs.python.org/3/glossary.html#term-interpreter-shutdown), if it isn’t empty. 

gc.DEBUG_SAVEALL[¶](https://docs.python.org/3/library/gc.html#gc.DEBUG_SAVEALL "Link to this definition")
    
When set, all unreachable objects found will be appended to _garbage_ rather than being freed. This can be useful for debugging a leaking program. 

gc.DEBUG_LEAK[¶](https://docs.python.org/3/library/gc.html#gc.DEBUG_LEAK "Link to this definition")
    
The debugging flags necessary for the collector to print information about a leaking program (equal to `DEBUG_COLLECTABLE | DEBUG_UNCOLLECTABLE | DEBUG_SAVEALL`).
#### Previous topic
[`__future__` — Future statement definitions](https://docs.python.org/3/library/__future__.html "previous chapter")
#### Next topic
[`inspect` — Inspect live objects](https://docs.python.org/3/library/inspect.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/gc.rst)


«
### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/library/inspect.html "inspect — Inspect live objects") |
  * [previous](https://docs.python.org/3/library/__future__.html "__future__ — Future statement definitions") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [The Python Standard Library](https://docs.python.org/3/library/index.html) »
  * [Python Runtime Services](https://docs.python.org/3/library/python.html) »
  * [`gc` — Garbage Collector interface](https://docs.python.org/3/library/gc.html)
  * | 
  * Theme  Auto Light Dark |


© [ Copyright ](https://docs.python.org/3/copyright.html) 2001-2025, Python Software Foundation. This page is licensed under the Python Software Foundation License Version 2. Examples, recipes, and other code in the documentation are additionally licensed under the Zero Clause BSD License. See [History and License](https://docs.python.org/license.html) for more information. The Python Software Foundation is a non-profit corporation. [Please donate.](https://www.python.org/psf/donations/) Last updated on Apr 27, 2025 (05:38 UTC). [Found a bug](https://docs.python.org/bugs.html)? Created using [Sphinx](https://www.sphinx-doc.org/) 8.2.3.