Title: py_compile Module Documentation
URL: https://docs.python.org/3/library/py_compile.html
Summary: The `py_compile.compile` function compiles a specified source file into byte-code, creating a cache file by default in the PEP 3147/PEP 488 format. Options include specifying a custom byte-code file name, using an alternate source name for exception tracebacks, and configuring error handling.
---

py_compile.compile(_file_ , _cfile =None_, _dfile =None_, _doraise =False_, _optimize =-1_, _invalidation_mode =PycInvalidationMode.TIMESTAMP_, _quiet =0_)[Â¶](https://docs.python.org/3/library/py_compile.html#py_compile.compile "Link to this definition")
    
Compile a source file to byte-code and write out the byte-code cache file. The source code is loaded from the file named _file_. The byte-code is written to _cfile_ , which defaults to the [**PEP 3147**](https://peps.python.org/pep-3147/)/[**PEP 488**](https://peps.python.org/pep-0488/) path, ending in `.pyc`. For example, if _file_ is `/foo/bar/baz.py` _cfile_ will default to `/foo/bar/__pycache__/baz.cpython-32.pyc` for Python 3.2. If _dfile_ is specified, it is used instead of _file_ as the name of the source file from which source lines are obtained for display in exception tracebacks. If _doraise_ is true, a [`PyCompileError`](https://docs.python.org/3/library/py_compile.html#py_compile.PyCompileError "py_compile.PyCompileError") is raised when an error is encountered while compiling _file_. If _doraise_ is false (the default), an error string is written to `sys.stderr`, but no exception is raised. This function returns the path to byte-compiled file, i.e. whatever _cfile_ value was used.
The _doraise_ and _quiet_ arguments determine how errors are handled while compiling file. If _quiet_ is 0 or 1, and _doraise_ is false, the default behaviour is enabled: an error string is written to `sys.stderr`, and the function returns `None` instead of a path. If _doraise_ is true, a [`PyCompileError`](https://docs.python.org/3/library/py_compile.html#py_compile.PyCompileError "py_compile.PyCompileError") is raised instead. However if _quiet_ is 2, no message is written, and _doraise_ has no effect.
If the path that _cfile_ becomes (either explicitly specified or computed) is a symlink or non-regular file, [`FileExistsError`](https://docs.python.org/3/library/exceptions.html#FileExistsError "FileExistsError") will be raised. This is to act as a warning that import will turn those paths into regular files if it is allowed to write byte-compiled files to those paths. This is a side-effect of import using file renaming to place the final byte-compiled file into place to prevent concurrent file writing issues.
_optimize_ controls the optimization level and is passed to the built-in [`compile()`](https://docs.python.org/3/library/functions.html#compile "compile") function. The default of `-1` selects the optimization level of the current interpreter.
_invalidation_mode_ should be a member of the [`PycInvalidationMode`](https://docs.python.org/3/library/py_compile.html#py_compile.PycInvalidationMode "py_compile.PycInvalidationMode") enum and controls how the generated bytecode cache is invalidated at runtime. The default is [`PycInvalidationMode.CHECKED_HASH`](https://docs.python.org/3/library/py_compile.html#py_compile.PycInvalidationMode.CHECKED_HASH "py_compile.PycInvalidationMode.CHECKED_HASH") if the `SOURCE_DATE_EPOCH` environment variable is set, otherwise the default is [`PycInvalidationMode.TIMESTAMP`](https://docs.python.org/3/library/py_compile.html#py_compile.PycInvalidationMode.TIMESTAMP "py_compile.PycInvalidationMode.TIMESTAMP").
Changed in version 3.2: Changed default value of _cfile_ to be [**PEP 3147**](https://peps.python.org/pep-3147/)-compliant. Previous default was _file_ + `'c'` (`'o'` if optimization was enabled). Also added the _optimize_ parameter.
Changed in version 3.4: Changed code to use [`importlib`](https://docs.python.org/3/library/importlib.html#module-importlib "importlib: The implementation of the import machinery.") for the byte-code cache file writing. This means file creation/writing semantics now match what [`importlib`](https://docs.python.org/3/library/importlib.html#module-importlib "importlib: The implementation of the import machinery.") does, e.g. permissions, write-and-move semantics, etc. Also added the caveat that [`FileExistsError`](https://docs.python.org/3/library/exceptions.html#FileExistsError "FileExistsError") is raised if _cfile_ is a symlink or non-regular file.
Changed in version 3.7: The _invalidation_mode_ parameter was added as specified in [**PEP 552**](https://peps.python.org/pep-0552/). If the `SOURCE_DATE_EPOCH` environment variable is set, _invalidation_mode_ will be forced to [`PycInvalidationMode.CHECKED_HASH`](https://docs.python.org/3/library/py_compile.html#py_compile.PycInvalidationMode.CHECKED_HASH "py_compile.PycInvalidationMode.CHECKED_HASH").
Changed in version 3.7.2: The `SOURCE_DATE_EPOCH` environment variable no longer overrides the value of the _invalidation_mode_ argument, and determines its default value instead.
Changed in version 3.8: The _quiet_ parameter was added.