Title: Capsules in Python 2.7 and PyCObject Deprecation
URL: https://docs.python.org/3/whatsnew/2.7.html
Summary: Python 2.7 integrates capsules for extension-module APIs, replacing the old `PyCObject` with backward compatibility. Usage of `PyCObject_AsVoidPtr()` will trigger a silent `PendingDeprecationWarning` due to this transition.
---

```

You are assured that `vtable` points to whatever you’re expecting. If a different capsule was passed in, [`PyCapsule_IsValid()`](https://docs.python.org/3/c-api/capsule.html#c.PyCapsule_IsValid "PyCapsule_IsValid") would detect the mismatched name and return false. Refer to [Providing a C API for an Extension Module](https://docs.python.org/3/extending/extending.html#using-capsules) for more information on using these objects.
Python 2.7 now uses capsules internally to provide various extension-module APIs, but the `PyCObject_AsVoidPtr()` was modified to handle capsules, preserving compile-time compatibility with the `PyCObject` interface. Use of `PyCObject_AsVoidPtr()` will signal a [`PendingDeprecationWarning`](https://docs.python.org/3/library/exceptions.html#PendingDeprecationWarning "PendingDeprecationWarning"), which is silent by default.
Implemented in Python 3.1 and backported to 2.7 by Larry Hastings; discussed in [bpo-5630](https://bugs.python.org/issue?@action=redirect&bpo=5630).
### Port-Specific Changes: Windows[¶](https://docs.python.org/3/whatsnew/2.7.html#port-specific-changes-windows "Link to this heading")
  * The [`msvcrt`](https://docs.python.org/3/library/msvcrt.html#module-msvcrt "msvcrt: Miscellaneous useful routines from the MS VC++ runtime. \(Windows\)") module now contains some constants from the `crtassem.h` header file: [`CRT_ASSEMBLY_VERSION`](https://docs.python.org/3/library/msvcrt.html#msvcrt.CRT_ASSEMBLY_VERSION "msvcrt.CRT_ASSEMBLY_VERSION"), [`VC_ASSEMBLY_PUBLICKEYTOKEN`](https://docs.python.org/3/library/msvcrt.html#msvcrt.VC_ASSEMBLY_PUBLICKEYTOKEN "msvcrt.VC_ASSEMBLY_PUBLICKEYTOKEN"), and [`LIBRARIES_ASSEMBLY_NAME_PREFIX`](https://docs.python.org/3/library/msvcrt.html#msvcrt.LIBRARIES_ASSEMBLY_NAME_PREFIX "msvcrt.LIBRARIES_ASSEMBLY_NAME_PREFIX"). (Contributed by David Cournapeau; [bpo-4365](https://bugs.python.org/issue?@action=redirect&bpo=4365).)
  * The [`_winreg`](https://docs.python.org/3/library/winreg.html#module-winreg "winreg: Routines and objects for manipulating the Windows registry. \(Windows\)") module for accessing the registry now implements the [`CreateKeyEx()`](https://docs.python.org/3/library/winreg.html#winreg.CreateKeyEx "winreg.CreateKeyEx") and [`DeleteKeyEx()`](https://docs.python.org/3/library/winreg.html#winreg.DeleteKeyEx "winreg.DeleteKeyEx") functions, extended versions of previously supported functions that take several extra arguments. The [`DisableReflectionKey()`](https://docs.python.org/3/library/winreg.html#winreg.DisableReflectionKey "winreg.DisableReflectionKey"), [`EnableReflectionKey()`](https://docs.python.org/3/library/winreg.html#winreg.EnableReflectionKey "winreg.EnableReflectionKey"), and [`QueryReflectionKey()`](https://docs.python.org/3/library/winreg.html#winreg.QueryReflectionKey "winreg.QueryReflectionKey") were also tested and documented. (Implemented by Brian Curtin: [bpo-7347](https://bugs.python.org/issue?@action=redirect&bpo=7347).)
  * The new `_beginthreadex()` API is used to start threads, and the native thread-local storage functions are now used. (Contributed by Kristján Valur Jónsson; [bpo-3582](https://bugs.python.org/issue?@action=redirect&bpo=3582).)
  * The [`os.kill()`](https://docs.python.org/3/library/os.html#os.kill "os.kill") function now works on Windows. The signal value can be the constants [`CTRL_C_EVENT`](https://docs.python.org/3/library/signal.html#signal.CTRL_C_EVENT "signal.CTRL_C_EVENT"), [`CTRL_BREAK_EVENT`](https://docs.python.org/3/library/signal.html#signal.CTRL_BREAK_EVENT "signal.CTRL_BREAK_EVENT"), or any integer. The first two constants will send `Control`-`C` and `Control`-`Break` keystroke events to subprocesses; any other value will use the `TerminateProcess()` API. (Contributed by Miki Tebeka; [bpo-1220212](https://bugs.python.org/issue?@action=redirect&bpo=1220212).)
  * The [`os.listdir()`](https://docs.python.org/3/library/os.html#os.listdir "os.listdir") function now correctly fails for an empty path. (Fixed by Hirokazu Yamamoto; [bpo-5913](https://bugs.python.org/issue?@action=redirect&bpo=5913).)
  * The [`mimetypes`](https://docs.python.org/3/library/mimetypes.html#module-mimetypes "mimetypes: Mapping of filename extensions to MIME types.") module will now read the MIME database from the Windows registry when initializing. (Patch by Gabriel Genellina; [bpo-4969](https://bugs.python.org/issue?@action=redirect&bpo=4969).)