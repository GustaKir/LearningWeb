Title: Maildir Class Methods in Python's Mailbox Library
URL: https://docs.python.org/3/library/mailbox.html
Summary: The `Maildir` class in Python's mailbox library allows for instance-specific settings of the `colon` attribute and has been updated to ignore files with leading dots since version 3.13. It includes methods such as `list_folders` to retrieve folder names and `get_folder` to access a specific folder represented as a `Maildir` instance, raising a `NoSuchMailboxError` if the folder is not found.
---

```

The `colon` attribute may also be set on a per-instance basis.
Changed in version 3.13: [`Maildir`](https://docs.python.org/3/library/mailbox.html#mailbox.Maildir "mailbox.Maildir") now ignores files with a leading dot.
`Maildir` instances have all of the methods of [`Mailbox`](https://docs.python.org/3/library/mailbox.html#mailbox.Mailbox "mailbox.Mailbox") in addition to the following: 

list_folders()[¶](https://docs.python.org/3/library/mailbox.html#mailbox.Maildir.list_folders "Link to this definition")
    
Return a list of the names of all folders. 

get_folder(_folder_)[¶](https://docs.python.org/3/library/mailbox.html#mailbox.Maildir.get_folder "Link to this definition")
    
Return a `Maildir` instance representing the folder whose name is _folder_. A [`NoSuchMailboxError`](https://docs.python.org/3/library/mailbox.html#mailbox.NoSuchMailboxError "mailbox.NoSuchMailboxError") exception is raised if the folder does not exist. 

add_folder(_folder_)[¶](https://docs.python.org/3/library/mailbox.html#mailbox.Maildir.add_folder "Link to this definition")
    
Create a folder whose name is _folder_ and return a `Maildir` instance representing it. 

remove_folder(_folder_)[¶](https://docs.python.org/3/library/mailbox.html#mailbox.Maildir.remove_folder "Link to this definition")
    
Delete the folder whose name is _folder_. If the folder contains any messages, a [`NotEmptyError`](https://docs.python.org/3/library/mailbox.html#mailbox.NotEmptyError "mailbox.NotEmptyError") exception will be raised and the folder will not be deleted. 

clean()[¶](https://docs.python.org/3/library/mailbox.html#mailbox.Maildir.clean "Link to this definition")
    
Delete temporary files from the mailbox that have not been accessed in the last 36 hours. The Maildir specification says that mail-reading programs should do this occasionally. 

get_flags(_key_)[¶](https://docs.python.org/3/library/mailbox.html#mailbox.Maildir.get_flags "Link to this definition")
    
Return as a string the flags that are set on the message corresponding to _key_. This is the same as `get_message(key).get_flags()` but much faster, because it does not open the message file. Use this method when iterating over the keys to determine which messages are interesting to get.
If you do have a [`MaildirMessage`](https://docs.python.org/3/library/mailbox.html#mailbox.MaildirMessage "mailbox.MaildirMessage") object, use its [`get_flags()`](https://docs.python.org/3/library/mailbox.html#mailbox.MaildirMessage.get_flags "mailbox.MaildirMessage.get_flags") method instead, because changes made by the message’s [`set_flags()`](https://docs.python.org/3/library/mailbox.html#mailbox.MaildirMessage.set_flags "mailbox.MaildirMessage.set_flags"), [`add_flag()`](https://docs.python.org/3/library/mailbox.html#mailbox.MaildirMessage.add_flag "mailbox.MaildirMessage.add_flag") and [`remove_flag()`](https://docs.python.org/3/library/mailbox.html#mailbox.MaildirMessage.remove_flag "mailbox.MaildirMessage.remove_flag") methods are not reflected here until the mailbox’s [`__setitem__()`](https://docs.python.org/3/library/mailbox.html#mailbox.Maildir.__setitem__ "mailbox.Maildir.__setitem__") method is called.
Added in version 3.13. 

set_flags(_key_ , _flags_)[¶](https://docs.python.org/3/library/mailbox.html#mailbox.Maildir.set_flags "Link to this definition")
    
On the message corresponding to _key_ , set the flags specified by _flags_ and unset all others. Calling `some_mailbox.set_flags(key, flags)` is similar to
```
one_message = some_mailbox.get_message(key)
one_message.set_flags(flags)
some_mailbox[key] = one_message