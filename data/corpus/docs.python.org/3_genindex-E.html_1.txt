Title: Index of Error Codes and Functions
URL: https://docs.python.org/3/genindex-E.html
Summary: A list of error codes from the errno module, including EDOM, EDOTDOT, EDQUOT, and functions like EFD_CLOEXEC from the os module, along with references to their respective documentation.
---

od)](https://docs.python.org/3/library/curses.html#curses.textpad.Textbox.edit)
  * [EDOM (in module errno)](https://docs.python.org/3/library/errno.html#errno.EDOM)
  * [EDOTDOT (in module errno)](https://docs.python.org/3/library/errno.html#errno.EDOTDOT)
  * [EDQUOT (in module errno)](https://docs.python.org/3/library/errno.html#errno.EDQUOT)
  * [EEXIST (in module errno)](https://docs.python.org/3/library/errno.html#errno.EEXIST)
  * [EFAULT (in module errno)](https://docs.python.org/3/library/errno.html#errno.EFAULT)
  * [EFBIG (in module errno)](https://docs.python.org/3/library/errno.html#errno.EFBIG)
  * [EFD_CLOEXEC (in module os)](https://docs.python.org/3/library/os.html#os.EFD_CLOEXEC)
  * [EFD_NONBLOCK (in module os)](https://docs.python.org/3/library/os.html#os.EFD_NONBLOCK)
  * [EFD_SEMAPHORE (in module os)](https://docs.python.org/3/library/os.html#os.EFD_SEMAPHORE)
  * [effective() (in module bdb)](https://docs.python.org/3/library/bdb.html#bdb.effective)
  * [EFTYPE (in module errno)](https://docs.python.org/3/library/errno.html#errno.EFTYPE)
  * [ehlo() (smtplib.SMTP method)](https://docs.python.org/3/library/smtplib.html#smtplib.SMTP.ehlo)
  * [ehlo_or_helo_if_needed() (smtplib.SMTP method)](https://docs.python.org/3/library/smtplib.html#smtplib.SMTP.ehlo_or_helo_if_needed)
  * [EHOSTDOWN (in module errno)](https://docs.python.org/3/library/errno.html#errno.EHOSTDOWN)
  * [EHOSTUNREACH (in module errno)](https://docs.python.org/3/library/errno.html#errno.EHOSTUNREACH)
  * [EIDRM (in module errno)](https://docs.python.org/3/library/errno.html#errno.EIDRM)
  * [EILSEQ (in module errno)](https://docs.python.org/3/library/errno.html#errno.EILSEQ)
  * [EINPROGRESS (in module errno)](https://docs.python.org/3/library/errno.html#errno.EINPROGRESS)
  * [EINTR (in module errno)](https://docs.python.org/3/library/errno.html#errno.EINTR)
  * [EINVAL (in module errno)](https://docs.python.org/3/library/errno.html#errno.EINVAL)
  * [EIO (in module errno)](https://docs.python.org/3/library/errno.html#errno.EIO)
  * [EISCONN (in module errno)](https://docs.python.org/3/library/errno.html#errno.EISCONN)
  * [EISDIR (in module errno)](https://docs.python.org/3/library/errno.html#errno.EISDIR)
  * [EISNAM (in module errno)](https://docs.python.org/3/library/errno.html#errno.EISNAM)
  * [EJECT (enum.FlagBoundary attribute)](https://docs.python.org/3/library/enum.html#enum.FlagBoundary.EJECT)
  * [EKEYEXPIRED (in module errno)](https://docs.python.org/3/library/errno.html#errno.EKEYEXPIRED)
  * [EKEYREJECTED (in module errno)](https://docs.python.org/3/library/errno.html#errno.EKEYREJECTED)
  * [EKEYREVOKED (in module errno)](https://docs.python.org/3/library/errno.html#errno.EKEYREVOKED)
  * [EL2HLT (in module errno)](https://docs.python.org/3/library/errno.html#errno.EL2HLT)
  * [EL2NSYNC (in module errno)](https://docs.python.org/3/library/errno.html#errno.EL2NSYNC)
  * [EL3HLT (in module errno)](https://docs.python.org/3/library/errno.html#errno.EL3HLT)
  * [EL3RST (in module errno)](https://docs.python.org/3/library/errno.html#errno.EL3RST)
  * [Element (class in xml.etree.ElementTree)](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element)
  * [element_create() (tkinter.ttk.Style method)](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Style.element_create)
  * [element_names() (tkinter.ttk.Style method)](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Style.element_names)
  * [element_options() (tkinter.ttk.Style method)](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Style.element_options)
  * [ElementDeclHandler() (xml.parsers.expat.xmlparser method)](https://docs.python.org/3/library/pyexpat.html#xml.parsers.expat.xmlparser.ElementDeclHandler)
  * [elements() (collections.Counter method)](https://docs.python.org/3/library/collections.html#collections.Counter.elements)
  * [ElementTree (class in xml.etree.ElementTree)](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.ElementTree)
  * [ELIBACC (in module errno)](https://docs.python.org/3/library/errno.html#errno.ELIBACC)
  * [ELIBBAD (in module errno)](https://docs.python.org/3/library/errno.html#errno.ELIBBAD)
  * [ELIBEXEC (in module errno)](https://docs.python.org/3/library/errno.html#errno.ELIBEXEC)
  * [ELIBMAX (in module errno)](https://docs.python.org/3/library/errno.html#errno.ELIBMAX)
  * [ELIBSCN (in module errno)](https://docs.python.org/3/library/errno.html#errno.ELIBSCN)
  * elif 
    * [keyword](https://docs.python.org/3/reference/compound_stmts.html#index-3)
  * Ellipsis 
    * [object](https://docs.python.org/3/reference/datamodel.html#index-8)
  * [Ellipsis (built-in variable)](https://docs.python.org/3/library/constants.html#Ellipsis)
  * [ELLIPSIS (in module doctest)](https://docs.python.org/3/library/doctest.html#doctest.ELLIPSIS)
    * [(in module token)](https://docs.python.org/3/library/token.html#token.ELLIPSIS