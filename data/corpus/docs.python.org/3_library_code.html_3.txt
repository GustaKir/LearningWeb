Title: Interactive Interpreter and Console in Python
URL: https://docs.python.org/3/library/code.html
Summary: This section discusses the `write` method in the `InteractiveInterpreter` class for outputting to the standard error stream, and introduces the `InteractiveConsole` class, which extends `InteractiveInterpreter` with additional methods. It highlights the `interact` method, which simulates an interactive console experience.
---

InteractiveInterpreter.write(_data_)[¶](https://docs.python.org/3/library/code.html#code.InteractiveInterpreter.write "Link to this definition")
    
Write a string to the standard error stream (`sys.stderr`). Derived classes should override this to provide the appropriate output handling as needed.
## Interactive Console Objects[¶](https://docs.python.org/3/library/code.html#interactive-console-objects "Link to this heading")
The [`InteractiveConsole`](https://docs.python.org/3/library/code.html#code.InteractiveConsole "code.InteractiveConsole") class is a subclass of [`InteractiveInterpreter`](https://docs.python.org/3/library/code.html#code.InteractiveInterpreter "code.InteractiveInterpreter"), and so offers all the methods of the interpreter objects as well as the following additions. 

InteractiveConsole.interact(_banner =None_, _exitmsg =None_)[¶](https://docs.python.org/3/library/code.html#code.InteractiveConsole.interact "Link to this definition")
    
Closely emulate the interactive Python console. The optional _banner_ argument specify the banner to print before the first interaction; by default it prints a banner similar to the one printed by the standard Python interpreter, followed by the class name of the console object in parentheses (so as not to confuse this with the real interpreter – since it’s so close!).
The optional _exitmsg_ argument specifies an exit message printed when exiting. Pass the empty string to suppress the exit message. If _exitmsg_ is not given or `None`, a default message is printed.
Changed in version 3.4: To suppress printing any banner, pass an empty string.
Changed in version 3.6: Print an exit message when exiting. 

InteractiveConsole.push(_line_)[¶](https://docs.python.org/3/library/code.html#code.InteractiveConsole.push "Link to this definition")
    
Push a line of source text to the interpreter. The line should not have a trailing newline; it may have internal newlines. The line is appended to a buffer and the interpreter’s [`runsource()`](https://docs.python.org/3/library/code.html#code.InteractiveInterpreter.runsource "code.InteractiveInterpreter.runsource") method is called with the concatenated contents of the buffer as source. If this indicates that the command was executed or invalid, the buffer is reset; otherwise, the command is incomplete, and the buffer is left as it was after the line was appended. The return value is `True` if more input is required, `False` if the line was dealt with in some way (this is the same as `runsource()`). 

InteractiveConsole.resetbuffer()[¶](https://docs.python.org/3/library/code.html#code.InteractiveConsole.resetbuffer "Link to this definition")
    
Remove any unhandled source text from the input buffer. 

InteractiveConsole.raw_input(_prompt =''_)[¶](https://docs.python.org/3/library/code.html#code.InteractiveConsole.raw_input "Link to this definition")
    
Write a prompt and read a line. The returned line does not include the trailing newline. When the user enters the EOF key sequence, [`EOFError`](https://docs.python.org/3/library/exceptions.html#EOFError "EOFError") is raised. The base implementation reads from `sys.stdin`; a subclass may replace this with a different implementation.
### [Table of Contents](https://docs.python.org/3/contents.html)
  * [`code` — Interpreter base classes](https://docs.python.org/3/library/code.html)
    * [Interactive Interpreter Objects](https://docs.python.org/3/library/code.html#interactive-interpreter-objects)
    * [Interactive Console Objects](https://docs.python.org/3/library/code.html#interactive-console-objects)


#### Previous topic
[Custom Python Interpreters](https://docs.python.org/3/library/custominterp.html "previous chapter")
#### Next topic
[`codeop` — Compile Python code](https://docs.python.org/3/library/codeop.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/code.rst)