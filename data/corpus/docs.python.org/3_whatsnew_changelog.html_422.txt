Title: Python 3.9.0 Alpha 6 Release Notes
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section outlines the security updates for Python 3.9.0 alpha 6 released on April 27, 2020, including fixes for audit events in socket creation, disallowing certain characters in email header arguments to prevent injection attacks, and a specific vulnerability (CVE 2020-8492) affecting the AbstractBasicAuthHandler class in urllib.request.
---

## Python 3.9.0 alpha 6[¶](https://docs.python.org/3/whatsnew/changelog.html#python-3-9-0-alpha-6 "Link to this heading")
_Release date: 2020-04-27_
### Security[¶](https://docs.python.org/3/whatsnew/changelog.html#id377 "Link to this heading")
  * [bpo-40121](https://bugs.python.org/issue?@action=redirect&bpo=40121): Fixes audit events raised on creating a new socket.
  * [bpo-39073](https://bugs.python.org/issue?@action=redirect&bpo=39073): Disallow CR or LF in email.headerregistry.Address arguments to guard against header injection attacks.
  * [bpo-39503](https://bugs.python.org/issue?@action=redirect&bpo=39503): [**CVE 2020-8492**](https://www.cve.org/CVERecord?id=CVE-2020-8492): The [`AbstractBasicAuthHandler`](https://docs.python.org/3/library/urllib.request.html#urllib.request.AbstractBasicAuthHandler "urllib.request.AbstractBasicAuthHandler") class of the [`urllib.request`](https://docs.python.org/3/library/urllib.request.html#module-urllib.request "urllib.request: Extensible library for opening URLs.") module uses an inefficient regular expression which can be exploited by an attacker to cause a denial of service. Fix the regex to prevent the catastrophic backtracking. Vulnerability reported by Ben Caller and Matt Schwager.


### Core and Builtins[¶](https://docs.python.org/3/whatsnew/changelog.html#id378 "Link to this heading")
  * [bpo-40313](https://bugs.python.org/issue?@action=redirect&bpo=40313): Improve the performance of bytes.hex().
  * [bpo-40334](https://bugs.python.org/issue?@action=redirect&bpo=40334): Switch to a new parser, based on PEG. For more details see PEP 617. To temporarily switch back to the old parser, use `-X oldparser` or `PYTHONOLDPARSER=1`. In Python 3.10 we will remove the old parser completely, including the `parser` module (already deprecated) and anything that depends on it.
  * [bpo-40267](https://bugs.python.org/issue?@action=redirect&bpo=40267): Fix the tokenizer to display the correct error message, when there is a `SyntaxError` on the last input character and no newline follows. It used to be `unexpected EOF while parsing`, while it should be `invalid syntax`.
  * [bpo-39522](https://bugs.python.org/issue?@action=redirect&bpo=39522): Correctly unparse explicit `u` prefix for strings when postponed evaluation for annotations activated. Patch by Batuhan Taskaya.
  * [bpo-40246](https://bugs.python.org/issue?@action=redirect&bpo=40246): Report a specialized error message, `invalid string prefix`, when the tokenizer encounters a string with an invalid prefix.
  * [bpo-40082](https://bugs.python.org/issue?@action=redirect&bpo=40082): Fix the signal handler: it now always uses the main interpreter, rather than trying to get the current Python thread state.
  * [bpo-37388](https://bugs.python.org/issue?@action=redirect&bpo=37388): str.encode() and str.decode() no longer check the encoding and errors in development mode or in debug mode during Python finalization. The codecs machinery can no longer work on very late calls to str.encode() and str.decode().
  * [bpo-40077](https://bugs.python.org/issue?@action=redirect&bpo=40077): Fix possible refleaks in `_json`, memo of PyScannerObject should be traversed.
  * [bpo-37207](https://bugs.python.org/issue?@action=redirect&bpo=37207): Speed up calls to `dict()` by using the [**PEP 590**](https://peps.python.org/pep-0590/) `vectorcall` calling convention.
  * [bpo-40141](https://bugs.python.org/issue?@action=redirect&bpo=40141): Add column and line information to `ast.keyword` nodes. Patch by Pablo Galindo.
  * [bpo-1635741](https://bugs.python.org/issue?@action=redirect&bpo=1635741): Port [`resource`](https://docs.python.org/3/library/resource.html#module-resource "resource: An interface to provide resource usage information on the current process. \(Unix\)") to multiphase initialization ([**PEP 489**](https://peps.python.org/pep-0489/)).
  * [bpo-1635741](https://bugs.python.org/issue?@action=redirect&bpo=1635741): Port [`math`](https://docs.python.org/3/library/math.html#module-math "math: Mathematical functions \(sin\(\) etc.\).") to multiphase initialization ([**PEP 489**](https://peps.python.org/pep-0489/)).
  * [bpo-1635741](https://bugs.python.org/issue?@action=redirect&bpo=1635741): Port _uuid module to multiphase initialization ([**PEP 489**](https://peps.python.org/pep-0489/)).
  * [bpo-40077](https://bugs.python.org/issue?@action=redirect&bpo=40077): Convert json module to use [`PyType_FromSpec()`](https://docs.python.org/3/c-api/type.html#c.PyType_FromSpec "PyType_FromSpec").
  * [bpo-40067](https://bugs.python.org/issue?@action=redirect&bpo=40067): Improve the error message for multiple star expressions in an assignment. Patch by Furkan Onder
  * [bpo-1635741](https://bugs.python.org/issue?@action=redirect&bpo=1635741): Port _functools module to multiphase initialization (PEP 489). Patch by Paulo Henrique Silva.
  * [bpo-1635741](https://bugs.python.org/issue?@action=redirect&bpo=1635741): Port operator modu