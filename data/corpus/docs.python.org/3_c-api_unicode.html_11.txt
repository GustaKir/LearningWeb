Title: PyUnicode_FSDecoder Function
URL: https://docs.python.org/3/c-api/unicode.html
Summary: The PyUnicode_FSDecoder function is part of the Stable ABI, designed to decode bytes objects into str using the PyUnicode_DecodeFSDefaultAndSize function. It is particularly applicable for bytes obtained through the os.PathLike interface, returning str objects unchanged. The result must be a pointer to a C variable of an appropriate type.
---

intPyUnicode_FSDecoder([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*obj, void*result)[¶](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_FSDecoder "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
[PyArg_Parse* converter](https://docs.python.org/3/c-api/arg.html#arg-parsing): decode [`bytes`](https://docs.python.org/3/library/stdtypes.html#bytes "bytes") objects – obtained either directly or indirectly through the [`os.PathLike`](https://docs.python.org/3/library/os.html#os.PathLike "os.PathLike") interface – to [`str`](https://docs.python.org/3/library/stdtypes.html#str "str") using [`PyUnicode_DecodeFSDefaultAndSize()`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_DecodeFSDefaultAndSize "PyUnicode_DecodeFSDefaultAndSize"); [`str`](https://docs.python.org/3/library/stdtypes.html#str "str") objects are output as-is. _result_ must be an address of a C variable of type [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")* (or [PyUnicodeObject](https://docs.python.org/3/c-api/unicode.html#c.PyUnicodeObject "PyUnicodeObject")*). On success, set the variable to a new [strong reference](https://docs.python.org/3/glossary.html#term-strong-reference) to a [Unicode object](https://docs.python.org/3/c-api/unicode.html#unicodeobjects) which must be released when it is no longer used and return a non-zero value ([`Py_CLEANUP_SUPPORTED`](https://docs.python.org/3/c-api/arg.html#c.Py_CLEANUP_SUPPORTED "Py_CLEANUP_SUPPORTED")). Embedded null characters are not allowed in the result. On failure, return `0` with an exception set.
If _obj_ is `NULL`, release the strong reference to the object referred to by _result_ and return `1`.
Added in version 3.2.
Changed in version 3.6: Accepts a [path-like object](https://docs.python.org/3/glossary.html#term-path-like-object). 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyUnicode_DecodeFSDefaultAndSize(constchar*str, [Py_ssize_t](https://docs.python.org/3/c-api/intro.html#c.Py_ssize_t "Py_ssize_t")size)[¶](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_DecodeFSDefaultAndSize "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Decode a string from the [filesystem encoding and error handler](https://docs.python.org/3/glossary.html#term-filesystem-encoding-and-error-handler).
If you need to decode a string from the current locale encoding, use [`PyUnicode_DecodeLocaleAndSize()`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_DecodeLocaleAndSize "PyUnicode_DecodeLocaleAndSize").
See also
The [`Py_DecodeLocale()`](https://docs.python.org/3/c-api/sys.html#c.Py_DecodeLocale "Py_DecodeLocale") function.
Changed in version 3.6: The [filesystem error handler](https://docs.python.org/3/glossary.html#term-filesystem-encoding-and-error-handler) is now used. 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyUnicode_DecodeFSDefault(constchar*str)[¶](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_DecodeFSDefault "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Decode a null-terminated string from the [filesystem encoding and error handler](https://docs.python.org/3/glossary.html#term-filesystem-encoding-and-error-handler).
If the string length is known, use [`PyUnicode_DecodeFSDefaultAndSize()`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_DecodeFSDefaultAndSize "PyUnicode_DecodeFSDefaultAndSize").
Changed in version 3.6: The [filesystem error handler](https://docs.python.org/3/glossary.html#term-filesystem-encoding-and-error-handler) is now used.