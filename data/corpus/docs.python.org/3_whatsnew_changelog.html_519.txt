Title: Python Changelog: Recent Fixes and Improvements
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: The changelog highlights several important patches including fixes for memory handling in code objects, ensuring proper exception handling in IO closure, resolving a buffer overflow during Unicode conversion, addressing a memory leak in the compiler, and disabling interruption by specific control sequences.
---

Patch by Jeroen Demeyer.
  * [bpo-24618](https://bugs.python.org/issue?@action=redirect&bpo=24618): Fixed reading invalid memory when create the code object with too small varnames tuple or too large argument counts.
  * [bpo-34068](https://bugs.python.org/issue?@action=redirect&bpo=34068): In [`io.IOBase.close()`](https://docs.python.org/3/library/io.html#io.IOBase.close "io.IOBase.close"), ensure that the [`closed`](https://docs.python.org/3/library/io.html#io.IOBase.closed "io.IOBase.closed") attribute is not set with a live exception. Patch by Zackery Spytz and Serhiy Storchaka.
  * [bpo-34087](https://bugs.python.org/issue?@action=redirect&bpo=34087): Fix buffer overflow while converting unicode to numeric values.
  * [bpo-34080](https://bugs.python.org/issue?@action=redirect&bpo=34080): Fixed a memory leak in the compiler when it raised some uncommon errors during tokenizing.
  * [bpo-34066](https://bugs.python.org/issue?@action=redirect&bpo=34066): Disabled interruption by Ctrl-C between calling `open()` and entering a **with** block in `with open()`.
  * [bpo-34042](https://bugs.python.org/issue?@action=redirect&bpo=34042): Fix dict.copy() to maintain correct total refcount (as reported by sys.gettotalrefcount()).
  * [bpo-33418](https://bugs.python.org/issue?@action=redirect&bpo=33418): Fix potential memory leak in function object when it creates reference cycle.
  * [bpo-33985](https://bugs.python.org/issue?@action=redirect&bpo=33985): Implement contextvars.ContextVar.name attribute.
  * [bpo-33956](https://bugs.python.org/issue?@action=redirect&bpo=33956): Update vendored Expat library copy to version 2.2.5.
  * [bpo-24596](https://bugs.python.org/issue?@action=redirect&bpo=24596): Decref the module object in [`PyRun_SimpleFileExFlags()`](https://docs.python.org/3/c-api/veryhigh.html#c.PyRun_SimpleFileExFlags "PyRun_SimpleFileExFlags") before calling [`PyErr_Print()`](https://docs.python.org/3/c-api/exceptions.html#c.PyErr_Print "PyErr_Print"). Patch by Zackery Spytz.
  * [bpo-33451](https://bugs.python.org/issue?@action=redirect&bpo=33451): Close directly executed pyc files before calling `PyEval_EvalCode()`.
  * [bpo-1617161](https://bugs.python.org/issue?@action=redirect&bpo=1617161): The hash of `BuiltinMethodType` instances (methods of built-in classes) now depends on the hash of the identity of ___self___ instead of its value. The hash and equality of `ModuleType` and `MethodWrapperType` instances (methods of user-defined classes and some methods of built-in classes like `str.__add__`) now depend on the hash and equality of the identity of ___self___ instead of its value. `MethodWrapperType` instances no longer support ordering.
  * [bpo-33824](https://bugs.python.org/issue?@action=redirect&bpo=33824): Fix “LC_ALL=C python3.7 -V”: reset properly the command line parser when the encoding changes after reading the Python configuration.
  * [bpo-33803](https://bugs.python.org/issue?@action=redirect&bpo=33803): Fix a crash in hamt.c caused by enabling GC tracking for an object that hadn’t all of its fields set to NULL.
  * [bpo-33738](https://bugs.python.org/issue?@action=redirect&bpo=33738): Seven macro incompatibilities with the Limited API were fixed, and the macros [`PyIter_Check()`](https://docs.python.org/3/c-api/iter.html#c.PyIter_Check "PyIter_Check"), [`PyIndex_Check()`](https://docs.python.org/3/c-api/number.html#c.PyIndex_Check "PyIndex_Check") and `PyExceptionClass_Name()` were added as functions. A script for automatic macro checks was added.
  * [bpo-33786](https://bugs.python.org/issue?@action=redirect&bpo=33786): Fix asynchronous generators to handle GeneratorExit in athrow() correctly
  * [bpo-30167](https://bugs.python.org/issue?@action=redirect&bpo=30167): `PyRun_SimpleFileExFlags` removes `__cached__` from module in addition to `__file__`.
  * [bpo-33706](https://bugs.python.org/issue?@action=redirect&bpo=33706): Fix a crash in Python initialization when parsing the command line options. Thanks Christoph Gohlke for the bug report and the fix!
  * [bpo-33597](https://bugs.python.org/issue?@action=redirect&bpo=33597): Reduce `PyGC_Head` size from 3 words to 2 words.
  * [bpo-30654](https://bugs.python.org/issue?@action=redirect&bpo=30654): Fixed reset of the SIGINT handler to SIG_DFL on interpreter shutdown even when there was a custom handler set previously. Patch by Philipp Kerling.
  * [bpo-33622](https://bugs.python.org/issue?@action=redirect&bpo=33622): Fixed a leak when the garbage collector fails to add an object with the `__del__` method or referenced by it into the [`gc.garbage`](https://docs.python.org/3/library/gc.html#gc.garbage "gc.garbage") list. [`PyGC_Collect()`](https://docs.python.org/3/c-api/gcsupport.html#c.PyGC_Collect "PyGC_Collect") can now be called when an exception is set and preserves it.
  * [bpo-33462](https://bugs.python.org/issue?@action=redirect&bpo=33462): Make dict and dict views reversible.