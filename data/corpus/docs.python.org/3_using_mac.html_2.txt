Title: Python Installation on macOS
URL: https://docs.python.org/3/using/mac.html
Summary: This section describes the completion of the Python installation on macOS, indicating a successful setup when 'Successfully installed certifi' appears in the terminal. It details the default installation components, including a 'Python 3.13' folder containing IDLE and Python Launcher, and the framework containing the Python executable. Instructions for uninstallation are also provided.
---

ac_installer_08_install_certificates.png](https://docs.python.org/3/_images/mac_installer_08_install_certificates.png)
If `Successfully installed certifi` and `update complete` appears in the terminal window, the installation is complete. Close this terminal window and the installer window.
A default install will include:
  * A `Python 3.13` folder in your `Applications` folder. In here you find **IDLE** , the development environment that is a standard part of official Python distributions; and **Python Launcher** , which handles double-clicking Python scripts from the macOS [Finder](https://support.apple.com/en-us/HT201732).
  * A framework `/Library/Frameworks/Python.framework`, which includes the Python executable and libraries. The installer adds this location to your shell path. To uninstall Python, you can remove these three things. Symlinks to the Python executable are placed in `/usr/local/bin/`.


Note
Recent versions of macOS include a **python3** command in `/usr/bin/python3` that links to a usually older and incomplete version of Python provided by and for use by the Apple development tools, **Xcode** or the **Command Line Tools for Xcode**. You should never modify or attempt to delete this installation, as it is Apple-controlled and is used by Apple-provided or third-party software. If you choose to install a newer Python version from `python.org`, you will have two different but functional Python installations on your computer that can co-exist. The default installer options should ensure that its **python3** will be used instead of the system **python3**.
### 5.1.2. How to run a Python script[¶](https://docs.python.org/3/using/mac.html#how-to-run-a-python-script "Link to this heading")
There are two ways to invoke the Python interpreter. If you are familiar with using a Unix shell in a terminal window, you can invoke `python3.13` or `python3` optionally followed by one or more command line options (described in [Command line and environment](https://docs.python.org/3/using/cmdline.html#using-on-general)). The Python tutorial also has a useful section on [using Python interactively from a shell](https://docs.python.org/3/tutorial/appendix.html#tut-interac).
You can also invoke the interpreter through an integrated development environment. [IDLE — Python editor and shell](https://docs.python.org/3/library/idle.html#idle) is a basic editor and interpreter environment which is included with the standard distribution of Python. **IDLE** includes a Help menu that allows you to access Python documentation. If you are completely new to Python, you can read the tutorial introduction in that document.
There are many other editors and IDEs available, see [Editors and IDEs](https://docs.python.org/3/using/editors.html#editors) for more information.
To run a Python script file from the terminal window, you can invoke the interpreter with the name of the script file:
> `python3.13` `myscript.py`
To run your script from the Finder, you can either:
  * Drag it to **Python Launcher**.
  * Select **Python Launcher** as the default application to open your script (or any `.py` script) through the Finder Info window and double-click it. **Python Launcher** has various preferences to control how your script is launched. Option-dragging allows you to change these for one invocation, or use its `Preferences` menu to change things globally.


Be aware that running the script directly from the macOS Finder might produce different results than when running from a terminal window as the script will not be run in the usual shell environment including any setting of environment variables in shell profiles. And, as with any other script or program, be certain of what you are about to run.
## 5.2. Alternative Distributions[¶](https://docs.python.org/3/using/mac.html#alternative-distributions "Link to this heading")
Besides the standard `python.org` for macOS installer, there are third-party distributions for macOS that may include additional functionality. Some popular distributions and their key features: 

[ActivePython](https://www.activestate.com/products/python/)
    
Installer with multi-platform compatibility, documentation 

[Anaconda](https://www.anaconda.com/download/)
    
Popular scientific modules (such as numpy, scipy, and pandas) and the `conda` package manager. 

[Homebrew](https://brew.sh)
    
Package manager for macOS including multiple versions of Python and many third-party Python-based packages (including numpy, scipy, and pandas).