Title: C API Updates in Python
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: The C API section includes several updates: re-exporting compatibility wrappers for macros, introducing regular functions for `Py_EnterRecursiveCall()` and `Py_LeaveRecursiveCall()` to support the limited API, and the removal of `_Py_CheckRecursionLimit` from the stable ABI.
---

### C API[¶](https://docs.python.org/3/whatsnew/changelog.html#id434 "Link to this heading")
  * [bpo-37633](https://bugs.python.org/issue?@action=redirect&bpo=37633): Re-export some function compatibility wrappers for macros in `pythonrun.h`.
  * [bpo-38644](https://bugs.python.org/issue?@action=redirect&bpo=38644): Provide [`Py_EnterRecursiveCall()`](https://docs.python.org/3/c-api/exceptions.html#c.Py_EnterRecursiveCall "Py_EnterRecursiveCall") and [`Py_LeaveRecursiveCall()`](https://docs.python.org/3/c-api/exceptions.html#c.Py_LeaveRecursiveCall "Py_LeaveRecursiveCall") as regular functions for the limited API. Previously, there were defined as macros, but these macros didn’t work with the limited API which cannot access `PyThreadState.recursion_depth` field. Remove `_Py_CheckRecursionLimit` from the stable ABI.
  * [bpo-38650](https://bugs.python.org/issue?@action=redirect&bpo=38650): The global variable [`PyStructSequence_UnnamedField`](https://docs.python.org/3/c-api/tuple.html#c.PyStructSequence_UnnamedField "PyStructSequence_UnnamedField") is now a constant and refers to a constant string.
  * [bpo-38540](https://bugs.python.org/issue?@action=redirect&bpo=38540): Fixed possible leak in [`PyArg_Parse()`](https://docs.python.org/3/c-api/arg.html#c.PyArg_Parse "PyArg_Parse") and similar functions for format units `"es#"` and `"et#"` when the macro `PY_SSIZE_T_CLEAN` is not defined.
  * [bpo-38395](https://bugs.python.org/issue?@action=redirect&bpo=38395): Fix a crash in [`weakref.proxy`](https://docs.python.org/3/library/weakref.html#weakref.proxy "weakref.proxy") objects due to incorrect lifetime management when calling some associated methods that may delete the last reference to object being referenced by the proxy. Patch by Pablo Galindo.
  * [bpo-36389](https://bugs.python.org/issue?@action=redirect&bpo=36389): The `_PyObject_CheckConsistency()` function is now also available in release mode. For example, it can be used to debug a crash in the `visit_decref()` function of the GC.
  * [bpo-38266](https://bugs.python.org/issue?@action=redirect&bpo=38266): Revert the removal of PyThreadState_DeleteCurrent() with documentation.
  * [bpo-38303](https://bugs.python.org/issue?@action=redirect&bpo=38303): Update audioop extension module to use the stable ABI (PEP-384). Patch by Tyler Kieft.
  * [bpo-38234](https://bugs.python.org/issue?@action=redirect&bpo=38234): `Py_SetPath()` now sets [`sys.executable`](https://docs.python.org/3/library/sys.html#sys.executable "sys.executable") to the program full path ([`Py_GetProgramFullPath()`](https://docs.python.org/3/c-api/init.html#c.Py_GetProgramFullPath "Py_GetProgramFullPath")) rather than to the program name ([`Py_GetProgramName()`](https://docs.python.org/3/c-api/init.html#c.Py_GetProgramName "Py_GetProgramName")).
  * [bpo-38234](https://bugs.python.org/issue?@action=redirect&bpo=38234): Python ignored arguments passed to `Py_SetPath()`, `Py_SetPythonHome()` and `Py_SetProgramName()`: fix Python initialization to use specified arguments.
  * [bpo-38205](https://bugs.python.org/issue?@action=redirect&bpo=38205): The [`Py_UNREACHABLE()`](https://docs.python.org/3/c-api/intro.html#c.Py_UNREACHABLE "Py_UNREACHABLE") macro now calls [`Py_FatalError()`](https://docs.python.org/3/c-api/sys.html#c.Py_FatalError "Py_FatalError").
  * [bpo-38140](https://bugs.python.org/issue?@action=redirect&bpo=38140): Make dict and weakref offsets opaque for C heap types by passing the offsets through PyMemberDef
  * [bpo-15088](https://bugs.python.org/issue?@action=redirect&bpo=15088): The C function `PyGen_NeedsFinalizing` has been removed. It was not documented, tested or used anywhere within CPython after the implementation of [**PEP 442**](https://peps.python.org/pep-0442/). Patch by Joannah Nanjekye. (Patch by Joannah Nanjekye)
  * [bpo-36763](https://bugs.python.org/issue?@action=redirect&bpo=36763): Options added by `PySys_AddXOption()` are now handled the same way than `PyConfig.xoptions` and command line `-X` options.
  * [bpo-37926](https://bugs.python.org/issue?@action=redirect&bpo=37926): Fix a crash in `PySys_SetArgvEx(0, NULL, 0)`.
  * [bpo-37879](https://bugs.python.org/issue?@action=redirect&bpo=37879): Fix subtype_dealloc to suppress the type decref when the base type is a C heap type
  * [bpo-37645](https://bugs.python.org/issue?@action=redirect&bpo=37645): Add `_PyObject_FunctionStr()` to get a user-friendly string representation of a function-like object. Patch by Jeroen Demeyer.
  * [bpo-29548](https://bugs.python.org/issue?@action=redirect&bpo=29548): The functions `PyEval_CallObject`, `PyEval_CallFunction`, `PyEval_CallMethod` and `PyEval_CallObjectWithKeywords` are deprecated. Use [`PyObject_Call()`](https://docs.python.org/3/c-api/call.html#c.PyObject_Call "PyObject_Call") and its variants instead.
  * [bpo-37151](https://bugs.python.org/issue?@action=redirect&bpo=37151): `PyCFunction_Call` is now a deprecated alias of [`PyObject_Call()`](https://docs