Title: Codecs Module in Python
URL: https://docs.python.org/3/library/codecs.html
Summary: This section covers various encoding modules in Python, including `encodings.idna` for converting labels to Unicode as per RFC 3490, `encodings.mbcs` for the Windows ANSI codepage, and `encodings.utf_8_sig`, which supports UTF-8 encoding with a BOM signature. Notable changes in versions 3.2 and 3.3 are also highlighted.
---

encodings.idna.ToUnicode(_label_)[¶](https://docs.python.org/3/library/codecs.html#encodings.idna.ToUnicode "Link to this definition")
    
Convert a label to Unicode, as specified in [**RFC 3490**](https://datatracker.ietf.org/doc/html/rfc3490.html).
## [`encodings.mbcs`](https://docs.python.org/3/library/codecs.html#module-encodings.mbcs "encodings.mbcs: Windows ANSI codepage") — Windows ANSI codepage[¶](https://docs.python.org/3/library/codecs.html#module-encodings.mbcs "Link to this heading")
This module implements the ANSI codepage (CP_ACP).
[Availability](https://docs.python.org/3/library/intro.html#availability): Windows.
Changed in version 3.2: Before 3.2, the _errors_ argument was ignored; `'replace'` was always used to encode, and `'ignore'` to decode.
Changed in version 3.3: Support any error handler.
## [`encodings.utf_8_sig`](https://docs.python.org/3/library/codecs.html#module-encodings.utf_8_sig "encodings.utf_8_sig: UTF-8 codec with BOM signature") — UTF-8 codec with BOM signature[¶](https://docs.python.org/3/library/codecs.html#module-encodings.utf_8_sig "Link to this heading")
This module implements a variant of the UTF-8 codec. On encoding, a UTF-8 encoded BOM will be prepended to the UTF-8 encoded bytes. For the stateful encoder this is only done once (on the first write to the byte stream). On decoding, an optional UTF-8 encoded BOM at the start of the data will be skipped.
### [Table of Contents](https://docs.python.org/3/contents.html)
  * [`codecs` — Codec registry and base classes](https://docs.python.org/3/library/codecs.html)
    * [Codec Base Classes](https://docs.python.org/3/library/codecs.html#codec-base-classes)
      * [Error Handlers](https://docs.python.org/3/library/codecs.html#error-handlers)
      * [Stateless Encoding and Decoding](https://docs.python.org/3/library/codecs.html#stateless-encoding-and-decoding)
      * [Incremental Encoding and Decoding](https://docs.python.org/3/library/codecs.html#incremental-encoding-and-decoding)
        * [IncrementalEncoder Objects](https://docs.python.org/3/library/codecs.html#incrementalencoder-objects)
        * [IncrementalDecoder Objects](https://docs.python.org/3/library/codecs.html#incrementaldecoder-objects)
      * [Stream Encoding and Decoding](https://docs.python.org/3/library/codecs.html#stream-encoding-and-decoding)
        * [StreamWriter Objects](https://docs.python.org/3/library/codecs.html#streamwriter-objects)
        * [StreamReader Objects](https://docs.python.org/3/library/codecs.html#streamreader-objects)
        * [StreamReaderWriter Objects](https://docs.python.org/3/library/codecs.html#streamreaderwriter-objects)
        * [StreamRecoder Objects](https://docs.python.org/3/library/codecs.html#streamrecoder-objects)
    * [Encodings and Unicode](https://docs.python.org/3/library/codecs.html#encodings-and-unicode)
    * [Standard Encodings](https://docs.python.org/3/library/codecs.html#standard-encodings)
    * [Python Specific Encodings](https://docs.python.org/3/library/codecs.html#python-specific-encodings)
      * [Text Encodings](https://docs.python.org/3/library/codecs.html#text-encodings)
      * [Binary Transforms](https://docs.python.org/3/library/codecs.html#binary-transforms)
      * [Text Transforms](https://docs.python.org/3/library/codecs.html#text-transforms)
    * [`encodings.idna` — Internationalized Domain Names in Applications](https://docs.python.org/3/library/codecs.html#module-encodings.idna)
    * [`encodings.mbcs` — Windows ANSI codepage](https://docs.python.org/3/library/codecs.html#module-encodings.mbcs)
    * [`encodings.utf_8_sig` — UTF-8 codec with BOM signature](https://docs.python.org/3/library/codecs.html#module-encodings.utf_8_sig)


#### Previous topic
[`struct` — Interpret bytes as packed binary data](https://docs.python.org/3/library/struct.html "previous chapter")
#### Next topic
[Data Types](https://docs.python.org/3/library/datatypes.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/codecs.rst)