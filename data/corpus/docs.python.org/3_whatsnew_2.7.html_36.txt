Title: Python 2.7 Release Notes
URL: https://docs.python.org/3/whatsnew/2.7.html
Summary: This document discusses the security issue fixed in Python 2.7 related to `PySys_SetArgv()` and `PySys_SetArgvEx()`, reported as CVE 2008-5983. It also introduces new macros for character classification that ignore locale settings, and notes that `PyEval_CallObject()` is now only available as a macro.
---

n that embeds Python, check whether you’re calling `PySys_SetArgv()` and carefully consider whether the application should be using `PySys_SetArgvEx()` with _updatepath_ set to false.
Security issue reported as [**CVE 2008-5983**](https://www.cve.org/CVERecord?id=CVE-2008-5983); discussed in [bpo-5753](https://bugs.python.org/issue?@action=redirect&bpo=5753), and fixed by Antoine Pitrou.
  * New macros: the Python header files now define the following macros: `Py_ISALNUM`, `Py_ISALPHA`, `Py_ISDIGIT`, `Py_ISLOWER`, `Py_ISSPACE`, `Py_ISUPPER`, `Py_ISXDIGIT`, `Py_TOLOWER`, and `Py_TOUPPER`. All of these functions are analogous to the C standard macros for classifying characters, but ignore the current locale setting, because in several places Python needs to analyze characters in a locale-independent way. (Added by Eric Smith; [bpo-5793](https://bugs.python.org/issue?@action=redirect&bpo=5793).)
  * Removed function: `PyEval_CallObject()` is now only available as a macro. A function version was being kept around to preserve ABI linking compatibility, but that was in 1997; it can certainly be deleted by now. (Removed by Antoine Pitrou; [bpo-8276](https://bugs.python.org/issue?@action=redirect&bpo=8276).)
  * New format codes: the `PyString_FromFormat()`, `PyString_FromFormatV()`, and [`PyErr_Format()`](https://docs.python.org/3/c-api/exceptions.html#c.PyErr_Format "PyErr_Format") functions now accept `%lld` and `%llu` format codes for displaying C’s longlong types. (Contributed by Mark Dickinson; [bpo-7228](https://bugs.python.org/issue?@action=redirect&bpo=7228).)
  * The complicated interaction between threads and process forking has been changed. Previously, the child process created by [`os.fork()`](https://docs.python.org/3/library/os.html#os.fork "os.fork") might fail because the child is created with only a single thread running, the thread performing the [`os.fork()`](https://docs.python.org/3/library/os.html#os.fork "os.fork"). If other threads were holding a lock, such as Python’s import lock, when the fork was performed, the lock would still be marked as “held” in the new process. But in the child process nothing would ever release the lock, since the other threads weren’t replicated, and the child process would no longer be able to perform imports.
Python 2.7 acquires the import lock before performing an [`os.fork()`](https://docs.python.org/3/library/os.html#os.fork "os.fork"), and will also clean up any locks created using the [`threading`](https://docs.python.org/3/library/threading.html#module-threading "threading: Thread-based parallelism.") module. C extension modules that have internal locks, or that call `fork()` themselves, will not benefit from this clean-up.
(Fixed by Thomas Wouters; [bpo-1590864](https://bugs.python.org/issue?@action=redirect&bpo=1590864).)
  * The [`Py_Finalize()`](https://docs.python.org/3/c-api/init.html#c.Py_Finalize "Py_Finalize") function now calls the internal `threading._shutdown()` function; this prevents some exceptions from being raised when an interpreter shuts down. (Patch by Adam Olsen; [bpo-1722344](https://bugs.python.org/issue?@action=redirect&bpo=1722344).)
  * When using the [`PyMemberDef`](https://docs.python.org/3/c-api/structures.html#c.PyMemberDef "PyMemberDef") structure to define attributes of a type, Python will no longer let you try to delete or set a `T_STRING_INPLACE` attribute.
  * Global symbols defined by the [`ctypes`](https://docs.python.org/3/library/ctypes.html#module-ctypes "ctypes: A foreign function library for Python.") module are now prefixed with `Py`, or with `_ctypes`. (Implemented by Thomas Heller; [bpo-3102](https://bugs.python.org/issue?@action=redirect&bpo=3102).)
  * New configure option: the `--with-system-expat` switch allows building the [`pyexpat`](https://docs.python.org/3/library/pyexpat.html#module-xml.parsers.expat "xml.parsers.expat: An interface to the Expat non-validating XML parser.") module to use the system Expat library. (Contributed by Arfrever Frehtes Taifersar Arahesis; [bpo-7609](https://bugs.python.org/issue?@action=redirect&bpo=7609).)
  * New configure option: the `--with-valgrind` option will now disable the pymalloc allocator, which is difficult for the Valgrind memory-error detector to analyze correctly. Valgrind will therefore be better at detecting memory leaks and overruns. (Contributed by James Henstridge; [bpo-2422](https://bugs.python.org/issue?@action=redirect&bpo=2422).)
  * New configure option: you can now supply an empty string to `--with-dbmliborder=` in order to disable all of the various DBM modules. (Added by Arfrever Frehtes Taifersar Arahesis; [bpo-6491](https://bugs.python.org/issue?@action=redirect&bpo=6491).)
  * The **configure** script now checks for floating-point rounding bugs on certain 32-bit Intel chips and defines a `X87_DOUBLE_ROUNDING` preprocessor definition. No code currently uses this definition, but it’s available if anyone wishes to use it.