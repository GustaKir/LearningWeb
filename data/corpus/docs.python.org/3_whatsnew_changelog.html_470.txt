Title: Python 3 Changelog Highlights
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This document outlines several patches and updates, including fixes to `ArgumentParser` behavior regarding flag grouping and abbreviation, the preservation of keyword argument order in `unittest.mock.call()`, a fix for unpickling `datetime.time` objects from Python 2, and the addition of formal support for UDPLITE sockets.
---

Patch by Carl Bordum Hansen.
  * [bpo-26967](https://bugs.python.org/issue?@action=redirect&bpo=26967): An [`ArgumentParser`](https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser "argparse.ArgumentParser") with `allow_abbrev=False` no longer disables grouping of short flags, such as `-vv`, but only disables abbreviation of long flags as documented. Patch by Zac Hatfield-Dodds.
  * [bpo-37212](https://bugs.python.org/issue?@action=redirect&bpo=37212): [`unittest.mock.call()`](https://docs.python.org/3/library/unittest.mock.html#unittest.mock.call "unittest.mock.call") now preserves the order of keyword arguments in repr output. Patch by Karthikeyan Singaravelan.
  * [bpo-37372](https://bugs.python.org/issue?@action=redirect&bpo=37372): Fix error unpickling datetime.time objects from Python 2 with seconds>=24. Patch by Justin Blanchard.
  * [bpo-37345](https://bugs.python.org/issue?@action=redirect&bpo=37345): Add formal support for UDPLITE sockets. Support was present before, but it is now easier to detect support with `hasattr(socket, 'IPPROTO_UDPLITE')` and there are constants defined for each of the values needed: `socket.IPPROTO_UDPLITE`, `UDPLITE_SEND_CSCOV`, and `UDPLITE_RECV_CSCOV`. Patch by Gabe Appleton.
  * [bpo-37358](https://bugs.python.org/issue?@action=redirect&bpo=37358): Optimized `functools.partial` by using vectorcall.
  * [bpo-37347](https://bugs.python.org/issue?@action=redirect&bpo=37347): [`sqlite3.Connection.create_aggregate()`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.create_aggregate "sqlite3.Connection.create_aggregate"), [`sqlite3.Connection.create_function()`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.create_function "sqlite3.Connection.create_function"), [`sqlite3.Connection.set_authorizer()`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.set_authorizer "sqlite3.Connection.set_authorizer"), [`sqlite3.Connection.set_progress_handler()`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.set_progress_handler "sqlite3.Connection.set_progress_handler") [`sqlite3.Connection.set_trace_callback()`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.set_trace_callback "sqlite3.Connection.set_trace_callback") methods lead to segfaults if some of these methods are called twice with an equal object but not the same. Now callbacks are stored more carefully. Patch by Aleksandr Balezin.
  * [bpo-37163](https://bugs.python.org/issue?@action=redirect&bpo=37163): The _obj_ argument of [`dataclasses.replace()`](https://docs.python.org/3/library/dataclasses.html#dataclasses.replace "dataclasses.replace") is positional-only now.
  * [bpo-37085](https://bugs.python.org/issue?@action=redirect&bpo=37085): Add the optional Linux SocketCAN Broadcast Manager constants, used as flags to configure the BCM behaviour, in the socket module. Patch by Karl Ding.
  * [bpo-37328](https://bugs.python.org/issue?@action=redirect&bpo=37328): `HTMLParser.unescape` is removed. It was undocumented and deprecated since Python 3.4.
  * [bpo-37305](https://bugs.python.org/issue?@action=redirect&bpo=37305): Add .webmanifest -> application/manifest+json to list of recognized file types and content type headers
  * [bpo-37320](https://bugs.python.org/issue?@action=redirect&bpo=37320): `aifc.openfp()` alias to `aifc.open()`, `sunau.openfp()` alias to `sunau.open()`, and `wave.openfp()` alias to `wave.open()` have been removed. They were deprecated since Python 3.7.
  * [bpo-37315](https://bugs.python.org/issue?@action=redirect&bpo=37315): Deprecated accepting floats with integral value (like `5.0`) in [`math.factorial()`](https://docs.python.org/3/library/math.html#math.factorial "math.factorial").
  * [bpo-37312](https://bugs.python.org/issue?@action=redirect&bpo=37312): `_dummy_thread` and `dummy_threading` modules have been removed. These modules were deprecated since Python 3.7 which requires threading support.
  * [bpo-33972](https://bugs.python.org/issue?@action=redirect&bpo=33972): Email with single part but content-type set to `multipart/*` doesnâ€™t raise AttributeError anymore.
  * [bpo-37280](https://bugs.python.org/issue?@action=redirect&bpo=37280): Use threadpool for reading from file for sendfile fallback mode.
  * [bpo-37279](https://bugs.python.org/issue?@action=redirect&bpo=37279): Fix asyncio sendfile support when sendfile sends extra data in fallback mode.
  * [bpo-19865](https://bugs.python.org/issue?@action=redirect&bpo=19865): [`ctypes.create_unicode_buffer()`](https://docs.python.org/3/library/ctypes.html#ctypes.create_unicode_buffer "ctypes.create_unicode_buffer") now also supports non-BMP characters on platforms with 16-bit `wchar_t` (for example, Windows and AIX).
  * [bpo-37266](https://bugs.python.org/issue?@action=redirect&bpo=37266): In a subinterpreter, spawning a daemon thread now raises an exception. Daemon threads were never supported in subinterpreters.