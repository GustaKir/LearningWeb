Title: os Module - fwalk and memfd_create Functions
URL: https://docs.python.org/3/library/os.html
Summary: This documentation chunk discusses the `os.fwalk` function which raises an auditing event and details its parameters along with version updates. It also describes the `os.memfd_create` function, which creates an anonymous file and returns a file descriptor, specifying requirements for the flags used and the behavior of the file descriptor regarding inheritance.
---

```

Raises an [auditing event](https://docs.python.org/3/library/sys.html#auditing) `os.fwalk` with arguments `top`, `topdown`, `onerror`, `follow_symlinks`, `dir_fd`.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix.
Added in version 3.3.
Changed in version 3.6: Accepts a [path-like object](https://docs.python.org/3/glossary.html#term-path-like-object).
Changed in version 3.7: Added support for [`bytes`](https://docs.python.org/3/library/stdtypes.html#bytes "bytes") paths. 

os.memfd_create(_name_[, _flags=os.MFD_CLOEXEC_])[¶](https://docs.python.org/3/library/os.html#os.memfd_create "Link to this definition")
    
Create an anonymous file and return a file descriptor that refers to it. _flags_ must be one of the `os.MFD_*` constants available on the system (or a bitwise ORed combination of them). By default, the new file descriptor is [non-inheritable](https://docs.python.org/3/library/os.html#fd-inheritance).
The name supplied in _name_ is used as a filename and will be displayed as the target of the corresponding symbolic link in the directory `/proc/self/fd/`. The displayed name is always prefixed with `memfd:` and serves only for debugging purposes. Names do not affect the behavior of the file descriptor, and as such multiple files can have the same name without any side effects.
[Availability](https://docs.python.org/3/library/intro.html#availability): Linux >= 3.17 with glibc >= 2.27.
Added in version 3.8. 

os.MFD_CLOEXEC[¶](https://docs.python.org/3/library/os.html#os.MFD_CLOEXEC "Link to this definition")


os.MFD_ALLOW_SEALING[¶](https://docs.python.org/3/library/os.html#os.MFD_ALLOW_SEALING "Link to this definition")


os.MFD_HUGETLB[¶](https://docs.python.org/3/library/os.html#os.MFD_HUGETLB "Link to this definition")


os.MFD_HUGE_SHIFT[¶](https://docs.python.org/3/library/os.html#os.MFD_HUGE_SHIFT "Link to this definition")


os.MFD_HUGE_MASK[¶](https://docs.python.org/3/library/os.html#os.MFD_HUGE_MASK "Link to this definition")


os.MFD_HUGE_64KB[¶](https://docs.python.org/3/library/os.html#os.MFD_HUGE_64KB "Link to this definition")


os.MFD_HUGE_512KB[¶](https://docs.python.org/3/library/os.html#os.MFD_HUGE_512KB "Link to this definition")


os.MFD_HUGE_1MB[¶](https://docs.python.org/3/library/os.html#os.MFD_HUGE_1MB "Link to this definition")


os.MFD_HUGE_2MB[¶](https://docs.python.org/3/library/os.html#os.MFD_HUGE_2MB "Link to this definition")


os.MFD_HUGE_8MB[¶](https://docs.python.org/3/library/os.html#os.MFD_HUGE_8MB "Link to this definition")


os.MFD_HUGE_16MB[¶](https://docs.python.org/3/library/os.html#os.MFD_HUGE_16MB "Link to this definition")


os.MFD_HUGE_32MB[¶](https://docs.python.org/3/library/os.html#os.MFD_HUGE_32MB "Link to this definition")


os.MFD_HUGE_256MB[¶](https://docs.python.org/3/library/os.html#os.MFD_HUGE_256MB "Link to this definition")


os.MFD_HUGE_512MB[¶](https://docs.python.org/3/library/os.html#os.MFD_HUGE_512MB "Link to this definition")


os.MFD_HUGE_1GB[¶](https://docs.python.org/3/library/os.html#os.MFD_HUGE_1GB "Link to this definition")


os.MFD_HUGE_2GB[¶](https://docs.python.org/3/library/os.html#os.MFD_HUGE_2GB "Link to this definition")


os.MFD_HUGE_16GB[¶](https://docs.python.org/3/library/os.html#os.MFD_HUGE_16GB "Link to this definition")
    
These flags can be passed to [`memfd_create()`](https://docs.python.org/3/library/os.html#os.memfd_create "os.memfd_create").
[Availability](https://docs.python.org/3/library/intro.html#availability): Linux >= 3.17 with glibc >= 2.27
The `MFD_HUGE*` flags are only available since Linux 4.14.
Added in version 3.8.