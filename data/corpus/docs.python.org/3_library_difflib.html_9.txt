Title: Command-Line Interface to difflib
URL: https://docs.python.org/3/library/difflib.html
Summary: This section explains how to use Python's difflib module to create a command-line utility for generating diffs in four formats: ndiff, context, unified, and HTML, highlighting various types of changes between text lines.
---

```
>>> importsys
>>> sys.stdout.writelines(result)
  1. Beautiful is better than ugly.
-  2. Explicit is better than implicit.
-  3. Simple is better than complex.
+  3.  Simple is better than complex.
?   ++
-  4. Complex is better than complicated.
?      ^           ---- ^
+  4. Complicated is better than complex.
?      ++++ ^           ^
+  5. Flat is better than nested.

```

## A command-line interface to difflib[¶](https://docs.python.org/3/library/difflib.html#a-command-line-interface-to-difflib "Link to this heading")
This example shows how to use difflib to create a `diff`-like utility.
```
""" Command line interface to difflib.py providing diffs in four formats:
* ndiff:  lists every line and highlights interline changes.
* context: highlights clusters of changes in a before/after format.
* unified: highlights clusters of changes in an inline format.
* html:   generates side by side comparison with change highlights.
"""
importsys,os,difflib,argparse
fromdatetimeimport datetime, timezone
deffile_mtime(path):
  t = datetime.fromtimestamp(os.stat(path).st_mtime,
                timezone.utc)
  return t.astimezone().isoformat()
defmain():
  parser = argparse.ArgumentParser()
  parser.add_argument('-c', action='store_true', default=False,
            help='Produce a context format diff (default)')
  parser.add_argument('-u', action='store_true', default=False,
            help='Produce a unified format diff')
  parser.add_argument('-m', action='store_true', default=False,
            help='Produce HTML side by side diff '
               '(can use -c and -l in conjunction)')
  parser.add_argument('-n', action='store_true', default=False,
            help='Produce a ndiff format diff')
  parser.add_argument('-l', '--lines', type=int, default=3,
            help='Set number of context lines (default 3)')
  parser.add_argument('fromfile')
  parser.add_argument('tofile')
  options = parser.parse_args()
  n = options.lines
  fromfile = options.fromfile
  tofile = options.tofile
  fromdate = file_mtime(fromfile)
  todate = file_mtime(tofile)
  with open(fromfile) as ff:
    fromlines = ff.readlines()
  with open(tofile) as tf:
    tolines = tf.readlines()
  if options.u:
    diff = difflib.unified_diff(fromlines, tolines, fromfile, tofile, fromdate, todate, n=n)
  elif options.n:
    diff = difflib.ndiff(fromlines, tolines)
  elif options.m:
    diff = difflib.HtmlDiff().make_file(fromlines,tolines,fromfile,tofile,context=options.c,numlines=n)
  else:
    diff = difflib.context_diff(fromlines, tolines, fromfile, tofile, fromdate, todate, n=n)
  sys.stdout.writelines(diff)
if __name__ == '__main__':
  main()

```

## ndiff example[¶](https://docs.python.org/3/library/difflib.html#ndiff-example "Link to this heading")
This example shows how to use [`difflib.ndiff()`](https://docs.python.org/3/library/difflib.html#difflib.ndiff "difflib.ndiff").