Title: Python 3.3 Release Notes
URL: https://docs.python.org/3/whatsnew/3.3.html
Summary: The 3.3 release introduces new features including the OP_CIPHER_SERVER_PREFERENCE attribute for SSLv3, enabling servers to prioritize their cipher ordering. Additionally, the undocumented tarfile.filemode function has been relocated to stat.filemode(), allowing conversion of file modes to string format.
---

1811](https://bugs.python.org/issue?@action=redirect&bpo=11811).)
  * New attribute [`OP_CIPHER_SERVER_PREFERENCE`](https://docs.python.org/3/library/ssl.html#ssl.OP_CIPHER_SERVER_PREFERENCE "ssl.OP_CIPHER_SERVER_PREFERENCE") allows setting SSLv3 server sockets to use the server’s cipher ordering preference rather than the client’s ([bpo-13635](https://bugs.python.org/issue?@action=redirect&bpo=13635)).


### stat[¶](https://docs.python.org/3/whatsnew/3.3.html#stat "Link to this heading")
The undocumented tarfile.filemode function has been moved to [`stat.filemode()`](https://docs.python.org/3/library/stat.html#stat.filemode "stat.filemode"). It can be used to convert a file’s mode to a string of the form ‘-rwxrwxrwx’.
(Contributed by Giampaolo Rodolà in [bpo-14807](https://bugs.python.org/issue?@action=redirect&bpo=14807).)
### struct[¶](https://docs.python.org/3/whatsnew/3.3.html#struct "Link to this heading")
The [`struct`](https://docs.python.org/3/library/struct.html#module-struct "struct: Interpret bytes as packed binary data.") module now supports `ssize_t` and `size_t` via the new codes `n` and `N`, respectively. (Contributed by Antoine Pitrou in [bpo-3163](https://bugs.python.org/issue?@action=redirect&bpo=3163).)
### subprocess[¶](https://docs.python.org/3/whatsnew/3.3.html#subprocess "Link to this heading")
Command strings can now be bytes objects on posix platforms. (Contributed by Victor Stinner in [bpo-8513](https://bugs.python.org/issue?@action=redirect&bpo=8513).)
A new constant [`DEVNULL`](https://docs.python.org/3/library/subprocess.html#subprocess.DEVNULL "subprocess.DEVNULL") allows suppressing output in a platform-independent fashion. (Contributed by Ross Lagerwall in [bpo-5870](https://bugs.python.org/issue?@action=redirect&bpo=5870).)
### sys[¶](https://docs.python.org/3/whatsnew/3.3.html#sys "Link to this heading")
The [`sys`](https://docs.python.org/3/library/sys.html#module-sys "sys: Access system-specific parameters and functions.") module has a new [`thread_info`](https://docs.python.org/3/library/sys.html#sys.thread_info "sys.thread_info") [named tuple](https://docs.python.org/3/glossary.html#term-named-tuple) holding information about the thread implementation ([bpo-11223](https://bugs.python.org/issue?@action=redirect&bpo=11223)).
### tarfile[¶](https://docs.python.org/3/whatsnew/3.3.html#tarfile "Link to this heading")
[`tarfile`](https://docs.python.org/3/library/tarfile.html#module-tarfile "tarfile: Read and write tar-format archive files.") now supports `lzma` encoding via the [`lzma`](https://docs.python.org/3/library/lzma.html#module-lzma "lzma: A Python wrapper for the liblzma compression library.") module. (Contributed by Lars Gustäbel in [bpo-5689](https://bugs.python.org/issue?@action=redirect&bpo=5689).)
### tempfile[¶](https://docs.python.org/3/whatsnew/3.3.html#tempfile "Link to this heading")
[`tempfile.SpooledTemporaryFile`](https://docs.python.org/3/library/tempfile.html#tempfile.SpooledTemporaryFile "tempfile.SpooledTemporaryFile")'s `truncate()` method now accepts a `size` parameter. (Contributed by Ryan Kelly in [bpo-9957](https://bugs.python.org/issue?@action=redirect&bpo=9957).)
### textwrap[¶](https://docs.python.org/3/whatsnew/3.3.html#textwrap "Link to this heading")
The [`textwrap`](https://docs.python.org/3/library/textwrap.html#module-textwrap "textwrap: Text wrapping and filling") module has a new [`indent()`](https://docs.python.org/3/library/textwrap.html#textwrap.indent "textwrap.indent") that makes it straightforward to add a common prefix to selected lines in a block of text ([bpo-13857](https://bugs.python.org/issue?@action=redirect&bpo=13857)).
### threading[¶](https://docs.python.org/3/whatsnew/3.3.html#threading "Link to this heading")
[`threading.Condition`](https://docs.python.org/3/library/threading.html#threading.Condition "threading.Condition"), [`threading.Semaphore`](https://docs.python.org/3/library/threading.html#threading.Semaphore "threading.Semaphore"), [`threading.BoundedSemaphore`](https://docs.python.org/3/library/threading.html#threading.BoundedSemaphore "threading.BoundedSemaphore"), [`threading.Event`](https://docs.python.org/3/library/threading.html#threading.Event "threading.Event"), and [`threading.Timer`](https://docs.python.org/3/library/threading.html#threading.Timer "threading.Timer"), all of which used to be factory functions returning a class instance, are now classes and may be subclassed. (Contributed by Éric Araujo in [bpo-10968](https://bugs.python.org/issue?@action=redirect&bpo=10968).)
The [`threading.Thread`](https://docs.python.org/3/library/threading.html#threading.Thread "threading.Thread") constructor now accepts a `daemon` keyword argument to override the default behavior of inheriting the `daemon` flag value from the parent thread ([bpo-6064](https://bugs.python.org/issue?@action=redirect&bpo=6064)).
The formerly private function `_thread.get_ident` is now available as the public function [`threading.