Title: Python 3 Change Log Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: Enhancements include improvements to `obj.__dict__.clear()`, performance optimizations for various `bytes` and `bytearray` methods using the `METH_FASTCALL` convention, and speed improvements for the `str()` function utilizing PEP 590's `vectorcall` convention.
---

`obj.__dict__.clear()` now clears the internal values, but leaves the dict attached to the object.
  * [gh-117431](https://github.com/python/cpython/issues/117431): Improve the performance of the following [`bytes`](https://docs.python.org/3/library/stdtypes.html#bytes "bytes") and [`bytearray`](https://docs.python.org/3/library/stdtypes.html#bytearray "bytearray") methods by adapting them to the [`METH_FASTCALL`](https://docs.python.org/3/c-api/structures.html#c.METH_FASTCALL "METH_FASTCALL") calling convention:
    * `count()`
    * `find()`
    * `index()`
    * `rfind()`
    * `rindex()`
  * [gh-117709](https://github.com/python/cpython/issues/117709): Speed up calls to [`str()`](https://docs.python.org/3/library/stdtypes.html#str "str") with positional-only argument, by using the [**PEP 590**](https://peps.python.org/pep-0590/) `vectorcall` calling convention. Patch by Erlend Aasland.
  * [gh-117680](https://github.com/python/cpython/issues/117680): Give `_PyInstructionSequence` a Python interface and use it in tests.
  * [gh-115776](https://github.com/python/cpython/issues/115776): Statically allocated objects are, by definition, immortal so must be marked as such regardless of whether they are in extension modules or not.
  * [gh-117385](https://github.com/python/cpython/issues/117385): Remove unhandled `PY_MONITORING_EVENT_BRANCH` and `PY_MONITORING_EVENT_EXCEPTION_HANDLED` events from [`sys.settrace()`](https://docs.python.org/3/library/sys.html#sys.settrace "sys.settrace").
  * [gh-116322](https://github.com/python/cpython/issues/116322): Extension modules may indicate to the runtime that they can run without the GIL. Multi-phase init modules do so by calling providing `Py_MOD_GIL_NOT_USED` for the `Py_mod_gil` slot, while single-phase init modules call `PyUnstable_Module_SetGIL(mod, Py_MOD_GIL_NOT_USED)` from their init function.
  * [gh-116129](https://github.com/python/cpython/issues/116129): Implement [**PEP 696**](https://peps.python.org/pep-0696/), adding support for defaults on type parameters. Patch by Jelle Zijlstra.
  * [gh-93502](https://github.com/python/cpython/issues/93502): Add two new functions to the C-API, [`PyRefTracer_SetTracer()`](https://docs.python.org/3/c-api/init.html#c.PyRefTracer_SetTracer "PyRefTracer_SetTracer") and [`PyRefTracer_GetTracer()`](https://docs.python.org/3/c-api/init.html#c.PyRefTracer_GetTracer "PyRefTracer_GetTracer"), that allows to track object creation and destruction the same way the [`tracemalloc`](https://docs.python.org/3/library/tracemalloc.html#module-tracemalloc "tracemalloc: Trace memory allocations.") module does. Patch by Pablo Galindo
  * [gh-107674](https://github.com/python/cpython/issues/107674): Improved the performance of [`sys.settrace()`](https://docs.python.org/3/library/sys.html#sys.settrace "sys.settrace") significantly
  * [gh-95754](https://github.com/python/cpython/issues/95754): Improve the error message when a script shadowing a module from the standard library causes [`AttributeError`](https://docs.python.org/3/library/exceptions.html#AttributeError "AttributeError") to be raised. Similarly, improve the error message when a script shadowing a third party module attempts to access an attribute from that third party module while still initialising.
  * [gh-99180](https://github.com/python/cpython/issues/99180): Elide uninformative traceback indicators in `return` and simple `assignment` statements. Patch by Pablo Galindo.
  * [gh-105879](https://github.com/python/cpython/issues/105879): Allow the _globals_ and _locals_ arguments to [`exec()`](https://docs.python.org/3/library/functions.html#exec "exec") and [`eval()`](https://docs.python.org/3/library/functions.html#eval "eval") to be passed as keywords.