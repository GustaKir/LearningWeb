Title: Warning Control in Python Command Line
URL: https://docs.python.org/3/using/cmdline.html
Summary: This section describes how to use the `-W` option in Python's command line to control warning behavior. It explains matching fields for warnings, including the action, message, category, module, and line number, as well as the implications of providing multiple `-W` options.
---

```

Empty fields match all values; trailing empty fields may be omitted. For example `-W ignore::DeprecationWarning` ignores all DeprecationWarning warnings.
The _action_ field is as explained above but only applies to warnings that match the remaining fields.
The _message_ field must match the whole warning message; this match is case-insensitive.
The _category_ field matches the warning category (ex: `DeprecationWarning`). This must be a class name; the match test whether the actual warning category of the message is a subclass of the specified warning category.
The _module_ field matches the (fully qualified) module name; this match is case-sensitive.
The _lineno_ field matches the line number, where zero matches all line numbers and is thus equivalent to an omitted line number.
Multiple [`-W`](https://docs.python.org/3/using/cmdline.html#cmdoption-W) options can be given; when a warning matches more than one option, the action for the last matching option is performed. Invalid [`-W`](https://docs.python.org/3/using/cmdline.html#cmdoption-W) options are ignored (though, a warning message is printed about invalid options when the first warning is issued).
Warnings can also be controlled using the [`PYTHONWARNINGS`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONWARNINGS) environment variable and from within a Python program using the [`warnings`](https://docs.python.org/3/library/warnings.html#module-warnings "warnings: Issue warning messages and control their disposition.") module. For example, the [`warnings.filterwarnings()`](https://docs.python.org/3/library/warnings.html#warnings.filterwarnings "warnings.filterwarnings") function can be used to use a regular expression on the warning message.
See [The Warnings Filter](https://docs.python.org/3/library/warnings.html#warning-filter) and [Describing Warning Filters](https://docs.python.org/3/library/warnings.html#describing-warning-filters) for more details. 

-x[Â¶](https://docs.python.org/3/using/cmdline.html#cmdoption-x "Link to this definition")
    
Skip the first line of the source, allowing use of non-Unix forms of `#!cmd`. This is intended for a DOS specific hack only.