Title: os.add_dll_directory
URL: https://docs.python.org/3/library/os.html
Summary: The `os.add_dll_directory` function adds a specified path to the DLL search path for resolving dependencies of imported extension modules and by `ctypes`. The directory can be removed by calling `close()` on the returned object or using it in a `with` statement. This function raises an auditing event upon use.
---

os.add_dll_directory(_path_)[¶](https://docs.python.org/3/library/os.html#os.add_dll_directory "Link to this definition")
    
Add a path to the DLL search path.
This search path is used when resolving dependencies for imported extension modules (the module itself is resolved through [`sys.path`](https://docs.python.org/3/library/sys.html#sys.path "sys.path")), and also by [`ctypes`](https://docs.python.org/3/library/ctypes.html#module-ctypes "ctypes: A foreign function library for Python.").
Remove the directory by calling **close()** on the returned object or using it in a [`with`](https://docs.python.org/3/reference/compound_stmts.html#with) statement.
See the [Microsoft documentation](https://msdn.microsoft.com/44228cf2-6306-466c-8f16-f513cd3ba8b5) for more information about how DLLs are loaded.
Raises an [auditing event](https://docs.python.org/3/library/sys.html#auditing) `os.add_dll_directory` with argument `path`.
[Availability](https://docs.python.org/3/library/intro.html#availability): Windows.
Added in version 3.8: Previous versions of CPython would resolve DLLs using the default behavior for the current process. This led to inconsistencies, such as only sometimes searching `PATH` or the current working directory, and OS functions such as `AddDllDirectory` having no effect.
In 3.8, the two primary ways DLLs are loaded now explicitly override the process-wide behavior to ensure consistency. See the [porting notes](https://docs.python.org/3/whatsnew/3.8.html#bpo-36085-whatsnew) for information on updating libraries. 

os.execl(_path_ , _arg0_ , _arg1_ , _..._)[¶](https://docs.python.org/3/library/os.html#os.execl "Link to this definition")


os.execle(_path_ , _arg0_ , _arg1_ , _..._ , _env_)[¶](https://docs.python.org/3/library/os.html#os.execle "Link to this definition")


os.execlp(_file_ , _arg0_ , _arg1_ , _..._)[¶](https://docs.python.org/3/library/os.html#os.execlp "Link to this definition")


os.execlpe(_file_ , _arg0_ , _arg1_ , _..._ , _env_)[¶](https://docs.python.org/3/library/os.html#os.execlpe "Link to this definition")


os.execv(_path_ , _args_)[¶](https://docs.python.org/3/library/os.html#os.execv "Link to this definition")


os.execve(_path_ , _args_ , _env_)[¶](https://docs.python.org/3/library/os.html#os.execve "Link to this definition")


os.execvp(_file_ , _args_)[¶](https://docs.python.org/3/library/os.html#os.execvp "Link to this definition")