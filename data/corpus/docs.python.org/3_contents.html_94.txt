Title: Python Documentation Overview
URL: https://docs.python.org/3/contents.html
Summary: This section outlines various Python modules, including Unix syslog library routines, command-line interface modules, superseded and removed modules, security considerations, and guidance on extending and embedding the Python interpreter with recommended tools.
---

urce.html#resource-usage)
      * [`syslog` — Unix syslog library routines](https://docs.python.org/3/library/syslog.html)
        * [Examples](https://docs.python.org/3/library/syslog.html#examples)
          * [Simple example](https://docs.python.org/3/library/syslog.html#simple-example)
    * [Modules command-line interface (CLI)](https://docs.python.org/3/library/cmdline.html)
    * [Superseded Modules](https://docs.python.org/3/library/superseded.html)
      * [`getopt` — C-style parser for command line options](https://docs.python.org/3/library/getopt.html)
    * [Removed Modules](https://docs.python.org/3/library/removed.html)
    * [Security Considerations](https://docs.python.org/3/library/security_warnings.html)
  * [Extending and Embedding the Python Interpreter](https://docs.python.org/3/extending/index.html)
    * [Recommended third party tools](https://docs.python.org/3/extending/index.html#recommended-third-party-tools)
    * [Creating extensions without third party tools](https://docs.python.org/3/extending/index.html#creating-extensions-without-third-party-tools)
      * [1. Extending Python with C or C++](https://docs.python.org/3/extending/extending.html)
        * [1.1. A Simple Example](https://docs.python.org/3/extending/extending.html#a-simple-example)
        * [1.2. Intermezzo: Errors and Exceptions](https://docs.python.org/3/extending/extending.html#intermezzo-errors-and-exceptions)
        * [1.3. Back to the Example](https://docs.python.org/3/extending/extending.html#back-to-the-example)
        * [1.4. The Module’s Method Table and Initialization Function](https://docs.python.org/3/extending/extending.html#the-module-s-method-table-and-initialization-function)
        * [1.5. Compilation and Linkage](https://docs.python.org/3/extending/extending.html#compilation-and-linkage)
        * [1.6. Calling Python Functions from C](https://docs.python.org/3/extending/extending.html#calling-python-functions-from-c)
        * [1.7. Extracting Parameters in Extension Functions](https://docs.python.org/3/extending/extending.html#extracting-parameters-in-extension-functions)
        * [1.8. Keyword Parameters for Extension Functions](https://docs.python.org/3/extending/extending.html#keyword-parameters-for-extension-functions)
        * [1.9. Building Arbitrary Values](https://docs.python.org/3/extending/extending.html#building-arbitrary-values)
        * [1.10. Reference Counts](https://docs.python.org/3/extending/extending.html#reference-counts)
          * [1.10.1. Reference Counting in Python](https://docs.python.org/3/extending/extending.html#reference-counting-in-python)
          * [1.10.2. Ownership Rules](https://docs.python.org/3/extending/extending.html#ownership-rules)
          * [1.10.3. Thin Ice](https://docs.python.org/3/extending/extending.html#thin-ice)
          * [1.10.4. NULL Pointers](https://docs.python.org/3/extending/extending.html#null-pointers)
        * [1.11. Writing Extensions in C++](https://docs.python.org/3/extending/extending.html#writing-extensions-in-c)
        * [1.12. Providing a C API for an Extension Module](https://docs.python.org/3/extending/extending.html#providing-a-c-api-for-an-extension-module)
      * [2. Defining Extension Types: Tutorial](https://docs.python.org/3/extending/newtypes_tutorial.html)
        * [2.1. The Basics](https://docs.python.org/3/extending/newtypes_tutorial.html#the-basics)
        * [2.2. Adding data and methods to the Basic example](https://docs.python.org/3/extending/newtypes_tutorial.html#adding-data-and-methods-to-the-basic-example)
        * [2.3. Providing finer control over data attributes](https://docs.python.org/3/extending/newtypes_tutorial.html#providing-finer-control-over-data-attributes)
        * [2.4. Supporting cyclic garbage collection](https://docs.python.org/3/extending/newtypes_tutorial.html#supporting-cyclic-garbage-collection)
        * [2.5. Subclassing other types](https://docs.python.org/3/extending/newtypes_tutorial.html#subclassing-other-types)
      * [3. Defining Extension Types: Assorted Topics](https://docs.python.org/3/extending/newtypes.html)
        * [3.1. Finalization and De-allocation](https://docs.python.org/3/extending/newtypes.html#finalization-and-de-allocation)
        * [3.2. Object Presentation](https://docs.python.org/3/extending/newtypes.html#object-presentation)
        * [3.3. Attribute Management](https://docs.python.org/3/extending/newtypes.html#attribute-management)
          * [3.3.1. Generic Attribute Management](https://docs.python.org/3/extending/newtypes.html#generic-attribute-management)
          * [3.3.2. Type-specific Attribute Management](https://docs.python.org/3/extending/newtypes.html#type-specific-attribute-management)
        * [3.4. Object Comparison](https://docs.python.org/3/extending/newtypes.html#object-comparison)
        * [3.5. Abstract Protocol Support](https://docs.python.org/3/extending/newtypes.html#abstract-protocol-support)
        * [3.6.