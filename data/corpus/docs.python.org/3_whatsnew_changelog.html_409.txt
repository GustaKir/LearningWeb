Title: Python 3.9 Release Notes - macOS and Thread Safety Improvements
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: Significant updates include the removal of an internal lock in `socket.getaddrinfo()` for macOS 10.4 and older, enhancing thread safety and preventing random hangs during forks. Additionally, `_hashlib` is prepared for PEP 489 with the implementation of `PyModule_AddType()`.
---

Patch contributed by Mark Schwab.
  * [bpo-25920](https://bugs.python.org/issue?@action=redirect&bpo=25920): On macOS, when building Python for macOS 10.4 and older, which wasn’t the case for python.org macOS installer, [`socket.getaddrinfo()`](https://docs.python.org/3/library/socket.html#socket.getaddrinfo "socket.getaddrinfo") no longer uses an internal lock to prevent race conditions when calling `getaddrinfo()` which is thread-safe since macOS 10.5. Python 3.9 requires macOS 10.6 or newer. The internal lock caused random hang on fork when another thread was calling [`socket.getaddrinfo()`](https://docs.python.org/3/library/socket.html#socket.getaddrinfo "socket.getaddrinfo"). The lock was also used on FreeBSD older than 5.3, OpenBSD older than 201311 and NetBSD older than 4.
  * [bpo-40671](https://bugs.python.org/issue?@action=redirect&bpo=40671): Prepare `_hashlib` for [**PEP 489**](https://peps.python.org/pep-0489/) and use [`PyModule_AddType()`](https://docs.python.org/3/c-api/module.html#c.PyModule_AddType "PyModule_AddType").
  * [bpo-32309](https://bugs.python.org/issue?@action=redirect&bpo=32309): Added a new [coroutine](https://docs.python.org/3/glossary.html#term-coroutine) [`asyncio.to_thread()`](https://docs.python.org/3/library/asyncio-task.html#asyncio.to_thread "asyncio.to_thread"). It is mainly used for running IO-bound functions in a separate thread to avoid blocking the event loop, and essentially works as a high-level version of [`run_in_executor()`](https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.loop.run_in_executor "asyncio.loop.run_in_executor") that can directly take keyword arguments.
  * [bpo-36543](https://bugs.python.org/issue?@action=redirect&bpo=36543): Restored the deprecated `xml.etree.cElementTree` module.
  * [bpo-40611](https://bugs.python.org/issue?@action=redirect&bpo=40611): [`MAP_POPULATE`](https://docs.python.org/3/library/mmap.html#mmap.MAP_POPULATE "mmap.MAP_POPULATE") constant has now been added to the list of exported [`mmap`](https://docs.python.org/3/library/mmap.html#module-mmap "mmap: Interface to memory-mapped files for Unix and Windows.") module flags.
  * [bpo-39881](https://bugs.python.org/issue?@action=redirect&bpo=39881): PEP 554 for use in the test suite. (Patch By Joannah Nanjekye)
  * [bpo-13097](https://bugs.python.org/issue?@action=redirect&bpo=13097): `ctypes` now raises an `ArgumentError` when a callback is invoked with more than 1024 arguments.
  * [bpo-39385](https://bugs.python.org/issue?@action=redirect&bpo=39385): A new test assertion context-manager, `unittest.assertNoLogs()` will ensure a given block of code emits no log messages using the logging module. Contributed by Kit Yan Choi.
  * [bpo-23082](https://bugs.python.org/issue?@action=redirect&bpo=23082): Updated the error message and docs of PurePath.relative_to() to better reflect the function behaviour.
  * [bpo-40318](https://bugs.python.org/issue?@action=redirect&bpo=40318): Use SQLite3 trace v2 API, if it is available.
  * [bpo-40105](https://bugs.python.org/issue?@action=redirect&bpo=40105): ZipFile truncates files to avoid corruption when a shorter comment is provided in append (“a”) mode. Patch by Jan Mazur.
  * [bpo-40084](https://bugs.python.org/issue?@action=redirect&bpo=40084): Fix `Enum.__dir__`: dir(Enum.member) now includes attributes as well as methods.
  * [bpo-31122](https://bugs.python.org/issue?@action=redirect&bpo=31122): ssl.wrap_socket() now raises ssl.SSLEOFError rather than OSError when peer closes connection during TLS negotiation
  * [bpo-39728](https://bugs.python.org/issue?@action=redirect&bpo=39728): fix default `_missing_` so a duplicate `ValueError` is not set as the `__context__` of the original `ValueError`.
  * [bpo-39244](https://bugs.python.org/issue?@action=redirect&bpo=39244): Fixed `multiprocessing.context.get_all_start_methods` to properly return the default method first on macOS.
  * [bpo-39040](https://bugs.python.org/issue?@action=redirect&bpo=39040): Fix parsing of invalid mime headers parameters by collapsing whitespace between encoded words in a bare-quote-string.
  * [bpo-38731](https://bugs.python.org/issue?@action=redirect&bpo=38731): Add `--quiet` option to command-line interface of [`py_compile`](https://docs.python.org/3/library/py_compile.html#module-py_compile "py_compile: Generate byte-code files from Python source files.").