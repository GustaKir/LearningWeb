Title: Build Changes in Python
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: Recent updates to the Python build process include the addition of the _contextvars module to the core library on Windows, improvements to Azure Pipelines build steps, the removal of asynciomodule.c from the project, corrections to Solaris compilation checks, and enhancements to the handling of profile-guided optimization flags in the make process.
---

### Build[¶](https://docs.python.org/3/whatsnew/changelog.html#id478 "Link to this heading")
  * [bpo-34691](https://bugs.python.org/issue?@action=redirect&bpo=34691): The _contextvars module is now built into the core Python library on Windows.
  * [bpo-35683](https://bugs.python.org/issue?@action=redirect&bpo=35683): Improved Azure Pipelines build steps and now verifying layouts correctly
  * [bpo-35642](https://bugs.python.org/issue?@action=redirect&bpo=35642): Remove asynciomodule.c from pythoncore.vcxproj
  * [bpo-35550](https://bugs.python.org/issue?@action=redirect&bpo=35550): Fix incorrect Solaris #ifdef checks to look for __sun && __SVR4 instead of sun when compiling.
  * [bpo-35499](https://bugs.python.org/issue?@action=redirect&bpo=35499): `make profile-opt` no longer replaces `CFLAGS_NODIST` with `CFLAGS`. It now adds profile-guided optimization (PGO) flags to `CFLAGS_NODIST`: existing `CFLAGS_NODIST` flags are kept.
  * [bpo-35257](https://bugs.python.org/issue?@action=redirect&bpo=35257): Avoid leaking the linker flags from Link Time Optimizations (LTO) into distutils when compiling C extensions.
  * [bpo-35351](https://bugs.python.org/issue?@action=redirect&bpo=35351): When building Python with clang and LTO, LTO flags are no longer passed into CFLAGS to build third-party C extensions through distutils.
  * [bpo-35139](https://bugs.python.org/issue?@action=redirect&bpo=35139): Fix a compiler error when statically linking `pyexpat` in `Modules/Setup`.
  * [bpo-35059](https://bugs.python.org/issue?@action=redirect&bpo=35059): PCbuild: Set InlineFunctionExpansion to OnlyExplicitInline (“/Ob1” option) in pyproject.props in Debug mode to expand functions marked as inline. This change should make Python compiled in Debug mode a little bit faster on Windows.
  * [bpo-35011](https://bugs.python.org/issue?@action=redirect&bpo=35011): Restores the use of pyexpatns.h to isolate our embedded copy of the expat C library so that its symbols do not conflict at link or dynamic loading time with an embedding application or other extension modules with their own version of libexpat.
  * [bpo-28015](https://bugs.python.org/issue?@action=redirect&bpo=28015): Have –with-lto works correctly with clang.
  * [bpo-34765](https://bugs.python.org/issue?@action=redirect&bpo=34765): Update the outdated install-sh file to the latest revision from automake v1.16.1
  * [bpo-34585](https://bugs.python.org/issue?@action=redirect&bpo=34585): Check for floating-point byte order in configure.ac using compilation tests instead of executing code, so that these checks work in cross-compiled builds.
  * [bpo-34710](https://bugs.python.org/issue?@action=redirect&bpo=34710): Fixed SSL module build with OpenSSL & pedantic CFLAGS.
  * [bpo-34582](https://bugs.python.org/issue?@action=redirect&bpo=34582): Add JUnit XML output for regression tests and update Azure DevOps builds.
  * [bpo-34081](https://bugs.python.org/issue?@action=redirect&bpo=34081): Make Sphinx warnings as errors in the Docs Makefile.
  * [bpo-34555](https://bugs.python.org/issue?@action=redirect&bpo=34555): Fix for case where it was not possible to have both `HAVE_LINUX_VM_SOCKETS_H` and `HAVE_SOCKADDR_ALG` be undefined.
  * [bpo-33015](https://bugs.python.org/issue?@action=redirect&bpo=33015): Fix an undefined behaviour in the pthread implementation of `PyThread_start_new_thread()`: add a function wrapper to always return `NULL`.
  * [bpo-34245](https://bugs.python.org/issue?@action=redirect&bpo=34245): The Python shared library is now installed with write permission (mode 0755), which is the standard way of installing such libraries.
  * [bpo-34121](https://bugs.python.org/issue?@action=redirect&bpo=34121): Fix detection of C11 atomic support on clang.
  * [bpo-32430](https://bugs.python.org/issue?@action=redirect&bpo=32430): Rename Modules/Setup.dist to Modules/Setup, and remove the necessity to copy the former manually to the latter when updating the local source tree.
  * [bpo-30345](https://bugs.python.org/issue?@action=redirect&bpo=30345): Add -g to LDFLAGS when compiling with LTO to get debug symbols.
  * [bpo-5755](https://bugs.python.org/issue?@action=redirect&bpo=5755): Move `-Wstrict-prototypes` option to `CFLAGS_NODIST` from `OPT`. This option emitted annoying warnings when building extension modules written in C++.
  * [bpo-33614](https://bugs.python.org/issue?@action=redirect&bpo=33614): Ensures module definition files for the stable ABI on Windows are correctly regenerated.
  * [bpo-33648](https://bugs.python.org/issue?@action=redirect&bpo=33648): The –with-c-locale-warning configuration flag has been removed. It has had no effect for about a year.
  * [bpo-33522](https://bugs.python.org/issue?@action=redirect&bpo=33522): Enable CI builds on Visual Studio Team Services at <https://python.visualstudio.com/cpython>
  * [bpo-33512](https://bugs.python.org/issue?@action=redirect&bpo=33512): configure’s check for “long double” has been simplified
  * [bpo