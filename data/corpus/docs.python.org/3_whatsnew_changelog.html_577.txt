Title: Python Library Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section outlines various updates to the Python library, including the deprecation of exposing collections.abc in the collections module, changes in the ssl module's default cipher suite selection approach, updates to contextlib.contextmanager for improved argument handling, and other significant modifications.
---

### Library[¶](https://docs.python.org/3/whatsnew/changelog.html#id530 "Link to this heading")
  * [bpo-25988](https://bugs.python.org/issue?@action=redirect&bpo=25988): Deprecate exposing the contents of collections.abc in the regular collections module.
  * [bpo-31429](https://bugs.python.org/issue?@action=redirect&bpo=31429): The default cipher suite selection of the ssl module now uses a blacklist approach rather than a hard-coded whitelist. Python no longer re-enables ciphers that have been blocked by OpenSSL security update. Default cipher suite selection can be configured on compile time.
  * [bpo-30306](https://bugs.python.org/issue?@action=redirect&bpo=30306): contextlib.contextmanager now releases the arguments passed to the underlying generator as soon as the context manager is entered. Previously it would keep them alive for as long as the context manager was alive, even when not being used as a function decorator. Patch by Martin Teichmann.
  * [bpo-21417](https://bugs.python.org/issue?@action=redirect&bpo=21417): Added support for setting the compression level for zipfile.ZipFile.
  * [bpo-32251](https://bugs.python.org/issue?@action=redirect&bpo=32251): Implement asyncio.BufferedProtocol (provisional API).
  * [bpo-32513](https://bugs.python.org/issue?@action=redirect&bpo=32513): In dataclasses, allow easier overriding of dunder methods without specifying decorator parameters.
  * [bpo-32660](https://bugs.python.org/issue?@action=redirect&bpo=32660): [`termios`](https://docs.python.org/3/library/termios.html#module-termios "termios: POSIX style tty control. \(Unix\)") makes available `FIONREAD`, `FIONCLEX`, `FIOCLEX`, `FIOASYNC` and `FIONBIO` also under Solaris/derivatives.
  * [bpo-27931](https://bugs.python.org/issue?@action=redirect&bpo=27931): Fix email address header parsing error when the username is an empty quoted string. Patch by Xiang Zhang.
  * [bpo-32659](https://bugs.python.org/issue?@action=redirect&bpo=32659): Under Solaris and derivatives, [`os.stat_result`](https://docs.python.org/3/library/os.html#os.stat_result "os.stat_result") provides a st_fstype attribute.
  * [bpo-32662](https://bugs.python.org/issue?@action=redirect&bpo=32662): Implement Server.start_serving(), Server.serve_forever(), and Server.is_serving() methods. Add ‘start_serving’ keyword parameter to loop.create_server() and loop.create_unix_server().
  * [bpo-32391](https://bugs.python.org/issue?@action=redirect&bpo=32391): Implement [`asyncio.StreamWriter.wait_closed()`](https://docs.python.org/3/library/asyncio-stream.html#asyncio.StreamWriter.wait_closed "asyncio.StreamWriter.wait_closed") and [`asyncio.StreamWriter.is_closing()`](https://docs.python.org/3/library/asyncio-stream.html#asyncio.StreamWriter.is_closing "asyncio.StreamWriter.is_closing") methods
  * [bpo-32643](https://bugs.python.org/issue?@action=redirect&bpo=32643): Make Task._step, Task._wakeup and Future._schedule_callbacks methods private.
  * [bpo-32630](https://bugs.python.org/issue?@action=redirect&bpo=32630): Refactor decimal module to use contextvars to store decimal context.
  * [bpo-32622](https://bugs.python.org/issue?@action=redirect&bpo=32622): Add `asyncio.AbstractEventLoop.sendfile()` method.
  * [bpo-32304](https://bugs.python.org/issue?@action=redirect&bpo=32304): distutils’ upload command no longer corrupts tar files ending with a CR byte, and no longer tries to convert CR to CRLF in any of the upload text fields.
  * [bpo-32502](https://bugs.python.org/issue?@action=redirect&bpo=32502): uuid.uuid1 no longer raises an exception if a 64-bit hardware address is encountered.
  * [bpo-32596](https://bugs.python.org/issue?@action=redirect&bpo=32596): `concurrent.futures` imports `ThreadPoolExecutor` and `ProcessPoolExecutor` lazily (using [**PEP 562**](https://peps.python.org/pep-0562/)). It makes `import asyncio` about 15% faster because asyncio uses only `ThreadPoolExecutor` by default.
  * [bpo-31801](https://bugs.python.org/issue?@action=redirect&bpo=31801): Add `_ignore_` to `Enum` so temporary variables can be used during class construction without being turned into members.
  * [bpo-32576](https://bugs.python.org/issue?@action=redirect&bpo=32576): Use queue.SimpleQueue() in places where it can be invoked from a weakref callback.
  * [bpo-32574](https://bugs.python.org/issue?@action=redirect&bpo=32574): Fix memory leak in asyncio.Queue, when the queue has limited size and it is full, the cancelation of queue.put() can cause a memory leak. Patch by: José Melero.
  * [bpo-32521](https://bugs.python.org/issue?@action=redirect&bpo=32521): The nis module is now compatible with new libnsl and headers location.
  * [bpo-32467](https://bugs.python.org/issue?@action=redirect&bpo=32467): collections.abc.ValuesView now inherits from collections.abc.Collection.
  * [bpo-32473](https://bugs.python.org/issue?@action=redirect&bpo=32473): Improve ABCMeta._dump_registry() output readability
  * [bpo-32102](https://bugs.python.org/issue?@a