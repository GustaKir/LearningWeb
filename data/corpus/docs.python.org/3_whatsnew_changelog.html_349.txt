Title: Python 3.10.0 beta 1 Release Notes
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section details the release of Python 3.10.0 beta 1, which includes updates on security features such as enhanced auditing events for `sqlite3.Connection` objects and improved defaults for cipher suites in the `ssl` module.
---

## Python 3.10.0 beta 1[¶](https://docs.python.org/3/whatsnew/changelog.html#python-3-10-0-beta-1 "Link to this heading")
_Release date: 2021-05-03_
### Security[¶](https://docs.python.org/3/whatsnew/changelog.html#id289 "Link to this heading")
  * [bpo-43434](https://bugs.python.org/issue?@action=redirect&bpo=43434): Creating [`sqlite3.Connection`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection "sqlite3.Connection") objects now also produces `sqlite3.connect` and `sqlite3.connect/handle` [auditing events](https://docs.python.org/3/library/sys.html#auditing). Previously these events were only produced by [`sqlite3.connect()`](https://docs.python.org/3/library/sqlite3.html#sqlite3.connect "sqlite3.connect") calls. Patch by Erlend E. Aasland.
  * [bpo-43998](https://bugs.python.org/issue?@action=redirect&bpo=43998): The [`ssl`](https://docs.python.org/3/library/ssl.html#module-ssl "ssl: TLS/SSL wrapper for socket objects") module sets more secure cipher suites defaults. Ciphers without forward secrecy and with SHA-1 MAC are disabled by default. Security level 2 prohibits weak RSA, DH, and ECC keys with less than 112 bits of security. [`SSLContext`](https://docs.python.org/3/library/ssl.html#ssl.SSLContext "ssl.SSLContext") defaults to minimum protocol version TLS 1.2. Settings are based on Hynek Schlawack’s research.
  * [bpo-43882](https://bugs.python.org/issue?@action=redirect&bpo=43882): The presence of newline or tab characters in parts of a URL could allow some forms of attacks.
Following the controlling specification for URLs defined by WHATWG [`urllib.parse()`](https://docs.python.org/3/library/urllib.parse.html#module-urllib.parse "urllib.parse: Parse URLs into or assemble them from components.") now removes ASCII newlines and tabs from URLs, preventing such attacks.
  * [bpo-43472](https://bugs.python.org/issue?@action=redirect&bpo=43472): Ensures interpreter-level audit hooks receive the `cpython.PyInterpreterState_New` event when called through the `_xxsubinterpreters` module.
  * [bpo-43362](https://bugs.python.org/issue?@action=redirect&bpo=43362): Fix invalid free in _sha3 module. The issue was introduced in 3.10.0a1. Python 3.9 and earlier are not affected.
  * [bpo-43762](https://bugs.python.org/issue?@action=redirect&bpo=43762): Add audit events for `sqlite3.connect/handle()`, [`sqlite3.Connection.enable_load_extension()`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.enable_load_extension "sqlite3.Connection.enable_load_extension"), and [`sqlite3.Connection.load_extension()`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.load_extension "sqlite3.Connection.load_extension"). Patch by Erlend E. Aasland.
  * [bpo-43756](https://bugs.python.org/issue?@action=redirect&bpo=43756): Add new audit event `glob.glob/2` to incorporate the new _root_dir_ and _dir_fd_ arguments added to [`glob.glob()`](https://docs.python.org/3/library/glob.html#glob.glob "glob.glob") and [`glob.iglob()`](https://docs.python.org/3/library/glob.html#glob.iglob "glob.iglob").
  * [bpo-36384](https://bugs.python.org/issue?@action=redirect&bpo=36384): [`ipaddress`](https://docs.python.org/3/library/ipaddress.html#module-ipaddress "ipaddress: IPv4/IPv6 manipulation library.") module no longer accepts any leading zeros in IPv4 address strings. Leading zeros are ambiguous and interpreted as octal notation by some libraries. For example the legacy function [`socket.inet_aton()`](https://docs.python.org/3/library/socket.html#socket.inet_aton "socket.inet_aton") treats leading zeros as octal notation. glibc implementation of modern [`inet_pton()`](https://docs.python.org/3/library/socket.html#socket.inet_pton "socket.inet_pton") does not accept any leading zeros. For a while the [`ipaddress`](https://docs.python.org/3/library/ipaddress.html#module-ipaddress "ipaddress: IPv4/IPv6 manipulation library.") module used to accept ambiguous leading zeros.
  * [bpo-43075](https://bugs.python.org/issue?@action=redirect&bpo=43075): Fix Regular Expression Denial of Service (ReDoS) vulnerability in [`urllib.request.AbstractBasicAuthHandler`](https://docs.python.org/3/library/urllib.request.html#urllib.request.AbstractBasicAuthHandler "urllib.request.AbstractBasicAuthHandler"). The ReDoS-vulnerable regex has quadratic worst-case complexity and it allows cause a denial of service when identifying crafted invalid RFCs. This ReDoS issue is on the client side and needs remote attackers to control the HTTP server.
  * [bpo-42800](https://bugs.python.org/issue?@action=redirect&bpo=42800): Audit hooks are now fired for frame.f_code, traceback.tb_frame, and generator code/frame attribute access.
  * [bpo-37363](https://bugs.python.org/issue?@action=redirect&bpo=37363): Add audit events to the [`http.client`](https://docs.python.org/3/library/http.client.html#module-http.client "http.client: HTTP and HTTPS protocol client \(requires sockets\).") module.