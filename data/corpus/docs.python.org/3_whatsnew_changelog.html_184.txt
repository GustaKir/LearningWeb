Title: Python 3.12.0 Alpha 7 Release Notes
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This document outlines changes and updates in Python 3.12.0 alpha 7, released on April 4, 2023. Key highlights include the deprecation of `_PyErr_ChainExceptions`, a reduction in inline `CACHE` entries related to `BINARY_SUBSCR`, the removal of certain jump instructions, and fixes to the `stacktop` value during garbage collection.
---

## Python 3.12.0 alpha 7[¶](https://docs.python.org/3/whatsnew/changelog.html#python-3-12-0-alpha-7 "Link to this heading")
_Release date: 2023-04-04_
### Core and Builtins[¶](https://docs.python.org/3/whatsnew/changelog.html#id152 "Link to this heading")
  * [gh-102192](https://github.com/python/cpython/issues/102192): Deprecated `_PyErr_ChainExceptions` in favour of `_PyErr_ChainExceptions1`.
  * [gh-89987](https://github.com/python/cpython/issues/89987): Reduce the number of inline [`CACHE`](https://docs.python.org/3/library/dis.html#opcode-CACHE) entries for [`BINARY_SUBSCR`](https://docs.python.org/3/library/dis.html#opcode-BINARY_SUBSCR).
  * [gh-102859](https://github.com/python/cpython/issues/102859): Removed `JUMP_IF_FALSE_OR_POP` and `JUMP_IF_TRUE_OR_POP` instructions.
  * [gh-101975](https://github.com/python/cpython/issues/101975): Fixed `stacktop` value on tracing entries to avoid corruption on garbage collection.
  * [gh-102778](https://github.com/python/cpython/issues/102778): Add [`sys.last_exc`](https://docs.python.org/3/library/sys.html#sys.last_exc "sys.last_exc") and deprecate [`sys.last_type`](https://docs.python.org/3/library/sys.html#sys.last_type "sys.last_type"), [`sys.last_value`](https://docs.python.org/3/library/sys.html#sys.last_value "sys.last_value") and [`sys.last_traceback`](https://docs.python.org/3/library/sys.html#sys.last_traceback "sys.last_traceback"), which hold the same information in its legacy form.
  * [gh-100982](https://github.com/python/cpython/issues/100982): Replace all occurrences of `COMPARE_AND_BRANCH` with [`COMPARE_OP`](https://docs.python.org/3/library/dis.html#opcode-COMPARE_OP).
  * [gh-102701](https://github.com/python/cpython/issues/102701): Fix overflow when creating very large dict.
  * [gh-102755](https://github.com/python/cpython/issues/102755): Add [`PyErr_DisplayException()`](https://docs.python.org/3/c-api/exceptions.html#c.PyErr_DisplayException "PyErr_DisplayException") which takes just an exception instance, to replace the legacy `PyErr_Display()` which takes the `(typ, exc, tb)` triplet.
  * [gh-102594](https://github.com/python/cpython/issues/102594): Add note to exception raised in `PyErr_SetObject` when normalization fails.
  * [gh-90997](https://github.com/python/cpython/issues/90997): Shrink the number of inline [`CACHE`](https://docs.python.org/3/library/dis.html#opcode-CACHE) entries used by [`LOAD_GLOBAL`](https://docs.python.org/3/library/dis.html#opcode-LOAD_GLOBAL).
  * [gh-102491](https://github.com/python/cpython/issues/102491): Improve import time of `platform` by removing IronPython version parsing. The IronPython version parsing was not functional (see <https://github.com/IronLanguages/ironpython3/issues/1667>).
  * [gh-101291](https://github.com/python/cpython/issues/101291): Rearrage bits in first field (after header) of PyLongObject. * Bits 0 and 1: 1 - sign. I.e. 0 for positive numbers, 1 for zero and 2 for negative numbers. * Bit 2 reserved (probably for the immortal bit) * Bits 3+ the unsigned size.
This makes a few operations slightly more efficient, and will enable a more compact and faster 2s-complement representation of most ints in future.
  * [gh-102397](https://github.com/python/cpython/issues/102397): Fix segfault from race condition in signal handling during garbage collection. Patch by Kumar Aditya.
  * [gh-102406](https://github.com/python/cpython/issues/102406): [`codecs`](https://docs.python.org/3/library/codecs.html#module-codecs "codecs: Encode and decode data and streams.") encoding/decoding errors now get the context information (which operation and which codecs) attached as [**PEP 678**](https://peps.python.org/pep-0678/) notes instead of through chaining a new instance of the exception.
  * [gh-102281](https://github.com/python/cpython/issues/102281): Fix potential nullptr dereference and use of uninitialized memory in fileutils. Patch by Max Bachmann.
  * [gh-102300](https://github.com/python/cpython/issues/102300): Reuse operands with refcount of 1 in float specializations of BINARY_OP.
  * [gh-102213](https://github.com/python/cpython/issues/102213): Fix performance loss when accessing an object’s attributes with `__getattr__` defined.
  * [gh-102255](https://github.com/python/cpython/issues/102255): Improve build support for the Xbox. Patch by Max Bachmann.
  * [gh-102027](https://github.com/python/cpython/issues/102027): Fix SSE2 and SSE3 detection in `_blake2` internal module. Patch by Max Bachmann.
  * [gh-101865](https://github.com/python/cpython/issues/101865): Deprecate `co_lnotab` in code objects, schedule it for removal in Python 3.14
  * [bpo-1635741](https://bugs.python.org/issue?@action=redirect&bpo=1635741): Adapt `_pickle` to [**PEP 687**](https://peps.python.org/pep-0687/). Patch by Mohamed Koubaa and Erlend Aasland.