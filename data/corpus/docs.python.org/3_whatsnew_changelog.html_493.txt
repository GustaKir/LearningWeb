Title: Python 3 Updates: Changelog Highlights
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This document highlights key updates in Python 3, including fixes for deadlocks in chained logging handlers, changes to error handling for invalid type annotations, enhancement of reduction methods to support custom state-setting, and a resolution for crashes in SharedMemoryManager during interactive sessions.
---

The acquire/release pattern was leading to deadlocks in code that has implemented any form of chained logging handlers that depend upon one another as the lock acquisition order cannot be guaranteed.
  * [bpo-35252](https://bugs.python.org/issue?@action=redirect&bpo=35252): Throw a TypeError instead of an AssertionError when using an invalid type annotation with singledispatch.
  * [bpo-35900](https://bugs.python.org/issue?@action=redirect&bpo=35900): Allow reduction methods to return a 6-item tuple where the 6th item specifies a custom state-setting method that’s called instead of the regular `__setstate__` method.
  * [bpo-35900](https://bugs.python.org/issue?@action=redirect&bpo=35900): enable custom reduction callback registration for functions and classes in _pickle.c, using the new Pickler’s attribute `reducer_override`
  * [bpo-36368](https://bugs.python.org/issue?@action=redirect&bpo=36368): Fix a bug crashing SharedMemoryManager instances in interactive sessions after a ctrl-c (KeyboardInterrupt) was sent
  * [bpo-31904](https://bugs.python.org/issue?@action=redirect&bpo=31904): Fix mmap fail for VxWorks
  * [bpo-27497](https://bugs.python.org/issue?@action=redirect&bpo=27497): [`csv.DictWriter.writeheader()`](https://docs.python.org/3/library/csv.html#csv.DictWriter.writeheader "csv.DictWriter.writeheader") now returns the return value of the underlying `csv.Writer.writerow()` method. Patch contributed by Ashish Nitin Patil.
  * [bpo-36239](https://bugs.python.org/issue?@action=redirect&bpo=36239): Parsing .mo files now ignores comments starting and ending with #-#-#-#-#.
  * [bpo-26707](https://bugs.python.org/issue?@action=redirect&bpo=26707): Enable plistlib to read and write binary plist files that were created as a KeyedArchive file. Specifically, this allows the plistlib to process 0x80 tokens as UID objects.
  * [bpo-31904](https://bugs.python.org/issue?@action=redirect&bpo=31904): Add posix module support for VxWorks.
  * [bpo-35125](https://bugs.python.org/issue?@action=redirect&bpo=35125): Asyncio: Remove inner callback on outer cancellation in shield
  * [bpo-35721](https://bugs.python.org/issue?@action=redirect&bpo=35721): Fix `asyncio.SelectorEventLoop.subprocess_exec()` leaks file descriptors if `Popen` fails and called with `stdin=subprocess.PIPE`. Patch by Niklas Fiekas.
  * [bpo-31855](https://bugs.python.org/issue?@action=redirect&bpo=31855): [`unittest.mock.mock_open()`](https://docs.python.org/3/library/unittest.mock.html#unittest.mock.mock_open "unittest.mock.mock_open") results now respects the argument of read([size]). Patch contributed by Rémi Lapeyre.
  * [bpo-35431](https://bugs.python.org/issue?@action=redirect&bpo=35431): Implement [`math.comb()`](https://docs.python.org/3/library/math.html#math.comb "math.comb") that returns binomial coefficient, that computes the number of ways to choose k items from n items without repetition and without order. Patch by Yash Aggarwal and Keller Fuchs.
  * [bpo-26660](https://bugs.python.org/issue?@action=redirect&bpo=26660): Fixed permission errors in [`TemporaryDirectory`](https://docs.python.org/3/library/tempfile.html#tempfile.TemporaryDirectory "tempfile.TemporaryDirectory") clean up. Previously `TemporaryDirectory.cleanup()` failed when non-writeable or non-searchable files or directories were created inside a temporary directory.
  * [bpo-34271](https://bugs.python.org/issue?@action=redirect&bpo=34271): Add debugging helpers to ssl module. It’s now possible to dump key material and to trace TLS protocol. The default and stdlib contexts also support SSLKEYLOGFILE env var.
  * [bpo-26467](https://bugs.python.org/issue?@action=redirect&bpo=26467): Added AsyncMock to support using unittest to mock asyncio coroutines. Patch by Lisa Roach.
  * [bpo-33569](https://bugs.python.org/issue?@action=redirect&bpo=33569): dataclasses.InitVar: Exposes the type used to create the init var.
  * [bpo-34424](https://bugs.python.org/issue?@action=redirect&bpo=34424): Fix serialization of messages containing encoded strings when the policy.linesep is set to a multi-character string. Patch by Jens Troeger.
  * [bpo-34303](https://bugs.python.org/issue?@action=redirect&bpo=34303): Performance of [`functools.reduce()`](https://docs.python.org/3/library/functools.html#functools.reduce "functools.reduce") is slightly improved. Patch by Sergey Fedoseev.
  * [bpo-33361](https://bugs.python.org/issue?@action=redirect&bpo=33361): Fix a bug in [`codecs.StreamRecoder`](https://docs.python.org/3/library/codecs.html#codecs.StreamRecoder "codecs.StreamRecoder") where seeking might leave old data in a buffer and break subsequent read calls.