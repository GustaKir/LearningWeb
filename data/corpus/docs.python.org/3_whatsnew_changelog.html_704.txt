Title: Python 3.5.3 Release Notes
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This document outlines the release notes for Python 3.5.3, including final release and release candidate. The final release had no code changes from the release candidate. Security enhancements addressed issues in os.urandom() and shell injection in ctypes.util.find_library.
---

## Python 3.5.3 final[¶](https://docs.python.org/3/whatsnew/changelog.html#python-3-5-3-final "Link to this heading")
_Release date: 2017-01-17_
There were no code changes between 3.5.3rc1 and 3.5.3 final.
## Python 3.5.3 release candidate 1[¶](https://docs.python.org/3/whatsnew/changelog.html#python-3-5-3-release-candidate-1 "Link to this heading")
_Release date: 2017-01-02_
### Security[¶](https://docs.python.org/3/whatsnew/changelog.html#id715 "Link to this heading")
  * [bpo-27278](https://bugs.python.org/issue?@action=redirect&bpo=27278): Fix os.urandom() implementation using getrandom() on Linux. Truncate size to INT_MAX and loop until we collected enough random bytes, instead of casting a directly Py_ssize_t to int.
  * [bpo-22636](https://bugs.python.org/issue?@action=redirect&bpo=22636): Avoid shell injection problems with ctypes.util.find_library().


### Core and Builtins[¶](https://docs.python.org/3/whatsnew/changelog.html#id716 "Link to this heading")
  * [bpo-29073](https://bugs.python.org/issue?@action=redirect&bpo=29073): bytearray formatting no longer truncates on first null byte.
  * [bpo-28932](https://bugs.python.org/issue?@action=redirect&bpo=28932): Do not include <sys/random.h> if it does not exist.
  * [bpo-28147](https://bugs.python.org/issue?@action=redirect&bpo=28147): Fix a memory leak in split-table dictionaries: setattr() must not convert combined table into split table.
  * [bpo-25677](https://bugs.python.org/issue?@action=redirect&bpo=25677): Correct the positioning of the syntax error caret for indented blocks. Based on patch by Michael Layzell.
  * [bpo-29000](https://bugs.python.org/issue?@action=redirect&bpo=29000): Fixed bytes formatting of octals with zero padding in alternate form.
  * [bpo-28512](https://bugs.python.org/issue?@action=redirect&bpo=28512): Fixed setting the offset attribute of SyntaxError by PyErr_SyntaxLocationEx() and PyErr_SyntaxLocationObject().
  * [bpo-28991](https://bugs.python.org/issue?@action=redirect&bpo=28991): functools.lru_cache() was susceptible to an obscure reentrancy bug caused by a monkey-patched len() function.
  * [bpo-28648](https://bugs.python.org/issue?@action=redirect&bpo=28648): Fixed crash in Py_DecodeLocale() in debug build on Mac OS X when decode astral characters. Patch by Xiang Zhang.
  * [bpo-19398](https://bugs.python.org/issue?@action=redirect&bpo=19398): Extra slash no longer added to sys.path components in case of empty compile-time PYTHONPATH components.
  * [bpo-28426](https://bugs.python.org/issue?@action=redirect&bpo=28426): Fixed potential crash in PyUnicode_AsDecodedObject() in debug build.
  * [bpo-23782](https://bugs.python.org/issue?@action=redirect&bpo=23782): Fixed possible memory leak in _PyTraceback_Add() and exception loss in PyTraceBack_Here().
  * [bpo-28379](https://bugs.python.org/issue?@action=redirect&bpo=28379): Added sanity checks and tests for PyUnicode_CopyCharacters(). Patch by Xiang Zhang.
  * [bpo-28376](https://bugs.python.org/issue?@action=redirect&bpo=28376): The type of long range iterator is now registered as Iterator. Patch by Oren Milman.
  * [bpo-28376](https://bugs.python.org/issue?@action=redirect&bpo=28376): The constructor of range_iterator now checks that step is not 0. Patch by Oren Milman.
  * [bpo-26906](https://bugs.python.org/issue?@action=redirect&bpo=26906): Resolving special methods of uninitialized type now causes implicit initialization of the type instead of a fail.
  * [bpo-18287](https://bugs.python.org/issue?@action=redirect&bpo=18287): PyType_Ready() now checks that tp_name is not NULL. Original patch by Niklas Koep.
  * [bpo-24098](https://bugs.python.org/issue?@action=redirect&bpo=24098): Fixed possible crash when AST is changed in process of compiling it.
  * [bpo-28350](https://bugs.python.org/issue?@action=redirect&bpo=28350): String constants with null character no longer interned.
  * [bpo-26617](https://bugs.python.org/issue?@action=redirect&bpo=26617): Fix crash when GC runs during weakref callbacks.
  * [bpo-27942](https://bugs.python.org/issue?@action=redirect&bpo=27942): String constants now interned recursively in tuples and frozensets.
  * [bpo-21578](https://bugs.python.org/issue?@action=redirect&bpo=21578): Fixed misleading error message when ImportError called with invalid keyword args.
  * [bpo-28203](https://bugs.python.org/issue?@action=redirect&bpo=28203): Fix incorrect type in error message from `complex(1.0, {2:3})`. Patch by Soumya Sharma.
  * [bpo-27955](https://bugs.python.org/issue?@action=redirect&bpo=27955): Fallback on reading /dev/urandom device when the getrandom() syscall fails with EPERM, for example when blocked by SECCOMP.
  * [bpo-28131](https://bugs.python.org/issue?@action=redirect&bpo=28131): Fix a regression in zipimport’s compile_source(). zipimport should use the same optimization level as the interpreter.
  * [bpo-25221](https://bugs.python.org/issue?@action=redirect&bpo=25221): Fix corrupted result from PyLong_FromLon