Title: Changes in Import System and pkgutil Module
URL: https://docs.python.org/3/whatsnew/3.3.html
Summary: The `importlib.abc.Finder` no longer requires the `find_module()` method to be implemented, prompting developers to check for its existence. Additionally, `pkgutil` is now using `importlib` internally, addressing issues with PEP 302 import emulation, which is now deprecated.
---

not change anything.
  * `importlib.abc.Finder` no longer specifies a `find_module()` abstract method that must be implemented. If you were relying on subclasses to implement that method, make sure to check for the methodâ€™s existence first. You will probably want to check for `find_loader()` first, though, in the case of working with [path entry finders](https://docs.python.org/3/glossary.html#term-path-entry-finder).
  * [`pkgutil`](https://docs.python.org/3/library/pkgutil.html#module-pkgutil "pkgutil: Utilities for the import system.") has been converted to use [`importlib`](https://docs.python.org/3/library/importlib.html#module-importlib "importlib: The implementation of the import machinery.") internally. This eliminates many edge cases where the old behaviour of the [**PEP 302**](https://peps.python.org/pep-0302/) import emulation failed to match the behaviour of the real import system. The import emulation itself is still present, but is now deprecated. The [`pkgutil.iter_importers()`](https://docs.python.org/3/library/pkgutil.html#pkgutil.iter_importers "pkgutil.iter_importers") and [`pkgutil.walk_packages()`](https://docs.python.org/3/library/pkgutil.html#pkgutil.walk_packages "pkgutil.walk_packages") functions special case the standard import hooks so they are still supported even though they do not provide the non-standard `iter_modules()` method.
  * A longstanding RFC-compliance bug ([bpo-1079](https://bugs.python.org/issue?@action=redirect&bpo=1079)) in the parsing done by [`email.header.decode_header()`](https://docs.python.org/3/library/email.header.html#email.header.decode_header "email.header.decode_header") has been fixed. Code that uses the standard idiom to convert encoded headers into unicode (`str(make_header(decode_header(h))`) will see no change, but code that looks at the individual tuples returned by decode_header will see that whitespace that precedes or follows `ASCII` sections is now included in the `ASCII` section. Code that builds headers using `make_header` should also continue to work without change, since `make_header` continues to add whitespace between `ASCII` and non-`ASCII` sections if it is not already present in the input strings.
  * [`email.utils.formataddr()`](https://docs.python.org/3/library/email.utils.html#email.utils.formataddr "email.utils.formataddr") now does the correct content transfer encoding when passed non-`ASCII` display names. Any code that depended on the previous buggy behavior that preserved the non-`ASCII` unicode in the formatted output string will need to be changed ([bpo-1690608](https://bugs.python.org/issue?@action=redirect&bpo=1690608)).
  * [`poplib.POP3.quit()`](https://docs.python.org/3/library/poplib.html#poplib.POP3.quit "poplib.POP3.quit") may now raise protocol errors like all other `poplib` methods. Code that assumes `quit` does not raise [`poplib.error_proto`](https://docs.python.org/3/library/poplib.html#poplib.error_proto "poplib.error_proto") errors may need to be changed if errors on `quit` are encountered by a particular application ([bpo-11291](https://bugs.python.org/issue?@action=redirect&bpo=11291)).
  * The `strict` argument to [`email.parser.Parser`](https://docs.python.org/3/library/email.parser.html#email.parser.Parser "email.parser.Parser"), deprecated since Python 2.4, has finally been removed.
  * The deprecated method `unittest.TestCase.assertSameElements` has been removed.
  * The deprecated variable `time.accept2dyear` has been removed.
  * The deprecated `Context._clamp` attribute has been removed from the [`decimal`](https://docs.python.org/3/library/decimal.html#module-decimal "decimal: Implementation of the General Decimal Arithmetic Specification.") module. It was previously replaced by the public attribute `clamp`. (See [bpo-8540](https://bugs.python.org/issue?@action=redirect&bpo=8540).)
  * The undocumented internal helper class `SSLFakeFile` has been removed from [`smtplib`](https://docs.python.org/3/library/smtplib.html#module-smtplib "smtplib: SMTP protocol client \(requires sockets\)."), since its functionality has long been provided directly by [`socket.socket.makefile()`](https://docs.python.org/3/library/socket.html#socket.socket.makefile "socket.socket.makefile").
  * Passing a negative value to [`time.sleep()`](https://docs.python.org/3/library/time.html#time.sleep "time.sleep") on Windows now raises an error instead of sleeping forever. It has always raised an error on posix.
  * The `ast.__version__` constant has been removed.