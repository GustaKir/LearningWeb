Title: C API Updates in Python
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section outlines recent improvements to the C API in Python, including fixes for `Py_BUILD_ASSERT`, the introduction of 'Raw' variants for PyTime functions, and the restoration of previously removed functions like `Py_SetPythonHome`.
---

### C API[¶](https://docs.python.org/3/whatsnew/changelog.html#id81 "Link to this heading")
  * [gh-118124](https://github.com/python/cpython/issues/118124): Fix `Py_BUILD_ASSERT` and `Py_BUILD_ASSERT_EXPR` for non-constant expressions: use `static_assert()` on C11 and newer. Patch by Victor Stinner.
  * [gh-110850](https://github.com/python/cpython/issues/110850): Add “Raw” variant of PyTime functions
    * [`PyTime_MonotonicRaw()`](https://docs.python.org/3/c-api/time.html#c.PyTime_MonotonicRaw "PyTime_MonotonicRaw")
    * [`PyTime_PerfCounterRaw()`](https://docs.python.org/3/c-api/time.html#c.PyTime_PerfCounterRaw "PyTime_PerfCounterRaw")
    * [`PyTime_TimeRaw()`](https://docs.python.org/3/c-api/time.html#c.PyTime_TimeRaw "PyTime_TimeRaw")
Patch by Victor Stinner.
  * [gh-117987](https://github.com/python/cpython/issues/117987): Restore functions removed in Python 3.13 alpha 1:
    * [`Py_SetPythonHome()`](https://docs.python.org/3/c-api/init.html#c.Py_SetPythonHome "Py_SetPythonHome")
    * [`Py_SetProgramName()`](https://docs.python.org/3/c-api/init.html#c.Py_SetProgramName "Py_SetProgramName")
    * [`PySys_SetArgvEx()`](https://docs.python.org/3/c-api/init.html#c.PySys_SetArgvEx "PySys_SetArgvEx")
    * [`PySys_SetArgv()`](https://docs.python.org/3/c-api/init.html#c.PySys_SetArgv "PySys_SetArgv")
Patch by Victor Stinner.
  * [gh-117929](https://github.com/python/cpython/issues/117929): Restore removed [`PyEval_InitThreads()`](https://docs.python.org/3/c-api/init.html#c.PyEval_InitThreads "PyEval_InitThreads") function. Patch by Victor Stinner.
  * [gh-117534](https://github.com/python/cpython/issues/117534): Improve validation logic in the C implementation of [`datetime.datetime.fromisoformat()`](https://docs.python.org/3/library/datetime.html#datetime.datetime.fromisoformat "datetime.datetime.fromisoformat") to better handle invalid years. Patch by Vlad Efanov.
  * [gh-68114](https://github.com/python/cpython/issues/68114): Fixed skipitem()’s handling of the old ‘w’ and ‘w#’ formatters. These are no longer supported and now raise an exception if used.
  * [gh-111997](https://github.com/python/cpython/issues/111997): Add a C-API for firing monitoring events.