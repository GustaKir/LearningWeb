Title: Argparse Library Documentation
URL: https://docs.python.org/3/library/argparse.html
Summary: Overview of the argparse library for command line argument parsing in Python, including navigation links to related topics and resources.
---

#### Previous topic
[Command Line Interface Libraries](https://docs.python.org/3/library/cmdlinelibs.html "previous chapter")
#### Next topic
[Argparse Tutorial](https://docs.python.org/3/howto/argparse.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/argparse.rst)


### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/howto/argparse.html "Argparse Tutorial") |
  * [previous](https://docs.python.org/3/library/cmdlinelibs.html "Command Line Interface Libraries") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [The Python Standard Library](https://docs.python.org/3/library/index.html) »
  * [Command Line Interface Libraries](https://docs.python.org/3/library/cmdlinelibs.html) »
  * [`argparse` — Parser for command-line options, arguments and subcommands](https://docs.python.org/3/library/argparse.html)
  * | 
  * Theme  Auto Light Dark |


# `argparse` — Parser for command-line options, arguments and subcommands[¶](https://docs.python.org/3/library/argparse.html#module-argparse "Link to this heading")
Added in version 3.2.
**Source code:** [Lib/argparse.py](https://github.com/python/cpython/tree/3.13/Lib/argparse.py)
Note
While [`argparse`](https://docs.python.org/3/library/argparse.html#module-argparse "argparse: Command-line option and argument parsing library.") is the default recommended standard library module for implementing basic command line applications, authors with more exacting requirements for exactly how their command line applications behave may find it doesn’t provide the necessary level of control. Refer to [Choosing an argument parsing library](https://docs.python.org/3/library/optparse.html#choosing-an-argument-parser) for alternatives to consider when `argparse` doesn’t support behaviors that the application requires (such as entirely disabling support for interspersed options and positional arguments, or accepting option parameter values that start with `-` even when they correspond to another defined option).
Tutorial
This page contains the API reference information. For a more gentle introduction to Python command-line parsing, have a look at the [argparse tutorial](https://docs.python.org/3/howto/argparse.html#argparse-tutorial).
The `argparse` module makes it easy to write user-friendly command-line interfaces. The program defines what arguments it requires, and `argparse` will figure out how to parse those out of [`sys.argv`](https://docs.python.org/3/library/sys.html#sys.argv "sys.argv"). The `argparse` module also automatically generates help and usage messages. The module will also issue errors when users give the program invalid arguments.
The `argparse` module’s support for command-line interfaces is built around an instance of [`argparse.ArgumentParser`](https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser "argparse.ArgumentParser"). It is a container for argument specifications and has options that apply to the parser as whole:
```
parser = argparse.ArgumentParser(
          prog='ProgramName',
          description='What the program does',
          epilog='Text at the bottom of help')

```

The [`ArgumentParser.add_argument()`](https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser.add_argument "argparse.ArgumentParser.add_argument") method attaches individual argument specifications to the parser. It supports positional arguments, options that accept values, and on/off flags:
```
parser.add_argument('filename')      # positional argument
parser.add_argument('-c', '--count')   # option that takes a value
parser.add_argument('-v', '--verbose',
          action='store_true') # on/off flag

```

The [`ArgumentParser.parse_args()`](https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser.parse_args "argparse.ArgumentParser.parse_args") method runs the parser and places the extracted data in a [`argparse.Namespace`](https://docs.python.org/3/library/argparse.html#argparse.Namespace "argparse.Namespace") object:
```
args = parser.parse_args()
print(args.filename, args.count, args.verbose)