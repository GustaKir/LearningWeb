Title: Tkinter TTK Widget Configuration and States
URL: https://docs.python.org/3/library/tkinter.ttk.html
Summary: This section covers configuration options for Tkinter TTK widgets, focusing on the 'width' property which defines space allocation for text labels. It also describes the 'state' option for controlling widget usability and explains the concept of widget states, including flags like 'active' which indicate the widget's interaction status.
---

width | If greater than zero, specifies how much space, in character widths, to allocate for the text label, if less than zero, specifies a minimum width. If zero or unspecified, the natural width of the text label is used.  
### Compatibility Options[¶](https://docs.python.org/3/library/tkinter.ttk.html#compatibility-options "Link to this heading")
Option | Description  
---|---  
state | May be set to “normal” or “disabled” to control the “disabled” state bit. This is a write-only option: setting it changes the widget state, but the [`Widget.state()`](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Widget.state "tkinter.ttk.Widget.state") method does not affect this option.  
### Widget States[¶](https://docs.python.org/3/library/tkinter.ttk.html#widget-states "Link to this heading")
The widget state is a bitmap of independent state flags.
Flag | Description  
---|---  
active | The mouse cursor is over the widget and pressing a mouse button will cause some action to occur  
disabled | Widget is disabled under program control  
focus | Widget has keyboard focus  
pressed | Widget is being pressed  
selected | “On”, “true”, or “current” for things like Checkbuttons and radiobuttons  
background | Windows and Mac have a notion of an “active” or foreground window. The _background_ state is set for widgets in a background window, and cleared for those in the foreground window  
readonly | Widget should not allow user modification  
alternate | A widget-specific alternate display format  
invalid | The widget’s value is invalid  
A state specification is a sequence of state names, optionally prefixed with an exclamation point indicating that the bit is off.
### ttk.Widget[¶](https://docs.python.org/3/library/tkinter.ttk.html#ttk-widget "Link to this heading")
Besides the methods described below, the `ttk.Widget` supports the methods `tkinter.Widget.cget()` and `tkinter.Widget.configure()`. 

_class_ tkinter.ttk.Widget[¶](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Widget "Link to this definition")
     

identify(_x_ , _y_)[¶](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Widget.identify "Link to this definition")
    
Returns the name of the element at position _x_ _y_ , or the empty string if the point does not lie within any element.
_x_ and _y_ are pixel coordinates relative to the widget. 

instate(_statespec_ , _callback =None_, _* args_, _** kw_)[¶](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Widget.instate "Link to this definition")
    
Test the widget’s state. If a callback is not specified, returns `True` if the widget state matches _statespec_ and `False` otherwise. If callback is specified then it is called with args if widget state matches _statespec_.