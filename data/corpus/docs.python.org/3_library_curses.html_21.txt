Title: Curses Color Constants and Textpad Module
URL: https://docs.python.org/3/library/curses.html
Summary: This section outlines the predefined color constants in the curses library, including Magenta, Red, White, and Yellow. It also introduces the `curses.textpad` module, which facilitates Emacs-like input editing within a curses window.
---

curses.COLOR_MAGENTA[¶](https://docs.python.org/3/library/curses.html#curses.COLOR_MAGENTA "Link to this definition")
| Magenta (purplish red) 

curses.COLOR_RED[¶](https://docs.python.org/3/library/curses.html#curses.COLOR_RED "Link to this definition")
| Red 

curses.COLOR_WHITE[¶](https://docs.python.org/3/library/curses.html#curses.COLOR_WHITE "Link to this definition")
| White 

curses.COLOR_YELLOW[¶](https://docs.python.org/3/library/curses.html#curses.COLOR_YELLOW "Link to this definition")
| Yellow  
# [`curses.textpad`](https://docs.python.org/3/library/curses.html#module-curses.textpad "curses.textpad: Emacs-like input editing in a curses window.") — Text input widget for curses programs[¶](https://docs.python.org/3/library/curses.html#module-curses.textpad "Link to this heading")
The [`curses.textpad`](https://docs.python.org/3/library/curses.html#module-curses.textpad "curses.textpad: Emacs-like input editing in a curses window.") module provides a [`Textbox`](https://docs.python.org/3/library/curses.html#curses.textpad.Textbox "curses.textpad.Textbox") class that handles elementary text editing in a curses window, supporting a set of keybindings resembling those of Emacs (thus, also of Netscape Navigator, BBedit 6.x, FrameMaker, and many other programs). The module also provides a rectangle-drawing function useful for framing text boxes or for other purposes.
The module [`curses.textpad`](https://docs.python.org/3/library/curses.html#module-curses.textpad "curses.textpad: Emacs-like input editing in a curses window.") defines the following function: 

curses.textpad.rectangle(_win_ , _uly_ , _ulx_ , _lry_ , _lrx_)[¶](https://docs.python.org/3/library/curses.html#curses.textpad.rectangle "Link to this definition")
    
Draw a rectangle. The first argument must be a window object; the remaining arguments are coordinates relative to that window. The second and third arguments are the y and x coordinates of the upper left hand corner of the rectangle to be drawn; the fourth and fifth arguments are the y and x coordinates of the lower right hand corner. The rectangle will be drawn using VT100/IBM PC forms characters on terminals that make this possible (including xterm and most other software terminal emulators). Otherwise it will be drawn with ASCII dashes, vertical bars, and plus signs.
## Textbox objects[¶](https://docs.python.org/3/library/curses.html#textbox-objects "Link to this heading")
You can instantiate a [`Textbox`](https://docs.python.org/3/library/curses.html#curses.textpad.Textbox "curses.textpad.Textbox") object as follows: 

_class_ curses.textpad.Textbox(_win_)[¶](https://docs.python.org/3/library/curses.html#curses.textpad.Textbox "Link to this definition")
    
Return a textbox widget object. The _win_ argument should be a curses [window](https://docs.python.org/3/library/curses.html#curses-window-objects) object in which the textbox is to be contained. The edit cursor of the textbox is initially located at the upper left hand corner of the containing window, with coordinates `(0, 0)`. The instance’s [`stripspaces`](https://docs.python.org/3/library/curses.html#curses.textpad.Textbox.stripspaces "curses.textpad.Textbox.stripspaces") flag is initially on.
[`Textbox`](https://docs.python.org/3/library/curses.html#curses.textpad.Textbox "curses.textpad.Textbox") objects have the following methods: 

edit([_validator_])[¶](https://docs.python.org/3/library/curses.html#curses.textpad.Textbox.edit "Link to this definition")
    
This is the entry point you will normally use. It accepts editing keystrokes until one of the termination keystrokes is entered. If _validator_ is supplied, it must be a function. It will be called for each keystroke entered with the keystroke as a parameter; command dispatch is done on the result. This method returns the window contents as a string; whether blanks in the window are included is affected by the [`stripspaces`](https://docs.python.org/3/library/curses.html#curses.textpad.Textbox.stripspaces "curses.textpad.Textbox.stripspaces") attribute.