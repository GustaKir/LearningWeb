Title: Python 3 Changelog Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section summarizes recent patches and changes in Python 3, including fixes for Unicode handling in email messages, improvements to _io class representations for better subclass compatibility, removal of obsolete LibreSSL workarounds, and the addition of the sys._is_interned() function.
---

Patch by Sergey B Kirpichev.
  * [gh-94606](https://github.com/python/cpython/issues/94606): Fix UnicodeEncodeError when `email.message.get_payload()` reads a message with a Unicode surrogate character and the message content is not well-formed for surrogateescape encoding. Patch by Sidney Markowitz.
  * [bpo-21861](https://bugs.python.org/issue?@action=redirect&bpo=21861): Use the object’s actual class name in `_io.FileIO.__repr__()`, `_io._WindowsConsoleIO()` and `_io.TextIOWrapper.__repr__()`, to make these methods subclass friendly.
  * [bpo-45369](https://bugs.python.org/issue?@action=redirect&bpo=45369): Remove LibreSSL workarounds as per [**PEP 644**](https://peps.python.org/pep-0644/).
  * [bpo-34392](https://bugs.python.org/issue?@action=redirect&bpo=34392): Added [`sys._is_interned()`](https://docs.python.org/3/library/sys.html#sys._is_interned "sys._is_interned").


### Library[¶](https://docs.python.org/3/whatsnew/changelog.html#id113 "Link to this heading")
  * [gh-114077](https://github.com/python/cpython/issues/114077): Fix possible [`OverflowError`](https://docs.python.org/3/library/exceptions.html#OverflowError "OverflowError") in [`socket.socket.sendfile()`](https://docs.python.org/3/library/socket.html#socket.socket.sendfile "socket.socket.sendfile") when pass _count_ larger than 2 GiB on 32-bit platform.
  * [gh-111803](https://github.com/python/cpython/issues/111803): [`plistlib`](https://docs.python.org/3/library/plistlib.html#module-plistlib "plistlib: Generate and parse Apple plist files.") now supports loading more deeply nested lists in binary format.
  * [gh-114014](https://github.com/python/cpython/issues/114014): Fixed a bug in [`fractions.Fraction`](https://docs.python.org/3/library/fractions.html#fractions.Fraction "fractions.Fraction") where an invalid string using `d` in the decimals part creates a different error compared to other invalid letters/characters. Patch by Jeremiah Gabriel Pascual.
  * [gh-108364](https://github.com/python/cpython/issues/108364): [`sqlite3.Connection.iterdump()`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.iterdump "sqlite3.Connection.iterdump") now ensures that foreign key support is disabled before dumping the database schema, if there is any foreign key violation. Patch by Erlend E. Aasland and Mariusz Felisiak.
  * [gh-113971](https://github.com/python/cpython/issues/113971): The [`zipfile.ZipInfo`](https://docs.python.org/3/library/zipfile.html#zipfile.ZipInfo "zipfile.ZipInfo") previously protected `._compresslevel` attribute has been made public as `.compress_level` with the old `_compresslevel` name remaining available as a property to retain compatibility.
  * [gh-113877](https://github.com/python/cpython/issues/113877): Fix [`tkinter`](https://docs.python.org/3/library/tkinter.html#module-tkinter "tkinter: Interface to Tcl/Tk for graphical user interfaces") method `winfo_pathname()` on 64-bit Windows.
  * [gh-113868](https://github.com/python/cpython/issues/113868): Added [`mmap.MAP_NORESERVE`](https://docs.python.org/3/library/mmap.html#mmap.MAP_NORESERVE "mmap.MAP_NORESERVE"), [`mmap.MAP_NOEXTEND`](https://docs.python.org/3/library/mmap.html#mmap.MAP_NOEXTEND "mmap.MAP_NOEXTEND"), [`mmap.MAP_HASSEMAPHORE`](https://docs.python.org/3/library/mmap.html#mmap.MAP_HASSEMAPHORE "mmap.MAP_HASSEMAPHORE"), [`mmap.MAP_NOCACHE`](https://docs.python.org/3/library/mmap.html#mmap.MAP_NOCACHE "mmap.MAP_NOCACHE"), [`mmap.MAP_JIT`](https://docs.python.org/3/library/mmap.html#mmap.MAP_JIT "mmap.MAP_JIT"), [`mmap.MAP_RESILIENT_CODESIGN`](https://docs.python.org/3/library/mmap.html#mmap.MAP_RESILIENT_CODESIGN "mmap.MAP_RESILIENT_CODESIGN"), [`mmap.MAP_RESILIENT_MEDIA`](https://docs.python.org/3/library/mmap.html#mmap.MAP_RESILIENT_MEDIA "mmap.MAP_RESILIENT_MEDIA"), [`mmap.MAP_32BIT`](https://docs.python.org/3/library/mmap.html#mmap.MAP_32BIT "mmap.MAP_32BIT"), [`mmap.MAP_TRANSLATED_ALLOW_EXECUTE`](https://docs.python.org/3/library/mmap.html#mmap.MAP_TRANSLATED_ALLOW_EXECUTE "mmap.MAP_TRANSLATED_ALLOW_EXECUTE"), [`mmap.MAP_UNIX03`](https://docs.python.org/3/library/mmap.html#mmap.MAP_UNIX03 "mmap.MAP_UNIX03") and [`mmap.MAP_TPRO`](https://docs.python.org/3/library/mmap.html#mmap.MAP_TPRO "mmap.MAP_TPRO"). All of them are `mmap(2)` flags on macOS.
  * [gh-113848](https://github.com/python/cpython/issues/113848): [`asyncio.TaskGroup()`](https://docs.python.org/3/library/asyncio-task.html#asyncio.TaskGroup "asyncio.TaskGroup") and [`asyncio.timeout()`](https://docs.python.org/3/library/asyncio-task.html#asyncio.timeout "asyncio.timeout") context managers now handle [`CancelledError`](https://docs.python.org/3/library/asyncio-exceptions.html#asyncio.CancelledError "asyncio.CancelledError") subclasses as well as exact `CancelledError`.
  * [gh-113661](https://github.com/python/cpython/issues/113661): unittest runner: Don’t exit 5 if tests were skipped. The intention of exiting 5 was to detect issues where the test suite wasn’t discovered