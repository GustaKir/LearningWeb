Title: PyWideStringList and Warning Options
URL: https://docs.python.org/3/c-api/init_config.html
Summary: This section discusses the `PyWideStringList` and its role in configuring warning options in Python. It explains how the `warnings` module utilizes `sys.warnoptions` to manage warning filters, with the configuration items being applied in reverse order, emphasizing the priority of the warning options.
---

[PyWideStringList](https://docs.python.org/3/c-api/init_config.html#c.PyWideStringList "PyWideStringList")warnoptions[¶](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.warnoptions "Link to this definition")
    
Options of the [`warnings`](https://docs.python.org/3/library/warnings.html#module-warnings "warnings: Issue warning messages and control their disposition.") module to build warnings filters, lowest to highest priority: [`sys.warnoptions`](https://docs.python.org/3/library/sys.html#sys.warnoptions "sys.warnoptions").
The [`warnings`](https://docs.python.org/3/library/warnings.html#module-warnings "warnings: Issue warning messages and control their disposition.") module adds [`sys.warnoptions`](https://docs.python.org/3/library/sys.html#sys.warnoptions "sys.warnoptions") in the reverse order: the last [`PyConfig.warnoptions`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.warnoptions "PyConfig.warnoptions") item becomes the first item of `warnings.filters` which is checked first (highest priority).
The [`-W`](https://docs.python.org/3/using/cmdline.html#cmdoption-W) command line options adds its value to [`warnoptions`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.warnoptions "PyConfig.warnoptions"), it can be used multiple times.
The [`PYTHONWARNINGS`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONWARNINGS) environment variable can also be used to add warning options. Multiple options can be specified, separated by commas (`,`).
Default: empty list. 

intwrite_bytecode[¶](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.write_bytecode "Link to this definition")
    
If equal to `0`, Python won’t try to write `.pyc` files on the import of source modules.
Set to `0` by the [`-B`](https://docs.python.org/3/using/cmdline.html#cmdoption-B) command line option and the [`PYTHONDONTWRITEBYTECODE`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONDONTWRITEBYTECODE) environment variable.
[`sys.dont_write_bytecode`](https://docs.python.org/3/library/sys.html#sys.dont_write_bytecode "sys.dont_write_bytecode") is initialized to the inverted value of [`write_bytecode`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.write_bytecode "PyConfig.write_bytecode").
Default: `1`.