Title: Python 3 Changelog Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section highlights important updates in Python 3, including making flags globally unique, restoring flag behavior in the Flag class, updating the bundled libexpat to version 2.4.9, and fixing a race condition in asyncio related to process exit and data reception.
---

Now they are globally unique.
  * [gh-96865](https://github.com/python/cpython/issues/96865): fix Flag to use boundary CONFORM
This restores previous Flag behavior of allowing flags with non-sequential values to be combined; e.g.
class Skip(Flag): TWO = 2 EIGHT = 8
Skip.TWO | Skip.EIGHT -> <Skip.TWO|EIGHT: 10>
  * [gh-97005](https://github.com/python/cpython/issues/97005): Update bundled libexpat to 2.4.9
  * [gh-85760](https://github.com/python/cpython/issues/85760): Fix race condition in [`asyncio`](https://docs.python.org/3/library/asyncio.html#module-asyncio "asyncio: Asynchronous I/O.") where [`process_exited()`](https://docs.python.org/3/library/asyncio-protocol.html#asyncio.SubprocessProtocol.process_exited "asyncio.SubprocessProtocol.process_exited") called before the [`pipe_data_received()`](https://docs.python.org/3/library/asyncio-protocol.html#asyncio.SubprocessProtocol.pipe_data_received "asyncio.SubprocessProtocol.pipe_data_received") leading to inconsistent output. Patch by Kumar Aditya.
  * [gh-96704](https://github.com/python/cpython/issues/96704): Pass the correct `contextvars.Context` when a `asyncio` exception handler is called on behalf of a task or callback handle. This adds a new `Task` method, `get_context`, and also a new `Handle` method with the same name. If this method is not found on a task object (perhaps because it is a third-party library that does not yet provide this method), the context prevailing at the time the exception handler is called is used.
  * [gh-96819](https://github.com/python/cpython/issues/96819): Fixed check in `multiprocessing.resource_tracker` that guarantees that the length of a write to a pipe is not greater than `PIPE_BUF`.
  * [gh-95865](https://github.com/python/cpython/issues/95865): Reduce [`urllib.parse.quote_from_bytes()`](https://docs.python.org/3/library/urllib.parse.html#urllib.parse.quote_from_bytes "urllib.parse.quote_from_bytes") memory use on large values.
Contributed by Dennis Sweeney.
  * [gh-96741](https://github.com/python/cpython/issues/96741): Corrected type annotation for dataclass attribute `pstats.FunctionProfile.ncalls` to be `str`.
  * [gh-96734](https://github.com/python/cpython/issues/96734): Update [`unicodedata`](https://docs.python.org/3/library/unicodedata.html#module-unicodedata "unicodedata: Access the Unicode Database.") database to Unicode 15.0.0.
  * [gh-96735](https://github.com/python/cpython/issues/96735): Fix undefined behaviour in [`struct.unpack()`](https://docs.python.org/3/library/struct.html#struct.unpack "struct.unpack").
  * [gh-46412](https://github.com/python/cpython/issues/46412): Improve performance of `bool(db)` for large ndb/gdb databases. Previously this would call `len(db)` which would iterate over all keys – the answer (empty or not) is known after the first key.
  * [gh-96652](https://github.com/python/cpython/issues/96652): Fix the faulthandler implementation of `faulthandler.register(signal, chain=True)` if the `sigaction()` function is not available: don’t call the previous signal handler if it’s NULL. Patch by Victor Stinner.
  * [gh-68163](https://github.com/python/cpython/issues/68163): Correct conversion of [`numbers.Rational`](https://docs.python.org/3/library/numbers.html#numbers.Rational "numbers.Rational")’s to [`float`](https://docs.python.org/3/library/functions.html#float "float").
  * [gh-96538](https://github.com/python/cpython/issues/96538): Speed up `bisect.bisect()` functions by taking advantage of type-stability.
  * [gh-96465](https://github.com/python/cpython/issues/96465): Fraction hashes are now cached.
  * [gh-96079](https://github.com/python/cpython/issues/96079): In [`typing`](https://docs.python.org/3/library/typing.html#module-typing "typing: Support for type hints \(see :pep:`484`\)."), fix missing field `name` and incorrect `__module__` in _AnnotatedAlias.
  * [gh-96415](https://github.com/python/cpython/issues/96415): Remove `types._cell_factory` from module namespace.
  * [gh-95987](https://github.com/python/cpython/issues/95987): Fix `repr` of `Any` subclasses.
  * [gh-96388](https://github.com/python/cpython/issues/96388): Work around missing socket functions in [`socket`](https://docs.python.org/3/library/socket.html#socket.socket "socket.socket")’s `__repr__`.
  * [gh-96385](https://github.com/python/cpython/issues/96385): Fix `TypeVarTuple.__typing_prepare_subst__`.