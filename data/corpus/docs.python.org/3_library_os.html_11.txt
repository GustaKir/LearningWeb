Title: OS Module Constants and File Object Creation
URL: https://docs.python.org/3/library/os.html
Summary: This section details various constants related to process management in the os module, including CLONE flags such as CLONE_NEWUSER and CLONE_VM. It also introduces functions for creating new file objects.
---

os.CLONE_NEWTIME[¶](https://docs.python.org/3/library/os.html#os.CLONE_NEWTIME "Link to this definition")


os.CLONE_NEWUSER[¶](https://docs.python.org/3/library/os.html#os.CLONE_NEWUSER "Link to this definition")


os.CLONE_NEWUTS[¶](https://docs.python.org/3/library/os.html#os.CLONE_NEWUTS "Link to this definition")


os.CLONE_SIGHAND[¶](https://docs.python.org/3/library/os.html#os.CLONE_SIGHAND "Link to this definition")


os.CLONE_SYSVSEM[¶](https://docs.python.org/3/library/os.html#os.CLONE_SYSVSEM "Link to this definition")


os.CLONE_THREAD[¶](https://docs.python.org/3/library/os.html#os.CLONE_THREAD "Link to this definition")


os.CLONE_VM[¶](https://docs.python.org/3/library/os.html#os.CLONE_VM "Link to this definition")

## File Object Creation[¶](https://docs.python.org/3/library/os.html#file-object-creation "Link to this heading")
These functions create new [file objects](https://docs.python.org/3/glossary.html#term-file-object). (See also [`open()`](https://docs.python.org/3/library/os.html#os.open "os.open") for opening file descriptors.) 

os.fdopen(_fd_ , _* args_, _** kwargs_)[¶](https://docs.python.org/3/library/os.html#os.fdopen "Link to this definition")
    
Return an open file object connected to the file descriptor _fd_. This is an alias of the [`open()`](https://docs.python.org/3/library/functions.html#open "open") built-in function and accepts the same arguments. The only difference is that the first argument of [`fdopen()`](https://docs.python.org/3/library/os.html#os.fdopen "os.fdopen") must always be an integer.
## File Descriptor Operations[¶](https://docs.python.org/3/library/os.html#file-descriptor-operations "Link to this heading")
These functions operate on I/O streams referenced using file descriptors.
File descriptors are small integers corresponding to a file that has been opened by the current process. For example, standard input is usually file descriptor 0, standard output is 1, and standard error is 2. Further files opened by a process will then be assigned 3, 4, 5, and so forth. The name “file descriptor” is slightly deceptive; on Unix platforms, sockets and pipes are also referenced by file descriptors.
The [`fileno()`](https://docs.python.org/3/library/io.html#io.IOBase.fileno "io.IOBase.fileno") method can be used to obtain the file descriptor associated with a [file object](https://docs.python.org/3/glossary.html#term-file-object) when required. Note that using the file descriptor directly will bypass the file object methods, ignoring aspects such as internal buffering of data. 

os.close(_fd_)[¶](https://docs.python.org/3/library/os.html#os.close "Link to this definition")
    
Close file descriptor _fd_.
Note
This function is intended for low-level I/O and must be applied to a file descriptor as returned by [`os.open()`](https://docs.python.org/3/library/os.html#os.open "os.open") or [`pipe()`](https://docs.python.org/3/library/os.html#os.pipe "os.pipe"). To close a “file object” returned by the built-in function [`open()`](https://docs.python.org/3/library/functions.html#open "open") or by [`popen()`](https://docs.python.org/3/library/os.html#os.popen "os.popen") or [`fdopen()`](https://docs.python.org/3/library/os.html#os.fdopen "os.fdopen"), use its [`close()`](https://docs.python.org/3/library/io.html#io.IOBase.close "io.IOBase.close") method. 

os.closerange(_fd_low_ , _fd_high_ , _/_)[¶](https://docs.python.org/3/library/os.html#os.closerange "Link to this definition")
    
Close all file descriptors from _fd_low_ (inclusive) to _fd_high_ (exclusive), ignoring errors. Equivalent to (but much faster than):
```
for fd in range(fd_low, fd_high):
  try:
    os.close(fd)
  except OSError:
    pass