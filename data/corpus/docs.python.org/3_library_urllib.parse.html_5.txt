Title: Handling URL Components with urllib.parse
URL: https://docs.python.org/3/library/urllib.parse.html
Summary: This section discusses the use of `urlsplit()` and `urlunsplit()` for preprocessing URLs to remove scheme and netloc parts. It also warns about the security concerns of using `urljoin` with attacker-controlled URLs and notes a behavior change in version 3.5 to align with RFC 3986 standards.
---

```

If you do not want that behavior, preprocess the _url_ with [`urlsplit()`](https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urlsplit "urllib.parse.urlsplit") and [`urlunsplit()`](https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urlunsplit "urllib.parse.urlunsplit"), removing possible _scheme_ and _netloc_ parts.
Warning
Because an absolute URL may be passed as the `url` parameter, it is generally **not secure** to use `urljoin` with an attacker-controlled `url`. For example in, `urljoin("https://website.com/users/", username)`, if `username` can contain an absolute URL, the result of `urljoin` will be the absolute URL.
Changed in version 3.5: Behavior updated to match the semantics defined in [**RFC 3986**](https://datatracker.ietf.org/doc/html/rfc3986.html). 

urllib.parse.urldefrag(_url_)[Â¶](https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urldefrag "Link to this definition")
    
If _url_ contains a fragment identifier, return a modified version of _url_ with no fragment identifier, and the fragment identifier as a separate string. If there is no fragment identifier in _url_ , return _url_ unmodified and an empty string.
The return value is a [named tuple](https://docs.python.org/3/glossary.html#term-named-tuple), its items can be accessed by index or as named attributes:
Attribute | Index | Value | Value if not present  
---|---|---|---  
`url` | 0 | URL with no fragment | empty string  
`fragment` | 1 | Fragment identifier | empty string  
See section [Structured Parse Results](https://docs.python.org/3/library/urllib.parse.html#urlparse-result-object) for more information on the result object.
Changed in version 3.2: Result is a structured object rather than a simple 2-tuple.