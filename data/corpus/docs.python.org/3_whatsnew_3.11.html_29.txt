Title: Python 3.11 Standard Library Updates
URL: https://docs.python.org/3/whatsnew/3.11.html
Summary: Several features in the `configparser` module have been deprecated, with updated warnings indicating their removal in Python 3.12. This includes the `SafeConfigParser` class, `ParsingError.filename` property, and `RawConfigParser.readfp()` method. Additionally, `LegacyInterpolation` has been deprecated for some time and now triggers a `DeprecationWarning`.
---

### Standard Library[¶](https://docs.python.org/3/whatsnew/3.11.html#standard-library "Link to this heading")
  * The following have been deprecated in [`configparser`](https://docs.python.org/3/library/configparser.html#module-configparser "configparser: Configuration file parser.") since Python 3.2. Their deprecation warnings have now been updated to note they will be removed in Python 3.12:
    * the `configparser.SafeConfigParser` class
    * the `configparser.ParsingError.filename` property
    * the `configparser.RawConfigParser.readfp()` method
(Contributed by Hugo van Kemenade in [bpo-45173](https://bugs.python.org/issue?@action=redirect&bpo=45173).)
  * `configparser.LegacyInterpolation` has been deprecated in the docstring since Python 3.2, and is not listed in the [`configparser`](https://docs.python.org/3/library/configparser.html#module-configparser "configparser: Configuration file parser.") documentation. It now emits a [`DeprecationWarning`](https://docs.python.org/3/library/exceptions.html#DeprecationWarning "DeprecationWarning") and will be removed in Python 3.13. Use [`configparser.BasicInterpolation`](https://docs.python.org/3/library/configparser.html#configparser.BasicInterpolation "configparser.BasicInterpolation") or [`configparser.ExtendedInterpolation`](https://docs.python.org/3/library/configparser.html#configparser.ExtendedInterpolation "configparser.ExtendedInterpolation") instead. (Contributed by Hugo van Kemenade in [bpo-46607](https://bugs.python.org/issue?@action=redirect&bpo=46607).)
  * The older set of [`importlib.resources`](https://docs.python.org/3/library/importlib.resources.html#module-importlib.resources "importlib.resources: Package resource reading, opening, and access") functions were deprecated in favor of the replacements added in Python 3.9 and will be removed in a future Python version, due to not supporting resources located within package subdirectories:
    * `importlib.resources.contents()`
    * `importlib.resources.is_resource()`
    * `importlib.resources.open_binary()`
    * `importlib.resources.open_text()`
    * `importlib.resources.read_binary()`
    * `importlib.resources.read_text()`
    * `importlib.resources.path()`
  * The [`locale.getdefaultlocale()`](https://docs.python.org/3/library/locale.html#locale.getdefaultlocale "locale.getdefaultlocale") function is deprecated and will be removed in Python 3.15. Use [`locale.setlocale()`](https://docs.python.org/3/library/locale.html#locale.setlocale "locale.setlocale"), [`locale.getpreferredencoding(False)`](https://docs.python.org/3/library/locale.html#locale.getpreferredencoding "locale.getpreferredencoding") and [`locale.getlocale()`](https://docs.python.org/3/library/locale.html#locale.getlocale "locale.getlocale") functions instead. (Contributed by Victor Stinner in [gh-90817](https://github.com/python/cpython/issues/90817).)
  * The `locale.resetlocale()` function is deprecated and will be removed in Python 3.13. Use `locale.setlocale(locale.LC_ALL, "")` instead. (Contributed by Victor Stinner in [gh-90817](https://github.com/python/cpython/issues/90817).)
  * Stricter rules will now be applied for numerical group references and group names in [regular expressions](https://docs.python.org/3/library/re.html#re-syntax). Only sequences of ASCII digits will now be accepted as a numerical reference, and the group name in [`bytes`](https://docs.python.org/3/library/stdtypes.html#bytes "bytes") patterns and replacement strings can only contain ASCII letters, digits and underscores. For now, a deprecation warning is raised for syntax violating these rules. (Contributed by Serhiy Storchaka in [gh-91760](https://github.com/python/cpython/issues/91760).)
  * In the [`re`](https://docs.python.org/3/library/re.html#module-re "re: Regular expression operations.") module, the `re.template()` function and the corresponding `re.TEMPLATE` and `re.T` flags are deprecated, as they were undocumented and lacked an obvious purpose. They will be removed in Python 3.13. (Contributed by Serhiy Storchaka and Miro Hrončok in [gh-92728](https://github.com/python/cpython/issues/92728).)
  * `turtle.settiltangle()` has been deprecated since Python 3.1; it now emits a deprecation warning and will be removed in Python 3.13. Use [`turtle.tiltangle()`](https://docs.python.org/3/library/turtle.html#turtle.tiltangle "turtle.tiltangle") instead (it was earlier incorrectly marked as deprecated, and its docstring is now corrected). (Contributed by Hugo van Kemenade in [bpo-45837](https://bugs.python.org/issue?@action=redirect&bpo=45837).)
  * [`typing.Text`](https://docs.python.org/3/library/typing.html#typing.Text "typing.Text"), which exists solely to provide compatibility support between Python 2 and Python 3 code, is now deprecated. Its removal is currently unplanned, but users are encouraged to use [`str`](https://docs.python.org/3/library/stdtypes.html#str "str") instead wherever possible. (Contributed by Alex Waygood in [gh