Title: ZipExtFile Methods in Read and Write Modes
URL: https://docs.python.org/3/library/zipfile.html
Summary: The `ZipExtFile` class in read mode ('r') provides methods such as `read()`, `readline()`, and `seek()`, allowing for read-only access to file-like objects within a zip. In write mode ('w'), it returns a writable file handle that supports methods like `write()`, enabling modification of zip file contents.
---

```

With _mode_ `'r'` the file-like object (`ZipExtFile`) is read-only and provides the following methods: [`read()`](https://docs.python.org/3/library/io.html#io.BufferedIOBase.read "io.BufferedIOBase.read"), [`readline()`](https://docs.python.org/3/library/io.html#io.IOBase.readline "io.IOBase.readline"), [`readlines()`](https://docs.python.org/3/library/io.html#io.IOBase.readlines "io.IOBase.readlines"), [`seek()`](https://docs.python.org/3/library/io.html#io.IOBase.seek "io.IOBase.seek"), [`tell()`](https://docs.python.org/3/library/io.html#io.IOBase.tell "io.IOBase.tell"), [`__iter__()`](https://docs.python.org/3/library/stdtypes.html#container.__iter__ "container.__iter__"), [`__next__()`](https://docs.python.org/3/library/stdtypes.html#iterator.__next__ "iterator.__next__"). These objects can operate independently of the ZipFile.
With `mode='w'`, a writable file handle is returned, which supports the [`write()`](https://docs.python.org/3/library/io.html#io.BufferedIOBase.write "io.BufferedIOBase.write") method. While a writable file handle is open, attempting to read or write other files in the ZIP file will raise a [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError "ValueError").
In both cases the file-like object has also attributes `name`, which is equivalent to the name of a file within the archive, and `mode`, which is `'rb'` or `'wb'` depending on the input mode.
When writing a file, if the file size is not known in advance but may exceed 2 GiB, pass `force_zip64=True` to ensure that the header format is capable of supporting large files. If the file size is known in advance, construct a [`ZipInfo`](https://docs.python.org/3/library/zipfile.html#zipfile.ZipInfo "zipfile.ZipInfo") object with [`file_size`](https://docs.python.org/3/library/zipfile.html#zipfile.ZipInfo.file_size "zipfile.ZipInfo.file_size") set, and use that as the _name_ parameter.
Note
The [`open()`](https://docs.python.org/3/library/zipfile.html#zipfile.ZipFile.open "zipfile.ZipFile.open"), [`read()`](https://docs.python.org/3/library/zipfile.html#zipfile.ZipFile.read "zipfile.ZipFile.read") and [`extract()`](https://docs.python.org/3/library/zipfile.html#zipfile.ZipFile.extract "zipfile.ZipFile.extract") methods can take a filename or a [`ZipInfo`](https://docs.python.org/3/library/zipfile.html#zipfile.ZipInfo "zipfile.ZipInfo") object. You will appreciate this when trying to read a ZIP file that contains members with duplicate names.
Changed in version 3.6: Removed support of `mode='U'`. Use [`io.TextIOWrapper`](https://docs.python.org/3/library/io.html#io.TextIOWrapper "io.TextIOWrapper") for reading compressed text files in [universal newlines](https://docs.python.org/3/glossary.html#term-universal-newlines) mode.
Changed in version 3.6: [`ZipFile.open()`](https://docs.python.org/3/library/zipfile.html#zipfile.ZipFile.open "zipfile.ZipFile.open") can now be used to write files into the archive with the `mode='w'` option.
Changed in version 3.6: Calling [`open()`](https://docs.python.org/3/library/zipfile.html#zipfile.ZipFile.open "zipfile.ZipFile.open") on a closed ZipFile will raise a [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError "ValueError"). Previously, a [`RuntimeError`](https://docs.python.org/3/library/exceptions.html#RuntimeError "RuntimeError") was raised.
Changed in version 3.13: Added attributes `name` and `mode` for the writeable file-like object. The value of the `mode` attribute for the readable file-like object was changed from `'r'` to `'rb'`.