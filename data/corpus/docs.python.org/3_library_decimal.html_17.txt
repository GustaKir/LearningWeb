Title: Decimal Module Functions
URL: https://docs.python.org/3/library/decimal.html
Summary: This section describes key functions in the Decimal module that determine various properties of numbers, including whether a number is a signaling NaN, subnormal, or zero. It also includes functions for calculating natural and base 10 logarithms.
---

is_snan(_x_)[¶](https://docs.python.org/3/library/decimal.html#decimal.Context.is_snan "Link to this definition")
    
Returns `True` if _x_ is a signaling NaN; otherwise returns `False`. 

is_subnormal(_x_)[¶](https://docs.python.org/3/library/decimal.html#decimal.Context.is_subnormal "Link to this definition")
    
Returns `True` if _x_ is subnormal; otherwise returns `False`. 

is_zero(_x_)[¶](https://docs.python.org/3/library/decimal.html#decimal.Context.is_zero "Link to this definition")
    
Returns `True` if _x_ is a zero; otherwise returns `False`. 

ln(_x_)[¶](https://docs.python.org/3/library/decimal.html#decimal.Context.ln "Link to this definition")
    
Returns the natural (base e) logarithm of _x_. 

log10(_x_)[¶](https://docs.python.org/3/library/decimal.html#decimal.Context.log10 "Link to this definition")
    
Returns the base 10 logarithm of _x_. 

logb(_x_)[¶](https://docs.python.org/3/library/decimal.html#decimal.Context.logb "Link to this definition")
    
Returns the exponent of the magnitude of the operand’s MSD. 

logical_and(_x_ , _y_)[¶](https://docs.python.org/3/library/decimal.html#decimal.Context.logical_and "Link to this definition")
    
Applies the logical operation _and_ between each operand’s digits. 

logical_invert(_x_)[¶](https://docs.python.org/3/library/decimal.html#decimal.Context.logical_invert "Link to this definition")
    
Invert all the digits in _x_. 

logical_or(_x_ , _y_)[¶](https://docs.python.org/3/library/decimal.html#decimal.Context.logical_or "Link to this definition")
    
Applies the logical operation _or_ between each operand’s digits. 

logical_xor(_x_ , _y_)[¶](https://docs.python.org/3/library/decimal.html#decimal.Context.logical_xor "Link to this definition")
    
Applies the logical operation _xor_ between each operand’s digits. 

max(_x_ , _y_)[¶](https://docs.python.org/3/library/decimal.html#decimal.Context.max "Link to this definition")
    
Compares two values numerically and returns the maximum. 

max_mag(_x_ , _y_)[¶](https://docs.python.org/3/library/decimal.html#decimal.Context.max_mag "Link to this definition")
    
Compares the values numerically with their sign ignored. 

min(_x_ , _y_)[¶](https://docs.python.org/3/library/decimal.html#decimal.Context.min "Link to this definition")
    
Compares two values numerically and returns the minimum. 

min_mag(_x_ , _y_)[¶](https://docs.python.org/3/library/decimal.html#decimal.Context.min_mag "Link to this definition")
    
Compares the values numerically with their sign ignored. 

minus(_x_)[¶](https://docs.python.org/3/library/decimal.html#decimal.Context.minus "Link to this definition")
    
Minus corresponds to the unary prefix minus operator in Python. 

multiply(_x_ , _y_)[¶](https://docs.python.org/3/library/decimal.html#decimal.Context.multiply "Link to this definition")
    
Return the product of _x_ and _y_. 

next_minus(_x_)[¶](https://docs.python.org/3/library/decimal.html#decimal.Context.next_minus "Link to this definition")
    
Returns the largest representable number smaller than _x_. 

next_plus(_x_)[¶](https://docs.python.org/3/library/decimal.html#decimal.Context.next_plus "Link to this definition")
    
Returns the smallest representable number larger than _x_. 

next_toward(_x_ , _y_)[¶](https://docs.python.org/3/library/decimal.html#decimal.Context.next_toward "Link to this definition")
    
Returns the number closest to _x_ , in direction towards _y_. 

normalize(_x_)[¶](https://docs.python.org/3/library/decimal.html#decimal.Context.normalize "Link to this definition")
    
Reduces _x_ to its simplest form. 

number_class(_x_)[¶](https://docs.python.org/3/library/decimal.html#decimal.Context.number_class "Link to this definition")
    
Returns an indication of the class of _x_. 

plus(_x_)[¶](https://docs.python.org/3/library/decimal.html#decimal.Context.plus "Link to this definition")
    
Plus corresponds to the unary prefix plus operator in Python. This operation applies the context precision and rounding, so it is _not_ an identity operation.