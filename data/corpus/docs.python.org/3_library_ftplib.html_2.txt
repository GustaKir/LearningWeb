Title: FTPLib Changes and Method Overview
URL: https://docs.python.org/3/library/ftplib.html
Summary: This section outlines changes made to the ftplib module in various Python versions, including support for the 'with' statement, addition of the _source_address_ parameter, and updates to the _timeout_ and _encoding_ parameters. It also describes the dual support for text and binary file handling in FTP methods and lists the methods available for FTP instances.
---

```

Changed in version 3.2: Support for the [`with`](https://docs.python.org/3/reference/compound_stmts.html#with) statement was added.
Changed in version 3.3: _source_address_ parameter was added.
Changed in version 3.9: If the _timeout_ parameter is set to be zero, it will raise a [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError "ValueError") to prevent the creation of a non-blocking socket. The _encoding_ parameter was added, and the default was changed from Latin-1 to UTF-8 to follow [**RFC 2640**](https://datatracker.ietf.org/doc/html/rfc2640.html).
Several `FTP` methods are available in two flavors: one for handling text files and another for binary files. The methods are named for the command which is used followed by `lines` for the text version or `binary` for the binary version.
[`FTP`](https://docs.python.org/3/library/ftplib.html#ftplib.FTP "ftplib.FTP") instances have the following methods: 

set_debuglevel(_level_)[¶](https://docs.python.org/3/library/ftplib.html#ftplib.FTP.set_debuglevel "Link to this definition")
    
Set the instance’s debugging level as an [`int`](https://docs.python.org/3/library/functions.html#int "int"). This controls the amount of debugging output printed. The debug levels are:
  * `0` (default): No debug output.
  * `1`: Produce a moderate amount of debug output, generally a single line per request.
  * `2` or higher: Produce the maximum amount of debugging output, logging each line sent and received on the control connection.



connect(_host =''_, _port =0_, _timeout =None_, _source_address =None_)[¶](https://docs.python.org/3/library/ftplib.html#ftplib.FTP.connect "Link to this definition")
    
Connect to the given host and port. This function should be called only once for each instance; it should not be called if a _host_ argument was given when the [`FTP`](https://docs.python.org/3/library/ftplib.html#ftplib.FTP "ftplib.FTP") instance was created. All other `FTP` methods can only be called after a connection has successfully been made. 

Parameters:
    
  * **host** ([_str_](https://docs.python.org/3/library/stdtypes.html#str "str")) – The host to connect to.
  * **port** ([_int_](https://docs.python.org/3/library/functions.html#int "int")) – The TCP port to connect to (default: `21`, as specified by the FTP protocol specification). It is rarely needed to specify a different port number.
  * **timeout** ([_float_](https://docs.python.org/3/library/functions.html#float "float") _|__None_) – A timeout in seconds for the connection attempt (default: the global default timeout setting).
  * **source_address** ([_tuple_](https://docs.python.org/3/library/stdtypes.html#tuple "tuple") _|__None_) – A 2-tuple `(host, port)` for the socket to bind to as its source address before connecting.


Raises an [auditing event](https://docs.python.org/3/library/sys.html#auditing) `ftplib.connect` with arguments `self`, `host`, `port`.
Changed in version 3.3: _source_address_ parameter was added. 

getwelcome()[¶](https://docs.python.org/3/library/ftplib.html#ftplib.FTP.getwelcome "Link to this definition")
    
Return the welcome message sent by the server in reply to the initial connection. (This message sometimes contains disclaimers or help information that may be relevant to the user.) 

login(_user ='anonymous'_, _passwd =''_, _acct =''_)[¶](https://docs.python.org/3/library/ftplib.html#ftplib.FTP.login "Link to this definition")
    
Log on to the connected FTP server. This function should be called only once for each instance, after a connection has been established; it should not be called if the _host_ and _user_ arguments were given when the [`FTP`](https://docs.python.org/3/library/ftplib.html#ftplib.FTP "ftplib.FTP") instance was created. Most FTP commands are only allowed after the client has logged in. 

Parameters:
    
  * **user** ([_str_](https://docs.python.org/3/library/stdtypes.html#str "str")) – The username to log in with (default: `'anonymous'`).
  * **passwd** ([_str_](https://docs.python.org/3/library/stdtypes.html#str "str")) – The password to use when logging in. If not given, and if _passwd_ is the empty string or `"-"`, a password will be automatically generated.
  * **acct** ([_str_](https://docs.python.org/3/library/stdtypes.html#str "str")) – Account information to be used for the `ACCT` FTP command. Few systems implement this. See [RFC-959](https://datatracker.ietf.org/doc/html/rfc959.html) for more details.



abort()[¶](https://docs.python.org/3/library/ftplib.html#ftplib.FTP.abort "Link to this definition")
    
Abort a file transfer that is in progress. Using this does not always work, but it’s worth a try.