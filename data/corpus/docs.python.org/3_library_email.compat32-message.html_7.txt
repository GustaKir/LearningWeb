Title: Email Message Class Functions
URL: https://docs.python.org/3/library/email.compat32-message.html
Summary: This section describes functions for the email.message.Message class, including replace_header, which replaces the first matching header while maintaining order and case, and get_content_type, which retrieves the message's content type, defaulting to a specified type if no Content-Type header is present.
---

```


replace_header(__name_ , __value_)[¶](https://docs.python.org/3/library/email.compat32-message.html#email.message.Message.replace_header "Link to this definition")
    
Replace a header. Replace the first header found in the message that matches __name_ , retaining header order and field name case. If no matching header was found, a [`KeyError`](https://docs.python.org/3/library/exceptions.html#KeyError "KeyError") is raised. 

get_content_type()[¶](https://docs.python.org/3/library/email.compat32-message.html#email.message.Message.get_content_type "Link to this definition")
    
Return the message’s content type. The returned string is coerced to lower case of the form _maintype/subtype_. If there was no _Content-Type_ header in the message the default type as given by [`get_default_type()`](https://docs.python.org/3/library/email.compat32-message.html#email.message.Message.get_default_type "email.message.Message.get_default_type") will be returned. Since according to [**RFC 2045**](https://datatracker.ietf.org/doc/html/rfc2045.html), messages always have a default type, [`get_content_type()`](https://docs.python.org/3/library/email.compat32-message.html#email.message.Message.get_content_type "email.message.Message.get_content_type") will always return a value.
[**RFC 2045**](https://datatracker.ietf.org/doc/html/rfc2045.html) defines a message’s default type to be _text/plain_ unless it appears inside a _multipart/digest_ container, in which case it would be _message/rfc822_. If the _Content-Type_ header has an invalid type specification, [**RFC 2045**](https://datatracker.ietf.org/doc/html/rfc2045.html) mandates that the default type be _text/plain_. 

get_content_maintype()[¶](https://docs.python.org/3/library/email.compat32-message.html#email.message.Message.get_content_maintype "Link to this definition")
    
Return the message’s main content type. This is the _maintype_ part of the string returned by [`get_content_type()`](https://docs.python.org/3/library/email.compat32-message.html#email.message.Message.get_content_type "email.message.Message.get_content_type"). 

get_content_subtype()[¶](https://docs.python.org/3/library/email.compat32-message.html#email.message.Message.get_content_subtype "Link to this definition")
    
Return the message’s sub-content type. This is the _subtype_ part of the string returned by [`get_content_type()`](https://docs.python.org/3/library/email.compat32-message.html#email.message.Message.get_content_type "email.message.Message.get_content_type"). 

get_default_type()[¶](https://docs.python.org/3/library/email.compat32-message.html#email.message.Message.get_default_type "Link to this definition")
    
Return the default content type. Most messages have a default content type of _text/plain_ , except for messages that are subparts of _multipart/digest_ containers. Such subparts have a default content type of _message/rfc822_. 

set_default_type(_ctype_)[¶](https://docs.python.org/3/library/email.compat32-message.html#email.message.Message.set_default_type "Link to this definition")
    
Set the default content type. _ctype_ should either be _text/plain_ or _message/rfc822_ , although this is not enforced. The default content type is not stored in the _Content-Type_ header. 

get_params(_failobj =None_, _header ='content-type'_, _unquote =True_)[¶](https://docs.python.org/3/library/email.compat32-message.html#email.message.Message.get_params "Link to this definition")
    
Return the message’s _Content-Type_ parameters, as a list. The elements of the returned list are 2-tuples of key/value pairs, as split on the `'='` sign. The left hand side of the `'='` is the key, while the right hand side is the value. If there is no `'='` sign in the parameter the value is the empty string, otherwise the value is as described in [`get_param()`](https://docs.python.org/3/library/email.compat32-message.html#email.message.Message.get_param "email.message.Message.get_param") and is unquoted if optional _unquote_ is `True` (the default).
Optional _failobj_ is the object to return if there is no _Content-Type_ header. Optional _header_ is the header to search instead of _Content-Type_.
This is a legacy method. On the `EmailMessage` class its functionality is replaced by the _params_ property of the individual header objects returned by the header access methods.