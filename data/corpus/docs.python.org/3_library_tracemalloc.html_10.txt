Title: Traceback Class in tracemalloc
URL: https://docs.python.org/3/library/tracemalloc.html
Summary: The `tracemalloc.Traceback` class represents a sequence of `Frame` instances ordered from oldest to most recent. Each traceback consists of at least one frame, and if the `tracemalloc` module cannot retrieve a frame, it uses the placeholder filename `'<unknown>'`. The number of frames is limited by `get_traceback_limit()` during a snapshot, with the total number of frames stored in `Traceback.total_nframe`.
---

_class_ tracemalloc.Traceback[¶](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.Traceback "Link to this definition")
    
Sequence of [`Frame`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.Frame "tracemalloc.Frame") instances sorted from the oldest frame to the most recent frame.
A traceback contains at least `1` frame. If the `tracemalloc` module failed to get a frame, the filename `"<unknown>"` at line number `0` is used.
When a snapshot is taken, tracebacks of traces are limited to [`get_traceback_limit()`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.get_traceback_limit "tracemalloc.get_traceback_limit") frames. See the [`take_snapshot()`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.take_snapshot "tracemalloc.take_snapshot") function. The original number of frames of the traceback is stored in the [`Traceback.total_nframe`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.Traceback.total_nframe "tracemalloc.Traceback.total_nframe") attribute. That allows to know if a traceback has been truncated by the traceback limit.
The [`Trace.traceback`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.Trace.traceback "tracemalloc.Trace.traceback") attribute is an instance of [`Traceback`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.Traceback "tracemalloc.Traceback") instance.
Changed in version 3.7: Frames are now sorted from the oldest to the most recent, instead of most recent to oldest. 

total_nframe[¶](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.Traceback.total_nframe "Link to this definition")
    
Total number of frames that composed the traceback before truncation. This attribute can be set to `None` if the information is not available.
Changed in version 3.9: The [`Traceback.total_nframe`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.Traceback.total_nframe "tracemalloc.Traceback.total_nframe") attribute was added. 

format(_limit =None_, _most_recent_first =False_)[¶](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.Traceback.format "Link to this definition")
    
Format the traceback as a list of lines. Use the [`linecache`](https://docs.python.org/3/library/linecache.html#module-linecache "linecache: Provides random access to individual lines from text files.") module to retrieve lines from the source code. If _limit_ is set, format the _limit_ most recent frames if _limit_ is positive. Otherwise, format the `abs(limit)` oldest frames. If _most_recent_first_ is `True`, the order of the formatted frames is reversed, returning the most recent frame first instead of last.
Similar to the [`traceback.format_tb()`](https://docs.python.org/3/library/traceback.html#traceback.format_tb "traceback.format_tb") function, except that [`format()`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.Traceback.format "tracemalloc.Traceback.format") does not include newlines.
Example:
```
print("Traceback (most recent call first):")
for line in traceback:
  print(line)

```

Output:
```
Traceback (most recent call first):
 File "test.py", line 9
  obj = Object()
 File "test.py", line 12
  tb = tracemalloc.get_object_traceback(f())