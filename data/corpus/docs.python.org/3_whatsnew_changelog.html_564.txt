Title: Python 3 Library Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section outlines changes in the Python standard library, including improvements to asyncio tasks regarding cancellation handling, enhancements in SSL transport protocol support, and fixes for race conditions in SSLProtocol behavior.
---

### Library[¶](https://docs.python.org/3/whatsnew/changelog.html#id493 "Link to this heading")
  * [bpo-32751](https://bugs.python.org/issue?@action=redirect&bpo=32751): When cancelling the task due to a timeout, [`asyncio.wait_for()`](https://docs.python.org/3/library/asyncio-task.html#asyncio.wait_for "asyncio.wait_for") will now wait until the cancellation is complete.
  * [bpo-32684](https://bugs.python.org/issue?@action=redirect&bpo=32684): Fix gather to propagate cancellation of itself even with return_exceptions.
  * [bpo-33654](https://bugs.python.org/issue?@action=redirect&bpo=33654): Support protocol type switching in SSLTransport.set_protocol().
  * [bpo-33674](https://bugs.python.org/issue?@action=redirect&bpo=33674): Pause the transport as early as possible to further reduce the risk of data_received() being called before connection_made().
  * [bpo-33674](https://bugs.python.org/issue?@action=redirect&bpo=33674): Fix a race condition in SSLProtocol.connection_made() of asyncio.sslproto: start immediately the handshake instead of using call_soon(). Previously, data_received() could be called before the handshake started, causing the handshake to hang or fail.
  * [bpo-31647](https://bugs.python.org/issue?@action=redirect&bpo=31647): Fixed bug where calling write_eof() on a _SelectorSocketTransport after it’s already closed raises AttributeError.
  * [bpo-32610](https://bugs.python.org/issue?@action=redirect&bpo=32610): Make asyncio.all_tasks() return only pending tasks.
  * [bpo-32410](https://bugs.python.org/issue?@action=redirect&bpo=32410): Avoid blocking on file IO in sendfile fallback code
  * [bpo-33469](https://bugs.python.org/issue?@action=redirect&bpo=33469): Fix RuntimeError after closing loop that used run_in_executor
  * [bpo-33672](https://bugs.python.org/issue?@action=redirect&bpo=33672): Fix Task.__repr__ crash with Cython’s bogus coroutines
  * [bpo-33654](https://bugs.python.org/issue?@action=redirect&bpo=33654): Fix transport.set_protocol() to support switching between asyncio.Protocol and asyncio.BufferedProtocol. Fix loop.start_tls() to work with asyncio.BufferedProtocols.
  * [bpo-33652](https://bugs.python.org/issue?@action=redirect&bpo=33652): Pickles of type variables and subscripted generics are now future-proof and compatible with older Python versions.
  * [bpo-32493](https://bugs.python.org/issue?@action=redirect&bpo=32493): Fixed [`uuid.uuid1()`](https://docs.python.org/3/library/uuid.html#uuid.uuid1 "uuid.uuid1") on FreeBSD.
  * [bpo-33618](https://bugs.python.org/issue?@action=redirect&bpo=33618): Finalize and document preliminary and experimental TLS 1.3 support with OpenSSL 1.1.1
  * [bpo-33623](https://bugs.python.org/issue?@action=redirect&bpo=33623): Fix possible SIGSGV when asyncio.Future is created in __del__
  * [bpo-30877](https://bugs.python.org/issue?@action=redirect&bpo=30877): Fixed a bug in the Python implementation of the JSON decoder that prevented the cache of parsed strings from clearing after finishing the decoding. Based on patch by c-fos.
  * [bpo-33570](https://bugs.python.org/issue?@action=redirect&bpo=33570): Change TLS 1.3 cipher suite settings for compatibility with OpenSSL 1.1.1-pre6 and newer. OpenSSL 1.1.1 will have TLS 1.3 ciphers enabled by default.
  * [bpo-28556](https://bugs.python.org/issue?@action=redirect&bpo=28556): Do not simplify arguments to `typing.Union`. Now `Union[Manager, Employee]` is not simplified to `Employee` at runtime. Such simplification previously caused several bugs and limited possibilities for introspection.
  * [bpo-33540](https://bugs.python.org/issue?@action=redirect&bpo=33540): Add a new `block_on_close` class attribute to `ForkingMixIn` and `ThreadingMixIn` classes of [`socketserver`](https://docs.python.org/3/library/socketserver.html#module-socketserver "socketserver: A framework for network servers.").
  * [bpo-33548](https://bugs.python.org/issue?@action=redirect&bpo=33548): tempfile._candidate_tempdir_list should consider common TEMP locations
  * [bpo-33109](https://bugs.python.org/issue?@action=redirect&bpo=33109): argparse subparsers are once again not required by default, reverting the change in behavior introduced by [bpo-26510](https://bugs.python.org/issue?@action=redirect&bpo=26510) in 3.7.0a2.
  * [bpo-33536](https://bugs.python.org/issue?@action=redirect&bpo=33536): dataclasses.make_dataclass now checks for invalid field names and duplicate fields. Also, added a check for invalid field specifications.
  * [bpo-33542](https://bugs.python.org/issue?@action=redirect&bpo=33542): Prevent `uuid.get_node` from using a DUID instead of a MAC on Windows. Patch by Zvi Effron
  * [bpo-26819](https://bugs.python.org/issue?@action=redirect&bpo=26819): Fix race condition with `ReadTransport.resume_reading` in Windows proactor event loop.
  * Fix failure in `typing.get_type_hints()` when ClassVar was provided as a string forward reference.
  * [bpo-33505](https://bugs.python.org/issue?@action=redirect