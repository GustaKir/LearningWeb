Title: socketserver — A framework for network servers
URL: https://docs.python.org/3/library/socketserver.html
Summary: The `socketserver` module in Python provides a framework for creating network servers, including functionality for server creation, server objects, request handler objects, and examples for usage.
---

[ ![Python logo](https://docs.python.org/3/_static/py.svg) ](https://www.python.org/) dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
Theme  Auto Light Dark
### [Table of Contents](https://docs.python.org/3/contents.html)
  * [`socketserver` — A framework for network servers](https://docs.python.org/3/library/socketserver.html)
    * [Server Creation Notes](https://docs.python.org/3/library/socketserver.html#server-creation-notes)
    * [Server Objects](https://docs.python.org/3/library/socketserver.html#server-objects)
    * [Request Handler Objects](https://docs.python.org/3/library/socketserver.html#request-handler-objects)
    * [Examples](https://docs.python.org/3/library/socketserver.html#examples)
      * [`socketserver.TCPServer` Example](https://docs.python.org/3/library/socketserver.html#socketserver-tcpserver-example)
      * [`socketserver.UDPServer` Example](https://docs.python.org/3/library/socketserver.html#socketserver-udpserver-example)
      * [Asynchronous Mixins](https://docs.python.org/3/library/socketserver.html#asynchronous-mixins)


#### Previous topic
[`uuid` — UUID objects according to **RFC 4122**](https://docs.python.org/3/library/uuid.html "previous chapter")
#### Next topic
[`http.server` — HTTP servers](https://docs.python.org/3/library/http.server.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/socketserver.rst)


### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/library/http.server.html "http.server — HTTP servers") |
  * [previous](https://docs.python.org/3/library/uuid.html "uuid — UUID objects according to RFC 4122") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [The Python Standard Library](https://docs.python.org/3/library/index.html) »
  * [Internet Protocols and Support](https://docs.python.org/3/library/internet.html) »
  * [`socketserver` — A framework for network servers](https://docs.python.org/3/library/socketserver.html)
  * | 
  * Theme  Auto Light Dark |


# `socketserver` — A framework for network servers[¶](https://docs.python.org/3/library/socketserver.html#module-socketserver "Link to this heading")
**Source code:** [Lib/socketserver.py](https://github.com/python/cpython/tree/3.13/Lib/socketserver.py)
The [`socketserver`](https://docs.python.org/3/library/socketserver.html#module-socketserver "socketserver: A framework for network servers.") module simplifies the task of writing network servers.
[Availability](https://docs.python.org/3/library/intro.html#availability): not WASI.
This module does not work or is not available on WebAssembly. See [WebAssembly platforms](https://docs.python.org/3/library/intro.html#wasm-availability) for more information.
There are four basic concrete server classes: 

_class_ socketserver.TCPServer(_server_address_ , _RequestHandlerClass_ , _bind_and_activate =True_)[¶](https://docs.python.org/3/library/socketserver.html#socketserver.TCPServer "Link to this definition")
    
This uses the internet TCP protocol, which provides for continuous streams of data between the client and server. If _bind_and_activate_ is true, the constructor automatically attempts to invoke [`server_bind()`](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer.server_bind "socketserver.BaseServer.server_bind") and [`server_activate()`](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer.server_activate "socketserver.BaseServer.server_activate"). The other parameters are passed to the [`BaseServer`](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer "socketserver.BaseServer") base class. 

_class_ socketserver.UDPServer(_server_address_ , _RequestHandlerClass_ , _bind_and_activate =True_)[¶](https://docs.python.org/3/library/socketserver.html#socketserver.UDPServer "Link to this definition")
    
This uses datagrams, which are discrete packets of information that may arrive out of order or be lost while in transit. The parameters are the same as for [`TCPServer`](https://docs.python.org/3/library/socketserver.html#socketserver.TCPServer "socketserver.TCPServer").