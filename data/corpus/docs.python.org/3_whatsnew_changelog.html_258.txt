Title: Python 3 Changelog: Core and Builtins Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section outlines updates in the core and builtins of Python, including the deprecation of chaining classmethod descriptors, changes to the interactive interpreter's import sequence, and improvements to the AttributeError message for missing attributes.
---

### Core and Builtins[¶](https://docs.python.org/3/whatsnew/changelog.html#id218 "Link to this heading")
  * [gh-89519](https://github.com/python/cpython/issues/89519): Chaining classmethod descriptors (introduced in [bpo-19072](https://bugs.python.org/issue?@action=redirect&bpo=19072)) is deprecated. It can no longer be used to wrap other descriptors such as property(). The core design of this feature was flawed, and it caused a number of downstream problems.
  * [gh-92345](https://github.com/python/cpython/issues/92345): `pymain_run_python()` now imports `readline` and `rlcompleter` before sys.path is extended to include the current working directory of an interactive interpreter. Non-interactive interpreters are not affected.
  * [bpo-43857](https://bugs.python.org/issue?@action=redirect&bpo=43857): Improve the [`AttributeError`](https://docs.python.org/3/library/exceptions.html#AttributeError "AttributeError") message when deleting a missing attribute. Patch by Géry Ogam.
  * [gh-92245](https://github.com/python/cpython/issues/92245): Make sure that PEP 523 is respected in all cases. In 3.11a7, specialization may have prevented Python-to-Python calls respecting PEP 523.
  * [gh-92203](https://github.com/python/cpython/issues/92203): Add a closure keyword-only parameter to [`exec()`](https://docs.python.org/3/library/functions.html#exec "exec"). It can only be specified when exec-ing a code object that uses free variables. When specified, it must be a tuple, with exactly the number of cell variables referenced by the code object. closure has a default value of `None`, and it must be `None` if the code object doesn’t refer to any free variables.
  * [gh-91173](https://github.com/python/cpython/issues/91173): Disable frozen modules in debug builds. Patch by Kumar Aditya.
  * [gh-92114](https://github.com/python/cpython/issues/92114): Improve error message when subscript a type with `__class_getitem__` set to `None`.
  * [gh-92112](https://github.com/python/cpython/issues/92112): Fix crash triggered by an evil custom `mro()` on a metaclass.
  * [gh-92063](https://github.com/python/cpython/issues/92063): The `PRECALL_METHOD_DESCRIPTOR_FAST_WITH_KEYWORDS` instruction now ensures methods are called only on objects of the correct type.
  * [gh-92031](https://github.com/python/cpython/issues/92031): Deoptimize statically allocated code objects during `Py_FINALIZE()` so that future `_PyCode_Quicken` calls always start with unquickened code.
  * [gh-92036](https://github.com/python/cpython/issues/92036): Fix a crash in subinterpreters related to the garbage collector. When a subinterpreter is deleted, untrack all objects tracked by its GC. To prevent a crash in deallocator functions expecting objects to be tracked by the GC, leak a strong reference to these objects on purpose, so they are never deleted and their deallocator functions are not called. Patch by Victor Stinner.
  * [gh-92032](https://github.com/python/cpython/issues/92032): The interpreter can now autocomplete soft keywords, as of now `match`, `case`, and `_` (wildcard pattern) from [**PEP 634**](https://peps.python.org/pep-0634/).
  * [gh-87999](https://github.com/python/cpython/issues/87999): The warning emitted by the Python parser for a numeric literal immediately followed by keyword has been changed from deprecation warning to syntax warning.
  * [gh-91869](https://github.com/python/cpython/issues/91869): Fix an issue where specialized opcodes with extended arguments could produce incorrect tracing output or lead to assertion failures.
  * [gh-91603](https://github.com/python/cpython/issues/91603): Speed up [`types.UnionType`](https://docs.python.org/3/library/types.html#types.UnionType "types.UnionType") instantiation. Based on patch provided by Yurii Karabas.
  * [gh-89373](https://github.com/python/cpython/issues/89373): If Python is built in debug mode, Python now ensures that deallocator functions leave the current exception unchanged. Patch by Victor Stinner.
  * [gh-91632](https://github.com/python/cpython/issues/91632): Fix a minor memory leak at exit: release the memory of the `generic_alias_iterator` type. Patch by Donghee Na.
  * [gh-81548](https://github.com/python/cpython/issues/81548): Octal escapes with value larger than `0o377` now produce a [`DeprecationWarning`](https://docs.python.org/3/library/exceptions.html#DeprecationWarning "DeprecationWarning"). In a future Python version they will be a [`SyntaxWarning`](https://docs.python.org/3/library/exceptions.html#SyntaxWarning "SyntaxWarning") and eventually a [`SyntaxError`](https://docs.python.org/3/library/exceptions.html#SyntaxError "SyntaxError").
  * [bpo-43950](https://bugs.python.org/issue?@action=redirect&bpo=43950): Use a single compact table for line starts, ends and column offsets. Reduces memory consumption for location info by half
  * [gh-91102](https://github.com/python/cpython/issues/91102): Use Argument Clinic for `EncodingMap`. Patch by Oleg Iarygin.
  * [gh-91