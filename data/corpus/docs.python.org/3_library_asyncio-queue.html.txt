Title: Asyncio Queue Documentation
URL: https://docs.python.org/3/library/asyncio-queue.html
Summary: This document provides an overview of the asyncio queue functionalities in Python, detailing the types of queues available, including standard queues, priority queues, and LIFO queues. It also notes exceptions related to these queues and includes example usage.
---

[ ![Python logo](https://docs.python.org/3/_static/py.svg) ](https://www.python.org/) dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
Theme  Auto Light Dark
### [Table of Contents](https://docs.python.org/3/contents.html)
  * [Queues](https://docs.python.org/3/library/asyncio-queue.html)
    * [Queue](https://docs.python.org/3/library/asyncio-queue.html#queue)
    * [Priority Queue](https://docs.python.org/3/library/asyncio-queue.html#priority-queue)
    * [LIFO Queue](https://docs.python.org/3/library/asyncio-queue.html#lifo-queue)
    * [Exceptions](https://docs.python.org/3/library/asyncio-queue.html#exceptions)
    * [Examples](https://docs.python.org/3/library/asyncio-queue.html#examples)


#### Previous topic
[Subprocesses](https://docs.python.org/3/library/asyncio-subprocess.html "previous chapter")
#### Next topic
[Exceptions](https://docs.python.org/3/library/asyncio-exceptions.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/asyncio-queue.rst)


### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/library/asyncio-exceptions.html "Exceptions") |
  * [previous](https://docs.python.org/3/library/asyncio-subprocess.html "Subprocesses") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [The Python Standard Library](https://docs.python.org/3/library/index.html) »
  * [Networking and Interprocess Communication](https://docs.python.org/3/library/ipc.html) »
  * [`asyncio` — Asynchronous I/O](https://docs.python.org/3/library/asyncio.html) »
  * [Queues](https://docs.python.org/3/library/asyncio-queue.html)
  * | 
  * Theme  Auto Light Dark |


# Queues[¶](https://docs.python.org/3/library/asyncio-queue.html#queues "Link to this heading")
**Source code:** [Lib/asyncio/queues.py](https://github.com/python/cpython/tree/3.13/Lib/asyncio/queues.py)
asyncio queues are designed to be similar to classes of the [`queue`](https://docs.python.org/3/library/queue.html#module-queue "queue: A synchronized queue class.") module. Although asyncio queues are not thread-safe, they are designed to be used specifically in async/await code.
Note that methods of asyncio queues don’t have a _timeout_ parameter; use [`asyncio.wait_for()`](https://docs.python.org/3/library/asyncio-task.html#asyncio.wait_for "asyncio.wait_for") function to do queue operations with a timeout.
See also the [Examples](https://docs.python.org/3/library/asyncio-queue.html#examples) section below.
## Queue[¶](https://docs.python.org/3/library/asyncio-queue.html#queue "Link to this heading") 

_class_ asyncio.Queue(_maxsize =0_)[¶](https://docs.python.org/3/library/asyncio-queue.html#asyncio.Queue "Link to this definition")
    
A first in, first out (FIFO) queue.
If _maxsize_ is less than or equal to zero, the queue size is infinite. If it is an integer greater than `0`, then `await put()` blocks when the queue reaches _maxsize_ until an item is removed by [`get()`](https://docs.python.org/3/library/asyncio-queue.html#asyncio.Queue.get "asyncio.Queue.get").
Unlike the standard library threading [`queue`](https://docs.python.org/3/library/queue.html#module-queue "queue: A synchronized queue class."), the size of the queue is always known and can be returned by calling the [`qsize()`](https://docs.python.org/3/library/asyncio-queue.html#asyncio.Queue.qsize "asyncio.Queue.qsize") method.
Changed in version 3.10: Removed the _loop_ parameter.
This class is [not thread safe](https://docs.python.org/3/library/asyncio-dev.html#asyncio-multithreading). 

maxsize[¶](https://docs.python.org/3/library/asyncio-queue.html#asyncio.Queue.maxsize "Link to this definition")
    
Number of items allowed in the queue. 

empty()[¶](https://docs.python.org/3/library/asyncio-queue.html#asyncio.Queue.empty "Link to this definition")
    
Return `True` if the queue is empty, `False` otherwise.