Title: Python 3.7 Changes
URL: https://docs.python.org/3/whatsnew/3.7.html
Summary: The document highlights several updates in Python 3.7, including deprecated `asyncio` APIs, a modification to the `b2a_uu()` function in the `binascii` module that allows for an optional _backtick_ keyword argument, and new class attributes in the `HTMLCalendar` class for easier CSS customization.
---

Several `asyncio` APIs have been [deprecated](https://docs.python.org/3/whatsnew/3.7.html#whatsnew37-asyncio-deprecated).
### binascii[¶](https://docs.python.org/3/whatsnew/3.7.html#binascii "Link to this heading")
The [`b2a_uu()`](https://docs.python.org/3/library/binascii.html#binascii.b2a_uu "binascii.b2a_uu") function now accepts an optional _backtick_ keyword argument. When it’s true, zeros are represented by `'`'` instead of spaces. (Contributed by Xiang Zhang in [bpo-30103](https://bugs.python.org/issue?@action=redirect&bpo=30103).)
### calendar[¶](https://docs.python.org/3/whatsnew/3.7.html#calendar "Link to this heading")
The [`HTMLCalendar`](https://docs.python.org/3/library/calendar.html#calendar.HTMLCalendar "calendar.HTMLCalendar") class has new class attributes which ease the customization of CSS classes in the produced HTML calendar. (Contributed by Oz Tiram in [bpo-30095](https://bugs.python.org/issue?@action=redirect&bpo=30095).)
### collections[¶](https://docs.python.org/3/whatsnew/3.7.html#collections "Link to this heading")
`collections.namedtuple()` now supports default values. (Contributed by Raymond Hettinger in [bpo-32320](https://bugs.python.org/issue?@action=redirect&bpo=32320).)
### compileall[¶](https://docs.python.org/3/whatsnew/3.7.html#compileall "Link to this heading")
[`compileall.compile_dir()`](https://docs.python.org/3/library/compileall.html#compileall.compile_dir "compileall.compile_dir") learned the new _invalidation_mode_ parameter, which can be used to enable [hash-based .pyc invalidation](https://docs.python.org/3/whatsnew/3.7.html#whatsnew37-pep552). The invalidation mode can also be specified on the command line using the new `--invalidation-mode` argument. (Contributed by Benjamin Peterson in [bpo-31650](https://bugs.python.org/issue?@action=redirect&bpo=31650).)
### concurrent.futures[¶](https://docs.python.org/3/whatsnew/3.7.html#concurrent-futures "Link to this heading")
[`ProcessPoolExecutor`](https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.ProcessPoolExecutor "concurrent.futures.ProcessPoolExecutor") and [`ThreadPoolExecutor`](https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.ThreadPoolExecutor "concurrent.futures.ThreadPoolExecutor") now support the new _initializer_ and _initargs_ constructor arguments. (Contributed by Antoine Pitrou in [bpo-21423](https://bugs.python.org/issue?@action=redirect&bpo=21423).)
The [`ProcessPoolExecutor`](https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.ProcessPoolExecutor "concurrent.futures.ProcessPoolExecutor") can now take the multiprocessing context via the new _mp_context_ argument. (Contributed by Thomas Moreau in [bpo-31540](https://bugs.python.org/issue?@action=redirect&bpo=31540).)
### contextlib[¶](https://docs.python.org/3/whatsnew/3.7.html#contextlib "Link to this heading")
The new [`nullcontext()`](https://docs.python.org/3/library/contextlib.html#contextlib.nullcontext "contextlib.nullcontext") is a simpler and faster no-op context manager than [`ExitStack`](https://docs.python.org/3/library/contextlib.html#contextlib.ExitStack "contextlib.ExitStack"). (Contributed by Jesse-Bakker in [bpo-10049](https://bugs.python.org/issue?@action=redirect&bpo=10049).)
The new [`asynccontextmanager()`](https://docs.python.org/3/library/contextlib.html#contextlib.asynccontextmanager "contextlib.asynccontextmanager"), [`AbstractAsyncContextManager`](https://docs.python.org/3/library/contextlib.html#contextlib.AbstractAsyncContextManager "contextlib.AbstractAsyncContextManager"), and [`AsyncExitStack`](https://docs.python.org/3/library/contextlib.html#contextlib.AsyncExitStack "contextlib.AsyncExitStack") have been added to complement their synchronous counterparts. (Contributed by Jelle Zijlstra in [bpo-29679](https://bugs.python.org/issue?@action=redirect&bpo=29679) and [bpo-30241](https://bugs.python.org/issue?@action=redirect&bpo=30241), and by Alexander Mohr and Ilya Kulakov in [bpo-29302](https://bugs.python.org/issue?@action=redirect&bpo=29302).)
### cProfile[¶](https://docs.python.org/3/whatsnew/3.7.html#cprofile "Link to this heading")
The [`cProfile`](https://docs.python.org/3/library/profile.html#module-cProfile "cProfile") command line now accepts `-m module_name` as an alternative to script path. (Contributed by Sanyam Khurana in [bpo-21862](https://bugs.python.org/issue?@action=redirect&bpo=21862).)
### crypt[¶](https://docs.python.org/3/whatsnew/3.7.html#crypt "Link to this heading")
The `crypt` module now supports the Blowfish hashing method. (Contributed by Serhiy Storchaka in [bpo-31664](https://bugs.python.org/issue?@action=redirect&bpo=31664).)
The `mksalt()` function now allows specifying the number of rounds for hashing. (Contributed by Serhiy Storchaka in [bpo-31702](https://bugs.python.org/issue?@action=redirect&bpo=31702).)
### datetime[¶](https://docs.python.org/3/whatsnew/3.7.html#datetime "Link to this heading")
The n