Title: API and Feature Removals in Python 3.7
URL: https://docs.python.org/3/whatsnew/3.7.html
Summary: Python 3.7 removes several deprecated features and APIs including the `os.stat_float_times()` function, certain unknown escape sequences in `re.sub()`, the _exclude_ argument in `tarfile.TarFile.add()`, and the `ntpath.splitunc()` function. Users are advised to adopt alternative approaches as indicated.
---

## API and Feature Removals[Â¶](https://docs.python.org/3/whatsnew/3.7.html#api-and-feature-removals "Link to this heading")
The following features and APIs have been removed from Python 3.7:
  * The `os.stat_float_times()` function has been removed. It was introduced in Python 2.3 for backward compatibility with Python 2.2, and was deprecated since Python 3.1.
  * Unknown escapes consisting of `'\'` and an ASCII letter in replacement templates for [`re.sub()`](https://docs.python.org/3/library/re.html#re.sub "re.sub") were deprecated in Python 3.5, and will now cause an error.
  * Removed support of the _exclude_ argument in [`tarfile.TarFile.add()`](https://docs.python.org/3/library/tarfile.html#tarfile.TarFile.add "tarfile.TarFile.add"). It was deprecated in Python 2.7 and 3.2. Use the _filter_ argument instead.
  * The `ntpath.splitunc()` function was deprecated in Python 3.1, and has now been removed. Use [`splitdrive()`](https://docs.python.org/3/library/os.path.html#os.path.splitdrive "os.path.splitdrive") instead.
  * [`collections.namedtuple()`](https://docs.python.org/3/library/collections.html#collections.namedtuple "collections.namedtuple") no longer supports the _verbose_ parameter or `_source` attribute which showed the generated source code for the named tuple class. This was part of an optimization designed to speed-up class creation. (Contributed by Jelle Zijlstra with further improvements by INADA Naoki, Serhiy Storchaka, and Raymond Hettinger in [bpo-28638](https://bugs.python.org/issue?@action=redirect&bpo=28638).)
  * Functions [`bool()`](https://docs.python.org/3/library/functions.html#bool "bool"), [`float()`](https://docs.python.org/3/library/functions.html#float "float"), [`list()`](https://docs.python.org/3/library/stdtypes.html#list "list") and [`tuple()`](https://docs.python.org/3/library/stdtypes.html#tuple "tuple") no longer take keyword arguments. The first argument of [`int()`](https://docs.python.org/3/library/functions.html#int "int") can now be passed only as positional argument.
  * Removed previously deprecated in Python 2.4 classes `Plist`, `Dict` and `_InternalDict` in the [`plistlib`](https://docs.python.org/3/library/plistlib.html#module-plistlib "plistlib: Generate and parse Apple plist files.") module. Dict values in the result of functions `readPlist()` and `readPlistFromBytes()` are now normal dicts. You no longer can use attribute access to access items of these dictionaries.
  * The `asyncio.windows_utils.socketpair()` function has been removed. Use the [`socket.socketpair()`](https://docs.python.org/3/library/socket.html#socket.socketpair "socket.socketpair") function instead, it is available on all platforms since Python 3.5. `asyncio.windows_utils.socketpair` was just an alias to `socket.socketpair` on Python 3.5 and newer.
  * [`asyncio`](https://docs.python.org/3/library/asyncio.html#module-asyncio "asyncio: Asynchronous I/O.") no longer exports the [`selectors`](https://docs.python.org/3/library/selectors.html#module-selectors "selectors: High-level I/O multiplexing.") and `_overlapped` modules as `asyncio.selectors` and `asyncio._overlapped`. Replace `from asyncio import selectors` with `import selectors`.
  * Direct instantiation of [`ssl.SSLSocket`](https://docs.python.org/3/library/ssl.html#ssl.SSLSocket "ssl.SSLSocket") and [`ssl.SSLObject`](https://docs.python.org/3/library/ssl.html#ssl.SSLObject "ssl.SSLObject") objects is now prohibited. The constructors were never documented, tested, or designed as public constructors. Users were supposed to use `ssl.wrap_socket()` or [`ssl.SSLContext`](https://docs.python.org/3/library/ssl.html#ssl.SSLContext "ssl.SSLContext"). (Contributed by Christian Heimes in [bpo-32951](https://bugs.python.org/issue?@action=redirect&bpo=32951).)
  * The unused `distutils` `install_misc` command has been removed. (Contributed by Eric N. Vander Weele in [bpo-29218](https://bugs.python.org/issue?@action=redirect&bpo=29218).)