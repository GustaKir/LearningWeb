Title: ctypes Unsigned Integer Data Types
URL: https://docs.python.org/3/library/ctypes.html
Summary: This section describes various ctypes data types representing C unsigned integer types, including c_uint32, c_uint64, c_ulong, and c_ulonglong. These types correspond to their C counterparts and support optional integer initialization without overflow checking.
---

_class_ ctypes.c_uint32[¶](https://docs.python.org/3/library/ctypes.html#ctypes.c_uint32 "Link to this definition")
    
Represents the C 32-bit unsignedint datatype. Usually an alias for [`c_uint`](https://docs.python.org/3/library/ctypes.html#ctypes.c_uint "ctypes.c_uint"). 

_class_ ctypes.c_uint64[¶](https://docs.python.org/3/library/ctypes.html#ctypes.c_uint64 "Link to this definition")
    
Represents the C 64-bit unsignedint datatype. Usually an alias for [`c_ulonglong`](https://docs.python.org/3/library/ctypes.html#ctypes.c_ulonglong "ctypes.c_ulonglong"). 

_class_ ctypes.c_ulong[¶](https://docs.python.org/3/library/ctypes.html#ctypes.c_ulong "Link to this definition")
    
Represents the C unsignedlong datatype. The constructor accepts an optional integer initializer; no overflow checking is done. 

_class_ ctypes.c_ulonglong[¶](https://docs.python.org/3/library/ctypes.html#ctypes.c_ulonglong "Link to this definition")
    
Represents the C unsignedlonglong datatype. The constructor accepts an optional integer initializer; no overflow checking is done. 

_class_ ctypes.c_ushort[¶](https://docs.python.org/3/library/ctypes.html#ctypes.c_ushort "Link to this definition")
    
Represents the C unsignedshort datatype. The constructor accepts an optional integer initializer; no overflow checking is done. 

_class_ ctypes.c_void_p[¶](https://docs.python.org/3/library/ctypes.html#ctypes.c_void_p "Link to this definition")
    
Represents the C void* type. The value is represented as integer. The constructor accepts an optional integer initializer. 

_class_ ctypes.c_wchar[¶](https://docs.python.org/3/library/ctypes.html#ctypes.c_wchar "Link to this definition")
    
Represents the C `wchar_t` datatype, and interprets the value as a single character unicode string. The constructor accepts an optional string initializer, the length of the string must be exactly one character. 

_class_ ctypes.c_wchar_p[¶](https://docs.python.org/3/library/ctypes.html#ctypes.c_wchar_p "Link to this definition")
    
Represents the C wchar_t* datatype, which must be a pointer to a zero-terminated wide character string. The constructor accepts an integer address, or a string. 

_class_ ctypes.c_bool[¶](https://docs.python.org/3/library/ctypes.html#ctypes.c_bool "Link to this definition")
    
Represent the C bool datatype (more accurately, _Bool from C99). Its value can be `True` or `False`, and the constructor accepts any object that has a truth value. 

_class_ ctypes.HRESULT[¶](https://docs.python.org/3/library/ctypes.html#ctypes.HRESULT "Link to this definition")
    
Represents a `HRESULT` value, which contains success or error information for a function or method call.
[Availability](https://docs.python.org/3/library/intro.html#availability): Windows 

_class_ ctypes.py_object[¶](https://docs.python.org/3/library/ctypes.html#ctypes.py_object "Link to this definition")
    
Represents the C [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")* datatype. Calling this without an argument creates a `NULL` [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")* pointer.
The `ctypes.wintypes` module provides quite some other Windows specific data types, for example `HWND`, `WPARAM`, or `DWORD`. Some useful structures like `MSG` or `RECT` are also defined.
### Structured data types[¶](https://docs.python.org/3/library/ctypes.html#structured-data-types "Link to this heading") 

_class_ ctypes.Union(_* args_, _** kw_)[¶](https://docs.python.org/3/library/ctypes.html#ctypes.Union "Link to this definition")
    
Abstract base class for unions in native byte order. 

_class_ ctypes.BigEndianUnion(_* args_, _** kw_)[¶](https://docs.python.org/3/library/ctypes.html#ctypes.BigEndianUnion "Link to this definition")
    
Abstract base class for unions in _big endian_ byte order.
Added in version 3.11. 

_class_ ctypes.LittleEndianUnion(_* args_, _** kw_)[¶](https://docs.python.org/3/library/ctypes.html#ctypes.LittleEndianUnion "Link to this definition")
    
Abstract base class for unions in _little endian_ byte order.
Added in version 3.11. 

_class_ ctypes.BigEndianStructure(_* args_, _** kw_)[¶](https://docs.python.org/3/library/ctypes.html#ctypes.BigEndianStructure "Link to this definition")
    
Abstract base class for structures in _big endian_ byte order. 

_class_ ctypes.LittleEndianStructure(_* args_, _** kw_)[¶](https://docs.python.org/3/library/ctypes.html#ctypes.LittleEndianStructure "Link to this definition")
    
Abstract base class for structures in _little endian_ byte order.
Structures and unions with non-native byte order cannot contain pointer type fields, or any other data types containing pointer type fields.