Title: Deprecated Features in Python 3.11
URL: https://docs.python.org/3/whatsnew/3.11.html
Summary: This section outlines the APIs that have been deprecated in Python 3.11, including the deprecation of chaining `classmethod` descriptors due to design flaws. Deprecated C APIs are noted separately.
---

## Deprecated[¶](https://docs.python.org/3/whatsnew/3.11.html#deprecated "Link to this heading")
This section lists Python APIs that have been deprecated in Python 3.11.
Deprecated C APIs are [listed separately](https://docs.python.org/3/whatsnew/3.11.html#whatsnew311-c-api-deprecated).
### Language/Builtins[¶](https://docs.python.org/3/whatsnew/3.11.html#language-builtins "Link to this heading")
  * Chaining [`classmethod`](https://docs.python.org/3/library/functions.html#classmethod "classmethod") descriptors (introduced in [bpo-19072](https://bugs.python.org/issue?@action=redirect&bpo=19072)) is now deprecated. It can no longer be used to wrap other descriptors such as [`property`](https://docs.python.org/3/library/functions.html#property "property"). The core design of this feature was flawed and caused a number of downstream problems. To “pass-through” a [`classmethod`](https://docs.python.org/3/library/functions.html#classmethod "classmethod"), consider using the `__wrapped__` attribute that was added in Python 3.10. (Contributed by Raymond Hettinger in [gh-89519](https://github.com/python/cpython/issues/89519).)
  * Octal escapes in string and bytes literals with values larger than `0o377` (255 in decimal) now produce a [`DeprecationWarning`](https://docs.python.org/3/library/exceptions.html#DeprecationWarning "DeprecationWarning"). In a future Python version, they will raise a [`SyntaxWarning`](https://docs.python.org/3/library/exceptions.html#SyntaxWarning "SyntaxWarning") and eventually a [`SyntaxError`](https://docs.python.org/3/library/exceptions.html#SyntaxError "SyntaxError"). (Contributed by Serhiy Storchaka in [gh-81548](https://github.com/python/cpython/issues/81548).)
  * The delegation of [`int()`](https://docs.python.org/3/library/functions.html#int "int") to [`__trunc__()`](https://docs.python.org/3/reference/datamodel.html#object.__trunc__ "object.__trunc__") is now deprecated. Calling `int(a)` when `type(a)` implements `__trunc__()` but not [`__int__()`](https://docs.python.org/3/reference/datamodel.html#object.__int__ "object.__int__") or [`__index__()`](https://docs.python.org/3/reference/datamodel.html#object.__index__ "object.__index__") now raises a [`DeprecationWarning`](https://docs.python.org/3/library/exceptions.html#DeprecationWarning "DeprecationWarning"). (Contributed by Zackery Spytz in [bpo-44977](https://bugs.python.org/issue?@action=redirect&bpo=44977).)


### Modules[¶](https://docs.python.org/3/whatsnew/3.11.html#modules "Link to this heading")
  * [**PEP 594**](https://peps.python.org/pep-0594/) led to the deprecations of the following modules slated for removal in Python 3.13:
`aifc` | `chunk` | `msilib` | `pipes` | `telnetlib`  
---|---|---|---|---  
`audioop` | `crypt` | `nis` | `sndhdr` | `uu`  
`cgi` | `imghdr` | `nntplib` | `spwd` | `xdrlib`  
`cgitb` | `mailcap` | `ossaudiodev` | `sunau` |   
(Contributed by Brett Cannon in [bpo-47061](https://bugs.python.org/issue?@action=redirect&bpo=47061) and Victor Stinner in [gh-68966](https://github.com/python/cpython/issues/68966).)
  * The `asynchat`, `asyncore` and `smtpd` modules have been deprecated since at least Python 3.6. Their documentation and deprecation warnings have now been updated to note they will be removed in Python 3.12. (Contributed by Hugo van Kemenade in [bpo-47022](https://bugs.python.org/issue?@action=redirect&bpo=47022).)
  * The `lib2to3` package and `2to3` tool are now deprecated and may not be able to parse Python 3.10 or newer. See [**PEP 617**](https://peps.python.org/pep-0617/), introducing the new PEG parser, for details. (Contributed by Victor Stinner in [bpo-40360](https://bugs.python.org/issue?@action=redirect&bpo=40360).)
  * Undocumented modules `sre_compile`, `sre_constants` and `sre_parse` are now deprecated. (Contributed by Serhiy Storchaka in [bpo-47152](https://bugs.python.org/issue?@action=redirect&bpo=47152).)