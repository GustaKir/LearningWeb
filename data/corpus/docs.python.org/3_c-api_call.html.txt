Title: Python C API: Call Protocol
URL: https://docs.python.org/3/c-api/call.html
Summary: This document outlines the call protocol for the Python C API, detailing the _tp_call_ and Vectorcall protocols, recursion control, vectorcall support API, and object calling API. It serves as a comprehensive guide for developers implementing Python's calling mechanisms in C.
---

[ ![Python logo](https://docs.python.org/3/_static/py.svg) ](https://www.python.org/) dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
Theme  Auto Light Dark
### [Table of Contents](https://docs.python.org/3/contents.html)
  * [Call Protocol](https://docs.python.org/3/c-api/call.html)
    * [The _tp_call_ Protocol](https://docs.python.org/3/c-api/call.html#the-tp-call-protocol)
    * [The Vectorcall Protocol](https://docs.python.org/3/c-api/call.html#the-vectorcall-protocol)
      * [Recursion Control](https://docs.python.org/3/c-api/call.html#recursion-control)
      * [Vectorcall Support API](https://docs.python.org/3/c-api/call.html#vectorcall-support-api)
    * [Object Calling API](https://docs.python.org/3/c-api/call.html#object-calling-api)
    * [Call Support API](https://docs.python.org/3/c-api/call.html#call-support-api)


#### Previous topic
[Object Protocol](https://docs.python.org/3/c-api/object.html "previous chapter")
#### Next topic
[Number Protocol](https://docs.python.org/3/c-api/number.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/c-api/call.rst)


### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/c-api/number.html "Number Protocol") |
  * [previous](https://docs.python.org/3/c-api/object.html "Object Protocol") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [Python/C API Reference Manual](https://docs.python.org/3/c-api/index.html) »
  * [Abstract Objects Layer](https://docs.python.org/3/c-api/abstract.html) »
  * [Call Protocol](https://docs.python.org/3/c-api/call.html)
  * | 
  * Theme  Auto Light Dark |


# Call Protocol[¶](https://docs.python.org/3/c-api/call.html#call-protocol "Link to this heading")
CPython supports two different calling protocols: _tp_call_ and vectorcall.
## The _tp_call_ Protocol[¶](https://docs.python.org/3/c-api/call.html#the-tp-call-protocol "Link to this heading")
Instances of classes that set [`tp_call`](https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_call "PyTypeObject.tp_call") are callable. The signature of the slot is:
```
PyObject*tp_call(PyObject*callable,PyObject*args,PyObject*kwargs);