Title: Recent Bug Fixes and Improvements in Python
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section details various bug fixes and enhancements in Python, including improvements to unicode object representation, bytes representation, integer overflow handling in latin-1 encoding, and updates to the MIMEText class to support Charset instances. Additionally, it notes updates to function inspection methods and changes to the os and shutil modules.
---

rgument.
  * [bpo-22520](https://bugs.python.org/issue?@action=redirect&bpo=22520): Fix overflow checking when generating the repr of a unicode object.
  * [bpo-22519](https://bugs.python.org/issue?@action=redirect&bpo=22519): Fix overflow checking in PyBytes_Repr.
  * [bpo-22518](https://bugs.python.org/issue?@action=redirect&bpo=22518): Fix integer overflow issues in latin-1 encoding.
  * [bpo-16324](https://bugs.python.org/issue?@action=redirect&bpo=16324): _charset parameter of MIMEText now also accepts email.charset.Charset instances. Initial patch by Claude Paroz.
  * [bpo-1764286](https://bugs.python.org/issue?@action=redirect&bpo=1764286): Fix inspect.getsource() to support decorated functions. Patch by Claudiu Popa.
  * [bpo-18554](https://bugs.python.org/issue?@action=redirect&bpo=18554): os.__all__ includes posix functions.
  * [bpo-21391](https://bugs.python.org/issue?@action=redirect&bpo=21391): Use os.path.abspath in the shutil module.
  * [bpo-11471](https://bugs.python.org/issue?@action=redirect&bpo=11471): avoid generating a JUMP_FORWARD instruction at the end of an if-block if there is no else-clause. Original patch by Eugene Toder.
  * [bpo-22215](https://bugs.python.org/issue?@action=redirect&bpo=22215): Now ValueError is raised instead of TypeError when str or bytes argument contains not permitted null character or byte.
  * [bpo-22258](https://bugs.python.org/issue?@action=redirect&bpo=22258): Fix the internal function set_inheritable() on Illumos. This platform exposes the function `ioctl(FIOCLEX)`, but calling it fails with errno is ENOTTY: “Inappropriate ioctl for device”. set_inheritable() now falls back to the slower `fcntl()` (`F_GETFD` and then `F_SETFD`).
  * [bpo-21389](https://bugs.python.org/issue?@action=redirect&bpo=21389): Displaying the __qualname__ of the underlying function in the repr of a bound method.
  * [bpo-22206](https://bugs.python.org/issue?@action=redirect&bpo=22206): Using pthread, PyThread_create_key() now sets errno to ENOMEM and returns -1 (error) on integer overflow.
  * [bpo-20184](https://bugs.python.org/issue?@action=redirect&bpo=20184): Argument Clinic based signature introspection added for 30 of the builtin functions.
  * [bpo-22116](https://bugs.python.org/issue?@action=redirect&bpo=22116): C functions and methods (of the ‘builtin_function_or_method’ type) can now be weakref’ed. Patch by Wei Wu.
  * [bpo-22077](https://bugs.python.org/issue?@action=redirect&bpo=22077): Improve index error messages for bytearrays, bytes, lists, and tuples by adding ‘or slices’. Added ‘, not <typename>’ for bytearrays. Original patch by Claudiu Popa.
  * [bpo-20179](https://bugs.python.org/issue?@action=redirect&bpo=20179): Apply Argument Clinic to bytes and bytearray. Patch by Tal Einat.
  * [bpo-22082](https://bugs.python.org/issue?@action=redirect&bpo=22082): Clear interned strings in slotdefs.
  * Upgrade Unicode database to Unicode 7.0.0.
  * [bpo-21897](https://bugs.python.org/issue?@action=redirect&bpo=21897): Fix a crash with the f_locals attribute with closure variables when frame.clear() has been called.
  * [bpo-21205](https://bugs.python.org/issue?@action=redirect&bpo=21205): Add a new `__qualname__` attribute to generator, the qualified name, and use it in the representation of a generator (`repr(gen)`). The default name of the generator (`__name__` attribute) is now get from the function instead of the code. Use `gen.gi_code.co_name` to get the name of the code.
  * [bpo-21669](https://bugs.python.org/issue?@action=redirect&bpo=21669): With the aid of heuristics in SyntaxError.__init__, the parser now attempts to generate more meaningful (or at least more search engine friendly) error messages when “exec” and “print” are used as statements.
  * [bpo-21642](https://bugs.python.org/issue?@action=redirect&bpo=21642): In the conditional if-else expression, allow an integer written with no space between itself and the `else` keyword (e.g. `True if 42else False`) to be valid syntax.
  * [bpo-21523](https://bugs.python.org/issue?@action=redirect&bpo=21523): Fix over-pessimistic computation of the stack effect of some opcodes in the compiler.