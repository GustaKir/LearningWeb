Title: Pending Removal in Python 3.14
URL: https://docs.python.org/3/whatsnew/3.12.html
Summary: This section outlines features and components set for removal in Python 3.14, including deprecated parameters in `argparse.BooleanOptionalAction` and specific functionalities in the `ast` module, which will emit a `DeprecationWarning` during usage.
---

### Pending Removal in Python 3.14[Â¶](https://docs.python.org/3/whatsnew/3.12.html#pending-removal-in-python-3-14 "Link to this heading")
  * [`argparse`](https://docs.python.org/3/library/argparse.html#module-argparse "argparse: Command-line option and argument parsing library."): The _type_ , _choices_ , and _metavar_ parameters of `argparse.BooleanOptionalAction` are deprecated and will be removed in 3.14. (Contributed by Nikita Sobolev in [gh-92248](https://github.com/python/cpython/issues/92248).)
  * [`ast`](https://docs.python.org/3/library/ast.html#module-ast "ast: Abstract Syntax Tree classes and manipulation."): The following features have been deprecated in documentation since Python 3.8, now cause a [`DeprecationWarning`](https://docs.python.org/3/library/exceptions.html#DeprecationWarning "DeprecationWarning") to be emitted at runtime when they are accessed or used, and will be removed in Python 3.14:
    * `ast.Num`
    * `ast.Str`
    * `ast.Bytes`
    * `ast.NameConstant`
    * `ast.Ellipsis`
Use [`ast.Constant`](https://docs.python.org/3/library/ast.html#ast.Constant "ast.Constant") instead. (Contributed by Serhiy Storchaka in [gh-90953](https://github.com/python/cpython/issues/90953).)
  * [`asyncio`](https://docs.python.org/3/library/asyncio.html#module-asyncio "asyncio: Asynchronous I/O."):
    * The child watcher classes [`MultiLoopChildWatcher`](https://docs.python.org/3/library/asyncio-policy.html#asyncio.MultiLoopChildWatcher "asyncio.MultiLoopChildWatcher"), [`FastChildWatcher`](https://docs.python.org/3/library/asyncio-policy.html#asyncio.FastChildWatcher "asyncio.FastChildWatcher"), [`AbstractChildWatcher`](https://docs.python.org/3/library/asyncio-policy.html#asyncio.AbstractChildWatcher "asyncio.AbstractChildWatcher") and [`SafeChildWatcher`](https://docs.python.org/3/library/asyncio-policy.html#asyncio.SafeChildWatcher "asyncio.SafeChildWatcher") are deprecated and will be removed in Python 3.14. (Contributed by Kumar Aditya in [gh-94597](https://github.com/python/cpython/issues/94597).)
    * [`asyncio.set_child_watcher()`](https://docs.python.org/3/library/asyncio-policy.html#asyncio.set_child_watcher "asyncio.set_child_watcher"), [`asyncio.get_child_watcher()`](https://docs.python.org/3/library/asyncio-policy.html#asyncio.get_child_watcher "asyncio.get_child_watcher"), [`asyncio.AbstractEventLoopPolicy.set_child_watcher()`](https://docs.python.org/3/library/asyncio-policy.html#asyncio.AbstractEventLoopPolicy.set_child_watcher "asyncio.AbstractEventLoopPolicy.set_child_watcher") and [`asyncio.AbstractEventLoopPolicy.get_child_watcher()`](https://docs.python.org/3/library/asyncio-policy.html#asyncio.AbstractEventLoopPolicy.get_child_watcher "asyncio.AbstractEventLoopPolicy.get_child_watcher") are deprecated and will be removed in Python 3.14. (Contributed by Kumar Aditya in [gh-94597](https://github.com/python/cpython/issues/94597).)
    * The [`get_event_loop()`](https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.get_event_loop "asyncio.get_event_loop") method of the default event loop policy now emits a [`DeprecationWarning`](https://docs.python.org/3/library/exceptions.html#DeprecationWarning "DeprecationWarning") if there is no current event loop set and it decides to create one. (Contributed by Serhiy Storchaka and Guido van Rossum in [gh-100160](https://github.com/python/cpython/issues/100160).)
  * [`collections.abc`](https://docs.python.org/3/library/collections.abc.html#module-collections.abc "collections.abc: Abstract base classes for containers"): Deprecated [`ByteString`](https://docs.python.org/3/library/collections.abc.html#collections.abc.ByteString "collections.abc.ByteString"). Prefer `Sequence` or [`Buffer`](https://docs.python.org/3/library/collections.abc.html#collections.abc.Buffer "collections.abc.Buffer"). For use in typing, prefer a union, like `bytes | bytearray`, or [`collections.abc.Buffer`](https://docs.python.org/3/library/collections.abc.html#collections.abc.Buffer "collections.abc.Buffer"). (Contributed by Shantanu Jain in [gh-91896](https://github.com/python/cpython/issues/91896).)
  * [`email`](https://docs.python.org/3/library/email.html#module-email "email: Package supporting the parsing, manipulating, and generating email messages."): Deprecated the _isdst_ parameter in [`email.utils.localtime()`](https://docs.python.org/3/library/email.utils.html#email.utils.localtime "email.utils.localtime"). (Contributed by Alan Williams in [gh-72346](https://github.com/python/cpython/issues/72346).)
  * [`importlib.abc`](https://docs.python.org/3/library/importlib.html#module-importlib.abc "importlib.abc: Abstract base classes related to import") deprecated classes:
    * `importlib.abc.ResourceReader`
    * `importlib.abc.Traversable`
    * `importlib.abc.TraversableResources`
Use [`importlib.resources.abc`](https://docs.python.org/3/library/importlib.resources.abc.html#module-importlib.resources.abc "importlib.resources.abc: Abstract ba