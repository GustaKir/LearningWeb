Title: Python Data Model Reference
URL: https://docs.python.org/3/reference/datamodel.html
Summary: This section covers the structure and components of the Python data model, detailing concepts such as class instances, modules, and custom classes. It includes information on import-related attributes, writable attributes for module objects, module dictionaries, and special attributes and methods for custom classes.
---

lasses)
        * [3.2.8.9. Class Instances](https://docs.python.org/3/reference/datamodel.html#class-instances)
      * [3.2.9. Modules](https://docs.python.org/3/reference/datamodel.html#modules)
        * [3.2.9.1. Import-related attributes on module objects](https://docs.python.org/3/reference/datamodel.html#import-related-attributes-on-module-objects)
        * [3.2.9.2. Other writable attributes on module objects](https://docs.python.org/3/reference/datamodel.html#other-writable-attributes-on-module-objects)
        * [3.2.9.3. Module dictionaries](https://docs.python.org/3/reference/datamodel.html#module-dictionaries)
      * [3.2.10. Custom classes](https://docs.python.org/3/reference/datamodel.html#custom-classes)
        * [3.2.10.1. Special attributes](https://docs.python.org/3/reference/datamodel.html#special-attributes)
        * [3.2.10.2. Special methods](https://docs.python.org/3/reference/datamodel.html#special-methods)
      * [3.2.11. Class instances](https://docs.python.org/3/reference/datamodel.html#id4)
        * [3.2.11.1. Special attributes](https://docs.python.org/3/reference/datamodel.html#id5)
      * [3.2.12. I/O objects (also known as file objects)](https://docs.python.org/3/reference/datamodel.html#i-o-objects-also-known-as-file-objects)
      * [3.2.13. Internal types](https://docs.python.org/3/reference/datamodel.html#internal-types)
        * [3.2.13.1. Code objects](https://docs.python.org/3/reference/datamodel.html#code-objects)
          * [3.2.13.1.1. Special read-only attributes](https://docs.python.org/3/reference/datamodel.html#index-60)
          * [3.2.13.1.2. Methods on code objects](https://docs.python.org/3/reference/datamodel.html#methods-on-code-objects)
        * [3.2.13.2. Frame objects](https://docs.python.org/3/reference/datamodel.html#frame-objects)
          * [3.2.13.2.1. Special read-only attributes](https://docs.python.org/3/reference/datamodel.html#index-66)
          * [3.2.13.2.2. Special writable attributes](https://docs.python.org/3/reference/datamodel.html#index-67)
          * [3.2.13.2.3. Frame object methods](https://docs.python.org/3/reference/datamodel.html#frame-object-methods)
        * [3.2.13.3. Traceback objects](https://docs.python.org/3/reference/datamodel.html#traceback-objects)
        * [3.2.13.4. Slice objects](https://docs.python.org/3/reference/datamodel.html#slice-objects)
        * [3.2.13.5. Static method objects](https://docs.python.org/3/reference/datamodel.html#static-method-objects)
        * [3.2.13.6. Class method objects](https://docs.python.org/3/reference/datamodel.html#class-method-objects)
    * [3.3. Special method names](https://docs.python.org/3/reference/datamodel.html#special-method-names)
      * [3.3.1. Basic customization](https://docs.python.org/3/reference/datamodel.html#basic-customization)
      * [3.3.2. Customizing attribute access](https://docs.python.org/3/reference/datamodel.html#customizing-attribute-access)
        * [3.3.2.1. Customizing module attribute access](https://docs.python.org/3/reference/datamodel.html#customizing-module-attribute-access)
        * [3.3.2.2. Implementing Descriptors](https://docs.python.org/3/reference/datamodel.html#implementing-descriptors)
        * [3.3.2.3. Invoking Descriptors](https://docs.python.org/3/reference/datamodel.html#invoking-descriptors)
        * [3.3.2.4. __slots__](https://docs.python.org/3/reference/datamodel.html#slots)
      * [3.3.3. Customizing class creation](https://docs.python.org/3/reference/datamodel.html#customizing-class-creation)
        * [3.3.3.1. Metaclasses](https://docs.python.org/3/reference/datamodel.html#metaclasses)
        * [3.3.3.2. Resolving MRO entries](https://docs.python.org/3/reference/datamodel.html#resolving-mro-entries)
        * [3.3.3.3. Determining the appropriate metaclass](https://docs.python.org/3/reference/datamodel.html#determining-the-appropriate-metaclass)
        * [3.3.3.4. Preparing the class namespace](https://docs.python.org/3/reference/datamodel.html#preparing-the-class-namespace)
        * [3.3.3.5. Executing the class body](https://docs.python.org/3/reference/datamodel.html#executing-the-class-body)
        * [3.3.3.6. Creating the class object](https://docs.python.org/3/reference/datamodel.html#creating-the-class-object)
        * [3.3.3.7. Uses for metaclasses](https://docs.python.org/3/reference/datamodel.html#uses-for-metaclasses)
      * [3.3.4. Customizing instance and subclass checks](https://docs.python.org/3/reference/datamodel.html#customizing-instance-and-subclass-checks)
      * [3.3.5. Emulating generic types](https://docs.python.org/3/reference/datamodel.html#emulating-generic-types)
        * [3.3.5.1. The purpose of ___class_getitem___](https://docs.python.org/3/reference/datamodel.html#the-purpose-of-class-getitem)
        * [3.3.5.2. ___class_getitem___ versus ___getitem___](https://docs.python.org/3/reference/datamodel.html#class-getitem-versus-getitem)
      * [3.3.6.