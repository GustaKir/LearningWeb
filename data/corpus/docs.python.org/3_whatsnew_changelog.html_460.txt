Title: Python Changelog: Bug Fixes and Improvements
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This document discusses various bug fixes and improvements in Python including changes to dictionary comprehensions, updates to the PySys_Audit call in mmap, removal of unnecessary references in classobject.c, enhancements to the peephole optimizer, and adjustments to handle the absolute path of script filenames better.
---

in `{k: v for ...}`, `k` will be evaluated before `v`.
  * [bpo-37316](https://bugs.python.org/issue?@action=redirect&bpo=37316): Fix the [`PySys_Audit()`](https://docs.python.org/3/c-api/sys.html#c.PySys_Audit "PySys_Audit") call in [`mmap.mmap`](https://docs.python.org/3/library/mmap.html#mmap.mmap "mmap.mmap").
  * [bpo-37300](https://bugs.python.org/issue?@action=redirect&bpo=37300): Remove an unnecessary Py_XINCREF in classobject.c.
  * [bpo-37269](https://bugs.python.org/issue?@action=redirect&bpo=37269): Fix a bug in the peephole optimizer that was not treating correctly constant conditions with binary operators. Patch by Pablo Galindo.
  * [bpo-20443](https://bugs.python.org/issue?@action=redirect&bpo=20443): Python now gets the absolute path of the script filename specified on the command line (ex: “python3 script.py”): the __file__ attribute of the __main__ module and sys.path[0] become an absolute path, rather than a relative path.
  * [bpo-37257](https://bugs.python.org/issue?@action=redirect&bpo=37257): Python’s small object allocator (`obmalloc.c`) now allows (no more than) one empty arena to remain available for immediate reuse, without returning it to the OS. This prevents thrashing in simple loops where an arena could be created and destroyed anew on each iteration.
  * [bpo-37231](https://bugs.python.org/issue?@action=redirect&bpo=37231): The dispatching of type slots to special methods (for example calling `__mul__` when doing `x * y`) has been made faster.
  * [bpo-36974](https://bugs.python.org/issue?@action=redirect&bpo=36974): Implemented separate vectorcall functions for every calling convention of builtin functions and methods. This improves performance for calls.
  * [bpo-37213](https://bugs.python.org/issue?@action=redirect&bpo=37213): Handle correctly negative line offsets in the peephole optimizer. Patch by Pablo Galindo.
  * [bpo-37219](https://bugs.python.org/issue?@action=redirect&bpo=37219): Remove erroneous optimization for empty set differences.
  * [bpo-15913](https://bugs.python.org/issue?@action=redirect&bpo=15913): Implement [`PyBuffer_SizeFromFormat()`](https://docs.python.org/3/c-api/buffer.html#c.PyBuffer_SizeFromFormat "PyBuffer_SizeFromFormat") function (previously documented but not implemented): call [`struct.calcsize()`](https://docs.python.org/3/library/struct.html#struct.calcsize "struct.calcsize"). Patch by Joannah Nanjekye.
  * [bpo-36922](https://bugs.python.org/issue?@action=redirect&bpo=36922): Slot functions optimize any callable with `Py_TPFLAGS_METHOD_DESCRIPTOR` instead of only instances of `function`.
  * [bpo-36974](https://bugs.python.org/issue?@action=redirect&bpo=36974): The slot `tp_vectorcall_offset` is inherited unconditionally to support `super().__call__()` when the base class uses vectorcall.
  * [bpo-37160](https://bugs.python.org/issue?@action=redirect&bpo=37160): [`threading.get_native_id()`](https://docs.python.org/3/library/threading.html#threading.get_native_id "threading.get_native_id") now also supports NetBSD.
  * [bpo-37077](https://bugs.python.org/issue?@action=redirect&bpo=37077): Add [`threading.get_native_id()`](https://docs.python.org/3/library/threading.html#threading.get_native_id "threading.get_native_id") support for AIX. Patch by M. Felt
  * [bpo-36781](https://bugs.python.org/issue?@action=redirect&bpo=36781): [`sum()`](https://docs.python.org/3/library/functions.html#sum "sum") has been optimized for boolean values.
  * [bpo-34556](https://bugs.python.org/issue?@action=redirect&bpo=34556): Add `--upgrade-deps` to venv module. Patch by Cooper Ry Lees
  * [bpo-20523](https://bugs.python.org/issue?@action=redirect&bpo=20523): `pdb.Pdb` supports ~/.pdbrc in Windows 7. Patch by Tim Hopper and Dan Lidral-Porter.
  * [bpo-35551](https://bugs.python.org/issue?@action=redirect&bpo=35551): Updated encodings: - Removed the “tis260” encoding, which was an alias for the nonexistent “tactis” codec. - Added “mac_centeuro” as an alias for the mac_latin2 encoding.
  * [bpo-19072](https://bugs.python.org/issue?@action=redirect&bpo=19072): The [`classmethod`](https://docs.python.org/3/library/functions.html#classmethod "classmethod") decorator can now wrap other descriptors such as property objects. Adapted from a patch written by Graham Dumpleton.
  * [bpo-27575](https://bugs.python.org/issue?@action=redirect&bpo=27575): Improve speed of dictview intersection by directly using set intersection logic. Patch by David Su.
  * [bpo-30773](https://bugs.python.org/issue?@action=redirect&bpo=30773): Prohibit parallel running of aclose() / asend() / athrow(). Fix ag_running to reflect the actual running status of the AG.