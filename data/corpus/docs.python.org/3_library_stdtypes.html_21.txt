Title: String Methods in Python
URL: https://docs.python.org/3/library/stdtypes.html
Summary: This section describes various string methods in Python, including `isidentifier()`, which checks if a string follows the rules for identifiers, and `iskeyword()`, which checks if a string is a keyword in Python. It also introduces `islower()`, `isnumeric()`, and `isprintable()`, detailing their behaviors and conditions for returning `True` or `False`.
---

```
>>> fromkeywordimport iskeyword
>>> 'hello'.isidentifier(), iskeyword('hello')
(True, False)
>>> 'def'.isidentifier(), iskeyword('def')
(True, True)

```


str.islower()[¶](https://docs.python.org/3/library/stdtypes.html#str.islower "Link to this definition")
    
Return `True` if all cased characters [[4]](https://docs.python.org/3/library/stdtypes.html#id15) in the string are lowercase and there is at least one cased character, `False` otherwise. 

str.isnumeric()[¶](https://docs.python.org/3/library/stdtypes.html#str.isnumeric "Link to this definition")
    
Return `True` if all characters in the string are numeric characters, and there is at least one character, `False` otherwise. Numeric characters include digit characters, and all characters that have the Unicode numeric value property, e.g. U+2155, VULGAR FRACTION ONE FIFTH. Formally, numeric characters are those with the property value Numeric_Type=Digit, Numeric_Type=Decimal or Numeric_Type=Numeric. 

str.isprintable()[¶](https://docs.python.org/3/library/stdtypes.html#str.isprintable "Link to this definition")
    
Return true if all characters in the string are printable, false if it contains at least one non-printable character.
Here “printable” means the character is suitable for [`repr()`](https://docs.python.org/3/library/functions.html#repr "repr") to use in its output; “non-printable” means that [`repr()`](https://docs.python.org/3/library/functions.html#repr "repr") on built-in types will hex-escape the character. It has no bearing on the handling of strings written to [`sys.stdout`](https://docs.python.org/3/library/sys.html#sys.stdout "sys.stdout") or [`sys.stderr`](https://docs.python.org/3/library/sys.html#sys.stderr "sys.stderr").
The printable characters are those which in the Unicode character database (see [`unicodedata`](https://docs.python.org/3/library/unicodedata.html#module-unicodedata "unicodedata: Access the Unicode Database.")) have a general category in group Letter, Mark, Number, Punctuation, or Symbol (L, M, N, P, or S); plus the ASCII space 0x20. Nonprintable characters are those in group Separator or Other (Z or C), except the ASCII space. 

str.isspace()[¶](https://docs.python.org/3/library/stdtypes.html#str.isspace "Link to this definition")
    
Return `True` if there are only whitespace characters in the string and there is at least one character, `False` otherwise.
A character is _whitespace_ if in the Unicode character database (see [`unicodedata`](https://docs.python.org/3/library/unicodedata.html#module-unicodedata "unicodedata: Access the Unicode Database.")), either its general category is `Zs` (“Separator, space”), or its bidirectional class is one of `WS`, `B`, or `S`. 

str.istitle()[¶](https://docs.python.org/3/library/stdtypes.html#str.istitle "Link to this definition")
    
Return `True` if the string is a titlecased string and there is at least one character, for example uppercase characters may only follow uncased characters and lowercase characters only cased ones. Return `False` otherwise. 

str.isupper()[¶](https://docs.python.org/3/library/stdtypes.html#str.isupper "Link to this definition")
    
Return `True` if all cased characters [[4]](https://docs.python.org/3/library/stdtypes.html#id15) in the string are uppercase and there is at least one cased character, `False` otherwise.
>>>```
>>> 'BANANA'.isupper()
True
>>> 'banana'.isupper()
False
>>> 'baNana'.isupper()
False
>>> ' '.isupper()
False