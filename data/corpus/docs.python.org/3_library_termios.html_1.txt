Title: Termios Module Functions
URL: https://docs.python.org/3/library/termios.html
Summary: This section describes several functions in the termios module: `tcsendbreak` for sending a break on a file descriptor, `tcdrain` to wait for output transmission completion, `tcflush` to discard queued data, and `tcflow` to suspend or resume data flow on a file descriptor.
---

termios.tcsendbreak(_fd_ , _duration_)[¶](https://docs.python.org/3/library/termios.html#termios.tcsendbreak "Link to this definition")
    
Send a break on file descriptor _fd_. A zero _duration_ sends a break for 0.25–0.5 seconds; a nonzero _duration_ has a system dependent meaning. 

termios.tcdrain(_fd_)[¶](https://docs.python.org/3/library/termios.html#termios.tcdrain "Link to this definition")
    
Wait until all output written to file descriptor _fd_ has been transmitted. 

termios.tcflush(_fd_ , _queue_)[¶](https://docs.python.org/3/library/termios.html#termios.tcflush "Link to this definition")
    
Discard queued data on file descriptor _fd_. The _queue_ selector specifies which queue: `TCIFLUSH` for the input queue, `TCOFLUSH` for the output queue, or `TCIOFLUSH` for both queues. 

termios.tcflow(_fd_ , _action_)[¶](https://docs.python.org/3/library/termios.html#termios.tcflow "Link to this definition")
    
Suspend or resume input or output on file descriptor _fd_. The _action_ argument can be `TCOOFF` to suspend output, `TCOON` to restart output, `TCIOFF` to suspend input, or `TCION` to restart input. 

termios.tcgetwinsize(_fd_)[¶](https://docs.python.org/3/library/termios.html#termios.tcgetwinsize "Link to this definition")
    
Return a tuple `(ws_row, ws_col)` containing the tty window size for file descriptor _fd_. Requires `termios.TIOCGWINSZ` or `termios.TIOCGSIZE`.
Added in version 3.11. 

termios.tcsetwinsize(_fd_ , _winsize_)[¶](https://docs.python.org/3/library/termios.html#termios.tcsetwinsize "Link to this definition")
    
Set the tty window size for file descriptor _fd_ from _winsize_ , which is a two-item tuple `(ws_row, ws_col)` like the one returned by [`tcgetwinsize()`](https://docs.python.org/3/library/termios.html#termios.tcgetwinsize "termios.tcgetwinsize"). Requires at least one of the pairs (`termios.TIOCGWINSZ`, `termios.TIOCSWINSZ`); (`termios.TIOCGSIZE`, `termios.TIOCSSIZE`) to be defined.
Added in version 3.11.
See also 

Module [`tty`](https://docs.python.org/3/library/tty.html#module-tty "tty: Utility functions that perform common terminal control operations. \(Unix\)")
    
Convenience functions for common terminal control operations.
## Example[¶](https://docs.python.org/3/library/termios.html#example "Link to this heading")
Here’s a function that prompts for a password with echoing turned off. Note the technique using a separate [`tcgetattr()`](https://docs.python.org/3/library/termios.html#termios.tcgetattr "termios.tcgetattr") call and a [`try`](https://docs.python.org/3/reference/compound_stmts.html#try) … [`finally`](https://docs.python.org/3/reference/compound_stmts.html#finally) statement to ensure that the old tty attributes are restored exactly no matter what happens:
```
defgetpass(prompt="Password: "):
  importtermios,sys
  fd = sys.stdin.fileno()
  old = termios.tcgetattr(fd)
  new = termios.tcgetattr(fd)
  new[3] = new[3] & ~termios.ECHO     # lflags
  try:
    termios.tcsetattr(fd, termios.TCSADRAIN, new)
    passwd = input(prompt)
  finally:
    termios.tcsetattr(fd, termios.TCSADRAIN, old)
  return passwd