Title: Opening LZMA-compressed Files in Python
URL: https://docs.python.org/3/library/lzma.html
Summary: The `lzma.open` function is used to open LZMA-compressed files in either binary or text mode. It takes a filename or an existing file object, along with various parameters such as mode, format, check, preset, filters, encoding, errors, and newline. The default mode is binary read ('rb').
---

lzma.open(_filename_ , _mode ='rb'_, _*_ , _format =None_, _check =-1_, _preset =None_, _filters =None_, _encoding =None_, _errors =None_, _newline =None_)[¶](https://docs.python.org/3/library/lzma.html#lzma.open "Link to this definition")
    
Open an LZMA-compressed file in binary or text mode, returning a [file object](https://docs.python.org/3/glossary.html#term-file-object).
The _filename_ argument can be either an actual file name (given as a [`str`](https://docs.python.org/3/library/stdtypes.html#str "str"), [`bytes`](https://docs.python.org/3/library/stdtypes.html#bytes "bytes") or [path-like](https://docs.python.org/3/glossary.html#term-path-like-object) object), in which case the named file is opened, or it can be an existing file object to read from or write to.
The _mode_ argument can be any of `"r"`, `"rb"`, `"w"`, `"wb"`, `"x"`, `"xb"`, `"a"` or `"ab"` for binary mode, or `"rt"`, `"wt"`, `"xt"`, or `"at"` for text mode. The default is `"rb"`.
When opening a file for reading, the _format_ and _filters_ arguments have the same meanings as for [`LZMADecompressor`](https://docs.python.org/3/library/lzma.html#lzma.LZMADecompressor "lzma.LZMADecompressor"). In this case, the _check_ and _preset_ arguments should not be used.
When opening a file for writing, the _format_ , _check_ , _preset_ and _filters_ arguments have the same meanings as for [`LZMACompressor`](https://docs.python.org/3/library/lzma.html#lzma.LZMACompressor "lzma.LZMACompressor").
For binary mode, this function is equivalent to the [`LZMAFile`](https://docs.python.org/3/library/lzma.html#lzma.LZMAFile "lzma.LZMAFile") constructor: `LZMAFile(filename, mode, ...)`. In this case, the _encoding_ , _errors_ and _newline_ arguments must not be provided.
For text mode, a [`LZMAFile`](https://docs.python.org/3/library/lzma.html#lzma.LZMAFile "lzma.LZMAFile") object is created, and wrapped in an [`io.TextIOWrapper`](https://docs.python.org/3/library/io.html#io.TextIOWrapper "io.TextIOWrapper") instance with the specified encoding, error handling behavior, and line ending(s).
Changed in version 3.4: Added support for the `"x"`, `"xb"` and `"xt"` modes.
Changed in version 3.6: Accepts a [path-like object](https://docs.python.org/3/glossary.html#term-path-like-object). 

_class_ lzma.LZMAFile(_filename =None_, _mode ='r'_, _*_ , _format =None_, _check =-1_, _preset =None_, _filters =None_)[¶](https://docs.python.org/3/library/lzma.html#lzma.LZMAFile "Link to this definition")
    
Open an LZMA-compressed file in binary mode.
An [`LZMAFile`](https://docs.python.org/3/library/lzma.html#lzma.LZMAFile "lzma.LZMAFile") can wrap an already-open [file object](https://docs.python.org/3/glossary.html#term-file-object), or operate directly on a named file. The _filename_ argument specifies either the file object to wrap, or the name of the file to open (as a [`str`](https://docs.python.org/3/library/stdtypes.html#str "str"), [`bytes`](https://docs.python.org/3/library/stdtypes.html#bytes "bytes") or [path-like](https://docs.python.org/3/glossary.html#term-path-like-object) object). When wrapping an existing file object, the wrapped file will not be closed when the [`LZMAFile`](https://docs.python.org/3/library/lzma.html#lzma.LZMAFile "lzma.LZMAFile") is closed.
The _mode_ argument can be either `"r"` for reading (default), `"w"` for overwriting, `"x"` for exclusive creation, or `"a"` for appending. These can equivalently be given as `"rb"`, `"wb"`, `"xb"` and `"ab"` respectively.
If _filename_ is a file object (rather than an actual file name), a mode of `"w"` does not truncate the file, and is instead equivalent to `"a"`.
When opening a file for reading, the input file may be the concatenation of multiple separate compressed streams. These are transparently decoded as a single logical stream.
When opening a file for reading, the _format_ and _filters_ arguments have the same meanings as for [`LZMADecompressor`](https://docs.python.org/3/library/lzma.html#lzma.LZMADecompressor "lzma.LZMADecompressor"). In this case, the _check_ and _preset_ arguments should not be used.
When opening a file for writing, the _format_ , _check_ , _preset_ and _filters_ arguments have the same meanings as for [`LZMACompressor`](https://docs.python.org/3/library/lzma.html#lzma.LZMACompressor "lzma.LZMACompressor").
[`LZMAFile`](https://docs.python.org/3/library/lzma.html#lzma.LZMAFile "lzma.LZMAFile") supports all the members specified by [`io.BufferedIOBase`](https://docs.python.org/3/library/io.html#io.BufferedIOBase "io.BufferedIOBase"), except for [`detach()`](https://docs.python.org/3/library/io.html#io.BufferedIOBase.detach "io.BufferedIOBase.detach") and [`truncate()`](https://docs.python.org/3/library/io.html#io.IOBase.truncate "io.IOBase.truncate"). Iteration and the [`with`](https://docs.python.org/3/reference/compound_stmts.html#with) statement are supported.
The following method and attributes are also provided: