Title: Python TypedDict and Library Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This document introduces the creation of a TypedDict class with no fields, discusses fixes and deprecations in various Python libraries, including `webbrowser` and `ctypes`, and mandates support for `asyncio.Task.set_name()` in third-party task implementations.
---

To create a `TypedDict` class with 0 fields, either use `class TD(TypedDict): pass` or `TD = TypedDict("TD", {})`.
  * [gh-105745](https://github.com/python/cpython/issues/105745): Fix `webbrowser.Konqueror.open` method.
  * [gh-105733](https://github.com/python/cpython/issues/105733): [`ctypes`](https://docs.python.org/3/library/ctypes.html#module-ctypes "ctypes: A foreign function library for Python."): Deprecate undocumented `ctypes.SetPointerType()` and `ctypes.ARRAY()` functions. Patch by Victor Stinner.
  * [gh-105687](https://github.com/python/cpython/issues/105687): Remove deprecated `re.template`, `re.T`, `re.TEMPLATE`, `sre_constans.SRE_FLAG_TEMPLATE`.
  * [gh-105684](https://github.com/python/cpython/issues/105684): Supporting [`asyncio.Task.set_name()`](https://docs.python.org/3/library/asyncio-task.html#asyncio.Task.set_name "asyncio.Task.set_name") is now mandatory for third party task implementations. The undocumented `_set_task_name()` function (deprecated since 3.8) has been removed. Patch by Kumar Aditya.
  * [gh-105375](https://github.com/python/cpython/issues/105375): Fix a bug in `_Unpickler_SetInputStream()` where an exception could end up being overwritten in case of failure.
  * [gh-105626](https://github.com/python/cpython/issues/105626): Change the default return value of [`http.client.HTTPConnection.get_proxy_response_headers()`](https://docs.python.org/3/library/http.client.html#http.client.HTTPConnection.get_proxy_response_headers "http.client.HTTPConnection.get_proxy_response_headers") to be `None` and not `{}`.
  * [gh-105375](https://github.com/python/cpython/issues/105375): Fix bugs in [`sys`](https://docs.python.org/3/library/sys.html#module-sys "sys: Access system-specific parameters and functions.") where exceptions could end up being overwritten because of deferred error handling.
  * [gh-105605](https://github.com/python/cpython/issues/105605): Harden `pyexpat` error handling during module initialisation to prevent exceptions from possibly being overwritten, and objects from being dereferenced twice.
  * [gh-105375](https://github.com/python/cpython/issues/105375): Fix bug in [`decimal`](https://docs.python.org/3/library/decimal.html#module-decimal "decimal: Implementation of the General Decimal Arithmetic Specification.") where an exception could end up being overwritten.
  * [gh-105375](https://github.com/python/cpython/issues/105375): Fix bugs in `_datetime` where exceptions could be overwritten in case of module initialisation failure.
  * [gh-105375](https://github.com/python/cpython/issues/105375): Fix bugs in `_ssl` initialisation which could lead to leaked references and overwritten exceptions.
  * [gh-105375](https://github.com/python/cpython/issues/105375): Fix a bug in [`array.array`](https://docs.python.org/3/library/array.html#array.array "array.array") where an exception could end up being overwritten.
  * [gh-105375](https://github.com/python/cpython/issues/105375): Fix bugs in `_ctypes` where exceptions could end up being overwritten.
  * [gh-105375](https://github.com/python/cpython/issues/105375): Fix a bug in the [`posix`](https://docs.python.org/3/library/posix.html#module-posix "posix: The most common POSIX system calls \(normally used via module os\). \(Unix\)") module where an exception could be overwritten.
  * [gh-105375](https://github.com/python/cpython/issues/105375): Fix bugs in `_elementtree` where exceptions could be overwritten.
  * [gh-105375](https://github.com/python/cpython/issues/105375): Fix bugs in [`zoneinfo`](https://docs.python.org/3/library/zoneinfo.html#module-zoneinfo "zoneinfo: IANA time zone support") where exceptions could be overwritten.
  * [gh-105375](https://github.com/python/cpython/issues/105375): Fix bugs in [`errno`](https://docs.python.org/3/library/errno.html#module-errno "errno: Standard errno system symbols.") where exceptions could be overwritten.
  * [gh-105566](https://github.com/python/cpython/issues/105566): Deprecate creating a [`typing.NamedTuple`](https://docs.python.org/3/library/typing.html#typing.NamedTuple "typing.NamedTuple") class using keyword arguments to denote the fields (`NT = NamedTuple("NT", x=int, y=str)`). This will be disallowed in Python 3.15. Use the class-based syntax or the functional syntax instead.
Two methods of creating `NamedTuple` classes with 0 fields using the functional syntax are also deprecated, and will be disallowed in Python 3.15: `NT = NamedTuple("NT")` and `NT = NamedTuple("NT", None)`.