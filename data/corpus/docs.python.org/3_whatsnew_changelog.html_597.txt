Title: Core and Builtins Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section details key bug fixes in Python's core and built-in functionalities, including assertion failures in `ctypes`, `subprocess.Popen()`, and `PyErr_WriteUnraisable()`, as well as handling of warnings filters. All patches contributed by Oren Milman.
---

### Core and Builtins[¶](https://docs.python.org/3/whatsnew/changelog.html#id561 "Link to this heading")
  * [bpo-31490](https://bugs.python.org/issue?@action=redirect&bpo=31490): Fix an assertion failure in `ctypes` class definition, in case the class has an attribute whose name is specified in `_anonymous_` but not in `_fields_`. Patch by Oren Milman.
  * [bpo-31471](https://bugs.python.org/issue?@action=redirect&bpo=31471): Fix an assertion failure in `subprocess.Popen()` on Windows, in case the env argument has a bad `keys()` method. Patch by Oren Milman.
  * [bpo-31418](https://bugs.python.org/issue?@action=redirect&bpo=31418): Fix an assertion failure in `PyErr_WriteUnraisable()` in case of an exception with a bad `__module__` attribute. Patch by Oren Milman.
  * [bpo-31416](https://bugs.python.org/issue?@action=redirect&bpo=31416): Fix assertion failures in case of a bad warnings.filters or warnings.defaultaction. Patch by Oren Milman.
  * [bpo-28411](https://bugs.python.org/issue?@action=redirect&bpo=28411): Change direct usage of PyInterpreterState.modules to PyImport_GetModuleDict(). Also introduce more uniformity in other code that deals with sys.modules. This helps reduce complications when working on sys.modules.
  * [bpo-28411](https://bugs.python.org/issue?@action=redirect&bpo=28411): Switch to the abstract API when dealing with `PyInterpreterState.modules`. This allows later support for all dict subclasses and other Mapping implementations. Also add a `PyImport_GetModule()` function to reduce a bunch of duplicated code.
  * [bpo-31411](https://bugs.python.org/issue?@action=redirect&bpo=31411): Raise a TypeError instead of SystemError in case warnings.onceregistry is not a dictionary. Patch by Oren Milman.
  * [bpo-31344](https://bugs.python.org/issue?@action=redirect&bpo=31344): For finer control of tracing behaviour when testing the interpreter, two new frame attributes have been added to control the emission of particular trace events: `f_trace_lines` (`True` by default) to turn off per-line trace events; and `f_trace_opcodes` (`False` by default) to turn on per-opcode trace events.
  * [bpo-31373](https://bugs.python.org/issue?@action=redirect&bpo=31373): Fix several possible instances of undefined behavior due to floating-point demotions.
  * [bpo-30465](https://bugs.python.org/issue?@action=redirect&bpo=30465): Location information (`lineno` and `col_offset`) in f-strings is now (mostly) correct. This fixes tools like flake8 from showing warnings on the wrong line (typically the first line of the file).
  * [bpo-30860](https://bugs.python.org/issue?@action=redirect&bpo=30860): Consolidate CPython’s global runtime state under a single struct. This improves discoverability of the runtime state.
  * [bpo-31347](https://bugs.python.org/issue?@action=redirect&bpo=31347): Fix possible undefined behavior in _PyObject_FastCall_Prepend.
  * [bpo-31343](https://bugs.python.org/issue?@action=redirect&bpo=31343): Include sys/sysmacros.h for major(), minor(), and makedev(). GNU C libray plans to remove the functions from sys/types.h.
  * [bpo-31291](https://bugs.python.org/issue?@action=redirect&bpo=31291): Fix an assertion failure in `zipimport.zipimporter.get_data` on Windows, when the return value of `pathname.replace('/','\\')` isn’t a string. Patch by Oren Milman.
  * [bpo-31271](https://bugs.python.org/issue?@action=redirect&bpo=31271): Fix an assertion failure in the `write()` method of `io.TextIOWrapper`, when the encoder doesn’t return a bytes object. Patch by Oren Milman.
  * [bpo-31243](https://bugs.python.org/issue?@action=redirect&bpo=31243): Fix a crash in some methods of `io.TextIOWrapper`, when the decoder’s state is invalid. Patch by Oren Milman.
  * [bpo-30721](https://bugs.python.org/issue?@action=redirect&bpo=30721): `print` now shows correct usage hint for using Python 2 redirection syntax. Patch by Sanyam Khurana.
  * [bpo-31070](https://bugs.python.org/issue?@action=redirect&bpo=31070): Fix a race condition in importlib _get_module_lock().
  * [bpo-30747](https://bugs.python.org/issue?@action=redirect&bpo=30747): Add a non-dummy implementation of _Py_atomic_store and _Py_atomic_load on MSVC.
  * [bpo-31095](https://bugs.python.org/issue?@action=redirect&bpo=31095): Fix potential crash during GC caused by `tp_dealloc` which doesn’t call `PyObject_GC_UnTrack()`.
  * [bpo-31071](https://bugs.python.org/issue?@action=redirect&bpo=31071): Avoid masking original TypeError in call with * unpacking when other arguments are passed.
  * [bpo-30978](https://bugs.python.org/issue?@action=redirect&bpo=30978): str.format_map() now passes key lookup exceptions through. Previously any exception was replaced with a KeyError exception.
  * [bpo-30808](https://bugs.python.org/issue?@action=redirect&bpo=30808): Use _Py_atomic API for concurrency-sensitive signal state.
  * [bpo-30876](https://bugs.python.org/issue?@action=redirect&bpo=30876): Relative import from unloaded package now reimports