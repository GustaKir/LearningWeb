Title: os Module: File System Encoding Functions
URL: https://docs.python.org/3/library/os.html
Summary: The `os.fsdecode()` function decodes a path-like filename using the filesystem encoding, returning the string unchanged, with `fsencode()` serving as its reverse. Introduced in version 3.2 and updated in 3.6 to support `os.PathLike` objects. The `os.fspath()` function returns the file system representation of a given path, simplifying path handling.
---

os.fsdecode(_filename_)[¶](https://docs.python.org/3/library/os.html#os.fsdecode "Link to this definition")
    
Decode the [path-like](https://docs.python.org/3/glossary.html#term-path-like-object) _filename_ from the [filesystem encoding and error handler](https://docs.python.org/3/glossary.html#term-filesystem-encoding-and-error-handler); return [`str`](https://docs.python.org/3/library/stdtypes.html#str "str") unchanged.
[`fsencode()`](https://docs.python.org/3/library/os.html#os.fsencode "os.fsencode") is the reverse function.
Added in version 3.2.
Changed in version 3.6: Support added to accept objects implementing the [`os.PathLike`](https://docs.python.org/3/library/os.html#os.PathLike "os.PathLike") interface. 

os.fspath(_path_)[¶](https://docs.python.org/3/library/os.html#os.fspath "Link to this definition")
    
Return the file system representation of the path.
If [`str`](https://docs.python.org/3/library/stdtypes.html#str "str") or [`bytes`](https://docs.python.org/3/library/stdtypes.html#bytes "bytes") is passed in, it is returned unchanged. Otherwise [`__fspath__()`](https://docs.python.org/3/library/os.html#os.PathLike.__fspath__ "os.PathLike.__fspath__") is called and its value is returned as long as it is a [`str`](https://docs.python.org/3/library/stdtypes.html#str "str") or [`bytes`](https://docs.python.org/3/library/stdtypes.html#bytes "bytes") object. In all other cases, [`TypeError`](https://docs.python.org/3/library/exceptions.html#TypeError "TypeError") is raised.
Added in version 3.6. 

_class_ os.PathLike[¶](https://docs.python.org/3/library/os.html#os.PathLike "Link to this definition")
    
An [abstract base class](https://docs.python.org/3/glossary.html#term-abstract-base-class) for objects representing a file system path, e.g. [`pathlib.PurePath`](https://docs.python.org/3/library/pathlib.html#pathlib.PurePath "pathlib.PurePath").
Added in version 3.6. 

_abstractmethod_ __fspath__()[¶](https://docs.python.org/3/library/os.html#os.PathLike.__fspath__ "Link to this definition")
    
Return the file system path representation of the object.
The method should only return a [`str`](https://docs.python.org/3/library/stdtypes.html#str "str") or [`bytes`](https://docs.python.org/3/library/stdtypes.html#bytes "bytes") object, with the preference being for [`str`](https://docs.python.org/3/library/stdtypes.html#str "str"). 

os.getenv(_key_ , _default =None_)[¶](https://docs.python.org/3/library/os.html#os.getenv "Link to this definition")
    
Return the value of the environment variable _key_ as a string if it exists, or _default_ if it doesn’t. _key_ is a string. Note that since [`getenv()`](https://docs.python.org/3/library/os.html#os.getenv "os.getenv") uses [`os.environ`](https://docs.python.org/3/library/os.html#os.environ "os.environ"), the mapping of [`getenv()`](https://docs.python.org/3/library/os.html#os.getenv "os.getenv") is similarly also captured on import, and the function may not reflect future environment changes.
On Unix, keys and values are decoded with [`sys.getfilesystemencoding()`](https://docs.python.org/3/library/sys.html#sys.getfilesystemencoding "sys.getfilesystemencoding") and `'surrogateescape'` error handler. Use [`os.getenvb()`](https://docs.python.org/3/library/os.html#os.getenvb "os.getenvb") if you would like to use a different encoding.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix, Windows. 

os.getenvb(_key_ , _default =None_)[¶](https://docs.python.org/3/library/os.html#os.getenvb "Link to this definition")
    
Return the value of the environment variable _key_ as bytes if it exists, or _default_ if it doesn’t. _key_ must be bytes. Note that since [`getenvb()`](https://docs.python.org/3/library/os.html#os.getenvb "os.getenvb") uses [`os.environb`](https://docs.python.org/3/library/os.html#os.environb "os.environb"), the mapping of [`getenvb()`](https://docs.python.org/3/library/os.html#os.getenvb "os.getenvb") is similarly also captured on import, and the function may not reflect future environment changes.
[`getenvb()`](https://docs.python.org/3/library/os.html#os.getenvb "os.getenvb") is only available if [`supports_bytes_environ`](https://docs.python.org/3/library/os.html#os.supports_bytes_environ "os.supports_bytes_environ") is `True`.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix.
Added in version 3.2. 

os.get_exec_path(_env =None_)[¶](https://docs.python.org/3/library/os.html#os.get_exec_path "Link to this definition")
    
Returns the list of directories that will be searched for a named executable, similar to a shell, when launching a process. _env_ , when specified, should be an environment variable dictionary to lookup the PATH in. By default, when _env_ is `None`, [`environ`](https://docs.python.org/3/library/os.html#os.environ "os.environ") is used.
Added in version 3.2.