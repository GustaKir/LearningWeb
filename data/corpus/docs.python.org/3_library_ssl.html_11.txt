Title: SSL Alert Descriptions
URL: https://docs.python.org/3/library/ssl.html
Summary: This section details SSL alert descriptions introduced in Python version 3.2, including HANDSHAKE_FAILURE and INTERNAL_ERROR. It references RFC 5246 and the IANA TLS Alert Registry, highlighting their usage as return values for callback functions in SSLContext.
---

```

Added in version 3.2. 

ssl.ALERT_DESCRIPTION_HANDSHAKE_FAILURE[¶](https://docs.python.org/3/library/ssl.html#ssl.ALERT_DESCRIPTION_HANDSHAKE_FAILURE "Link to this definition")


ssl.ALERT_DESCRIPTION_INTERNAL_ERROR[¶](https://docs.python.org/3/library/ssl.html#ssl.ALERT_DESCRIPTION_INTERNAL_ERROR "Link to this definition")


ALERT_DESCRIPTION_*
    
Alert Descriptions from [**RFC 5246**](https://datatracker.ietf.org/doc/html/rfc5246.html) and others. The [IANA TLS Alert Registry](https://www.iana.org/assignments/tls-parameters/tls-parameters.xml#tls-parameters-6) contains this list and references to the RFCs where their meaning is defined.
Used as the return value of the callback function in [`SSLContext.set_servername_callback()`](https://docs.python.org/3/library/ssl.html#ssl.SSLContext.set_servername_callback "ssl.SSLContext.set_servername_callback").
Added in version 3.4. 

_class_ ssl.AlertDescription[¶](https://docs.python.org/3/library/ssl.html#ssl.AlertDescription "Link to this definition")
    
[`enum.IntEnum`](https://docs.python.org/3/library/enum.html#enum.IntEnum "enum.IntEnum") collection of ALERT_DESCRIPTION_* constants.
Added in version 3.6. 

Purpose.SERVER_AUTH[¶](https://docs.python.org/3/library/ssl.html#ssl.Purpose.SERVER_AUTH "Link to this definition")
    
Option for [`create_default_context()`](https://docs.python.org/3/library/ssl.html#ssl.create_default_context "ssl.create_default_context") and [`SSLContext.load_default_certs()`](https://docs.python.org/3/library/ssl.html#ssl.SSLContext.load_default_certs "ssl.SSLContext.load_default_certs"). This value indicates that the context may be used to authenticate web servers (therefore, it will be used to create client-side sockets).
Added in version 3.4. 

Purpose.CLIENT_AUTH[¶](https://docs.python.org/3/library/ssl.html#ssl.Purpose.CLIENT_AUTH "Link to this definition")
    
Option for [`create_default_context()`](https://docs.python.org/3/library/ssl.html#ssl.create_default_context "ssl.create_default_context") and [`SSLContext.load_default_certs()`](https://docs.python.org/3/library/ssl.html#ssl.SSLContext.load_default_certs "ssl.SSLContext.load_default_certs"). This value indicates that the context may be used to authenticate web clients (therefore, it will be used to create server-side sockets).
Added in version 3.4. 

_class_ ssl.SSLErrorNumber[¶](https://docs.python.org/3/library/ssl.html#ssl.SSLErrorNumber "Link to this definition")
    
[`enum.IntEnum`](https://docs.python.org/3/library/enum.html#enum.IntEnum "enum.IntEnum") collection of SSL_ERROR_* constants.
Added in version 3.6. 

_class_ ssl.TLSVersion[¶](https://docs.python.org/3/library/ssl.html#ssl.TLSVersion "Link to this definition")
    
[`enum.IntEnum`](https://docs.python.org/3/library/enum.html#enum.IntEnum "enum.IntEnum") collection of SSL and TLS versions for [`SSLContext.maximum_version`](https://docs.python.org/3/library/ssl.html#ssl.SSLContext.maximum_version "ssl.SSLContext.maximum_version") and [`SSLContext.minimum_version`](https://docs.python.org/3/library/ssl.html#ssl.SSLContext.minimum_version "ssl.SSLContext.minimum_version").
Added in version 3.7. 

TLSVersion.MINIMUM_SUPPORTED[¶](https://docs.python.org/3/library/ssl.html#ssl.TLSVersion.MINIMUM_SUPPORTED "Link to this definition")


TLSVersion.MAXIMUM_SUPPORTED[¶](https://docs.python.org/3/library/ssl.html#ssl.TLSVersion.MAXIMUM_SUPPORTED "Link to this definition")
    
The minimum or maximum supported SSL or TLS version. These are magic constants. Their values don’t reflect the lowest and highest available TLS/SSL versions. 

TLSVersion.SSLv3[¶](https://docs.python.org/3/library/ssl.html#ssl.TLSVersion.SSLv3 "Link to this definition")


TLSVersion.TLSv1[¶](https://docs.python.org/3/library/ssl.html#ssl.TLSVersion.TLSv1 "Link to this definition")


TLSVersion.TLSv1_1[¶](https://docs.python.org/3/library/ssl.html#ssl.TLSVersion.TLSv1_1 "Link to this definition")


TLSVersion.TLSv1_2[¶](https://docs.python.org/3/library/ssl.html#ssl.TLSVersion.TLSv1_2 "Link to this definition")


TLSVersion.TLSv1_3[¶](https://docs.python.org/3/library/ssl.html#ssl.TLSVersion.TLSv1_3 "Link to this definition")
    
SSL 3.0 to TLS 1.3.
Deprecated since version 3.10: All [`TLSVersion`](https://docs.python.org/3/library/ssl.html#ssl.TLSVersion "ssl.TLSVersion") members except [`TLSVersion.TLSv1_2`](https://docs.python.org/3/library/ssl.html#ssl.TLSVersion.TLSv1_2 "ssl.TLSVersion.TLSv1_2") and [`TLSVersion.TLSv1_3`](https://docs.python.org/3/library/ssl.html#ssl.TLSVersion.TLSv1_3 "ssl.TLSVersion.TLSv1_3") are deprecated.
## SSL Sockets[¶](https://docs.python.org/3/library/ssl.html#ssl-sockets "Link to this heading")