Title: Python Changelog Highlights
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: Key updates include handling `RuntimeError` during thread creation, ensuring consistent `os.path.isdir()` signatures across platforms, improving `functools` import time by 13%, and enhancing `shutil.which()` behavior with respect to `PATHEXT` extensions.
---

During Python finalization, creating a new thread can now raise [`RuntimeError`](https://docs.python.org/3/library/exceptions.html#RuntimeError "RuntimeError"). Catch the exception and call `terminate_broken()` in this case. Patch by Victor Stinner.
  * [gh-109782](https://github.com/python/cpython/issues/109782): Ensure the signature of [`os.path.isdir()`](https://docs.python.org/3/library/os.path.html#os.path.isdir "os.path.isdir") is identical on all platforms. Patch by Amin Alaee.
  * [gh-109653](https://github.com/python/cpython/issues/109653): Improve import time of [`functools`](https://docs.python.org/3/library/functools.html#module-functools "functools: Higher-order functions and operations on callable objects.") by around 13%. Patch by Alex Waygood.
  * [gh-109590](https://github.com/python/cpython/issues/109590): [`shutil.which()`](https://docs.python.org/3/library/shutil.html#shutil.which "shutil.which") will prefer files with an extension in `PATHEXT` if the given mode includes `os.X_OK` on win32. If no `PATHEXT` match is found, a file without an extension in `PATHEXT` can be returned. This change will have [`shutil.which()`](https://docs.python.org/3/library/shutil.html#shutil.which "shutil.which") act more similarly to previous behavior in Python 3.11.
  * [gh-109653](https://github.com/python/cpython/issues/109653): Reduce the import time of [`enum`](https://docs.python.org/3/library/enum.html#module-enum "enum: Implementation of an enumeration class.") by over 50%. Patch by Alex Waygood.
  * [gh-109593](https://github.com/python/cpython/issues/109593): Avoid deadlocking on a reentrant call to the multiprocessing resource tracker. Such a reentrant call, though unlikely, can happen if a GC pass invokes the finalizer for a multiprocessing object such as SemLock.
  * [gh-109653](https://github.com/python/cpython/issues/109653): Reduce the import time of [`typing`](https://docs.python.org/3/library/typing.html#module-typing "typing: Support for type hints \(see :pep:`484`\).") by around a third. Patch by Alex Waygood.
  * [gh-109649](https://github.com/python/cpython/issues/109649): Add [`os.process_cpu_count()`](https://docs.python.org/3/library/os.html#os.process_cpu_count "os.process_cpu_count") function to get the number of logical CPUs usable by the calling thread of the current process. Patch by Victor Stinner.
  * [gh-74481](https://github.com/python/cpython/issues/74481): Add `set_error_mode` related constants in `msvcrt` module in Python debug build.
  * [gh-109613](https://github.com/python/cpython/issues/109613): Fix [`os.stat()`](https://docs.python.org/3/library/os.html#os.stat "os.stat") and [`os.DirEntry.stat()`](https://docs.python.org/3/library/os.html#os.DirEntry.stat "os.DirEntry.stat"): check for exceptions. Previously, on Python built in debug mode, these functions could trigger a fatal Python error (and abort the process) when a function succeeded with an exception set. Patch by Victor Stinner.
  * [gh-109599](https://github.com/python/cpython/issues/109599): Expose the type of PyCapsule objects as `types.CapsuleType`.
  * [gh-109109](https://github.com/python/cpython/issues/109109): You can now get the raw TLS certificate chains from TLS connections via [`ssl.SSLSocket.get_verified_chain()`](https://docs.python.org/3/library/ssl.html#ssl.SSLSocket.get_verified_chain "ssl.SSLSocket.get_verified_chain") and [`ssl.SSLSocket.get_unverified_chain()`](https://docs.python.org/3/library/ssl.html#ssl.SSLSocket.get_unverified_chain "ssl.SSLSocket.get_unverified_chain") methods.
Contributed by Mateusz Nowak.
  * [gh-109559](https://github.com/python/cpython/issues/109559): Update [`unicodedata`](https://docs.python.org/3/library/unicodedata.html#module-unicodedata "unicodedata: Access the Unicode Database.") database to Unicode 15.1.0.
  * [gh-109543](https://github.com/python/cpython/issues/109543): Remove unnecessary [`hasattr()`](https://docs.python.org/3/library/functions.html#hasattr "hasattr") check during [`typing.TypedDict`](https://docs.python.org/3/library/typing.html#typing.TypedDict "typing.TypedDict") creation.
  * [gh-109495](https://github.com/python/cpython/issues/109495): Remove unnecessary extra `__slots__` in [`datetime`](https://docs.python.org/3/library/datetime.html#datetime.datetime "datetime.datetime")'s pure python implementation to reduce memory size, as they are defined in the superclass. Patch by James Hilton-Balfe
  * [gh-109461](https://github.com/python/cpython/issues/109461): [`logging`](https://docs.python.org/3/library/logging.html#module-logging "logging: Flexible event logging system for applications."): Use a context manager for lock acquisition.
  * [gh-109096](https://github.com/python/cpython/issues/109096): [`http.server.CGIHTTPRequestHandler`](https://docs.python.org/3/library/http.server.html#http.server.CGIHTTPRequestHandler "http.server.CGIHTTPRequestHandler") has been deprecated for removal in 3.15.