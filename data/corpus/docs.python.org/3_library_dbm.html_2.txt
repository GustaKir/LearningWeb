Title: dbm Module Overview
URL: https://docs.python.org/3/library/dbm.html
Summary: The dbm module provides interfaces to various Unix database formats. It includes submodules such as dbm.sqlite3, which offers an SQLite backend for dbm using the sqlite3 module. This feature was added in version 3.13 and allows storing non-string data in a persistent manner.
---

```

See also 

Module [`shelve`](https://docs.python.org/3/library/shelve.html#module-shelve "shelve: Python object persistence.")
    
Persistence module which stores non-string data.
The individual submodules are described in the following sections.
## [`dbm.sqlite3`](https://docs.python.org/3/library/dbm.html#module-dbm.sqlite3 "dbm.sqlite3: SQLite backend for dbm \(All\)") — SQLite backend for dbm[¶](https://docs.python.org/3/library/dbm.html#module-dbm.sqlite3 "Link to this heading")
Added in version 3.13.
**Source code:** [Lib/dbm/sqlite3.py](https://github.com/python/cpython/tree/3.13/Lib/dbm/sqlite3.py)
This module uses the standard library [`sqlite3`](https://docs.python.org/3/library/sqlite3.html#module-sqlite3 "sqlite3: A DB-API 2.0 implementation using SQLite 3.x.") module to provide an SQLite backend for the [`dbm`](https://docs.python.org/3/library/dbm.html#module-dbm "dbm: Interfaces to various Unix "database" formats.") module. The files created by [`dbm.sqlite3`](https://docs.python.org/3/library/dbm.html#module-dbm.sqlite3 "dbm.sqlite3: SQLite backend for dbm \(All\)") can thus be opened by [`sqlite3`](https://docs.python.org/3/library/sqlite3.html#module-sqlite3 "sqlite3: A DB-API 2.0 implementation using SQLite 3.x."), or any other SQLite browser, including the SQLite CLI.
[Availability](https://docs.python.org/3/library/intro.html#availability): not WASI.
This module does not work or is not available on WebAssembly. See [WebAssembly platforms](https://docs.python.org/3/library/intro.html#wasm-availability) for more information. 

dbm.sqlite3.open(_filename_ , _/_ , _flag ='r'_, _mode =0o666_)[¶](https://docs.python.org/3/library/dbm.html#dbm.sqlite3.open "Link to this definition")
    
Open an SQLite database. The returned object behaves like a [mapping](https://docs.python.org/3/glossary.html#term-mapping), implements a `close()` method, and supports a “closing” context manager via the [`with`](https://docs.python.org/3/reference/compound_stmts.html#with) keyword. 

Parameters:
    
  * **filename** ([path-like object](https://docs.python.org/3/glossary.html#term-path-like-object)) – The path to the database to be opened.
  * **flag** ([_str_](https://docs.python.org/3/library/stdtypes.html#str "str")) – 
    * `'r'` (default): Open existing database for reading only.
    * `'w'`: Open existing database for reading and writing.
    * `'c'`: Open database for reading and writing, creating it if it doesn’t exist.
    * `'n'`: Always create a new, empty database, open for reading and writing.
  * **mode** – The Unix file access mode of the file (default: octal `0o666`), used only when the database has to be created.


## [`dbm.gnu`](https://docs.python.org/3/library/dbm.html#module-dbm.gnu "dbm.gnu: GNU database manager \(Unix\)") — GNU database manager[¶](https://docs.python.org/3/library/dbm.html#module-dbm.gnu "Link to this heading")
**Source code:** [Lib/dbm/gnu.py](https://github.com/python/cpython/tree/3.13/Lib/dbm/gnu.py)
The [`dbm.gnu`](https://docs.python.org/3/library/dbm.html#module-dbm.gnu "dbm.gnu: GNU database manager \(Unix\)") module provides an interface to the GDBM library, similar to the [`dbm.ndbm`](https://docs.python.org/3/library/dbm.html#module-dbm.ndbm "dbm.ndbm: The New Database Manager \(Unix\)") module, but with additional functionality like crash tolerance.
Note
The file formats created by [`dbm.gnu`](https://docs.python.org/3/library/dbm.html#module-dbm.gnu "dbm.gnu: GNU database manager \(Unix\)") and [`dbm.ndbm`](https://docs.python.org/3/library/dbm.html#module-dbm.ndbm "dbm.ndbm: The New Database Manager \(Unix\)") are incompatible and can not be used interchangeably.
[Availability](https://docs.python.org/3/library/intro.html#availability): not Android, not iOS, not WASI.
This module is not supported on [mobile platforms](https://docs.python.org/3/library/intro.html#mobile-availability) or [WebAssembly platforms](https://docs.python.org/3/library/intro.html#wasm-availability). 

_exception_ dbm.gnu.error[¶](https://docs.python.org/3/library/dbm.html#dbm.gnu.error "Link to this definition")
    
Raised on [`dbm.gnu`](https://docs.python.org/3/library/dbm.html#module-dbm.gnu "dbm.gnu: GNU database manager \(Unix\)")-specific errors, such as I/O errors. [`KeyError`](https://docs.python.org/3/library/exceptions.html#KeyError "KeyError") is raised for general mapping errors like specifying an incorrect key. 

dbm.gnu.open(_filename_ , _flag ='r'_, _mode =0o666_, _/_)[¶](https://docs.python.org/3/library/dbm.html#dbm.gnu.open "Link to this definition")
    
Open a GDBM database and return a `gdbm` object.