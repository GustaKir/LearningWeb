Title: Simple Statements in Python
URL: https://docs.python.org/3/reference/simple_stmts.html
Summary: This section outlines the structure of simple statements in Python, which includes various types such as expression statements, assert statements, and different forms of assignment statements. Each statement type is linked for further details.
---

```
**simple_stmt** ::= [expression_stmt](https://docs.python.org/3/reference/simple_stmts.html#grammar-token-python-grammar-expression_stmt)
        | [assert_stmt](https://docs.python.org/3/reference/simple_stmts.html#grammar-token-python-grammar-assert_stmt)
        | [assignment_stmt](https://docs.python.org/3/reference/simple_stmts.html#grammar-token-python-grammar-assignment_stmt)
        | [augmented_assignment_stmt](https://docs.python.org/3/reference/simple_stmts.html#grammar-token-python-grammar-augmented_assignment_stmt)
        | [annotated_assignment_stmt](https://docs.python.org/3/reference/simple_stmts.html#grammar-token-python-grammar-annotated_assignment_stmt)
        | [pass_stmt](https://docs.python.org/3/reference/simple_stmts.html#grammar-token-python-grammar-pass_stmt)
        | [del_stmt](https://docs.python.org/3/reference/simple_stmts.html#grammar-token-python-grammar-del_stmt)
        | [return_stmt](https://docs.python.org/3/reference/simple_stmts.html#grammar-token-python-grammar-return_stmt)
        | [yield_stmt](https://docs.python.org/3/reference/simple_stmts.html#grammar-token-python-grammar-yield_stmt)
        | [raise_stmt](https://docs.python.org/3/reference/simple_stmts.html#grammar-token-python-grammar-raise_stmt)
        | [break_stmt](https://docs.python.org/3/reference/simple_stmts.html#grammar-token-python-grammar-break_stmt)
        | [continue_stmt](https://docs.python.org/3/reference/simple_stmts.html#grammar-token-python-grammar-continue_stmt)
        | [import_stmt](https://docs.python.org/3/reference/simple_stmts.html#grammar-token-python-grammar-import_stmt)
        | [future_stmt](https://docs.python.org/3/reference/simple_stmts.html#grammar-token-python-grammar-future_stmt)
        | [global_stmt](https://docs.python.org/3/reference/simple_stmts.html#grammar-token-python-grammar-global_stmt)
        | [nonlocal_stmt](https://docs.python.org/3/reference/simple_stmts.html#grammar-token-python-grammar-nonlocal_stmt)
        | [type_stmt](https://docs.python.org/3/reference/simple_stmts.html#grammar-token-python-grammar-type_stmt)

```

## 7.1. Expression statements[¶](https://docs.python.org/3/reference/simple_stmts.html#expression-statements "Link to this heading")
Expression statements are used (mostly interactively) to compute and write a value, or (usually) to call a procedure (a function that returns no meaningful result; in Python, procedures return the value `None`). Other uses of expression statements are allowed and occasionally useful. The syntax for an expression statement is:
```
**expression_stmt** ::= [starred_expression](https://docs.python.org/3/reference/expressions.html#grammar-token-python-grammar-starred_expression)

```

An expression statement evaluates the expression list (which may be a single expression).
In interactive mode, if the value is not `None`, it is converted to a string using the built-in [`repr()`](https://docs.python.org/3/library/functions.html#repr "repr") function and the resulting string is written to standard output on a line by itself (except if the result is `None`, so that procedure calls do not cause any output.)
## 7.2. Assignment statements[¶](https://docs.python.org/3/reference/simple_stmts.html#assignment-statements "Link to this heading")
Assignment statements are used to (re)bind names to values and to modify attributes or items of mutable objects:
```
**assignment_stmt** ::= ([target_list](https://docs.python.org/3/reference/simple_stmts.html#grammar-token-python-grammar-target_list) "=")+ ([starred_expression](https://docs.python.org/3/reference/expressions.html#grammar-token-python-grammar-starred_expression) | [yield_expression](https://docs.python.org/3/reference/expressions.html#grammar-token-python-grammar-yield_expression))
**target_list**   ::= [target](https://docs.python.org/3/reference/simple_stmts.html#grammar-token-python-grammar-target) ("," [target](https://docs.python.org/3/reference/simple_stmts.html#grammar-token-python-grammar-target))* [","]
**target**     ::= [identifier](https://docs.python.org/3/reference/lexical_analysis.html#grammar-token-python-grammar-identifier)
          | "(" [[target_list](https://docs.python.org/3/reference/simple_stmts.html#grammar-token-python-grammar-target_list)] ")"
          | "[" [[target_list](https://docs.python.org/3/reference/simple_stmts.html#grammar-token-python-grammar-target_list)] "]"
          | [attributeref](https://docs.python.org/3/reference/expressions.html#grammar-token-python-grammar-attributeref)
          | [subscription](https://docs.python.org/3/reference/expressions.html#grammar-token-python-grammar-subscription)
          | [slicing](https://docs.python.org/3/reference/expressions.html#grammar-token-python-grammar-slicing)
          | "*" [target](https://docs.python.org/3/reference/simple_stmts.html#grammar-token-python-grammar-target)