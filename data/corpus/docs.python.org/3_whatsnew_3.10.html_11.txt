Title: Improvements in Python 3.10 Modules
URL: https://docs.python.org/3/whatsnew/3.10.html
Summary: Python 3.10 introduces several improvements across its modules, including the addition of the `connect_accepted_socket()` method in asyncio, a change in the argparse help documentation from 'optional arguments' to 'options', and updates to the array module's `index()` method.
---

## Improved Modules[¶](https://docs.python.org/3/whatsnew/3.10.html#improved-modules "Link to this heading")
### asyncio[¶](https://docs.python.org/3/whatsnew/3.10.html#asyncio "Link to this heading")
Add missing `connect_accepted_socket()` method. (Contributed by Alex Grönholm in [bpo-41332](https://bugs.python.org/issue?@action=redirect&bpo=41332).)
### argparse[¶](https://docs.python.org/3/whatsnew/3.10.html#argparse "Link to this heading")
Misleading phrase “optional arguments” was replaced with “options” in argparse help. Some tests might require adaptation if they rely on exact output match. (Contributed by Raymond Hettinger in [bpo-9694](https://bugs.python.org/issue?@action=redirect&bpo=9694).)
### array[¶](https://docs.python.org/3/whatsnew/3.10.html#array "Link to this heading")
The [`index()`](https://docs.python.org/3/library/array.html#array.array.index "array.array.index") method of [`array.array`](https://docs.python.org/3/library/array.html#array.array "array.array") now has optional _start_ and _stop_ parameters. (Contributed by Anders Lorentsen and Zackery Spytz in [bpo-31956](https://bugs.python.org/issue?@action=redirect&bpo=31956).)
### asynchat, asyncore, smtpd[¶](https://docs.python.org/3/whatsnew/3.10.html#asynchat-asyncore-smtpd "Link to this heading")
These modules have been marked as deprecated in their module documentation since Python 3.6. An import-time [`DeprecationWarning`](https://docs.python.org/3/library/exceptions.html#DeprecationWarning "DeprecationWarning") has now been added to all three of these modules.
### base64[¶](https://docs.python.org/3/whatsnew/3.10.html#base64 "Link to this heading")
Add [`base64.b32hexencode()`](https://docs.python.org/3/library/base64.html#base64.b32hexencode "base64.b32hexencode") and [`base64.b32hexdecode()`](https://docs.python.org/3/library/base64.html#base64.b32hexdecode "base64.b32hexdecode") to support the Base32 Encoding with Extended Hex Alphabet.
### bdb[¶](https://docs.python.org/3/whatsnew/3.10.html#bdb "Link to this heading")
Add `clearBreakpoints()` to reset all set breakpoints. (Contributed by Irit Katriel in [bpo-24160](https://bugs.python.org/issue?@action=redirect&bpo=24160).)
### bisect[¶](https://docs.python.org/3/whatsnew/3.10.html#bisect "Link to this heading")
Added the possibility of providing a _key_ function to the APIs in the [`bisect`](https://docs.python.org/3/library/bisect.html#module-bisect "bisect: Array bisection algorithms for binary searching.") module. (Contributed by Raymond Hettinger in [bpo-4356](https://bugs.python.org/issue?@action=redirect&bpo=4356).)
### codecs[¶](https://docs.python.org/3/whatsnew/3.10.html#codecs "Link to this heading")
Add a [`codecs.unregister()`](https://docs.python.org/3/library/codecs.html#codecs.unregister "codecs.unregister") function to unregister a codec search function. (Contributed by Hai Shi in [bpo-41842](https://bugs.python.org/issue?@action=redirect&bpo=41842).)
### collections.abc[¶](https://docs.python.org/3/whatsnew/3.10.html#collections-abc "Link to this heading")
The `__args__` of the [parameterized generic](https://docs.python.org/3/library/stdtypes.html#types-genericalias) for [`collections.abc.Callable`](https://docs.python.org/3/library/collections.abc.html#collections.abc.Callable "collections.abc.Callable") are now consistent with [`typing.Callable`](https://docs.python.org/3/library/typing.html#typing.Callable "typing.Callable"). [`collections.abc.Callable`](https://docs.python.org/3/library/collections.abc.html#collections.abc.Callable "collections.abc.Callable") generic now flattens type parameters, similar to what [`typing.Callable`](https://docs.python.org/3/library/typing.html#typing.Callable "typing.Callable") currently does. This means that `collections.abc.Callable[[int, str], str]` will have `__args__` of `(int, str, str)`; previously this was `([int, str], str)`. To allow this change, [`types.GenericAlias`](https://docs.python.org/3/library/types.html#types.GenericAlias "types.GenericAlias") can now be subclassed, and a subclass will be returned when subscripting the [`collections.abc.Callable`](https://docs.python.org/3/library/collections.abc.html#collections.abc.Callable "collections.abc.Callable") type. Note that a [`TypeError`](https://docs.python.org/3/library/exceptions.html#TypeError "TypeError") may be raised for invalid forms of parameterizing [`collections.abc.Callable`](https://docs.python.org/3/library/collections.abc.html#collections.abc.Callable "collections.abc.Callable") which may have passed silently in Python 3.9. (Contributed by Ken Jin in [bpo-42195](https://bugs.python.org/issue?@action=redirect&bpo=42195).)
### contextlib[¶](https://docs.python.org/3/whatsnew/3.10.html#contextlib "Link to this heading")
Add a [`contextlib.aclosing()`](https://docs.python.org/3/library/contextlib.html#contextlib.aclosing "contextlib.aclosing") context manager to safely close async generators and objects representing asynchronously rele