Title: PyObject_SetAttrString Function
URL: https://docs.python.org/3/c-api/object.html
Summary: The `PyObject_SetAttrString` function sets an attribute of a Python object using a UTF-8 encoded string for the attribute name. If the value is `NULL`, the attribute is deleted, though this feature is deprecated in favor of `PyObject_DelAttrString()`. It is recommended to limit the number of different attribute names used with this function.
---

intPyObject_SetAttrString([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*o, constchar*attr_name, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*v)[¶](https://docs.python.org/3/c-api/object.html#c.PyObject_SetAttrString "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
This is the same as [`PyObject_SetAttr()`](https://docs.python.org/3/c-api/object.html#c.PyObject_SetAttr "PyObject_SetAttr"), but _attr_name_ is specified as a constchar* UTF-8 encoded bytes string, rather than a [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*.
If _v_ is `NULL`, the attribute is deleted, but this feature is deprecated in favour of using [`PyObject_DelAttrString()`](https://docs.python.org/3/c-api/object.html#c.PyObject_DelAttrString "PyObject_DelAttrString").
The number of different attribute names passed to this function should be kept small, usually by using a statically allocated string as _attr_name_. For attribute names that aren’t known at compile time, prefer calling [`PyUnicode_FromString()`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_FromString "PyUnicode_FromString") and [`PyObject_SetAttr()`](https://docs.python.org/3/c-api/object.html#c.PyObject_SetAttr "PyObject_SetAttr") directly. For more details, see [`PyUnicode_InternFromString()`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_InternFromString "PyUnicode_InternFromString"), which may be used internally to create a key object. 

intPyObject_GenericSetAttr([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*o, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*name, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*value)[¶](https://docs.python.org/3/c-api/object.html#c.PyObject_GenericSetAttr "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Generic attribute setter and deleter function that is meant to be put into a type object’s [`tp_setattro`](https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_setattro "PyTypeObject.tp_setattro") slot. It looks for a data descriptor in the dictionary of classes in the object’s MRO, and if found it takes preference over setting or deleting the attribute in the instance dictionary. Otherwise, the attribute is set or deleted in the object’s [`__dict__`](https://docs.python.org/3/reference/datamodel.html#object.__dict__ "object.__dict__") (if present). On success, `0` is returned, otherwise an [`AttributeError`](https://docs.python.org/3/library/exceptions.html#AttributeError "AttributeError") is raised and `-1` is returned. 

intPyObject_DelAttr([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*o, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*attr_name)[¶](https://docs.python.org/3/c-api/object.html#c.PyObject_DelAttr "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable) since version 3.13._
Delete attribute named _attr_name_ , for object _o_. Returns `-1` on failure. This is the equivalent of the Python statement `del o.attr_name`. 

intPyObject_DelAttrString([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*o, constchar*attr_name)[¶](https://docs.python.org/3/c-api/object.html#c.PyObject_DelAttrString "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable) since version 3.13._
This is the same as [`PyObject_DelAttr()`](https://docs.python.org/3/c-api/object.html#c.PyObject_DelAttr "PyObject_DelAttr"), but _attr_name_ is specified as a constchar* UTF-8 encoded bytes string, rather than a [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*.
The number of different attribute names passed to this function should be kept small, usually by using a statically allocated string as _attr_name_. For attribute names that aren’t known at compile time, prefer calling [`PyUnicode_FromString()`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_FromString "PyUnicode_FromString") and [`PyObject_DelAttr()`](https://docs.python.org/3/c-api/object.html#c.PyObject_DelAttr "PyObject_DelAttr") directly. For more details, see [`PyUnicode_InternFromString()`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_InternFromString "PyUnicode_InternFromString"), which may be used internally to create a key object for lookup.