Title: SSLSocket.getpeercert Method
URL: https://docs.python.org/3/library/ssl.html
Summary: The SSLSocket.getpeercert method retrieves the certificate of the peer in an SSL connection. If no certificate is present, it returns None. If the SSL handshake is incomplete, it raises a ValueError. When binary_form is False, it returns a dict containing details like 'subject' and 'issuer' if validated; otherwise, the dict is empty.
---

SSLSocket.getpeercert(_binary_form =False_)[¶](https://docs.python.org/3/library/ssl.html#ssl.SSLSocket.getpeercert "Link to this definition")
    
If there is no certificate for the peer on the other end of the connection, return `None`. If the SSL handshake hasn’t been done yet, raise [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError "ValueError").
If the `binary_form` parameter is [`False`](https://docs.python.org/3/library/constants.html#False "False"), and a certificate was received from the peer, this method returns a [`dict`](https://docs.python.org/3/library/stdtypes.html#dict "dict") instance. If the certificate was not validated, the dict is empty. If the certificate was validated, it returns a dict with several keys, amongst them `subject` (the principal for which the certificate was issued) and `issuer` (the principal issuing the certificate). If a certificate contains an instance of the _Subject Alternative Name_ extension (see [**RFC 3280**](https://datatracker.ietf.org/doc/html/rfc3280.html)), there will also be a `subjectAltName` key in the dictionary.
The `subject` and `issuer` fields are tuples containing the sequence of relative distinguished names (RDNs) given in the certificate’s data structure for the respective fields, and each RDN is a sequence of name-value pairs. Here is a real-world example:
```
{'issuer': ((('countryName', 'IL'),),
      (('organizationName', 'StartCom Ltd.'),),
      (('organizationalUnitName',
       'Secure Digital Certificate Signing'),),
      (('commonName',
       'StartCom Class 2 Primary Intermediate Server CA'),)),
 'notAfter': 'Nov 22 08:15:19 2013 GMT',
 'notBefore': 'Nov 21 03:09:52 2011 GMT',
 'serialNumber': '95F0',
 'subject': ((('description', '571208-SLe257oHY9fVQ07Z'),),
       (('countryName', 'US'),),
       (('stateOrProvinceName', 'California'),),
       (('localityName', 'San Francisco'),),
       (('organizationName', 'Electronic Frontier Foundation, Inc.'),),
       (('commonName', '*.eff.org'),),
       (('emailAddress', 'hostmaster@eff.org'),)),
 'subjectAltName': (('DNS', '*.eff.org'), ('DNS', 'eff.org')),
 'version': 3}