Title: Library Updates in Python
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section highlights several library updates in Python, including fixes and new features such as improved wildcard searching in xml.etree.ElementTree, the implementation of pathlib.path.link_to() for creating hard links, and adjustments to file modes in fileinput.FileInput.
---

### Library[¶](https://docs.python.org/3/whatsnew/changelog.html#id448 "Link to this heading")
  * [bpo-35952](https://bugs.python.org/issue?@action=redirect&bpo=35952): Fix pythoninfo when the compiler is missing.
  * [bpo-28238](https://bugs.python.org/issue?@action=redirect&bpo=28238): The `.find*()` methods of xml.etree.ElementTree can now search for wildcards like `{*}tag` and `{ns}*` that match a tag in any namespace or all tags in a namespace. Patch by Stefan Behnel.
  * [bpo-26978](https://bugs.python.org/issue?@action=redirect&bpo=26978): `pathlib.path.link_to()` is now implemented. It creates a hard link pointing to a path.
  * [bpo-1613500](https://bugs.python.org/issue?@action=redirect&bpo=1613500): [`fileinput.FileInput`](https://docs.python.org/3/library/fileinput.html#fileinput.FileInput "fileinput.FileInput") now uses the input file mode to correctly set the output file mode (previously it was hardcoded to `'w'`) when `inplace=True` is passed to its constructor.
  * [bpo-36734](https://bugs.python.org/issue?@action=redirect&bpo=36734): Fix compilation of `faulthandler.c` on HP-UX. Initialize `stack_t current_stack` to zero using `memset()`.
  * [bpo-13611](https://bugs.python.org/issue?@action=redirect&bpo=13611): The xml.etree.ElementTree packages gained support for C14N 2.0 serialisation. Patch by Stefan Behnel.
  * [bpo-36669](https://bugs.python.org/issue?@action=redirect&bpo=36669): Add missing matrix multiplication operator support to weakref.proxy.
  * [bpo-36676](https://bugs.python.org/issue?@action=redirect&bpo=36676): The XMLParser() in xml.etree.ElementTree provides namespace prefix context to the parser target if it defines the callback methods “start_ns()” and/or “end_ns()”. Patch by Stefan Behnel.
  * [bpo-36673](https://bugs.python.org/issue?@action=redirect&bpo=36673): The TreeBuilder and XMLPullParser in xml.etree.ElementTree gained support for parsing comments and processing instructions. Patch by Stefan Behnel.
  * [bpo-36650](https://bugs.python.org/issue?@action=redirect&bpo=36650): The C version of functools.lru_cache() was treating calls with an empty `**kwargs` dictionary as being distinct from calls with no keywords at all. This did not result in an incorrect answer, but it did trigger an unexpected cache miss.
  * [bpo-28552](https://bugs.python.org/issue?@action=redirect&bpo=28552): Fix `distutils.sysconfig` if [`sys.executable`](https://docs.python.org/3/library/sys.html#sys.executable "sys.executable") is `None` or an empty string: use [`os.getcwd()`](https://docs.python.org/3/library/os.html#os.getcwd "os.getcwd") to initialize `project_base`. Fix also the distutils build command: don’t use [`sys.executable`](https://docs.python.org/3/library/sys.html#sys.executable "sys.executable") if it is `None` or an empty string.
  * [bpo-35755](https://bugs.python.org/issue?@action=redirect&bpo=35755): [`shutil.which()`](https://docs.python.org/3/library/shutil.html#shutil.which "shutil.which") and `distutils.spawn.find_executable` now use `os.confstr("CS_PATH")` if available instead of [`os.defpath`](https://docs.python.org/3/library/os.html#os.defpath "os.defpath"), if the `PATH` environment variable is not set. Moreover, don’t use `os.confstr("CS_PATH")` nor [`os.defpath`](https://docs.python.org/3/library/os.html#os.defpath "os.defpath") if the `PATH` environment variable is set to an empty string.
  * [bpo-25430](https://bugs.python.org/issue?@action=redirect&bpo=25430): improve performance of `IPNetwork.__contains__()`
  * [bpo-30485](https://bugs.python.org/issue?@action=redirect&bpo=30485): Path expressions in xml.etree.ElementTree can now avoid explicit namespace prefixes for tags (or the “{namespace}tag” notation) by passing a default namespace with an empty string prefix.
  * [bpo-36613](https://bugs.python.org/issue?@action=redirect&bpo=36613): Fix [`asyncio`](https://docs.python.org/3/library/asyncio.html#module-asyncio "asyncio: Asynchronous I/O.") wait() not removing callback if exception
  * [bpo-36598](https://bugs.python.org/issue?@action=redirect&bpo=36598): Fix `isinstance` check for Mock objects with spec when the code is executed under tracing. Patch by Karthikeyan Singaravelan.
  * [bpo-18748](https://bugs.python.org/issue?@action=redirect&bpo=18748): In development mode ([`-X`](https://docs.python.org/3/using/cmdline.html#cmdoption-X) `dev`) and in debug build, the [`io.IOBase`](https://docs.python.org/3/library/io.html#io.IOBase "io.IOBase") destructor now logs `close()` exceptions. These exceptions are silent by default in release mode.
  * [bpo-36575](https://bugs.python.org/issue?@action=redirect&bpo=36575): The `_lsprof` module now uses internal timer same to `time.perf_counter()` by default. `gettimeofday(2)` was used on Unix. New timer has better resolution on most Unix platforms and timings are no longer impacted by system clock updates since `perf_counter()` is monotonic. Patch by Inada Naoki.
  * [bpo-33461](https://bugs.python.org/iss