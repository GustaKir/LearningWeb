Title: XML SAX Handler - DTDHandler and EntityResolver
URL: https://docs.python.org/3/library/xml.sax.handler.html
Summary: This section details the methods in the XML SAX Handler for processing DTD events, including notation and unparsed entity declarations through the DTDHandler class. Additionally, it describes the EntityResolver class, specifically the resolveEntity method, which is used to resolve the system identifier of an entity.
---

DTDHandler.notationDecl(_name_ , _publicId_ , _systemId_)[¶](https://docs.python.org/3/library/xml.sax.handler.html#xml.sax.handler.DTDHandler.notationDecl "Link to this definition")
    
Handle a notation declaration event. 

DTDHandler.unparsedEntityDecl(_name_ , _publicId_ , _systemId_ , _ndata_)[¶](https://docs.python.org/3/library/xml.sax.handler.html#xml.sax.handler.DTDHandler.unparsedEntityDecl "Link to this definition")
    
Handle an unparsed entity declaration event.
## EntityResolver Objects[¶](https://docs.python.org/3/library/xml.sax.handler.html#entityresolver-objects "Link to this heading") 

EntityResolver.resolveEntity(_publicId_ , _systemId_)[¶](https://docs.python.org/3/library/xml.sax.handler.html#xml.sax.handler.EntityResolver.resolveEntity "Link to this definition")
    
Resolve the system identifier of an entity and return either the system identifier to read from as a string, or an InputSource to read from. The default implementation returns _systemId_.
## ErrorHandler Objects[¶](https://docs.python.org/3/library/xml.sax.handler.html#errorhandler-objects "Link to this heading")
Objects with this interface are used to receive error and warning information from the [`XMLReader`](https://docs.python.org/3/library/xml.sax.reader.html#xml.sax.xmlreader.XMLReader "xml.sax.xmlreader.XMLReader"). If you create an object that implements this interface, then register the object with your [`XMLReader`](https://docs.python.org/3/library/xml.sax.reader.html#xml.sax.xmlreader.XMLReader "xml.sax.xmlreader.XMLReader"), the parser will call the methods in your object to report all warnings and errors. There are three levels of errors available: warnings, (possibly) recoverable errors, and unrecoverable errors. All methods take a [`SAXParseException`](https://docs.python.org/3/library/xml.sax.html#xml.sax.SAXParseException "xml.sax.SAXParseException") as the only parameter. Errors and warnings may be converted to an exception by raising the passed-in exception object. 

ErrorHandler.error(_exception_)[¶](https://docs.python.org/3/library/xml.sax.handler.html#xml.sax.handler.ErrorHandler.error "Link to this definition")
    
Called when the parser encounters a recoverable error. If this method does not raise an exception, parsing may continue, but further document information should not be expected by the application. Allowing the parser to continue may allow additional errors to be discovered in the input document. 

ErrorHandler.fatalError(_exception_)[¶](https://docs.python.org/3/library/xml.sax.handler.html#xml.sax.handler.ErrorHandler.fatalError "Link to this definition")
    
Called when the parser encounters an error it cannot recover from; parsing is expected to terminate when this method returns. 

ErrorHandler.warning(_exception_)[¶](https://docs.python.org/3/library/xml.sax.handler.html#xml.sax.handler.ErrorHandler.warning "Link to this definition")
    
Called when the parser presents minor warning information to the application. Parsing is expected to continue when this method returns, and document information will continue to be passed to the application. Raising an exception in this method will cause parsing to end.
## LexicalHandler Objects[¶](https://docs.python.org/3/library/xml.sax.handler.html#lexicalhandler-objects "Link to this heading")
Optional SAX2 handler for lexical events.
This handler is used to obtain lexical information about an XML document. Lexical information includes information describing the document encoding used and XML comments embedded in the document, as well as section boundaries for the DTD and for any CDATA sections. The lexical handlers are used in the same manner as content handlers.
Set the LexicalHandler of an XMLReader by using the setProperty method with the property identifier `'http://xml.org/sax/properties/lexical-handler'`. 

LexicalHandler.comment(_content_)[¶](https://docs.python.org/3/library/xml.sax.handler.html#xml.sax.handler.LexicalHandler.comment "Link to this definition")
    
Reports a comment anywhere in the document (including the DTD and outside the document element). 

LexicalHandler.startDTD(_name_ , _public_id_ , _system_id_)[¶](https://docs.python.org/3/library/xml.sax.handler.html#xml.sax.handler.LexicalHandler.startDTD "Link to this definition")
    
Reports the start of the DTD declarations if the document has an associated DTD. 

LexicalHandler.endDTD()[¶](https://docs.python.org/3/library/xml.sax.handler.html#xml.sax.handler.LexicalHandler.endDTD "Link to this definition")
    
Reports the end of DTD declaration. 

LexicalHandler.startCDATA()[¶](https://docs.python.org/3/library/xml.sax.handler.html#xml.sax.handler.LexicalHandler.startCDATA "Link to this definition")
    
Reports the start of a CDATA marked section.
The contents of the CDATA marked section will be reported through the characters handler.