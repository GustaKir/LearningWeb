Title: Python 3.8.0 Alpha 2 Release Notes
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: The document outlines the changes in Python 3.8.0 alpha 2, including core and built-in improvements, such as raising a SyntaxError for invalid assignment to __debug__, doubling the speed of class variable writes, and updates to error messages for invalid types in __fspath__.
---

## Python 3.8.0 alpha 2[¶](https://docs.python.org/3/whatsnew/changelog.html#python-3-8-0-alpha-2 "Link to this heading")
_Release date: 2019-02-25_
### Core and Builtins[¶](https://docs.python.org/3/whatsnew/changelog.html#id467 "Link to this heading")
  * [bpo-36052](https://bugs.python.org/issue?@action=redirect&bpo=36052): Raise a [`SyntaxError`](https://docs.python.org/3/library/exceptions.html#SyntaxError "SyntaxError") when assigning a value to `__debug__` with the Assignment Operator. Contributed by Stéphane Wirtel and Pablo Galindo.
  * [bpo-36012](https://bugs.python.org/issue?@action=redirect&bpo=36012): Doubled the speed of class variable writes. When a non-dunder attribute was updated, there was an unnecessary call to update slots.
  * [bpo-35942](https://bugs.python.org/issue?@action=redirect&bpo=35942): The error message emitted when returning invalid types from `__fspath__` in interfaces that allow passing [`PathLike`](https://docs.python.org/3/library/os.html#os.PathLike "os.PathLike") objects has been improved and now it does explain the origin of the error.
  * [bpo-36016](https://bugs.python.org/issue?@action=redirect&bpo=36016): `gc.get_objects` can now receive an optional parameter indicating a generation to get objects from. Patch by Pablo Galindo.
  * [bpo-1054041](https://bugs.python.org/issue?@action=redirect&bpo=1054041): When the main interpreter exits due to an uncaught KeyboardInterrupt, the process now exits in the appropriate manner for its parent process to detect that a SIGINT or ^C terminated the process. This allows shells and batch scripts to understand that the user has asked them to stop.
  * [bpo-35992](https://bugs.python.org/issue?@action=redirect&bpo=35992): Fix `__class_getitem__()` not being called on a class with a custom non-subscriptable metaclass.
  * [bpo-35993](https://bugs.python.org/issue?@action=redirect&bpo=35993): Fix a crash on fork when using subinterpreters. Contributed by Stéphane Wirtel
  * [bpo-35991](https://bugs.python.org/issue?@action=redirect&bpo=35991): Fix a potential double free in Modules/_randommodule.c.
  * [bpo-35961](https://bugs.python.org/issue?@action=redirect&bpo=35961): Fix a crash in slice_richcompare(): use strong references rather than stolen references for the two temporary internal tuples.
  * [bpo-35911](https://bugs.python.org/issue?@action=redirect&bpo=35911): Enable the creation of cell objects by adding a `cell.__new__` method, and expose the type `cell` in `Lib/types.py` under the name CellType. Patch by Pierre Glaser.
  * [bpo-12822](https://bugs.python.org/issue?@action=redirect&bpo=12822): Use monotonic clock for `pthread_cond_timedwait` when `pthread_condattr_setclock` and `CLOCK_MONOTONIC` are available.
  * [bpo-15248](https://bugs.python.org/issue?@action=redirect&bpo=15248): The compiler emits now syntax warnings in the case when a comma is likely missed before tuple or list.
  * [bpo-35886](https://bugs.python.org/issue?@action=redirect&bpo=35886): The implementation of PyInterpreterState has been moved into the internal header files (guarded by Py_BUILD_CORE).
  * [bpo-31506](https://bugs.python.org/issue?@action=redirect&bpo=31506): Clarify the errors reported when `object.__new__` and `object.__init__` receive more than one argument. Contributed by Sanyam Khurana.
  * [bpo-35724](https://bugs.python.org/issue?@action=redirect&bpo=35724): Signal-handling is now guaranteed to happen relative to the main interpreter.
  * [bpo-33608](https://bugs.python.org/issue?@action=redirect&bpo=33608): We added a new internal _Py_AddPendingCall() that operates relative to the provided interpreter. This allows us to use the existing implementation to ask another interpreter to do work that cannot be done in the current interpreter, like decref an object the other interpreter owns. The existing Py_AddPendingCall() only operates relative to the main interpreter.
  * [bpo-33989](https://bugs.python.org/issue?@action=redirect&bpo=33989): Fix a possible crash in [`list.sort()`](https://docs.python.org/3/library/stdtypes.html#list.sort "list.sort") when sorting objects with `ob_type->tp_richcompare == NULL`. Patch by Zackery Spytz.