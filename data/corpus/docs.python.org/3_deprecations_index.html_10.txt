Title: Deprecation of Python Configuration Flags
URL: https://docs.python.org/3/deprecations/index.html
Summary: This section outlines deprecated Python configuration flags and their suggested replacements. Key flags include `Py_UnbufferedStdioFlag`, with `PyConfig.buffered_stdio` as a new alternative; `Py_HashRandomizationFlag`, replaced by `PyConfig.use_hash_seed` and `PyConfig.hash_seed`; `Py_IsolatedFlag`, which is superseded by `PyConfig.isolated`; and `Py_LegacyWindowsFSEncodingFlag`, among others.
---

irectory "PyConfig.user_site_directory") instead.
    * [`Py_UnbufferedStdioFlag`](https://docs.python.org/3/c-api/init.html#c.Py_UnbufferedStdioFlag "Py_UnbufferedStdioFlag"): Use [`PyConfig.buffered_stdio`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.buffered_stdio "PyConfig.buffered_stdio") instead.
    * [`Py_HashRandomizationFlag`](https://docs.python.org/3/c-api/init.html#c.Py_HashRandomizationFlag "Py_HashRandomizationFlag"): Use [`PyConfig.use_hash_seed`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.use_hash_seed "PyConfig.use_hash_seed") and [`PyConfig.hash_seed`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.hash_seed "PyConfig.hash_seed") instead.
    * [`Py_IsolatedFlag`](https://docs.python.org/3/c-api/init.html#c.Py_IsolatedFlag "Py_IsolatedFlag"): Use [`PyConfig.isolated`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.isolated "PyConfig.isolated") instead.
    * [`Py_LegacyWindowsFSEncodingFlag`](https://docs.python.org/3/c-api/init.html#c.Py_LegacyWindowsFSEncodingFlag "Py_LegacyWindowsFSEncodingFlag"): Use [`PyPreConfig.legacy_windows_fs_encoding`](https://docs.python.org/3/c-api/init_config.html#c.PyPreConfig.legacy_windows_fs_encoding "PyPreConfig.legacy_windows_fs_encoding") instead.
    * [`Py_LegacyWindowsStdioFlag`](https://docs.python.org/3/c-api/init.html#c.Py_LegacyWindowsStdioFlag "Py_LegacyWindowsStdioFlag"): Use [`PyConfig.legacy_windows_stdio`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.legacy_windows_stdio "PyConfig.legacy_windows_stdio") instead.
    * `Py_FileSystemDefaultEncoding`: Use [`PyConfig.filesystem_encoding`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.filesystem_encoding "PyConfig.filesystem_encoding") instead.
    * `Py_HasFileSystemDefaultEncoding`: Use [`PyConfig.filesystem_encoding`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.filesystem_encoding "PyConfig.filesystem_encoding") instead.
    * `Py_FileSystemDefaultEncodeErrors`: Use [`PyConfig.filesystem_errors`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.filesystem_errors "PyConfig.filesystem_errors") instead.
    * `Py_UTF8Mode`: Use [`PyPreConfig.utf8_mode`](https://docs.python.org/3/c-api/init_config.html#c.PyPreConfig.utf8_mode "PyPreConfig.utf8_mode") instead. (see [`Py_PreInitialize()`](https://docs.python.org/3/c-api/init_config.html#c.Py_PreInitialize "Py_PreInitialize"))
The [`Py_InitializeFromConfig()`](https://docs.python.org/3/c-api/init.html#c.Py_InitializeFromConfig "Py_InitializeFromConfig") API should be used with [`PyConfig`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig "PyConfig") instead.