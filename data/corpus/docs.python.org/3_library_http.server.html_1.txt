Title: HTTPServer and ThreadingHTTPServer Classes
URL: https://docs.python.org/3/library/http.server.html
Summary: The `HTTPServer` class extends `TCPServer` to manage server address details and allow handlers to access server information. The `ThreadingHTTPServer` class functions similarly but employs threading for handling requests, utilizing `ThreadingMixIn` for better concurrency.
---

```


_class_ http.server.HTTPServer(_server_address_ , _RequestHandlerClass_)[¶](https://docs.python.org/3/library/http.server.html#http.server.HTTPServer "Link to this definition")
    
This class builds on the [`TCPServer`](https://docs.python.org/3/library/socketserver.html#socketserver.TCPServer "socketserver.TCPServer") class by storing the server address as instance variables named `server_name` and `server_port`. The server is accessible by the handler, typically through the handler’s `server` instance variable. 

_class_ http.server.ThreadingHTTPServer(_server_address_ , _RequestHandlerClass_)[¶](https://docs.python.org/3/library/http.server.html#http.server.ThreadingHTTPServer "Link to this definition")
    
This class is identical to HTTPServer but uses threads to handle requests by using the [`ThreadingMixIn`](https://docs.python.org/3/library/socketserver.html#socketserver.ThreadingMixIn "socketserver.ThreadingMixIn"). This is useful to handle web browsers pre-opening sockets, on which [`HTTPServer`](https://docs.python.org/3/library/http.server.html#http.server.HTTPServer "http.server.HTTPServer") would wait indefinitely.
Added in version 3.7.
The [`HTTPServer`](https://docs.python.org/3/library/http.server.html#http.server.HTTPServer "http.server.HTTPServer") and [`ThreadingHTTPServer`](https://docs.python.org/3/library/http.server.html#http.server.ThreadingHTTPServer "http.server.ThreadingHTTPServer") must be given a _RequestHandlerClass_ on instantiation, of which this module provides three different variants: 

_class_ http.server.BaseHTTPRequestHandler(_request_ , _client_address_ , _server_)[¶](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler "Link to this definition")
    
This class is used to handle the HTTP requests that arrive at the server. By itself, it cannot respond to any actual HTTP requests; it must be subclassed to handle each request method (e.g. GET or POST). [`BaseHTTPRequestHandler`](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler "http.server.BaseHTTPRequestHandler") provides a number of class and instance variables, and methods for use by subclasses.
The handler will parse the request and the headers, then call a method specific to the request type. The method name is constructed from the request. For example, for the request method `SPAM`, the `do_SPAM()` method will be called with no arguments. All of the relevant information is stored in instance variables of the handler. Subclasses should not need to override or extend the `__init__()` method.
[`BaseHTTPRequestHandler`](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler "http.server.BaseHTTPRequestHandler") has the following instance variables: 

client_address[¶](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler.client_address "Link to this definition")
    
Contains a tuple of the form `(host, port)` referring to the client’s address. 

server[¶](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler.server "Link to this definition")
    
Contains the server instance. 

close_connection[¶](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler.close_connection "Link to this definition")
    
Boolean that should be set before [`handle_one_request()`](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler.handle_one_request "http.server.BaseHTTPRequestHandler.handle_one_request") returns, indicating if another request may be expected, or if the connection should be shut down. 

requestline[¶](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler.requestline "Link to this definition")
    
Contains the string representation of the HTTP request line. The terminating CRLF is stripped. This attribute should be set by [`handle_one_request()`](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler.handle_one_request "http.server.BaseHTTPRequestHandler.handle_one_request"). If no valid request line was processed, it should be set to the empty string. 

command[¶](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler.command "Link to this definition")
    
Contains the command (request type). For example, `'GET'`. 

path[¶](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler.path "Link to this definition")
    
Contains the request path. If query component of the URL is present, then `path` includes the query. Using the terminology of [**RFC 3986**](https://datatracker.ietf.org/doc/html/rfc3986.html), `path` here includes `hier-part` and the `query`.