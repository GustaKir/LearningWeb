Title: Python 3.2 Release Notes
URL: https://docs.python.org/3/whatsnew/3.2.html
Summary: This section lists the various updates and enhancements introduced in Python 3.2, including multi-threading, optimizations, Unicode support, codecs improvements, and changes to IDLE and the documentation.
---

.parse](https://docs.python.org/3/whatsnew/3.2.html#urllib-parse)
      * [mailbox](https://docs.python.org/3/whatsnew/3.2.html#mailbox)
      * [turtledemo](https://docs.python.org/3/whatsnew/3.2.html#turtledemo)
    * [Multi-threading](https://docs.python.org/3/whatsnew/3.2.html#multi-threading)
    * [Optimizations](https://docs.python.org/3/whatsnew/3.2.html#optimizations)
    * [Unicode](https://docs.python.org/3/whatsnew/3.2.html#unicode)
    * [Codecs](https://docs.python.org/3/whatsnew/3.2.html#codecs)
    * [Documentation](https://docs.python.org/3/whatsnew/3.2.html#documentation)
    * [IDLE](https://docs.python.org/3/whatsnew/3.2.html#idle)
    * [Code Repository](https://docs.python.org/3/whatsnew/3.2.html#code-repository)
    * [Build and C API Changes](https://docs.python.org/3/whatsnew/3.2.html#build-and-c-api-changes)
    * [Porting to Python 3.2](https://docs.python.org/3/whatsnew/3.2.html#porting-to-python-3-2)


#### Previous topic
[What’s New In Python 3.3](https://docs.python.org/3/whatsnew/3.3.html "previous chapter")
#### Next topic
[What’s New In Python 3.1](https://docs.python.org/3/whatsnew/3.1.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/whatsnew/3.2.rst)


### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/whatsnew/3.1.html "What’s New In Python 3.1") |
  * [previous](https://docs.python.org/3/whatsnew/3.3.html "What’s New In Python 3.3") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [What’s New in Python](https://docs.python.org/3/whatsnew/index.html) »
  * [What’s New In Python 3.2](https://docs.python.org/3/whatsnew/3.2.html)
  * | 
  * Theme  Auto Light Dark |


# What’s New In Python 3.2[¶](https://docs.python.org/3/whatsnew/3.2.html#what-s-new-in-python-3-2 "Link to this heading") 

Author:
    
Raymond Hettinger
This article explains the new features in Python 3.2 as compared to 3.1. Python 3.2 was released on February 20, 2011. It focuses on a few highlights and gives a few examples. For full details, see the [Misc/NEWS](https://github.com/python/cpython/blob/076ca6c3c8df3030307e548d9be792ce3c1c6eea/Misc/NEWS) file.
See also
[**PEP 392**](https://peps.python.org/pep-0392/) - Python 3.2 Release Schedule
## PEP 384: Defining a Stable ABI[¶](https://docs.python.org/3/whatsnew/3.2.html#pep-384-defining-a-stable-abi "Link to this heading")
In the past, extension modules built for one Python version were often not usable with other Python versions. Particularly on Windows, every feature release of Python required rebuilding all extension modules that one wanted to use. This requirement was the result of the free access to Python interpreter internals that extension modules could use.
With Python 3.2, an alternative approach becomes available: extension modules which restrict themselves to a limited API (by defining Py_LIMITED_API) cannot use many of the internals, but are constrained to a set of API functions that are promised to be stable for several releases. As a consequence, extension modules built for 3.2 in that mode will also work with 3.3, 3.4, and so on. Extension modules that make use of details of memory structures can still be built, but will need to be recompiled for every feature release.
See also