Title: Warning Exceptions in Python
URL: https://docs.python.org/3/library/exceptions.html
Summary: This section discusses two warning exceptions in Python: `DeprecationWarning`, which is used for deprecated features and is ignored by default except in the main module, and `PendingDeprecationWarning`, which indicates features that may be deprecated in the future. The deprecation policies are outlined in PEP 387 and PEP 565.
---

_exception_ DeprecationWarning[¶](https://docs.python.org/3/library/exceptions.html#DeprecationWarning "Link to this definition")
    
Base class for warnings about deprecated features when those warnings are intended for other Python developers.
Ignored by the default warning filters, except in the `__main__` module ([**PEP 565**](https://peps.python.org/pep-0565/)). Enabling the [Python Development Mode](https://docs.python.org/3/library/devmode.html#devmode) shows this warning.
The deprecation policy is described in [**PEP 387**](https://peps.python.org/pep-0387/). 

_exception_ PendingDeprecationWarning[¶](https://docs.python.org/3/library/exceptions.html#PendingDeprecationWarning "Link to this definition")
    
Base class for warnings about features which are obsolete and expected to be deprecated in the future, but are not deprecated at the moment.
This class is rarely used as emitting a warning about a possible upcoming deprecation is unusual, and [`DeprecationWarning`](https://docs.python.org/3/library/exceptions.html#DeprecationWarning "DeprecationWarning") is preferred for already active deprecations.
Ignored by the default warning filters. Enabling the [Python Development Mode](https://docs.python.org/3/library/devmode.html#devmode) shows this warning.
The deprecation policy is described in [**PEP 387**](https://peps.python.org/pep-0387/). 

_exception_ SyntaxWarning[¶](https://docs.python.org/3/library/exceptions.html#SyntaxWarning "Link to this definition")
    
Base class for warnings about dubious syntax. 

_exception_ RuntimeWarning[¶](https://docs.python.org/3/library/exceptions.html#RuntimeWarning "Link to this definition")
    
Base class for warnings about dubious runtime behavior. 

_exception_ FutureWarning[¶](https://docs.python.org/3/library/exceptions.html#FutureWarning "Link to this definition")
    
Base class for warnings about deprecated features when those warnings are intended for end users of applications that are written in Python. 

_exception_ ImportWarning[¶](https://docs.python.org/3/library/exceptions.html#ImportWarning "Link to this definition")
    
Base class for warnings about probable mistakes in module imports.
Ignored by the default warning filters. Enabling the [Python Development Mode](https://docs.python.org/3/library/devmode.html#devmode) shows this warning. 

_exception_ UnicodeWarning[¶](https://docs.python.org/3/library/exceptions.html#UnicodeWarning "Link to this definition")
    
Base class for warnings related to Unicode. 

_exception_ EncodingWarning[¶](https://docs.python.org/3/library/exceptions.html#EncodingWarning "Link to this definition")
    
Base class for warnings related to encodings.
See [Opt-in EncodingWarning](https://docs.python.org/3/library/io.html#io-encoding-warning) for details.
Added in version 3.10. 

_exception_ BytesWarning[¶](https://docs.python.org/3/library/exceptions.html#BytesWarning "Link to this definition")
    
Base class for warnings related to [`bytes`](https://docs.python.org/3/library/stdtypes.html#bytes "bytes") and [`bytearray`](https://docs.python.org/3/library/stdtypes.html#bytearray "bytearray"). 

_exception_ ResourceWarning[¶](https://docs.python.org/3/library/exceptions.html#ResourceWarning "Link to this definition")
    
Base class for warnings related to resource usage.
Ignored by the default warning filters. Enabling the [Python Development Mode](https://docs.python.org/3/library/devmode.html#devmode) shows this warning.
Added in version 3.2.
## Exception groups[¶](https://docs.python.org/3/library/exceptions.html#exception-groups "Link to this heading")
The following are used when it is necessary to raise multiple unrelated exceptions. They are part of the exception hierarchy so they can be handled with [`except`](https://docs.python.org/3/reference/compound_stmts.html#except) like all other exceptions. In addition, they are recognised by [`except*`](https://docs.python.org/3/reference/compound_stmts.html#except-star), which matches their subgroups based on the types of the contained exceptions. 

_exception_ ExceptionGroup(_msg_ , _excs_)[¶](https://docs.python.org/3/library/exceptions.html#ExceptionGroup "Link to this definition")