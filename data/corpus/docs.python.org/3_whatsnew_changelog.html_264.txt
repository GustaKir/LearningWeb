Title: Python 3 Release Notes - Recent Changes
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: Key updates include raising only the last error in address attempts, significant optimizations in asyncio UDP speed, an update for case-insensitive matching in the re module to the latest Unicode version, a restriction on the 'fork' multiprocessing start method in ProcessPoolExecutor when using max_tasks_per_child, and ongoing changes in the sqlite3 module.
---

The default remains to raise only the last error that had occurred when multiple addresses were tried.
  * [gh-91487](https://github.com/python/cpython/issues/91487): Optimize asyncio UDP speed, over 100 times faster when transferring a large file.
  * [gh-91575](https://github.com/python/cpython/issues/91575): Update case-insensitive matching in the [`re`](https://docs.python.org/3/library/re.html#module-re "re: Regular expression operations.") module to the latest Unicode version.
  * [gh-90622](https://github.com/python/cpython/issues/90622): In `concurrent.futures.process.ProcessPoolExecutor` disallow the “fork” multiprocessing start method when the new `max_tasks_per_child` feature is used as the mix of threads+fork can hang the child processes. Default to using the safe “spawn” start method in that circumstance if no `mp_context` was supplied.
  * [gh-89022](https://github.com/python/cpython/issues/89022): In [`sqlite3`](https://docs.python.org/3/library/sqlite3.html#module-sqlite3 "sqlite3: A DB-API 2.0 implementation using SQLite 3.x."), `SQLITE_MISUSE` result codes are now mapped to [`InterfaceError`](https://docs.python.org/3/library/sqlite3.html#sqlite3.InterfaceError "sqlite3.InterfaceError") instead of [`ProgrammingError`](https://docs.python.org/3/library/sqlite3.html#sqlite3.ProgrammingError "sqlite3.ProgrammingError"). Also, more accurate exceptions are raised when binding parameters fail. Patch by Erlend E. Aasland.
  * [gh-91526](https://github.com/python/cpython/issues/91526): Stop calling `os.device_encoding(file.fileno())` in `TextIOWrapper`. It was complex, never documented, and didn’t work for most cases. (Patch by Inada Naoki.)
  * [gh-88116](https://github.com/python/cpython/issues/88116): Change the frame-related functions in the [`inspect`](https://docs.python.org/3/library/inspect.html#module-inspect "inspect: Extract information and source code from live objects.") module to return a regular object (that is backwards compatible with the old tuple-like interface) that include the extended [**PEP 657**](https://peps.python.org/pep-0657/) position information (end line number, column and end column). The affected functions are: [`inspect.getframeinfo()`](https://docs.python.org/3/library/inspect.html#inspect.getframeinfo "inspect.getframeinfo"), [`inspect.getouterframes()`](https://docs.python.org/3/library/inspect.html#inspect.getouterframes "inspect.getouterframes"), [`inspect.getinnerframes()`](https://docs.python.org/3/library/inspect.html#inspect.getinnerframes "inspect.getinnerframes"), [`inspect.stack()`](https://docs.python.org/3/library/inspect.html#inspect.stack "inspect.stack") and [`inspect.trace()`](https://docs.python.org/3/library/inspect.html#inspect.trace "inspect.trace"). Patch by Pablo Galindo.
  * [gh-69093](https://github.com/python/cpython/issues/69093): Add indexing and slicing support to [`sqlite3.Blob`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Blob "sqlite3.Blob"). Patch by Aviv Palivoda and Erlend E. Aasland.
  * [gh-69093](https://github.com/python/cpython/issues/69093): Add [context manager](https://docs.python.org/3/glossary.html#term-context-manager) support to [`sqlite3.Blob`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Blob "sqlite3.Blob"). Patch by Aviv Palivoda and Erlend E.