Title: urllib.parse — Parse URLs into components
URL: https://docs.python.org/3/library/urllib.parse.html
Summary: This section of the Python documentation covers the `urllib.parse` module, which is used for parsing URLs into their components. It includes topics on URL parsing, security considerations, handling ASCII encoded bytes, structured parse results, and URL quoting.
---

[ ![Python logo](https://docs.python.org/3/_static/py.svg) ](https://www.python.org/) dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
Theme  Auto Light Dark
### [Table of Contents](https://docs.python.org/3/contents.html)
  * [`urllib.parse` — Parse URLs into components](https://docs.python.org/3/library/urllib.parse.html)
    * [URL Parsing](https://docs.python.org/3/library/urllib.parse.html#url-parsing)
    * [URL parsing security](https://docs.python.org/3/library/urllib.parse.html#url-parsing-security)
    * [Parsing ASCII Encoded Bytes](https://docs.python.org/3/library/urllib.parse.html#parsing-ascii-encoded-bytes)
    * [Structured Parse Results](https://docs.python.org/3/library/urllib.parse.html#structured-parse-results)
    * [URL Quoting](https://docs.python.org/3/library/urllib.parse.html#url-quoting)


#### Previous topic
[`urllib.request` — Extensible library for opening URLs](https://docs.python.org/3/library/urllib.request.html "previous chapter")
#### Next topic
[`urllib.error` — Exception classes raised by urllib.request](https://docs.python.org/3/library/urllib.error.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/urllib.parse.rst)


### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/library/urllib.error.html "urllib.error — Exception classes raised by urllib.request") |
  * [previous](https://docs.python.org/3/library/urllib.request.html "urllib.request — Extensible library for opening URLs") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [The Python Standard Library](https://docs.python.org/3/library/index.html) »
  * [Internet Protocols and Support](https://docs.python.org/3/library/internet.html) »
  * [`urllib.parse` — Parse URLs into components](https://docs.python.org/3/library/urllib.parse.html)
  * | 
  * Theme  Auto Light Dark |


# `urllib.parse` — Parse URLs into components[¶](https://docs.python.org/3/library/urllib.parse.html#module-urllib.parse "Link to this heading")
**Source code:** [Lib/urllib/parse.py](https://github.com/python/cpython/tree/3.13/Lib/urllib/parse.py)
This module defines a standard interface to break Uniform Resource Locator (URL) strings up in components (addressing scheme, network location, path etc.), to combine the components back into a URL string, and to convert a “relative URL” to an absolute URL given a “base URL.”
The module has been designed to match the internet RFC on Relative Uniform Resource Locators. It supports the following URL schemes: `file`, `ftp`, `gopher`, `hdl`, `http`, `https`, `imap`, `itms-services`, `mailto`, `mms`, `news`, `nntp`, `prospero`, `rsync`, `rtsp`, `rtsps`, `rtspu`, `sftp`, `shttp`, `sip`, `sips`, `snews`, `svn`, `svn+ssh`, `telnet`, `wais`, `ws`, `wss`.
**CPython implementation detail:** The inclusion of the `itms-services` URL scheme can prevent an app from passing Apple’s App Store review process for the macOS and iOS App Stores. Handling for the `itms-services` scheme is always removed on iOS; on macOS, it _may_ be removed if CPython has been built with the [`--with-app-store-compliance`](https://docs.python.org/3/using/configure.html#cmdoption-with-app-store-compliance) option.
The [`urllib.parse`](https://docs.python.org/3/library/urllib.parse.html#module-urllib.parse "urllib.parse: Parse URLs into or assemble them from components.") module defines functions that fall into two broad categories: URL parsing and URL quoting. These are covered in detail in the following sections.
This module’s functions use the deprecated term `netloc` (or `net_loc`), which was introduced in [**RFC 1808**](https://datatracker.ietf.org/doc/html/rfc1808.html). However, this term has been obsoleted by [**RFC 3986**](https://datatracker.ietf.org/doc/html/rfc3986.html), which introduced the term `authority` as its replacement. The use of `netloc` is continued for backward compatibility.
## URL Parsing[¶](https://docs.python.org/3/library/urllib.parse.html#url-parsing "Link to this heading")
The URL parsing functions focus on splitting a URL string into its components, or on combining URL components into a URL string.