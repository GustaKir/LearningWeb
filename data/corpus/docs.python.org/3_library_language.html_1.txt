Title: Python Language Services
URL: https://docs.python.org/3/library/language.html
Summary: Python offers several modules for working with the language, including support for tokenizing, parsing, and syntax analysis. Key modules mentioned include 'ast' for Abstract Syntax Trees, which features components like abstract grammar, node classes, and various expression types.
---

# Python Language Services[¶](https://docs.python.org/3/library/language.html#python-language-services "Link to this heading")
Python provides a number of modules to assist in working with the Python language. These modules support tokenizing, parsing, syntax analysis, bytecode disassembly, and various other facilities.
These modules include:
  * [`ast` — Abstract Syntax Trees](https://docs.python.org/3/library/ast.html)
    * [Abstract Grammar](https://docs.python.org/3/library/ast.html#abstract-grammar)
    * [Node classes](https://docs.python.org/3/library/ast.html#node-classes)
      * [Root nodes](https://docs.python.org/3/library/ast.html#root-nodes)
      * [Literals](https://docs.python.org/3/library/ast.html#literals)
      * [Variables](https://docs.python.org/3/library/ast.html#variables)
      * [Expressions](https://docs.python.org/3/library/ast.html#expressions)
        * [Subscripting](https://docs.python.org/3/library/ast.html#subscripting)
        * [Comprehensions](https://docs.python.org/3/library/ast.html#comprehensions)
      * [Statements](https://docs.python.org/3/library/ast.html#statements)
        * [Imports](https://docs.python.org/3/library/ast.html#imports)
      * [Control flow](https://docs.python.org/3/library/ast.html#control-flow)
      * [Pattern matching](https://docs.python.org/3/library/ast.html#pattern-matching)
      * [Type parameters](https://docs.python.org/3/library/ast.html#type-parameters)
      * [Function and class definitions](https://docs.python.org/3/library/ast.html#function-and-class-definitions)
      * [Async and await](https://docs.python.org/3/library/ast.html#async-and-await)
    * [`ast` Helpers](https://docs.python.org/3/library/ast.html#ast-helpers)
    * [Compiler Flags](https://docs.python.org/3/library/ast.html#compiler-flags)
    * [Command-Line Usage](https://docs.python.org/3/library/ast.html#command-line-usage)
  * [`symtable` — Access to the compiler’s symbol tables](https://docs.python.org/3/library/symtable.html)
    * [Generating Symbol Tables](https://docs.python.org/3/library/symtable.html#generating-symbol-tables)
    * [Examining Symbol Tables](https://docs.python.org/3/library/symtable.html#examining-symbol-tables)
    * [Command-Line Usage](https://docs.python.org/3/library/symtable.html#command-line-usage)
  * [`token` — Constants used with Python parse trees](https://docs.python.org/3/library/token.html)
  * [`keyword` — Testing for Python keywords](https://docs.python.org/3/library/keyword.html)
  * [`tokenize` — Tokenizer for Python source](https://docs.python.org/3/library/tokenize.html)
    * [Tokenizing Input](https://docs.python.org/3/library/tokenize.html#tokenizing-input)
    * [Command-Line Usage](https://docs.python.org/3/library/tokenize.html#command-line-usage)
    * [Examples](https://docs.python.org/3/library/tokenize.html#examples)
  * [`tabnanny` — Detection of ambiguous indentation](https://docs.python.org/3/library/tabnanny.html)
  * [`pyclbr` — Python module browser support](https://docs.python.org/3/library/pyclbr.html)
    * [Function Objects](https://docs.python.org/3/library/pyclbr.html#function-objects)
    * [Class Objects](https://docs.python.org/3/library/pyclbr.html#class-objects)
  * [`py_compile` — Compile Python source files](https://docs.python.org/3/library/py_compile.html)
    * [Command-Line Interface](https://docs.python.org/3/library/py_compile.html#command-line-interface)
  * [`compileall` — Byte-compile Python libraries](https://docs.python.org/3/library/compileall.html)
    * [Command-line use](https://docs.python.org/3/library/compileall.html#command-line-use)
    * [Public functions](https://docs.python.org/3/library/compileall.html#public-functions)
  * [`dis` — Disassembler for Python bytecode](https://docs.python.org/3/library/dis.html)
    * [Command-line interface](https://docs.python.org/3/library/dis.html#command-line-interface)
    * [Bytecode analysis](https://docs.python.org/3/library/dis.html#bytecode-analysis)
    * [Analysis functions](https://docs.python.org/3/library/dis.html#analysis-functions)
    * [Python Bytecode Instructions](https://docs.python.org/3/library/dis.html#python-bytecode-instructions)
    * [Opcode collections](https://docs.python.org/3/library/dis.html#opcode-collections)
  * [`pickletools` — Tools for pickle developers](https://docs.python.org/3/library/pickletools.html)
    * [Command line usage](https://docs.python.org/3/library/pickletools.html#command-line-usage)
      * [Command line options](https://docs.python.org/3/library/pickletools.html#command-line-options)
    * [Programmatic Interface](https://docs.python.org/3/library/pickletools.html#programmatic-interface)