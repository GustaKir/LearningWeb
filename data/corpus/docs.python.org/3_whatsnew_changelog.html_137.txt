Title: Python Changelog Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This chunk lists recent patch updates to Python, including improvements to the `tokenize` module with regards to `DEDENT` tokens and the `line` attribute in `tokenize.TokenInfo` objects, along with a fix for the `__release_buffer__()` slot signature.
---

Patch by Marta GÃ³mez.
  * [gh-104976](https://github.com/python/cpython/issues/104976): Ensure that trailing `DEDENT` `tokenize.TokenInfo` objects emitted by the [`tokenize`](https://docs.python.org/3/library/tokenize.html#module-tokenize "tokenize: Lexical scanner for Python source code.") module are reported as in Python 3.11. Patch by Pablo Galindo
  * [gh-104972](https://github.com/python/cpython/issues/104972): Ensure that the `line` attribute in `tokenize.TokenInfo` objects in the [`tokenize`](https://docs.python.org/3/library/tokenize.html#module-tokenize "tokenize: Lexical scanner for Python source code.") module are always correct. Patch by Pablo Galindo
  * [gh-104955](https://github.com/python/cpython/issues/104955): Fix signature for the new [`__release_buffer__()`](https://docs.python.org/3/reference/datamodel.html#object.__release_buffer__ "object.__release_buffer__") slot. Patch by Jelle Zijlstra.
  * [gh-104690](https://github.com/python/cpython/issues/104690): Starting new threads and process creation through [`os.fork()`](https://docs.python.org/3/library/os.html#os.fork "os.fork") during interpreter shutdown (such as from [`atexit`](https://docs.python.org/3/library/atexit.html#module-atexit "atexit: Register and execute cleanup functions.") handlers) is no longer supported. It can lead to race condition between the main Python runtime thread freeing thread states while internal [`threading`](https://docs.python.org/3/library/threading.html#module-threading "threading: Thread-based parallelism.") routines are trying to allocate and use the state of just created threads. Or forked children trying to use the mid-shutdown runtime and thread state in the child process.
  * [gh-104879](https://github.com/python/cpython/issues/104879): Fix crash when accessing the `__module__` attribute of type aliases defined outside a module. Patch by Jelle Zijlstra.
  * [gh-104825](https://github.com/python/cpython/issues/104825): Tokens emitted by the [`tokenize`](https://docs.python.org/3/library/tokenize.html#module-tokenize "tokenize: Lexical scanner for Python source code.") module do not include an implicit `\n` character in the `line` attribute anymore. Patch by Pablo Galindo
  * [gh-104770](https://github.com/python/cpython/issues/104770): If a generator returns a value upon being closed, the value is now returned by [`generator.close()`](https://docs.python.org/3/reference/expressions.html#generator.close "generator.close").
  * [gh-89091](https://github.com/python/cpython/issues/89091): Raise [`RuntimeWarning`](https://docs.python.org/3/library/exceptions.html#RuntimeWarning "RuntimeWarning") for unawaited async generator methods like [`asend()`](https://docs.python.org/3/reference/expressions.html#agen.asend "agen.asend"), [`athrow()`](https://docs.python.org/3/reference/expressions.html#agen.athrow "agen.athrow") and [`aclose()`](https://docs.python.org/3/reference/expressions.html#agen.aclose "agen.aclose"). Patch by Kumar Aditya.
  * [gh-96663](https://github.com/python/cpython/issues/96663): Add a better, more introspect-able error message when setting attributes on classes without a `__dict__` and no slot member for the attribute.
  * [gh-93627](https://github.com/python/cpython/issues/93627): Update the Python pickle module implementation to match the C implementation of the pickle module. For objects setting reduction methods like [`__reduce_ex__()`](https://docs.python.org/3/library/pickle.html#object.__reduce_ex__ "object.__reduce_ex__") or [`__reduce__()`](https://docs.python.org/3/library/pickle.html#object.__reduce__ "object.__reduce__") to `None`, pickling will result in a [`TypeError`](https://docs.python.org/3/library/exceptions.html#TypeError "TypeError").
  * [gh-101006](https://github.com/python/cpython/issues/101006): Improve error handling when read [`marshal`](https://docs.python.org/3/library/marshal.html#module-marshal "marshal: Convert Python objects to streams of bytes and back \(with different constraints\).") data.
  * [gh-91095](https://github.com/python/cpython/issues/91095): Specializes calls to most Python classes. Specifically, any class that inherits from `object`, or another Python class, and does not override `__new__`.
The specialized instruction does the following:
    1. Creates the object (by calling `object.__new__`)
    2. Pushes a shim frame to the frame stack (to cleanup after `__init__`)
    3. Pushes the frame for `__init__` to the frame stack
Speeds up the instantiation of most Python classes.