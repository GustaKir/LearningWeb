Title: Data Classes in Python
URL: https://docs.python.org/3/library/dataclasses.html
Summary: This document provides an overview of data classes in Python, detailing their features, usage, and various components such as post-init processing, class variables, init-only variables, and frozen instances.
---

[ ![Python logo](https://docs.python.org/3/_static/py.svg) ](https://www.python.org/) dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
Theme  Auto Light Dark
### [Table of Contents](https://docs.python.org/3/contents.html)
  * [`dataclasses` — Data Classes](https://docs.python.org/3/library/dataclasses.html)
    * [Module contents](https://docs.python.org/3/library/dataclasses.html#module-contents)
    * [Post-init processing](https://docs.python.org/3/library/dataclasses.html#post-init-processing)
    * [Class variables](https://docs.python.org/3/library/dataclasses.html#class-variables)
    * [Init-only variables](https://docs.python.org/3/library/dataclasses.html#init-only-variables)
    * [Frozen instances](https://docs.python.org/3/library/dataclasses.html#frozen-instances)
    * [Inheritance](https://docs.python.org/3/library/dataclasses.html#inheritance)
    * [Re-ordering of keyword-only parameters in `__init__()`](https://docs.python.org/3/library/dataclasses.html#re-ordering-of-keyword-only-parameters-in-init)
    * [Default factory functions](https://docs.python.org/3/library/dataclasses.html#default-factory-functions)
    * [Mutable default values](https://docs.python.org/3/library/dataclasses.html#mutable-default-values)
    * [Descriptor-typed fields](https://docs.python.org/3/library/dataclasses.html#descriptor-typed-fields)


#### Previous topic
[`warnings` — Warning control](https://docs.python.org/3/library/warnings.html "previous chapter")
#### Next topic
[`contextlib` — Utilities for `with`-statement contexts](https://docs.python.org/3/library/contextlib.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/dataclasses.rst)


### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/library/contextlib.html "contextlib — Utilities for with-statement contexts") |
  * [previous](https://docs.python.org/3/library/warnings.html "warnings — Warning control") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [The Python Standard Library](https://docs.python.org/3/library/index.html) »
  * [Python Runtime Services](https://docs.python.org/3/library/python.html) »
  * [`dataclasses` — Data Classes](https://docs.python.org/3/library/dataclasses.html)
  * | 
  * Theme  Auto Light Dark |


# `dataclasses` — Data Classes[¶](https://docs.python.org/3/library/dataclasses.html#module-dataclasses "Link to this heading")
**Source code:** [Lib/dataclasses.py](https://github.com/python/cpython/tree/3.13/Lib/dataclasses.py)
This module provides a decorator and functions for automatically adding generated [special methods](https://docs.python.org/3/glossary.html#term-special-method) such as [`__init__()`](https://docs.python.org/3/reference/datamodel.html#object.__init__ "object.__init__") and [`__repr__()`](https://docs.python.org/3/reference/datamodel.html#object.__repr__ "object.__repr__") to user-defined classes. It was originally described in [**PEP 557**](https://peps.python.org/pep-0557/).
The member variables to use in these generated methods are defined using [**PEP 526**](https://peps.python.org/pep-0526/) type annotations. For example, this code:
```
fromdataclassesimport dataclass
@dataclass
classInventoryItem:
"""Class for keeping track of an item in inventory."""
  name: str
  unit_price: float
  quantity_on_hand: int = 0
  deftotal_cost(self) -> float:
    return self.unit_price * self.quantity_on_hand

```

will add, among other things, a `__init__()` that looks like:
```
def__init__(self, name: str, unit_price: float, quantity_on_hand: int = 0):
  self.name = name
  self.unit_price = unit_price
  self.quantity_on_hand = quantity_on_hand