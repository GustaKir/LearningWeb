Title: Python Changelog Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section details several updates, including a fix for `pydoc.doc()` to handle `ImportError`, a crash resolution for `repr` with `SignalDict`, a change to replace `assert` with `raise RuntimeError` in the `threading` module, a fix for a concurrency bug in the logging package, and the addition of a PY_THROW event hook for `cProfile`.
---

Patch by Alex Waygood.
  * [gh-102541](https://github.com/python/cpython/issues/102541): Make `pydoc.doc()` catch bad module [`ImportError`](https://docs.python.org/3/library/exceptions.html#ImportError "ImportError") when output stream is not `None`.
  * [gh-106263](https://github.com/python/cpython/issues/106263): Fix crash when calling `repr` with a manually constructed SignalDict object. Patch by Charlie Zhao.
  * [gh-106236](https://github.com/python/cpython/issues/106236): Replace `assert` statements with `raise RuntimeError` in [`threading`](https://docs.python.org/3/library/threading.html#module-threading "threading: Thread-based parallelism."), so that `_DummyThread` cannot be joined even with `-OO`.
  * [gh-106238](https://github.com/python/cpython/issues/106238): Fix rare concurrency bug in lock acquisition by the logging package.
  * [gh-106152](https://github.com/python/cpython/issues/106152): Added PY_THROW event hook for [`cProfile`](https://docs.python.org/3/library/profile.html#module-cProfile "cProfile") for generators
  * [gh-106075](https://github.com/python/cpython/issues/106075): Added `asyncio.taskgroups.__all__` to `asyncio.__all__` for export in star imports.
  * [gh-104527](https://github.com/python/cpython/issues/104527): Zipapp will now skip over appending an archive to itself.
  * [gh-106046](https://github.com/python/cpython/issues/106046): Improve the error message from [`os.fspath()`](https://docs.python.org/3/library/os.html#os.fspath "os.fspath") if called on an object where `__fspath__` is set to `None`. Patch by Alex Waygood.
  * [gh-105987](https://github.com/python/cpython/issues/105987): Fix crash due to improper reference counting in [`asyncio`](https://docs.python.org/3/library/asyncio.html#module-asyncio "asyncio: Asynchronous I/O.") eager task factory internal routines.
  * [gh-105974](https://github.com/python/cpython/issues/105974): Fix bug where a [`typing.Protocol`](https://docs.python.org/3/library/typing.html#typing.Protocol "typing.Protocol") class that had one or more non-callable members would raise [`TypeError`](https://docs.python.org/3/library/exceptions.html#TypeError "TypeError") when [`issubclass()`](https://docs.python.org/3/library/functions.html#issubclass "issubclass") was called against it, even if it defined a custom `__subclasshook__` method. The behaviour in Python 3.11 and lower – which has now been restored – was not to raise [`TypeError`](https://docs.python.org/3/library/exceptions.html#TypeError "TypeError") in these situations if a custom `__subclasshook__` method was defined. Patch by Alex Waygood.
  * [gh-96145](https://github.com/python/cpython/issues/96145): Reverted addition of `json.AttrDict`.
  * [gh-89812](https://github.com/python/cpython/issues/89812): Add [`pathlib.UnsupportedOperation`](https://docs.python.org/3/library/pathlib.html#pathlib.UnsupportedOperation "pathlib.UnsupportedOperation"), which is raised instead of [`NotImplementedError`](https://docs.python.org/3/library/exceptions.html#NotImplementedError "NotImplementedError") when a path operation isn’t supported.
  * [gh-105808](https://github.com/python/cpython/issues/105808): Fix a regression introduced in [gh-101251](https://github.com/python/cpython/issues/101251) for 3.12, causing `gzip.GzipFile.flush()` to not flush the compressor (nor pass along the `zip_mode` argument).
  * [gh-105481](https://github.com/python/cpython/issues/105481): [`stack_effect()`](https://docs.python.org/3/library/dis.html#dis.stack_effect "dis.stack_effect") no longer raises an exception if an `oparg` is provided for an `opcode` that doesn’t use its arg, or when it is not provided for an `opcode` that does use it. In the latter case, the stack effect is returned for `oparg=0`.
  * [gh-104799](https://github.com/python/cpython/issues/104799): Enable [`ast.unparse()`](https://docs.python.org/3/library/ast.html#ast.unparse "ast.unparse") to unparse function and class definitions created without the new `type_params` field from [**PEP 695**](https://peps.python.org/pep-0695/). Patch by Jelle Zijlstra.
  * [gh-105793](https://github.com/python/cpython/issues/105793): Add _follow_symlinks_ keyword-only argument to [`pathlib.Path.is_dir()`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.is_dir "pathlib.Path.is_dir") and [`is_file()`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.is_file "pathlib.Path.is_file"), defaulting to `True`.
  * [gh-105570](https://github.com/python/cpython/issues/105570): Deprecate two methods of creating [`typing.TypedDict`](https://docs.python.org/3/library/typing.html#typing.TypedDict "typing.TypedDict") classes with 0 fields using the functional syntax: `TD = TypedDict("TD")` and `TD = TypedDict("TD", None)`. Both will be disallowed in Python 3.15.