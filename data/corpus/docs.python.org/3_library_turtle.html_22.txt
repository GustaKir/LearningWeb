Title: Turtledemo Package Overview
URL: https://docs.python.org/3/library/turtle.html
Summary: The turtledemo package features a demo viewer for running turtle scripts alongside their source code, showcases multiple example scripts that demonstrate the turtle module's capabilities, and includes a configuration file (`turtle.cfg`) as a usage example.
---

```

The [`turtledemo`](https://docs.python.org/3/library/turtle.html#module-turtledemo "turtledemo: A viewer for example turtle scripts") package directory contains:
  * A demo viewer `__main__.py` which can be used to view the sourcecode of the scripts and run them at the same time.
  * Multiple scripts demonstrating different features of the [`turtle`](https://docs.python.org/3/library/turtle.html#module-turtle "turtle: An educational framework for simple graphics applications") module. Examples can be accessed via the Examples menu. They can also be run standalone.
  * A `turtle.cfg` file which serves as an example of how to write and use such files.


The demo scripts are:
Name | Description | Features  
---|---|---  
bytedesign | complex classical turtle graphics pattern | [`tracer()`](https://docs.python.org/3/library/turtle.html#turtle.tracer "turtle.tracer"), delay, [`update()`](https://docs.python.org/3/library/turtle.html#turtle.update "turtle.update")  
chaos | graphs Verhulst dynamics, shows that computer’s computations can generate results sometimes against the common sense expectations | world coordinates  
clock | analog clock showing time of your computer | turtles as clock’s hands, ontimer  
colormixer | experiment with r, g, b | [`ondrag()`](https://docs.python.org/3/library/turtle.html#turtle.ondrag "turtle.ondrag")  
forest | 3 breadth-first trees | randomization  
fractalcurves | Hilbert & Koch curves | recursion  
lindenmayer | ethnomathematics (indian kolams) | L-System  
minimal_hanoi | Towers of Hanoi | Rectangular Turtles as Hanoi discs (shape, shapesize)  
nim | play the classical nim game with three heaps of sticks against the computer. | turtles as nimsticks, event driven (mouse, keyboard)  
paint | super minimalistic drawing program | [`onclick()`](https://docs.python.org/3/library/turtle.html#turtle.onclick "turtle.onclick")  
peace | elementary | turtle: appearance and animation  
penrose | aperiodic tiling with kites and darts | [`stamp()`](https://docs.python.org/3/library/turtle.html#turtle.stamp "turtle.stamp")  
planet_and_moon | simulation of gravitational system | compound shapes, [`Vec2D`](https://docs.python.org/3/library/turtle.html#turtle.Vec2D "turtle.Vec2D")  
rosette | a pattern from the wikipedia article on turtle graphics | [`clone()`](https://docs.python.org/3/library/turtle.html#turtle.clone "turtle.clone"), [`undo()`](https://docs.python.org/3/library/turtle.html#turtle.undo "turtle.undo")  
round_dance | dancing turtles rotating pairwise in opposite direction | compound shapes, clone shapesize, tilt, get_shapepoly, update  
sorting_animate | visual demonstration of different sorting methods | simple alignment, randomization  
tree | a (graphical) breadth first tree (using generators) | [`clone()`](https://docs.python.org/3/library/turtle.html#turtle.clone "turtle.clone")  
two_canvases | simple design | turtles on two canvases  
yinyang | another elementary example | [`circle()`](https://docs.python.org/3/library/turtle.html#turtle.circle "turtle.circle")  
Have fun!
## Changes since Python 2.6[¶](https://docs.python.org/3/library/turtle.html#changes-since-python-2-6 "Link to this heading")
  * The methods [`Turtle.tracer`](https://docs.python.org/3/library/turtle.html#turtle.tracer "turtle.tracer"), [`Turtle.window_width`](https://docs.python.org/3/library/turtle.html#turtle.window_width "turtle.window_width") and [`Turtle.window_height`](https://docs.python.org/3/library/turtle.html#turtle.window_height "turtle.window_height") have been eliminated. Methods with these names and functionality are now available only as methods of [`Screen`](https://docs.python.org/3/library/turtle.html#turtle.Screen "turtle.Screen"). The functions derived from these remain available. (In fact already in Python 2.6 these methods were merely duplications of the corresponding [`TurtleScreen`](https://docs.python.org/3/library/turtle.html#turtle.TurtleScreen "turtle.TurtleScreen")/[`Screen`](https://docs.python.org/3/library/turtle.html#turtle.Screen "turtle.Screen") methods.)
  * The method `Turtle.fill()` has been eliminated. The behaviour of [`begin_fill()`](https://docs.python.org/3/library/turtle.html#turtle.begin_fill "turtle.begin_fill") and [`end_fill()`](https://docs.python.org/3/library/turtle.html#turtle.end_fill "turtle.end_fill") have changed slightly: now every filling process must be completed with an `end_fill()` call.
  * A method [`Turtle.filling`](https://docs.python.org/3/library/turtle.html#turtle.filling "turtle.filling") has been added. It returns a boolean value: `True` if a filling process is under way, `False` otherwise. This behaviour corresponds to a `fill()` call without arguments in Python 2.6.