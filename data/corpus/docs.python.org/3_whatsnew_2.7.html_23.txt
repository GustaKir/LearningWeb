Title: Python 2.7 Release Notes - Key Enhancements
URL: https://docs.python.org/3/whatsnew/2.7.html
Summary: In Python 2.7, the `shutil` module's `copyfile()` and `copytree()` functions now correctly raise a `SpecialFileError` when attempting to copy named pipes, preventing indefinite blocking. Additionally, the `signal` module has been improved to avoid unnecessary re-installation of the signal handler, which enhances the robustness of catching the EINTR signal.
---

(Added by Tarek Ziadé.)
[`shutil`](https://docs.python.org/3/library/shutil.html#module-shutil "shutil: High-level file operations, including copying.")’s [`copyfile()`](https://docs.python.org/3/library/shutil.html#shutil.copyfile "shutil.copyfile") and [`copytree()`](https://docs.python.org/3/library/shutil.html#shutil.copytree "shutil.copytree") functions now raise a `SpecialFileError` exception when asked to copy a named pipe. Previously the code would treat named pipes like a regular file by opening them for reading, and this would block indefinitely. (Fixed by Antoine Pitrou; [bpo-3002](https://bugs.python.org/issue?@action=redirect&bpo=3002).)
  * The [`signal`](https://docs.python.org/3/library/signal.html#module-signal "signal: Set handlers for asynchronous events.") module no longer re-installs the signal handler unless this is truly necessary, which fixes a bug that could make it impossible to catch the EINTR signal robustly. (Fixed by Charles-Francois Natali; [bpo-8354](https://bugs.python.org/issue?@action=redirect&bpo=8354).)
  * New functions: in the [`site`](https://docs.python.org/3/library/site.html#module-site "site: Module responsible for site-specific configuration.") module, three new functions return various site- and user-specific paths. [`getsitepackages()`](https://docs.python.org/3/library/site.html#site.getsitepackages "site.getsitepackages") returns a list containing all global site-packages directories, [`getusersitepackages()`](https://docs.python.org/3/library/site.html#site.getusersitepackages "site.getusersitepackages") returns the path of the user’s site-packages directory, and [`getuserbase()`](https://docs.python.org/3/library/site.html#site.getuserbase "site.getuserbase") returns the value of the [`USER_BASE`](https://docs.python.org/3/library/site.html#site.USER_BASE "site.USER_BASE") environment variable, giving the path to a directory that can be used to store data. (Contributed by Tarek Ziadé; [bpo-6693](https://bugs.python.org/issue?@action=redirect&bpo=6693).)
The [`site`](https://docs.python.org/3/library/site.html#module-site "site: Module responsible for site-specific configuration.") module now reports exceptions occurring when the [`sitecustomize`](https://docs.python.org/3/library/site.html#module-sitecustomize "sitecustomize") module is imported, and will no longer catch and swallow the [`KeyboardInterrupt`](https://docs.python.org/3/library/exceptions.html#KeyboardInterrupt "KeyboardInterrupt") exception. (Fixed by Victor Stinner; [bpo-3137](https://bugs.python.org/issue?@action=redirect&bpo=3137).)
  * The [`create_connection()`](https://docs.python.org/3/library/socket.html#socket.create_connection "socket.create_connection") function gained a _source_address_ parameter, a `(host, port)` 2-tuple giving the source address that will be used for the connection. (Contributed by Eldon Ziegler; [bpo-3972](https://bugs.python.org/issue?@action=redirect&bpo=3972).)
The [`recv_into()`](https://docs.python.org/3/library/socket.html#socket.socket.recv_into "socket.socket.recv_into") and [`recvfrom_into()`](https://docs.python.org/3/library/socket.html#socket.socket.recvfrom_into "socket.socket.recvfrom_into") methods will now write into objects that support the buffer API, most usefully the [`bytearray`](https://docs.python.org/3/library/stdtypes.html#bytearray "bytearray") and [`memoryview`](https://docs.python.org/3/library/stdtypes.html#memoryview "memoryview") objects. (Implemented by Antoine Pitrou; [bpo-8104](https://bugs.python.org/issue?@action=redirect&bpo=8104).)
  * The [`SocketServer`](https://docs.python.org/3/library/socketserver.html#module-socketserver "socketserver: A framework for network servers.") module’s [`TCPServer`](https://docs.python.org/3/library/socketserver.html#socketserver.TCPServer "socketserver.TCPServer") class now supports socket timeouts and disabling the Nagle algorithm. The `disable_nagle_algorithm` class attribute defaults to `False`; if overridden to be true, new request connections will have the TCP_NODELAY option set to prevent buffering many small sends into a single TCP packet. The [`timeout`](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer.timeout "socketserver.BaseServer.timeout") class attribute can hold a timeout in seconds that will be applied to the request socket; if no request is received within that time, [`handle_timeout()`](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer.handle_timeout "socketserver.BaseServer.handle_timeout") will be called and [`handle_request()`](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer.handle_request "socketserver.BaseServer.handle_request") will return.