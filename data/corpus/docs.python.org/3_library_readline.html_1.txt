Title: GNU Readline Interface in Python
URL: https://docs.python.org/3/library/readline.html
Summary: The `readline` module in Python provides functions for command-line editing and history file management, enhancing user input experience in the interpreter. It can be used alongside `rlcompleter` for Python identifier completion, and configurations can be made via an initialization file to customize keybindings.
---

# `readline` — GNU readline interface[¶](https://docs.python.org/3/library/readline.html#module-readline "Link to this heading")
The [`readline`](https://docs.python.org/3/library/readline.html#module-readline "readline: GNU readline support for Python. \(Unix\)") module defines a number of functions to facilitate completion and reading/writing of history files from the Python interpreter. This module can be used directly, or via the [`rlcompleter`](https://docs.python.org/3/library/rlcompleter.html#module-rlcompleter "rlcompleter: Python identifier completion, suitable for the GNU readline library.") module, which supports completion of Python identifiers at the interactive prompt. Settings made using this module affect the behaviour of both the interpreter’s interactive prompt and the prompts offered by the built-in [`input()`](https://docs.python.org/3/library/functions.html#input "input") function.
Readline keybindings may be configured via an initialization file, typically `.inputrc` in your home directory. See [Readline Init File](https://tiswww.cwru.edu/php/chet/readline/rluserman.html#Readline-Init-File) in the GNU Readline manual for information about the format and allowable constructs of that file, and the capabilities of the Readline library in general.
[Availability](https://docs.python.org/3/library/intro.html#availability): not Android, not iOS, not WASI.
This module is not supported on [mobile platforms](https://docs.python.org/3/library/intro.html#mobile-availability) or [WebAssembly platforms](https://docs.python.org/3/library/intro.html#wasm-availability).
Note
The underlying Readline library API may be implemented by the `editline` (`libedit`) library instead of GNU readline. On macOS the [`readline`](https://docs.python.org/3/library/readline.html#module-readline "readline: GNU readline support for Python. \(Unix\)") module detects which library is being used at run time.
The configuration file for `editline` is different from that of GNU readline. If you programmatically load configuration strings you can use [`backend`](https://docs.python.org/3/library/readline.html#readline.backend "readline.backend") to determine which library is being used.
If you use `editline`/`libedit` readline emulation on macOS, the initialization file located in your home directory is named `.editrc`. For example, the following content in `~/.editrc` will turn ON _vi_ keybindings and TAB completion:
```
python:bind -v
python:bind ^I rl_complete