Title: New Features in Python 3.5: Traceback Enhancements
URL: https://docs.python.org/3/whatsnew/3.5.html
Summary: Python 3.5 introduces new utilities for handling traceback and stack information, including the `TracebackException`, `StackSummary`, and `FrameSummary` classes. New functions like `traceback.walk_tb` enhance the ability to traverse frame and traceback objects. These contributions are made by Robert Collins and address issue bpo-17911.
---

thon.org/3/library/traceback.html#traceback.walk_tb "traceback.walk_tb") functions to conveniently traverse frame and [traceback objects](https://docs.python.org/3/reference/datamodel.html#traceback-objects). (Contributed by Robert Collins in [bpo-17911](https://bugs.python.org/issue?@action=redirect&bpo=17911).)
New lightweight classes: [`TracebackException`](https://docs.python.org/3/library/traceback.html#traceback.TracebackException "traceback.TracebackException"), [`StackSummary`](https://docs.python.org/3/library/traceback.html#traceback.StackSummary "traceback.StackSummary"), and [`FrameSummary`](https://docs.python.org/3/library/traceback.html#traceback.FrameSummary "traceback.FrameSummary"). (Contributed by Robert Collins in [bpo-17911](https://bugs.python.org/issue?@action=redirect&bpo=17911).)
Both the [`print_tb()`](https://docs.python.org/3/library/traceback.html#traceback.print_tb "traceback.print_tb") and [`print_stack()`](https://docs.python.org/3/library/traceback.html#traceback.print_stack "traceback.print_stack") functions now support negative values for the _limit_ argument. (Contributed by Dmitry Kazakov in [bpo-22619](https://bugs.python.org/issue?@action=redirect&bpo=22619).)
### types[¶](https://docs.python.org/3/whatsnew/3.5.html#types "Link to this heading")
A new [`coroutine()`](https://docs.python.org/3/library/types.html#types.coroutine "types.coroutine") function to transform [generator](https://docs.python.org/3/glossary.html#term-generator-iterator) and [`generator-like`](https://docs.python.org/3/library/collections.abc.html#collections.abc.Generator "collections.abc.Generator") objects into [awaitables](https://docs.python.org/3/glossary.html#term-awaitable). (Contributed by Yury Selivanov in [bpo-24017](https://bugs.python.org/issue?@action=redirect&bpo=24017).)
A new type called [`CoroutineType`](https://docs.python.org/3/library/types.html#types.CoroutineType "types.CoroutineType"), which is used for [coroutine](https://docs.python.org/3/glossary.html#term-coroutine) objects created by [`async def`](https://docs.python.org/3/reference/compound_stmts.html#async-def) functions. (Contributed by Yury Selivanov in [bpo-24400](https://bugs.python.org/issue?@action=redirect&bpo=24400).)
### unicodedata[¶](https://docs.python.org/3/whatsnew/3.5.html#unicodedata "Link to this heading")
The [`unicodedata`](https://docs.python.org/3/library/unicodedata.html#module-unicodedata "unicodedata: Access the Unicode Database.") module now uses data from [Unicode 8.0.0](https://unicode.org/versions/Unicode8.0.0/).
### unittest[¶](https://docs.python.org/3/whatsnew/3.5.html#unittest "Link to this heading")
The [`TestLoader.loadTestsFromModule()`](https://docs.python.org/3/library/unittest.html#unittest.TestLoader.loadTestsFromModule "unittest.TestLoader.loadTestsFromModule") method now accepts a keyword-only argument _pattern_ which is passed to `load_tests` as the third argument. Found packages are now checked for `load_tests` regardless of whether their path matches _pattern_ , because it is impossible for a package name to match the default pattern. (Contributed by Robert Collins and Barry A. Warsaw in [bpo-16662](https://bugs.python.org/issue?@action=redirect&bpo=16662).)
Unittest discovery errors now are exposed in the [`TestLoader.errors`](https://docs.python.org/3/library/unittest.html#unittest.TestLoader.errors "unittest.TestLoader.errors") attribute of the [`TestLoader`](https://docs.python.org/3/library/unittest.html#unittest.TestLoader "unittest.TestLoader") instance. (Contributed by Robert Collins in [bpo-19746](https://bugs.python.org/issue?@action=redirect&bpo=19746).)
A new command line option `--locals` to show local variables in tracebacks. (Contributed by Robert Collins in [bpo-22936](https://bugs.python.org/issue?@action=redirect&bpo=22936).)
### unittest.mock[¶](https://docs.python.org/3/whatsnew/3.5.html#unittest-mock "Link to this heading")
The [`Mock`](https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock "unittest.mock.Mock") class has the following improvements:
  * The class constructor has a new _unsafe_ parameter, which causes mock objects to raise [`AttributeError`](https://docs.python.org/3/library/exceptions.html#AttributeError "AttributeError") on attribute names starting with `"assert"`. (Contributed by Kushal Das in [bpo-21238](https://bugs.python.org/issue?@action=redirect&bpo=21238).)
  * A new [`Mock.assert_not_called()`](https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock.assert_not_called "unittest.mock.Mock.assert_not_called") method to check if the mock object was called. (Contributed by Kushal Das in [bpo-21262](https://bugs.python.org/issue?@action=redirect&bpo=21262).)