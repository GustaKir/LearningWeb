Title: Python Command Line Options
URL: https://docs.python.org/3/using/cmdline.html
Summary: This section discusses the `-I` and `-O` command line options in Python. The `-I` option runs Python in isolated mode, disregarding `sys.path` entries and user site-packages, while the `-O` option removes assert statements and conditional code tied to `__debug__`. These features provide additional control over the Python environment and execution.
---

-I[¶](https://docs.python.org/3/using/cmdline.html#cmdoption-I "Link to this definition")
    
Run Python in isolated mode. This also implies [`-E`](https://docs.python.org/3/using/cmdline.html#cmdoption-E), [`-P`](https://docs.python.org/3/using/cmdline.html#cmdoption-P) and [`-s`](https://docs.python.org/3/using/cmdline.html#cmdoption-s) options.
In isolated mode [`sys.path`](https://docs.python.org/3/library/sys.html#sys.path "sys.path") contains neither the script’s directory nor the user’s site-packages directory. All `PYTHON*` environment variables are ignored, too. Further restrictions may be imposed to prevent the user from injecting malicious code.
Added in version 3.4. 

-O[¶](https://docs.python.org/3/using/cmdline.html#cmdoption-O "Link to this definition")
    
Remove assert statements and any code conditional on the value of [`__debug__`](https://docs.python.org/3/library/constants.html#debug__ "__debug__"). Augment the filename for compiled ([bytecode](https://docs.python.org/3/glossary.html#term-bytecode)) files by adding `.opt-1` before the `.pyc` extension (see [**PEP 488**](https://peps.python.org/pep-0488/)). See also [`PYTHONOPTIMIZE`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONOPTIMIZE).
Changed in version 3.5: Modify `.pyc` filenames according to [**PEP 488**](https://peps.python.org/pep-0488/). 

-OO[¶](https://docs.python.org/3/using/cmdline.html#cmdoption-OO "Link to this definition")
    
Do [`-O`](https://docs.python.org/3/using/cmdline.html#cmdoption-O) and also discard docstrings. Augment the filename for compiled ([bytecode](https://docs.python.org/3/glossary.html#term-bytecode)) files by adding `.opt-2` before the `.pyc` extension (see [**PEP 488**](https://peps.python.org/pep-0488/)).
Changed in version 3.5: Modify `.pyc` filenames according to [**PEP 488**](https://peps.python.org/pep-0488/). 

-P[¶](https://docs.python.org/3/using/cmdline.html#cmdoption-P "Link to this definition")
    
Don’t prepend a potentially unsafe path to [`sys.path`](https://docs.python.org/3/library/sys.html#sys.path "sys.path"):
  * `python -m module` command line: Don’t prepend the current working directory.
  * `python script.py` command line: Don’t prepend the script’s directory. If it’s a symbolic link, resolve symbolic links.
  * `python -c code` and `python` (REPL) command lines: Don’t prepend an empty string, which means the current working directory.


See also the [`PYTHONSAFEPATH`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONSAFEPATH) environment variable, and [`-E`](https://docs.python.org/3/using/cmdline.html#cmdoption-E) and [`-I`](https://docs.python.org/3/using/cmdline.html#cmdoption-I) (isolated) options.
Added in version 3.11. 

-q[¶](https://docs.python.org/3/using/cmdline.html#cmdoption-q "Link to this definition")
    
Don’t display the copyright and version messages even in interactive mode.
Added in version 3.2. 

-R[¶](https://docs.python.org/3/using/cmdline.html#cmdoption-R "Link to this definition")
    
Turn on hash randomization. This option only has an effect if the [`PYTHONHASHSEED`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONHASHSEED) environment variable is set to `0`, since hash randomization is enabled by default.
On previous versions of Python, this option turns on hash randomization, so that the [`__hash__()`](https://docs.python.org/3/reference/datamodel.html#object.__hash__ "object.__hash__") values of str and bytes objects are “salted” with an unpredictable random value. Although they remain constant within an individual Python process, they are not predictable between repeated invocations of Python.
Hash randomization is intended to provide protection against a denial-of-service caused by carefully chosen inputs that exploit the worst case performance of a dict construction, _O_(_n_ 2) complexity. See <http://ocert.org/advisories/ocert-2011-003.html> for details.
[`PYTHONHASHSEED`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONHASHSEED) allows you to set a fixed value for the hash seed secret.
Added in version 3.2.3.
Changed in version 3.7: The option is no longer ignored. 

-s[¶](https://docs.python.org/3/using/cmdline.html#cmdoption-s "Link to this definition")
    
Don’t add the [`user site-packages directory`](https://docs.python.org/3/library/site.html#site.USER_SITE "site.USER_SITE") to [`sys.path`](https://docs.python.org/3/library/sys.html#sys.path "sys.path").
See also [`PYTHONNOUSERSITE`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONNOUSERSITE).
See also
[**PEP 370**](https://peps.python.org/pep-0370/) – Per user site-packages directory