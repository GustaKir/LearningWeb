Title: Python 3.6.1 Release Candidate 1
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section outlines the Python 3.6.1 release candidate 1, highlighting core and built-in updates. Key changes include setting the correct __cause__ for certain errors, memory allocation fixes, resolution of a regression in PyEval_CallObjectWithKeywords, and improvements for __rmod__ support in string subclasses.
---

## Python 3.6.1 release candidate 1[¶](https://docs.python.org/3/whatsnew/changelog.html#python-3-6-1-release-candidate-1 "Link to this heading")
_Release date: 2017-03-04_
### Core and Builtins[¶](https://docs.python.org/3/whatsnew/changelog.html#id627 "Link to this heading")
  * [bpo-28893](https://bugs.python.org/issue?@action=redirect&bpo=28893): Set correct __cause__ for errors about invalid awaitables returned from __aiter__ and __anext__.
  * [bpo-29683](https://bugs.python.org/issue?@action=redirect&bpo=29683): Fixes to memory allocation in _PyCode_SetExtra. Patch by Brian Coleman.
  * [bpo-29684](https://bugs.python.org/issue?@action=redirect&bpo=29684): Fix minor regression of PyEval_CallObjectWithKeywords. It should raise TypeError when kwargs is not a dict. But it might cause segv when args=NULL and kwargs is not a dict.
  * [bpo-28598](https://bugs.python.org/issue?@action=redirect&bpo=28598): Support __rmod__ for subclasses of str being called before str.__mod__. Patch by Martijn Pieters.
  * [bpo-29607](https://bugs.python.org/issue?@action=redirect&bpo=29607): Fix stack_effect computation for CALL_FUNCTION_EX. Patch by Matthieu Dartiailh.
  * [bpo-29602](https://bugs.python.org/issue?@action=redirect&bpo=29602): Fix incorrect handling of signed zeros in complex constructor for complex subclasses and for inputs having a __complex__ method. Patch by Serhiy Storchaka.
  * [bpo-29347](https://bugs.python.org/issue?@action=redirect&bpo=29347): Fixed possibly dereferencing undefined pointers when creating weakref objects.
  * [bpo-29438](https://bugs.python.org/issue?@action=redirect&bpo=29438): Fixed use-after-free problem in key sharing dict.
  * [bpo-29319](https://bugs.python.org/issue?@action=redirect&bpo=29319): Prevent RunMainFromImporter overwriting sys.path[0].
  * [bpo-29337](https://bugs.python.org/issue?@action=redirect&bpo=29337): Fixed possible BytesWarning when compare the code objects. Warnings could be emitted at compile time.
  * [bpo-29327](https://bugs.python.org/issue?@action=redirect&bpo=29327): Fixed a crash when pass the iterable keyword argument to sorted().
  * [bpo-29034](https://bugs.python.org/issue?@action=redirect&bpo=29034): Fix memory leak and use-after-free in os module (path_converter).
  * [bpo-29159](https://bugs.python.org/issue?@action=redirect&bpo=29159): Fix regression in bytes(x) when x.__index__() raises Exception.
  * [bpo-28932](https://bugs.python.org/issue?@action=redirect&bpo=28932): Do not include <sys/random.h> if it does not exist.
  * [bpo-25677](https://bugs.python.org/issue?@action=redirect&bpo=25677): Correct the positioning of the syntax error caret for indented blocks. Based on patch by Michael Layzell.
  * [bpo-29000](https://bugs.python.org/issue?@action=redirect&bpo=29000): Fixed bytes formatting of octals with zero padding in alternate form.
  * [bpo-26919](https://bugs.python.org/issue?@action=redirect&bpo=26919): On Android, operating system data is now always encoded/decoded to/from UTF-8, instead of the locale encoding to avoid inconsistencies with os.fsencode() and os.fsdecode() which are already using UTF-8.
  * [bpo-28991](https://bugs.python.org/issue?@action=redirect&bpo=28991): functools.lru_cache() was susceptible to an obscure reentrancy bug triggerable by a monkey-patched len() function.
  * [bpo-28739](https://bugs.python.org/issue?@action=redirect&bpo=28739): f-string expressions are no longer accepted as docstrings and by ast.literal_eval() even if they do not include expressions.
  * [bpo-28512](https://bugs.python.org/issue?@action=redirect&bpo=28512): Fixed setting the offset attribute of SyntaxError by PyErr_SyntaxLocationEx() and PyErr_SyntaxLocationObject().
  * [bpo-28918](https://bugs.python.org/issue?@action=redirect&bpo=28918): Fix the cross compilation of xxlimited when Python has been built with Py_DEBUG defined.
  * [bpo-28731](https://bugs.python.org/issue?@action=redirect&bpo=28731): Optimize _PyDict_NewPresized() to create correct size dict. Improve speed of dict literal with constant keys up to 30%.