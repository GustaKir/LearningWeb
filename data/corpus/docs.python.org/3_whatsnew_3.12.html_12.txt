Title: Enhancements to the os Module in Python 3.12
URL: https://docs.python.org/3/whatsnew/3.12.html
Summary: Python 3.12 introduces several enhancements to the os module, including the addition of os.PIDFD_NONBLOCK for non-blocking file descriptor openings, a new method os.DirEntry.is_junction() for checking junction entries, and the new functions os.listdrives() and os.listvolumes() for listing drives and volumes, respectively.
---

### os[¶](https://docs.python.org/3/whatsnew/3.12.html#os "Link to this heading")
  * Add [`os.PIDFD_NONBLOCK`](https://docs.python.org/3/library/os.html#os.PIDFD_NONBLOCK "os.PIDFD_NONBLOCK") to open a file descriptor for a process with [`os.pidfd_open()`](https://docs.python.org/3/library/os.html#os.pidfd_open "os.pidfd_open") in non-blocking mode. (Contributed by Kumar Aditya in [gh-93312](https://github.com/python/cpython/issues/93312).)
  * [`os.DirEntry`](https://docs.python.org/3/library/os.html#os.DirEntry "os.DirEntry") now includes an [`os.DirEntry.is_junction()`](https://docs.python.org/3/library/os.html#os.DirEntry.is_junction "os.DirEntry.is_junction") method to check if the entry is a junction. (Contributed by Charles Machalow in [gh-99547](https://github.com/python/cpython/issues/99547).)
  * Add [`os.listdrives()`](https://docs.python.org/3/library/os.html#os.listdrives "os.listdrives"), [`os.listvolumes()`](https://docs.python.org/3/library/os.html#os.listvolumes "os.listvolumes") and [`os.listmounts()`](https://docs.python.org/3/library/os.html#os.listmounts "os.listmounts") functions on Windows for enumerating drives, volumes and mount points. (Contributed by Steve Dower in [gh-102519](https://github.com/python/cpython/issues/102519).)
  * [`os.stat()`](https://docs.python.org/3/library/os.html#os.stat "os.stat") and [`os.lstat()`](https://docs.python.org/3/library/os.html#os.lstat "os.lstat") are now more accurate on Windows. The `st_birthtime` field will now be filled with the creation time of the file, and `st_ctime` is deprecated but still contains the creation time (but in the future will return the last metadata change, for consistency with other platforms). `st_dev` may be up to 64 bits and `st_ino` up to 128 bits depending on your file system, and `st_rdev` is always set to zero rather than incorrect values. Both functions may be significantly faster on newer releases of Windows. (Contributed by Steve Dower in [gh-99726](https://github.com/python/cpython/issues/99726).)


### os.path[¶](https://docs.python.org/3/whatsnew/3.12.html#os-path "Link to this heading")
  * Add [`os.path.isjunction()`](https://docs.python.org/3/library/os.path.html#os.path.isjunction "os.path.isjunction") to check if a given path is a junction. (Contributed by Charles Machalow in [gh-99547](https://github.com/python/cpython/issues/99547).)
  * Add [`os.path.splitroot()`](https://docs.python.org/3/library/os.path.html#os.path.splitroot "os.path.splitroot") to split a path into a triad `(drive, root, tail)`. (Contributed by Barney Gale in [gh-101000](https://github.com/python/cpython/issues/101000).)


### pathlib[¶](https://docs.python.org/3/whatsnew/3.12.html#pathlib "Link to this heading")
  * Add support for subclassing [`pathlib.PurePath`](https://docs.python.org/3/library/pathlib.html#pathlib.PurePath "pathlib.PurePath") and [`pathlib.Path`](https://docs.python.org/3/library/pathlib.html#pathlib.Path "pathlib.Path"), plus their Posix- and Windows-specific variants. Subclasses may override the [`pathlib.PurePath.with_segments()`](https://docs.python.org/3/library/pathlib.html#pathlib.PurePath.with_segments "pathlib.PurePath.with_segments") method to pass information between path instances.
  * Add [`pathlib.Path.walk()`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.walk "pathlib.Path.walk") for walking the directory trees and generating all file or directory names within them, similar to [`os.walk()`](https://docs.python.org/3/library/os.html#os.walk "os.walk"). (Contributed by Stanislav Zmiev in [gh-90385](https://github.com/python/cpython/issues/90385).)
  * Add _walk_up_ optional parameter to [`pathlib.PurePath.relative_to()`](https://docs.python.org/3/library/pathlib.html#pathlib.PurePath.relative_to "pathlib.PurePath.relative_to") to allow the insertion of `..` entries in the result; this behavior is more consistent with [`os.path.relpath()`](https://docs.python.org/3/library/os.path.html#os.path.relpath "os.path.relpath"). (Contributed by Domenico Ragusa in [gh-84538](https://github.com/python/cpython/issues/84538).)
  * Add [`pathlib.Path.is_junction()`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.is_junction "pathlib.Path.is_junction") as a proxy to [`os.path.isjunction()`](https://docs.python.org/3/library/os.path.html#os.path.isjunction "os.path.isjunction"). (Contributed by Charles Machalow in [gh-99547](https://github.com/python/cpython/issues/99547).)
  * Add _case_sensitive_ optional parameter to [`pathlib.Path.glob()`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.glob "pathlib.Path.glob"), [`pathlib.Path.rglob()`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.rglob "pathlib.Path.rglob") and [`pathlib.PurePath.match()`](https://docs.python.org/3/library/pathlib.html#pathlib.PurePath.match "pathlib.PurePath.match") for matching the path’s case sensitivity, allowing for more precise control over the matching process.