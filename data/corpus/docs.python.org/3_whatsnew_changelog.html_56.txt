Title: Changes to the C API
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section details recent updates to the C API in Python, including the export of the `PySignal_SetWakeupFd()` function for third-party use and modifications to `PyUnicode_InternInPlace()` to allow its argument to be garbage collected. Additionally, it highlights functions that may prevent string objects from being garbage collected.
---

### C API[¶](https://docs.python.org/3/whatsnew/changelog.html#id60 "Link to this heading")
  * [gh-89364](https://github.com/python/cpython/issues/89364): Export the [`PySignal_SetWakeupFd()`](https://docs.python.org/3/c-api/exceptions.html#c.PySignal_SetWakeupFd "PySignal_SetWakeupFd") function. Previously, the function was documented but it couldn’t be used in 3rd party code. Patch by Victor Stinner.
  * [gh-113993](https://github.com/python/cpython/issues/113993): [`PyUnicode_InternInPlace()`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_InternInPlace "PyUnicode_InternInPlace") no longer prevents its argument from being garbage collected.
Several functions that take `char *` are now documented as possibly preventing string objects from being garbage collected; refer to their documentation for details: [`PyUnicode_InternFromString()`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_InternFromString "PyUnicode_InternFromString"), [`PyDict_SetItemString()`](https://docs.python.org/3/c-api/dict.html#c.PyDict_SetItemString "PyDict_SetItemString"), [`PyObject_SetAttrString()`](https://docs.python.org/3/c-api/object.html#c.PyObject_SetAttrString "PyObject_SetAttrString"), [`PyObject_DelAttrString()`](https://docs.python.org/3/c-api/object.html#c.PyObject_DelAttrString "PyObject_DelAttrString"), [`PyUnicode_InternFromString()`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_InternFromString "PyUnicode_InternFromString"), and `PyModule_Add*` convenience functions.
  * [gh-113601](https://github.com/python/cpython/issues/113601): Removed debug build assertions related to interning strings, which were falsely triggered by stable ABI extensions.
  * [gh-112136](https://github.com/python/cpython/issues/112136): Restore the private `_PyArg_Parser` structure and the private `_PyArg_ParseTupleAndKeywordsFast()` function, previously removed in Python 3.13 alpha 1. Patch by Victor Stinner.


### Build[¶](https://docs.python.org/3/whatsnew/changelog.html#id61 "Link to this heading")
  * [gh-120371](https://github.com/python/cpython/issues/120371): Support WASI SDK 22 by explicitly skipping functions that are just stubs in wasi-libc.
  * [gh-121731](https://github.com/python/cpython/issues/121731): Fix mimalloc compile error on GNU/Hurd
  * [gh-121487](https://github.com/python/cpython/issues/121487): Fix deprecation warning for ATOMIC_VAR_INIT in mimalloc.
  * [gh-121467](https://github.com/python/cpython/issues/121467): Fix a Makefile bug that prevented mimalloc header files from being installed.
  * [gh-121103](https://github.com/python/cpython/issues/121103): On POSIX systems, excluding macOS framework installs, the lib directory for the free-threaded build now includes a “t” suffix to avoid conflicts with a co-located default build installation.
  * [gh-120831](https://github.com/python/cpython/issues/120831): The default minimum iOS version was increased to 13.0.
  * [gh-113565](https://github.com/python/cpython/issues/113565): Improve [`curses`](https://docs.python.org/3/library/curses.html#module-curses "curses: An interface to the curses library, providing portable terminal handling. \(Unix\)") and [`curses.panel`](https://docs.python.org/3/library/curses.panel.html#module-curses.panel "curses.panel: A panel stack extension that adds depth to curses windows.") dependency checks in **configure**.