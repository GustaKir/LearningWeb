Title: Understanding PyTypeObject.tp_dict in Python C API
URL: https://docs.python.org/3/c-api/typeobj.html
Summary: This section explains the role of the `tp_dict` attribute within the `PyTypeObject` structure, detailing its initialization process via `PyType_Ready()` and the rules governing the addition of attributes to the type's dictionary post-initialization.
---

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*[PyTypeObject](https://docs.python.org/3/c-api/type.html#c.PyTypeObject "PyTypeObject").tp_dict[¶](https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_dict "Link to this definition")
    
The type’s dictionary is stored here by [`PyType_Ready()`](https://docs.python.org/3/c-api/type.html#c.PyType_Ready "PyType_Ready").
This field should normally be initialized to `NULL` before PyType_Ready is called; it may also be initialized to a dictionary containing initial attributes for the type. Once [`PyType_Ready()`](https://docs.python.org/3/c-api/type.html#c.PyType_Ready "PyType_Ready") has initialized the type, extra attributes for the type may be added to this dictionary only if they don’t correspond to overloaded operations (like [`__add__()`](https://docs.python.org/3/reference/datamodel.html#object.__add__ "object.__add__")). Once initialization for the type has finished, this field should be treated as read-only.
Some types may not store their dictionary in this slot. Use [`PyType_GetDict()`](https://docs.python.org/3/c-api/type.html#c.PyType_GetDict "PyType_GetDict") to retrieve the dictionary for an arbitrary type.
Changed in version 3.12: Internals detail: For static builtin types, this is always `NULL`. Instead, the dict for such types is stored on `PyInterpreterState`. Use [`PyType_GetDict()`](https://docs.python.org/3/c-api/type.html#c.PyType_GetDict "PyType_GetDict") to get the dict for an arbitrary type.
**Inheritance:**
This field is not inherited by subtypes (though the attributes defined in here are inherited through a different mechanism).
**Default:**
If this field is `NULL`, [`PyType_Ready()`](https://docs.python.org/3/c-api/type.html#c.PyType_Ready "PyType_Ready") will assign a new dictionary to it.
Warning
It is not safe to use [`PyDict_SetItem()`](https://docs.python.org/3/c-api/dict.html#c.PyDict_SetItem "PyDict_SetItem") on or otherwise modify [`tp_dict`](https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_dict "PyTypeObject.tp_dict") with the dictionary C-API. 

[descrgetfunc](https://docs.python.org/3/c-api/typeobj.html#c.descrgetfunc "descrgetfunc")[PyTypeObject](https://docs.python.org/3/c-api/type.html#c.PyTypeObject "PyTypeObject").tp_descr_get[¶](https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_descr_get "Link to this definition")
    
An optional pointer to a “descriptor get” function.
The function signature is:
```
PyObject*tp_descr_get(PyObject*self,PyObject*obj,PyObject*type);

```

**Inheritance:**
This field is inherited by subtypes. 

[descrsetfunc](https://docs.python.org/3/c-api/typeobj.html#c.descrsetfunc "descrsetfunc")[PyTypeObject](https://docs.python.org/3/c-api/type.html#c.PyTypeObject "PyTypeObject").tp_descr_set[¶](https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_descr_set "Link to this definition")
    
An optional pointer to a function for setting and deleting a descriptor’s value.
The function signature is:
```
inttp_descr_set(PyObject*self,PyObject*obj,PyObject*value);