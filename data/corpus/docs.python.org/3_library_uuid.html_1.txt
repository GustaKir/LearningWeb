Title: UUID Generation in Python
URL: https://docs.python.org/3/library/uuid.html
Summary: This section describes the uuid.UUID class for creating universally unique identifiers (UUIDs) in Python. It explains the various input formats for generating a UUID, including hexadecimal strings, byte strings, tuples of integers, and single integers. Additionally, it notes that the platform may not specify whether the UUID is generated safely.
---

unknown[¶](https://docs.python.org/3/library/uuid.html#uuid.SafeUUID.unknown "Link to this definition")
    
The platform does not provide information on whether the UUID was generated safely or not. 

_class_ uuid.UUID(_hex =None_, _bytes =None_, _bytes_le =None_, _fields =None_, _int =None_, _version =None_, _*_ , _is_safe =SafeUUID.unknown_)[¶](https://docs.python.org/3/library/uuid.html#uuid.UUID "Link to this definition")
    
Create a UUID from either a string of 32 hexadecimal digits, a string of 16 bytes in big-endian order as the _bytes_ argument, a string of 16 bytes in little-endian order as the _bytes_le_ argument, a tuple of six integers (32-bit _time_low_ , 16-bit _time_mid_ , 16-bit _time_hi_version_ , 8-bit _clock_seq_hi_variant_ , 8-bit _clock_seq_low_ , 48-bit _node_) as the _fields_ argument, or a single 128-bit integer as the _int_ argument. When a string of hex digits is given, curly braces, hyphens, and a URN prefix are all optional. For example, these expressions all yield the same UUID:
```
UUID('{12345678-1234-5678-1234-567812345678}')
UUID('12345678123456781234567812345678')
UUID('urn:uuid:12345678-1234-5678-1234-567812345678')
UUID(bytes=b'\x12\x34\x56\x78'*4)
UUID(bytes_le=b'\x78\x56\x34\x12\x34\x12\x78\x56' +
       b'\x12\x34\x56\x78\x12\x34\x56\x78')
UUID(fields=(0x12345678, 0x1234, 0x5678, 0x12, 0x34, 0x567812345678))
UUID(int=0x12345678123456781234567812345678)

```

Exactly one of _hex_ , _bytes_ , _bytes_le_ , _fields_ , or _int_ must be given. The _version_ argument is optional; if given, the resulting UUID will have its variant and version number set according to [**RFC 4122**](https://datatracker.ietf.org/doc/html/rfc4122.html), overriding bits in the given _hex_ , _bytes_ , _bytes_le_ , _fields_ , or _int_.
Comparison of UUID objects are made by way of comparing their [`UUID.int`](https://docs.python.org/3/library/uuid.html#uuid.UUID.int "uuid.UUID.int") attributes. Comparison with a non-UUID object raises a [`TypeError`](https://docs.python.org/3/library/exceptions.html#TypeError "TypeError").
`str(uuid)` returns a string in the form `12345678-1234-5678-1234-567812345678` where the 32 hexadecimal digits represent the UUID.
[`UUID`](https://docs.python.org/3/library/uuid.html#uuid.UUID "uuid.UUID") instances have these read-only attributes: 

UUID.bytes[¶](https://docs.python.org/3/library/uuid.html#uuid.UUID.bytes "Link to this definition")
    
The UUID as a 16-byte string (containing the six integer fields in big-endian byte order). 

UUID.bytes_le[¶](https://docs.python.org/3/library/uuid.html#uuid.UUID.bytes_le "Link to this definition")
    
The UUID as a 16-byte string (with _time_low_ , _time_mid_ , and _time_hi_version_ in little-endian byte order). 

UUID.fields[¶](https://docs.python.org/3/library/uuid.html#uuid.UUID.fields "Link to this definition")
    
A tuple of the six integer fields of the UUID, which are also available as six individual attributes and two derived attributes:
Field | Meaning  
---|--- 

UUID.time_low[¶](https://docs.python.org/3/library/uuid.html#uuid.UUID.time_low "Link to this definition")
| The first 32 bits of the UUID. 

UUID.time_mid[¶](https://docs.python.org/3/library/uuid.html#uuid.UUID.time_mid "Link to this definition")
| The next 16 bits of the UUID. 

UUID.time_hi_version[¶](https://docs.python.org/3/library/uuid.html#uuid.UUID.time_hi_version "Link to this definition")
| The next 16 bits of the UUID. 

UUID.clock_seq_hi_variant[¶](https://docs.python.org/3/library/uuid.html#uuid.UUID.clock_seq_hi_variant "Link to this definition")
| The next 8 bits of the UUID. 

UUID.clock_seq_low[¶](https://docs.python.org/3/library/uuid.html#uuid.UUID.clock_seq_low "Link to this definition")
| The next 8 bits of the UUID. 

UUID.node[¶](https://docs.python.org/3/library/uuid.html#uuid.UUID.node "Link to this definition")
| The last 48 bits of the UUID. 

UUID.time[¶](https://docs.python.org/3/library/uuid.html#uuid.UUID.time "Link to this definition")
| The 60-bit timestamp. 

UUID.clock_seq[¶](https://docs.python.org/3/library/uuid.html#uuid.UUID.clock_seq "Link to this definition")
| The 14-bit sequence number. 

UUID.hex[¶](https://docs.python.org/3/library/uuid.html#uuid.UUID.hex "Link to this definition")
      
The UUID as a 32-character lowercase hexadecimal string. 

UUID.int[¶](https://docs.python.org/3/library/uuid.html#uuid.UUID.int "Link to this definition")
    
The UUID as a 128-bit integer. 

UUID.urn[¶](https://docs.python.org/3/library/uuid.html#uuid.UUID.urn "Link to this definition")
    
The UUID as a URN as specified in [**RFC 4122**](https://datatracker.ietf.org/doc/html/rfc4122.html).