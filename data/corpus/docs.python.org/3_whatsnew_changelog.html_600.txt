Title: Python Changelog Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section of the Python changelog details various bug fixes, including a resolution to a use-after-free issue in key sharing dictionaries, enhancements to ImportError attributes and messages, and adjustments to compatibility policy behavior regarding max_line_length. Additionally, it addresses an issue with RunMainFromImporter affecting sys.path and resolves potential BytesWarnings during code object comparisons.
---

(Reverted in [bpo-32911](https://bugs.python.org/issue?@action=redirect&bpo=32911).)
  * [bpo-29438](https://bugs.python.org/issue?@action=redirect&bpo=29438): Fixed use-after-free problem in key sharing dict.
  * [bpo-29546](https://bugs.python.org/issue?@action=redirect&bpo=29546): Set the ‘path’ and ‘name’ attribute on ImportError for `from ... import ...`.
  * [bpo-29546](https://bugs.python.org/issue?@action=redirect&bpo=29546): Improve from-import error message with location
  * [bpo-29478](https://bugs.python.org/issue?@action=redirect&bpo=29478): If max_line_length=None is specified while using the Compat32 policy, it is no longer ignored. Patch by Mircea Cosbuc.
  * [bpo-29319](https://bugs.python.org/issue?@action=redirect&bpo=29319): Prevent RunMainFromImporter overwriting sys.path[0].
  * [bpo-29337](https://bugs.python.org/issue?@action=redirect&bpo=29337): Fixed possible BytesWarning when compare the code objects. Warnings could be emitted at compile time.
  * [bpo-29327](https://bugs.python.org/issue?@action=redirect&bpo=29327): Fixed a crash when pass the iterable keyword argument to sorted().
  * [bpo-29034](https://bugs.python.org/issue?@action=redirect&bpo=29034): Fix memory leak and use-after-free in os module (path_converter).
  * [bpo-29159](https://bugs.python.org/issue?@action=redirect&bpo=29159): Fix regression in bytes(x) when x.__index__() raises Exception.
  * [bpo-29049](https://bugs.python.org/issue?@action=redirect&bpo=29049): Call _PyObject_GC_TRACK() lazily when calling Python function. Calling function is up to 5% faster.
  * [bpo-28927](https://bugs.python.org/issue?@action=redirect&bpo=28927): bytes.fromhex() and bytearray.fromhex() now ignore all ASCII whitespace, not only spaces. Patch by Robert Xiao.
  * [bpo-28932](https://bugs.python.org/issue?@action=redirect&bpo=28932): Do not include <sys/random.h> if it does not exist.
  * [bpo-25677](https://bugs.python.org/issue?@action=redirect&bpo=25677): Correct the positioning of the syntax error caret for indented blocks. Based on patch by Michael Layzell.
  * [bpo-29000](https://bugs.python.org/issue?@action=redirect&bpo=29000): Fixed bytes formatting of octals with zero padding in alternate form.
  * [bpo-18896](https://bugs.python.org/issue?@action=redirect&bpo=18896): Python function can now have more than 255 parameters. collections.namedtuple() now supports tuples with more than 255 elements.
  * [bpo-28596](https://bugs.python.org/issue?@action=redirect&bpo=28596): The preferred encoding is UTF-8 on Android. Patch written by Chi Hsuan Yen.
  * [bpo-22257](https://bugs.python.org/issue?@action=redirect&bpo=22257): Clean up interpreter startup (see [**PEP 432**](https://peps.python.org/pep-0432/)).
  * [bpo-26919](https://bugs.python.org/issue?@action=redirect&bpo=26919): On Android, operating system data is now always encoded/decoded to/from UTF-8, instead of the locale encoding to avoid inconsistencies with os.fsencode() and os.fsdecode() which are already using UTF-8.
  * [bpo-28991](https://bugs.python.org/issue?@action=redirect&bpo=28991): functools.lru_cache() was susceptible to an obscure reentrancy bug triggerable by a monkey-patched len() function.
  * [bpo-28147](https://bugs.python.org/issue?@action=redirect&bpo=28147): Fix a memory leak in split-table dictionaries: setattr() must not convert combined table into split table. Patch written by INADA Naoki.
  * [bpo-28739](https://bugs.python.org/issue?@action=redirect&bpo=28739): f-string expressions are no longer accepted as docstrings and by ast.literal_eval() even if they do not include expressions.
  * [bpo-28512](https://bugs.python.org/issue?@action=redirect&bpo=28512): Fixed setting the offset attribute of SyntaxError by PyErr_SyntaxLocationEx() and PyErr_SyntaxLocationObject().
  * [bpo-28918](https://bugs.python.org/issue?@action=redirect&bpo=28918): Fix the cross compilation of xxlimited when Python has been built with Py_DEBUG defined.
  * [bpo-23722](https://bugs.python.org/issue?@action=redirect&bpo=23722): Rather than silently producing a class that doesn’t support zero-argument `super()` in methods, failing to pass the new `__classcell__` namespace entry up to `type.__new__` now results in a `DeprecationWarning` and a class that supports zero-argument `super()`.
  * [bpo-28797](https://bugs.python.org/issue?@action=redirect&bpo=28797): Modifying the class __dict__ inside the __set_name__ method of a descriptor that is used inside that class no longer prevents calling the __set_name__ method of other descriptors.
  * [bpo-28799](https://bugs.python.org/issue?@action=redirect&bpo=28799): Remove the `PyEval_GetCallStats()` function and deprecate the untested and undocumented `sys.callstats()` function.