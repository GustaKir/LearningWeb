Title: Prime Number Functions in Python
URL: https://docs.python.org/3/library/itertools.html
Summary: This document provides implementations for determining prime numbers and calculating the totient function. It includes a prime factorization generator that yields prime factors of a number and functions to check if a number is prime and to count the numbers coprime to a given integer.
---

03
  for prime in sieve(isqrt(n) + 1):
    while not n % prime:
      yield prime
      n //= prime
      if n == 1:
        return
  if n > 1:
    yield n
defis_prime(n):
  "Return True if n is prime."
  # is_prime(1_000_000_000_000_403) → True
  return n > 1 and next(factor(n)) == n
deftotient(n):
  "Count of natural numbers up to n that are coprime to n."
  # https://mathworld.wolfram.com/TotientFunction.html
  # totient(12) → 4 because len([1, 5, 7, 11]) == 4
  for prime in set(factor(n)):
    n -= n // prime
  return n

```

### [Table of Contents](https://docs.python.org/3/contents.html)
  * [`itertools` — Functions creating iterators for efficient looping](https://docs.python.org/3/library/itertools.html)
    * [Itertool Functions](https://docs.python.org/3/library/itertools.html#itertool-functions)
    * [Itertools Recipes](https://docs.python.org/3/library/itertools.html#itertools-recipes)


#### Previous topic
[Functional Programming Modules](https://docs.python.org/3/library/functional.html "previous chapter")
#### Next topic
[`functools` — Higher-order functions and operations on callable objects](https://docs.python.org/3/library/functools.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/itertools.rst)


«
### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/library/functools.html "functools — Higher-order functions and operations on callable objects") |
  * [previous](https://docs.python.org/3/library/functional.html "Functional Programming Modules") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [The Python Standard Library](https://docs.python.org/3/library/index.html) »
  * [Functional Programming Modules](https://docs.python.org/3/library/functional.html) »
  * [`itertools` — Functions creating iterators for efficient looping](https://docs.python.org/3/library/itertools.html)
  * | 
  * Theme  Auto Light Dark |


© [ Copyright ](https://docs.python.org/3/copyright.html) 2001-2025, Python Software Foundation. This page is licensed under the Python Software Foundation License Version 2. Examples, recipes, and other code in the documentation are additionally licensed under the Zero Clause BSD License. See [History and License](https://docs.python.org/license.html) for more information. The Python Software Foundation is a non-profit corporation. [Please donate.](https://www.python.org/psf/donations/) Last updated on Apr 27, 2025 (05:38 UTC). [Found a bug](https://docs.python.org/bugs.html)? Created using [Sphinx](https://www.sphinx-doc.org/) 8.2.3. 
  *[*]: Keyword-only parameters separator (PEP 3102)