Title: Python Built-in Functions: `id()`
URL: https://docs.python.org/3/library/functions.html
Summary: The `id()` function returns the unique identity of an object as an integer, which remains constant for the object's lifetime. It can raise an auditing event with the argument `id`. Additionally, it references related functions such as `format()`, `int()`, and `float.hex()` for further conversions.
---

```

See also [`format()`](https://docs.python.org/3/library/functions.html#format "format") for more information.
See also [`int()`](https://docs.python.org/3/library/functions.html#int "int") for converting a hexadecimal string to an integer using a base of 16.
Note
To obtain a hexadecimal string representation for a float, use the [`float.hex()`](https://docs.python.org/3/library/stdtypes.html#float.hex "float.hex") method. 

id(_object_)[¶](https://docs.python.org/3/library/functions.html#id "Link to this definition")
    
Return the “identity” of an object. This is an integer which is guaranteed to be unique and constant for this object during its lifetime. Two objects with non-overlapping lifetimes may have the same [`id()`](https://docs.python.org/3/library/functions.html#id "id") value.
**CPython implementation detail:** This is the address of the object in memory.
Raises an [auditing event](https://docs.python.org/3/library/sys.html#auditing) `builtins.id` with argument `id`. 

input()[¶](https://docs.python.org/3/library/functions.html#input "Link to this definition")


input(_prompt_)
    
If the _prompt_ argument is present, it is written to standard output without a trailing newline. The function then reads a line from input, converts it to a string (stripping a trailing newline), and returns that. When EOF is read, [`EOFError`](https://docs.python.org/3/library/exceptions.html#EOFError "EOFError") is raised. Example:
>>>```
>>> s = input('--> ')
--> Monty Python's Flying Circus
>>> s
"Monty Python's Flying Circus"

```

If the [`readline`](https://docs.python.org/3/library/readline.html#module-readline "readline: GNU readline support for Python. \(Unix\)") module was loaded, then [`input()`](https://docs.python.org/3/library/functions.html#input "input") will use it to provide elaborate line editing and history features.
Raises an [auditing event](https://docs.python.org/3/library/sys.html#auditing) `builtins.input` with argument `prompt` before reading input
Raises an [auditing event](https://docs.python.org/3/library/sys.html#auditing) `builtins.input/result` with the result after successfully reading input. 

_class_ int(_number =0_, _/_)[¶](https://docs.python.org/3/library/functions.html#int "Link to this definition")


_class_ int(_string_ , _/_ , _base =10_)
    
Return an integer object constructed from a number or a string, or return `0` if no arguments are given.
Examples:
>>>```
>>> int(123.45)
123
>>> int('123')
123
>>> int('  -12_345\n')
-12345
>>> int('FACE', 16)
64206
>>> int('0xface', 0)
64206
>>> int('01110011', base=2)
115