Title: Shutdown Methods in Python
URL: https://docs.python.org/3/genindex-S.html
Summary: This section provides a list of various 'shutdown' methods available in different Python modules, including asyncio, concurrent.futures, imaplib, logging, multiprocessing, queue, socket, and socketserver.
---

e.html#queue.ShutDown)
  * [shutdown() (asyncio.Queue method)](https://docs.python.org/3/library/asyncio-queue.html#asyncio.Queue.shutdown)
    * [(concurrent.futures.Executor method)](https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Executor.shutdown)
    * [(imaplib.IMAP4 method)](https://docs.python.org/3/library/imaplib.html#imaplib.IMAP4.shutdown)
    * [(in module logging)](https://docs.python.org/3/library/logging.html#logging.shutdown)
    * [(multiprocessing.managers.BaseManager method)](https://docs.python.org/3/library/multiprocessing.html#multiprocessing.managers.BaseManager.shutdown)
    * [(queue.Queue method)](https://docs.python.org/3/library/queue.html#queue.Queue.shutdown)
    * [(socket.socket method)](https://docs.python.org/3/library/socket.html#socket.socket.shutdown)
    * [(socketserver.BaseServer method)](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer.shutdown)
  * [shutdown_asyncgens() (asyncio.loop method)](https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.loop.shutdown_asyncgens)
  * [shutdown_default_executor() (asyncio.loop method)](https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.loop.shutdown_default_executor)
  * shutil 
    * [module](https://docs.python.org/3/library/shutil.html#module-shutil)
  * [SI (in module curses.ascii)](https://docs.python.org/3/library/curses.ascii.html#curses.ascii.SI)
  * [side_effect (unittest.mock.Mock attribute)](https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock.side_effect)
  * [SIG_BLOCK (in module signal)](https://docs.python.org/3/library/signal.html#signal.SIG_BLOCK)
  * [SIG_DFL (in module signal)](https://docs.python.org/3/library/signal.html#signal.SIG_DFL)
  * [SIG_IGN (in module signal)](https://docs.python.org/3/library/signal.html#signal.SIG_IGN)
  * [SIG_SETMASK (in module signal)](https://docs.python.org/3/library/signal.html#signal.SIG_SETMASK)
  * [SIG_UNBLOCK (in module signal)](https://docs.python.org/3/library/signal.html#signal.SIG_UNBLOCK)
  * [SIGABRT (in module signal)](https://docs.python.org/3/library/signal.html#signal.SIGABRT)
  * [SIGALRM (in module signal)](https://docs.python.org/3/library/signal.html#signal.SIGALRM)
  * [SIGBREAK (in module signal)](https://docs.python.org/3/library/signal.html#signal.SIGBREAK)
  * [SIGBUS (in module signal)](https://docs.python.org/3/library/signal.html#signal.SIGBUS)
  * [SIGCHLD (in module signal)](https://docs.python.org/3/library/signal.html#signal.SIGCHLD)
  * [SIGCLD (in module signal)](https://docs.python.org/3/library/signal.html#signal.SIGCLD)
  * [SIGCONT (in module signal)](https://docs.python.org/3/library/signal.html#signal.SIGCONT)
  * [SIGFPE (in module signal)](https://docs.python.org/3/library/signal.html#signal.SIGFPE)
  * [SIGHUP (in module signal)](https://docs.python.org/3/library/signal.html#signal.SIGHUP)
  * [SIGILL (in module signal)](https://docs.python.org/3/library/signal.html#signal.SIGILL)
  * [SIGINT (C macro)](https://docs.python.org/3/c-api/exceptions.html#index-1), [[1]](https://docs.python.org/3/c-api/exceptions.html#index-2)
    * [(in module signal)](https://docs.python.org/3/library/signal.html#signal.SIGINT)
  * [siginterrupt() (in module signal)](https://docs.python.org/3/library/signal.html#signal.siginterrupt)
  * [SIGKILL (in module signal)](https://docs.python.org/3/library/signal.html#signal.SIGKILL)
  * [Sigmasks (class in signal)](https://docs.python.org/3/library/signal.html#signal.Sigmasks)
  * signal 
    * [module](https://docs.python.org/3/c-api/exceptions.html#index-1), [[1]](https://docs.python.org/3/c-api/exceptions.html#index-2), [[2]](https://docs.python.org/3/c-api/exceptions.html#index-3), [[3]](https://docs.python.org/3/library/_thread.html#index-2), [[4]](https://docs.python.org/3/library/signal.html#module-signal)
  * [signal() (in module signal)](https://docs.python.org/3/library/signal.html#signal.signal)
  * [Signals (class in signal)](https://docs.python.org/3/library/signal.html#signal.Signals)
  * [Signature (class in inspect)](https://docs.python.org/3/library/inspect.html#inspect.Signature)
  * [signature (inspect.BoundArguments attribute)](https://docs.python.org/3/library/inspect.html#inspect.BoundArguments.signature)
  * [signature() (in module inspect)](https://docs.python.org/3/library/inspect.html#inspect.signature)
  * [sigpending() (in module signal)](https://docs.python.org/3/library/signal.html#signal.sigpending)
  * [SIGPIPE (in module signal)](https://docs.python.org/3/library/signal.html#signal.SIGPIPE)
  * [SIGSEGV (in module signal)](https://docs.python.org/3/library/signal.html#signal.SIGSEGV)
  * [SIGSTKFLT (in module signal)](https://docs.python.org/3/library/signal.html#signal.SIGSTKFLT)
  * [SIGTERM (in module signal)](https://docs.python.org/3/library/signal.html#signal.SIGTERM)
  * [sigtimedwait() (in module signal)](https://docs.python.org/3/library/signal.html#signal.sigtimedwai