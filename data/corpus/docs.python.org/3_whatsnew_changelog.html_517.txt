Title: Python 3 Changelog - Bug Fixes
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This update includes several bug fixes: resolving a crash in the `bytes()` function during iteration over a mutated list, correcting the AST line and column attributes for decorated functions and classes for better tracing accuracy, fixing a null pointer dereference in `bytesobject.c`, and addressing other unspecified issues.
---

Patch by Pablo Galindo.
  * [bpo-34973](https://bugs.python.org/issue?@action=redirect&bpo=34973): Fixed crash in [`bytes()`](https://docs.python.org/3/library/stdtypes.html#bytes "bytes") when the [`list`](https://docs.python.org/3/library/stdtypes.html#list "list") argument is mutated while it is iterated.
  * [bpo-34876](https://bugs.python.org/issue?@action=redirect&bpo=34876): The _lineno_ and _col_offset_ attributes of the AST for decorated function and class refer now to the position of the corresponding `def`, `async def` and `class` instead of the position of the first decorator. This leads to more correct line reporting in tracing. This is the only case when the position of child AST nodes can precede the position of the parent AST node.
  * [bpo-34879](https://bugs.python.org/issue?@action=redirect&bpo=34879): Fix a possible null pointer dereference in bytesobject.c. Patch by Zackery Spytz.
  * [bpo-34784](https://bugs.python.org/issue?@action=redirect&bpo=34784): Fix the implementation of PyStructSequence_NewType in order to create heap allocated StructSequences.
  * [bpo-32912](https://bugs.python.org/issue?@action=redirect&bpo=32912): A [`SyntaxWarning`](https://docs.python.org/3/library/exceptions.html#SyntaxWarning "SyntaxWarning") is now emitted instead of a [`DeprecationWarning`](https://docs.python.org/3/library/exceptions.html#DeprecationWarning "DeprecationWarning") for invalid escape sequences in string and bytes literals.
  * [bpo-34854](https://bugs.python.org/issue?@action=redirect&bpo=34854): Fixed a crash in compiling string annotations containing a lambda with a keyword-only argument that doesn’t have a default value.
  * [bpo-34850](https://bugs.python.org/issue?@action=redirect&bpo=34850): The compiler now produces a [`SyntaxWarning`](https://docs.python.org/3/library/exceptions.html#SyntaxWarning "SyntaxWarning") when identity checks (`is` and `is not`) are used with certain types of literals (e.g. strings, ints). These can often work by accident in CPython, but are not guaranteed by the language spec. The warning advises users to use equality tests (`==` and `!=`) instead.
  * [bpo-34824](https://bugs.python.org/issue?@action=redirect&bpo=34824): Fix a possible null pointer dereference in Modules/_ssl.c. Patch by Zackery Spytz.
  * [bpo-30156](https://bugs.python.org/issue?@action=redirect&bpo=30156): The C function `property_descr_get()` uses a “cached” tuple to optimize function calls. But this tuple can be discovered in debug mode with [`sys.getobjects()`](https://docs.python.org/3/library/sys.html#sys.getobjects "sys.getobjects"). Remove the optimization, it’s not really worth it and it causes 3 different crashes last years.
  * [bpo-34762](https://bugs.python.org/issue?@action=redirect&bpo=34762): Fix contextvars C API to use PyObject* pointer types.
  * [bpo-34751](https://bugs.python.org/issue?@action=redirect&bpo=34751): The hash function for tuples is now based on xxHash which gives better collision results on (formerly) pathological cases. Additionally, on 64-bit systems it improves tuple hashes in general. Patch by Jeroen Demeyer with substantial contributions by Tim Peters.
  * [bpo-34735](https://bugs.python.org/issue?@action=redirect&bpo=34735): Fix a memory leak in Modules/timemodule.c. Patch by Zackery Spytz.
  * [bpo-34683](https://bugs.python.org/issue?@action=redirect&bpo=34683): Fixed a bug where some SyntaxError error pointed to locations that were off-by-one.
  * [bpo-34651](https://bugs.python.org/issue?@action=redirect&bpo=34651): Only allow the main interpreter to fork. The avoids the possibility of affecting the main interpreter, which is critical to operation of the runtime.
  * [bpo-34653](https://bugs.python.org/issue?@action=redirect&bpo=34653): Remove unused function PyParser_SimpleParseStringFilename.
  * [bpo-32236](https://bugs.python.org/issue?@action=redirect&bpo=32236): Warn that line buffering is not supported if [`open()`](https://docs.python.org/3/library/functions.html#open "open") is called with binary mode and `buffering=1`.
  * [bpo-34641](https://bugs.python.org/issue?@action=redirect&bpo=34641): Further restrict the syntax of the left-hand side of keyword arguments in function calls. In particular, `f((keyword)=arg)` is now disallowed.
  * [bpo-34637](https://bugs.python.org/issue?@action=redirect&bpo=34637): Make the _start_ argument to _sum()_ visible as a keyword argument.
  * [bpo-1621](https://bugs.python.org/issue?@action=redirect&bpo=1621): Do not assume signed integer overflow behavior (C undefined behavior) when performing set hash table resizing.
  * [bpo-34588](https://bugs.python.org/issue?@action=redirect&bpo=34588): Fix an off-by-one in the recursive call pruning feature of traceback formatting.
  * [bpo-34485](https://bugs.python.org/issue?@action=redirect&bpo=34485): On Windows, the LC_CTYPE is now set to the user preferred locale at startup.