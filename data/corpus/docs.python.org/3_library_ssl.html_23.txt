Title: Loading DH Parameters and Setting ECDH Curve in SSLContext
URL: https://docs.python.org/3/library/ssl.html
Summary: The document describes methods for loading Diffie-Hellman key exchange parameters and setting the curve name for Elliptic Curve-based Diffie-Hellman in Python's SSLContext. It explains the forward secrecy benefits and resource costs associated with using DH parameters and notes that these settings do not apply to client sockets. Additionally, it mentions the OP_SINGLE_DH_USE option for enhancing security and highlights that ECDH is a faster alternative to traditional DH.
---

SSLContext.load_dh_params(_dhfile_)[¶](https://docs.python.org/3/library/ssl.html#ssl.SSLContext.load_dh_params "Link to this definition")
    
Load the key generation parameters for Diffie-Hellman (DH) key exchange. Using DH key exchange improves forward secrecy at the expense of computational resources (both on the server and on the client). The _dhfile_ parameter should be the path to a file containing DH parameters in PEM format.
This setting doesn’t apply to client sockets. You can also use the [`OP_SINGLE_DH_USE`](https://docs.python.org/3/library/ssl.html#ssl.OP_SINGLE_DH_USE "ssl.OP_SINGLE_DH_USE") option to further improve security.
Added in version 3.3. 

SSLContext.set_ecdh_curve(_curve_name_)[¶](https://docs.python.org/3/library/ssl.html#ssl.SSLContext.set_ecdh_curve "Link to this definition")
    
Set the curve name for Elliptic Curve-based Diffie-Hellman (ECDH) key exchange. ECDH is significantly faster than regular DH while arguably as secure. The _curve_name_ parameter should be a string describing a well-known elliptic curve, for example `prime256v1` for a widely supported curve.
This setting doesn’t apply to client sockets. You can also use the [`OP_SINGLE_ECDH_USE`](https://docs.python.org/3/library/ssl.html#ssl.OP_SINGLE_ECDH_USE "ssl.OP_SINGLE_ECDH_USE") option to further improve security.
This method is not available if [`HAS_ECDH`](https://docs.python.org/3/library/ssl.html#ssl.HAS_ECDH "ssl.HAS_ECDH") is `False`.
Added in version 3.3.
See also 

[SSL/TLS & Perfect Forward Secrecy](https://vincent.bernat.ch/en/blog/2011-ssl-perfect-forward-secrecy)
    
Vincent Bernat.