Title: selectors — High-level I/O multiplexing
URL: https://docs.python.org/3/library/selectors.html
Summary: This section of the Python documentation introduces the `selectors` module, which provides high-level I/O multiplexing tools for managing multiple I/O streams and events efficiently.
---

[ ![Python logo](https://docs.python.org/3/_static/py.svg) ](https://www.python.org/) dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
Theme  Auto Light Dark
### [Table of Contents](https://docs.python.org/3/contents.html)
  * [`selectors` — High-level I/O multiplexing](https://docs.python.org/3/library/selectors.html)
    * [Introduction](https://docs.python.org/3/library/selectors.html#introduction)
    * [Classes](https://docs.python.org/3/library/selectors.html#classes)
    * [Examples](https://docs.python.org/3/library/selectors.html#examples)


#### Previous topic
[`select` — Waiting for I/O completion](https://docs.python.org/3/library/select.html "previous chapter")
#### Next topic
[`signal` — Set handlers for asynchronous events](https://docs.python.org/3/library/signal.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/selectors.rst)


### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/library/signal.html "signal — Set handlers for asynchronous events") |
  * [previous](https://docs.python.org/3/library/select.html "select — Waiting for I/O completion") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [The Python Standard Library](https://docs.python.org/3/library/index.html) »
  * [Networking and Interprocess Communication](https://docs.python.org/3/library/ipc.html) »
  * [`selectors` — High-level I/O multiplexing](https://docs.python.org/3/library/selectors.html)
  * | 
  * Theme  Auto Light Dark |


# `selectors` — High-level I/O multiplexing[¶](https://docs.python.org/3/library/selectors.html#module-selectors "Link to this heading")
Added in version 3.4.
**Source code:** [Lib/selectors.py](https://github.com/python/cpython/tree/3.13/Lib/selectors.py)
## Introduction[¶](https://docs.python.org/3/library/selectors.html#introduction "Link to this heading")
This module allows high-level and efficient I/O multiplexing, built upon the [`select`](https://docs.python.org/3/library/select.html#module-select "select: Wait for I/O completion on multiple streams.") module primitives. Users are encouraged to use this module instead, unless they want precise control over the OS-level primitives used.
It defines a [`BaseSelector`](https://docs.python.org/3/library/selectors.html#selectors.BaseSelector "selectors.BaseSelector") abstract base class, along with several concrete implementations ([`KqueueSelector`](https://docs.python.org/3/library/selectors.html#selectors.KqueueSelector "selectors.KqueueSelector"), [`EpollSelector`](https://docs.python.org/3/library/selectors.html#selectors.EpollSelector "selectors.EpollSelector")…), that can be used to wait for I/O readiness notification on multiple file objects. In the following, “file object” refers to any object with a [`fileno()`](https://docs.python.org/3/library/io.html#io.IOBase.fileno "io.IOBase.fileno") method, or a raw file descriptor. See [file object](https://docs.python.org/3/glossary.html#term-file-object).
[`DefaultSelector`](https://docs.python.org/3/library/selectors.html#selectors.DefaultSelector "selectors.DefaultSelector") is an alias to the most efficient implementation available on the current platform: this should be the default choice for most users.
Note
The type of file objects supported depends on the platform: on Windows, sockets are supported, but not pipes, whereas on Unix, both are supported (some other types may be supported as well, such as fifos or special file devices).
See also 

[`select`](https://docs.python.org/3/library/select.html#module-select "select: Wait for I/O completion on multiple streams.")
    
Low-level I/O multiplexing module.
[Availability](https://docs.python.org/3/library/intro.html#availability): not WASI.
This module does not work or is not available on WebAssembly. See [WebAssembly platforms](https://docs.python.org/3/library/intro.html#wasm-availability) for more information.
## Classes[¶](https://docs.python.org/3/library/selectors.html#classes "Link to this heading")
Classes hierarchy:
```
BaseSelector
+-- SelectSelector
+-- PollSelector
+-- EpollSelector
+-- DevpollSelector
+-- KqueueSelector