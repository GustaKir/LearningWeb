Title: Python 3.13 Release Notes
URL: https://docs.python.org/3/whatsnew/3.13.html
Summary: In Python 3.13, the `traceback` module has deprecated the `TracebackException.exc_type` attribute in favor of `TracebackException.exc_type_str`. Additionally, the `typing` module has deprecated the undocumented keyword argument syntax for creating `NamedTuple` classes.
---

(Contributed in [gh-115256](https://github.com/python/cpython/issues/115256).)
  * [`traceback`](https://docs.python.org/3/library/traceback.html#module-traceback "traceback: Print or retrieve a stack traceback."):
    * Deprecate the [`TracebackException.exc_type`](https://docs.python.org/3/library/traceback.html#traceback.TracebackException.exc_type "traceback.TracebackException.exc_type") attribute. Use [`TracebackException.exc_type_str`](https://docs.python.org/3/library/traceback.html#traceback.TracebackException.exc_type_str "traceback.TracebackException.exc_type_str") instead. (Contributed by Irit Katriel in [gh-112332](https://github.com/python/cpython/issues/112332).)
  * [`typing`](https://docs.python.org/3/library/typing.html#module-typing "typing: Support for type hints \(see :pep:`484`\)."):
    * Deprecate the undocumented keyword argument syntax for creating [`NamedTuple`](https://docs.python.org/3/library/typing.html#typing.NamedTuple "typing.NamedTuple") classes (e.g. `Point = NamedTuple("Point", x=int, y=int)`), to be removed in Python 3.15. Use the class-based syntax or the functional syntax instead. (Contributed by Alex Waygood in [gh-105566](https://github.com/python/cpython/issues/105566).)
    * Deprecate omitting the _fields_ parameter when creating a [`NamedTuple`](https://docs.python.org/3/library/typing.html#typing.NamedTuple "typing.NamedTuple") or [`typing.TypedDict`](https://docs.python.org/3/library/typing.html#typing.TypedDict "typing.TypedDict") class, and deprecate passing `None` to the _fields_ parameter of both types. Python 3.15 will require a valid sequence for the _fields_ parameter. To create a NamedTuple class with zero fields, use `class NT(NamedTuple): pass` or `NT = NamedTuple("NT", ())`. To create a TypedDict class with zero fields, use `class TD(TypedDict): pass` or `TD = TypedDict("TD", {})`. (Contributed by Alex Waygood in [gh-105566](https://github.com/python/cpython/issues/105566) and [gh-105570](https://github.com/python/cpython/issues/105570).)
    * Deprecate the [`typing.no_type_check_decorator()`](https://docs.python.org/3/library/typing.html#typing.no_type_check_decorator "typing.no_type_check_decorator") decorator function, to be removed in in Python 3.15. After eight years in the [`typing`](https://docs.python.org/3/library/typing.html#module-typing "typing: Support for type hints \(see :pep:`484`\).") module, it has yet to be supported by any major type checker. (Contributed by Alex Waygood in [gh-106309](https://github.com/python/cpython/issues/106309).)
    * Deprecate [`typing.AnyStr`](https://docs.python.org/3/library/typing.html#typing.AnyStr "typing.AnyStr"). In Python 3.16, it will be removed from `typing.__all__`, and a [`DeprecationWarning`](https://docs.python.org/3/library/exceptions.html#DeprecationWarning "DeprecationWarning") will be emitted at runtime when it is imported or accessed. It will be removed entirely in Python 3.18. Use the new [type parameter syntax](https://docs.python.org/3/reference/compound_stmts.html#type-params) instead. (Contributed by Michael The in [gh-107116](https://github.com/python/cpython/issues/107116).)
  * [`wave`](https://docs.python.org/3/library/wave.html#module-wave "wave: Provide an interface to the WAV sound format."):
    * Deprecate the [`getmark()`](https://docs.python.org/3/library/wave.html#wave.Wave_read.getmark "wave.Wave_read.getmark"), `setmark()`, and [`getmarkers()`](https://docs.python.org/3/library/wave.html#wave.Wave_read.getmarkers "wave.Wave_read.getmarkers") methods of the [`Wave_read`](https://docs.python.org/3/library/wave.html#wave.Wave_read "wave.Wave_read") and [`Wave_write`](https://docs.python.org/3/library/wave.html#wave.Wave_write "wave.Wave_write") classes, to be removed in Python 3.15. (Contributed by Victor Stinner in [gh-105096](https://github.com/python/cpython/issues/105096).)