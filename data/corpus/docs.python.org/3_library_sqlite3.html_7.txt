Title: SQLite3 Authorizer Callback Flags
URL: https://docs.python.org/3/library/sqlite3.html
Summary: This section discusses the use of flags in the `_authorizer_callback_` callable that is set via `Connection.set_authorizer()`. It explains how to use flags like `SQLITE_OK`, `SQLITE_DENY`, and `SQLITE_IGNORE` to manage access control in SQLite operations.
---

```

This flag may be combined with [`PARSE_DECLTYPES`](https://docs.python.org/3/library/sqlite3.html#sqlite3.PARSE_DECLTYPES "sqlite3.PARSE_DECLTYPES") using the `|` (bitwise or) operator. 

sqlite3.SQLITE_OK[¶](https://docs.python.org/3/library/sqlite3.html#sqlite3.SQLITE_OK "Link to this definition")


sqlite3.SQLITE_DENY[¶](https://docs.python.org/3/library/sqlite3.html#sqlite3.SQLITE_DENY "Link to this definition")


sqlite3.SQLITE_IGNORE[¶](https://docs.python.org/3/library/sqlite3.html#sqlite3.SQLITE_IGNORE "Link to this definition")
    
Flags that should be returned by the _authorizer_callback_ [callable](https://docs.python.org/3/glossary.html#term-callable) passed to [`Connection.set_authorizer()`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.set_authorizer "sqlite3.Connection.set_authorizer"), to indicate whether:
  * Access is allowed (`SQLITE_OK`),
  * The SQL statement should be aborted with an error (`SQLITE_DENY`)
  * The column should be treated as a `NULL` value (`SQLITE_IGNORE`)



sqlite3.apilevel[¶](https://docs.python.org/3/library/sqlite3.html#sqlite3.apilevel "Link to this definition")
    
String constant stating the supported DB-API level. Required by the DB-API. Hard-coded to `"2.0"`. 

sqlite3.paramstyle[¶](https://docs.python.org/3/library/sqlite3.html#sqlite3.paramstyle "Link to this definition")
    
String constant stating the type of parameter marker formatting expected by the `sqlite3` module. Required by the DB-API. Hard-coded to `"qmark"`.
Note
The `named` DB-API parameter style is also supported. 

sqlite3.sqlite_version[¶](https://docs.python.org/3/library/sqlite3.html#sqlite3.sqlite_version "Link to this definition")
    
Version number of the runtime SQLite library as a [`string`](https://docs.python.org/3/library/stdtypes.html#str "str"). 

sqlite3.sqlite_version_info[¶](https://docs.python.org/3/library/sqlite3.html#sqlite3.sqlite_version_info "Link to this definition")
    
Version number of the runtime SQLite library as a [`tuple`](https://docs.python.org/3/library/stdtypes.html#tuple "tuple") of [`integers`](https://docs.python.org/3/library/functions.html#int "int"). 

sqlite3.threadsafety[¶](https://docs.python.org/3/library/sqlite3.html#sqlite3.threadsafety "Link to this definition")
    
Integer constant required by the DB-API 2.0, stating the level of thread safety the `sqlite3` module supports. This attribute is set based on the default [threading mode](https://sqlite.org/threadsafe.html) the underlying SQLite library is compiled with. The SQLite threading modes are:
  1. **Single-thread** : In this mode, all mutexes are disabled and SQLite is unsafe to use in more than a single thread at once.
  2. **Multi-thread** : In this mode, SQLite can be safely used by multiple threads provided that no single database connection is used simultaneously in two or more threads.
  3. **Serialized** : In serialized mode, SQLite can be safely used by multiple threads with no restriction.


The mappings from SQLite threading modes to DB-API 2.0 threadsafety levels are as follows:
SQLite threading mode | [**threadsafety**](https://peps.python.org/pep-0249/#threadsafety) | [SQLITE_THREADSAFE](https://sqlite.org/compile.html#threadsafe) | DB-API 2.0 meaning  
---|---|---|---  
single-thread | 0 | 0 | Threads may not share the module  
multi-thread | 1 | 2 | Threads may share the module, but not connections  
serialized | 3 | 1 | Threads may share the module, connections and cursors  
Changed in version 3.11: Set _threadsafety_ dynamically instead of hard-coding it to `1`. 

sqlite3.version[¶](https://docs.python.org/3/library/sqlite3.html#sqlite3.version "Link to this definition")
    
Version number of this module as a [`string`](https://docs.python.org/3/library/stdtypes.html#str "str"). This is not the version of the SQLite library.
Deprecated since version 3.12, will be removed in version 3.14: This constant used to reflect the version number of the `pysqlite` package, a third-party library which used to upstream changes to `sqlite3`. Today, it carries no meaning or practical value. 

sqlite3.version_info[¶](https://docs.python.org/3/library/sqlite3.html#sqlite3.version_info "Link to this definition")
    
Version number of this module as a [`tuple`](https://docs.python.org/3/library/stdtypes.html#tuple "tuple") of [`integers`](https://docs.python.org/3/library/functions.html#int "int"). This is not the version of the SQLite library.
Deprecated since version 3.12, will be removed in version 3.14: This constant used to reflect the version number of the `pysqlite` package, a third-party library which used to upstream changes to `sqlite3`. Today, it carries no meaning or practical value. 

sqlite3.SQLITE_DBCONFIG_DEFENSIVE[¶](https://docs.python.org/3/library/sqlite3.html#sqlite3.SQLITE_DBCONFIG_DEFENSIVE "Link to this definition")