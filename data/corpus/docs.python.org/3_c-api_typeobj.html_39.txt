Title: PyMappingMethods and Item Assignment in Python C API
URL: https://docs.python.org/3/c-api/typeobj.html
Summary: The 'mp_ass_subscript' function in the 'PyMappingMethods' structure is crucial for item assignment and deletion in Python objects. It mirrors the signature of 'PyObject_SetItem()', allowing for item modification, with the capability to set '_v_' to NULL for deletion. If the slot is NULL, item assignment and deletion are unsupported.
---

[objobjargproc](https://docs.python.org/3/c-api/typeobj.html#c.objobjargproc "objobjargproc")[PyMappingMethods](https://docs.python.org/3/c-api/typeobj.html#c.PyMappingMethods "PyMappingMethods").mp_ass_subscript[¶](https://docs.python.org/3/c-api/typeobj.html#c.PyMappingMethods.mp_ass_subscript "Link to this definition")
    
This function is used by [`PyObject_SetItem()`](https://docs.python.org/3/c-api/object.html#c.PyObject_SetItem "PyObject_SetItem"), [`PyObject_DelItem()`](https://docs.python.org/3/c-api/object.html#c.PyObject_DelItem "PyObject_DelItem"), [`PySequence_SetSlice()`](https://docs.python.org/3/c-api/sequence.html#c.PySequence_SetSlice "PySequence_SetSlice") and [`PySequence_DelSlice()`](https://docs.python.org/3/c-api/sequence.html#c.PySequence_DelSlice "PySequence_DelSlice"). It has the same signature as `PyObject_SetItem()`, but _v_ can also be set to `NULL` to delete an item. If this slot is `NULL`, the object does not support item assignment and deletion.
## Sequence Object Structures[¶](https://docs.python.org/3/c-api/typeobj.html#sequence-object-structures "Link to this heading") 

typePySequenceMethods[¶](https://docs.python.org/3/c-api/typeobj.html#c.PySequenceMethods "Link to this definition")
    
This structure holds pointers to the functions which an object uses to implement the sequence protocol. 

[lenfunc](https://docs.python.org/3/c-api/typeobj.html#c.lenfunc "lenfunc")[PySequenceMethods](https://docs.python.org/3/c-api/typeobj.html#c.PySequenceMethods "PySequenceMethods").sq_length[¶](https://docs.python.org/3/c-api/typeobj.html#c.PySequenceMethods.sq_length "Link to this definition")
    
This function is used by [`PySequence_Size()`](https://docs.python.org/3/c-api/sequence.html#c.PySequence_Size "PySequence_Size") and [`PyObject_Size()`](https://docs.python.org/3/c-api/object.html#c.PyObject_Size "PyObject_Size"), and has the same signature. It is also used for handling negative indices via the [`sq_item`](https://docs.python.org/3/c-api/typeobj.html#c.PySequenceMethods.sq_item "PySequenceMethods.sq_item") and the [`sq_ass_item`](https://docs.python.org/3/c-api/typeobj.html#c.PySequenceMethods.sq_ass_item "PySequenceMethods.sq_ass_item") slots. 

[binaryfunc](https://docs.python.org/3/c-api/typeobj.html#c.binaryfunc "binaryfunc")[PySequenceMethods](https://docs.python.org/3/c-api/typeobj.html#c.PySequenceMethods "PySequenceMethods").sq_concat[¶](https://docs.python.org/3/c-api/typeobj.html#c.PySequenceMethods.sq_concat "Link to this definition")
    
This function is used by [`PySequence_Concat()`](https://docs.python.org/3/c-api/sequence.html#c.PySequence_Concat "PySequence_Concat") and has the same signature. It is also used by the `+` operator, after trying the numeric addition via the [`nb_add`](https://docs.python.org/3/c-api/typeobj.html#c.PyNumberMethods.nb_add "PyNumberMethods.nb_add") slot. 

[ssizeargfunc](https://docs.python.org/3/c-api/typeobj.html#c.ssizeargfunc "ssizeargfunc")[PySequenceMethods](https://docs.python.org/3/c-api/typeobj.html#c.PySequenceMethods "PySequenceMethods").sq_repeat[¶](https://docs.python.org/3/c-api/typeobj.html#c.PySequenceMethods.sq_repeat "Link to this definition")
    
This function is used by [`PySequence_Repeat()`](https://docs.python.org/3/c-api/sequence.html#c.PySequence_Repeat "PySequence_Repeat") and has the same signature. It is also used by the `*` operator, after trying numeric multiplication via the [`nb_multiply`](https://docs.python.org/3/c-api/typeobj.html#c.PyNumberMethods.nb_multiply "PyNumberMethods.nb_multiply") slot.