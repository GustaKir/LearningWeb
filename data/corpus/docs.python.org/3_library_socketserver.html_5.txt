Title: SocketServer Module Overview
URL: https://docs.python.org/3/library/socketserver.html
Summary: This section covers key components of the SocketServer module, including the user-defined request handler class that is instantiated for each request, the server's listening address formatted by the protocol family, and the socket object used for incoming requests.
---

RequestHandlerClass[¶](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer.RequestHandlerClass "Link to this definition")
    
The user-provided request handler class; an instance of this class is created for each request. 

server_address[¶](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer.server_address "Link to this definition")
    
The address on which the server is listening. The format of addresses varies depending on the protocol family; see the documentation for the [`socket`](https://docs.python.org/3/library/socket.html#module-socket "socket: Low-level networking interface.") module for details. For internet protocols, this is a tuple containing a string giving the address, and an integer port number: `('127.0.0.1', 80)`, for example. 

socket[¶](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer.socket "Link to this definition")
    
The socket object on which the server will listen for incoming requests.
The server classes support the following class variables: 

allow_reuse_address[¶](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer.allow_reuse_address "Link to this definition")
    
Whether the server will allow the reuse of an address. This defaults to [`False`](https://docs.python.org/3/library/constants.html#False "False"), and can be set in subclasses to change the policy. 

request_queue_size[¶](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer.request_queue_size "Link to this definition")
    
The size of the request queue. If it takes a long time to process a single request, any requests that arrive while the server is busy are placed into a queue, up to [`request_queue_size`](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer.request_queue_size "socketserver.BaseServer.request_queue_size") requests. Once the queue is full, further requests from clients will get a “Connection denied” error. The default value is usually 5, but this can be overridden by subclasses. 

socket_type[¶](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer.socket_type "Link to this definition")
    
The type of socket used by the server; [`socket.SOCK_STREAM`](https://docs.python.org/3/library/socket.html#socket.SOCK_STREAM "socket.SOCK_STREAM") and [`socket.SOCK_DGRAM`](https://docs.python.org/3/library/socket.html#socket.SOCK_DGRAM "socket.SOCK_DGRAM") are two common values. 

timeout[¶](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer.timeout "Link to this definition")
    
Timeout duration, measured in seconds, or [`None`](https://docs.python.org/3/library/constants.html#None "None") if no timeout is desired. If [`handle_request()`](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer.handle_request "socketserver.BaseServer.handle_request") receives no incoming requests within the timeout period, the [`handle_timeout()`](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer.handle_timeout "socketserver.BaseServer.handle_timeout") method is called.
There are various server methods that can be overridden by subclasses of base server classes like [`TCPServer`](https://docs.python.org/3/library/socketserver.html#socketserver.TCPServer "socketserver.TCPServer"); these methods aren’t useful to external users of the server object. 

finish_request(_request_ , _client_address_)[¶](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer.finish_request "Link to this definition")
    
Actually processes the request by instantiating [`RequestHandlerClass`](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer.RequestHandlerClass "socketserver.BaseServer.RequestHandlerClass") and calling its [`handle()`](https://docs.python.org/3/library/socketserver.html#socketserver.BaseRequestHandler.handle "socketserver.BaseRequestHandler.handle") method. 

get_request()[¶](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer.get_request "Link to this definition")
    
Must accept a request from the socket, and return a 2-tuple containing the _new_ socket object to be used to communicate with the client, and the client’s address.