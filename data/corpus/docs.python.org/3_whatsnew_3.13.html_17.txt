Title: Enhancements to mmap in Python 3.13
URL: https://docs.python.org/3/whatsnew/3.13.html
Summary: Python 3.13 improves the `mmap` module by protecting against crashes on Windows from inaccessible mapped memory. It introduces a new `seekable()` method for seeking file-like objects, and the `seek()` method now returns the absolute position. Additionally, a UNIX-only `_trackfd` parameter has been added.
---

### mmap[¶](https://docs.python.org/3/whatsnew/3.13.html#mmap "Link to this heading")
  * [`mmap`](https://docs.python.org/3/library/mmap.html#mmap.mmap "mmap.mmap") is now protected from crashing on Windows when the mapped memory is inaccessible due to file system errors or access violations. (Contributed by Jannis Weigend in [gh-118209](https://github.com/python/cpython/issues/118209).)
  * [`mmap`](https://docs.python.org/3/library/mmap.html#mmap.mmap "mmap.mmap") has a new [`seekable()`](https://docs.python.org/3/library/mmap.html#mmap.mmap.seekable "mmap.mmap.seekable") method that can be used when a seekable file-like object is required. The [`seek()`](https://docs.python.org/3/library/mmap.html#mmap.mmap.seek "mmap.mmap.seek") method now returns the new absolute position. (Contributed by Donghee Na and Sylvie Liberman in [gh-111835](https://github.com/python/cpython/issues/111835).)
  * The new UNIX-only _trackfd_ parameter for [`mmap`](https://docs.python.org/3/library/mmap.html#mmap.mmap "mmap.mmap") controls file descriptor duplication; if false, the file descriptor specified by _fileno_ will not be duplicated. (Contributed by Zackery Spytz and Petr Viktorin in [gh-78502](https://github.com/python/cpython/issues/78502).)


### multiprocessing[¶](https://docs.python.org/3/whatsnew/3.13.html#multiprocessing "Link to this heading")
  * The default number of worker threads and processes is now selected using [`os.process_cpu_count()`](https://docs.python.org/3/library/os.html#os.process_cpu_count "os.process_cpu_count") instead of [`os.cpu_count()`](https://docs.python.org/3/library/os.html#os.cpu_count "os.cpu_count"). (Contributed by Victor Stinner in [gh-109649](https://github.com/python/cpython/issues/109649).)