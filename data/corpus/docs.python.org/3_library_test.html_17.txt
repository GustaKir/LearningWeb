Title: Threading Helper Functions in Python Testing
URL: https://docs.python.org/3/library/test.html
Summary: This section describes two context managers from the `test.support.threading_helper` module. The `wait_threads_exit` manager waits for all threads initiated in the `with` statement to exit, while the `catch_threading_exception` manager catches exceptions from `threading.Thread`, setting attributes such as `exc_type`, `exc_value`, `exc_traceback`, and the current thread.
---

test.support.threading_helper.wait_threads_exit(_timeout =None_)[¶](https://docs.python.org/3/library/test.html#test.support.threading_helper.wait_threads_exit "Link to this definition")
    
Context manager to wait until all threads created in the `with` statement exit. 

test.support.threading_helper.catch_threading_exception()[¶](https://docs.python.org/3/library/test.html#test.support.threading_helper.catch_threading_exception "Link to this definition")
    
Context manager catching [`threading.Thread`](https://docs.python.org/3/library/threading.html#threading.Thread "threading.Thread") exception using [`threading.excepthook()`](https://docs.python.org/3/library/threading.html#threading.excepthook "threading.excepthook").
Attributes set when an exception is caught:
  * `exc_type`
  * `exc_value`
  * `exc_traceback`
  * `thread`


See [`threading.excepthook()`](https://docs.python.org/3/library/threading.html#threading.excepthook "threading.excepthook") documentation.
These attributes are deleted at the context manager exit.
Usage:
```
with threading_helper.catch_threading_exception() as cm:
  # code spawning a thread which raises an exception
  ...
  # check the thread exception, use cm attributes:
  # exc_type, exc_value, exc_traceback, thread
  ...
# exc_type, exc_value, exc_traceback, thread attributes of cm no longer
# exists at this point
# (to avoid reference cycles)

```

Added in version 3.8.
# [`test.support.os_helper`](https://docs.python.org/3/library/test.html#module-test.support.os_helper "test.support.os_helper: Support for os tests.") — Utilities for os tests[¶](https://docs.python.org/3/library/test.html#module-test.support.os_helper "Link to this heading")
The [`test.support.os_helper`](https://docs.python.org/3/library/test.html#module-test.support.os_helper "test.support.os_helper: Support for os tests.") module provides support for os tests.
Added in version 3.10. 

test.support.os_helper.FS_NONASCII[¶](https://docs.python.org/3/library/test.html#test.support.os_helper.FS_NONASCII "Link to this definition")
    
A non-ASCII character encodable by [`os.fsencode()`](https://docs.python.org/3/library/os.html#os.fsencode "os.fsencode"). 

test.support.os_helper.SAVEDCWD[¶](https://docs.python.org/3/library/test.html#test.support.os_helper.SAVEDCWD "Link to this definition")
    
Set to [`os.getcwd()`](https://docs.python.org/3/library/os.html#os.getcwd "os.getcwd"). 

test.support.os_helper.TESTFN[¶](https://docs.python.org/3/library/test.html#test.support.os_helper.TESTFN "Link to this definition")
    
Set to a name that is safe to use as the name of a temporary file. Any temporary file that is created should be closed and unlinked (removed). 

test.support.os_helper.TESTFN_NONASCII[¶](https://docs.python.org/3/library/test.html#test.support.os_helper.TESTFN_NONASCII "Link to this definition")
    
Set to a filename containing the [`FS_NONASCII`](https://docs.python.org/3/library/test.html#test.support.os_helper.FS_NONASCII "test.support.os_helper.FS_NONASCII") character, if it exists. This guarantees that if the filename exists, it can be encoded and decoded with the default filesystem encoding. This allows tests that require a non-ASCII filename to be easily skipped on platforms where they can’t work. 

test.support.os_helper.TESTFN_UNENCODABLE[¶](https://docs.python.org/3/library/test.html#test.support.os_helper.TESTFN_UNENCODABLE "Link to this definition")
    
Set to a filename (str type) that should not be able to be encoded by file system encoding in strict mode. It may be `None` if it’s not possible to generate such a filename. 

test.support.os_helper.TESTFN_UNDECODABLE[¶](https://docs.python.org/3/library/test.html#test.support.os_helper.TESTFN_UNDECODABLE "Link to this definition")
    
Set to a filename (bytes type) that should not be able to be decoded by file system encoding in strict mode. It may be `None` if it’s not possible to generate such a filename. 

test.support.os_helper.TESTFN_UNICODE[¶](https://docs.python.org/3/library/test.html#test.support.os_helper.TESTFN_UNICODE "Link to this definition")
    
Set to a non-ASCII name for a temporary file. 

_class_ test.support.os_helper.EnvironmentVarGuard[¶](https://docs.python.org/3/library/test.html#test.support.os_helper.EnvironmentVarGuard "Link to this definition")
    
Class used to temporarily set or unset environment variables. Instances can be used as a context manager and have a complete dictionary interface for querying/modifying the underlying `os.environ`. After exit from the context manager all changes to environment variables done through this instance will be rolled back.
Changed in version 3.1: Added dictionary interface.