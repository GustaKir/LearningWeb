Title: Creating Python Virtual Environments
URL: https://docs.python.org/3/library/venv.html
Summary: This section introduces Python virtual environments and references PEP 405 for further background. It notes the lack of support for mobile and WebAssembly platforms, and provides instructions for creating a virtual environment using the `venv` module.
---

See [**PEP 405**](https://peps.python.org/pep-0405/) for more background on Python virtual environments.
See also
[Python Packaging User Guide: Creating and using virtual environments](https://packaging.python.org/guides/installing-using-pip-and-virtual-environments/#create-and-use-virtual-environments)
[Availability](https://docs.python.org/3/library/intro.html#availability): not Android, not iOS, not WASI.
This module is not supported on [mobile platforms](https://docs.python.org/3/library/intro.html#mobile-availability) or [WebAssembly platforms](https://docs.python.org/3/library/intro.html#wasm-availability).
## Creating virtual environments[Â¶](https://docs.python.org/3/library/venv.html#creating-virtual-environments "Link to this heading")
[Virtual environments](https://docs.python.org/3/library/venv.html#venv-def) are created by executing the `venv` module:
```
python-mvenv/path/to/new/virtual/environment

```

This creates the target directory (including parent directories as needed) and places a `pyvenv.cfg` file in it with a `home` key pointing to the Python installation from which the command was run. It also creates a `bin` (or `Scripts` on Windows) subdirectory containing a copy or symlink of the Python executable (as appropriate for the platform or arguments used at environment creation time). It also creates a `lib/pythonX.Y/site-packages` subdirectory (on Windows, this is `Libsite-packages`). If an existing directory is specified, it will be re-used.
Changed in version 3.5: The use of `venv` is now recommended for creating virtual environments.
Deprecated since version 3.6, removed in version 3.8: **pyvenv** was the recommended tool for creating virtual environments for Python 3.3 and 3.4, and replaced in 3.5 by executing `venv` directly.
On Windows, invoke the `venv` command as follows:
```
PS> python -m venv C:\path\to\new\virtual\environment

```

The command, if run with `-h`, will show the available options:
```
usage: venv [-h] [--system-site-packages] [--symlinks | --copies] [--clear]
      [--upgrade] [--without-pip] [--prompt PROMPT] [--upgrade-deps]
      [--without-scm-ignore-files]
      ENV_DIR [ENV_DIR ...]
Creates virtual Python environments in one or more target directories.
positional arguments:
 ENV_DIR        A directory to create the environment in.
options:
 -h, --help      show this help message and exit
 --system-site-packages
            Give the virtual environment access to the system
            site-packages dir.
 --symlinks      Try to use symlinks rather than copies, when
            symlinks are not the default for the platform.
 --copies       Try to use copies rather than symlinks, even when
            symlinks are the default for the platform.
 --clear        Delete the contents of the environment directory
            if it already exists, before environment creation.
 --upgrade       Upgrade the environment directory to use this
            version of Python, assuming Python has been
            upgraded in-place.
 --without-pip     Skips installing or upgrading pip in the virtual
            environment (pip is bootstrapped by default)
 --prompt PROMPT    Provides an alternative prompt prefix for this
            environment.
 --upgrade-deps    Upgrade core dependencies (pip) to the latest
            version in PyPI
 --without-scm-ignore-files
            Skips adding SCM ignore files to the environment
            directory (Git is supported by default).
Once an environment has been created, you may wish to activate it, e.g. by
sourcing an activate script in its bin directory.

```

Changed in version 3.4: Installs pip by default, added the `--without-pip` and `--copies` options.
Changed in version 3.4: In earlier versions, if the target directory already existed, an error was raised, unless the `--clear` or `--upgrade` option was provided.
Changed in version 3.9: Add `--upgrade-deps` option to upgrade pip + setuptools to the latest on PyPI.
Changed in version 3.12: `setuptools` is no longer a core venv dependency.
Changed in version 3.13: Added the `--without-scm-ignore-files` option.
Changed in version 3.13: `venv` now creates a `.gitignore` file for Git by default.
Note
While symlinks are supported on Windows, they are not recommended. Of particular note is that double-clicking `python.exe` in File Explorer will resolve the symlink eagerly and ignore the virtual environment.
Note
On Microsoft Windows, it may be required to enable the `Activate.ps1` script by setting the execution policy for the user. You can do this by issuing the following PowerShell command:
```
PS C:\> Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser