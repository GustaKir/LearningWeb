Title: Python 3.10 Changelog Highlights
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section of the changelog notes the deprecation of using the dict result from `entry_points()`. It highlights updates including the conversion of `P.args` and `P.kwargs` to new classes for better representation, the addition of an `encoding` parameter in `logging.fileConfig()`, and enhancements to `fileinput.input()` and `fileinput.FileInput()` with new `encoding` and `errors` parameters.
---

Flagged use of dict result from `entry_points()` as deprecated.
  * [gh-47383](https://github.com/python/cpython/issues/47383): The `P.args` and `P.kwargs` attributes of [`typing.ParamSpec`](https://docs.python.org/3/library/typing.html#typing.ParamSpec "typing.ParamSpec") are now instances of the new classes [`typing.ParamSpecArgs`](https://docs.python.org/3/library/typing.html#typing.ParamSpecArgs "typing.ParamSpecArgs") and [`typing.ParamSpecKwargs`](https://docs.python.org/3/library/typing.html#typing.ParamSpecKwargs "typing.ParamSpecKwargs"), which enables a more useful `repr()`. Patch by Jelle Zijlstra.
  * [bpo-43731](https://bugs.python.org/issue?@action=redirect&bpo=43731): Add an `encoding` parameter `logging.fileConfig()`.
  * [bpo-43712](https://bugs.python.org/issue?@action=redirect&bpo=43712): Add `encoding` and `errors` parameters to [`fileinput.input()`](https://docs.python.org/3/library/fileinput.html#fileinput.input "fileinput.input") and [`fileinput.FileInput`](https://docs.python.org/3/library/fileinput.html#fileinput.FileInput "fileinput.FileInput").
  * [bpo-38659](https://bugs.python.org/issue?@action=redirect&bpo=38659): A `simple_enum` decorator is added to the `enum` module to convert a normal class into an Enum. `test_simple_enum` added to test simple enums against a corresponding normal Enum. Standard library modules updated to use `simple_enum`.
  * [bpo-43764](https://bugs.python.org/issue?@action=redirect&bpo=43764): Fix an issue where [`__match_args__`](https://docs.python.org/3/reference/datamodel.html#object.__match_args__ "object.__match_args__") generation could fail for some [`dataclasses`](https://docs.python.org/3/library/dataclasses.html#module-dataclasses "dataclasses: Generate special methods on user-defined classes.").
  * [bpo-43752](https://bugs.python.org/issue?@action=redirect&bpo=43752): Fix [`sqlite3`](https://docs.python.org/3/library/sqlite3.html#module-sqlite3 "sqlite3: A DB-API 2.0 implementation using SQLite 3.x.") regression for zero-sized blobs with converters, where `b""` was returned instead of `None`. The regression was introduced by PR 24723. Patch by Erlend E. Aasland.
  * [bpo-43655](https://bugs.python.org/issue?@action=redirect&bpo=43655): [`tkinter`](https://docs.python.org/3/library/tkinter.html#module-tkinter "tkinter: Interface to Tcl/Tk for graphical user interfaces") dialog windows are now recognized as dialogs by window managers on macOS and X Window.
  * [bpo-43723](https://bugs.python.org/issue?@action=redirect&bpo=43723): The following `threading` methods are now deprecated and should be replaced:
    * `currentThread` => [`threading.current_thread()`](https://docs.python.org/3/library/threading.html#threading.current_thread "threading.current_thread")
    * `activeCount` => [`threading.active_count()`](https://docs.python.org/3/library/threading.html#threading.active_count "threading.active_count")
    * `Condition.notifyAll` => [`threading.Condition.notify_all()`](https://docs.python.org/3/library/threading.html#threading.Condition.notify_all "threading.Condition.notify_all")
    * `Event.isSet` => [`threading.Event.is_set()`](https://docs.python.org/3/library/threading.html#threading.Event.is_set "threading.Event.is_set")
    * `Thread.setName` => [`threading.Thread.name`](https://docs.python.org/3/library/threading.html#threading.Thread.name "threading.Thread.name")
    * `thread.getName` => [`threading.Thread.name`](https://docs.python.org/3/library/threading.html#threading.Thread.name "threading.Thread.name")
    * `Thread.isDaemon` => [`threading.Thread.daemon`](https://docs.python.org/3/library/threading.html#threading.Thread.daemon "threading.Thread.daemon")
    * `Thread.setDaemon` => [`threading.Thread.daemon`](https://docs.python.org/3/library/threading.html#threading.Thread.daemon "threading.Thread.daemon")
Patch by Jelle Zijlstra.
  * [bpo-2135](https://bugs.python.org/issue?@action=redirect&bpo=2135): Deprecate find_module() and find_loader() implementations in importlib and zipimport.
  * [bpo-43534](https://bugs.python.org/issue?@action=redirect&bpo=43534): [`turtle.textinput()`](https://docs.python.org/3/library/turtle.html#turtle.textinput "turtle.textinput") and [`turtle.numinput()`](https://docs.python.org/3/library/turtle.html#turtle.numinput "turtle.numinput") create now a transient window working on behalf of the canvas window.
  * [bpo-43532](https://bugs.python.org/issue?@action=redirect&bpo=43532): Add the ability to specify keyword-only fields to dataclasses. These fields will become keyword-only arguments to the generated __init__.
  * [bpo-43522](https://bugs.python.org/issue?@action=redirect&bpo=43522): Fix problem with [`hostname_checks_common_name`](https://docs.python.org/3/library/ssl.html#ssl.SSLContext.hostname_checks_common_name "ssl.SSLContext.hostname_checks_common_name").