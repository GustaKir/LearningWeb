Title: ConfigParser.read Method
URL: https://docs.python.org/3/library/configparser.html
Summary: The read method attempts to read and parse an iterable of filenames, returning a list of successfully parsed filenames. It handles both single filenames and multiple configurations, ignoring files that cannot be opened. This allows for specifying various potential configuration file locations.
---

read(_filenames_ , _encoding =None_)[¶](https://docs.python.org/3/library/configparser.html#configparser.ConfigParser.read "Link to this definition")
    
Attempt to read and parse an iterable of filenames, returning a list of filenames which were successfully parsed.
If _filenames_ is a string, a [`bytes`](https://docs.python.org/3/library/stdtypes.html#bytes "bytes") object or a [path-like object](https://docs.python.org/3/glossary.html#term-path-like-object), it is treated as a single filename. If a file named in _filenames_ cannot be opened, that file will be ignored. This is designed so that you can specify an iterable of potential configuration file locations (for example, the current directory, the user’s home directory, and some system-wide directory), and all existing configuration files in the iterable will be read.
If none of the named files exist, the [`ConfigParser`](https://docs.python.org/3/library/configparser.html#configparser.ConfigParser "configparser.ConfigParser") instance will contain an empty dataset. An application which requires initial values to be loaded from a file should load the required file or files using [`read_file()`](https://docs.python.org/3/library/configparser.html#configparser.ConfigParser.read_file "configparser.ConfigParser.read_file") before calling [`read()`](https://docs.python.org/3/library/configparser.html#configparser.ConfigParser.read "configparser.ConfigParser.read") for any optional files:
```
importconfigparser,os
config = configparser.ConfigParser()
config.read_file(open('defaults.cfg'))
config.read(['site.cfg', os.path.expanduser('~/.myapp.cfg')],
      encoding='cp1250')