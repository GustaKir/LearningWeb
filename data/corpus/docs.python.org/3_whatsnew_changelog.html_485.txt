Title: Python C API Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: Recent updates to the Python C API include improvements to the vectorcall protocol, which now requires string keyword names and is enabled for type objects. Additionally, the limited API has excluded certain header files, and a new function `_PyObject_CallOneArg` has been introduced for calling objects with a single positional argument.
---

.python.org/3/c-api/call.html#c.PyObject_Call "PyObject_Call").
  * [bpo-37540](https://bugs.python.org/issue?@action=redirect&bpo=37540): The vectorcall protocol now requires that the caller passes only strings as keyword names.
  * [bpo-37207](https://bugs.python.org/issue?@action=redirect&bpo=37207): The vectorcall protocol is now enabled for `type` objects: set `tp_vectorcall` to a vectorcall function to be used instead of `tp_new` and `tp_init` when calling the class itself.
  * [bpo-21120](https://bugs.python.org/issue?@action=redirect&bpo=21120): Exclude Python-ast.h, ast.h and asdl.h from the limited API.
  * [bpo-37483](https://bugs.python.org/issue?@action=redirect&bpo=37483): Add new function `_PyObject_CallOneArg` for calling an object with one positional argument.
  * [bpo-36763](https://bugs.python.org/issue?@action=redirect&bpo=36763): Add [`PyConfig_SetWideStringList()`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig_SetWideStringList "PyConfig_SetWideStringList") function.
  * [bpo-37337](https://bugs.python.org/issue?@action=redirect&bpo=37337): Add fast functions for calling methods: `_PyObject_VectorcallMethod()`, `_PyObject_CallMethodNoArgs()` and `_PyObject_CallMethodOneArg()`.
  * [bpo-28805](https://bugs.python.org/issue?@action=redirect&bpo=28805): The [`METH_FASTCALL`](https://docs.python.org/3/c-api/structures.html#c.METH_FASTCALL "METH_FASTCALL") calling convention has been documented.
  * [bpo-37221](https://bugs.python.org/issue?@action=redirect&bpo=37221): The new function `PyCode_NewWithPosOnlyArgs()` allows to create code objects like `PyCode_New()`, but with an extra _posonlyargcount_ parameter for indicating the number of positonal-only arguments.
  * [bpo-37215](https://bugs.python.org/issue?@action=redirect&bpo=37215): Fix dtrace issue introduce by [bpo-36842](https://bugs.python.org/issue?@action=redirect&bpo=36842)
  * [bpo-37194](https://bugs.python.org/issue?@action=redirect&bpo=37194): Add a new public [`PyObject_CallNoArgs()`](https://docs.python.org/3/c-api/call.html#c.PyObject_CallNoArgs "PyObject_CallNoArgs") function to the C API: call a callable Python object without any arguments. It is the most efficient way to call a callback without any argument. On x86-64, for example, `PyObject_CallFunctionObjArgs(func, NULL)` allocates 960 bytes on the stack per call, whereas `PyObject_CallNoArgs(func)` only allocates 624 bytes per call.
  * [bpo-37170](https://bugs.python.org/issue?@action=redirect&bpo=37170): Fix the cast on error in [`PyLong_AsUnsignedLongLongMask()`](https://docs.python.org/3/c-api/long.html#c.PyLong_AsUnsignedLongLongMask "PyLong_AsUnsignedLongLongMask").
  * [bpo-35381](https://bugs.python.org/issue?@action=redirect&bpo=35381): Convert posixmodule.c statically allocated types `DirEntryType` and `ScandirIteratorType` to heap-allocated types.
  * [bpo-34331](https://bugs.python.org/issue?@action=redirect&bpo=34331): Use singular/plural noun in error message when instantiating an abstract class with non-overridden abstract method(s).


## Python 3.8.0 beta 1[¶](https://docs.python.org/3/whatsnew/changelog.html#python-3-8-0-beta-1 "Link to this heading")
_Release date: 2019-06-04_
### Security[¶](https://docs.python.org/3/whatsnew/changelog.html#id435 "Link to this heading")
  * [bpo-35907](https://bugs.python.org/issue?@action=redirect&bpo=35907): [**CVE 2019-9948**](https://www.cve.org/CVERecord?id=CVE-2019-9948): Avoid file reading by disallowing `local-file://` and `local_file://` URL schemes in `URLopener().open()` and `URLopener().retrieve()` of [`urllib.request`](https://docs.python.org/3/library/urllib.request.html#module-urllib.request "urllib.request: Extensible library for opening URLs.").
  * [bpo-33529](https://bugs.python.org/issue?@action=redirect&bpo=33529): Prevent fold function used in email header encoding from entering infinite loop when there are too many non-ASCII characters in a header.
  * [bpo-33164](https://bugs.python.org/issue?@action=redirect&bpo=33164): Updated blake2 implementation which uses secure memset implementation provided by platform.