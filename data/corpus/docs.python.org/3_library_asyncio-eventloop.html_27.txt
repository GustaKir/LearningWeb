Title: Event Loop in asyncio
URL: https://docs.python.org/3/library/asyncio-eventloop.html
Summary: This document outlines the event loop in Python's asyncio library, detailing its methods, including running and stopping the loop, scheduling callbacks (both immediate and delayed), creating futures and tasks, and managing network connections and servers.
---

```

### [Table of Contents](https://docs.python.org/3/contents.html)
  * [Event Loop](https://docs.python.org/3/library/asyncio-eventloop.html)
    * [Event Loop Methods](https://docs.python.org/3/library/asyncio-eventloop.html#event-loop-methods)
      * [Running and stopping the loop](https://docs.python.org/3/library/asyncio-eventloop.html#running-and-stopping-the-loop)
      * [Scheduling callbacks](https://docs.python.org/3/library/asyncio-eventloop.html#scheduling-callbacks)
      * [Scheduling delayed callbacks](https://docs.python.org/3/library/asyncio-eventloop.html#scheduling-delayed-callbacks)
      * [Creating Futures and Tasks](https://docs.python.org/3/library/asyncio-eventloop.html#creating-futures-and-tasks)
      * [Opening network connections](https://docs.python.org/3/library/asyncio-eventloop.html#opening-network-connections)
      * [Creating network servers](https://docs.python.org/3/library/asyncio-eventloop.html#creating-network-servers)
      * [Transferring files](https://docs.python.org/3/library/asyncio-eventloop.html#transferring-files)
      * [TLS Upgrade](https://docs.python.org/3/library/asyncio-eventloop.html#tls-upgrade)
      * [Watching file descriptors](https://docs.python.org/3/library/asyncio-eventloop.html#watching-file-descriptors)
      * [Working with socket objects directly](https://docs.python.org/3/library/asyncio-eventloop.html#working-with-socket-objects-directly)
      * [DNS](https://docs.python.org/3/library/asyncio-eventloop.html#dns)
      * [Working with pipes](https://docs.python.org/3/library/asyncio-eventloop.html#working-with-pipes)
      * [Unix signals](https://docs.python.org/3/library/asyncio-eventloop.html#unix-signals)
      * [Executing code in thread or process pools](https://docs.python.org/3/library/asyncio-eventloop.html#executing-code-in-thread-or-process-pools)
      * [Error Handling API](https://docs.python.org/3/library/asyncio-eventloop.html#error-handling-api)
      * [Enabling debug mode](https://docs.python.org/3/library/asyncio-eventloop.html#enabling-debug-mode)
      * [Running Subprocesses](https://docs.python.org/3/library/asyncio-eventloop.html#running-subprocesses)
    * [Callback Handles](https://docs.python.org/3/library/asyncio-eventloop.html#callback-handles)
    * [Server Objects](https://docs.python.org/3/library/asyncio-eventloop.html#server-objects)
    * [Event Loop Implementations](https://docs.python.org/3/library/asyncio-eventloop.html#event-loop-implementations)
    * [Examples](https://docs.python.org/3/library/asyncio-eventloop.html#examples)
      * [Hello World with call_soon()](https://docs.python.org/3/library/asyncio-eventloop.html#hello-world-with-call-soon)
      * [Display the current date with call_later()](https://docs.python.org/3/library/asyncio-eventloop.html#display-the-current-date-with-call-later)
      * [Watch a file descriptor for read events](https://docs.python.org/3/library/asyncio-eventloop.html#watch-a-file-descriptor-for-read-events)
      * [Set signal handlers for SIGINT and SIGTERM](https://docs.python.org/3/library/asyncio-eventloop.html#set-signal-handlers-for-sigint-and-sigterm)


#### Previous topic
[Exceptions](https://docs.python.org/3/library/asyncio-exceptions.html "previous chapter")
#### Next topic
[Futures](https://docs.python.org/3/library/asyncio-future.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/asyncio-eventloop.rst)


«
### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/library/asyncio-future.html "Futures") |
  * [previous](https://docs.python.org/3/library/asyncio-exceptions.html "Exceptions") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [The Python Standard Library](https://docs.python.org/3/library/index.html) »
  * [Networking and Interprocess Communication](https://docs.python.org/3/library/ipc.html) »
  * [`asyncio` — Asynchronous I/O](https://docs.python.org/3/library/asyncio.html) »
  * [Event Loop](https://docs.python.org/3/library/asyncio-eventloop.html)
  * | 
  * Theme  Auto Light Dark |