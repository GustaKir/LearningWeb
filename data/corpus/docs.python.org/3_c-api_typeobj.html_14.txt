Title: getattrfunc Field in PyTypeObject
URL: https://docs.python.org/3/c-api/typeobj.html
Summary: The 'tp_getattr' field in the 'PyTypeObject' structure is an optional pointer to a deprecated function for retrieving attributes using C strings. It should function similarly to 'tp_getattro', which takes Python string objects. This field and its behavior are inherited by subtypes.
---

[getattrfunc](https://docs.python.org/3/c-api/typeobj.html#c.getattrfunc "getattrfunc")[PyTypeObject](https://docs.python.org/3/c-api/type.html#c.PyTypeObject "PyTypeObject").tp_getattr[¶](https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_getattr "Link to this definition")
    
An optional pointer to the get-attribute-string function.
This field is deprecated. When it is defined, it should point to a function that acts the same as the [`tp_getattro`](https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_getattro "PyTypeObject.tp_getattro") function, but taking a C string instead of a Python string object to give the attribute name.
**Inheritance:**
Group: [`tp_getattr`](https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_getattr "PyTypeObject.tp_getattr"), [`tp_getattro`](https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_getattro "PyTypeObject.tp_getattro")
This field is inherited by subtypes together with [`tp_getattro`](https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_getattro "PyTypeObject.tp_getattro"): a subtype inherits both [`tp_getattr`](https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_getattr "PyTypeObject.tp_getattr") and [`tp_getattro`](https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_getattro "PyTypeObject.tp_getattro") from its base type when the subtype’s [`tp_getattr`](https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_getattr "PyTypeObject.tp_getattr") and [`tp_getattro`](https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_getattro "PyTypeObject.tp_getattro") are both `NULL`. 

[setattrfunc](https://docs.python.org/3/c-api/typeobj.html#c.setattrfunc "setattrfunc")[PyTypeObject](https://docs.python.org/3/c-api/type.html#c.PyTypeObject "PyTypeObject").tp_setattr[¶](https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_setattr "Link to this definition")
    
An optional pointer to the function for setting and deleting attributes.
This field is deprecated. When it is defined, it should point to a function that acts the same as the [`tp_setattro`](https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_setattro "PyTypeObject.tp_setattro") function, but taking a C string instead of a Python string object to give the attribute name.
**Inheritance:**
Group: [`tp_setattr`](https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_setattr "PyTypeObject.tp_setattr"), [`tp_setattro`](https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_setattro "PyTypeObject.tp_setattro")
This field is inherited by subtypes together with [`tp_setattro`](https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_setattro "PyTypeObject.tp_setattro"): a subtype inherits both [`tp_setattr`](https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_setattr "PyTypeObject.tp_setattr") and [`tp_setattro`](https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_setattro "PyTypeObject.tp_setattro") from its base type when the subtype’s [`tp_setattr`](https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_setattr "PyTypeObject.tp_setattr") and [`tp_setattro`](https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_setattro "PyTypeObject.tp_setattro") are both `NULL`. 

[PyAsyncMethods](https://docs.python.org/3/c-api/typeobj.html#c.PyAsyncMethods "PyAsyncMethods")*[PyTypeObject](https://docs.python.org/3/c-api/type.html#c.PyTypeObject "PyTypeObject").tp_as_async[¶](https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_as_async "Link to this definition")
    
Pointer to an additional structure that contains fields relevant only to objects which implement [awaitable](https://docs.python.org/3/glossary.html#term-awaitable) and [asynchronous iterator](https://docs.python.org/3/glossary.html#term-asynchronous-iterator) protocols at the C-level. See [Async Object Structures](https://docs.python.org/3/c-api/typeobj.html#async-structs) for details.
Added in version 3.5: Formerly known as `tp_compare` and `tp_reserved`.
**Inheritance:**
The [`tp_as_async`](https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_as_async "PyTypeObject.tp_as_async") field is not inherited, but the contained fields are inherited individually. 

[reprfunc](https://docs.python.org/3/c-api/typeobj.html#c.reprfunc "reprfunc")[PyTypeObject](https://docs.python.org/3/c-api/type.html#c.PyTypeObject "PyTypeObject").tp_repr[¶](https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_repr "Link to this definition")
    
An optional pointer to a function that implements the built-in function [`repr()`](https://docs.python.org/3/library/functions.html#repr "repr").
The signature is the same as for [`PyObject_Repr()`](https://docs.python.org/3/c-api/object.html#c.PyObject_Repr "PyObject_Repr"):
```
PyObject*tp_repr(PyObject*self);