Title: Python 3.x Changelog Highlights
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section of the Python 3.x changelog notes several important bug fixes, including correcting an OverflowError in the 'unicode-escape' codec, adjustments to tracing logic for frame line numbers, improvements in exception handling during interpreter exit, and fixes related to timeout rounding.
---

ssue?@action=redirect&bpo=31825): Fixed OverflowError in the ‘unicode-escape’ codec and in codecs.escape_decode() when decode an escaped non-ascii byte.
  * [bpo-31618](https://bugs.python.org/issue?@action=redirect&bpo=31618): The per-frame tracing logic added in 3.7a1 has been altered so that `frame->f_lineno` is updated before either `"line"` or `"opcode"` events are emitted. Previously, opcode events were emitted first, and therefore would occasionally see stale line numbers on the frame. The behavior of this feature has changed slightly as a result: when both `f_trace_lines` and `f_trace_opcodes` are enabled, line events now occur first.
  * [bpo-28603](https://bugs.python.org/issue?@action=redirect&bpo=28603): Print the full context/cause chain of exceptions on interpreter exit, even if an exception in the chain is unhashable or compares equal to later ones. Patch by Zane Bitter.
  * [bpo-31786](https://bugs.python.org/issue?@action=redirect&bpo=31786): Fix timeout rounding in the select module to round correctly negative timeouts between -1.0 and 0.0. The functions now block waiting for events as expected. Previously, the call was incorrectly non-blocking. Patch by Pablo Galindo.
  * [bpo-31781](https://bugs.python.org/issue?@action=redirect&bpo=31781): Prevent crashes when calling methods of an uninitialized `zipimport.zipimporter` object. Patch by Oren Milman.
  * [bpo-30399](https://bugs.python.org/issue?@action=redirect&bpo=30399): Standard repr() of BaseException with a single argument no longer contains redundant trailing comma.
  * [bpo-31626](https://bugs.python.org/issue?@action=redirect&bpo=31626): Fixed a bug in debug memory allocator. There was a write to freed memory after shrinking a memory block.
  * [bpo-30817](https://bugs.python.org/issue?@action=redirect&bpo=30817): `PyErr_PrintEx()` clears now the ignored exception that may be raised by `_PySys_SetObjectId()`, for example when no memory.