Title: Changes to the Traceback Module in Python 3.13
URL: https://docs.python.org/3/whatsnew/3.13.html
Summary: The TracebackException class now includes the new exc_type_str attribute for string display of _exc_type_, while exc_type is deprecated. A new parameter, _save_exc_type_, is also introduced. Additionally, a _show_group keyword-only parameter is added to the format_exception_only() method.
---

### traceback[¶](https://docs.python.org/3/whatsnew/3.13.html#traceback "Link to this heading")
  * Add the [`exc_type_str`](https://docs.python.org/3/library/traceback.html#traceback.TracebackException.exc_type_str "traceback.TracebackException.exc_type_str") attribute to [`TracebackException`](https://docs.python.org/3/library/traceback.html#traceback.TracebackException "traceback.TracebackException"), which holds a string display of the _exc_type_. Deprecate the [`exc_type`](https://docs.python.org/3/library/traceback.html#traceback.TracebackException.exc_type "traceback.TracebackException.exc_type") attribute, which holds the type object itself. Add parameter _save_exc_type_ (default `True`) to indicate whether `exc_type` should be saved. (Contributed by Irit Katriel in [gh-112332](https://github.com/python/cpython/issues/112332).)
  * Add a new _show_group_ keyword-only parameter to [`TracebackException.format_exception_only()`](https://docs.python.org/3/library/traceback.html#traceback.TracebackException.format_exception_only "traceback.TracebackException.format_exception_only") to (recursively) format the nested exceptions of a [`BaseExceptionGroup`](https://docs.python.org/3/library/exceptions.html#BaseExceptionGroup "BaseExceptionGroup") instance. (Contributed by Irit Katriel in [gh-105292](https://github.com/python/cpython/issues/105292).)


### types[¶](https://docs.python.org/3/whatsnew/3.13.html#types "Link to this heading")
  * [`SimpleNamespace`](https://docs.python.org/3/library/types.html#types.SimpleNamespace "types.SimpleNamespace") can now take a single positional argument to initialise the namespace’s arguments. This argument must either be a mapping or an iterable of key-value pairs. (Contributed by Serhiy Storchaka in [gh-108191](https://github.com/python/cpython/issues/108191).)


### typing[¶](https://docs.python.org/3/whatsnew/3.13.html#typing "Link to this heading")
  * [**PEP 705**](https://peps.python.org/pep-0705/): Add [`ReadOnly`](https://docs.python.org/3/library/typing.html#typing.ReadOnly "typing.ReadOnly"), a special typing construct to mark a [`TypedDict`](https://docs.python.org/3/library/typing.html#typing.TypedDict "typing.TypedDict") item as read-only for type checkers.
  * [**PEP 742**](https://peps.python.org/pep-0742/): Add [`TypeIs`](https://docs.python.org/3/library/typing.html#typing.TypeIs "typing.TypeIs"), a typing construct that can be used to instruct a type checker how to narrow a type.
  * Add [`NoDefault`](https://docs.python.org/3/library/typing.html#typing.NoDefault "typing.NoDefault"), a sentinel object used to represent the defaults of some parameters in the [`typing`](https://docs.python.org/3/library/typing.html#module-typing "typing: Support for type hints \(see :pep:`484`\).") module. (Contributed by Jelle Zijlstra in [gh-116126](https://github.com/python/cpython/issues/116126).)
  * Add [`get_protocol_members()`](https://docs.python.org/3/library/typing.html#typing.get_protocol_members "typing.get_protocol_members") to return the set of members defining a [`typing.Protocol`](https://docs.python.org/3/library/typing.html#typing.Protocol "typing.Protocol"). (Contributed by Jelle Zijlstra in [gh-104873](https://github.com/python/cpython/issues/104873).)
  * Add [`is_protocol()`](https://docs.python.org/3/library/typing.html#typing.is_protocol "typing.is_protocol") to check whether a class is a [`Protocol`](https://docs.python.org/3/library/typing.html#typing.Protocol "typing.Protocol"). (Contributed by Jelle Zijlstra in [gh-104873](https://github.com/python/cpython/issues/104873).)
  * [`ClassVar`](https://docs.python.org/3/library/typing.html#typing.ClassVar "typing.ClassVar") can now be nested in [`Final`](https://docs.python.org/3/library/typing.html#typing.Final "typing.Final"), and vice versa. (Contributed by Mehdi Drissi in [gh-89547](https://github.com/python/cpython/issues/89547).)


### unicodedata[¶](https://docs.python.org/3/whatsnew/3.13.html#unicodedata "Link to this heading")
  * Update the Unicode database to [version 15.1.0](https://www.unicode.org/versions/Unicode15.1.0/). (Contributed by James Gerity in [gh-109559](https://github.com/python/cpython/issues/109559).)


### venv[¶](https://docs.python.org/3/whatsnew/3.13.html#venv "Link to this heading")
  * Add support for creating source control management (SCM) ignore files in a virtual environment’s directory. By default, Git is supported. This is implemented as opt-in via the API, which can be extended to support other SCMs ([`EnvBuilder`](https://docs.python.org/3/library/venv.html#venv.EnvBuilder "venv.EnvBuilder") and [`create()`](https://docs.python.org/3/library/venv.html#venv.create "venv.create")), and opt-out via the CLI, using `--without-scm-ignore-files`. (Contributed by Brett Cannon in [gh-108125](https://github.com/python/cpython/issues/108125).)