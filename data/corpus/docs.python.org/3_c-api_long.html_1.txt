Title: Python C API: Creating PyLong Objects
URL: https://docs.python.org/3/c-api/long.html
Summary: This documentation describes functions in the Python C API that create new `PyLongObject` instances: `PyLong_FromUnsignedLong`, which creates a `PyLongObject` from an unsigned long, and `PyLong_FromSsize_t`, which creates one from a `Py_ssize_t`. Both functions return a new reference or `NULL` on failure.
---

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyLong_FromUnsignedLong(unsignedlongv)[¶](https://docs.python.org/3/c-api/long.html#c.PyLong_FromUnsignedLong "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Return a new [`PyLongObject`](https://docs.python.org/3/c-api/long.html#c.PyLongObject "PyLongObject") object from a C unsignedlong, or `NULL` on failure. 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyLong_FromSsize_t([Py_ssize_t](https://docs.python.org/3/c-api/intro.html#c.Py_ssize_t "Py_ssize_t")v)[¶](https://docs.python.org/3/c-api/long.html#c.PyLong_FromSsize_t "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Return a new [`PyLongObject`](https://docs.python.org/3/c-api/long.html#c.PyLongObject "PyLongObject") object from a C [`Py_ssize_t`](https://docs.python.org/3/c-api/intro.html#c.Py_ssize_t "Py_ssize_t"), or `NULL` on failure. 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyLong_FromSize_t(size_tv)[¶](https://docs.python.org/3/c-api/long.html#c.PyLong_FromSize_t "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Return a new [`PyLongObject`](https://docs.python.org/3/c-api/long.html#c.PyLongObject "PyLongObject") object from a C `size_t`, or `NULL` on failure. 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyLong_FromLongLong(longlongv)[¶](https://docs.python.org/3/c-api/long.html#c.PyLong_FromLongLong "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Return a new [`PyLongObject`](https://docs.python.org/3/c-api/long.html#c.PyLongObject "PyLongObject") object from a C longlong, or `NULL` on failure. 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyLong_FromUnsignedLongLong(unsignedlonglongv)[¶](https://docs.python.org/3/c-api/long.html#c.PyLong_FromUnsignedLongLong "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Return a new [`PyLongObject`](https://docs.python.org/3/c-api/long.html#c.PyLongObject "PyLongObject") object from a C unsignedlonglong, or `NULL` on failure. 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyLong_FromDouble(doublev)[¶](https://docs.python.org/3/c-api/long.html#c.PyLong_FromDouble "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Return a new [`PyLongObject`](https://docs.python.org/3/c-api/long.html#c.PyLongObject "PyLongObject") object from the integer part of _v_ , or `NULL` on failure. 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyLong_FromString(constchar*str, char**pend, intbase)[¶](https://docs.python.org/3/c-api/long.html#c.PyLong_FromString "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Return a new [`PyLongObject`](https://docs.python.org/3/c-api/long.html#c.PyLongObject "PyLongObject") based on the string value in _str_ , which is interpreted according to the radix in _base_ , or `NULL` on failure. If _pend_ is non-`NULL`, _*pend_ will point to the end of _str_ on success or to the first character that could not be processed on error. If _base_ is `0`, _str_ is interpreted using the [Integer literals](https://docs.python.org/3/reference/lexical_analysis.html#integers) definition; in this case, leading zeros in a non-zero decimal number raises a [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError "ValueError"). If _base_ is not `0`, it must be between `2` and `36`, inclusive. Leading and trailing whitespace and single underscores after a base specifier and between digits are ignored. If there are no digits or _str_ is not NULL-terminated following the digits and trailing whitespace, [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError "ValueError") will be raised.
See also
Python methods [`int.to_bytes()`](https://docs.python.org/3/library/stdtypes.html#int.to_bytes "int.to_bytes") and [`int.from_bytes()`](https://docs.python.org/3/library/stdtypes.html#int.from_bytes "int.from_bytes") to convert a [`PyLongObject`](https://docs.python.org/3/c-api/long.html#c.PyLongObject "PyLongObject") to/from an array of bytes in base `256`. You can call those from C using [`PyObject_CallMethod()`](https://docs.python.org/3/c-api/call.html#c.PyObject_CallMethod "PyObject_CallMethod").