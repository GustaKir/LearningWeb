Title: Math Module Overview
URL: https://docs.python.org/3/library/math.html
Summary: This section of the Python documentation describes various mathematical functions added in version 3.2, including the complementary error function (math.erfc), the Gamma function (math.gamma), and its natural logarithm (math.lgamma).
---

```

Added in version 3.2. 

math.erfc(_x_)[¶](https://docs.python.org/3/library/math.html#math.erfc "Link to this definition")
    
Return the complementary error function at _x_. The [complementary error function](https://en.wikipedia.org/wiki/Error_function) is defined as `1.0 - erf(x)`. It is used for large values of _x_ where a subtraction from one would cause a [loss of significance](https://en.wikipedia.org/wiki/Loss_of_significance).
Added in version 3.2. 

math.gamma(_x_)[¶](https://docs.python.org/3/library/math.html#math.gamma "Link to this definition")
    
Return the [Gamma function](https://en.wikipedia.org/wiki/Gamma_function) at _x_.
Added in version 3.2. 

math.lgamma(_x_)[¶](https://docs.python.org/3/library/math.html#math.lgamma "Link to this definition")
    
Return the natural logarithm of the absolute value of the Gamma function at _x_.
Added in version 3.2.
## Constants[¶](https://docs.python.org/3/library/math.html#constants "Link to this heading") 

math.pi[¶](https://docs.python.org/3/library/math.html#math.pi "Link to this definition")
    
The mathematical constant _π_ = 3.141592…, to available precision. 

math.e[¶](https://docs.python.org/3/library/math.html#math.e "Link to this definition")
    
The mathematical constant _e_ = 2.718281…, to available precision. 

math.tau[¶](https://docs.python.org/3/library/math.html#math.tau "Link to this definition")
    
The mathematical constant _τ_ = 6.283185…, to available precision. Tau is a circle constant equal to 2 _π_ , the ratio of a circle’s circumference to its radius. To learn more about Tau, check out Vi Hart’s video [Pi is (still) Wrong](https://www.youtube.com/watch?v=jG7vhMMXagQ), and start celebrating [Tau day](https://tauday.com/) by eating twice as much pie!
Added in version 3.6. 

math.inf[¶](https://docs.python.org/3/library/math.html#math.inf "Link to this definition")
    
A floating-point positive infinity. (For negative infinity, use `-math.inf`.) Equivalent to the output of `float('inf')`.
Added in version 3.5. 

math.nan[¶](https://docs.python.org/3/library/math.html#math.nan "Link to this definition")
    
A floating-point “not a number” (NaN) value. Equivalent to the output of `float('nan')`. Due to the requirements of the [IEEE-754 standard](https://en.wikipedia.org/wiki/IEEE_754), `math.nan` and `float('nan')` are not considered to equal to any other numeric value, including themselves. To check whether a number is a NaN, use the [`isnan()`](https://docs.python.org/3/library/math.html#math.isnan "math.isnan") function to test for NaNs instead of `is` or `==`. Example:
>>>```
>>> importmath
>>> math.nan == math.nan
False
>>> float('nan') == float('nan')
False
>>> math.isnan(math.nan)
True
>>> math.isnan(float('nan'))
True