Title: Reading Data in Tkinter
URL: https://docs.python.org/3/library/tkinter.html
Summary: This section discusses the limitations of the `BufferedIOBase` and `TextIOBase` read methods in Windows, recommending the use of `recv()` or `recvfrom()` for sockets and raw reads for other files. It emphasizes the necessity of knowing the byte availability when reading data.
---

```

This feature is not available on Windows.
Since you don’t know how many bytes are available for reading, you may not want to use the [`BufferedIOBase`](https://docs.python.org/3/library/io.html#io.BufferedIOBase "io.BufferedIOBase") or [`TextIOBase`](https://docs.python.org/3/library/io.html#io.TextIOBase "io.TextIOBase") [`read()`](https://docs.python.org/3/library/io.html#io.BufferedIOBase.read "io.BufferedIOBase.read") or [`readline()`](https://docs.python.org/3/library/io.html#io.IOBase.readline "io.IOBase.readline") methods, since these will insist on reading a predefined number of bytes. For sockets, the [`recv()`](https://docs.python.org/3/library/socket.html#socket.socket.recv "socket.socket.recv") or [`recvfrom()`](https://docs.python.org/3/library/socket.html#socket.socket.recvfrom "socket.socket.recvfrom") methods will work fine; for other files, use raw reads or `os.read(file.fileno(), maxbytecount)`. 

Widget.tk.createfilehandler(_file_ , _mask_ , _func_)[¶](https://docs.python.org/3/library/tkinter.html#tkinter.Widget.tk.createfilehandler "Link to this definition")
    
Registers the file handler callback function _func_. The _file_ argument may either be an object with a [`fileno()`](https://docs.python.org/3/library/io.html#io.IOBase.fileno "io.IOBase.fileno") method (such as a file or socket object), or an integer file descriptor. The _mask_ argument is an ORed combination of any of the three constants below. The callback is called as follows:
```
callback(file, mask)