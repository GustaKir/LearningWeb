Title: Basic Configuration for Logging
URL: https://docs.python.org/3/library/logging.html
Summary: The `logging.basicConfig()` function sets up the logging system by creating a default `StreamHandler` with a `Formatter` and adds it to the root logger. This configuration allows for the use of logging functions like `debug()`, `info()`, `warning()`, `error()`, and `critical()`.
---

logging.basicConfig(_** kwargs_)[¶](https://docs.python.org/3/library/logging.html#logging.basicConfig "Link to this definition")
    
Does basic configuration for the logging system by creating a [`StreamHandler`](https://docs.python.org/3/library/logging.handlers.html#logging.StreamHandler "logging.StreamHandler") with a default [`Formatter`](https://docs.python.org/3/library/logging.html#logging.Formatter "logging.Formatter") and adding it to the root logger. The functions [`debug()`](https://docs.python.org/3/library/logging.html#logging.debug "logging.debug"), [`info()`](https://docs.python.org/3/library/logging.html#logging.info "logging.info"), [`warning()`](https://docs.python.org/3/library/logging.html#logging.warning "logging.warning"), [`error()`](https://docs.python.org/3/library/logging.html#logging.error "logging.error") and [`critical()`](https://docs.python.org/3/library/logging.html#logging.critical "logging.critical") will call [`basicConfig()`](https://docs.python.org/3/library/logging.html#logging.basicConfig "logging.basicConfig") automatically if no handlers are defined for the root logger.
This function does nothing if the root logger already has handlers configured, unless the keyword argument _force_ is set to `True`.
Note
This function should be called from the main thread before other threads are started. In versions of Python prior to 2.7.1 and 3.2, if this function is called from multiple threads, it is possible (in rare circumstances) that a handler will be added to the root logger more than once, leading to unexpected results such as messages being duplicated in the log.
The following keyword arguments are supported.
Format | Description  
---|---  
_filename_ | Specifies that a [`FileHandler`](https://docs.python.org/3/library/logging.handlers.html#logging.FileHandler "logging.FileHandler") be created, using the specified filename, rather than a [`StreamHandler`](https://docs.python.org/3/library/logging.handlers.html#logging.StreamHandler "logging.StreamHandler").  
_filemode_ | If _filename_ is specified, open the file in this [mode](https://docs.python.org/3/library/functions.html#filemodes). Defaults to `'a'`.  
_format_ | Use the specified format string for the handler. Defaults to attributes `levelname`, `name` and `message` separated by colons.  
_datefmt_ | Use the specified date/time format, as accepted by [`time.strftime()`](https://docs.python.org/3/library/time.html#time.strftime "time.strftime").  
_style_ | If _format_ is specified, use this style for the format string. One of `'%'`, `'{'` or `'$'` for [printf-style](https://docs.python.org/3/library/stdtypes.html#old-string-formatting), [`str.format()`](https://docs.python.org/3/library/stdtypes.html#str.format "str.format") or [`string.Template`](https://docs.python.org/3/library/string.html#string.Template "string.Template") respectively. Defaults to `'%'`.  
_level_ | Set the root logger level to the specified [level](https://docs.python.org/3/library/logging.html#levels).  
_stream_ | Use the specified stream to initialize the [`StreamHandler`](https://docs.python.org/3/library/logging.handlers.html#logging.StreamHandler "logging.StreamHandler"). Note that this argument is incompatible with _filename_ - if both are present, a `ValueError` is raised.  
_handlers_ | If specified, this should be an iterable of already created handlers to add to the root logger. Any handlers which don’t already have a formatter set will be assigned the default formatter created in this function. Note that this argument is incompatible with _filename_ or _stream_ - if both are present, a `ValueError` is raised.  
_force_ | If this keyword argument is specified as true, any existing handlers attached to the root logger are removed and closed, before carrying out the configuration as specified by the other arguments.  
_encoding_ | If this keyword argument is specified along with _filename_ , its value is used when the [`FileHandler`](https://docs.python.org/3/library/logging.handlers.html#logging.FileHandler "logging.FileHandler") is created, and thus used when opening the output file.  
_errors_ | If this keyword argument is specified along with _filename_ , its value is used when the [`FileHandler`](https://docs.python.org/3/library/logging.handlers.html#logging.FileHandler "logging.FileHandler") is created, and thus used when opening the output file. If not specified, the value ‘backslashreplace’ is used. Note that if `None` is specified, it will be passed as such to [`open()`](https://docs.python.org/3/library/functions.html#open "open"), which means that it will be treated the same as passing ‘errors’.  
Changed in version 3.2: The _style_ argument was added.
Changed in version 3.3: The _handlers_ argument was added. Additional checks were added to catch situations where incompatible arguments are specified (e.g. _handlers_ together with _stream_ or _filename_ , or _stream_ together with _filename_).
Changed in version 3.8