Title: Logging Facility for Python
URL: https://docs.python.org/3/library/logging.html
Summary: This section introduces the logging module in Python, detailing various components such as Logger, Handler, Formatter, and Filter objects, along with logging levels. It serves as a foundational overview for implementing logging in Python applications.
---

[ ![Python logo](https://docs.python.org/3/_static/py.svg) ](https://www.python.org/) dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
Theme  Auto Light Dark
### [Table of Contents](https://docs.python.org/3/contents.html)
  * [`logging` — Logging facility for Python](https://docs.python.org/3/library/logging.html)
    * [Logger Objects](https://docs.python.org/3/library/logging.html#logger-objects)
    * [Logging Levels](https://docs.python.org/3/library/logging.html#logging-levels)
    * [Handler Objects](https://docs.python.org/3/library/logging.html#handler-objects)
    * [Formatter Objects](https://docs.python.org/3/library/logging.html#formatter-objects)
    * [Filter Objects](https://docs.python.org/3/library/logging.html#filter-objects)
    * [LogRecord Objects](https://docs.python.org/3/library/logging.html#logrecord-objects)
    * [LogRecord attributes](https://docs.python.org/3/library/logging.html#logrecord-attributes)
    * [LoggerAdapter Objects](https://docs.python.org/3/library/logging.html#loggeradapter-objects)
    * [Thread Safety](https://docs.python.org/3/library/logging.html#thread-safety)
    * [Module-Level Functions](https://docs.python.org/3/library/logging.html#module-level-functions)
    * [Module-Level Attributes](https://docs.python.org/3/library/logging.html#module-level-attributes)
    * [Integration with the warnings module](https://docs.python.org/3/library/logging.html#integration-with-the-warnings-module)


#### Previous topic
[`time` — Time access and conversions](https://docs.python.org/3/library/time.html "previous chapter")
#### Next topic
[`logging.config` — Logging configuration](https://docs.python.org/3/library/logging.config.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/logging.rst)


### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/library/logging.config.html "logging.config — Logging configuration") |
  * [previous](https://docs.python.org/3/library/time.html "time — Time access and conversions") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [The Python Standard Library](https://docs.python.org/3/library/index.html) »
  * [Generic Operating System Services](https://docs.python.org/3/library/allos.html) »
  * [`logging` — Logging facility for Python](https://docs.python.org/3/library/logging.html)
  * | 
  * Theme  Auto Light Dark |


# `logging` — Logging facility for Python[¶](https://docs.python.org/3/library/logging.html#module-logging "Link to this heading")
**Source code:** [Lib/logging/__init__.py](https://github.com/python/cpython/tree/3.13/Lib/logging/__init__.py)
Important
This page contains the API reference information. For tutorial information and discussion of more advanced topics, see
  * [Basic Tutorial](https://docs.python.org/3/howto/logging.html#logging-basic-tutorial)
  * [Advanced Tutorial](https://docs.python.org/3/howto/logging.html#logging-advanced-tutorial)
  * [Logging Cookbook](https://docs.python.org/3/howto/logging-cookbook.html#logging-cookbook)


This module defines functions and classes which implement a flexible event logging system for applications and libraries.
The key benefit of having the logging API provided by a standard library module is that all Python modules can participate in logging, so your application log can include your own messages integrated with messages from third-party modules.
Here’s a simple example of idiomatic usage:
```
# myapp.py
importlogging
importmylib
logger = logging.getLogger(__name__)
defmain():
  logging.basicConfig(filename='myapp.log', level=logging.INFO)
  logger.info('Started')
  mylib.do_something()
  logger.info('Finished')
if __name__ == '__main__':
  main()

```

```
# mylib.py
importlogging
logger = logging.getLogger(__name__)
defdo_something():
  logger.info('Doing something')

```

If you run _myapp.py_ , you should see this in _myapp.log_ :
```
INFO:__main__:Started
INFO:mylib:Doing something
INFO:__main__:Finished