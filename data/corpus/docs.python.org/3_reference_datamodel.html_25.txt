Title: Object Representation in Python
URL: https://docs.python.org/3/reference/datamodel.html
Summary: The `__repr__()` method is called by the `repr()` function to provide the official string representation of an object, which should resemble a valid Python expression for recreating the object. If that is not possible, a descriptive string should be returned. The return value must be a string, and if a class defines `__repr__()` but not `__str__()`, `__repr__()` will also serve as the informal string representation.
---

object.__repr__(_self_)[¶](https://docs.python.org/3/reference/datamodel.html#object.__repr__ "Link to this definition")
    
Called by the [`repr()`](https://docs.python.org/3/library/functions.html#repr "repr") built-in function to compute the “official” string representation of an object. If at all possible, this should look like a valid Python expression that could be used to recreate an object with the same value (given an appropriate environment). If this is not possible, a string of the form `<...some useful description...>` should be returned. The return value must be a string object. If a class defines [`__repr__()`](https://docs.python.org/3/reference/datamodel.html#object.__repr__ "object.__repr__") but not [`__str__()`](https://docs.python.org/3/reference/datamodel.html#object.__str__ "object.__str__"), then [`__repr__()`](https://docs.python.org/3/reference/datamodel.html#object.__repr__ "object.__repr__") is also used when an “informal” string representation of instances of that class is required.
This is typically used for debugging, so it is important that the representation is information-rich and unambiguous. A default implementation is provided by the [`object`](https://docs.python.org/3/library/functions.html#object "object") class itself. 

object.__str__(_self_)[¶](https://docs.python.org/3/reference/datamodel.html#object.__str__ "Link to this definition")
    
Called by [`str(object)`](https://docs.python.org/3/library/stdtypes.html#str "str"), the default [`__format__()`](https://docs.python.org/3/reference/datamodel.html#object.__format__ "object.__format__") implementation, and the built-in function [`print()`](https://docs.python.org/3/library/functions.html#print "print"), to compute the “informal” or nicely printable string representation of an object. The return value must be a [str](https://docs.python.org/3/library/stdtypes.html#textseq) object.
This method differs from [`object.__repr__()`](https://docs.python.org/3/reference/datamodel.html#object.__repr__ "object.__repr__") in that there is no expectation that [`__str__()`](https://docs.python.org/3/reference/datamodel.html#object.__str__ "object.__str__") return a valid Python expression: a more convenient or concise representation can be used.
The default implementation defined by the built-in type [`object`](https://docs.python.org/3/library/functions.html#object "object") calls [`object.__repr__()`](https://docs.python.org/3/reference/datamodel.html#object.__repr__ "object.__repr__"). 

object.__bytes__(_self_)[¶](https://docs.python.org/3/reference/datamodel.html#object.__bytes__ "Link to this definition")
    
Called by [bytes](https://docs.python.org/3/library/functions.html#func-bytes) to compute a byte-string representation of an object. This should return a [`bytes`](https://docs.python.org/3/library/stdtypes.html#bytes "bytes") object. The [`object`](https://docs.python.org/3/library/functions.html#object "object") class itself does not provide this method. 

object.__format__(_self_ , _format_spec_)[¶](https://docs.python.org/3/reference/datamodel.html#object.__format__ "Link to this definition")
    
Called by the [`format()`](https://docs.python.org/3/library/functions.html#format "format") built-in function, and by extension, evaluation of [formatted string literals](https://docs.python.org/3/reference/lexical_analysis.html#f-strings) and the [`str.format()`](https://docs.python.org/3/library/stdtypes.html#str.format "str.format") method, to produce a “formatted” string representation of an object. The _format_spec_ argument is a string that contains a description of the formatting options desired. The interpretation of the _format_spec_ argument is up to the type implementing [`__format__()`](https://docs.python.org/3/reference/datamodel.html#object.__format__ "object.__format__"), however most classes will either delegate formatting to one of the built-in types, or use a similar formatting option syntax.
See [Format Specification Mini-Language](https://docs.python.org/3/library/string.html#formatspec) for a description of the standard formatting syntax.
The return value must be a string object.
The default implementation by the [`object`](https://docs.python.org/3/library/functions.html#object "object") class should be given an empty _format_spec_ string. It delegates to [`__str__()`](https://docs.python.org/3/reference/datamodel.html#object.__str__ "object.__str__").
Changed in version 3.4: The __format__ method of `object` itself raises a [`TypeError`](https://docs.python.org/3/library/exceptions.html#TypeError "TypeError") if passed any non-empty string.
Changed in version 3.7: `object.__format__(x, '')` is now equivalent to `str(x)` rather than `format(str(x), '')`. 

object.__lt__(_self_ , _other_)[¶](https://docs.python.org/3/reference/datamodel.html#object.__lt__ "Link to this definition")