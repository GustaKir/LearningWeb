Title: Deprecation Notices and Updates in Python
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This document outlines deprecated classes and features in Python, including the addition of deprecation warnings in asyncio methods, enhancements to ZIP file creation, and new features in itertools and Enums. It also mentions updates related to SSL/TLS functionalities.
---

These classes are considered deprecated and will be removed in future Python versions.
  * [bpo-34728](https://bugs.python.org/issue?@action=redirect&bpo=34728): Add deprecation warning when `loop` is used in methods: `asyncio.sleep`, `asyncio.wait` and `asyncio.wait_for`.
  * [bpo-34738](https://bugs.python.org/issue?@action=redirect&bpo=34738): ZIP files created by `distutils` will now include entries for directories.
  * [bpo-34659](https://bugs.python.org/issue?@action=redirect&bpo=34659): Add an optional _initial_ argument to itertools.accumulate().
  * [bpo-29577](https://bugs.python.org/issue?@action=redirect&bpo=29577): Support multiple mixin classes when creating Enums.
  * [bpo-34670](https://bugs.python.org/issue?@action=redirect&bpo=34670): Add SSLContext.post_handshake_auth and SSLSocket.verify_client_post_handshake for TLS 1.3’s post handshake authentication feature.
  * [bpo-32718](https://bugs.python.org/issue?@action=redirect&bpo=32718): The Activate.ps1 script from venv works with PowerShell Core 6.1 and is now available under all operating systems.
  * [bpo-31177](https://bugs.python.org/issue?@action=redirect&bpo=31177): Fix bug that prevented using [`reset_mock`](https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock.reset_mock "unittest.mock.Mock.reset_mock") on mock instances with deleted attributes
  * [bpo-34672](https://bugs.python.org/issue?@action=redirect&bpo=34672): Add a workaround, so the `'Z'` [`time.strftime()`](https://docs.python.org/3/library/time.html#time.strftime "time.strftime") specifier on the musl C library can work in some cases.
  * [bpo-34666](https://bugs.python.org/issue?@action=redirect&bpo=34666): Implement `asyncio.StreamWriter.awrite` and `asyncio.StreamWriter.aclose()` coroutines. Methods are needed for providing a consistent stream API with control flow switched on by default.
  * [bpo-6721](https://bugs.python.org/issue?@action=redirect&bpo=6721): Acquire the logging module’s commonly used internal locks while fork()ing to avoid deadlocks in the child process.
  * [bpo-34658](https://bugs.python.org/issue?@action=redirect&bpo=34658): Fix a rare interpreter unhandled exception state SystemError only seen when using subprocess with a preexec_fn while an after_parent handler has been registered with os.register_at_fork and the fork system call fails.
  * [bpo-34652](https://bugs.python.org/issue?@action=redirect&bpo=34652): Ensure [`os.lchmod()`](https://docs.python.org/3/library/os.html#os.lchmod "os.lchmod") is never defined on Linux.
  * [bpo-34638](https://bugs.python.org/issue?@action=redirect&bpo=34638): Store a weak reference to stream reader to break strong references loop between reader and protocol. It allows to detect and close the socket if the stream is deleted (garbage collected) without `close()` call.
  * [bpo-34536](https://bugs.python.org/issue?@action=redirect&bpo=34536): `Enum._missing_`: raise `ValueError` if None returned and `TypeError` if non-member is returned.
  * [bpo-34636](https://bugs.python.org/issue?@action=redirect&bpo=34636): Speed up re scanning of many non-matching characters for s w and d within bytes objects. (microoptimization)
  * [bpo-24412](https://bugs.python.org/issue?@action=redirect&bpo=24412): Add [`addModuleCleanup()`](https://docs.python.org/3/library/unittest.html#unittest.addModuleCleanup "unittest.addModuleCleanup") and [`addClassCleanup()`](https://docs.python.org/3/library/unittest.html#unittest.TestCase.addClassCleanup "unittest.TestCase.addClassCleanup") to unittest to support cleanups for `setUpModule()` and [`setUpClass()`](https://docs.python.org/3/library/unittest.html#unittest.TestCase.setUpClass "unittest.TestCase.setUpClass"). Patch by Lisa Roach.
  * [bpo-34630](https://bugs.python.org/issue?@action=redirect&bpo=34630): Don’t log SSL certificate errors in asyncio code (connection error logging is skipped already).
  * [bpo-32490](https://bugs.python.org/issue?@action=redirect&bpo=32490): Prevent filename duplication in [`subprocess`](https://docs.python.org/3/library/subprocess.html#module-subprocess "subprocess: Subprocess management.") exception messages. Patch by Zackery Spytz.
  * [bpo-34363](https://bugs.python.org/issue?@action=redirect&bpo=34363): dataclasses.asdict() and .astuple() now handle namedtuples correctly.
  * [bpo-34625](https://bugs.python.org/issue?@action=redirect&bpo=34625): Update vendorized expat library version to 2.2.6.
  * [bpo-32270](https://bugs.python.org/issue?@action=redirect&bpo=32270): The subprocess module no longer mistakenly closes redirected fds even when they were in pass_fds when outside of the default {0, 1, 2} set.
  * [bpo-34622](https://bugs.python.org/issue?@action=redirect&bpo=34622): Create a dedicated `asyncio.CancelledError`, `asyncio.InvalidStateError` and `asyncio.TimeoutError` exception classes. Inherit them from corresponding exceptions from `concurrent.futures` package.