Title: IDLE Updates and Enhancements
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section details updates to IDLE, including the replacement of .context_use_ps1 with .prompt_last_line, making idlelib.run runnable, improving SystemExit handling, ensuring data is flushed to USB drives when saving, and removing redundant sorting in browser.py.
---

### IDLE[¶](https://docs.python.org/3/whatsnew/changelog.html#id443 "Link to this heading")
  * [bpo-35610](https://bugs.python.org/issue?@action=redirect&bpo=35610): Replace now redundant .context_use_ps1 with .prompt_last_line. This finishes change started in [bpo-31858](https://bugs.python.org/issue?@action=redirect&bpo=31858).
  * [bpo-37038](https://bugs.python.org/issue?@action=redirect&bpo=37038): Make idlelib.run runnable; add test clause.
  * [bpo-36958](https://bugs.python.org/issue?@action=redirect&bpo=36958): Print any argument other than None or int passed to SystemExit or sys.exit().
  * [bpo-36807](https://bugs.python.org/issue?@action=redirect&bpo=36807): When saving a file, call os.fsync() so bits are flushed to e.g. USB drive.
  * [bpo-32411](https://bugs.python.org/issue?@action=redirect&bpo=32411): In browser.py, remove extraneous sorting by line number since dictionary was created in line number order.


### Tools/Demos[¶](https://docs.python.org/3/whatsnew/changelog.html#id444 "Link to this heading")
  * [bpo-37053](https://bugs.python.org/issue?@action=redirect&bpo=37053): Handle strings like u”bar” correctly in Tools/parser/unparse.py. Patch by Chih-Hsuan Yen.


### C API[¶](https://docs.python.org/3/whatsnew/changelog.html#id445 "Link to this heading")
  * [bpo-36763](https://bugs.python.org/issue?@action=redirect&bpo=36763): Implement the [**PEP 587**](https://peps.python.org/pep-0587/) “Python Initialization Configuration”.
  * [bpo-36379](https://bugs.python.org/issue?@action=redirect&bpo=36379): Fix crashes when attempting to use the _modulo_ parameter when `__ipow__` is implemented in C.
  * [bpo-37107](https://bugs.python.org/issue?@action=redirect&bpo=37107): Update [`PyObject_CallMethodObjArgs()`](https://docs.python.org/3/c-api/call.html#c.PyObject_CallMethodObjArgs "PyObject_CallMethodObjArgs") and `_PyObject_CallMethodIdObjArgs` to use `_PyObject_GetMethod` to avoid creating a bound method object in many cases. Patch by Michael J. Sullivan.
  * [bpo-36974](https://bugs.python.org/issue?@action=redirect&bpo=36974): Implement [**PEP 590**](https://peps.python.org/pep-0590/): Vectorcall: a fast calling protocol for CPython. This is a new protocol to optimize calls of custom callable objects.
  * [bpo-36763](https://bugs.python.org/issue?@action=redirect&bpo=36763): `Py_Main()` now returns the exitcode rather than calling `Py_Exit(exitcode)` when calling `PyErr_Print()` if the current exception type is `SystemExit`.
  * [bpo-36922](https://bugs.python.org/issue?@action=redirect&bpo=36922): Add new type flag `Py_TPFLAGS_METHOD_DESCRIPTOR` for objects behaving like unbound methods. These are objects supporting the optimization given by the `LOAD_METHOD`/`CALL_METHOD` opcodes. See PEP 590.
  * [bpo-36728](https://bugs.python.org/issue?@action=redirect&bpo=36728): The `PyEval_ReInitThreads()` function has been removed from the C API. It should not be called explicitly: use [`PyOS_AfterFork_Child()`](https://docs.python.org/3/c-api/sys.html#c.PyOS_AfterFork_Child "PyOS_AfterFork_Child") instead.


## Python 3.8.0 alpha 4[¶](https://docs.python.org/3/whatsnew/changelog.html#python-3-8-0-alpha-4 "Link to this heading")
_Release date: 2019-05-06_
### Security[¶](https://docs.python.org/3/whatsnew/changelog.html#id446 "Link to this heading")
  * [bpo-36742](https://bugs.python.org/issue?@action=redirect&bpo=36742): Fixes mishandling of pre-normalization characters in urlsplit().
  * [bpo-30458](https://bugs.python.org/issue?@action=redirect&bpo=30458): Address [**CVE 2019-9740**](https://www.cve.org/CVERecord?id=CVE-2019-9740) by disallowing URL paths with embedded whitespace or control characters through into the underlying http client request. Such potentially malicious header injection URLs now cause an http.client.InvalidURL exception to be raised.
  * [bpo-35755](https://bugs.python.org/issue?@action=redirect&bpo=35755): [`shutil.which()`](https://docs.python.org/3/library/shutil.html#shutil.which "shutil.which") now uses `os.confstr("CS_PATH")` if available and if the `PATH` environment variable is not set. Remove also the current directory from `posixpath.defpath`. On Unix, [`shutil.which()`](https://docs.python.org/3/library/shutil.html#shutil.which "shutil.which") and the [`subprocess`](https://docs.python.org/3/library/subprocess.html#module-subprocess "subprocess: Subprocess management.") module no longer search the executable in the current directory if the `PATH` environment variable is not set.