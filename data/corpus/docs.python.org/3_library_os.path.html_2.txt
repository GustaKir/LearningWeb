Title: os.path Functions Documentation
URL: https://docs.python.org/3/library/os.path.html
Summary: This documentation details the changes and usage of functions within the os.path module, specifically highlighting the acceptance of path-like objects since version 3.6. It describes the functionality of `os.path.dirname()` which returns the directory name of a given pathname and `os.path.exists()` which checks for the existence of a path or file descriptor.
---

```

Changed in version 3.6: Accepts a [path-like object](https://docs.python.org/3/glossary.html#term-path-like-object). 

os.path.dirname(_path_)[¶](https://docs.python.org/3/library/os.path.html#os.path.dirname "Link to this definition")
    
Return the directory name of pathname _path_. This is the first element of the pair returned by passing _path_ to the function [`split()`](https://docs.python.org/3/library/os.path.html#os.path.split "os.path.split").
Changed in version 3.6: Accepts a [path-like object](https://docs.python.org/3/glossary.html#term-path-like-object). 

os.path.exists(_path_)[¶](https://docs.python.org/3/library/os.path.html#os.path.exists "Link to this definition")
    
Return `True` if _path_ refers to an existing path or an open file descriptor. Returns `False` for broken symbolic links. On some platforms, this function may return `False` if permission is not granted to execute [`os.stat()`](https://docs.python.org/3/library/os.html#os.stat "os.stat") on the requested file, even if the _path_ physically exists.
Changed in version 3.3: _path_ can now be an integer: `True` is returned if it is an open file descriptor, `False` otherwise.
Changed in version 3.6: Accepts a [path-like object](https://docs.python.org/3/glossary.html#term-path-like-object). 

os.path.lexists(_path_)[¶](https://docs.python.org/3/library/os.path.html#os.path.lexists "Link to this definition")
    
Return `True` if _path_ refers to an existing path, including broken symbolic links. Equivalent to [`exists()`](https://docs.python.org/3/library/os.path.html#os.path.exists "os.path.exists") on platforms lacking [`os.lstat()`](https://docs.python.org/3/library/os.html#os.lstat "os.lstat").
Changed in version 3.6: Accepts a [path-like object](https://docs.python.org/3/glossary.html#term-path-like-object). 

os.path.expanduser(_path_)[¶](https://docs.python.org/3/library/os.path.html#os.path.expanduser "Link to this definition")
    
On Unix and Windows, return the argument with an initial component of `~` or `~user` replaced by that _user_ ’s home directory.
On Unix, an initial `~` is replaced by the environment variable `HOME` if it is set; otherwise the current user’s home directory is looked up in the password directory through the built-in module [`pwd`](https://docs.python.org/3/library/pwd.html#module-pwd "pwd: The password database \(getpwnam\(\) and friends\). \(Unix\)"). An initial `~user` is looked up directly in the password directory.
On Windows, `USERPROFILE` will be used if set, otherwise a combination of `HOMEPATH` and `HOMEDRIVE` will be used. An initial `~user` is handled by checking that the last directory component of the current user’s home directory matches `USERNAME`, and replacing it if so.
If the expansion fails or if the path does not begin with a tilde, the path is returned unchanged.
Changed in version 3.6: Accepts a [path-like object](https://docs.python.org/3/glossary.html#term-path-like-object).
Changed in version 3.8: No longer uses `HOME` on Windows. 

os.path.expandvars(_path_)[¶](https://docs.python.org/3/library/os.path.html#os.path.expandvars "Link to this definition")
    
Return the argument with environment variables expanded. Substrings of the form `$name` or `${name}` are replaced by the value of environment variable _name_. Malformed variable names and references to non-existing variables are left unchanged.
On Windows, `%name%` expansions are supported in addition to `$name` and `${name}`.
Changed in version 3.6: Accepts a [path-like object](https://docs.python.org/3/glossary.html#term-path-like-object). 

os.path.getatime(_path_)[¶](https://docs.python.org/3/library/os.path.html#os.path.getatime "Link to this definition")
    
Return the time of last access of _path_. The return value is a floating-point number giving the number of seconds since the epoch (see the [`time`](https://docs.python.org/3/library/time.html#module-time "time: Time access and conversions.") module). Raise [`OSError`](https://docs.python.org/3/library/exceptions.html#OSError "OSError") if the file does not exist or is inaccessible. 

os.path.getmtime(_path_)[¶](https://docs.python.org/3/library/os.path.html#os.path.getmtime "Link to this definition")
    
Return the time of last modification of _path_. The return value is a floating-point number giving the number of seconds since the epoch (see the [`time`](https://docs.python.org/3/library/time.html#module-time "time: Time access and conversions.") module). Raise [`OSError`](https://docs.python.org/3/library/exceptions.html#OSError "OSError") if the file does not exist or is inaccessible.
Changed in version 3.6: Accepts a [path-like object](https://docs.python.org/3/glossary.html#term-path-like-object).