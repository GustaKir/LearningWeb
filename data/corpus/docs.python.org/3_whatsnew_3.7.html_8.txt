Title: PEP 552: Hash-based .pyc Files
URL: https://docs.python.org/3/whatsnew/3.7.html
Summary: PEP 552 introduces a new method for checking the validity of bytecode cache files in Python by using a hash of the source file instead of relying on timestamps. This approach improves build reproducibility and addresses issues related to filesystem timestamp precision, thereby reducing user confusion over source updates.
---

[**PEP 560**](https://peps.python.org/pep-0560/) – Core support for typing module and generic types
    
PEP written and implemented by Ivan Levkivskyi
### PEP 552: Hash-based .pyc Files[¶](https://docs.python.org/3/whatsnew/3.7.html#pep-552-hash-based-pyc-files "Link to this heading")
Python has traditionally checked the up-to-dateness of bytecode cache files (i.e., `.pyc` files) by comparing the source metadata (last-modified timestamp and size) with source metadata saved in the cache file header when it was generated. While effective, this invalidation method has its drawbacks. When filesystem timestamps are too coarse, Python can miss source updates, leading to user confusion. Additionally, having a timestamp in the cache file is problematic for [build reproducibility](https://reproducible-builds.org/) and content-based build systems.
[**PEP 552**](https://peps.python.org/pep-0552/) extends the pyc format to allow the hash of the source file to be used for invalidation instead of the source timestamp. Such `.pyc` files are called “hash-based”. By default, Python still uses timestamp-based invalidation and does not generate hash-based `.pyc` files at runtime. Hash-based `.pyc` files may be generated with [`py_compile`](https://docs.python.org/3/library/py_compile.html#module-py_compile "py_compile: Generate byte-code files from Python source files.") or [`compileall`](https://docs.python.org/3/library/compileall.html#module-compileall "compileall: Tools for byte-compiling all Python source files in a directory tree.").
Hash-based `.pyc` files come in two variants: checked and unchecked. Python validates checked hash-based `.pyc` files against the corresponding source files at runtime but doesn’t do so for unchecked hash-based pycs. Unchecked hash-based `.pyc` files are a useful performance optimization for environments where a system external to Python (e.g., the build system) is responsible for keeping `.pyc` files up-to-date.
See [Cached bytecode invalidation](https://docs.python.org/3/reference/import.html#pyc-invalidation) for more information.
See also 

[**PEP 552**](https://peps.python.org/pep-0552/) – Deterministic pycs
    
PEP written and implemented by Benjamin Peterson
### PEP 545: Python Documentation Translations[¶](https://docs.python.org/3/whatsnew/3.7.html#pep-545-python-documentation-translations "Link to this heading")
[**PEP 545**](https://peps.python.org/pep-0545/) describes the process of creating and maintaining Python documentation translations.
Three new translations have been added:
  * Japanese: <https://docs.python.org/ja/>
  * French: <https://docs.python.org/fr/>
  * Korean: <https://docs.python.org/ko/>


See also