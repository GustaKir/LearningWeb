Title: Python Data Model Reference
URL: https://docs.python.org/3/contents.html
Summary: This section outlines various aspects of the Python data model including emulating callable objects, container types, numeric types, and customizing positional arguments for class pattern matching, along with the purpose and differences of __class_getitem__ and __getitem__.
---

The purpose of ___class_getitem___](https://docs.python.org/3/reference/datamodel.html#the-purpose-of-class-getitem)
          * [3.3.5.2. ___class_getitem___ versus ___getitem___](https://docs.python.org/3/reference/datamodel.html#class-getitem-versus-getitem)
        * [3.3.6. Emulating callable objects](https://docs.python.org/3/reference/datamodel.html#emulating-callable-objects)
        * [3.3.7. Emulating container types](https://docs.python.org/3/reference/datamodel.html#emulating-container-types)
        * [3.3.8. Emulating numeric types](https://docs.python.org/3/reference/datamodel.html#emulating-numeric-types)
        * [3.3.9. With Statement Context Managers](https://docs.python.org/3/reference/datamodel.html#with-statement-context-managers)
        * [3.3.10. Customizing positional arguments in class pattern matching](https://docs.python.org/3/reference/datamodel.html#customizing-positional-arguments-in-class-pattern-matching)
        * [3.3.11. Emulating buffer types](https://docs.python.org/3/reference/datamodel.html#emulating-buffer-types)
        * [3.3.12. Special method lookup](https://docs.python.org/3/reference/datamodel.html#special-method-lookup)
      * [3.4. Coroutines](https://docs.python.org/3/reference/datamodel.html#coroutines)
        * [3.4.1. Awaitable Objects](https://docs.python.org/3/reference/datamodel.html#awaitable-objects)
        * [3.4.2. Coroutine Objects](https://docs.python.org/3/reference/datamodel.html#coroutine-objects)
        * [3.4.3. Asynchronous Iterators](https://docs.python.org/3/reference/datamodel.html#asynchronous-iterators)
        * [3.4.4. Asynchronous Context Managers](https://docs.python.org/3/reference/datamodel.html#asynchronous-context-managers)
    * [4. Execution model](https://docs.python.org/3/reference/executionmodel.html)
      * [4.1. Structure of a program](https://docs.python.org/3/reference/executionmodel.html#structure-of-a-program)
      * [4.2. Naming and binding](https://docs.python.org/3/reference/executionmodel.html#naming-and-binding)
        * [4.2.1. Binding of names](https://docs.python.org/3/reference/executionmodel.html#binding-of-names)
        * [4.2.2. Resolution of names](https://docs.python.org/3/reference/executionmodel.html#resolution-of-names)
        * [4.2.3. Annotation scopes](https://docs.python.org/3/reference/executionmodel.html#annotation-scopes)
        * [4.2.4. Lazy evaluation](https://docs.python.org/3/reference/executionmodel.html#lazy-evaluation)
        * [4.2.5. Builtins and restricted execution](https://docs.python.org/3/reference/executionmodel.html#builtins-and-restricted-execution)
        * [4.2.6. Interaction with dynamic features](https://docs.python.org/3/reference/executionmodel.html#interaction-with-dynamic-features)
      * [4.3. Exceptions](https://docs.python.org/3/reference/executionmodel.html#exceptions)
    * [5. The import system](https://docs.python.org/3/reference/import.html)
      * [5.1. `importlib`](https://docs.python.org/3/reference/import.html#importlib)
      * [5.2. Packages](https://docs.python.org/3/reference/import.html#packages)
        * [5.2.1. Regular packages](https://docs.python.org/3/reference/import.html#regular-packages)
        * [5.2.2. Namespace packages](https://docs.python.org/3/reference/import.html#namespace-packages)
      * [5.3. Searching](https://docs.python.org/3/reference/import.html#searching)
        * [5.3.1. The module cache](https://docs.python.org/3/reference/import.html#the-module-cache)
        * [5.3.2. Finders and loaders](https://docs.python.org/3/reference/import.html#finders-and-loaders)
        * [5.3.3. Import hooks](https://docs.python.org/3/reference/import.html#import-hooks)
        * [5.3.4. The meta path](https://docs.python.org/3/reference/import.html#the-meta-path)
      * [5.4. Loading](https://docs.python.org/3/reference/import.html#loading)
        * [5.4.1. Loaders](https://docs.python.org/3/reference/import.html#loaders)
        * [5.4.2. Submodules](https://docs.python.org/3/reference/import.html#submodules)
        * [5.4.3. Module specs](https://docs.python.org/3/reference/import.html#module-specs)
        * [5.4.4. __path__ attributes on modules](https://docs.python.org/3/reference/import.html#path-attributes-on-modules)
        * [5.4.5. Module reprs](https://docs.python.org/3/reference/import.html#module-reprs)
        * [5.4.6. Cached bytecode invalidation](https://docs.python.org/3/reference/import.html#cached-bytecode-invalidation)
      * [5.5. The Path Based Finder](https://docs.python.org/3/reference/import.html#the-path-based-finder)
        * [5.5.1. Path entry finders](https://docs.python.org/3/reference/import.html#path-entry-finders)
        * [5.5.2. Path entry finder protocol](https://docs.python.org/3/reference/import.html#path-entry-finder-protocol)
      * [5.6. Replacing the standard import system](https://docs.python.org/3/reference/import.html#replacing-the-standard-import-system)
      * [5.7.