Title: Python 3.12 Deprecation Notices
URL: https://docs.python.org/3/whatsnew/3.12.html
Summary: The `master_open()` and `slave_open()` functions in the `os` module have been deprecated with a warning in Python 3.12, to be removed in 3.14. Additionally, on Windows, the `st_ctime` fields in `os.stat()` and `os.lstat()` will change in future releases to reflect the last metadata change time instead of the creation time.
---

\(Unix\)"): The module has two undocumented `master_open()` and `slave_open()` functions that have been deprecated since Python 2 but only gained a proper [`DeprecationWarning`](https://docs.python.org/3/library/exceptions.html#DeprecationWarning "DeprecationWarning") in 3.12. Remove them in 3.14. (Contributed by Soumendra Ganguly and Gregory P. Smith in [gh-85984](https://github.com/python/cpython/issues/85984).)
  * [`os`](https://docs.python.org/3/library/os.html#module-os "os: Miscellaneous operating system interfaces."):
    * The `st_ctime` fields return by [`os.stat()`](https://docs.python.org/3/library/os.html#os.stat "os.stat") and [`os.lstat()`](https://docs.python.org/3/library/os.html#os.lstat "os.lstat") on Windows are deprecated. In a future release, they will contain the last metadata change time, consistent with other platforms. For now, they still contain the creation time, which is also available in the new `st_birthtime` field. (Contributed by Steve Dower in [gh-99726](https://github.com/python/cpython/issues/99726).)
    * On POSIX platforms, [`os.fork()`](https://docs.python.org/3/library/os.html#os.fork "os.fork") can now raise a [`DeprecationWarning`](https://docs.python.org/3/library/exceptions.html#DeprecationWarning "DeprecationWarning") when it can detect being called from a multithreaded process. There has always been a fundamental incompatibility with the POSIX platform when doing so. Even if such code _appeared_ to work. We added the warning to raise awareness as issues encountered by code doing this are becoming more frequent. See the [`os.fork()`](https://docs.python.org/3/library/os.html#os.fork "os.fork") documentation for more details along with [this discussion on fork being incompatible with threads](https://discuss.python.org/t/concerns-regarding-deprecation-of-fork-with-alive-threads/33555) for _why_ weâ€™re now surfacing this longstanding platform compatibility problem to developers.
When this warning appears due to usage of [`multiprocessing`](https://docs.python.org/3/library/multiprocessing.html#module-multiprocessing "multiprocessing: Process-based parallelism.") or [`concurrent.futures`](https://docs.python.org/3/library/concurrent.futures.html#module-concurrent.futures "concurrent.futures: Execute computations concurrently using threads or processes.") the fix is to use a different [`multiprocessing`](https://docs.python.org/3/library/multiprocessing.html#module-multiprocessing "multiprocessing: Process-based parallelism.") start method such as `"spawn"` or `"forkserver"`.
  * [`shutil`](https://docs.python.org/3/library/shutil.html#module-shutil "shutil: High-level file operations, including copying."): The _onerror_ argument of [`shutil.rmtree()`](https://docs.python.org/3/library/shutil.html#shutil.rmtree "shutil.rmtree") is deprecated; use _onexc_ instead. (Contributed by Irit Katriel in [gh-102828](https://github.com/python/cpython/issues/102828).)
  * [`sqlite3`](https://docs.python.org/3/library/sqlite3.html#module-sqlite3 "sqlite3: A DB-API 2.0 implementation using SQLite 3.x."):
    * [default adapters and converters](https://docs.python.org/3/library/sqlite3.html#sqlite3-default-converters) are now deprecated. Instead, use the [Adapter and converter recipes](https://docs.python.org/3/library/sqlite3.html#sqlite3-adapter-converter-recipes) and tailor them to your needs. (Contributed by Erlend E. Aasland in [gh-90016](https://github.com/python/cpython/issues/90016).)
    * In [`execute()`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Cursor.execute "sqlite3.Cursor.execute"), [`DeprecationWarning`](https://docs.python.org/3/library/exceptions.html#DeprecationWarning "DeprecationWarning") is now emitted when [named placeholders](https://docs.python.org/3/library/sqlite3.html#sqlite3-placeholders) are used together with parameters supplied as a [sequence](https://docs.python.org/3/glossary.html#term-sequence) instead of as a [`dict`](https://docs.python.org/3/library/stdtypes.html#dict "dict"). Starting from Python 3.14, using named placeholders with parameters supplied as a sequence will raise a [`ProgrammingError`](https://docs.python.org/3/library/sqlite3.html#sqlite3.ProgrammingError "sqlite3.ProgrammingError"). (Contributed by Erlend E. Aasland in [gh-101698](https://github.com/python/cpython/issues/101698).)
  * [`sys`](https://docs.python.org/3/library/sys.html#module-sys "sys: Access system-specific parameters and functions."): The [`sys.last_type`](https://docs.python.org/3/library/sys.html#sys.last_type "sys.last_type"), [`sys.last_value`](https://docs.python.org/3/library/sys.html#sys.last_value "sys.last_value") and [`sys.last_traceback`](https://docs.python.org/3/library/sys.html#sys.last_traceback "sys.last_traceback") fields are deprecated. Use [`sys.last_exc`](https://docs.python.org/3/library/sys.html#sys.last_exc "sys.last_exc") instead.