Title: Curses Programming with Python
URL: https://docs.python.org/3/library/curses.html
Summary: This section provides an overview of the `curses` module in Python, which offers an interface for portable terminal handling. It details the `curses.error` exception, indicating errors from curses library functions, and notes defaults for optional parameters in curses functions.
---

[Curses Programming with Python](https://docs.python.org/3/howto/curses.html#curses-howto)
    
Tutorial material on using curses with Python, by Andrew Kuchling and Eric Raymond.
## Functions[¶](https://docs.python.org/3/library/curses.html#functions "Link to this heading")
The module [`curses`](https://docs.python.org/3/library/curses.html#module-curses "curses: An interface to the curses library, providing portable terminal handling. \(Unix\)") defines the following exception: 

_exception_ curses.error[¶](https://docs.python.org/3/library/curses.html#curses.error "Link to this definition")
    
Exception raised when a curses library function returns an error.
Note
Whenever _x_ or _y_ arguments to a function or a method are optional, they default to the current cursor location. Whenever _attr_ is optional, it defaults to [`A_NORMAL`](https://docs.python.org/3/library/curses.html#curses.A_NORMAL "curses.A_NORMAL").
The module [`curses`](https://docs.python.org/3/library/curses.html#module-curses "curses: An interface to the curses library, providing portable terminal handling. \(Unix\)") defines the following functions: 

curses.baudrate()[¶](https://docs.python.org/3/library/curses.html#curses.baudrate "Link to this definition")
    
Return the output speed of the terminal in bits per second. On software terminal emulators it will have a fixed high value. Included for historical reasons; in former times, it was used to write output loops for time delays and occasionally to change interfaces depending on the line speed. 

curses.beep()[¶](https://docs.python.org/3/library/curses.html#curses.beep "Link to this definition")
    
Emit a short attention sound. 

curses.can_change_color()[¶](https://docs.python.org/3/library/curses.html#curses.can_change_color "Link to this definition")
    
Return `True` or `False`, depending on whether the programmer can change the colors displayed by the terminal. 

curses.cbreak()[¶](https://docs.python.org/3/library/curses.html#curses.cbreak "Link to this definition")
    
Enter cbreak mode. In cbreak mode (sometimes called “rare” mode) normal tty line buffering is turned off and characters are available to be read one by one. However, unlike raw mode, special characters (interrupt, quit, suspend, and flow control) retain their effects on the tty driver and calling program. Calling first [`raw()`](https://docs.python.org/3/library/curses.html#curses.raw "curses.raw") then [`cbreak()`](https://docs.python.org/3/library/curses.html#curses.cbreak "curses.cbreak") leaves the terminal in cbreak mode. 

curses.color_content(_color_number_)[¶](https://docs.python.org/3/library/curses.html#curses.color_content "Link to this definition")
    
Return the intensity of the red, green, and blue (RGB) components in the color _color_number_ , which must be between `0` and `COLORS - 1`. Return a 3-tuple, containing the R,G,B values for the given color, which will be between `0` (no component) and `1000` (maximum amount of component). 

curses.color_pair(_pair_number_)[¶](https://docs.python.org/3/library/curses.html#curses.color_pair "Link to this definition")
    
Return the attribute value for displaying text in the specified color pair. Only the first 256 color pairs are supported. This attribute value can be combined with [`A_STANDOUT`](https://docs.python.org/3/library/curses.html#curses.A_STANDOUT "curses.A_STANDOUT"), [`A_REVERSE`](https://docs.python.org/3/library/curses.html#curses.A_REVERSE "curses.A_REVERSE"), and the other `A_*` attributes. [`pair_number()`](https://docs.python.org/3/library/curses.html#curses.pair_number "curses.pair_number") is the counterpart to this function. 

curses.curs_set(_visibility_)[¶](https://docs.python.org/3/library/curses.html#curses.curs_set "Link to this definition")
    
Set the cursor state. _visibility_ can be set to `0`, `1`, or `2`, for invisible, normal, or very visible. If the terminal supports the visibility requested, return the previous cursor state; otherwise raise an exception. On many terminals, the “visible” mode is an underline cursor and the “very visible” mode is a block cursor. 

curses.def_prog_mode()[¶](https://docs.python.org/3/library/curses.html#curses.def_prog_mode "Link to this definition")
    
Save the current terminal mode as the “program” mode, the mode when the running program is using curses. (Its counterpart is the “shell” mode, for when the program is not in curses.) Subsequent calls to [`reset_prog_mode()`](https://docs.python.org/3/library/curses.html#curses.reset_prog_mode "curses.reset_prog_mode") will restore this mode.