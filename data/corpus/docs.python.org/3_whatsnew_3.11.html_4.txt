Title: Python 3.11 Release Notes
URL: https://docs.python.org/3/whatsnew/3.11.html
Summary: This section references PEP 657, detailing that it introduces features which may increase interpreter memory and disk usage. It also notes how to disable extra traceback information using command-line options or environment variables. Furthermore, it introduces PEP 654, which discusses Exception Groups and the 'except*' syntax.
---

See [**PEP 657**](https://peps.python.org/pep-0657/) for more details. (Contributed by Pablo Galindo, Batuhan Taskaya and Ammar Askar in [bpo-43950](https://bugs.python.org/issue?@action=redirect&bpo=43950).)
Note
This feature requires storing column positions in [Code Objects](https://docs.python.org/3/c-api/code.html#codeobjects), which may result in a small increase in interpreter memory usage and disk usage for compiled Python files. To avoid storing the extra information and deactivate printing the extra traceback information, use the [`-X no_debug_ranges`](https://docs.python.org/3/using/cmdline.html#cmdoption-X) command line option or the [`PYTHONNODEBUGRANGES`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONNODEBUGRANGES) environment variable.
### PEP 654: Exception Groups and `except*`[¶](https://docs.python.org/3/whatsnew/3.11.html#pep-654-exception-groups-and-except "Link to this heading")
[**PEP 654**](https://peps.python.org/pep-0654/) introduces language features that enable a program to raise and handle multiple unrelated exceptions simultaneously. The builtin types [`ExceptionGroup`](https://docs.python.org/3/library/exceptions.html#ExceptionGroup "ExceptionGroup") and [`BaseExceptionGroup`](https://docs.python.org/3/library/exceptions.html#BaseExceptionGroup "BaseExceptionGroup") make it possible to group exceptions and raise them together, and the new [`except*`](https://docs.python.org/3/reference/compound_stmts.html#except-star) syntax generalizes [`except`](https://docs.python.org/3/reference/compound_stmts.html#except) to match subgroups of exception groups.
See [**PEP 654**](https://peps.python.org/pep-0654/) for more details.
(Contributed by Irit Katriel in [bpo-45292](https://bugs.python.org/issue?@action=redirect&bpo=45292). PEP written by Irit Katriel, Yury Selivanov and Guido van Rossum.)
### PEP 678: Exceptions can be enriched with notes[¶](https://docs.python.org/3/whatsnew/3.11.html#pep-678-exceptions-can-be-enriched-with-notes "Link to this heading")
The [`add_note()`](https://docs.python.org/3/library/exceptions.html#BaseException.add_note "BaseException.add_note") method is added to [`BaseException`](https://docs.python.org/3/library/exceptions.html#BaseException "BaseException"). It can be used to enrich exceptions with context information that is not available at the time when the exception is raised. The added notes appear in the default traceback.
See [**PEP 678**](https://peps.python.org/pep-0678/) for more details.
(Contributed by Irit Katriel in [bpo-45607](https://bugs.python.org/issue?@action=redirect&bpo=45607). PEP written by Zac Hatfield-Dodds.)
### Windows `py.exe` launcher improvements[¶](https://docs.python.org/3/whatsnew/3.11.html#windows-py-exe-launcher-improvements "Link to this heading")
The copy of the [Python Launcher for Windows](https://docs.python.org/3/using/windows.html#launcher) included with Python 3.11 has been significantly updated. It now supports company/tag syntax as defined in [**PEP 514**](https://peps.python.org/pep-0514/) using the `-V:_<company>_/_<tag>_`argument instead of the limited`- _<major>_._<minor>_`. This allows launching distributions other than`PythonCore` , the one hosted on [python.org](https://www.python.org).
When using `-V:` selectors, either company or tag can be omitted, but all installs will be searched. For example, `-V:OtherPython/` will select the “best” tag registered for `OtherPython`, while `-V:3.11` or `-V:/3.11` will select the “best” distribution with tag `3.11`.
When using the legacy `-_<major>_`,`-_<major>_._<minor>_`,`-_<major>_-_<bitness>_`or`- _<major>_._<minor>_-_<bitness>_`arguments, all existing behaviour should be preserved from past versions, and only releases from`PythonCore` will be selected. However, the `-64` suffix now implies “not 32-bit” (not necessarily x86-64), as there are multiple supported 64-bit platforms. 32-bit runtimes are detected by checking the runtime’s tag for a `-32` suffix. All releases of Python since 3.5 have included this in their 32-bit builds.
## New Features Related to Type Hints[¶](https://docs.python.org/3/whatsnew/3.11.html#new-features-related-to-type-hints "Link to this heading")
This section covers major changes affecting [**PEP 484**](https://peps.python.org/pep-0484/) type hints and the [`typing`](https://docs.python.org/3/library/typing.html#module-typing "typing: Support for type hints \(see :pep:`484`\).") module.
### PEP 646: Variadic generics[¶](https://docs.python.org/3/whatsnew/3.11.html#pep-646-variadic-generics "Link to this heading")
[**PEP 484**](https://peps.python.org/pep-0484/) previously introduced [`TypeVar`](https://docs.python.org/3/library/typing.html#typing.TypeVar "typing.TypeVar"), enabling creation of generics parameterised with a single type. [**PEP 646**](https://peps.python.org/pep-0646/) adds [`TypeVarTuple`](https://docs.python.org/3/library/typing.html#typing.TypeVarTuple "typing.TypeVarTuple"), enabling parameterisation