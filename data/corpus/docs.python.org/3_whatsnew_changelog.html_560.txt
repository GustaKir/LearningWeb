Title: C API Changes and Fixes
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section outlines several updates to the Python C API, including the removal of redundant functions `PyByteArray_Init()` and `PyByteArray_Fini()`, enhancements to the `_PyBytes_Resize()` function, and fixes for memory leaks in `PyUnicode_EncodeLocale()` and `PyUnicode_EncodeFSDefault()` during error handling.
---

### C API[¶](https://docs.python.org/3/whatsnew/changelog.html#id483 "Link to this heading")
  * [bpo-35713](https://bugs.python.org/issue?@action=redirect&bpo=35713): The `PyByteArray_Init()` and `PyByteArray_Fini()` functions have been removed. They did nothing since Python 2.7.4 and Python 3.2.0, were excluded from the limited API (stable ABI), and were not documented.
  * [bpo-33817](https://bugs.python.org/issue?@action=redirect&bpo=33817): Fixed [`_PyBytes_Resize()`](https://docs.python.org/3/c-api/bytes.html#c._PyBytes_Resize "_PyBytes_Resize") for empty bytes objects.
  * [bpo-35322](https://bugs.python.org/issue?@action=redirect&bpo=35322): Fix memory leak in [`PyUnicode_EncodeLocale()`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_EncodeLocale "PyUnicode_EncodeLocale") and [`PyUnicode_EncodeFSDefault()`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_EncodeFSDefault "PyUnicode_EncodeFSDefault") on error handling.
  * [bpo-35059](https://bugs.python.org/issue?@action=redirect&bpo=35059): The following C macros have been converted to static inline functions: [`Py_INCREF()`](https://docs.python.org/3/c-api/refcounting.html#c.Py_INCREF "Py_INCREF"), [`Py_DECREF()`](https://docs.python.org/3/c-api/refcounting.html#c.Py_DECREF "Py_DECREF"), [`Py_XINCREF()`](https://docs.python.org/3/c-api/refcounting.html#c.Py_XINCREF "Py_XINCREF"), [`Py_XDECREF()`](https://docs.python.org/3/c-api/refcounting.html#c.Py_XDECREF "Py_XDECREF"), `PyObject_INIT()`, `PyObject_INIT_VAR()`.
  * [bpo-35296](https://bugs.python.org/issue?@action=redirect&bpo=35296): `make install` now also installs the internal API: `Include/internal/*.h` header files.
  * [bpo-35081](https://bugs.python.org/issue?@action=redirect&bpo=35081): Internal APIs surrounded by `#ifdef Py_BUILD_CORE` have been moved from `Include/*.h` headers to new header files `Include/internal/pycore_*.h`.
  * [bpo-35259](https://bugs.python.org/issue?@action=redirect&bpo=35259): Conditionally declare [`Py_FinalizeEx()`](https://docs.python.org/3/c-api/init.html#c.Py_FinalizeEx "Py_FinalizeEx") (new in 3.6) based on Py_LIMITED_API. Patch by Arthur Neufeld.
  * [bpo-35081](https://bugs.python.org/issue?@action=redirect&bpo=35081): The `_PyObject_GC_TRACK()` and `_PyObject_GC_UNTRACK()` macros have been removed from the public C API.
  * [bpo-35134](https://bugs.python.org/issue?@action=redirect&bpo=35134): Creation of a new `Include/cpython/` subdirectory.
  * [bpo-34725](https://bugs.python.org/issue?@action=redirect&bpo=34725): Adds _Py_SetProgramFullPath so embedders may override sys.executable
  * [bpo-34910](https://bugs.python.org/issue?@action=redirect&bpo=34910): Ensure that [`PyObject_Print()`](https://docs.python.org/3/c-api/object.html#c.PyObject_Print "PyObject_Print") always returns `-1` on error. Patch by Zackery Spytz.
  * [bpo-34523](https://bugs.python.org/issue?@action=redirect&bpo=34523): Py_DecodeLocale() and Py_EncodeLocale() now use the UTF-8 encoding on Windows if Py_LegacyWindowsFSEncodingFlag is zero.
  * [bpo-34193](https://bugs.python.org/issue?@action=redirect&bpo=34193): Fix pluralization in TypeError messages in getargs.c and typeobject.c: ‘1 argument’ instead of ‘1 arguments’ and ‘1 element’ instead of ‘1 elements’.
  * [bpo-34127](https://bugs.python.org/issue?@action=redirect&bpo=34127): Return grammatically correct error message based on argument count. Patch by Karthikeyan Singaravelan.
  * [bpo-23927](https://bugs.python.org/issue?@action=redirect&bpo=23927): Fixed [`SystemError`](https://docs.python.org/3/library/exceptions.html#SystemError "SystemError") in [`PyArg_ParseTupleAndKeywords()`](https://docs.python.org/3/c-api/arg.html#c.PyArg_ParseTupleAndKeywords "PyArg_ParseTupleAndKeywords") when the `w*` format unit is used for optional parameter.
  * [bpo-32455](https://bugs.python.org/issue?@action=redirect&bpo=32455): Added `PyCompile_OpcodeStackEffectWithJump()`.
  * [bpo-34008](https://bugs.python.org/issue?@action=redirect&bpo=34008): Py_Main() can again be called after Py_Initialize(), as in Python 3.6.
  * [bpo-32500](https://bugs.python.org/issue?@action=redirect&bpo=32500): Fixed error messages for [`PySequence_Size()`](https://docs.python.org/3/c-api/sequence.html#c.PySequence_Size "PySequence_Size"), [`PySequence_GetItem()`](https://docs.python.org/3/c-api/sequence.html#c.PySequence_GetItem "PySequence_GetItem"), [`PySequence_SetItem()`](https://docs.python.org/3/c-api/sequence.html#c.PySequence_SetItem "PySequence_SetItem") and [`PySequence_DelItem()`](https://docs.python.org/3/c-api/sequence.html#c.PySequence_DelItem "PySequence_DelItem") called with a mapping and [`PyMapping_Size()`](https://docs.python.org/3/c-api/mapping.html#c.PyMapping_Size "PyMapping_Size") called with a sequence.
  * [bpo-33818](https://bugs.python.org/issue?@action=redirect&bpo=33818): `PyExceptionClass_Name()` will now return `const char *` instead of `char *`.
  * [bpo-33042](https://bugs.python.org/issue?@action=redi