Title: Python 3 Changelog - Recent Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: Recent updates in Python include improvements to `repr()` for buffered and text streams, addition of a `total_nframe` field in tracemalloc, restored functionality of most subprocess features in subinterpreters, a fix for `time.process_time()` reporting, and a correction in `ast.dump()` functionality.
---

\(Unix\)").
  * [bpo-37960](https://bugs.python.org/issue?@action=redirect&bpo=37960): `repr()` of buffered and text streams now silences only expected exceptions when get the value of “name” and “mode” attributes.
  * [bpo-37961](https://bugs.python.org/issue?@action=redirect&bpo=37961): Add a `total_nframe` field to the traces collected by the tracemalloc module. This field indicates the original number of frames before it was truncated.
  * [bpo-37951](https://bugs.python.org/issue?@action=redirect&bpo=37951): Most features of the subprocess module now work again in subinterpreters. Only _preexec_fn_ is restricted in subinterpreters.
  * [bpo-36205](https://bugs.python.org/issue?@action=redirect&bpo=36205): Fix the rusage implementation of time.process_time() to correctly report the sum of the system and user CPU time.
  * [bpo-37950](https://bugs.python.org/issue?@action=redirect&bpo=37950): Fix [`ast.dump()`](https://docs.python.org/3/library/ast.html#ast.dump "ast.dump") when call with incompletely initialized node.
  * [bpo-34679](https://bugs.python.org/issue?@action=redirect&bpo=34679): Restores instantiation of Windows IOCP event loops from the non-main thread.
  * [bpo-36917](https://bugs.python.org/issue?@action=redirect&bpo=36917): Add default implementation of the [`ast.NodeVisitor.visit_Constant()`](https://docs.python.org/3/library/ast.html#ast.NodeVisitor.visit_Constant "ast.NodeVisitor.visit_Constant") method which emits a deprecation warning and calls corresponding methods `visit_Num()`, `visit_Str()`, etc.
  * [bpo-37798](https://bugs.python.org/issue?@action=redirect&bpo=37798): Update test_statistics.py to verify that the statistics module works well for both C and Python implementations. Patch by Donghee Na
  * [bpo-26589](https://bugs.python.org/issue?@action=redirect&bpo=26589): Added a new status code to the http module: 451 UNAVAILABLE_FOR_LEGAL_REASONS
  * [bpo-37915](https://bugs.python.org/issue?@action=redirect&bpo=37915): Fix a segmentation fault that appeared when comparing instances of `datetime.timezone` and `datetime.tzinfo` objects. Patch by Pablo Galindo.
  * [bpo-32554](https://bugs.python.org/issue?@action=redirect&bpo=32554): Deprecate having random.seed() call hash on arbitrary types.
  * [bpo-9938](https://bugs.python.org/issue?@action=redirect&bpo=9938): Add optional keyword argument `exit_on_error` for `ArgumentParser`.
  * [bpo-37851](https://bugs.python.org/issue?@action=redirect&bpo=37851): The [`faulthandler`](https://docs.python.org/3/library/faulthandler.html#module-faulthandler "faulthandler: Dump the Python traceback.") module no longer allocates its alternative stack at Python startup. Now the stack is only allocated at the first faulthandler usage.
  * [bpo-32793](https://bugs.python.org/issue?@action=redirect&bpo=32793): Fix a duplicated debug message when [`smtplib.SMTP.connect()`](https://docs.python.org/3/library/smtplib.html#smtplib.SMTP.connect "smtplib.SMTP.connect") is called.
  * [bpo-37885](https://bugs.python.org/issue?@action=redirect&bpo=37885): venv: Don’t generate unset variable warning on deactivate.
  * [bpo-37868](https://bugs.python.org/issue?@action=redirect&bpo=37868): Fix dataclasses.is_dataclass when given an instance that never raises AttributeError in __getattr__. That is, an object that returns something for __dataclass_fields__ even if it’s not a dataclass.
  * [bpo-37811](https://bugs.python.org/issue?@action=redirect&bpo=37811): Fix `socket` module’s `socket.connect(address)` function being unable to establish connection in case of interrupted system call. The problem was observed on all OSes which `poll(2)` system call can take only non-negative integers and -1 as a timeout value.
  * [bpo-37863](https://bugs.python.org/issue?@action=redirect&bpo=37863): Optimizations for Fraction.__hash__ suggested by Tim Peters.
  * [bpo-21131](https://bugs.python.org/issue?@action=redirect&bpo=21131): Fix `faulthandler.register(chain=True)` stack. faulthandler now allocates a dedicated stack of `SIGSTKSZ*2` bytes, instead of just `SIGSTKSZ` bytes. Calling the previous signal handler in faulthandler signal handler uses more than `SIGSTKSZ` bytes of stack memory on some platforms.
  * [bpo-37798](https://bugs.python.org/issue?@action=redirect&bpo=37798): Add C fastpath for statistics.NormalDist.inv_cdf() Patch by Donghee Na
  * [bpo-37804](https://bugs.python.org/issue?@action=redirect&bpo=37804): Remove the deprecated method `threading.Thread.isAlive()`. Patch by Donghee Na.
  * [bpo-37819](https://bugs.python.org/issue?@action=redirect&bpo=37819): Add Fraction.as_integer_ratio() to match the corresponding methods in bool, int, float, and decimal.
  * [bpo-14465](https://bugs.python.org/issue?@action=redirect&bpo=14465): Add an xml.etree.ElementTree.indent() function for pretty-printing XML trees.