Title: Library Updates in Python
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section highlights several updates in the Python library, including improvements to the `gzip` command line application which now handles unsupported extensions correctly and sets a more efficient chunk size. Additionally, changes were made to the handling of None values in single-argument versions of `print_exception()` and `format_exception()` functions.
---

s.python.org/3/reference/datamodel.html#object.__rpow__ "object.__rpow__") as expected.


### Library[Â¶](https://docs.python.org/3/whatsnew/changelog.html#id310 "Link to this heading")
  * [bpo-43316](https://bugs.python.org/issue?@action=redirect&bpo=43316): The `python -m gzip` command line application now properly fails when detecting an unsupported extension. It exits with a non-zero exit code and prints an error message to stderr.
  * [bpo-43317](https://bugs.python.org/issue?@action=redirect&bpo=43317): Set the chunk size for the `gzip` module main function to io.DEFAULT_BUFFER_SIZE. This is slightly faster than the 1024 bytes constant that was used previously.
  * [bpo-43146](https://bugs.python.org/issue?@action=redirect&bpo=43146): Handle None in single-arg versions of [`print_exception()`](https://docs.python.org/3/library/traceback.html#traceback.print_exception "traceback.print_exception") and [`format_exception()`](https://docs.python.org/3/library/traceback.html#traceback.format_exception "traceback.format_exception").
  * [bpo-43260](https://bugs.python.org/issue?@action=redirect&bpo=43260): Fix TextIOWrapper can not flush internal buffer forever after very large text is written.
  * [bpo-43258](https://bugs.python.org/issue?@action=redirect&bpo=43258): Prevent needless allocation of [`sqlite3`](https://docs.python.org/3/library/sqlite3.html#module-sqlite3 "sqlite3: A DB-API 2.0 implementation using SQLite 3.x.") aggregate function context when no rows match an aggregate query. Patch by Erlend E. Aasland.
  * [bpo-43251](https://bugs.python.org/issue?@action=redirect&bpo=43251): Improve [`sqlite3`](https://docs.python.org/3/library/sqlite3.html#module-sqlite3 "sqlite3: A DB-API 2.0 implementation using SQLite 3.x.") error handling: `sqlite3_column_name()` failures now result in [`MemoryError`](https://docs.python.org/3/library/exceptions.html#MemoryError "MemoryError"). Patch by Erlend E. Aasland.
  * [bpo-40956](https://bugs.python.org/issue?@action=redirect&bpo=40956): Fix segfault in [`sqlite3.Connection.backup()`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.backup "sqlite3.Connection.backup") if no argument was provided. The regression was introduced by PR 23838. Patch by Erlend E. Aasland.
  * [bpo-43172](https://bugs.python.org/issue?@action=redirect&bpo=43172): The readline module now passes its tests when built directly against libedit. Existing irreconcilable API differences remain in [`readline.get_begidx()`](https://docs.python.org/3/library/readline.html#readline.get_begidx "readline.get_begidx") and [`readline.get_endidx()`](https://docs.python.org/3/library/readline.html#readline.get_endidx "readline.get_endidx") behavior based on libreadline vs libedit use.
  * [bpo-43163](https://bugs.python.org/issue?@action=redirect&bpo=43163): Fix a bug in [`codeop`](https://docs.python.org/3/library/codeop.html#module-codeop "codeop: Compile \(possibly incomplete\) Python code.") that was causing it to not ask for more input when multi-line snippets have unclosed parentheses. Patch by Pablo Galindo
  * [bpo-43162](https://bugs.python.org/issue?@action=redirect&bpo=43162): deprecate unsupported ability to access enum members as attributes of other enum members
  * [bpo-43146](https://bugs.python.org/issue?@action=redirect&bpo=43146): Fix recent regression in None argument handling in [`traceback`](https://docs.python.org/3/library/traceback.html#module-traceback "traceback: Print or retrieve a stack traceback.") module functions.
  * [bpo-43102](https://bugs.python.org/issue?@action=redirect&bpo=43102): The namedtuple __new__ method had its __builtins__ set to None instead of an actual dictionary. This created problems for introspection tools.
  * [bpo-43106](https://bugs.python.org/issue?@action=redirect&bpo=43106): Added [`O_EVTONLY`](https://docs.python.org/3/library/os.html#os.O_EVTONLY "os.O_EVTONLY"), [`O_FSYNC`](https://docs.python.org/3/library/os.html#os.O_FSYNC "os.O_FSYNC"), [`O_SYMLINK`](https://docs.python.org/3/library/os.html#os.O_SYMLINK "os.O_SYMLINK") and [`O_NOFOLLOW_ANY`](https://docs.python.org/3/library/os.html#os.O_NOFOLLOW_ANY "os.O_NOFOLLOW_ANY") for macOS. Patch by Donghee Na.
  * [bpo-42960](https://bugs.python.org/issue?@action=redirect&bpo=42960): Adds [`resource.RLIMIT_KQUEUES`](https://docs.python.org/3/library/resource.html#resource.RLIMIT_KQUEUES "resource.RLIMIT_KQUEUES") constant from FreeBSD to the [`resource`](https://docs.python.org/3/library/resource.html#module-resource "resource: An interface to provide resource usage information on the current process. \(Unix\)") module.
  * [bpo-42151](https://bugs.python.org/issue?@action=redirect&bpo=42151): Make the pure Python implementation of [`xml.etree.ElementTree`](https://docs.python.org/3/library/xml.etree.elementtree.html#module-xml.etree.ElementTree "xml.etree.ElementTree: Implementation of the ElementTree API.") behave the same as the C implementation (`_elementree`) regarding de