Title: Porting to Python 3.11
URL: https://docs.python.org/3/whatsnew/3.11.html
Summary: This section outlines important changes and bugfixes in the Python API that may necessitate updates to existing Python code. Key points include the deprecation of the 'U' flag in file opening functions and a separate listing for C API porting notes.
---

## Porting to Python 3.11[¶](https://docs.python.org/3/whatsnew/3.11.html#porting-to-python-3-11 "Link to this heading")
This section lists previously described changes and other bugfixes in the Python API that may require changes to your Python code.
Porting notes for the C API are [listed separately](https://docs.python.org/3/whatsnew/3.11.html#whatsnew311-c-api-porting).
  * [`open()`](https://docs.python.org/3/library/functions.html#open "open"), [`io.open()`](https://docs.python.org/3/library/io.html#io.open "io.open"), [`codecs.open()`](https://docs.python.org/3/library/codecs.html#codecs.open "codecs.open") and [`fileinput.FileInput`](https://docs.python.org/3/library/fileinput.html#fileinput.FileInput "fileinput.FileInput") no longer accept `'U'` (“universal newline”) in the file mode. In Python 3, “universal newline” mode is used by default whenever a file is opened in text mode, and the `'U'` flag has been deprecated since Python 3.3. The [newline parameter](https://docs.python.org/3/library/functions.html#open-newline-parameter) to these functions controls how universal newlines work. (Contributed by Victor Stinner in [bpo-37330](https://bugs.python.org/issue?@action=redirect&bpo=37330).)
  * [`ast.AST`](https://docs.python.org/3/library/ast.html#ast.AST "ast.AST") node positions are now validated when provided to [`compile()`](https://docs.python.org/3/library/functions.html#compile "compile") and other related functions. If invalid positions are detected, a [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError "ValueError") will be raised. (Contributed by Pablo Galindo in [gh-93351](https://github.com/python/cpython/issues/93351))
  * Prohibited passing non-[`concurrent.futures.ThreadPoolExecutor`](https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.ThreadPoolExecutor "concurrent.futures.ThreadPoolExecutor") executors to [`asyncio.loop.set_default_executor()`](https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.loop.set_default_executor "asyncio.loop.set_default_executor") following a deprecation in Python 3.8. (Contributed by Illia Volochii in [bpo-43234](https://bugs.python.org/issue?@action=redirect&bpo=43234).)
  * [`calendar`](https://docs.python.org/3/library/calendar.html#module-calendar "calendar: Functions for working with calendars, including some emulation of the Unix cal program."): The [`calendar.LocaleTextCalendar`](https://docs.python.org/3/library/calendar.html#calendar.LocaleTextCalendar "calendar.LocaleTextCalendar") and [`calendar.LocaleHTMLCalendar`](https://docs.python.org/3/library/calendar.html#calendar.LocaleHTMLCalendar "calendar.LocaleHTMLCalendar") classes now use [`locale.getlocale()`](https://docs.python.org/3/library/locale.html#locale.getlocale "locale.getlocale"), instead of using [`locale.getdefaultlocale()`](https://docs.python.org/3/library/locale.html#locale.getdefaultlocale "locale.getdefaultlocale"), if no locale is specified. (Contributed by Victor Stinner in [bpo-46659](https://bugs.python.org/issue?@action=redirect&bpo=46659).)
  * The [`pdb`](https://docs.python.org/3/library/pdb.html#module-pdb "pdb: The Python debugger for interactive interpreters.") module now reads the `.pdbrc` configuration file with the `'UTF-8'` encoding. (Contributed by Srinivas Reddy Thatiparthy (శ్రీనివాస్ రెడ్డి తాటిపర్తి) in [bpo-41137](https://bugs.python.org/issue?@action=redirect&bpo=41137).)
  * The _population_ parameter of [`random.sample()`](https://docs.python.org/3/library/random.html#random.sample "random.sample") must be a sequence, and automatic conversion of [`set`](https://docs.python.org/3/library/stdtypes.html#set "set")s to [`list`](https://docs.python.org/3/library/stdtypes.html#list "list")s is no longer supported. Also, if the sample size is larger than the population size, a [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError "ValueError") is raised. (Contributed by Raymond Hettinger in [bpo-40465](https://bugs.python.org/issue?@action=redirect&bpo=40465).)
  * The _random_ optional parameter of [`random.shuffle()`](https://docs.python.org/3/library/random.html#random.shuffle "random.shuffle") was removed. It was previously an arbitrary random function to use for the shuffle; now, [`random.random()`](https://docs.python.org/3/library/random.html#random.random "random.random") (its previous default) will always be used.
  * In [`re`](https://docs.python.org/3/library/re.html#module-re "re: Regular expression operations.") [Regular Expression Syntax](https://docs.python.org/3/library/re.html#re-syntax), global inline flags (e.g. `(?i)`) can now only be used at the start of regular expressions. Using them elsewhere has been deprecated since Python 3.6. (Contributed by Serhiy Storchaka in [bpo-47066](https://bugs.python.org/issue?@action=redirect&bpo=47066).)
  * In the [`re`](https://docs.python.org/3/library/re.html#module-re "re: Regular expression operations.") module,