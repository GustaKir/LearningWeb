Title: Python 3 Change Log: Core and Builtins Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section highlights recent fixes and enhancements in the core and built-in components of Python, including improvements to JIT builds, dictionary event handling, f-string syntax preservation, and support for arbitrary hashable object keys in frame locals.
---

### Core and Builtins[¶](https://docs.python.org/3/whatsnew/changelog.html#id52 "Link to this heading")
  * [gh-116090](https://github.com/python/cpython/issues/116090): Fix an issue in JIT builds that prevented some [`for`](https://docs.python.org/3/reference/compound_stmts.html#for) loops from correctly firing [`RAISE`](https://docs.python.org/3/library/sys.monitoring.html#monitoring-event-RAISE) monitoring events.
  * [gh-122208](https://github.com/python/cpython/issues/122208): Dictionary watchers now only deliver the PyDict_EVENT_ADDED event when the insertion is in a known good state to succeed.
  * [gh-122300](https://github.com/python/cpython/issues/122300): Preserve AST nodes for f-string with single-element format specifiers. Patch by Pablo Galindo
  * [gh-120906](https://github.com/python/cpython/issues/120906): [`frame.f_locals`](https://docs.python.org/3/reference/datamodel.html#frame.f_locals "frame.f_locals") now supports arbitrary hashable objects as keys.
  * [gh-122029](https://github.com/python/cpython/issues/122029): Emit `c_call` events in [`sys.setprofile()`](https://docs.python.org/3/library/sys.html#sys.setprofile "sys.setprofile") when a `PyMethodObject` pointing to a `PyCFunction` is called.
  * [gh-122026](https://github.com/python/cpython/issues/122026): Fix a bug that caused the tokenizer to not correctly identify mismatched parentheses inside f-strings in some situations. Patch by Pablo Galindo
  * [gh-118934](https://github.com/python/cpython/issues/118934): Make `PyEval_GetLocals` return borrowed reference


### C API[¶](https://docs.python.org/3/whatsnew/changelog.html#id53 "Link to this heading")
  * [gh-116622](https://github.com/python/cpython/issues/116622): Make [`PyObject_Print`](https://docs.python.org/3/c-api/object.html#c.PyObject_Print "PyObject_Print") work around a bug in Android and OpenBSD which prevented it from throwing an exception when trying to write to a read-only stream.
  * [gh-121489](https://github.com/python/cpython/issues/121489): Export private `_PyBytes_Join()` again.


### Build[¶](https://docs.python.org/3/whatsnew/changelog.html#id54 "Link to this heading")
  * [gh-120522](https://github.com/python/cpython/issues/120522): Added a [`--with-app-store-compliance`](https://docs.python.org/3/using/configure.html#cmdoption-with-app-store-compliance) option to patch out known issues with macOS/iOS App Store review processes.


## Python 3.13.0 beta 4[¶](https://docs.python.org/3/whatsnew/changelog.html#python-3-13-0-beta-4 "Link to this heading")
_Release date: 2024-07-18_
### Tests[¶](https://docs.python.org/3/whatsnew/changelog.html#id55 "Link to this heading")
  * [gh-121084](https://github.com/python/cpython/issues/121084): Fix test_typing random leaks. Clear typing ABC caches when running tests for refleaks (`-R` option): call `_abc_caches_clear()` on typing abstract classes and their subclasses. Patch by Victor Stinner.
  * [gh-121160](https://github.com/python/cpython/issues/121160): Add a test for [`readline.set_history_length()`](https://docs.python.org/3/library/readline.html#readline.set_history_length "readline.set_history_length"). Note that this test may fail on readline libraries.
  * [gh-121200](https://github.com/python/cpython/issues/121200): Fix `test_expanduser_pwd2()` of `test_posixpath`. Call `getpwnam()` to get `pw_dir`, since it can be different than `getpwall()` `pw_dir`. Patch by Victor Stinner.
  * [gh-121188](https://github.com/python/cpython/issues/121188): When creating the JUnit XML file, regrtest now escapes characters which are invalid in XML, such as the chr(27) control character used in ANSI escape sequences. Patch by Victor Stinner.