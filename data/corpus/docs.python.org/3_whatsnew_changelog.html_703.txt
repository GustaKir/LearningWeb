Title: Enhancements to regrtest in Python Testing
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section discusses several updates to the regrtest command line parser, including the addition of new options for enhanced test execution and reporting. Notable fixes and improvements include new command switches for coverage, test directory specification, and listing tests without execution, along with enhancements to output formatting and memory leak hunting.
---

### Tests[¶](https://docs.python.org/3/whatsnew/changelog.html#id711 "Link to this heading")
  * [bpo-30822](https://bugs.python.org/issue?@action=redirect&bpo=30822): Fix regrtest command line parser to allow passing -u extralargefile to run test_zipfile64.
  * [bpo-30383](https://bugs.python.org/issue?@action=redirect&bpo=30383): regrtest: Enhance regrtest and backport features from the master branch. Add options: –coverage, –testdir, –list-tests (list test files, don’t run them), –list-cases (list test identifiers, don’t run them, [bpo-30523](https://bugs.python.org/issue?@action=redirect&bpo=30523)), –matchfile (load a list of test filters from a text file, [bpo-30540](https://bugs.python.org/issue?@action=redirect&bpo=30540)), –slowest (alias to –slow). Enhance output: add timestamp, test result, currently running tests, “Tests result: xxx” summary with total duration, etc. Fix reference leak hunting in regrtest, –huntrleaks: regrtest now warms up caches, create explicitly all internal singletons which are created on demand to prevent false positives when checking for reference leaks. ([bpo-30675](https://bugs.python.org/issue?@action=redirect&bpo=30675)).
  * [bpo-30357](https://bugs.python.org/issue?@action=redirect&bpo=30357): test_thread: setUp() now uses support.threading_setup() and support.threading_cleanup() to wait until threads complete to avoid random side effects on following tests. Initial patch written by Grzegorz Grzywacz.
  * [bpo-28087](https://bugs.python.org/issue?@action=redirect&bpo=28087): Skip test_asyncore and test_eintr poll failures on macOS. Skip some tests of select.poll when running on macOS due to unresolved issues with the underlying system poll function on some macOS versions.
  * [bpo-30197](https://bugs.python.org/issue?@action=redirect&bpo=30197): Enhanced functions swap_attr() and swap_item() in the test.support module. They now work when delete replaced attribute or item inside the with statement. The old value of the attribute or item (or None if it doesn’t exist) now will be assigned to the target of the “as” clause, if there is one.
  * [bpo-29571](https://bugs.python.org/issue?@action=redirect&bpo=29571): to match the behaviour of the `re.LOCALE` flag, test_re.test_locale_flag now uses `locale.getpreferredencoding(False)` to determine the candidate encoding for the test regex (allowing it to correctly skip the test when the default locale encoding is a multi-byte encoding)


### Build[¶](https://docs.python.org/3/whatsnew/changelog.html#id712 "Link to this heading")
  * [bpo-29243](https://bugs.python.org/issue?@action=redirect&bpo=29243): Prevent unnecessary rebuilding of Python during `make test`, `make install` and some other make targets when configured with `--enable-optimizations`.
  * [bpo-23404](https://bugs.python.org/issue?@action=redirect&bpo=23404): Don’t regenerate generated files based on file modification time anymore: the action is now explicit. Replace `make touch` with `make regen-all`.
  * [bpo-29643](https://bugs.python.org/issue?@action=redirect&bpo=29643): Fix `--enable-optimization` didn’t work.


### Windows[¶](https://docs.python.org/3/whatsnew/changelog.html#id713 "Link to this heading")
  * [bpo-30687](https://bugs.python.org/issue?@action=redirect&bpo=30687): Locate msbuild.exe on Windows when building rather than vcvarsall.bat
  * [bpo-29392](https://bugs.python.org/issue?@action=redirect&bpo=29392): Prevent crash when passing invalid arguments into msvcrt module.


### C API[¶](https://docs.python.org/3/whatsnew/changelog.html#id714 "Link to this heading")
  * [bpo-27867](https://bugs.python.org/issue?@action=redirect&bpo=27867): Function PySlice_GetIndicesEx() is replaced with a macro if Py_LIMITED_API is set to the value between 0x03050400 and 0x03060000 (not including) or 0x03060100 or higher.
  * [bpo-29083](https://bugs.python.org/issue?@action=redirect&bpo=29083): Fixed the declaration of some public API functions. PyArg_VaParse() and PyArg_VaParseTupleAndKeywords() were not available in limited API. PyArg_ValidateKeywordArguments(), PyArg_UnpackTuple() and Py_BuildValue() were not available in limited API of version < 3.3 when PY_SSIZE_T_CLEAN is defined.