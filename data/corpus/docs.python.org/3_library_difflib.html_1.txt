Title: difflib.SequenceMatcher Class Overview
URL: https://docs.python.org/3/library/difflib.html
Summary: The difflib.SequenceMatcher class enables the comparison of pairs of hashable sequences. It employs an algorithm derived from the 1980s Ratcliff and Obershelp method, aiming to identify the longest contiguous matching subsequence while excluding 'junk' elements. This approach does not produce minimal edit sequences but focuses on generating human-perceived meaningful matches. The algorithm has a worst-case complexity of cubic time.
---

_class_ difflib.SequenceMatcher
    
This is a flexible class for comparing pairs of sequences of any type, so long as the sequence elements are [hashable](https://docs.python.org/3/glossary.html#term-hashable). The basic algorithm predates, and is a little fancier than, an algorithm published in the late 1980’s by Ratcliff and Obershelp under the hyperbolic name “gestalt pattern matching.” The idea is to find the longest contiguous matching subsequence that contains no “junk” elements; these “junk” elements are ones that are uninteresting in some sense, such as blank lines or whitespace. (Handling junk is an extension to the Ratcliff and Obershelp algorithm.) The same idea is then applied recursively to the pieces of the sequences to the left and to the right of the matching subsequence. This does not yield minimal edit sequences, but does tend to yield matches that “look right” to people.
**Timing:** The basic Ratcliff-Obershelp algorithm is cubic time in the worst case and quadratic time in the expected case. [`SequenceMatcher`](https://docs.python.org/3/library/difflib.html#difflib.SequenceMatcher "difflib.SequenceMatcher") is quadratic time for the worst case and has expected-case behavior dependent in a complicated way on how many elements the sequences have in common; best case time is linear.
**Automatic junk heuristic:** [`SequenceMatcher`](https://docs.python.org/3/library/difflib.html#difflib.SequenceMatcher "difflib.SequenceMatcher") supports a heuristic that automatically treats certain sequence items as junk. The heuristic counts how many times each individual item appears in the sequence. If an item’s duplicates (after the first one) account for more than 1% of the sequence and the sequence is at least 200 items long, this item is marked as “popular” and is treated as junk for the purpose of sequence matching. This heuristic can be turned off by setting the `autojunk` argument to `False` when creating the [`SequenceMatcher`](https://docs.python.org/3/library/difflib.html#difflib.SequenceMatcher "difflib.SequenceMatcher").
Changed in version 3.2: Added the _autojunk_ parameter. 

_class_ difflib.Differ[¶](https://docs.python.org/3/library/difflib.html#difflib.Differ "Link to this definition")
    
This is a class for comparing sequences of lines of text, and producing human-readable differences or deltas. Differ uses [`SequenceMatcher`](https://docs.python.org/3/library/difflib.html#difflib.SequenceMatcher "difflib.SequenceMatcher") both to compare sequences of lines, and to compare sequences of characters within similar (near-matching) lines.
Each line of a [`Differ`](https://docs.python.org/3/library/difflib.html#difflib.Differ "difflib.Differ") delta begins with a two-letter code:
Code | Meaning  
---|---  
`'- '` | line unique to sequence 1  
`'+ '` | line unique to sequence 2  
`'  '` | line common to both sequences  
`'? '` | line not present in either input sequence  
Lines beginning with ‘`?`’ attempt to guide the eye to intraline differences, and were not present in either input sequence. These lines can be confusing if the sequences contain whitespace characters, such as spaces, tabs or line breaks. 

_class_ difflib.HtmlDiff[¶](https://docs.python.org/3/library/difflib.html#difflib.HtmlDiff "Link to this definition")
    
This class can be used to create an HTML table (or a complete HTML file containing the table) showing a side by side, line by line comparison of text with inter-line and intra-line change highlights. The table can be generated in either full or contextual difference mode.
The constructor for this class is: 

__init__(_tabsize =8_, _wrapcolumn =None_, _linejunk =None_, _charjunk =IS_CHARACTER_JUNK_)[¶](https://docs.python.org/3/library/difflib.html#difflib.HtmlDiff.__init__ "Link to this definition")
    
Initializes instance of [`HtmlDiff`](https://docs.python.org/3/library/difflib.html#difflib.HtmlDiff "difflib.HtmlDiff").
_tabsize_ is an optional keyword argument to specify tab stop spacing and defaults to `8`.
_wrapcolumn_ is an optional keyword to specify column number where lines are broken and wrapped, defaults to `None` where lines are not wrapped.
_linejunk_ and _charjunk_ are optional keyword arguments passed into [`ndiff()`](https://docs.python.org/3/library/difflib.html#difflib.ndiff "difflib.ndiff") (used by [`HtmlDiff`](https://docs.python.org/3/library/difflib.html#difflib.HtmlDiff "difflib.HtmlDiff") to generate the side by side HTML differences). See [`ndiff()`](https://docs.python.org/3/library/difflib.html#difflib.ndiff "difflib.ndiff") documentation for argument default values and descriptions.
The following methods are public: