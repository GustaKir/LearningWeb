Title: Python 3 Changelog Highlights
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section of the changelog discusses several updates including the deprecation of certain optional arguments in regex functions, performance improvements in logging handlers, and a fix for the DocTestFinder related to class names with special characters.
---

for `getattr` and `dict.pop`.
  * [gh-56166](https://github.com/python/cpython/issues/56166): Deprecate passing optional arguments _maxsplit_ , _count_ and _flags_ in module-level functions [`re.split()`](https://docs.python.org/3/library/re.html#re.split "re.split"), [`re.sub()`](https://docs.python.org/3/library/re.html#re.sub "re.sub") and [`re.subn()`](https://docs.python.org/3/library/re.html#re.subn "re.subn") as positional. They should only be passed by keyword.
  * [gh-107710](https://github.com/python/cpython/issues/107710): Speed up [`logging.getHandlerNames()`](https://docs.python.org/3/library/logging.html#logging.getHandlerNames "logging.getHandlerNames").
  * [gh-107715](https://github.com/python/cpython/issues/107715): Fix [`doctest.DocTestFinder.find()`](https://docs.python.org/3/library/doctest.html#doctest.DocTestFinder.find "doctest.DocTestFinder.find") in presence of class names with special characters. Patch by Gertjan van Zwieten.
  * [gh-100814](https://github.com/python/cpython/issues/100814): Passing a callable object as an option value to a Tkinter image now raises the expected TclError instead of an AttributeError.
  * [gh-72684](https://github.com/python/cpython/issues/72684): Add [`tkinter`](https://docs.python.org/3/library/tkinter.html#module-tkinter "tkinter: Interface to Tcl/Tk for graphical user interfaces") widget methods: `tk_busy_hold()`, `tk_busy_configure()`, `tk_busy_cget()`, `tk_busy_forget()`, `tk_busy_current()`, and `tk_busy_status()`.
  * [gh-106684](https://github.com/python/cpython/issues/106684): Raise [`ResourceWarning`](https://docs.python.org/3/library/exceptions.html#ResourceWarning "ResourceWarning") when [`asyncio.StreamWriter`](https://docs.python.org/3/library/asyncio-stream.html#asyncio.StreamWriter "asyncio.StreamWriter") is not closed leading to memory leaks. Patch by Kumar Aditya.
  * [gh-107465](https://github.com/python/cpython/issues/107465): Add [`pathlib.Path.from_uri()`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.from_uri "pathlib.Path.from_uri") classmethod.
  * [gh-107077](https://github.com/python/cpython/issues/107077): Seems that in some conditions, OpenSSL will return `SSL_ERROR_SYSCALL` instead of `SSL_ERROR_SSL` when a certification verification has failed, but the error parameters will still contain `ERR_LIB_SSL` and `SSL_R_CERTIFICATE_VERIFY_FAILED`. We are now detecting this situation and raising the appropriate `ssl.SSLCertVerificationError`. Patch by Pablo Galindo
  * [gh-107576](https://github.com/python/cpython/issues/107576): Fix [`types.get_original_bases()`](https://docs.python.org/3/library/types.html#types.get_original_bases "types.get_original_bases") to only return `__orig_bases__` if it is present on `cls` directly. Patch by James Hilton-Balfe.
  * [gh-105481](https://github.com/python/cpython/issues/105481): Remove `opcode.is_pseudo`, `opcode.MIN_PSEUDO_OPCODE` and `opcode.MAX_PSEUDO_OPCODE`, which were added in 3.12, were never documented and were not intended to be used externally.
  * [gh-105481](https://github.com/python/cpython/issues/105481): `opcode.ENABLE_SPECIALIZATION` (which was added in 3.12 but never documented or intended for external usage) is moved to `_opcode.ENABLE_SPECIALIZATION` where tests can access it.
  * [gh-107396](https://github.com/python/cpython/issues/107396): tarfiles; Fixed use before assignment of self.exception for gzip decompression
  * [gh-107409](https://github.com/python/cpython/issues/107409): Set `__wrapped__` attribute in [`reprlib.recursive_repr()`](https://docs.python.org/3/library/reprlib.html#reprlib.recursive_repr "reprlib.recursive_repr").
  * [gh-107406](https://github.com/python/cpython/issues/107406): Implement new `__repr__()` method for [`struct.Struct`](https://docs.python.org/3/library/struct.html#struct.Struct "struct.Struct"). Now it returns `Struct(<format repr>)`.
  * [gh-107369](https://github.com/python/cpython/issues/107369): Optimize [`textwrap.indent()`](https://docs.python.org/3/library/textwrap.html#textwrap.indent "textwrap.indent"). It is ~30% faster for large input. Patch by Inada Naoki.
  * [gh-78722](https://github.com/python/cpython/issues/78722): Fix issue where [`pathlib.Path.iterdir()`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.iterdir "pathlib.Path.iterdir") did not raise [`OSError`](https://docs.python.org/3/library/exceptions.html#OSError "OSError") until iterated.
  * [gh-105578](https://github.com/python/cpython/issues/105578): Deprecate [`typing.AnyStr`](https://docs.python.org/3/library/typing.html#typing.AnyStr "typing.AnyStr") in favor of the new Type Parameter syntax.