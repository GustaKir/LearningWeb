Title: Handling Unicode Host Names in Networking Modules
URL: https://docs.python.org/3/library/codecs.html
Summary: Networking modules like http.client and ftplib can accept Unicode host names and will automatically send an IDNA hostname if needed. However, when receiving host names, applications must manually decode them to Unicode for user presentation.
---

On top of that, modules that have host names as function parameters, such as [`http.client`](https://docs.python.org/3/library/http.client.html#module-http.client "http.client: HTTP and HTTPS protocol client \(requires sockets\).") and [`ftplib`](https://docs.python.org/3/library/ftplib.html#module-ftplib "ftplib: FTP protocol client \(requires sockets\)."), accept Unicode host names ([`http.client`](https://docs.python.org/3/library/http.client.html#module-http.client "http.client: HTTP and HTTPS protocol client \(requires sockets\).") then also transparently sends an IDNA hostname in the _Host_ field if it sends that field at all).
When receiving host names from the wire (such as in reverse name lookup), no automatic conversion to Unicode is performed: applications wishing to present such host names to the user should decode them to Unicode.
The module [`encodings.idna`](https://docs.python.org/3/library/codecs.html#module-encodings.idna "encodings.idna: Internationalized Domain Names implementation") also implements the nameprep procedure, which performs certain normalizations on host names, to achieve case-insensitivity of international domain names, and to unify similar characters. The nameprep functions can be used directly if desired. 

encodings.idna.nameprep(_label_)[¶](https://docs.python.org/3/library/codecs.html#encodings.idna.nameprep "Link to this definition")
    
Return the nameprepped version of _label_. The implementation currently assumes query strings, so `AllowUnassigned` is true. 

encodings.idna.ToASCII(_label_)[¶](https://docs.python.org/3/library/codecs.html#encodings.idna.ToASCII "Link to this definition")
    
Convert a label to ASCII, as specified in [**RFC 3490**](https://datatracker.ietf.org/doc/html/rfc3490.html). `UseSTD3ASCIIRules` is assumed to be false.