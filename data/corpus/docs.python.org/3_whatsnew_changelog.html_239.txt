Title: Python Changelog - Recent Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This segment of the Python changelog discusses recent updates, including additions to `asyncio.create_connection`, the deprecation of certain `importlib.abc` classes, fixes for virtual environment activation errors, changes to enum pickling, and a reversion of a memory leak issue in the `re` module.
---

Aasland.
  * [gh-93973](https://github.com/python/cpython/issues/93973): Add keyword argument `all_errors` to `asyncio.create_connection` so that multiple connection errors can be raised as an `ExceptionGroup`.
  * [gh-93963](https://github.com/python/cpython/issues/93963): Officially deprecate from `importlib.abc` classes moved to `importlib.resources.abc`.
  * [gh-93858](https://github.com/python/cpython/issues/93858): Prevent error when activating venv in nested fish instances.
  * [gh-93820](https://github.com/python/cpython/issues/93820): Pickle [`enum.Flag`](https://docs.python.org/3/library/enum.html#enum.Flag "enum.Flag") by name.
  * [gh-93847](https://github.com/python/cpython/issues/93847): Fix repr of enum of generic aliases.
  * [gh-91404](https://github.com/python/cpython/issues/91404): Revert the [`re`](https://docs.python.org/3/library/re.html#module-re "re: Regular expression operations.") memory leak when a match is terminated by a signal or memory allocation failure as the implemented fix caused a major performance regression.
  * [gh-83499](https://github.com/python/cpython/issues/83499): Fix double closing of file description in [`tempfile`](https://docs.python.org/3/library/tempfile.html#module-tempfile "tempfile: Generate temporary files and directories.").
  * [gh-93820](https://github.com/python/cpython/issues/93820): Fixed a regression when [`copy.copy()`](https://docs.python.org/3/library/copy.html#copy.copy "copy.copy")-ing [`enum.Flag`](https://docs.python.org/3/library/enum.html#enum.Flag "enum.Flag") with multiple flag members.
  * [gh-79512](https://github.com/python/cpython/issues/79512): Fixed names and `__module__` value of [`weakref`](https://docs.python.org/3/library/weakref.html#module-weakref "weakref: Support for weak references and weak dictionaries.") classes [`ReferenceType`](https://docs.python.org/3/library/weakref.html#weakref.ReferenceType "weakref.ReferenceType"), [`ProxyType`](https://docs.python.org/3/library/weakref.html#weakref.ProxyType "weakref.ProxyType"), [`CallableProxyType`](https://docs.python.org/3/library/weakref.html#weakref.CallableProxyType "weakref.CallableProxyType"). It makes them pickleable.
  * [gh-91389](https://github.com/python/cpython/issues/91389): Fix an issue where [`dis`](https://docs.python.org/3/library/dis.html#module-dis "dis: Disassembler for Python bytecode.") utilities could report missing or incorrect position information in the presence of `CACHE` entries.
  * [gh-93626](https://github.com/python/cpython/issues/93626): Set `__future__.annotations` to have a `None` mandatoryRelease to indicate that it is currently ‘TBD’.
  * [gh-90473](https://github.com/python/cpython/issues/90473): Emscripten and WASI have no home directory and cannot provide [**PEP 370**](https://peps.python.org/pep-0370/) user site directory.
  * [gh-90494](https://github.com/python/cpython/issues/90494): [`copy.copy()`](https://docs.python.org/3/library/copy.html#copy.copy "copy.copy") and [`copy.deepcopy()`](https://docs.python.org/3/library/copy.html#copy.deepcopy "copy.deepcopy") now always raise a TypeError if `__reduce__()` returns a tuple with length 6 instead of silently ignore the 6th item or produce incorrect result.
  * [gh-90549](https://github.com/python/cpython/issues/90549): Fix a multiprocessing bug where a global named resource (such as a semaphore) could leak when a child process is spawned (as opposed to forked).
  * [gh-93521](https://github.com/python/cpython/issues/93521): Fixed a case where dataclasses would try to add `__weakref__` into the `__slots__` for a dataclass that specified `weakref_slot=True` when it was already defined in one of its bases. This resulted in a `TypeError` upon the new class being created.
  * [gh-79579](https://github.com/python/cpython/issues/79579): [`sqlite3`](https://docs.python.org/3/library/sqlite3.html#module-sqlite3 "sqlite3: A DB-API 2.0 implementation using SQLite 3.x.") now correctly detects DML queries with leading comments. Patch by Erlend E. Aasland.
  * [gh-93421](https://github.com/python/cpython/issues/93421): Update [`sqlite3.Cursor.rowcount`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Cursor.rowcount "sqlite3.Cursor.rowcount") when a DML statement has run to completion. This fixes the row count for SQL queries like `UPDATE ... RETURNING`. Patch by Erlend E. Aasland.
  * [gh-93475](https://github.com/python/cpython/issues/93475): Expose `FICLONE` and `FICLONERANGE` constants in [`fcntl`](https://docs.python.org/3/library/fcntl.html#module-fcntl "fcntl: The fcntl\(\) and ioctl\(\) system calls. \(Unix\)").