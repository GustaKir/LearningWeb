Title: Notable Changes in Python 3.7.11
URL: https://docs.python.org/3/whatsnew/3.7.html
Summary: Python 3.7.11 includes a security fix for `ftplib.FTP`, which now does not trust the IPv4 address from the remote server when setting up a passive data channel. Instead, it reuses the FTP server's IP address, with an option to revert to old behavior. Additionally, the URL parser `urllib.parse()` now strips newline `
`, ``, and tab `	` characters from URLs to prevent potential attacks, following updates to RFC 3986.
---

t, Senthil Kumaran and Ken Jin in [bpo-42967](https://bugs.python.org/issue?@action=redirect&bpo=42967).)
## Notable changes in Python 3.7.11[¶](https://docs.python.org/3/whatsnew/3.7.html#notable-changes-in-python-3-7-11 "Link to this heading")
A security fix alters the [`ftplib.FTP`](https://docs.python.org/3/library/ftplib.html#ftplib.FTP "ftplib.FTP") behavior to not trust the IPv4 address sent from the remote server when setting up a passive data channel. We reuse the ftp server IP address instead. For unusual code requiring the old behavior, set a `trust_server_pasv_ipv4_address` attribute on your FTP instance to `True`. (See [gh-87451](https://github.com/python/cpython/issues/87451))
The presence of newline or tab characters in parts of a URL allows for some forms of attacks. Following the WHATWG specification that updates RFC 3986, ASCII newline `\n`, `\r` and tab `\t` characters are stripped from the URL by the parser [`urllib.parse()`](https://docs.python.org/3/library/urllib.parse.html#module-urllib.parse "urllib.parse: Parse URLs into or assemble them from components.") preventing such attacks. The removal characters are controlled by a new module level variable `urllib.parse._UNSAFE_URL_BYTES_TO_REMOVE`. (See [gh-88048](https://github.com/python/cpython/issues/88048))
## Notable security feature in 3.7.14[¶](https://docs.python.org/3/whatsnew/3.7.html#notable-security-feature-in-3-7-14 "Link to this heading")
Converting between [`int`](https://docs.python.org/3/library/functions.html#int "int") and [`str`](https://docs.python.org/3/library/stdtypes.html#str "str") in bases other than 2 (binary), 4, 8 (octal), 16 (hexadecimal), or 32 such as base 10 (decimal) now raises a [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError "ValueError") if the number of digits in string form is above a limit to avoid potential denial of service attacks due to the algorithmic complexity. This is a mitigation for [**CVE 2020-10735**](https://www.cve.org/CVERecord?id=CVE-2020-10735). This limit can be configured or disabled by environment variable, command line flag, or [`sys`](https://docs.python.org/3/library/sys.html#module-sys "sys: Access system-specific parameters and functions.") APIs. See the [integer string conversion length limitation](https://docs.python.org/3/library/stdtypes.html#int-max-str-digits) documentation.