Title: Python C API: Import
URL: https://docs.python.org/3/c-api/import.html
Summary: This section covers the Import functionality in the Python C API, detailing how the import mechanism works, related utilities, and provides navigation links to previous and next topics on Operating System Utilities and Data Marshalling Support.
---

[ ![Python logo](https://docs.python.org/3/_static/py.svg) ](https://www.python.org/) dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
Theme  Auto Light Dark
#### Previous topic
[Operating System Utilities](https://docs.python.org/3/c-api/sys.html "previous chapter")
#### Next topic
[Data marshalling support](https://docs.python.org/3/c-api/marshal.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/c-api/import.rst)


### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/c-api/marshal.html "Data marshalling support") |
  * [previous](https://docs.python.org/3/c-api/sys.html "Operating System Utilities") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [Python/C API Reference Manual](https://docs.python.org/3/c-api/index.html) »
  * [Utilities](https://docs.python.org/3/c-api/utilities.html) »
  * [Importing Modules](https://docs.python.org/3/c-api/import.html)
  * | 
  * Theme  Auto Light Dark |


# Importing Modules[¶](https://docs.python.org/3/c-api/import.html#importing-modules "Link to this heading") 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyImport_ImportModule(constchar*name)[¶](https://docs.python.org/3/c-api/import.html#c.PyImport_ImportModule "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
This is a wrapper around [`PyImport_Import()`](https://docs.python.org/3/c-api/import.html#c.PyImport_Import "PyImport_Import") which takes a constchar* as an argument instead of a [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*. 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyImport_ImportModuleNoBlock(constchar*name)[¶](https://docs.python.org/3/c-api/import.html#c.PyImport_ImportModuleNoBlock "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
This function is a deprecated alias of [`PyImport_ImportModule()`](https://docs.python.org/3/c-api/import.html#c.PyImport_ImportModule "PyImport_ImportModule").
Changed in version 3.3: This function used to fail immediately when the import lock was held by another thread. In Python 3.3 though, the locking scheme switched to per-module locks for most purposes, so this function’s special behaviour isn’t needed anymore.
Deprecated since version 3.13, will be removed in version 3.15: Use [`PyImport_ImportModule()`](https://docs.python.org/3/c-api/import.html#c.PyImport_ImportModule "PyImport_ImportModule") instead. 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyImport_ImportModuleEx(constchar*name, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*globals, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*locals, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*fromlist)[¶](https://docs.python.org/3/c-api/import.html#c.PyImport_ImportModuleEx "Link to this definition")
    _Return value: New reference._
Import a module. This is best described by referring to the built-in Python function [`__import__()`](https://docs.python.org/3/library/functions.html#import__ "__import__").
The return value is a new reference to the imported module or top-level package, or `NULL` with an exception set on failure. Like for [`__import__()`](https://docs.python.org/3/library/functions.html#import__ "__import__"), the return value when a submodule of a package was requested is normally the top-level package, unless a non-empty _fromlist_ was given.
Failing imports remove incomplete module objects, like with [`PyImport_ImportModule()`](https://docs.python.org/3/c-api/import.html#c.PyImport_ImportModule "PyImport_ImportModule").