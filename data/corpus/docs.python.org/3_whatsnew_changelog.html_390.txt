Title: Python Changelog Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: Recent updates include a patch by Victor Stinner for `install_signal_handlers` and changes to the `Py_TRASHCAN_BEGIN` macro which now uses the new `_PyTrash_cond()` function to avoid direct access to `PyTypeObject` attributes. Additionally, improvements to path retrieval functions such as `Py_GetPath()` and related functions are noted.
---

install_signal_handlers`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.install_signal_handlers "PyConfig.install_signal_handlers"). Patch by Victor Stinner.
  * [bpo-40170](https://bugs.python.org/issue?@action=redirect&bpo=40170): The `Py_TRASHCAN_BEGIN` macro no longer accesses PyTypeObject attributes, but now can get the condition by calling the new private `_PyTrash_cond()` function which hides implementation details.
  * [bpo-42260](https://bugs.python.org/issue?@action=redirect&bpo=42260): [`Py_GetPath()`](https://docs.python.org/3/c-api/init.html#c.Py_GetPath "Py_GetPath"), [`Py_GetPrefix()`](https://docs.python.org/3/c-api/init.html#c.Py_GetPrefix "Py_GetPrefix"), [`Py_GetExecPrefix()`](https://docs.python.org/3/c-api/init.html#c.Py_GetExecPrefix "Py_GetExecPrefix"), [`Py_GetProgramFullPath()`](https://docs.python.org/3/c-api/init.html#c.Py_GetProgramFullPath "Py_GetProgramFullPath"), [`Py_GetPythonHome()`](https://docs.python.org/3/c-api/init.html#c.Py_GetPythonHome "Py_GetPythonHome") and [`Py_GetProgramName()`](https://docs.python.org/3/c-api/init.html#c.Py_GetProgramName "Py_GetProgramName") functions now return `NULL` if called before [`Py_Initialize()`](https://docs.python.org/3/c-api/init.html#c.Py_Initialize "Py_Initialize") (before Python is initialized). Use the new [Python Initialization Configuration API](https://docs.python.org/3/c-api/init_config.html#init-config) to get the [Python Path Configuration.](https://docs.python.org/3/c-api/init_config.html#init-path-config). Patch by Victor Stinner.
  * [bpo-42260](https://bugs.python.org/issue?@action=redirect&bpo=42260): The [`PyConfig_Read()`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig_Read "PyConfig_Read") function now only parses [`PyConfig.argv`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.argv "PyConfig.argv") arguments once: [`PyConfig.parse_argv`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.parse_argv "PyConfig.parse_argv") is set to `2` after arguments are parsed. Since Python arguments are strippped from [`PyConfig.argv`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.argv "PyConfig.argv"), parsing arguments twice would parse the application options as Python options.
  * [bpo-42262](https://bugs.python.org/issue?@action=redirect&bpo=42262): Added [`Py_NewRef()`](https://docs.python.org/3/c-api/refcounting.html#c.Py_NewRef "Py_NewRef") and [`Py_XNewRef()`](https://docs.python.org/3/c-api/refcounting.html#c.Py_XNewRef "Py_XNewRef") functions to increment the reference count of an object and return the object. Patch by Victor Stinner.
  * [bpo-42260](https://bugs.python.org/issue?@action=redirect&bpo=42260): When [`Py_Initialize()`](https://docs.python.org/3/c-api/init.html#c.Py_Initialize "Py_Initialize") is called twice, the second call now updates more [`sys`](https://docs.python.org/3/library/sys.html#module-sys "sys: Access system-specific parameters and functions.") attributes for the configuration, rather than only [`sys.argv`](https://docs.python.org/3/library/sys.html#sys.argv "sys.argv"). Patch by Victor Stinner.
  * [bpo-41832](https://bugs.python.org/issue?@action=redirect&bpo=41832): The [`PyType_FromModuleAndSpec()`](https://docs.python.org/3/c-api/type.html#c.PyType_FromModuleAndSpec "PyType_FromModuleAndSpec") function now accepts NULL `tp_doc` slot.
  * [bpo-1635741](https://bugs.python.org/issue?@action=redirect&bpo=1635741): Added [`PyModule_AddObjectRef()`](https://docs.python.org/3/c-api/module.html#c.PyModule_AddObjectRef "PyModule_AddObjectRef") function: similar to [`PyModule_AddObject()`](https://docs.python.org/3/c-api/module.html#c.PyModule_AddObject "PyModule_AddObject") but donâ€™t steal a reference to the value on success. Patch by Victor Stinner.
  * [bpo-42171](https://bugs.python.org/issue?@action=redirect&bpo=42171): The [`METH_FASTCALL`](https://docs.python.org/3/c-api/structures.html#c.METH_FASTCALL "METH_FASTCALL") calling convention is added to the limited API.