Title: Platform Module Documentation
URL: https://docs.python.org/3/library/platform.html
Summary: This section provides an overview of the Python 'platform' module, which offers access to identifying data of the underlying platform. It includes references to various platforms such as Cross Platform, Java Platform, Windows, macOS, and iOS.
---

[ ![Python logo](https://docs.python.org/3/_static/py.svg) ](https://www.python.org/) dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
Theme  Auto Light Dark
### [Table of Contents](https://docs.python.org/3/contents.html)
  * [`platform` — Access to underlying platform’s identifying data](https://docs.python.org/3/library/platform.html)
    * [Cross Platform](https://docs.python.org/3/library/platform.html#cross-platform)
    * [Java Platform](https://docs.python.org/3/library/platform.html#java-platform)
    * [Windows Platform](https://docs.python.org/3/library/platform.html#windows-platform)
    * [macOS Platform](https://docs.python.org/3/library/platform.html#macos-platform)
    * [iOS Platform](https://docs.python.org/3/library/platform.html#ios-platform)
    * [Unix Platforms](https://docs.python.org/3/library/platform.html#unix-platforms)
    * [Linux Platforms](https://docs.python.org/3/library/platform.html#linux-platforms)
    * [Android Platform](https://docs.python.org/3/library/platform.html#android-platform)


#### Previous topic
[`logging.handlers` — Logging handlers](https://docs.python.org/3/library/logging.handlers.html "previous chapter")
#### Next topic
[`errno` — Standard errno system symbols](https://docs.python.org/3/library/errno.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/platform.rst)


### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/library/errno.html "errno — Standard errno system symbols") |
  * [previous](https://docs.python.org/3/library/logging.handlers.html "logging.handlers — Logging handlers") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [The Python Standard Library](https://docs.python.org/3/library/index.html) »
  * [Generic Operating System Services](https://docs.python.org/3/library/allos.html) »
  * [`platform` — Access to underlying platform’s identifying data](https://docs.python.org/3/library/platform.html)
  * | 
  * Theme  Auto Light Dark |


# `platform` — Access to underlying platform’s identifying data[¶](https://docs.python.org/3/library/platform.html#module-platform "Link to this heading")
**Source code:** [Lib/platform.py](https://github.com/python/cpython/tree/3.13/Lib/platform.py)
Note
Specific platforms listed alphabetically, with Linux included in the Unix section.
## Cross Platform[¶](https://docs.python.org/3/library/platform.html#cross-platform "Link to this heading") 

platform.architecture(_executable =sys.executable_, _bits =''_, _linkage =''_)[¶](https://docs.python.org/3/library/platform.html#platform.architecture "Link to this definition")
    
Queries the given executable (defaults to the Python interpreter binary) for various architecture information.
Returns a tuple `(bits, linkage)` which contain information about the bit architecture and the linkage format used for the executable. Both values are returned as strings.
Values that cannot be determined are returned as given by the parameter presets. If bits is given as `''`, the `sizeof(pointer)` (or `sizeof(long)` on Python version < 1.5.2) is used as indicator for the supported pointer size.
The function relies on the system’s `file` command to do the actual work. This is available on most if not all Unix platforms and some non-Unix platforms and then only if the executable points to the Python interpreter. Reasonable defaults are used when the above needs are not met.
Note
On macOS (and perhaps other platforms), executable files may be universal files containing multiple architectures.
To get at the “64-bitness” of the current interpreter, it is more reliable to query the [`sys.maxsize`](https://docs.python.org/3/library/sys.html#sys.maxsize "sys.maxsize") attribute:
```
is_64bits = sys.maxsize > 2**32