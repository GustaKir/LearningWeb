Title: Creating and Opening Registry Keys with winreg.CreateKey
URL: https://docs.python.org/3/library/winreg.html
Summary: The winreg.CreateKey function creates or opens a specified registry key, returning a handle object. The _key_ parameter must be an already open key or a predefined HKEY_* constant, while _sub_key_ specifies the key to create or open. If the key exists, it is opened; if not, a new key is created. The function raises an OSError on failure and generates an auditing event.
---

winreg.CreateKey(_key_ , _sub_key_)[¶](https://docs.python.org/3/library/winreg.html#winreg.CreateKey "Link to this definition")
    
Creates or opens the specified key, returning a [handle object](https://docs.python.org/3/library/winreg.html#handle-object).
_key_ is an already open key, or one of the predefined [HKEY_* constants](https://docs.python.org/3/library/winreg.html#hkey-constants).
_sub_key_ is a string that names the key this method opens or creates.
If _key_ is one of the predefined keys, _sub_key_ may be `None`. In that case, the handle returned is the same key handle passed in to the function.
If the key already exists, this function opens the existing key.
The return value is the handle of the opened key. If the function fails, an [`OSError`](https://docs.python.org/3/library/exceptions.html#OSError "OSError") exception is raised.
Raises an [auditing event](https://docs.python.org/3/library/sys.html#auditing) `winreg.CreateKey` with arguments `key`, `sub_key`, `access`.
Raises an [auditing event](https://docs.python.org/3/library/sys.html#auditing) `winreg.OpenKey/result` with argument `key`.
Changed in version 3.3: See [above](https://docs.python.org/3/library/winreg.html#exception-changed). 

winreg.CreateKeyEx(_key_ , _sub_key_ , _reserved =0_, _access =KEY_WRITE_)[¶](https://docs.python.org/3/library/winreg.html#winreg.CreateKeyEx "Link to this definition")
    
Creates or opens the specified key, returning a [handle object](https://docs.python.org/3/library/winreg.html#handle-object).
_key_ is an already open key, or one of the predefined [HKEY_* constants](https://docs.python.org/3/library/winreg.html#hkey-constants).
_sub_key_ is a string that names the key this method opens or creates.
_reserved_ is a reserved integer, and must be zero. The default is zero.
_access_ is an integer that specifies an access mask that describes the desired security access for the key. Default is [`KEY_WRITE`](https://docs.python.org/3/library/winreg.html#winreg.KEY_WRITE "winreg.KEY_WRITE"). See [Access Rights](https://docs.python.org/3/library/winreg.html#access-rights) for other allowed values.
If _key_ is one of the predefined keys, _sub_key_ may be `None`. In that case, the handle returned is the same key handle passed in to the function.
If the key already exists, this function opens the existing key.
The return value is the handle of the opened key. If the function fails, an [`OSError`](https://docs.python.org/3/library/exceptions.html#OSError "OSError") exception is raised.
Raises an [auditing event](https://docs.python.org/3/library/sys.html#auditing) `winreg.CreateKey` with arguments `key`, `sub_key`, `access`.
Raises an [auditing event](https://docs.python.org/3/library/sys.html#auditing) `winreg.OpenKey/result` with argument `key`.
Added in version 3.2.
Changed in version 3.3: See [above](https://docs.python.org/3/library/winreg.html#exception-changed). 

winreg.DeleteKey(_key_ , _sub_key_)[¶](https://docs.python.org/3/library/winreg.html#winreg.DeleteKey "Link to this definition")
    
Deletes the specified key.
_key_ is an already open key, or one of the predefined [HKEY_* constants](https://docs.python.org/3/library/winreg.html#hkey-constants).
_sub_key_ is a string that must be a subkey of the key identified by the _key_ parameter. This value must not be `None`, and the key may not have subkeys.
_This method can not delete keys with subkeys._
If the method succeeds, the entire key, including all of its values, is removed. If the method fails, an [`OSError`](https://docs.python.org/3/library/exceptions.html#OSError "OSError") exception is raised.
Raises an [auditing event](https://docs.python.org/3/library/sys.html#auditing) `winreg.DeleteKey` with arguments `key`, `sub_key`, `access`.
Changed in version 3.3: See [above](https://docs.python.org/3/library/winreg.html#exception-changed).