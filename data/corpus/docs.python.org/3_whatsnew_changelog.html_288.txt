Title: Build Changes in Python
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section outlines recent changes related to building Python, including the requirement for a C11 compiler, support for NaN in floating-point operations, and specific header file requirements for C99. Additionally, improvements are made to save space during deep-freezing.
---

### Build[¶](https://docs.python.org/3/whatsnew/changelog.html#id240 "Link to this heading")
  * [bpo-46860](https://bugs.python.org/issue?@action=redirect&bpo=46860): Respect `--with-suffix` when building on case-insensitive file systems.
  * [bpo-46656](https://bugs.python.org/issue?@action=redirect&bpo=46656): Building Python now requires a C11 compiler. Optional C11 features are not required. Patch by Victor Stinner.
  * [bpo-46656](https://bugs.python.org/issue?@action=redirect&bpo=46656): Building Python now requires support for floating-point Not-a-Number (NaN): remove the `Py_NO_NAN` macro. Patch by Victor Stinner.
  * [bpo-46640](https://bugs.python.org/issue?@action=redirect&bpo=46640): Building Python now requires a C99 `<math.h>` header file providing a `NAN` constant, or the `__builtin_nan()` built-in function. Patch by Victor Stinner.
  * [bpo-46608](https://bugs.python.org/issue?@action=redirect&bpo=46608): Exclude marshalled-frozen data if deep-freezing to save 300 KB disk space. This includes adding a new `is_package` field to [`_frozen`](https://docs.python.org/3/c-api/import.html#c._frozen "_frozen"). Patch by Kumar Aditya.
  * [bpo-40280](https://bugs.python.org/issue?@action=redirect&bpo=40280): Fix wasm32-emscripten test failures and platform issues. - Disable syscalls that are not supported or don’t work, e.g. wait, getrusage, prlimit, mkfifo, mknod, setres[gu]id, setgroups. - Use fd_count to count open fds. - Add more checks for subprocess and fork. - Add workarounds for missing _multiprocessing and failing socket.accept(). - Enable bzip2. - Disable large file support. - Disable signal.alarm.
  * [bpo-46430](https://bugs.python.org/issue?@action=redirect&bpo=46430): Intern strings in deep-frozen modules. Patch by Kumar Aditya.


### Windows[¶](https://docs.python.org/3/whatsnew/changelog.html#id241 "Link to this heading")
  * [bpo-46744](https://bugs.python.org/issue?@action=redirect&bpo=46744): The default all users install directory for ARM64 is now under the native `Program Files` folder, rather than `Program Files (Arm)` which is intended for ARM (32-bit) files.
  * [bpo-46567](https://bugs.python.org/issue?@action=redirect&bpo=46567): Adds Tcl and Tk support for Windows ARM64. This also adds IDLE to the installation.
  * [bpo-46638](https://bugs.python.org/issue?@action=redirect&bpo=46638): Ensures registry virtualization is consistently disabled. For 3.10 and earlier, it remains enabled (some registry writes are protected), while for 3.11 and later it is disabled (registry modifications affect all applications).


### IDLE[¶](https://docs.python.org/3/whatsnew/changelog.html#id242 "Link to this heading")
  * [bpo-46630](https://bugs.python.org/issue?@action=redirect&bpo=46630): Make query dialogs on Windows start with a cursor in the entry box.
  * [bpo-45447](https://bugs.python.org/issue?@action=redirect&bpo=45447): Apply IDLE syntax highlighting to `.pyi` files. Patch by Alex Waygood and Terry Jan Reedy.


### C API[¶](https://docs.python.org/3/whatsnew/changelog.html#id243 "Link to this heading")
  * [bpo-46748](https://bugs.python.org/issue?@action=redirect&bpo=46748): Python’s public headers no longer import `<stdbool.h>`, leaving code that embeds/extends Python free to define `bool`, `true` and `false`.
  * [bpo-46836](https://bugs.python.org/issue?@action=redirect&bpo=46836): Move the [`PyFrameObject`](https://docs.python.org/3/c-api/frame.html#c.PyFrameObject "PyFrameObject") type definition (`struct _frame`) to the internal C API `pycore_frame.h` header file. Patch by Victor Stinner.
  * [bpo-45459](https://bugs.python.org/issue?@action=redirect&bpo=45459): Rename `Include/buffer.h` header file to `Include/pybuffer.h` to avoid conflicts with projects having an existing `buffer.h` header file. Patch by Victor Stinner.
  * [bpo-45412](https://bugs.python.org/issue?@action=redirect&bpo=45412): Remove the `HAVE_PY_SET_53BIT_PRECISION` macro (moved to the internal C API). Patch by Victor Stinner.
  * [bpo-46613](https://bugs.python.org/issue?@action=redirect&bpo=46613): Added function [`PyType_GetModuleByDef()`](https://docs.python.org/3/c-api/type.html#c.PyType_GetModuleByDef "PyType_GetModuleByDef"), which allows access to module state when a method’s defining class is not available.