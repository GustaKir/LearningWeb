Title: Turtle Module Configuration Entries
URL: https://docs.python.org/3/library/turtle.html
Summary: This section explains various configuration options for the Turtle module, including the arguments for methods like `Screen.setup` and `Screen.screensize`. It also covers shape configuration, fill color transparency, turtle state reflection, and language-specific docstring loading.
---

```

Short explanation of selected entries:
  * The first four lines correspond to the arguments of the [`Screen.setup`](https://docs.python.org/3/library/turtle.html#turtle.setup "turtle.setup") method.
  * Line 5 and 6 correspond to the arguments of the method [`Screen.screensize`](https://docs.python.org/3/library/turtle.html#turtle.screensize "turtle.screensize").
  * _shape_ can be any of the built-in shapes, e.g: arrow, turtle, etc. For more info try `help(shape)`.
  * If you want to use no fill color (i.e. make the turtle transparent), you have to write `fillcolor = ""` (but all nonempty strings must not have quotes in the cfg file).
  * If you want to reflect the turtle its state, you have to use `resizemode = auto`.
  * If you set e.g. `language = italian` the docstringdict `turtle_docstringdict_italian.py` will be loaded at import time (if present on the import path, e.g. in the same directory as [`turtle`](https://docs.python.org/3/library/turtle.html#module-turtle "turtle: An educational framework for simple graphics applications")).
  * The entries _exampleturtle_ and _examplescreen_ define the names of these objects as they occur in the docstrings. The transformation of method-docstrings to function-docstrings will delete these names from the docstrings.
  * _using_IDLE_ : Set this to `True` if you regularly work with IDLE and its `-n` switch (“no subprocess”). This will prevent [`exitonclick()`](https://docs.python.org/3/library/turtle.html#turtle.exitonclick "turtle.exitonclick") to enter the mainloop.


There can be a `turtle.cfg` file in the directory where [`turtle`](https://docs.python.org/3/library/turtle.html#module-turtle "turtle: An educational framework for simple graphics applications") is stored and an additional one in the current working directory. The latter will override the settings of the first one.
The `Lib/turtledemo` directory contains a `turtle.cfg` file. You can study it as an example and see its effects when running the demos (preferably not from within the demo-viewer).
## [`turtledemo`](https://docs.python.org/3/library/turtle.html#module-turtledemo "turtledemo: A viewer for example turtle scripts") — Demo scripts[¶](https://docs.python.org/3/library/turtle.html#module-turtledemo "Link to this heading")
The [`turtledemo`](https://docs.python.org/3/library/turtle.html#module-turtledemo "turtledemo: A viewer for example turtle scripts") package includes a set of demo scripts. These scripts can be run and viewed using the supplied demo viewer as follows:
```
python -m turtledemo

```

Alternatively, you can run the demo scripts individually. For example,
```
python -m turtledemo.bytedesign