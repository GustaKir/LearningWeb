Title: Unary Arithmetic Operations in Python Data Model
URL: https://docs.python.org/3/reference/datamodel.html
Summary: This section covers the implementation of unary arithmetic operations in Python, detailing methods such as __pos__, __abs__, and __invert__, which correspond to the operations `-`, `+`, `abs()`, and `~`. Additionally, it introduces methods for converting objects to complex, integer, and float types.
---

object.__pos__(_self_)[¶](https://docs.python.org/3/reference/datamodel.html#object.__pos__ "Link to this definition")


object.__abs__(_self_)[¶](https://docs.python.org/3/reference/datamodel.html#object.__abs__ "Link to this definition")


object.__invert__(_self_)[¶](https://docs.python.org/3/reference/datamodel.html#object.__invert__ "Link to this definition")
    
Called to implement the unary arithmetic operations (`-`, `+`, [`abs()`](https://docs.python.org/3/library/functions.html#abs "abs") and `~`). 

object.__complex__(_self_)[¶](https://docs.python.org/3/reference/datamodel.html#object.__complex__ "Link to this definition")


object.__int__(_self_)[¶](https://docs.python.org/3/reference/datamodel.html#object.__int__ "Link to this definition")


object.__float__(_self_)[¶](https://docs.python.org/3/reference/datamodel.html#object.__float__ "Link to this definition")
    
Called to implement the built-in functions [`complex()`](https://docs.python.org/3/library/functions.html#complex "complex"), [`int()`](https://docs.python.org/3/library/functions.html#int "int") and [`float()`](https://docs.python.org/3/library/functions.html#float "float"). Should return a value of the appropriate type. 

object.__index__(_self_)[¶](https://docs.python.org/3/reference/datamodel.html#object.__index__ "Link to this definition")
    
Called to implement [`operator.index()`](https://docs.python.org/3/library/operator.html#operator.index "operator.index"), and whenever Python needs to losslessly convert the numeric object to an integer object (such as in slicing, or in the built-in [`bin()`](https://docs.python.org/3/library/functions.html#bin "bin"), [`hex()`](https://docs.python.org/3/library/functions.html#hex "hex") and [`oct()`](https://docs.python.org/3/library/functions.html#oct "oct") functions). Presence of this method indicates that the numeric object is an integer type. Must return an integer.
If [`__int__()`](https://docs.python.org/3/reference/datamodel.html#object.__int__ "object.__int__"), [`__float__()`](https://docs.python.org/3/reference/datamodel.html#object.__float__ "object.__float__") and [`__complex__()`](https://docs.python.org/3/reference/datamodel.html#object.__complex__ "object.__complex__") are not defined then corresponding built-in functions [`int()`](https://docs.python.org/3/library/functions.html#int "int"), [`float()`](https://docs.python.org/3/library/functions.html#float "float") and [`complex()`](https://docs.python.org/3/library/functions.html#complex "complex") fall back to [`__index__()`](https://docs.python.org/3/reference/datamodel.html#object.__index__ "object.__index__"). 

object.__round__(_self_[, _ndigits_])[¶](https://docs.python.org/3/reference/datamodel.html#object.__round__ "Link to this definition")


object.__trunc__(_self_)[¶](https://docs.python.org/3/reference/datamodel.html#object.__trunc__ "Link to this definition")


object.__floor__(_self_)[¶](https://docs.python.org/3/reference/datamodel.html#object.__floor__ "Link to this definition")