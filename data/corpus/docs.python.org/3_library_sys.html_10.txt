Title: System-Specific Parameters and Functions
URL: https://docs.python.org/3/library/sys.html
Summary: The section discusses two attributes in the sys module: `sys.float_repr_style`, which determines the string representation behavior for floats introduced in Python 3.1, and `sys.getallocatedblocks()`, a function that returns the number of memory blocks allocated by the interpreter for tracking memory usage.
---

```


sys.float_repr_style[¶](https://docs.python.org/3/library/sys.html#sys.float_repr_style "Link to this definition")
    
A string indicating how the [`repr()`](https://docs.python.org/3/library/functions.html#repr "repr") function behaves for floats. If the string has value `'short'` then for a finite float `x`, `repr(x)` aims to produce a short string with the property that `float(repr(x)) == x`. This is the usual behaviour in Python 3.1 and later. Otherwise, `float_repr_style` has value `'legacy'` and `repr(x)` behaves in the same way as it did in versions of Python prior to 3.1.
Added in version 3.1. 

sys.getallocatedblocks()[¶](https://docs.python.org/3/library/sys.html#sys.getallocatedblocks "Link to this definition")
    
Return the number of memory blocks currently allocated by the interpreter, regardless of their size. This function is mainly useful for tracking and debugging memory leaks. Because of the interpreter’s internal caches, the result can vary from call to call; you may have to call [`_clear_internal_caches()`](https://docs.python.org/3/library/sys.html#sys._clear_internal_caches "sys._clear_internal_caches") and [`gc.collect()`](https://docs.python.org/3/library/gc.html#gc.collect "gc.collect") to get more predictable results.
If a Python build or implementation cannot reasonably compute this information, [`getallocatedblocks()`](https://docs.python.org/3/library/sys.html#sys.getallocatedblocks "sys.getallocatedblocks") is allowed to return 0 instead.
Added in version 3.4. 

sys.getunicodeinternedsize()[¶](https://docs.python.org/3/library/sys.html#sys.getunicodeinternedsize "Link to this definition")
    
Return the number of unicode objects that have been interned.
Added in version 3.12. 

sys.getandroidapilevel()[¶](https://docs.python.org/3/library/sys.html#sys.getandroidapilevel "Link to this definition")
    
Return the build-time API level of Android as an integer. This represents the minimum version of Android this build of Python can run on. For runtime version information, see [`platform.android_ver()`](https://docs.python.org/3/library/platform.html#platform.android_ver "platform.android_ver").
[Availability](https://docs.python.org/3/library/intro.html#availability): Android.
Added in version 3.7. 

sys.getdefaultencoding()[¶](https://docs.python.org/3/library/sys.html#sys.getdefaultencoding "Link to this definition")
    
Return `'utf-8'`. This is the name of the default string encoding, used in methods like [`str.encode()`](https://docs.python.org/3/library/stdtypes.html#str.encode "str.encode"). 

sys.getdlopenflags()[¶](https://docs.python.org/3/library/sys.html#sys.getdlopenflags "Link to this definition")
    
Return the current value of the flags that are used for `dlopen()` calls. Symbolic names for the flag values can be found in the [`os`](https://docs.python.org/3/library/os.html#module-os "os: Miscellaneous operating system interfaces.") module (`RTLD__xxx_`constants, e.g.[`os.RTLD_LAZY`](https://docs.python.org/3/library/os.html#os.RTLD_LAZY "os.RTLD_LAZY")).
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix.