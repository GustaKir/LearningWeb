Title: Multiprocessing Basics with Process Management
URL: https://docs.python.org/3/library/multiprocessing.html
Summary: This chunk demonstrates using the multiprocessing library in Python, specifically creating a process, checking its status, and terminating it. It also introduces two exceptions related to multiprocessing: ProcessError, the base class for all multiprocessing exceptions, and BufferTooShort, which is raised when a buffer is too short for data received.
---

```
>>> importmultiprocessing,time,signal
>>> mp_context = multiprocessing.get_context('spawn')
>>> p = mp_context.Process(target=time.sleep, args=(1000,))
>>> print(p, p.is_alive())
<...Process ... initial> False
>>> p.start()
>>> print(p, p.is_alive())
<...Process ... started> True
>>> p.terminate()
>>> time.sleep(0.1)
>>> print(p, p.is_alive())
<...Process ... stopped exitcode=-SIGTERM> False
>>> p.exitcode == -signal.SIGTERM
True

```


_exception_ multiprocessing.ProcessError[¶](https://docs.python.org/3/library/multiprocessing.html#multiprocessing.ProcessError "Link to this definition")
    
The base class of all [`multiprocessing`](https://docs.python.org/3/library/multiprocessing.html#module-multiprocessing "multiprocessing: Process-based parallelism.") exceptions. 

_exception_ multiprocessing.BufferTooShort[¶](https://docs.python.org/3/library/multiprocessing.html#multiprocessing.BufferTooShort "Link to this definition")
    
Exception raised by `Connection.recv_bytes_into()` when the supplied buffer object is too small for the message read.
If `e` is an instance of [`BufferTooShort`](https://docs.python.org/3/library/multiprocessing.html#multiprocessing.BufferTooShort "multiprocessing.BufferTooShort") then `e.args[0]` will give the message as a byte string. 

_exception_ multiprocessing.AuthenticationError[¶](https://docs.python.org/3/library/multiprocessing.html#multiprocessing.AuthenticationError "Link to this definition")
    
Raised when there is an authentication error.