Title: Library Updates in Python 3
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section highlights updates to the Python library, including changes to `typing.get_args()` that now returns an empty tuple for special generic aliases, improved support for generic aliases in typing functions, and optimizations in the `subprocess` module.
---

### Library[¶](https://docs.python.org/3/whatsnew/changelog.html#id379 "Link to this heading")
  * [bpo-40398](https://bugs.python.org/issue?@action=redirect&bpo=40398): [`typing.get_args()`](https://docs.python.org/3/library/typing.html#typing.get_args "typing.get_args") now always returns an empty tuple for special generic aliases.
  * [bpo-40396](https://bugs.python.org/issue?@action=redirect&bpo=40396): Functions [`typing.get_origin()`](https://docs.python.org/3/library/typing.html#typing.get_origin "typing.get_origin"), [`typing.get_args()`](https://docs.python.org/3/library/typing.html#typing.get_args "typing.get_args") and [`typing.get_type_hints()`](https://docs.python.org/3/library/typing.html#typing.get_type_hints "typing.get_type_hints") support now generic aliases like `list[int]`.
  * [bpo-38061](https://bugs.python.org/issue?@action=redirect&bpo=38061): Optimize the [`subprocess`](https://docs.python.org/3/library/subprocess.html#module-subprocess "subprocess: Subprocess management.") module on FreeBSD using `closefrom()`. A single `close(fd)` syscall is cheap, but when `sysconf(_SC_OPEN_MAX)` is high, the loop calling `close(fd)` on each file descriptor can take several milliseconds.
The workaround on FreeBSD to improve performance was to load and mount the fdescfs kernel module, but this is not enabled by default.
Initial patch by Ed Maste (emaste), Conrad Meyer (cem), Kyle Evans (kevans) and Kubilay Kocak (koobs): <https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=242274>
  * [bpo-38061](https://bugs.python.org/issue?@action=redirect&bpo=38061): On FreeBSD, `os.closerange(fd_low, fd_high)` now calls `closefrom(fd_low)` if _fd_high_ is greater than or equal to `sysconf(_SC_OPEN_MAX)`.
Initial patch by Ed Maste (emaste), Conrad Meyer (cem), Kyle Evans (kevans) and Kubilay Kocak (koobs): <https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=242274>
  * [bpo-40360](https://bugs.python.org/issue?@action=redirect&bpo=40360): The `lib2to3` module is pending deprecation due to [**PEP 617**](https://peps.python.org/pep-0617/).
  * [bpo-40138](https://bugs.python.org/issue?@action=redirect&bpo=40138): Fix the Windows implementation of [`os.waitpid()`](https://docs.python.org/3/library/os.html#os.waitpid "os.waitpid") for exit code larger than `INT_MAX >> 8`. The exit status is now interpreted as an unsigned number.
  * [bpo-39942](https://bugs.python.org/issue?@action=redirect&bpo=39942): Set “__main__” as the default module name when “__name__” is missing in [`typing.TypeVar`](https://docs.python.org/3/library/typing.html#typing.TypeVar "typing.TypeVar"). Patch by Weipeng Hong.
  * [bpo-40275](https://bugs.python.org/issue?@action=redirect&bpo=40275): The [`logging`](https://docs.python.org/3/library/logging.html#module-logging "logging: Flexible event logging system for applications.") package is now imported lazily in [`unittest`](https://docs.python.org/3/library/unittest.html#module-unittest "unittest: Unit testing framework for Python.") only when the [`assertLogs()`](https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertLogs "unittest.TestCase.assertLogs") assertion is used.
  * [bpo-40275](https://bugs.python.org/issue?@action=redirect&bpo=40275): The [`asyncio`](https://docs.python.org/3/library/asyncio.html#module-asyncio "asyncio: Asynchronous I/O.") package is now imported lazily in [`unittest`](https://docs.python.org/3/library/unittest.html#module-unittest "unittest: Unit testing framework for Python.") only when the [`IsolatedAsyncioTestCase`](https://docs.python.org/3/library/unittest.html#unittest.IsolatedAsyncioTestCase "unittest.IsolatedAsyncioTestCase") class is used.
  * [bpo-40330](https://bugs.python.org/issue?@action=redirect&bpo=40330): In `ShareableList.__setitem__()`, check the size of a new string item after encoding it to utf-8, not before.
  * [bpo-40148](https://bugs.python.org/issue?@action=redirect&bpo=40148): Added `pathlib.Path.with_stem()` to create a new Path with the stem replaced.
  * [bpo-40325](https://bugs.python.org/issue?@action=redirect&bpo=40325): Deprecated support for set objects in random.sample().
  * [bpo-40257](https://bugs.python.org/issue?@action=redirect&bpo=40257): Improved help for the [`typing`](https://docs.python.org/3/library/typing.html#module-typing "typing: Support for type hints \(see :pep:`484`\).") module. Docstrings are now shown for all special forms and special generic aliases (like `Union` and `List`). Using `help()` with generic alias like `List[int]` will show the help for the correspondent concrete type (`list` in this case).
  * [bpo-40257](https://bugs.python.org/issue?@action=redirect&bpo=40257): [`inspect.getdoc()`](https://docs.python.org/3/library/inspect.html#inspect.getdoc "inspect.getdoc") no longer returns docstring inherited from the type of the object or from parent class if it is a class if it is not defined in the object itself. In [`pydoc`](https://docs.python.org/3/library/pydoc.html#module-pydo