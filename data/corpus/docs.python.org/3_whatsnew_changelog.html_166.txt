Title: Python 3 Changelog - Functions and Macros Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section outlines recent patches by Victor Stinner, including the conversion of `PyObject_DelAttr()` and `PyObject_DelAttrString()` macros to functions, and the addition of `PyMapping_GetOptionalItem()`, `PyObject_GetOptionalAttr()`, and `PyObject_GetOptionalAttrString()` functions.
---

Patch by Victor Stinner.
  * [gh-106572](https://github.com/python/cpython/issues/106572): Convert [`PyObject_DelAttr()`](https://docs.python.org/3/c-api/object.html#c.PyObject_DelAttr "PyObject_DelAttr") and [`PyObject_DelAttrString()`](https://docs.python.org/3/c-api/object.html#c.PyObject_DelAttrString "PyObject_DelAttrString") macros to functions. Patch by Victor Stinner.
  * [gh-106307](https://github.com/python/cpython/issues/106307): Add [`PyMapping_GetOptionalItem()`](https://docs.python.org/3/c-api/mapping.html#c.PyMapping_GetOptionalItem "PyMapping_GetOptionalItem") function.
  * [gh-106521](https://github.com/python/cpython/issues/106521): Add [`PyObject_GetOptionalAttr()`](https://docs.python.org/3/c-api/object.html#c.PyObject_GetOptionalAttr "PyObject_GetOptionalAttr") and [`PyObject_GetOptionalAttrString()`](https://docs.python.org/3/c-api/object.html#c.PyObject_GetOptionalAttrString "PyObject_GetOptionalAttrString") functions.
  * [gh-106320](https://github.com/python/cpython/issues/106320): Remove `_PyInterpreterState_Get()` alias to [`PyInterpreterState_Get()`](https://docs.python.org/3/c-api/init.html#c.PyInterpreterState_Get "PyInterpreterState_Get") which was kept for backward compatibility with Python 3.8. Patch by Victor Stinner.
  * [gh-106316](https://github.com/python/cpython/issues/106316): Remove `cpython/pytime.h` header file: it only contained private functions. Patch by Victor Stinner.
  * [gh-106023](https://github.com/python/cpython/issues/106023): Remove private `_PyObject_FastCall()` function: use `PyObject_Vectorcall()` which is available since Python 3.8 ([**PEP 590**](https://peps.python.org/pep-0590/)). Patch by Victor Stinner.
  * [gh-106168](https://github.com/python/cpython/issues/106168): If Python is built in [debug mode](https://docs.python.org/3/using/configure.html#debug-build) or [`with assertions`](https://docs.python.org/3/using/configure.html#cmdoption-with-assertions), [`PyTuple_SET_ITEM()`](https://docs.python.org/3/c-api/tuple.html#c.PyTuple_SET_ITEM "PyTuple_SET_ITEM") and [`PyList_SET_ITEM()`](https://docs.python.org/3/c-api/list.html#c.PyList_SET_ITEM "PyList_SET_ITEM") now check the index argument with an assertion. If the assertion fails, make sure that the size is set before. Patch by Victor Stinner.
  * [gh-106084](https://github.com/python/cpython/issues/106084): Remove the old aliases to functions calling functions which were kept for backward compatibility with Python 3.8 provisional API:
    * `_PyObject_CallMethodNoArgs()`: use `PyObject_CallMethodNoArgs()`
    * `_PyObject_CallMethodOneArg()`: use `PyObject_CallMethodOneArg()`
    * `_PyObject_CallOneArg()`: use `PyObject_CallOneArg()`
    * `_PyObject_FastCallDict()`: use `PyObject_VectorcallDict()`
    * `_PyObject_Vectorcall()`: use `PyObject_Vectorcall()`
    * `_PyObject_VectorcallMethod()`: use `PyObject_VectorcallMethod()`
    * `_PyVectorcall_Function()`: use `PyVectorcall_Function()`
Just remove the underscore prefix to update your code. Patch by Victor Stinner.
  * [gh-106004](https://github.com/python/cpython/issues/106004): Adds [`PyDict_GetItemRef()`](https://docs.python.org/3/c-api/dict.html#c.PyDict_GetItemRef "PyDict_GetItemRef") and [`PyDict_GetItemStringRef()`](https://docs.python.org/3/c-api/dict.html#c.PyDict_GetItemStringRef "PyDict_GetItemStringRef") functions: similar to [`PyDict_GetItemWithError()`](https://docs.python.org/3/c-api/dict.html#c.PyDict_GetItemWithError "PyDict_GetItemWithError") but returning a [strong reference](https://docs.python.org/3/glossary.html#term-strong-reference) instead of a [borrowed reference](https://docs.python.org/3/glossary.html#term-borrowed-reference). Patch by Victor Stinner.
  * [gh-105927](https://github.com/python/cpython/issues/105927): Deprecate the [`PyWeakref_GetObject()`](https://docs.python.org/3/c-api/weakref.html#c.PyWeakref_GetObject "PyWeakref_GetObject") and [`PyWeakref_GET_OBJECT()`](https://docs.python.org/3/c-api/weakref.html#c.PyWeakref_GET_OBJECT "PyWeakref_GET_OBJECT") functions: use the new [`PyWeakref_GetRef()`](https://docs.python.org/3/c-api/weakref.html#c.PyWeakref_GetRef "PyWeakref_GetRef") function instead. Patch by Victor Stinner.
  * [gh-105927](https://github.com/python/cpython/issues/105927): Add [`PyWeakref_GetRef()`](https://docs.python.org/3/c-api/weakref.html#c.PyWeakref_GetRef "PyWeakref_GetRef") function: similar to [`PyWeakref_GetObject()`](https://docs.python.org/3/c-api/weakref.html#c.PyWeakref_GetObject "PyWeakref_GetObject") but returns a [strong reference](https://docs.python.org/3/glossary.html#term-strong-reference), or `NULL` if the referent is no longer live.