Title: Pending Removal in Python 3.15
URL: https://docs.python.org/3/whatsnew/3.13.html
Summary: This section lists features and functions scheduled for removal in Python 3.15, including the bundled `libmpdecimal`, certain PyImport and weak reference functions, and the `Py_UNICODE` type, recommending alternatives for each.
---

#### Pending Removal in Python 3.15[Â¶](https://docs.python.org/3/whatsnew/3.13.html#id9 "Link to this heading")
  * The bundled copy of `libmpdecimal`.
  * The [`PyImport_ImportModuleNoBlock()`](https://docs.python.org/3/c-api/import.html#c.PyImport_ImportModuleNoBlock "PyImport_ImportModuleNoBlock"): Use [`PyImport_ImportModule()`](https://docs.python.org/3/c-api/import.html#c.PyImport_ImportModule "PyImport_ImportModule") instead.
  * [`PyWeakref_GetObject()`](https://docs.python.org/3/c-api/weakref.html#c.PyWeakref_GetObject "PyWeakref_GetObject") and [`PyWeakref_GET_OBJECT()`](https://docs.python.org/3/c-api/weakref.html#c.PyWeakref_GET_OBJECT "PyWeakref_GET_OBJECT"): Use [`PyWeakref_GetRef()`](https://docs.python.org/3/c-api/weakref.html#c.PyWeakref_GetRef "PyWeakref_GetRef") instead.
  * [`Py_UNICODE`](https://docs.python.org/3/c-api/unicode.html#c.Py_UNICODE "Py_UNICODE") type and the `Py_UNICODE_WIDE` macro: Use `wchar_t` instead.
  * Python initialization functions:
    * [`PySys_ResetWarnOptions()`](https://docs.python.org/3/c-api/sys.html#c.PySys_ResetWarnOptions "PySys_ResetWarnOptions"): Clear [`sys.warnoptions`](https://docs.python.org/3/library/sys.html#sys.warnoptions "sys.warnoptions") and `warnings.filters` instead.
    * [`Py_GetExecPrefix()`](https://docs.python.org/3/c-api/init.html#c.Py_GetExecPrefix "Py_GetExecPrefix"): Get [`sys.base_exec_prefix`](https://docs.python.org/3/library/sys.html#sys.base_exec_prefix "sys.base_exec_prefix") and [`sys.exec_prefix`](https://docs.python.org/3/library/sys.html#sys.exec_prefix "sys.exec_prefix") instead.
    * [`Py_GetPath()`](https://docs.python.org/3/c-api/init.html#c.Py_GetPath "Py_GetPath"): Get [`sys.path`](https://docs.python.org/3/library/sys.html#sys.path "sys.path") instead.
    * [`Py_GetPrefix()`](https://docs.python.org/3/c-api/init.html#c.Py_GetPrefix "Py_GetPrefix"): Get [`sys.base_prefix`](https://docs.python.org/3/library/sys.html#sys.base_prefix "sys.base_prefix") and [`sys.prefix`](https://docs.python.org/3/library/sys.html#sys.prefix "sys.prefix") instead.
    * [`Py_GetProgramFullPath()`](https://docs.python.org/3/c-api/init.html#c.Py_GetProgramFullPath "Py_GetProgramFullPath"): Get [`sys.executable`](https://docs.python.org/3/library/sys.html#sys.executable "sys.executable") instead.
    * [`Py_GetProgramName()`](https://docs.python.org/3/c-api/init.html#c.Py_GetProgramName "Py_GetProgramName"): Get [`sys.executable`](https://docs.python.org/3/library/sys.html#sys.executable "sys.executable") instead.
    * [`Py_GetPythonHome()`](https://docs.python.org/3/c-api/init.html#c.Py_GetPythonHome "Py_GetPythonHome"): Get [`PyConfig.home`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.home "PyConfig.home") or the [`PYTHONHOME`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONHOME) environment variable instead.