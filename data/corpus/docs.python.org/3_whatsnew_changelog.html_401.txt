Title: Python Change Log Highlights
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: Key bug fixes and enhancements include resolving g-style string formatting issues, correcting filename attributes in SyntaxErrors for fstrings, supporting the '-d' debug flag in the PEG parser, and improvements in type instance creation with PyType_FromSpecWithBases.
---

Previously, they could have been an instance of a subclass of `int`.
  * [bpo-40780](https://bugs.python.org/issue?@action=redirect&bpo=40780): Fix a corner case where g-style string formatting of a float failed to remove trailing zeros.
  * [bpo-38964](https://bugs.python.org/issue?@action=redirect&bpo=38964): When there’s a [`SyntaxError`](https://docs.python.org/3/library/exceptions.html#SyntaxError "SyntaxError") in the expression part of an fstring, the filename attribute of the [`SyntaxError`](https://docs.python.org/3/library/exceptions.html#SyntaxError "SyntaxError") gets correctly set to the name of the file the fstring resides in.
  * [bpo-40750](https://bugs.python.org/issue?@action=redirect&bpo=40750): Support the “-d” debug flag in the new PEG parser. Patch by Pablo Galindo
  * [bpo-40217](https://bugs.python.org/issue?@action=redirect&bpo=40217): Instances of types created with [`PyType_FromSpecWithBases()`](https://docs.python.org/3/c-api/type.html#c.PyType_FromSpecWithBases "PyType_FromSpecWithBases") will no longer automatically visit their class object when traversing references in the garbage collector. The user is expected to manually visit the object’s class. Patch by Pablo Galindo.
  * [bpo-39573](https://bugs.python.org/issue?@action=redirect&bpo=39573): [`Py_TYPE()`](https://docs.python.org/3/c-api/structures.html#c.Py_TYPE "Py_TYPE") is changed to the inline static function. Patch by Donghee Na.
  * [bpo-40696](https://bugs.python.org/issue?@action=redirect&bpo=40696): Fix a hang that can arise after [`generator.throw()`](https://docs.python.org/3/reference/expressions.html#generator.throw "generator.throw") due to a cycle in the exception context chain.
  * [bpo-40521](https://bugs.python.org/issue?@action=redirect&bpo=40521): Each interpreter now its has own free lists, singletons and caches:
    * Free lists: float, tuple, list, dict, frame, context, asynchronous generator, MemoryError.
    * Singletons: empty tuple, empty bytes string, empty Unicode string, single byte character, single Unicode (latin1) character.
    * Slice cache.
They are no longer shared by all interpreters.
  * [bpo-40679](https://bugs.python.org/issue?@action=redirect&bpo=40679): Certain [`TypeError`](https://docs.python.org/3/library/exceptions.html#TypeError "TypeError") messages about missing or extra arguments now include the function’s [qualified name](https://docs.python.org/3/glossary.html#term-qualified-name). Patch by Dennis Sweeney.
  * [bpo-29590](https://bugs.python.org/issue?@action=redirect&bpo=29590): Make the stack trace correct after calling [`generator.throw()`](https://docs.python.org/3/reference/expressions.html#generator.throw "generator.throw") on a generator that has yielded from a `yield from`.
  * [bpo-4022](https://bugs.python.org/issue?@action=redirect&bpo=4022): Improve performance of generators by not raising internal StopIteration.
  * [bpo-1635741](https://bugs.python.org/issue?@action=redirect&bpo=1635741): Port [`mmap`](https://docs.python.org/3/library/mmap.html#module-mmap "mmap: Interface to memory-mapped files for Unix and Windows.") to multiphase initialization.
  * [bpo-1635741](https://bugs.python.org/issue?@action=redirect&bpo=1635741): Port `_lzma` to multiphase initialization.
  * [bpo-37999](https://bugs.python.org/issue?@action=redirect&bpo=37999): Builtin and extension functions that take integer arguments no longer accept [`Decimal`](https://docs.python.org/3/library/decimal.html#decimal.Decimal "decimal.Decimal")s, [`Fraction`](https://docs.python.org/3/library/fractions.html#fractions.Fraction "fractions.Fraction")s and other objects that can be converted to integers only with a loss (e.g. that have the [`__int__()`](https://docs.python.org/3/reference/datamodel.html#object.__int__ "object.__int__") method but do not have the [`__index__()`](https://docs.python.org/3/reference/datamodel.html#object.__index__ "object.__index__") method).
  * [bpo-29882](https://bugs.python.org/issue?@action=redirect&bpo=29882): Add [`int.bit_count()`](https://docs.python.org/3/library/stdtypes.html#int.bit_count "int.bit_count"), counting the number of ones in the binary representation of an integer.