Title: Python 3 Updates and Bug Fixes
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This document chunk lists several changes and bug fixes in Python 3, including ignoring the HTTP_PROXY variable in CGI mode, handling large buffers in the zlib module, releasing the GIL in nt._isdir, fixing persistent ID unpickling, and avoiding reference cycles in email processing.
---

Ignore the HTTP_PROXY variable when REQUEST_METHOD environment is set, which indicates that the script is in CGI mode.
  * [bpo-27656](https://bugs.python.org/issue?@action=redirect&bpo=27656): Do not assume sched.h defines any SCHED_* constants.
  * [bpo-27130](https://bugs.python.org/issue?@action=redirect&bpo=27130): In the “zlib” module, fix handling of large buffers (typically 4 GiB) when compressing and decompressing. Previously, inputs were limited to 4 GiB, and compression and decompression operations did not properly handle results of 4 GiB.
  * [bpo-27533](https://bugs.python.org/issue?@action=redirect&bpo=27533): Release GIL in nt._isdir
  * [bpo-17711](https://bugs.python.org/issue?@action=redirect&bpo=17711): Fixed unpickling by the persistent ID with protocol 0. Original patch by Alexandre Vassalotti.
  * [bpo-27522](https://bugs.python.org/issue?@action=redirect&bpo=27522): Avoid an unintentional reference cycle in email.feedparser.
  * [bpo-26844](https://bugs.python.org/issue?@action=redirect&bpo=26844): Fix error message for imp.find_module() to refer to ‘path’ instead of ‘name’. Patch by Lev Maximov.
  * [bpo-23804](https://bugs.python.org/issue?@action=redirect&bpo=23804): Fix SSL zero-length recv() calls to not block and not raise an error about unclean EOF.
  * [bpo-27466](https://bugs.python.org/issue?@action=redirect&bpo=27466): Change time format returned by http.cookie.time2netscape, confirming the netscape cookie format and making it consistent with documentation.
  * [bpo-26664](https://bugs.python.org/issue?@action=redirect&bpo=26664): Fix activate.fish by removing mis-use of `$`.
  * [bpo-22115](https://bugs.python.org/issue?@action=redirect&bpo=22115): Fixed tracing Tkinter variables: trace_vdelete() with wrong mode no longer break tracing, trace_vinfo() now always returns a list of pairs of strings, tracing in the “u” mode now works.
  * Fix a scoping issue in importlib.util.LazyLoader which triggered an UnboundLocalError when lazy-loading a module that was already put into sys.modules.
  * [bpo-27079](https://bugs.python.org/issue?@action=redirect&bpo=27079): Fixed curses.ascii functions isblank(), iscntrl() and ispunct().
  * [bpo-26754](https://bugs.python.org/issue?@action=redirect&bpo=26754): Some functions (compile() etc) accepted a filename argument encoded as an iterable of integers. Now only strings and byte-like objects are accepted.
  * [bpo-27048](https://bugs.python.org/issue?@action=redirect&bpo=27048): Prevents distutils failing on Windows when environment variables contain non-ASCII characters
  * [bpo-27330](https://bugs.python.org/issue?@action=redirect&bpo=27330): Fixed possible leaks in the ctypes module.
  * [bpo-27238](https://bugs.python.org/issue?@action=redirect&bpo=27238): Got rid of bare excepts in the turtle module. Original patch by Jelle Zijlstra.
  * [bpo-27122](https://bugs.python.org/issue?@action=redirect&bpo=27122): When an exception is raised within the context being managed by a contextlib.ExitStack() and one of the exit stack generators catches and raises it in a chain, do not re-raise the original exception when exiting, let the new chained one through. This avoids the [**PEP 479**](https://peps.python.org/pep-0479/) bug described in issue25782.
  * [bpo-26386](https://bugs.python.org/issue?@action=redirect&bpo=26386): Fixed ttk.TreeView selection operations with item id’s containing spaces.
  * [bpo-16182](https://bugs.python.org/issue?@action=redirect&bpo=16182): Fix various functions in the “readline” module to use the locale encoding, and fix get_begidx() and get_endidx() to return code point indexes.
  * [bpo-27392](https://bugs.python.org/issue?@action=redirect&bpo=27392): Add loop.connect_accepted_socket(). Patch by Jim Fulton.
  * [bpo-27930](https://bugs.python.org/issue?@action=redirect&bpo=27930): Improved behaviour of logging.handlers.QueueListener. Thanks to Paulo Andrade and Petr Viktorin for the analysis and patch.
  * [bpo-21201](https://bugs.python.org/issue?@action=redirect&bpo=21201): Improves readability of multiprocessing error message. Thanks to Wojciech Walczak for patch.
  * [bpo-27456](https://bugs.python.org/issue?@action=redirect&bpo=27456): asyncio: Set TCP_NODELAY by default.
  * [bpo-27906](https://bugs.python.org/issue?@action=redirect&bpo=27906): Fix socket accept exhaustion during high TCP traffic. Patch by Kevin Conway.
  * [bpo-28174](https://bugs.python.org/issue?@action=redirect&bpo=28174): Handle when SO_REUSEPORT isn’t properly supported. Patch by Seth Michael Larson.
  * [bpo-26654](https://bugs.python.org/issue?@action=redirect&bpo=26654): Inspect functools.partial in asyncio.Handle.__repr__. Patch by iceboy.
  * [bpo-26909](https://bugs.python.org/issue?@action=redirect&bpo=26909): Fix slow pipes IO in asyncio.