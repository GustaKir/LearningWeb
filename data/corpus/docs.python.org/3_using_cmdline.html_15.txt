Title: Environment Variables for Python Performance Profiling
URL: https://docs.python.org/3/using/cmdline.html
Summary: This document section describes two environment variables: `PYTHON_PERF_JIT_SUPPORT`, which enables or disables support for the Linux `perf` profiler based on its value, and `PYTHON_CPU_COUNT`, which overrides the return values of `os.cpu_count()` and `os.process_cpu_count()` when set to a positive integer. Both variables affect Python's performance profiling capabilities.
---

PYTHON_PERF_JIT_SUPPORT[¶](https://docs.python.org/3/using/cmdline.html#envvar-PYTHON_PERF_JIT_SUPPORT "Link to this definition")
    
If this variable is set to a nonzero value, it enables support for the Linux `perf` profiler so Python calls can be detected by it using DWARF information.
If set to `0`, disable Linux `perf` profiler support.
See also the [`-X perf_jit`](https://docs.python.org/3/using/cmdline.html#cmdoption-X) command-line option and [Python support for the Linux perf profiler](https://docs.python.org/3/howto/perf_profiling.html#perf-profiling).
Added in version 3.13. 

PYTHON_CPU_COUNT[¶](https://docs.python.org/3/using/cmdline.html#envvar-PYTHON_CPU_COUNT "Link to this definition")
    
If this variable is set to a positive integer, it overrides the return values of [`os.cpu_count()`](https://docs.python.org/3/library/os.html#os.cpu_count "os.cpu_count") and [`os.process_cpu_count()`](https://docs.python.org/3/library/os.html#os.process_cpu_count "os.process_cpu_count").
See also the [`-X cpu_count`](https://docs.python.org/3/using/cmdline.html#cmdoption-X) command-line option.
Added in version 3.13. 

PYTHON_FROZEN_MODULES[¶](https://docs.python.org/3/using/cmdline.html#envvar-PYTHON_FROZEN_MODULES "Link to this definition")
    
If this variable is set to `on` or `off`, it determines whether or not frozen modules are ignored by the import machinery. A value of `on` means they get imported and `off` means they are ignored. The default is `on` for non-debug builds (the normal case) and `off` for debug builds. Note that the `importlib_bootstrap` and `importlib_bootstrap_external` frozen modules are always used, even if this flag is set to `off`.
See also the [`-X frozen_modules`](https://docs.python.org/3/using/cmdline.html#cmdoption-X) command-line option.
Added in version 3.13. 

PYTHON_COLORS[¶](https://docs.python.org/3/using/cmdline.html#envvar-PYTHON_COLORS "Link to this definition")
    
If this variable is set to `1`, the interpreter will colorize various kinds of output. Setting it to `0` deactivates this behavior. See also [Controlling color](https://docs.python.org/3/using/cmdline.html#using-on-controlling-color).
Added in version 3.13. 

PYTHON_BASIC_REPL[¶](https://docs.python.org/3/using/cmdline.html#envvar-PYTHON_BASIC_REPL "Link to this definition")
    
If this variable is set to any value, the interpreter will not attempt to load the Python-based [REPL](https://docs.python.org/3/glossary.html#term-REPL) that requires [`curses`](https://docs.python.org/3/library/curses.html#module-curses "curses: An interface to the curses library, providing portable terminal handling. \(Unix\)") and [`readline`](https://docs.python.org/3/library/readline.html#module-readline "readline: GNU readline support for Python. \(Unix\)"), and will instead use the traditional parser-based [REPL](https://docs.python.org/3/glossary.html#term-REPL).
Added in version 3.13. 

PYTHON_HISTORY[¶](https://docs.python.org/3/using/cmdline.html#envvar-PYTHON_HISTORY "Link to this definition")
    
This environment variable can be used to set the location of a `.python_history` file (by default, it is `.python_history` in the user’s home directory).
Added in version 3.13. 

PYTHON_GIL[¶](https://docs.python.org/3/using/cmdline.html#envvar-PYTHON_GIL "Link to this definition")
    
If this variable is set to `1`, the global interpreter lock (GIL) will be forced on. Setting it to `0` forces the GIL off (needs Python configured with the [`--disable-gil`](https://docs.python.org/3/using/configure.html#cmdoption-disable-gil) build option).
See also the [`-X gil`](https://docs.python.org/3/using/cmdline.html#cmdoption-X) command-line option, which takes precedence over this variable, and [Free-threaded CPython](https://docs.python.org/3/whatsnew/3.13.html#whatsnew313-free-threaded-cpython).
Added in version 3.13.
### 1.2.1. Debug-mode variables[¶](https://docs.python.org/3/using/cmdline.html#debug-mode-variables "Link to this heading") 

PYTHONDUMPREFS[¶](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONDUMPREFS "Link to this definition")
    
If set, Python will dump objects and reference counts still alive after shutting down the interpreter.
Needs Python configured with the [`--with-trace-refs`](https://docs.python.org/3/using/configure.html#cmdoption-with-trace-refs) build option. 

PYTHONDUMPREFSFILE[¶](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONDUMPREFSFILE "Link to this definition")
    
If set, Python will dump objects and reference counts still alive after shutting down the interpreter into a file under the path given as the value to this environment variable.
Needs Python configured with the [`--with-trace-refs`](https://docs.python.org/3/using/configure.html#cmdoption-with-trace-refs) build option.
Added in version 3.11.