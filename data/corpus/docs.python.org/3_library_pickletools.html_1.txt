Title: Command Line Options for Pickletools
URL: https://docs.python.org/3/library/pickletools.html
Summary: This section outlines the command line options for the pickletools module, including options for annotating opcodes, specifying output files, controlling indentation levels, preserving memo during multiple disassemblies, and setting a preamble.
---

```

### Command line options[¶](https://docs.python.org/3/library/pickletools.html#command-line-options "Link to this heading") 

-a, --annotate[¶](https://docs.python.org/3/library/pickletools.html#cmdoption-pickletools-a "Link to this definition")
    
Annotate each line with a short opcode description. 

-o, --output=<file>[¶](https://docs.python.org/3/library/pickletools.html#cmdoption-pickletools-o "Link to this definition")
    
Name of a file where the output should be written. 

-l, --indentlevel=<num>[¶](https://docs.python.org/3/library/pickletools.html#cmdoption-pickletools-l "Link to this definition")
    
The number of blanks by which to indent a new MARK level. 

-m, --memo[¶](https://docs.python.org/3/library/pickletools.html#cmdoption-pickletools-m "Link to this definition")
    
When multiple objects are disassembled, preserve memo between disassemblies. 

-p, --preamble=<preamble>[¶](https://docs.python.org/3/library/pickletools.html#cmdoption-pickletools-p "Link to this definition")
    
When more than one pickle file are specified, print given preamble before each disassembly.
## Programmatic Interface[¶](https://docs.python.org/3/library/pickletools.html#programmatic-interface "Link to this heading") 

pickletools.dis(_pickle_ , _out =None_, _memo =None_, _indentlevel =4_, _annotate =0_)[¶](https://docs.python.org/3/library/pickletools.html#pickletools.dis "Link to this definition")
    
Outputs a symbolic disassembly of the pickle to the file-like object _out_ , defaulting to `sys.stdout`. _pickle_ can be a string or a file-like object. _memo_ can be a Python dictionary that will be used as the pickle’s memo; it can be used to perform disassemblies across multiple pickles created by the same pickler. Successive levels, indicated by `MARK` opcodes in the stream, are indented by _indentlevel_ spaces. If a nonzero value is given to _annotate_ , each opcode in the output is annotated with a short description. The value of _annotate_ is used as a hint for the column where annotation should start.
Changed in version 3.2: Added the _annotate_ parameter. 

pickletools.genops(_pickle_)[¶](https://docs.python.org/3/library/pickletools.html#pickletools.genops "Link to this definition")
    
Provides an [iterator](https://docs.python.org/3/glossary.html#term-iterator) over all of the opcodes in a pickle, returning a sequence of `(opcode, arg, pos)` triples. _opcode_ is an instance of an `OpcodeInfo` class; _arg_ is the decoded value, as a Python object, of the opcode’s argument; _pos_ is the position at which this opcode is located. _pickle_ can be a string or a file-like object. 

pickletools.optimize(_picklestring_)[¶](https://docs.python.org/3/library/pickletools.html#pickletools.optimize "Link to this definition")
    
Returns a new equivalent pickle string after eliminating unused `PUT` opcodes. The optimized pickle is shorter, takes less transmission time, requires less storage space, and unpickles more efficiently.
### [Table of Contents](https://docs.python.org/3/contents.html)
  * [`pickletools` — Tools for pickle developers](https://docs.python.org/3/library/pickletools.html)
    * [Command line usage](https://docs.python.org/3/library/pickletools.html#command-line-usage)
      * [Command line options](https://docs.python.org/3/library/pickletools.html#command-line-options)
    * [Programmatic Interface](https://docs.python.org/3/library/pickletools.html#programmatic-interface)


#### Previous topic
[`dis` — Disassembler for Python bytecode](https://docs.python.org/3/library/dis.html "previous chapter")
#### Next topic
[MS Windows Specific Services](https://docs.python.org/3/library/windows.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/pickletools.rst)


«
### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/library/windows.html "MS Windows Specific Services") |
  * [previous](https://docs.python.org/3/library/dis.html "dis — Disassembler for Python bytecode") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [The Python Standard Library](https://docs.python.org/3/library/index.html) »
  * [Python Language Services](https://docs.python.org/3/library/language.html) »
  * [`pickletools` — Tools for pickle developers](https://docs.python.org/3/library/pickletools.html)
  * | 
  * Theme  Auto Light Dark |