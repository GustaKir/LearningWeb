Title: SQLite Connection Attributes: row_factory and text_factory
URL: https://docs.python.org/3/library/sqlite3.html
Summary: The 'row_factory' attribute of a SQLite connection determines how rows returned from a cursor are formatted, defaulting to tuples. Changing this attribute only affects new cursors. The 'text_factory' attribute is a callable used to convert bytes to strings, allowing customized text handling.
---

row_factory[¶](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.row_factory "Link to this definition")
    
The initial [`row_factory`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Cursor.row_factory "sqlite3.Cursor.row_factory") for [`Cursor`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Cursor "sqlite3.Cursor") objects created from this connection. Assigning to this attribute does not affect the `row_factory` of existing cursors belonging to this connection, only new ones. Is `None` by default, meaning each row is returned as a [`tuple`](https://docs.python.org/3/library/stdtypes.html#tuple "tuple").
See [How to create and use row factories](https://docs.python.org/3/library/sqlite3.html#sqlite3-howto-row-factory) for more details. 

text_factory[¶](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.text_factory "Link to this definition")
    
A [callable](https://docs.python.org/3/glossary.html#term-callable) that accepts a [`bytes`](https://docs.python.org/3/library/stdtypes.html#bytes "bytes") parameter and returns a text representation of it. The callable is invoked for SQLite values with the `TEXT` data type. By default, this attribute is set to [`str`](https://docs.python.org/3/library/stdtypes.html#str "str").
See [How to handle non-UTF-8 text encodings](https://docs.python.org/3/library/sqlite3.html#sqlite3-howto-encoding) for more details. 

total_changes[¶](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.total_changes "Link to this definition")
    
Return the total number of database rows that have been modified, inserted, or deleted since the database connection was opened.
### Cursor objects[¶](https://docs.python.org/3/library/sqlite3.html#cursor-objects "Link to this heading")
> A `Cursor` object represents a [database cursor](https://en.wikipedia.org/wiki/Cursor_\(databases\)) which is used to execute SQL statements, and manage the context of a fetch operation. Cursors are created using [`Connection.cursor()`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.cursor "sqlite3.Connection.cursor"), or by using any of the [connection shortcut methods](https://docs.python.org/3/library/sqlite3.html#sqlite3-connection-shortcuts).
> Cursor objects are [iterators](https://docs.python.org/3/glossary.html#term-iterator), meaning that if you [`execute()`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Cursor.execute "sqlite3.Cursor.execute") a `SELECT` query, you can simply iterate over the cursor to fetch the resulting rows:
> ```
for row in cur.execute("SELECT t FROM data"):
  print(row)