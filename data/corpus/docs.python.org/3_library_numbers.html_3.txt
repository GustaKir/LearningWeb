Title: Operator Fallbacks in Python
URL: https://docs.python.org/3/library/numbers.html
Summary: This section details the implementation of operator fallback functions in Python, defining how to handle different types for binary operations. It includes the 'forward' function for operations where the first argument is fixed, and the 'reverse' function for operations when the second argument is fixed, detailing the type checks for integers, floats, and complex numbers.
---

```
def_operator_fallbacks(monomorphic_operator, fallback_operator):
  defforward(a, b):
    if isinstance(b, (int, Fraction)):
      return monomorphic_operator(a, b)
    elif isinstance(b, float):
      return fallback_operator(float(a), b)
    elif isinstance(b, complex):
      return fallback_operator(complex(a), b)
    else:
      return NotImplemented
  forward.__name__ = '__' + fallback_operator.__name__ + '__'
  forward.__doc__ = monomorphic_operator.__doc__
  defreverse(b, a):
    if isinstance(a, Rational):
      # Includes ints.
      return monomorphic_operator(a, b)
    elif isinstance(a, Real):
      return fallback_operator(float(a), float(b))
    elif isinstance(a, Complex):
      return fallback_operator(complex(a), complex(b))
    else:
      return NotImplemented
  reverse.__name__ = '__r' + fallback_operator.__name__ + '__'
  reverse.__doc__ = monomorphic_operator.__doc__
  return forward, reverse
def_add(a, b):
"""a + b"""
  return Fraction(a.numerator * b.denominator +
          b.numerator * a.denominator,
          a.denominator * b.denominator)
__add__, __radd__ = _operator_fallbacks(_add, operator.add)
# ...

```

### [Table of Contents](https://docs.python.org/3/contents.html)
  * [`numbers` — Numeric abstract base classes](https://docs.python.org/3/library/numbers.html)
    * [The numeric tower](https://docs.python.org/3/library/numbers.html#the-numeric-tower)
    * [Notes for type implementers](https://docs.python.org/3/library/numbers.html#notes-for-type-implementers)
      * [Adding More Numeric ABCs](https://docs.python.org/3/library/numbers.html#adding-more-numeric-abcs)
      * [Implementing the arithmetic operations](https://docs.python.org/3/library/numbers.html#implementing-the-arithmetic-operations)


#### Previous topic
[Numeric and Mathematical Modules](https://docs.python.org/3/library/numeric.html "previous chapter")
#### Next topic
[`math` — Mathematical functions](https://docs.python.org/3/library/math.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/numbers.rst)


«
### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/library/math.html "math — Mathematical functions") |
  * [previous](https://docs.python.org/3/library/numeric.html "Numeric and Mathematical Modules") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [The Python Standard Library](https://docs.python.org/3/library/index.html) »
  * [Numeric and Mathematical Modules](https://docs.python.org/3/library/numeric.html) »
  * [`numbers` — Numeric abstract base classes](https://docs.python.org/3/library/numbers.html)
  * | 
  * Theme  Auto Light Dark |


© [ Copyright ](https://docs.python.org/3/copyright.html) 2001-2025, Python Software Foundation. This page is licensed under the Python Software Foundation License Version 2. Examples, recipes, and other code in the documentation are additionally licensed under the Zero Clause BSD License. See [History and License](https://docs.python.org/license.html) for more information. The Python Software Foundation is a non-profit corporation. [Please donate.](https://www.python.org/psf/donations/) Last updated on Apr 27, 2025 (05:38 UTC). [Found a bug](https://docs.python.org/bugs.html)? Created using [Sphinx](https://www.sphinx-doc.org/) 8.2.3.