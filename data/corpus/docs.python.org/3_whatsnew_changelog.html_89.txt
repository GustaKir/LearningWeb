Title: Python 3 Changelog Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: The recent updates to Python include a fix for silent truncation of names in multiprocessing, the addition of kernel density estimation to the statistics module, adjustments in the time module for WASI compatibility, and improvements to the log file deletion algorithm.
---

[gh-115886](https://github.com/python/cpython/issues/115886): Fix silent truncation of the name with an embedded null character in [`multiprocessing.shared_memory.SharedMemory`](https://docs.python.org/3/library/multiprocessing.shared_memory.html#multiprocessing.shared_memory.SharedMemory "multiprocessing.shared_memory.SharedMemory").
  * [gh-115532](https://github.com/python/cpython/issues/115532): Add kernel density estimation to the statistics module.
  * [gh-115714](https://github.com/python/cpython/issues/115714): On WASI, the [`time`](https://docs.python.org/3/library/time.html#module-time "time: Time access and conversions.") module no longer get process time using `times()` or `CLOCK_PROCESS_CPUTIME_ID`, system API is that is unreliable and is likely to be removed from WASI. The affected clock functions fall back to calling `clock()`.
  * [gh-115809](https://github.com/python/cpython/issues/115809): Improve algorithm for computing which rolled-over log files to delete in `logging.TimedRotatingFileHandler`. It is now reliable for handlers without `namer` and with arbitrary deterministic `namer` that leaves the datetime part in the file name unmodified.
  * [gh-74668](https://github.com/python/cpython/issues/74668): [`urllib.parse`](https://docs.python.org/3/library/urllib.parse.html#module-urllib.parse "urllib.parse: Parse URLs into or assemble them from components.") functions [`parse_qs()`](https://docs.python.org/3/library/urllib.parse.html#urllib.parse.parse_qs "urllib.parse.parse_qs") and [`parse_qsl()`](https://docs.python.org/3/library/urllib.parse.html#urllib.parse.parse_qsl "urllib.parse.parse_qsl") now support bytes arguments containing raw and percent-encoded non-ASCII data.
  * [gh-67044](https://github.com/python/cpython/issues/67044): [`csv.writer()`](https://docs.python.org/3/library/csv.html#csv.writer "csv.writer") now always quotes or escapes `'\r'` and `'\n'`, regardless of _lineterminator_ value.
  * [gh-115712](https://github.com/python/cpython/issues/115712): Restore support of space delimiter with `skipinitialspace=True` in [`csv`](https://docs.python.org/3/library/csv.html#module-csv "csv: Write and read tabular data to and from delimited files."). [`csv.writer()`](https://docs.python.org/3/library/csv.html#csv.writer "csv.writer") now quotes empty fields if delimiter is a space and skipinitialspace is true and raises exception if quoting is not possible.
  * [gh-112364](https://github.com/python/cpython/issues/112364): Fixed [`ast.unparse()`](https://docs.python.org/3/library/ast.html#ast.unparse "ast.unparse") to handle format_spec with `"`, `'` or `\\`. Patched by Frank Hoffmann.
  * [gh-112997](https://github.com/python/cpython/issues/112997): Stop logging potentially sensitive callback arguments in [`asyncio`](https://docs.python.org/3/library/asyncio.html#module-asyncio "asyncio: Asynchronous I/O.") unless debug mode is active.
  * [gh-114914](https://github.com/python/cpython/issues/114914): Fix an issue where an abandoned `StreamWriter` would not be garbage collected.
  * [gh-111358](https://github.com/python/cpython/issues/111358): Fix a bug in `asyncio.BaseEventLoop.shutdown_default_executor()` to ensure the timeout passed to the coroutine behaves as expected.
  * [gh-115618](https://github.com/python/cpython/issues/115618): Fix improper decreasing the reference count for `None` argument in [`property`](https://docs.python.org/3/library/functions.html#property "property") methods [`getter()`](https://docs.python.org/3/library/functions.html#property.getter "property.getter"), [`setter()`](https://docs.python.org/3/library/functions.html#property.setter "property.setter") and [`deleter()`](https://docs.python.org/3/library/functions.html#property.deleter "property.deleter").
  * [gh-112720](https://github.com/python/cpython/issues/112720): Refactor `dis.ArgResolver` to make it possible to subclass and change the way jump args are interpreted.
  * [gh-112006](https://github.com/python/cpython/issues/112006): Fix [`inspect.unwrap()`](https://docs.python.org/3/library/inspect.html#inspect.unwrap "inspect.unwrap") for types with the `__wrapper__` data descriptor.