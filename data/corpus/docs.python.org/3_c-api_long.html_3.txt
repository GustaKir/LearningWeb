Title: PyLong_AsLongAndOverflow Function
URL: https://docs.python.org/3/c-api/long.html
Summary: The `PyLong_AsLongAndOverflow` function converts a Python object to a C long. If the object is not a `PyLongObject`, it attempts to convert it using the `__index__()` method. The function checks for overflow, setting the overflow variable accordingly, and returns -1 on error.
---

longPyLong_AsLongAndOverflow([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*obj, int*overflow)[¶](https://docs.python.org/3/c-api/long.html#c.PyLong_AsLongAndOverflow "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Return a C long representation of _obj_. If _obj_ is not an instance of [`PyLongObject`](https://docs.python.org/3/c-api/long.html#c.PyLongObject "PyLongObject"), first call its [`__index__()`](https://docs.python.org/3/reference/datamodel.html#object.__index__ "object.__index__") method (if present) to convert it to a [`PyLongObject`](https://docs.python.org/3/c-api/long.html#c.PyLongObject "PyLongObject").
If the value of _obj_ is greater than `LONG_MAX` or less than `LONG_MIN`, set _*overflow_ to `1` or `-1`, respectively, and return `-1`; otherwise, set _*overflow_ to `0`. If any other exception occurs set _*overflow_ to `0` and return `-1` as usual.
Returns `-1` on error. Use [`PyErr_Occurred()`](https://docs.python.org/3/c-api/exceptions.html#c.PyErr_Occurred "PyErr_Occurred") to disambiguate.
Changed in version 3.8: Use [`__index__()`](https://docs.python.org/3/reference/datamodel.html#object.__index__ "object.__index__") if available.
Changed in version 3.10: This function will no longer use [`__int__()`](https://docs.python.org/3/reference/datamodel.html#object.__int__ "object.__int__"). 

longlongPyLong_AsLongLong([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*obj)[¶](https://docs.python.org/3/c-api/long.html#c.PyLong_AsLongLong "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Return a C longlong representation of _obj_. If _obj_ is not an instance of [`PyLongObject`](https://docs.python.org/3/c-api/long.html#c.PyLongObject "PyLongObject"), first call its [`__index__()`](https://docs.python.org/3/reference/datamodel.html#object.__index__ "object.__index__") method (if present) to convert it to a [`PyLongObject`](https://docs.python.org/3/c-api/long.html#c.PyLongObject "PyLongObject").
Raise [`OverflowError`](https://docs.python.org/3/library/exceptions.html#OverflowError "OverflowError") if the value of _obj_ is out of range for a longlong.
Returns `-1` on error. Use [`PyErr_Occurred()`](https://docs.python.org/3/c-api/exceptions.html#c.PyErr_Occurred "PyErr_Occurred") to disambiguate.
Changed in version 3.8: Use [`__index__()`](https://docs.python.org/3/reference/datamodel.html#object.__index__ "object.__index__") if available.
Changed in version 3.10: This function will no longer use [`__int__()`](https://docs.python.org/3/reference/datamodel.html#object.__int__ "object.__int__"). 

longlongPyLong_AsLongLongAndOverflow([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*obj, int*overflow)[¶](https://docs.python.org/3/c-api/long.html#c.PyLong_AsLongLongAndOverflow "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Return a C longlong representation of _obj_. If _obj_ is not an instance of [`PyLongObject`](https://docs.python.org/3/c-api/long.html#c.PyLongObject "PyLongObject"), first call its [`__index__()`](https://docs.python.org/3/reference/datamodel.html#object.__index__ "object.__index__") method (if present) to convert it to a [`PyLongObject`](https://docs.python.org/3/c-api/long.html#c.PyLongObject "PyLongObject").
If the value of _obj_ is greater than `LLONG_MAX` or less than `LLONG_MIN`, set _*overflow_ to `1` or `-1`, respectively, and return `-1`; otherwise, set _*overflow_ to `0`. If any other exception occurs set _*overflow_ to `0` and return `-1` as usual.
Returns `-1` on error. Use [`PyErr_Occurred()`](https://docs.python.org/3/c-api/exceptions.html#c.PyErr_Occurred "PyErr_Occurred") to disambiguate.
Added in version 3.2.
Changed in version 3.8: Use [`__index__()`](https://docs.python.org/3/reference/datamodel.html#object.__index__ "object.__index__") if available.
Changed in version 3.10: This function will no longer use [`__int__()`](https://docs.python.org/3/reference/datamodel.html#object.__int__ "object.__int__").