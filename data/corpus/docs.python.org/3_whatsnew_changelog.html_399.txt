Title: Python 3 Change Log - Update on Async/Await and Bug Fixes
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section outlines recent changes and bug fixes in Python, including the tagging of async/await in list comprehensions, multiphase initialization for faulthandler and sha256, protection against NULL pointer dereferencing in bytearray operations, and enhancements for handling non-ASCII file names in non-UTF-8 locales.
---

Now only list comprehension making use of async/await will tagged as so.
  * [bpo-1635741](https://bugs.python.org/issue?@action=redirect&bpo=1635741): Port [`faulthandler`](https://docs.python.org/3/library/faulthandler.html#module-faulthandler "faulthandler: Dump the Python traceback.") to multiphase initialization.
  * [bpo-1635741](https://bugs.python.org/issue?@action=redirect&bpo=1635741): Port `sha256` to multiphase initialization
  * [bpo-41175](https://bugs.python.org/issue?@action=redirect&bpo=41175): Guard against a NULL pointer dereference within bytearrayobject triggered by the `bytearray() + bytearray()` operation.
  * [bpo-41100](https://bugs.python.org/issue?@action=redirect&bpo=41100): add arm64 to the allowable Mac OS arches in mpdecimal.h
  * [bpo-41094](https://bugs.python.org/issue?@action=redirect&bpo=41094): Fix decoding errors with audit when open files with non-ASCII names on non-UTF-8 locale.
  * [bpo-39960](https://bugs.python.org/issue?@action=redirect&bpo=39960): The “hackcheck” that prevents sneaking around a type’s __setattr__() by calling the superclass method was rewritten to allow C implemented heap types.
  * [bpo-41084](https://bugs.python.org/issue?@action=redirect&bpo=41084): Prefix the error message with ‘f-string: ‘, when parsing an f-string expression which throws a [`SyntaxError`](https://docs.python.org/3/library/exceptions.html#SyntaxError "SyntaxError").
  * [bpo-40521](https://bugs.python.org/issue?@action=redirect&bpo=40521): Empty frozensets are no longer singletons.
  * [bpo-41076](https://bugs.python.org/issue?@action=redirect&bpo=41076): Pre-feed the parser with the location of the f-string expression, not the f-string itself, which allows us to skip the shifting of the AST node locations after the parsing is completed.
  * [bpo-41056](https://bugs.python.org/issue?@action=redirect&bpo=41056): Fixes a reference to deallocated stack space during startup when constructing sys.path involving a relative symlink when code was supplied via -c. (discovered via Coverity)
  * [bpo-41061](https://bugs.python.org/issue?@action=redirect&bpo=41061): Fix incorrect expressions and asserts in hashtable code and tests.
  * [bpo-41052](https://bugs.python.org/issue?@action=redirect&bpo=41052): Opt out serialization/deserialization for _random.Random
  * [bpo-40939](https://bugs.python.org/issue?@action=redirect&bpo=40939): Rename `PyPegen*` functions to `PyParser*`, so that we can remove the old set of `PyParser*` functions that were using the old parser, but keep everything backwards-compatible.
  * [bpo-35975](https://bugs.python.org/issue?@action=redirect&bpo=35975): Stefan Behnel reported that cf_feature_version is used even when PyCF_ONLY_AST is not set. This is against the intention and against the documented behavior, so it’s been fixed.
  * [bpo-40939](https://bugs.python.org/issue?@action=redirect&bpo=40939): Remove the remaining files from the old parser and the `symbol` module.
  * [bpo-40077](https://bugs.python.org/issue?@action=redirect&bpo=40077): Convert `_bz2` to use [`PyType_FromSpec()`](https://docs.python.org/3/c-api/type.html#c.PyType_FromSpec "PyType_FromSpec").
  * [bpo-41006](https://bugs.python.org/issue?@action=redirect&bpo=41006): The `encodings.latin_1` module is no longer imported at startup. Now it is only imported when it is the filesystem encoding or the stdio encoding.
  * [bpo-40636](https://bugs.python.org/issue?@action=redirect&bpo=40636): [`zip()`](https://docs.python.org/3/library/functions.html#zip "zip") now supports [**PEP 618**](https://peps.python.org/pep-0618/)’s `strict` parameter, which raises a [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError "ValueError") if the arguments are exhausted at different lengths. Patch by Brandt Bucher.
  * [bpo-1635741](https://bugs.python.org/issue?@action=redirect&bpo=1635741): Port `_gdbm` to multiphase initialization.
  * [bpo-40985](https://bugs.python.org/issue?@action=redirect&bpo=40985): Fix a bug that caused the [`SyntaxError`](https://docs.python.org/3/library/exceptions.html#SyntaxError "SyntaxError") text to be empty when a file ends with a line ending in a line continuation character (i.e. backslash). The error text should contain the text of the last line.
  * [bpo-40958](https://bugs.python.org/issue?@action=redirect&bpo=40958): Fix a possible buffer overflow in the PEG parser when gathering information for emitting syntax errors. Patch by Pablo Galindo.
  * [bpo-1635741](https://bugs.python.org/issue?@action=redirect&bpo=1635741): Port `_dbm` to multiphase initialization.
  * [bpo-40957](https://bugs.python.org/issue?@action=redirect&bpo=40957): Fix refleak in _Py_fopen_obj() when PySys_Audit() fails
  * [bpo-40950](https://bugs.python.org/issue?@action=redirect&bpo=40950): Add a state to the `nis` module ([**PEP 3121**](https://peps.python.org/pep-3121/)) and apply the multiphase initialization.