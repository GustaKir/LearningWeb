Title: py_compile.PycInvalidationMode Enumeration
URL: https://docs.python.org/3/library/py_compile.html
Summary: This section describes the `PycInvalidationMode` enumeration, outlining methods for the Python interpreter to assess the validity of bytecode files in relation to source files. The `.pyc` file signals its invalidation mode in its header. Methods include comparing timestamps and sizes of source files to determine if bytecode regeneration is necessary. Introduced in version 3.7.
---

_class_ py_compile.PycInvalidationMode[¶](https://docs.python.org/3/library/py_compile.html#py_compile.PycInvalidationMode "Link to this definition")
    
An enumeration of possible methods the interpreter can use to determine whether a bytecode file is up to date with a source file. The `.pyc` file indicates the desired invalidation mode in its header. See [Cached bytecode invalidation](https://docs.python.org/3/reference/import.html#pyc-invalidation) for more information on how Python invalidates `.pyc` files at runtime.
Added in version 3.7. 

TIMESTAMP[¶](https://docs.python.org/3/library/py_compile.html#py_compile.PycInvalidationMode.TIMESTAMP "Link to this definition")
    
The `.pyc` file includes the timestamp and size of the source file, which Python will compare against the metadata of the source file at runtime to determine if the `.pyc` file needs to be regenerated. 

CHECKED_HASH[¶](https://docs.python.org/3/library/py_compile.html#py_compile.PycInvalidationMode.CHECKED_HASH "Link to this definition")
    
The `.pyc` file includes a hash of the source file content, which Python will compare against the source at runtime to determine if the `.pyc` file needs to be regenerated. 

UNCHECKED_HASH[¶](https://docs.python.org/3/library/py_compile.html#py_compile.PycInvalidationMode.UNCHECKED_HASH "Link to this definition")
    
Like [`CHECKED_HASH`](https://docs.python.org/3/library/py_compile.html#py_compile.PycInvalidationMode.CHECKED_HASH "py_compile.PycInvalidationMode.CHECKED_HASH"), the `.pyc` file includes a hash of the source file content. However, Python will at runtime assume the `.pyc` file is up to date and not validate the `.pyc` against the source file at all.
This option is useful when the `.pycs` are kept up to date by some system external to Python like a build system.
## Command-Line Interface[¶](https://docs.python.org/3/library/py_compile.html#command-line-interface "Link to this heading")
This module can be invoked as a script to compile several source files. The files named in _filenames_ are compiled and the resulting bytecode is cached in the normal manner. This program does not search a directory structure to locate source files; it only compiles files named explicitly. The exit status is nonzero if one of the files could not be compiled. 

<file> ... <fileN>[¶](https://docs.python.org/3/library/py_compile.html#cmdoption-python-m-py_compile-arg-file "Link to this definition")


-[¶](https://docs.python.org/3/library/py_compile.html#cmdoption-python-m-py_compile "Link to this definition")
    
Positional arguments are files to compile. If `-` is the only parameter, the list of files is taken from standard input. 

-q, --quiet[¶](https://docs.python.org/3/library/py_compile.html#cmdoption-python-m-py_compile-q "Link to this definition")
    
Suppress errors output.
Changed in version 3.2: Added support for `-`.
Changed in version 3.10: Added support for [`-q`](https://docs.python.org/3/library/py_compile.html#cmdoption-python-m-py_compile-q).
See also 

Module [`compileall`](https://docs.python.org/3/library/compileall.html#module-compileall "compileall: Tools for byte-compiling all Python source files in a directory tree.")
    
Utilities to compile all Python source files in a directory tree.
### [Table of Contents](https://docs.python.org/3/contents.html)
  * [`py_compile` — Compile Python source files](https://docs.python.org/3/library/py_compile.html)
    * [Command-Line Interface](https://docs.python.org/3/library/py_compile.html#command-line-interface)


#### Previous topic
[`pyclbr` — Python module browser support](https://docs.python.org/3/library/pyclbr.html "previous chapter")
#### Next topic
[`compileall` — Byte-compile Python libraries](https://docs.python.org/3/library/compileall.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/py_compile.rst)