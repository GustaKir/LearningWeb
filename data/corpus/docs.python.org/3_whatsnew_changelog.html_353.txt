Title: Python 3 Changelog Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This document outlines several key updates and bug fixes in Python's development, including improvements to the `platform.win32_ver` for accurate Windows version detection, enhancements in the `ssl` module for better data handling, and the porting of the `_ssl` extension module to support multiphase initialization.
---

.
  * [bpo-43284](https://bugs.python.org/issue?@action=redirect&bpo=43284): platform.win32_ver derives the windows version from sys.getwindowsversion().platform_version which in turn derives the version from kernel32.dll (which can be of a different version than Windows itself). Therefore change the platform.win32_ver to determine the version using the platform module’s _syscmd_ver private function to return an accurate version.
  * [bpo-42854](https://bugs.python.org/issue?@action=redirect&bpo=42854): The [`ssl`](https://docs.python.org/3/library/ssl.html#module-ssl "ssl: TLS/SSL wrapper for socket objects") module now uses `SSL_read_ex` and `SSL_write_ex` internally. The functions support reading and writing of data larger than 2 GB. Writing zero-length data no longer fails with a protocol violation error.
  * [bpo-42333](https://bugs.python.org/issue?@action=redirect&bpo=42333): Port `_ssl` extension module to multiphase initialization.
  * [bpo-43880](https://bugs.python.org/issue?@action=redirect&bpo=43880): [`ssl`](https://docs.python.org/3/library/ssl.html#module-ssl "ssl: TLS/SSL wrapper for socket objects") now raises DeprecationWarning for OP_NO_SSL/TLS* options, old TLS versions, old protocols, and other features that have been deprecated since Python 3.6, 3.7, or OpenSSL 1.1.0.
  * [bpo-41559](https://bugs.python.org/issue?@action=redirect&bpo=41559): [**PEP 612**](https://peps.python.org/pep-0612/) is now implemented purely in Python; builtin `types.GenericAlias` objects no longer include `typing.ParamSpec` in `__parameters__` (with the exception of `collections.abc.Callable`‘s `GenericAlias`). This means previously invalid uses of `ParamSpec` (such as `list[P]`) which worked in earlier versions of Python 3.10 alpha, will now raise `TypeError` during substitution.
  * [bpo-43867](https://bugs.python.org/issue?@action=redirect&bpo=43867): The [`multiprocessing`](https://docs.python.org/3/library/multiprocessing.html#module-multiprocessing "multiprocessing: Process-based parallelism.") `Server` class now explicitly catches [`SystemExit`](https://docs.python.org/3/library/exceptions.html#SystemExit "SystemExit") and closes the client connection in this case. It happens when the `Server.serve_client()` method reaches the end of file (EOF).
  * [bpo-40443](https://bugs.python.org/issue?@action=redirect&bpo=40443): Remove unused imports: pyclbr no longer uses copy, and typing no longer uses ast. Patch by Victor Stinner.
  * [bpo-43820](https://bugs.python.org/issue?@action=redirect&bpo=43820): Remove an unneeded copy of the namespace passed to dataclasses.make_dataclass().
  * [bpo-43787](https://bugs.python.org/issue?@action=redirect&bpo=43787): Add `__iter__()` method to [`bz2.BZ2File`](https://docs.python.org/3/library/bz2.html#bz2.BZ2File "bz2.BZ2File"), [`gzip.GzipFile`](https://docs.python.org/3/library/gzip.html#gzip.GzipFile "gzip.GzipFile"), and [`lzma.LZMAFile`](https://docs.python.org/3/library/lzma.html#lzma.LZMAFile "lzma.LZMAFile"). It makes iterating them about 2x faster. Patch by Inada Naoki.
  * [bpo-43680](https://bugs.python.org/issue?@action=redirect&bpo=43680): Deprecate io.OpenWrapper and _pyio.OpenWrapper: use io.open and _pyio.open instead. Until Python 3.9, _pyio.open was not a static method and builtins.open was set to OpenWrapper to not become a bound method when set to a class variable. _io.open is a built-in function whereas _pyio.open is a Python function. In Python 3.10, _pyio.open() is now a static method, and builtins.open() is now io.open().
  * [bpo-43680](https://bugs.python.org/issue?@action=redirect&bpo=43680): The Python `_pyio.open()` function becomes a static method to behave as [`io.open()`](https://docs.python.org/3/library/io.html#io.open "io.open") built-in function: don’t become a bound method when stored as a class variable. It becomes possible since static methods are now callable in Python 3.10. Moreover, `_pyio.OpenWrapper()` becomes a simple alias to `_pyio.open()`.