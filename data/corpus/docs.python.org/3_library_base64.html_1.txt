Title: base64.b64encode Function
URL: https://docs.python.org/3/library/base64.html
Summary: The `base64.b64encode` function encodes a bytes-like object using Base64 and returns the encoded bytes. It accepts an optional `altchars` parameter for alternative characters, which allows for the creation of URL or filesystem safe Base64 strings. If `altchars` is provided, it must be a bytes-like object of length 2, otherwise a ValueError is raised. A TypeError is raised if `altchars` is not a bytes-like object.
---

base64.b64encode(_s_ , _altchars =None_)[¶](https://docs.python.org/3/library/base64.html#base64.b64encode "Link to this definition")
    
Encode the [bytes-like object](https://docs.python.org/3/glossary.html#term-bytes-like-object) _s_ using Base64 and return the encoded [`bytes`](https://docs.python.org/3/library/stdtypes.html#bytes "bytes").
Optional _altchars_ must be a [bytes-like object](https://docs.python.org/3/glossary.html#term-bytes-like-object) of length 2 which specifies an alternative alphabet for the `+` and `/` characters. This allows an application to e.g. generate URL or filesystem safe Base64 strings. The default is `None`, for which the standard Base64 alphabet is used.
May assert or raise a [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError "ValueError") if the length of _altchars_ is not 2. Raises a [`TypeError`](https://docs.python.org/3/library/exceptions.html#TypeError "TypeError") if _altchars_ is not a [bytes-like object](https://docs.python.org/3/glossary.html#term-bytes-like-object). 

base64.b64decode(_s_ , _altchars =None_, _validate =False_)[¶](https://docs.python.org/3/library/base64.html#base64.b64decode "Link to this definition")
    
Decode the Base64 encoded [bytes-like object](https://docs.python.org/3/glossary.html#term-bytes-like-object) or ASCII string _s_ and return the decoded [`bytes`](https://docs.python.org/3/library/stdtypes.html#bytes "bytes").
Optional _altchars_ must be a [bytes-like object](https://docs.python.org/3/glossary.html#term-bytes-like-object) or ASCII string of length 2 which specifies the alternative alphabet used instead of the `+` and `/` characters.
A [`binascii.Error`](https://docs.python.org/3/library/binascii.html#binascii.Error "binascii.Error") exception is raised if _s_ is incorrectly padded.
If _validate_ is `False` (the default), characters that are neither in the normal base-64 alphabet nor the alternative alphabet are discarded prior to the padding check. If _validate_ is `True`, these non-alphabet characters in the input result in a [`binascii.Error`](https://docs.python.org/3/library/binascii.html#binascii.Error "binascii.Error").
For more information about the strict base64 check, see [`binascii.a2b_base64()`](https://docs.python.org/3/library/binascii.html#binascii.a2b_base64 "binascii.a2b_base64")
May assert or raise a [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError "ValueError") if the length of _altchars_ is not 2. 

base64.standard_b64encode(_s_)[¶](https://docs.python.org/3/library/base64.html#base64.standard_b64encode "Link to this definition")
    
Encode [bytes-like object](https://docs.python.org/3/glossary.html#term-bytes-like-object) _s_ using the standard Base64 alphabet and return the encoded [`bytes`](https://docs.python.org/3/library/stdtypes.html#bytes "bytes"). 

base64.standard_b64decode(_s_)[¶](https://docs.python.org/3/library/base64.html#base64.standard_b64decode "Link to this definition")
    
Decode [bytes-like object](https://docs.python.org/3/glossary.html#term-bytes-like-object) or ASCII string _s_ using the standard Base64 alphabet and return the decoded [`bytes`](https://docs.python.org/3/library/stdtypes.html#bytes "bytes"). 

base64.urlsafe_b64encode(_s_)[¶](https://docs.python.org/3/library/base64.html#base64.urlsafe_b64encode "Link to this definition")
    
Encode [bytes-like object](https://docs.python.org/3/glossary.html#term-bytes-like-object) _s_ using the URL- and filesystem-safe alphabet, which substitutes `-` instead of `+` and `_` instead of `/` in the standard Base64 alphabet, and return the encoded [`bytes`](https://docs.python.org/3/library/stdtypes.html#bytes "bytes"). The result can still contain `=`. 

base64.urlsafe_b64decode(_s_)[¶](https://docs.python.org/3/library/base64.html#base64.urlsafe_b64decode "Link to this definition")
    
Decode [bytes-like object](https://docs.python.org/3/glossary.html#term-bytes-like-object) or ASCII string _s_ using the URL- and filesystem-safe alphabet, which substitutes `-` instead of `+` and `_` instead of `/` in the standard Base64 alphabet, and return the decoded [`bytes`](https://docs.python.org/3/library/stdtypes.html#bytes "bytes"). 

base64.b32encode(_s_)[¶](https://docs.python.org/3/library/base64.html#base64.b32encode "Link to this definition")
    
Encode the [bytes-like object](https://docs.python.org/3/glossary.html#term-bytes-like-object) _s_ using Base32 and return the encoded [`bytes`](https://docs.python.org/3/library/stdtypes.html#bytes "bytes").