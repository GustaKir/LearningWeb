Title: Python C API: Iterator Objects
URL: https://docs.python.org/3/c-api/iterator.html
Summary: This documentation covers the Python C API related to iterator objects, providing details on their structure and functions. It includes links to related topics and sections for navigation.
---

[ ![Python logo](https://docs.python.org/3/_static/py.svg) ](https://www.python.org/) dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
Theme  Auto Light Dark
#### Previous topic
[Module Objects](https://docs.python.org/3/c-api/module.html "previous chapter")
#### Next topic
[Descriptor Objects](https://docs.python.org/3/c-api/descriptor.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/c-api/iterator.rst)


### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/c-api/descriptor.html "Descriptor Objects") |
  * [previous](https://docs.python.org/3/c-api/module.html "Module Objects") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [Python/C API Reference Manual](https://docs.python.org/3/c-api/index.html) »
  * [Concrete Objects Layer](https://docs.python.org/3/c-api/concrete.html) »
  * [Iterator Objects](https://docs.python.org/3/c-api/iterator.html)
  * | 
  * Theme  Auto Light Dark |


# Iterator Objects[¶](https://docs.python.org/3/c-api/iterator.html#iterator-objects "Link to this heading")
Python provides two general-purpose iterator objects. The first, a sequence iterator, works with an arbitrary sequence supporting the [`__getitem__()`](https://docs.python.org/3/reference/datamodel.html#object.__getitem__ "object.__getitem__") method. The second works with a callable object and a sentinel value, calling the callable for each item in the sequence, and ending the iteration when the sentinel value is returned. 

[PyTypeObject](https://docs.python.org/3/c-api/type.html#c.PyTypeObject "PyTypeObject")PySeqIter_Type[¶](https://docs.python.org/3/c-api/iterator.html#c.PySeqIter_Type "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Type object for iterator objects returned by [`PySeqIter_New()`](https://docs.python.org/3/c-api/iterator.html#c.PySeqIter_New "PySeqIter_New") and the one-argument form of the [`iter()`](https://docs.python.org/3/library/functions.html#iter "iter") built-in function for built-in sequence types. 

intPySeqIter_Check([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*op)[¶](https://docs.python.org/3/c-api/iterator.html#c.PySeqIter_Check "Link to this definition")
    
Return true if the type of _op_ is [`PySeqIter_Type`](https://docs.python.org/3/c-api/iterator.html#c.PySeqIter_Type "PySeqIter_Type"). This function always succeeds. 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PySeqIter_New([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*seq)[¶](https://docs.python.org/3/c-api/iterator.html#c.PySeqIter_New "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Return an iterator that works with a general sequence object, _seq_. The iteration ends when the sequence raises [`IndexError`](https://docs.python.org/3/library/exceptions.html#IndexError "IndexError") for the subscripting operation. 

[PyTypeObject](https://docs.python.org/3/c-api/type.html#c.PyTypeObject "PyTypeObject")PyCallIter_Type[¶](https://docs.python.org/3/c-api/iterator.html#c.PyCallIter_Type "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Type object for iterator objects returned by [`PyCallIter_New()`](https://docs.python.org/3/c-api/iterator.html#c.PyCallIter_New "PyCallIter_New") and the two-argument form of the [`iter()`](https://docs.python.org/3/library/functions.html#iter "iter") built-in function. 

intPyCallIter_Check([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*op)[¶](https://docs.python.org/3/c-api/iterator.html#c.PyCallIter_Check "Link to this definition")
    
Return true if the type of _op_ is [`PyCallIter_Type`](https://docs.python.org/3/c-api/iterator.html#c.PyCallIter_Type "PyCallIter_Type"). This function always succeeds.