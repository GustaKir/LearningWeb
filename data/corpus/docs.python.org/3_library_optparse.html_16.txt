Title: Optparse Option Callbacks and Help
URL: https://docs.python.org/3/library/optparse.html
Summary: This section discusses the `Option.callback` and its related properties, which define the callable to execute when an option is encountered. Additionally, it covers `Option.callback_args` and `Option.callback_kwargs` for passing extra arguments to the callback. It also mentions `Option.help`, which provides the help text for options when the help command is invoked.
---

Option.callback[¶](https://docs.python.org/3/library/optparse.html#optparse.Option.callback "Link to this definition")
    
For options with action `"callback"`, the callable to call when this option is seen. See section [Option Callbacks](https://docs.python.org/3/library/optparse.html#optparse-option-callbacks) for detail on the arguments passed to the callable. 

Option.callback_args[¶](https://docs.python.org/3/library/optparse.html#optparse.Option.callback_args "Link to this definition")


Option.callback_kwargs[¶](https://docs.python.org/3/library/optparse.html#optparse.Option.callback_kwargs "Link to this definition")
    
Additional positional and keyword arguments to pass to `callback` after the four standard callback arguments. 

Option.help[¶](https://docs.python.org/3/library/optparse.html#optparse.Option.help "Link to this definition")
    
Help text to print for this option when listing all available options after the user supplies a [`help`](https://docs.python.org/3/library/optparse.html#optparse.Option.help "optparse.Option.help") option (such as `--help`). If no help text is supplied, the option will be listed without help text. To hide this option, use the special value `optparse.SUPPRESS_HELP`. 

Option.metavar[¶](https://docs.python.org/3/library/optparse.html#optparse.Option.metavar "Link to this definition")
    
(default: derived from option strings)
Stand-in for the option argument(s) to use when printing help text. See section [Tutorial](https://docs.python.org/3/library/optparse.html#optparse-tutorial) for an example.
### Standard option actions[¶](https://docs.python.org/3/library/optparse.html#standard-option-actions "Link to this heading")
The various option actions all have slightly different requirements and effects. Most actions have several relevant option attributes which you may specify to guide [`optparse`](https://docs.python.org/3/library/optparse.html#module-optparse "optparse: Command-line option parsing library.")’s behaviour; a few have required attributes, which you must specify for any option using that action.
  * `"store"` [relevant: [`type`](https://docs.python.org/3/library/optparse.html#optparse.Option.type "optparse.Option.type"), [`dest`](https://docs.python.org/3/library/optparse.html#optparse.Option.dest "optparse.Option.dest"), [`nargs`](https://docs.python.org/3/library/optparse.html#optparse.Option.nargs "optparse.Option.nargs"), [`choices`](https://docs.python.org/3/library/optparse.html#optparse.Option.choices "optparse.Option.choices")]
The option must be followed by an argument, which is converted to a value according to [`type`](https://docs.python.org/3/library/optparse.html#optparse.Option.type "optparse.Option.type") and stored in [`dest`](https://docs.python.org/3/library/optparse.html#optparse.Option.dest "optparse.Option.dest"). If [`nargs`](https://docs.python.org/3/library/optparse.html#optparse.Option.nargs "optparse.Option.nargs") > 1, multiple arguments will be consumed from the command line; all will be converted according to [`type`](https://docs.python.org/3/library/optparse.html#optparse.Option.type "optparse.Option.type") and stored to [`dest`](https://docs.python.org/3/library/optparse.html#optparse.Option.dest "optparse.Option.dest") as a tuple. See the [Standard option types](https://docs.python.org/3/library/optparse.html#optparse-standard-option-types) section.
If [`choices`](https://docs.python.org/3/library/optparse.html#optparse.Option.choices "optparse.Option.choices") is supplied (a list or tuple of strings), the type defaults to `"choice"`.
If [`type`](https://docs.python.org/3/library/optparse.html#optparse.Option.type "optparse.Option.type") is not supplied, it defaults to `"string"`.
If [`dest`](https://docs.python.org/3/library/optparse.html#optparse.Option.dest "optparse.Option.dest") is not supplied, [`optparse`](https://docs.python.org/3/library/optparse.html#module-optparse "optparse: Command-line option parsing library.") derives a destination from the first long option string (e.g., `--foo-bar` implies `foo_bar`). If there are no long option strings, [`optparse`](https://docs.python.org/3/library/optparse.html#module-optparse "optparse: Command-line option parsing library.") derives a destination from the first short option string (e.g., `-f` implies `f`).
Example:
```
parser.add_option("-f")
parser.add_option("-p", type="float", nargs=3, dest="point")

```

As it parses the command line
```
-f foo.txt -p 1 -3.5 4 -fbar.txt

```

[`optparse`](https://docs.python.org/3/library/optparse.html#module-optparse "optparse: Command-line option parsing library.") will set
```
options.f = "foo.txt"
options.point = (1.0, -3.5, 4.0)
options.f = "bar.txt"