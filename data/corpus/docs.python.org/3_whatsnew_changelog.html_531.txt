Title: Python 3 Changelog Highlights
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section outlines key changes and bug fixes in Python, including separate handling of `asyncio` exceptions, improvements to `multiprocessing.managers.DictProxy`, adjustments to distutils logging for better support of non-ASCII strings on Windows, and memory optimizations for `uuid.UUID`. Notable fixes also address mojibake issues in error messages, and enhancements to `OrderedDict` pickling.
---

Extract `asyncio` exceptions into a separate file.
  * [bpo-34610](https://bugs.python.org/issue?@action=redirect&bpo=34610): Fixed iterator of `multiprocessing.managers.DictProxy`.
  * [bpo-34421](https://bugs.python.org/issue?@action=redirect&bpo=34421): Fix distutils logging for non-ASCII strings. This caused installation issues on Windows.
  * [bpo-34604](https://bugs.python.org/issue?@action=redirect&bpo=34604): Fix possible mojibake in the error message of `pwd.getpwnam` and `grp.getgrnam` using string representation because of invisible characters or trailing whitespaces. Patch by William Grzybowski.
  * [bpo-30977](https://bugs.python.org/issue?@action=redirect&bpo=30977): Make uuid.UUID use `__slots__` to reduce its memory footprint. Based on original patch by Wouter Bolsterlee.
  * [bpo-34574](https://bugs.python.org/issue?@action=redirect&bpo=34574): OrderedDict iterators are not exhausted during pickling anymore. Patch by Sergey Fedoseev.
  * [bpo-8110](https://bugs.python.org/issue?@action=redirect&bpo=8110): Refactored [`subprocess`](https://docs.python.org/3/library/subprocess.html#module-subprocess "subprocess: Subprocess management.") to check for Windows-specific modules rather than `sys.platform == 'win32'`.
  * [bpo-34530](https://bugs.python.org/issue?@action=redirect&bpo=34530): `distutils.spawn.find_executable()` now falls back on [`os.defpath`](https://docs.python.org/3/library/os.html#os.defpath "os.defpath") if the `PATH` environment variable is not set.
  * [bpo-34563](https://bugs.python.org/issue?@action=redirect&bpo=34563): On Windows, fix multiprocessing.Connection for very large read: fix _winapi.PeekNamedPipe() and _winapi.ReadFile() for read larger than INT_MAX (usually `2**31-1`).
  * [bpo-34558](https://bugs.python.org/issue?@action=redirect&bpo=34558): Correct typo in Lib/ctypes/_aix.py
  * [bpo-34282](https://bugs.python.org/issue?@action=redirect&bpo=34282): Move `Enum._convert` to `EnumMeta._convert_` and fix enum members getting shadowed by parent attributes.
  * [bpo-22872](https://bugs.python.org/issue?@action=redirect&bpo=22872): When the queue is closed, [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError "ValueError") is now raised by [`multiprocessing.Queue.put()`](https://docs.python.org/3/library/multiprocessing.html#multiprocessing.Queue.put "multiprocessing.Queue.put") and [`multiprocessing.Queue.get()`](https://docs.python.org/3/library/multiprocessing.html#multiprocessing.Queue.get "multiprocessing.Queue.get") instead of [`AssertionError`](https://docs.python.org/3/library/exceptions.html#AssertionError "AssertionError") and [`OSError`](https://docs.python.org/3/library/exceptions.html#OSError "OSError"), respectively. Patch by Zackery Spytz.
  * [bpo-34515](https://bugs.python.org/issue?@action=redirect&bpo=34515): Fix parsing non-ASCII identifiers in `lib2to3.pgen2.tokenize` ([**PEP 3131**](https://peps.python.org/pep-3131/)).
  * [bpo-13312](https://bugs.python.org/issue?@action=redirect&bpo=13312): Avoids a possible integer underflow (undefined behavior) in the time moduleâ€™s year handling code when passed a very low negative year value.
  * [bpo-34472](https://bugs.python.org/issue?@action=redirect&bpo=34472): Improved compatibility for streamed files in [`zipfile`](https://docs.python.org/3/library/zipfile.html#module-zipfile "zipfile: Read and write ZIP-format archive files."). Previously an optional signature was not being written and certain ZIP applications were not supported. Patch by Silas Sewell.
  * [bpo-34454](https://bugs.python.org/issue?@action=redirect&bpo=34454): Fix the .fromisoformat() methods of datetime types crashing when given unicode with non-UTF-8-encodable code points. Specifically, datetime.fromisoformat() now accepts surrogate unicode code points used as the separator. Report and tests by Alexey Izbyshev, patch by Paul Ganssle.
  * [bpo-6700](https://bugs.python.org/issue?@action=redirect&bpo=6700): Fix inspect.getsourcelines for module level frames/tracebacks. Patch by Vladimir Matveev.
  * [bpo-34171](https://bugs.python.org/issue?@action=redirect&bpo=34171): Running the [`trace`](https://docs.python.org/3/library/trace.html#module-trace "trace: Trace or track Python statement execution.") module no longer creates the `trace.cover` file.
  * [bpo-34441](https://bugs.python.org/issue?@action=redirect&bpo=34441): Fix crash when an `ABC`-derived class with invalid `__subclasses__` is passed as the second argument to [`issubclass()`](https://docs.python.org/3/library/functions.html#issubclass "issubclass"). Patch by Alexey Izbyshev.
  * [bpo-34427](https://bugs.python.org/issue?@action=redirect&bpo=34427): Fix infinite loop in `a.extend(a)` for `MutableSequence` subclasses.
  * [bpo-34412](https://bugs.python.org/issue?@action=redirect&bpo=34412): Make [`signal.strsignal()`](https://docs.python.org/3/library/signal.html#signal.strsignal "signal.strsignal") work on HP-UX.