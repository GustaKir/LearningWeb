Title: Python 3.6.4 Changelog Highlights
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section discusses tools and demo updates, including improvements to 2to3 and lib2to3 for reading pickled grammar files and fixes for pygettext regarding docstrings. It also notes the exclusion of an undocumented C API for OrderedDict from the limited C API.
---

### Tools/Demos[¶](https://docs.python.org/3/whatsnew/changelog.html#id591 "Link to this heading")
  * [bpo-24960](https://bugs.python.org/issue?@action=redirect&bpo=24960): 2to3 and lib2to3 can now read pickled grammar files using pkgutil.get_data() rather than probing the filesystem. This lets 2to3 and lib2to3 work when run from a zipfile.
  * [bpo-32222](https://bugs.python.org/issue?@action=redirect&bpo=32222): Fix pygettext not extracting docstrings for functions with type annotated arguments. Patch by Toby Harradine.


### C API[¶](https://docs.python.org/3/whatsnew/changelog.html#id592 "Link to this heading")
  * [bpo-29084](https://bugs.python.org/issue?@action=redirect&bpo=29084): Undocumented C API for OrderedDict has been excluded from the limited C API. It was added by mistake and actually never worked in the limited C API.


## Python 3.6.4 final[¶](https://docs.python.org/3/whatsnew/changelog.html#python-3-6-4-final "Link to this heading")
_Release date: 2017-12-18_
There were no new code changes in version 3.6.4 since v3.6.4rc1.
## Python 3.6.4 release candidate 1[¶](https://docs.python.org/3/whatsnew/changelog.html#python-3-6-4-release-candidate-1 "Link to this heading")
_Release date: 2017-12-05_
### Core and Builtins[¶](https://docs.python.org/3/whatsnew/changelog.html#id593 "Link to this heading")
  * [bpo-32176](https://bugs.python.org/issue?@action=redirect&bpo=32176): co_flags.CO_NOFREE is now always set correctly by the code object constructor based on freevars and cellvars, rather than needing to be set correctly by the caller. This ensures it will be cleared automatically when additional cell references are injected into a modified code object and function.
  * [bpo-31949](https://bugs.python.org/issue?@action=redirect&bpo=31949): Fixed several issues in printing tracebacks (PyTraceBack_Print()). Setting sys.tracebacklimit to 0 or less now suppresses printing tracebacks. Setting sys.tracebacklimit to None now causes using the default limit. Setting sys.tracebacklimit to an integer larger than LONG_MAX now means using the limit LONG_MAX rather than the default limit. Fixed integer overflows in the case of more than `2**31` traceback items on Windows. Fixed output errors handling.
  * [bpo-30696](https://bugs.python.org/issue?@action=redirect&bpo=30696): Fix the interactive interpreter looping endlessly when no memory.
  * [bpo-20047](https://bugs.python.org/issue?@action=redirect&bpo=20047): Bytearray methods partition() and rpartition() now accept only bytes-like objects as separator, as documented. In particular they now raise TypeError rather of returning a bogus result when an integer is passed as a separator.
  * [bpo-31852](https://bugs.python.org/issue?@action=redirect&bpo=31852): Fix a segmentation fault caused by a combination of the async soft keyword and continuation lines.
  * [bpo-21720](https://bugs.python.org/issue?@action=redirect&bpo=21720): BytesWarning no longer emitted when the _fromlist_ argument of `__import__()` or the `__all__` attribute of the module contain bytes instances.
  * [bpo-31825](https://bugs.python.org/issue?@action=redirect&bpo=31825): Fixed OverflowError in the ‘unicode-escape’ codec and in codecs.escape_decode() when decode an escaped non-ascii byte.
  * [bpo-28603](https://bugs.python.org/issue?@action=redirect&bpo=28603): Print the full context/cause chain of exceptions on interpreter exit, even if an exception in the chain is unhashable or compares equal to later ones. Patch by Zane Bitter.
  * [bpo-31786](https://bugs.python.org/issue?@action=redirect&bpo=31786): Fix timeout rounding in the select module to round correctly negative timeouts between -1.0 and 0.0. The functions now block waiting for events as expected. Previously, the call was incorrectly non-blocking. Patch by Pablo Galindo.
  * [bpo-31642](https://bugs.python.org/issue?@action=redirect&bpo=31642): Restored blocking “from package import module” by setting sys.modules[“package.module”] to None.
  * [bpo-31626](https://bugs.python.org/issue?@action=redirect&bpo=31626): Fixed a bug in debug memory allocator. There was a write to freed memory after shrinking a memory block.
  * [bpo-31619](https://bugs.python.org/issue?@action=redirect&bpo=31619): Fixed a ValueError when convert a string with large number of underscores to integer with binary base.
  * [bpo-31592](https://bugs.python.org/issue?@action=redirect&bpo=31592): Fixed an assertion failure in Python parser in case of a bad `unicodedata.normalize()`. Patch by Oren Milman.
  * [bpo-31588](https://bugs.python.org/issue?@action=redirect&bpo=31588): Raise a `TypeError` with a helpful error message when class creation fails due to a metaclass with a bad `__prepare__()` method. Patch by Oren Milman.
  * [bpo-31566](https://bugs.python.org/issue?@action=redirect&bpo=31566): Fix an assertion failure in `_warnings.warn()` in case of a bad `__name__` global. Patch by Oren Milman.
  * [bpo-31505](https://bugs.python.org/issue?@ac