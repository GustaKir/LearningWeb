Title: Mailbox MH Class Methods
URL: https://docs.python.org/3/library/mailbox.html
Summary: This section outlines methods from the Mailbox MH class including `get_sequences()` that retrieves a dictionary of sequence names and keys, `set_sequences(_sequences_)` that redefines mailbox sequences, and `pack()` which renumbers messages to eliminate gaps, invalidating previously issued keys.
---

get_sequences()[¶](https://docs.python.org/3/library/mailbox.html#mailbox.MH.get_sequences "Link to this definition")
    
Return a dictionary of sequence names mapped to key lists. If there are no sequences, the empty dictionary is returned. 

set_sequences(_sequences_)[¶](https://docs.python.org/3/library/mailbox.html#mailbox.MH.set_sequences "Link to this definition")
    
Re-define the sequences that exist in the mailbox based upon _sequences_ , a dictionary of names mapped to key lists, like returned by [`get_sequences()`](https://docs.python.org/3/library/mailbox.html#mailbox.MH.get_sequences "mailbox.MH.get_sequences"). 

pack()[¶](https://docs.python.org/3/library/mailbox.html#mailbox.MH.pack "Link to this definition")
    
Rename messages in the mailbox as necessary to eliminate gaps in numbering. Entries in the sequences list are updated correspondingly.
Note
Already-issued keys are invalidated by this operation and should not be subsequently used.
Some [`Mailbox`](https://docs.python.org/3/library/mailbox.html#mailbox.Mailbox "mailbox.Mailbox") methods implemented by `MH` deserve special remarks: 

remove(_key_)[¶](https://docs.python.org/3/library/mailbox.html#mailbox.MH.remove "Link to this definition")


__delitem__(_key_)[¶](https://docs.python.org/3/library/mailbox.html#mailbox.MH.__delitem__ "Link to this definition")


discard(_key_)[¶](https://docs.python.org/3/library/mailbox.html#mailbox.MH.discard "Link to this definition")
    
These methods immediately delete the message. The MH convention of marking a message for deletion by prepending a comma to its name is not used. 

lock()[¶](https://docs.python.org/3/library/mailbox.html#mailbox.MH.lock "Link to this definition")


unlock()[¶](https://docs.python.org/3/library/mailbox.html#mailbox.MH.unlock "Link to this definition")
    
Three locking mechanisms are used—dot locking and, if available, the `flock()` and `lockf()` system calls. For MH mailboxes, locking the mailbox means locking the `.mh_sequences` file and, only for the duration of any operations that affect them, locking individual message files. 

get_file(_key_)[¶](https://docs.python.org/3/library/mailbox.html#mailbox.MH.get_file "Link to this definition")
    
Depending upon the host platform, it may not be possible to remove the underlying message while the returned file remains open. 

flush()[¶](https://docs.python.org/3/library/mailbox.html#mailbox.MH.flush "Link to this definition")
    
All changes to MH mailboxes are immediately applied, so this method does nothing. 

close()[¶](https://docs.python.org/3/library/mailbox.html#mailbox.MH.close "Link to this definition")
    
`MH` instances do not keep any open files, so this method is equivalent to [`unlock()`](https://docs.python.org/3/library/mailbox.html#mailbox.MH.unlock "mailbox.MH.unlock").
See also 

[nmh - Message Handling System](https://www.nongnu.org/nmh/)
    
Home page of **nmh** , an updated version of the original **mh**. 

[MH & nmh: Email for Users & Programmers](https://rand-mh.sourceforge.io/book/)
    
A GPL-licensed book on **mh** and **nmh** , with some information on the mailbox format.
### `Babyl` objects[¶](https://docs.python.org/3/library/mailbox.html#babyl-objects "Link to this heading")