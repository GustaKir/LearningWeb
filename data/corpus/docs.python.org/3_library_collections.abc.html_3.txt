Title: Overview of Abstract Base Classes in Collections Module
URL: https://docs.python.org/3/library/collections.abc.html
Summary: This document chunk outlines various abstract base classes provided by the collections.abc module in Python, such as MutableSet, Set, Mapping, and Collection. It lists their respective methods and inherited functionalities, emphasizing their roles in defining set and mapping behaviors in Python collections.
---

ntains__`, `__iter__`, `__len__` | `__le__`, `__lt__`, `__eq__`, `__ne__`, `__gt__`, `__ge__`, `__and__`, `__or__`, `__sub__`, `__rsub__`, `__xor__`, `__rxor__` and `isdisjoint`  
[`MutableSet`](https://docs.python.org/3/library/collections.abc.html#collections.abc.MutableSet "collections.abc.MutableSet") | [`Set`](https://docs.python.org/3/library/collections.abc.html#collections.abc.Set "collections.abc.Set") | `__contains__`, `__iter__`, `__len__`, `add`, `discard` | Inherited [`Set`](https://docs.python.org/3/library/collections.abc.html#collections.abc.Set "collections.abc.Set") methods and `clear`, `pop`, `remove`, `__ior__`, `__iand__`, `__ixor__`, and `__isub__`  
[`Mapping`](https://docs.python.org/3/library/collections.abc.html#collections.abc.Mapping "collections.abc.Mapping") | [`Collection`](https://docs.python.org/3/library/collections.abc.html#collections.abc.Collection "collections.abc.Collection") | `__getitem__`, `__iter__`, `__len__` | `__contains__`, `keys`, `items`, `values`, `get`, `__eq__`, and `__ne__`  
[`MutableMapping`](https://docs.python.org/3/library/collections.abc.html#collections.abc.MutableMapping "collections.abc.MutableMapping") | [`Mapping`](https://docs.python.org/3/library/collections.abc.html#collections.abc.Mapping "collections.abc.Mapping") | `__getitem__`, `__setitem__`, `__delitem__`, `__iter__`, `__len__` | Inherited [`Mapping`](https://docs.python.org/3/library/collections.abc.html#collections.abc.Mapping "collections.abc.Mapping") methods and `pop`, `popitem`, `clear`, `update`, and `setdefault`  
[`MappingView`](https://docs.python.org/3/library/collections.abc.html#collections.abc.MappingView "collections.abc.MappingView") | [`Sized`](https://docs.python.org/3/library/collections.abc.html#collections.abc.Sized "collections.abc.Sized") |  | `__init__`, `__len__` and `__repr__`  
[`ItemsView`](https://docs.python.org/3/library/collections.abc.html#collections.abc.ItemsView "collections.abc.ItemsView") | [`MappingView`](https://docs.python.org/3/library/collections.abc.html#collections.abc.MappingView "collections.abc.MappingView"), [`Set`](https://docs.python.org/3/library/collections.abc.html#collections.abc.Set "collections.abc.Set") |  | `__contains__`, `__iter__`  
[`KeysView`](https://docs.python.org/3/library/collections.abc.html#collections.abc.KeysView "collections.abc.KeysView") | [`MappingView`](https://docs.python.org/3/library/collections.abc.html#collections.abc.MappingView "collections.abc.MappingView"), [`Set`](https://docs.python.org/3/library/collections.abc.html#collections.abc.Set "collections.abc.Set") |  | `__contains__`, `__iter__`  
[`ValuesView`](https://docs.python.org/3/library/collections.abc.html#collections.abc.ValuesView "collections.abc.ValuesView") | [`MappingView`](https://docs.python.org/3/library/collections.abc.html#collections.abc.MappingView "collections.abc.MappingView"), [`Collection`](https://docs.python.org/3/library/collections.abc.html#collections.abc.Collection "collections.abc.Collection") |  | `__contains__`, `__iter__`  
[`Awaitable`](https://docs.python.org/3/library/collections.abc.html#collections.abc.Awaitable "collections.abc.Awaitable") [[1]](https://docs.python.org/3/library/collections.abc.html#id18) |  | `__await__` |   
[`Coroutine`](https://docs.python.org/3/library/collections.abc.html#collections.abc.Coroutine "collections.abc.Coroutine") [[1]](https://docs.python.org/3/library/collections.abc.html#id18) | [`Awaitable`](https://docs.python.org/3/library/collections.abc.html#collections.abc.Awaitable "collections.abc.Awaitable") | `send`, `throw` | `close`  
[`AsyncIterable`](https://docs.python.org/3/library/collections.abc.html#collections.abc.AsyncIterable "collections.abc.AsyncIterable") [[1]](https://docs.python.org/3/library/collections.abc.html#id18) |  | `__aiter__` |   
[`AsyncIterator`](https://docs.python.org/3/library/collections.abc.html#collections.abc.AsyncIterator "collections.abc.AsyncIterator") [[1]](https://docs.python.org/3/library/collections.abc.html#id18) | [`AsyncIterable`](https://docs.python.org/3/library/collections.abc.html#collections.abc.AsyncIterable "collections.abc.AsyncIterable") | `__anext__` | `__aiter__`  
[`AsyncGenerator`](https://docs.python.org/3/library/collections.abc.html#collections.abc.AsyncGenerator "collections.abc.AsyncGenerator") [[1]](https://docs.python.org/3/library/collections.abc.html#id18) | [`AsyncIterator`](https://docs.python.org/3/library/collections.abc.html#collections.abc.AsyncIterator "collections.abc.AsyncIterator") | `asend`, `athrow` | `aclose`, `__aiter__`, `__anext__`  
[`Buffer`](https://docs.python.org/3/library/collections.abc.html#collections.abc.Buffer "collections.abc.Buffer") [[1]](https://docs.python.org/3/library/collections.abc.html#id18) |  | `__buffer__` |   
Footnotes
[1] ([1](https://docs.python.org/3/library/collections.abc.html#id2),[2](https://docs.python.org/3/library/collections.abc.html#id3),[3](https://docs.python