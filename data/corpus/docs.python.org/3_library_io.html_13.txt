Title: TextIOBase Class in Python I/O Library
URL: https://docs.python.org/3/library/io.html
Summary: The TextIOBase class serves as a base for text streams, providing a character and line-based interface to stream I/O. It inherits from IOBase and includes additional attributes and methods such as 'encoding', which specifies the character encoding, 'errors' for handling encoding/decoding errors, and 'newlines' for managing newline characters.
---

_class_ io.TextIOBase[¶](https://docs.python.org/3/library/io.html#io.TextIOBase "Link to this definition")
    
Base class for text streams. This class provides a character and line based interface to stream I/O. It inherits from [`IOBase`](https://docs.python.org/3/library/io.html#io.IOBase "io.IOBase").
[`TextIOBase`](https://docs.python.org/3/library/io.html#io.TextIOBase "io.TextIOBase") provides or overrides these data attributes and methods in addition to those from [`IOBase`](https://docs.python.org/3/library/io.html#io.IOBase "io.IOBase"): 

encoding[¶](https://docs.python.org/3/library/io.html#io.TextIOBase.encoding "Link to this definition")
    
The name of the encoding used to decode the stream’s bytes into strings, and to encode strings into bytes. 

errors[¶](https://docs.python.org/3/library/io.html#io.TextIOBase.errors "Link to this definition")
    
The error setting of the decoder or encoder. 

newlines[¶](https://docs.python.org/3/library/io.html#io.TextIOBase.newlines "Link to this definition")
    
A string, a tuple of strings, or `None`, indicating the newlines translated so far. Depending on the implementation and the initial constructor flags, this may not be available. 

buffer[¶](https://docs.python.org/3/library/io.html#io.TextIOBase.buffer "Link to this definition")
    
The underlying binary buffer (a [`BufferedIOBase`](https://docs.python.org/3/library/io.html#io.BufferedIOBase "io.BufferedIOBase") instance) that [`TextIOBase`](https://docs.python.org/3/library/io.html#io.TextIOBase "io.TextIOBase") deals with. This is not part of the [`TextIOBase`](https://docs.python.org/3/library/io.html#io.TextIOBase "io.TextIOBase") API and may not exist in some implementations. 

detach()[¶](https://docs.python.org/3/library/io.html#io.TextIOBase.detach "Link to this definition")
    
Separate the underlying binary buffer from the [`TextIOBase`](https://docs.python.org/3/library/io.html#io.TextIOBase "io.TextIOBase") and return it.
After the underlying buffer has been detached, the [`TextIOBase`](https://docs.python.org/3/library/io.html#io.TextIOBase "io.TextIOBase") is in an unusable state.
Some [`TextIOBase`](https://docs.python.org/3/library/io.html#io.TextIOBase "io.TextIOBase") implementations, like [`StringIO`](https://docs.python.org/3/library/io.html#io.StringIO "io.StringIO"), may not have the concept of an underlying buffer and calling this method will raise [`UnsupportedOperation`](https://docs.python.org/3/library/io.html#io.UnsupportedOperation "io.UnsupportedOperation").
Added in version 3.1. 

read(_size =-1_, _/_)[¶](https://docs.python.org/3/library/io.html#io.TextIOBase.read "Link to this definition")
    
Read and return at most _size_ characters from the stream as a single [`str`](https://docs.python.org/3/library/stdtypes.html#str "str"). If _size_ is negative or `None`, reads until EOF. 

readline(_size =-1_, _/_)[¶](https://docs.python.org/3/library/io.html#io.TextIOBase.readline "Link to this definition")
    
Read until newline or EOF and return a single [`str`](https://docs.python.org/3/library/stdtypes.html#str "str"). If the stream is already at EOF, an empty string is returned.
If _size_ is specified, at most _size_ characters will be read. 

seek(_offset_ , _whence =SEEK_SET_, _/_)[¶](https://docs.python.org/3/library/io.html#io.TextIOBase.seek "Link to this definition")
    
Change the stream position to the given _offset_. Behaviour depends on the _whence_ parameter. The default value for _whence_ is `SEEK_SET`.
  * `SEEK_SET` or `0`: seek from the start of the stream (the default); _offset_ must either be a number returned by [`TextIOBase.tell()`](https://docs.python.org/3/library/io.html#io.TextIOBase.tell "io.TextIOBase.tell"), or zero. Any other _offset_ value produces undefined behaviour.
  * `SEEK_CUR` or `1`: “seek” to the current position; _offset_ must be zero, which is a no-operation (all other values are unsupported).
  * `SEEK_END` or `2`: seek to the end of the stream; _offset_ must be zero (all other values are unsupported).


Return the new absolute position as an opaque number.
Added in version 3.1: The `SEEK_*` constants. 

tell()[¶](https://docs.python.org/3/library/io.html#io.TextIOBase.tell "Link to this definition")
    
Return the current stream position as an opaque number. The number does not usually represent a number of bytes in the underlying binary storage. 

write(_s_ , _/_)[¶](https://docs.python.org/3/library/io.html#io.TextIOBase.write "Link to this definition")
    
Write the string _s_ to the stream and return the number of characters written.