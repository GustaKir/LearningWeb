Title: Unicode API Functions in Python C API
URL: https://docs.python.org/3/c-api/unicode.html
Summary: This section describes the functions `PyUnicode_FromFormatV` and `PyUnicode_FromObject`, detailing their return values and usage within the Python C API for handling Unicode objects.
---

and `%#N` formats added. 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyUnicode_FromFormatV(constchar*format, va_listvargs)[¶](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_FromFormatV "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Identical to [`PyUnicode_FromFormat()`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_FromFormat "PyUnicode_FromFormat") except that it takes exactly two arguments. 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyUnicode_FromObject([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*obj)[¶](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_FromObject "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Copy an instance of a Unicode subtype to a new true Unicode object if necessary. If _obj_ is already a true Unicode object (not a subtype), return a new [strong reference](https://docs.python.org/3/glossary.html#term-strong-reference) to the object.
Objects other than Unicode or its subtypes will cause a [`TypeError`](https://docs.python.org/3/library/exceptions.html#TypeError "TypeError"). 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyUnicode_FromOrdinal(intordinal)[¶](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_FromOrdinal "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Create a Unicode Object from the given Unicode code point _ordinal_.
The ordinal must be in `range(0x110000)`. A [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError "ValueError") is raised in the case it is not. 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyUnicode_FromEncodedObject([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*obj, constchar*encoding, constchar*errors)[¶](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_FromEncodedObject "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Decode an encoded object _obj_ to a Unicode object.
[`bytes`](https://docs.python.org/3/library/stdtypes.html#bytes "bytes"), [`bytearray`](https://docs.python.org/3/library/stdtypes.html#bytearray "bytearray") and other [bytes-like objects](https://docs.python.org/3/glossary.html#term-bytes-like-object) are decoded according to the given _encoding_ and using the error handling defined by _errors_. Both can be `NULL` to have the interface use the default values (see [Built-in Codecs](https://docs.python.org/3/c-api/unicode.html#builtincodecs) for details).
All other objects, including Unicode objects, cause a [`TypeError`](https://docs.python.org/3/library/exceptions.html#TypeError "TypeError") to be set.
The API returns `NULL` if there was an error. The caller is responsible for decref’ing the returned objects. 

constchar*PyUnicode_GetDefaultEncoding(void)[¶](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_GetDefaultEncoding "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Return the name of the default string encoding, `"utf-8"`. See [`sys.getdefaultencoding()`](https://docs.python.org/3/library/sys.html#sys.getdefaultencoding "sys.getdefaultencoding").
The returned string does not need to be freed, and is valid until interpreter shutdown. 

[Py_ssize_t](https://docs.python.org/3/c-api/intro.html#c.Py_ssize_t "Py_ssize_t")PyUnicode_GetLength([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*unicode)[¶](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_GetLength "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable) since version 3.7._
Return the length of the Unicode object, in code points.
On error, set an exception and return `-1`.
Added in version 3.3.