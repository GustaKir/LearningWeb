Title: Logging Handlers: QueueListener Methods
URL: https://docs.python.org/3/library/logging.handlers.html
Summary: This section describes the methods of the QueueListener class in the logging.handlers module. The `prepare()` method prepares a log record for handling, while the `handle()` method processes the record through the available handlers. The `start()` method initiates the listener functionality.
---

prepare(_record_)[¶](https://docs.python.org/3/library/logging.handlers.html#logging.handlers.QueueListener.prepare "Link to this definition")
    
Prepare a record for handling.
This implementation just returns the passed-in record. You may want to override this method if you need to do any custom marshalling or manipulation of the record before passing it to the handlers. 

handle(_record_)[¶](https://docs.python.org/3/library/logging.handlers.html#logging.handlers.QueueListener.handle "Link to this definition")
    
Handle a record.
This just loops through the handlers offering them the record to handle. The actual object passed to the handlers is that which is returned from [`prepare()`](https://docs.python.org/3/library/logging.handlers.html#logging.handlers.QueueListener.prepare "logging.handlers.QueueListener.prepare"). 

start()[¶](https://docs.python.org/3/library/logging.handlers.html#logging.handlers.QueueListener.start "Link to this definition")
    
Starts the listener.
This starts up a background thread to monitor the queue for LogRecords to process.
Changed in version 3.13.3 (unreleased): Raises [`RuntimeError`](https://docs.python.org/3/library/exceptions.html#RuntimeError "RuntimeError") if called and the listener is already running. 

stop()[¶](https://docs.python.org/3/library/logging.handlers.html#logging.handlers.QueueListener.stop "Link to this definition")
    
Stops the listener.
This asks the thread to terminate, and then waits for it to do so. Note that if you don’t call this before your application exits, there may be some records still left on the queue, which won’t be processed. 

enqueue_sentinel()[¶](https://docs.python.org/3/library/logging.handlers.html#logging.handlers.QueueListener.enqueue_sentinel "Link to this definition")
    
Writes a sentinel to the queue to tell the listener to quit. This implementation uses `put_nowait()`. You may want to override this method if you want to use timeouts or work with custom queue implementations.
Added in version 3.3.
See also 

Module [`logging`](https://docs.python.org/3/library/logging.html#module-logging "logging: Flexible event logging system for applications.")
    
API reference for the logging module. 

Module [`logging.config`](https://docs.python.org/3/library/logging.config.html#module-logging.config "logging.config: Configuration of the logging module.")
    
Configuration API for the logging module.
### [Table of Contents](https://docs.python.org/3/contents.html)
  * [`logging.handlers` — Logging handlers](https://docs.python.org/3/library/logging.handlers.html)
    * [StreamHandler](https://docs.python.org/3/library/logging.handlers.html#streamhandler)
    * [FileHandler](https://docs.python.org/3/library/logging.handlers.html#filehandler)
    * [NullHandler](https://docs.python.org/3/library/logging.handlers.html#nullhandler)
    * [WatchedFileHandler](https://docs.python.org/3/library/logging.handlers.html#watchedfilehandler)
    * [BaseRotatingHandler](https://docs.python.org/3/library/logging.handlers.html#baserotatinghandler)
    * [RotatingFileHandler](https://docs.python.org/3/library/logging.handlers.html#rotatingfilehandler)
    * [TimedRotatingFileHandler](https://docs.python.org/3/library/logging.handlers.html#timedrotatingfilehandler)
    * [SocketHandler](https://docs.python.org/3/library/logging.handlers.html#sockethandler)
    * [DatagramHandler](https://docs.python.org/3/library/logging.handlers.html#datagramhandler)
    * [SysLogHandler](https://docs.python.org/3/library/logging.handlers.html#sysloghandler)
    * [NTEventLogHandler](https://docs.python.org/3/library/logging.handlers.html#nteventloghandler)
    * [SMTPHandler](https://docs.python.org/3/library/logging.handlers.html#smtphandler)
    * [MemoryHandler](https://docs.python.org/3/library/logging.handlers.html#memoryhandler)
    * [HTTPHandler](https://docs.python.org/3/library/logging.handlers.html#httphandler)
    * [QueueHandler](https://docs.python.org/3/library/logging.handlers.html#queuehandler)
    * [QueueListener](https://docs.python.org/3/library/logging.handlers.html#queuelistener)


#### Previous topic
[`logging.config` — Logging configuration](https://docs.python.org/3/library/logging.config.html "previous chapter")
#### Next topic
[`platform` — Access to underlying platform’s identifying data](https://docs.python.org/3/library/platform.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/logging.handlers.rst)