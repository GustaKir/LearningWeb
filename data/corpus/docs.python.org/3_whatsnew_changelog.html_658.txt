Title: Python 3.6.0 Beta 3 Release Notes
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section details the core improvements and bug fixes in Python 3.6.0 beta 3, including better error messages for invalid escape sequences, memory optimizations in dict.update(), fixes for potential crashes in Unicode handling, and corrections in the peephole optimizer.
---

## Python 3.6.0 beta 3[¶](https://docs.python.org/3/whatsnew/changelog.html#python-3-6-0-beta-3 "Link to this heading")
_Release date: 2016-10-31_
### Core and Builtins[¶](https://docs.python.org/3/whatsnew/changelog.html#id649 "Link to this heading")
  * [bpo-28128](https://bugs.python.org/issue?@action=redirect&bpo=28128): Deprecation warning for invalid str and byte escape sequences now prints better information about where the error occurs. Patch by Serhiy Storchaka and Eric Smith.
  * [bpo-28509](https://bugs.python.org/issue?@action=redirect&bpo=28509): dict.update() no longer allocate unnecessary large memory.
  * [bpo-28426](https://bugs.python.org/issue?@action=redirect&bpo=28426): Fixed potential crash in PyUnicode_AsDecodedObject() in debug build.
  * [bpo-28517](https://bugs.python.org/issue?@action=redirect&bpo=28517): Fixed of-by-one error in the peephole optimizer that caused keeping unreachable code.
  * [bpo-28214](https://bugs.python.org/issue?@action=redirect&bpo=28214): Improved exception reporting for problematic __set_name__ attributes.
  * [bpo-23782](https://bugs.python.org/issue?@action=redirect&bpo=23782): Fixed possible memory leak in _PyTraceback_Add() and exception loss in PyTraceBack_Here().
  * [bpo-28471](https://bugs.python.org/issue?@action=redirect&bpo=28471): Fix “Python memory allocator called without holding the GIL” crash in socket.setblocking.


### Library[¶](https://docs.python.org/3/whatsnew/changelog.html#id650 "Link to this heading")
  * [bpo-27517](https://bugs.python.org/issue?@action=redirect&bpo=27517): LZMA compressor and decompressor no longer raise exceptions if given empty data twice. Patch by Benjamin Fogle.
  * [bpo-28549](https://bugs.python.org/issue?@action=redirect&bpo=28549): Fixed segfault in curses’s addch() with ncurses6.
  * [bpo-28449](https://bugs.python.org/issue?@action=redirect&bpo=28449): tarfile.open() with mode “r” or “r:” now tries to open a tar file with compression before trying to open it without compression. Otherwise it had 50% chance failed with ignore_zeros=True.
  * [bpo-23262](https://bugs.python.org/issue?@action=redirect&bpo=23262): The webbrowser module now supports Firefox 36+ and derived browsers. Based on patch by Oleg Broytman.
  * [bpo-27939](https://bugs.python.org/issue?@action=redirect&bpo=27939): Fixed bugs in tkinter.ttk.LabeledScale and tkinter.Scale caused by representing the scale as float value internally in Tk. tkinter.IntVar now works if float value is set to underlying Tk variable.
  * [bpo-18844](https://bugs.python.org/issue?@action=redirect&bpo=18844): The various ways of specifying weights for random.choices() now produce the same result sequences.
  * [bpo-28255](https://bugs.python.org/issue?@action=redirect&bpo=28255): calendar.TextCalendar().prmonth() no longer prints a space at the start of new line after printing a month’s calendar. Patch by Xiang Zhang.
  * [bpo-20491](https://bugs.python.org/issue?@action=redirect&bpo=20491): The textwrap.TextWrapper class now honors non-breaking spaces. Based on patch by Kaarle Ritvanen.
  * [bpo-28353](https://bugs.python.org/issue?@action=redirect&bpo=28353): os.fwalk() no longer fails on broken links.
  * [bpo-28430](https://bugs.python.org/issue?@action=redirect&bpo=28430): Fix iterator of C implemented asyncio.Future doesn’t accept non-None value is passed to it.send(val).
  * [bpo-27025](https://bugs.python.org/issue?@action=redirect&bpo=27025): Generated names for Tkinter widgets now start by the “!” prefix for readability.
  * [bpo-25464](https://bugs.python.org/issue?@action=redirect&bpo=25464): Fixed HList.header_exists() in tkinter.tix module by addin a workaround to Tix library bug.
  * [bpo-28488](https://bugs.python.org/issue?@action=redirect&bpo=28488): shutil.make_archive() no longer adds entry “./” to ZIP archive.
  * [bpo-25953](https://bugs.python.org/issue?@action=redirect&bpo=25953): re.sub() now raises an error for invalid numerical group reference in replacement template even if the pattern is not found in the string. Error message for invalid group reference now includes the group index and the position of the reference. Based on patch by SilentGhost.
  * [bpo-18219](https://bugs.python.org/issue?@action=redirect&bpo=18219): Optimize csv.DictWriter for large number of columns. Patch by Mariatta Wijaya.
  * [bpo-28448](https://bugs.python.org/issue?@action=redirect&bpo=28448): Fix C implemented asyncio.Future didn’t work on Windows.
  * [bpo-28480](https://bugs.python.org/issue?@action=redirect&bpo=28480): Fix error building socket module when multithreading is disabled.
  * [bpo-24452](https://bugs.python.org/issue?@action=redirect&bpo=24452): Make webbrowser support Chrome on Mac OS X.
  * [bpo-20766](https://bugs.python.org/issue?@action=redirect&bpo=20766): Fix references leaked by pdb in the handling of SIGINT handlers.
  * [bpo-28492](https://bugs.python.org/issue?@action=redirect&bpo=28492): Fix how StopIteration exception is rai