Title: Object-Oriented Turtle Graphics in Python
URL: https://docs.python.org/3/library/turtle.html
Summary: This section discusses the object-oriented approach to turtle graphics in Python, highlighting its advantages, such as the ability to manage multiple turtles on screen. It emphasizes that while the approach can be used interactively in a shell, it is more common and effective in scripts.
---

```

to the end of the script. The script will now wait to be dismissed and will not exit until it is terminated, for example by closing the turtle graphics window.
### Use object-oriented turtle graphics[¶](https://docs.python.org/3/library/turtle.html#use-object-oriented-turtle-graphics "Link to this heading")
See also
[Explanation of the object-oriented interface](https://docs.python.org/3/library/turtle.html#turtle-explanation)
Other than for very basic introductory purposes, or for trying things out as quickly as possible, it’s more usual and much more powerful to use the object-oriented approach to turtle graphics. For example, this allows multiple turtles on screen at once.
In this approach, the various turtle commands are methods of objects (mostly of `Turtle` objects). You _can_ use the object-oriented approach in the shell, but it would be more typical in a Python script.
The example above then becomes:
```
fromturtleimport Turtle
fromrandomimport random
t = Turtle()
for i in range(100):
  steps = int(random() * 100)
  angle = int(random() * 360)
  t.right(angle)
  t.fd(steps)
t.screen.mainloop()

```

Note the last line. `t.screen` is an instance of the [`Screen`](https://docs.python.org/3/library/turtle.html#turtle.Screen "turtle.Screen") that a Turtle instance exists on; it’s created automatically along with the turtle.
The turtle’s screen can be customised, for example:
```
t.screen.title('Object-oriented turtle demo')
t.screen.bgcolor("orange")

```

## Turtle graphics reference[¶](https://docs.python.org/3/library/turtle.html#turtle-graphics-reference "Link to this heading")
Note
In the following documentation the argument list for functions is given. Methods, of course, have the additional first argument _self_ which is omitted here.
### Turtle methods[¶](https://docs.python.org/3/library/turtle.html#turtle-methods "Link to this heading") 

Turtle motion
     

Move and draw
    
[`forward()`](https://docs.python.org/3/library/turtle.html#turtle.forward "turtle.forward") | [`fd()`](https://docs.python.org/3/library/turtle.html#turtle.fd "turtle.fd")
[`backward()`](https://docs.python.org/3/library/turtle.html#turtle.backward "turtle.backward") | [`bk()`](https://docs.python.org/3/library/turtle.html#turtle.bk "turtle.bk") | [`back()`](https://docs.python.org/3/library/turtle.html#turtle.back "turtle.back")
[`right()`](https://docs.python.org/3/library/turtle.html#turtle.right "turtle.right") | [`rt()`](https://docs.python.org/3/library/turtle.html#turtle.rt "turtle.rt")
[`left()`](https://docs.python.org/3/library/turtle.html#turtle.left "turtle.left") | [`lt()`](https://docs.python.org/3/library/turtle.html#turtle.lt "turtle.lt")
[`goto()`](https://docs.python.org/3/library/turtle.html#turtle.goto "turtle.goto") | [`setpos()`](https://docs.python.org/3/library/turtle.html#turtle.setpos "turtle.setpos") | [`setposition()`](https://docs.python.org/3/library/turtle.html#turtle.setposition "turtle.setposition")
[`teleport()`](https://docs.python.org/3/library/turtle.html#turtle.teleport "turtle.teleport")
[`setx()`](https://docs.python.org/3/library/turtle.html#turtle.setx "turtle.setx")
[`sety()`](https://docs.python.org/3/library/turtle.html#turtle.sety "turtle.sety")
[`setheading()`](https://docs.python.org/3/library/turtle.html#turtle.setheading "turtle.setheading") | [`seth()`](https://docs.python.org/3/library/turtle.html#turtle.seth "turtle.seth")
[`home()`](https://docs.python.org/3/library/turtle.html#turtle.home "turtle.home")
[`circle()`](https://docs.python.org/3/library/turtle.html#turtle.circle "turtle.circle")
[`dot()`](https://docs.python.org/3/library/turtle.html#turtle.dot "turtle.dot")
[`stamp()`](https://docs.python.org/3/library/turtle.html#turtle.stamp "turtle.stamp")
[`clearstamp()`](https://docs.python.org/3/library/turtle.html#turtle.clearstamp "turtle.clearstamp")
[`clearstamps()`](https://docs.python.org/3/library/turtle.html#turtle.clearstamps "turtle.clearstamps")
[`undo()`](https://docs.python.org/3/library/turtle.html#turtle.undo "turtle.undo")
[`speed()`](https://docs.python.org/3/library/turtle.html#turtle.speed "turtle.speed") 

Tell Turtle’s state
    
[`position()`](https://docs.python.org/3/library/turtle.html#turtle.position "turtle.position") | [`pos()`](https://docs.python.org/3/library/turtle.html#turtle.pos "turtle.pos")
[`towards()`](https://docs.python.org/3/library/turtle.html#turtle.towards "turtle.towards")
[`xcor()`](https://docs.python.org/3/library/turtle.html#turtle.xcor "turtle.xcor")
[`ycor()`](https://docs.python.org/3/library/turtle.html#turtle.ycor "turtle.ycor")
[`heading()`](https://docs.python.org/3/library/turtle.html#turtle.heading "turtle.heading")
[`distance()`](https://docs.python.org/3/library/turtle.html#turtle.distance "turtle.distance")