Title: SSL Module Features and Support Flags
URL: https://docs.python.org/3/library/ssl.html
Summary: This section outlines specific flags indicating the support of various features in the OpenSSL library within the Python SSL module. It includes flags for Application-Layer Protocol Negotiation (ALPN) added in version 3.5, common name checks introduced in version 3.7, and support for Elliptic Curve Diffie-Hellman (ECDH) key exchange.
---

ssl.HAS_ALPN[¶](https://docs.python.org/3/library/ssl.html#ssl.HAS_ALPN "Link to this definition")
    
Whether the OpenSSL library has built-in support for the _Application-Layer Protocol Negotiation_ TLS extension as described in [**RFC 7301**](https://datatracker.ietf.org/doc/html/rfc7301.html).
Added in version 3.5. 

ssl.HAS_NEVER_CHECK_COMMON_NAME[¶](https://docs.python.org/3/library/ssl.html#ssl.HAS_NEVER_CHECK_COMMON_NAME "Link to this definition")
    
Whether the OpenSSL library has built-in support not checking subject common name and [`SSLContext.hostname_checks_common_name`](https://docs.python.org/3/library/ssl.html#ssl.SSLContext.hostname_checks_common_name "ssl.SSLContext.hostname_checks_common_name") is writeable.
Added in version 3.7. 

ssl.HAS_ECDH[¶](https://docs.python.org/3/library/ssl.html#ssl.HAS_ECDH "Link to this definition")
    
Whether the OpenSSL library has built-in support for the Elliptic Curve-based Diffie-Hellman key exchange. This should be true unless the feature was explicitly disabled by the distributor.
Added in version 3.3. 

ssl.HAS_SNI[¶](https://docs.python.org/3/library/ssl.html#ssl.HAS_SNI "Link to this definition")
    
Whether the OpenSSL library has built-in support for the _Server Name Indication_ extension (as defined in [**RFC 6066**](https://datatracker.ietf.org/doc/html/rfc6066.html)).
Added in version 3.2. 

ssl.HAS_NPN[¶](https://docs.python.org/3/library/ssl.html#ssl.HAS_NPN "Link to this definition")
    
Whether the OpenSSL library has built-in support for the _Next Protocol Negotiation_ as described in the [Application Layer Protocol Negotiation](https://en.wikipedia.org/wiki/Application-Layer_Protocol_Negotiation). When true, you can use the [`SSLContext.set_npn_protocols()`](https://docs.python.org/3/library/ssl.html#ssl.SSLContext.set_npn_protocols "ssl.SSLContext.set_npn_protocols") method to advertise which protocols you want to support.
Added in version 3.3. 

ssl.HAS_SSLv2[¶](https://docs.python.org/3/library/ssl.html#ssl.HAS_SSLv2 "Link to this definition")
    
Whether the OpenSSL library has built-in support for the SSL 2.0 protocol.
Added in version 3.7. 

ssl.HAS_SSLv3[¶](https://docs.python.org/3/library/ssl.html#ssl.HAS_SSLv3 "Link to this definition")
    
Whether the OpenSSL library has built-in support for the SSL 3.0 protocol.
Added in version 3.7. 

ssl.HAS_TLSv1[¶](https://docs.python.org/3/library/ssl.html#ssl.HAS_TLSv1 "Link to this definition")
    
Whether the OpenSSL library has built-in support for the TLS 1.0 protocol.
Added in version 3.7. 

ssl.HAS_TLSv1_1[¶](https://docs.python.org/3/library/ssl.html#ssl.HAS_TLSv1_1 "Link to this definition")
    
Whether the OpenSSL library has built-in support for the TLS 1.1 protocol.
Added in version 3.7. 

ssl.HAS_TLSv1_2[¶](https://docs.python.org/3/library/ssl.html#ssl.HAS_TLSv1_2 "Link to this definition")
    
Whether the OpenSSL library has built-in support for the TLS 1.2 protocol.
Added in version 3.7. 

ssl.HAS_TLSv1_3[¶](https://docs.python.org/3/library/ssl.html#ssl.HAS_TLSv1_3 "Link to this definition")
    
Whether the OpenSSL library has built-in support for the TLS 1.3 protocol.
Added in version 3.7. 

ssl.HAS_PSK[¶](https://docs.python.org/3/library/ssl.html#ssl.HAS_PSK "Link to this definition")
    
Whether the OpenSSL library has built-in support for TLS-PSK.
Added in version 3.13. 

ssl.CHANNEL_BINDING_TYPES[¶](https://docs.python.org/3/library/ssl.html#ssl.CHANNEL_BINDING_TYPES "Link to this definition")
    
List of supported TLS channel binding types. Strings in this list can be used as arguments to [`SSLSocket.get_channel_binding()`](https://docs.python.org/3/library/ssl.html#ssl.SSLSocket.get_channel_binding "ssl.SSLSocket.get_channel_binding").
Added in version 3.3. 

ssl.OPENSSL_VERSION[¶](https://docs.python.org/3/library/ssl.html#ssl.OPENSSL_VERSION "Link to this definition")
    
The version string of the OpenSSL library loaded by the interpreter:
>>>```
>>> ssl.OPENSSL_VERSION
'OpenSSL 1.0.2k 26 Jan 2017'

```

Added in version 3.2. 

ssl.OPENSSL_VERSION_INFO[¶](https://docs.python.org/3/library/ssl.html#ssl.OPENSSL_VERSION_INFO "Link to this definition")
    
A tuple of five integers representing version information about the OpenSSL library:
>>>```
>>> ssl.OPENSSL_VERSION_INFO
(1, 0, 2, 11, 15)

```

Added in version 3.2. 

ssl.OPENSSL_VERSION_NUMBER[¶](https://docs.python.org/3/library/ssl.html#ssl.OPENSSL_VERSION_NUMBER "Link to this definition")
    
The raw version number of the OpenSSL library, as a single integer:
>>>```
>>> ssl.OPENSSL_VERSION_NUMBER
268443839
>>> hex(ssl.OPENSSL_VERSION_NUMBER)
'0x100020bf'