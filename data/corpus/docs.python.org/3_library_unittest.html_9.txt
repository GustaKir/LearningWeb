Title: Unit Testing Framework - Classes and Functions
URL: https://docs.python.org/3/library/unittest.html
Summary: This section provides an in-depth overview of the `unittest` API in Python, focusing on the `TestCase` class, which serves as the base for creating logical test units in the framework.
---

```

## Classes and functions[¶](https://docs.python.org/3/library/unittest.html#classes-and-functions "Link to this heading")
This section describes in depth the API of [`unittest`](https://docs.python.org/3/library/unittest.html#module-unittest "unittest: Unit testing framework for Python.").
### Test cases[¶](https://docs.python.org/3/library/unittest.html#test-cases "Link to this heading") 

_class_ unittest.TestCase(_methodName ='runTest'_)[¶](https://docs.python.org/3/library/unittest.html#unittest.TestCase "Link to this definition")
    
Instances of the [`TestCase`](https://docs.python.org/3/library/unittest.html#unittest.TestCase "unittest.TestCase") class represent the logical test units in the [`unittest`](https://docs.python.org/3/library/unittest.html#module-unittest "unittest: Unit testing framework for Python.") universe. This class is intended to be used as a base class, with specific tests being implemented by concrete subclasses. This class implements the interface needed by the test runner to allow it to drive the tests, and methods that the test code can use to check for and report various kinds of failure.
Each instance of [`TestCase`](https://docs.python.org/3/library/unittest.html#unittest.TestCase "unittest.TestCase") will run a single base method: the method named _methodName_. In most uses of [`TestCase`](https://docs.python.org/3/library/unittest.html#unittest.TestCase "unittest.TestCase"), you will neither change the _methodName_ nor reimplement the default `runTest()` method.
Changed in version 3.2: [`TestCase`](https://docs.python.org/3/library/unittest.html#unittest.TestCase "unittest.TestCase") can be instantiated successfully without providing a _methodName_. This makes it easier to experiment with [`TestCase`](https://docs.python.org/3/library/unittest.html#unittest.TestCase "unittest.TestCase") from the interactive interpreter.
[`TestCase`](https://docs.python.org/3/library/unittest.html#unittest.TestCase "unittest.TestCase") instances provide three groups of methods: one group used to run the test, another used by the test implementation to check conditions and report failures, and some inquiry methods allowing information about the test itself to be gathered.
Methods in the first group (running the test) are: 

setUp()[¶](https://docs.python.org/3/library/unittest.html#unittest.TestCase.setUp "Link to this definition")
    
Method called to prepare the test fixture. This is called immediately before calling the test method; other than [`AssertionError`](https://docs.python.org/3/library/exceptions.html#AssertionError "AssertionError") or [`SkipTest`](https://docs.python.org/3/library/unittest.html#unittest.SkipTest "unittest.SkipTest"), any exception raised by this method will be considered an error rather than a test failure. The default implementation does nothing. 

tearDown()[¶](https://docs.python.org/3/library/unittest.html#unittest.TestCase.tearDown "Link to this definition")
    
Method called immediately after the test method has been called and the result recorded. This is called even if the test method raised an exception, so the implementation in subclasses may need to be particularly careful about checking internal state. Any exception, other than [`AssertionError`](https://docs.python.org/3/library/exceptions.html#AssertionError "AssertionError") or [`SkipTest`](https://docs.python.org/3/library/unittest.html#unittest.SkipTest "unittest.SkipTest"), raised by this method will be considered an additional error rather than a test failure (thus increasing the total number of reported errors). This method will only be called if the [`setUp()`](https://docs.python.org/3/library/unittest.html#unittest.TestCase.setUp "unittest.TestCase.setUp") succeeds, regardless of the outcome of the test method. The default implementation does nothing. 

setUpClass()[¶](https://docs.python.org/3/library/unittest.html#unittest.TestCase.setUpClass "Link to this definition")
    
A class method called before tests in an individual class are run. `setUpClass` is called with the class as the only argument and must be decorated as a [`classmethod()`](https://docs.python.org/3/library/functions.html#classmethod "classmethod"):
```
@classmethod
defsetUpClass(cls):
  ...

```

See [Class and Module Fixtures](https://docs.python.org/3/library/unittest.html#class-and-module-fixtures) for more details.
Added in version 3.2. 

tearDownClass()[¶](https://docs.python.org/3/library/unittest.html#unittest.TestCase.tearDownClass "Link to this definition")
    
A class method called after tests in an individual class have run. `tearDownClass` is called with the class as the only argument and must be decorated as a [`classmethod()`](https://docs.python.org/3/library/functions.html#classmethod "classmethod"):
```
@classmethod
deftearDownClass(cls):
  ...