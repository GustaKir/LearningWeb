Title: Python Standard Library Overview
URL: https://docs.python.org/3/library/index.html
Summary: This document outlines various modules in the Python Standard Library, including those related to threading, networking, interprocess communication, and internet data handling. Key modules mentioned include asyncio, socket, ssl, and email for handling asynchronous I/O, low-level networking, security, and email functionalities respectively.
---

vel threading API](https://docs.python.org/3/library/_thread.html)
  * [Networking and Interprocess Communication](https://docs.python.org/3/library/ipc.html)
    * [`asyncio` — Asynchronous I/O](https://docs.python.org/3/library/asyncio.html)
    * [`socket` — Low-level networking interface](https://docs.python.org/3/library/socket.html)
    * [`ssl` — TLS/SSL wrapper for socket objects](https://docs.python.org/3/library/ssl.html)
    * [`select` — Waiting for I/O completion](https://docs.python.org/3/library/select.html)
    * [`selectors` — High-level I/O multiplexing](https://docs.python.org/3/library/selectors.html)
    * [`signal` — Set handlers for asynchronous events](https://docs.python.org/3/library/signal.html)
    * [`mmap` — Memory-mapped file support](https://docs.python.org/3/library/mmap.html)
  * [Internet Data Handling](https://docs.python.org/3/library/netdata.html)
    * [`email` — An email and MIME handling package](https://docs.python.org/3/library/email.html)
    * [`json` — JSON encoder and decoder](https://docs.python.org/3/library/json.html)
    * [`mailbox` — Manipulate mailboxes in various formats](https://docs.python.org/3/library/mailbox.html)
    * [`mimetypes` — Map filenames to MIME types](https://docs.python.org/3/library/mimetypes.html)
    * [`base64` — Base16, Base32, Base64, Base85 Data Encodings](https://docs.python.org/3/library/base64.html)
    * [`binascii` — Convert between binary and ASCII](https://docs.python.org/3/library/binascii.html)
    * [`quopri` — Encode and decode MIME quoted-printable data](https://docs.python.org/3/library/quopri.html)
  * [Structured Markup Processing Tools](https://docs.python.org/3/library/markup.html)
    * [`html` — HyperText Markup Language support](https://docs.python.org/3/library/html.html)
    * [`html.parser` — Simple HTML and XHTML parser](https://docs.python.org/3/library/html.parser.html)
    * [`html.entities` — Definitions of HTML general entities](https://docs.python.org/3/library/html.entities.html)
    * [XML Processing Modules](https://docs.python.org/3/library/xml.html)
    * [`xml.etree.ElementTree` — The ElementTree XML API](https://docs.python.org/3/library/xml.etree.elementtree.html)
    * [`xml.dom` — The Document Object Model API](https://docs.python.org/3/library/xml.dom.html)
    * [`xml.dom.minidom` — Minimal DOM implementation](https://docs.python.org/3/library/xml.dom.minidom.html)
    * [`xml.dom.pulldom` — Support for building partial DOM trees](https://docs.python.org/3/library/xml.dom.pulldom.html)
    * [`xml.sax` — Support for SAX2 parsers](https://docs.python.org/3/library/xml.sax.html)
    * [`xml.sax.handler` — Base classes for SAX handlers](https://docs.python.org/3/library/xml.sax.handler.html)
    * [`xml.sax.saxutils` — SAX Utilities](https://docs.python.org/3/library/xml.sax.utils.html)
    * [`xml.sax.xmlreader` — Interface for XML parsers](https://docs.python.org/3/library/xml.sax.reader.html)
    * [`xml.parsers.expat` — Fast XML parsing using Expat](https://docs.python.org/3/library/pyexpat.html)
  * [Internet Protocols and Support](https://docs.python.org/3/library/internet.html)
    * [`webbrowser` — Convenient web-browser controller](https://docs.python.org/3/library/webbrowser.html)
    * [`wsgiref` — WSGI Utilities and Reference Implementation](https://docs.python.org/3/library/wsgiref.html)
    * [`urllib` — URL handling modules](https://docs.python.org/3/library/urllib.html)
    * [`urllib.request` — Extensible library for opening URLs](https://docs.python.org/3/library/urllib.request.html)
    * [`urllib.response` — Response classes used by urllib](https://docs.python.org/3/library/urllib.request.html#module-urllib.response)
    * [`urllib.parse` — Parse URLs into components](https://docs.python.org/3/library/urllib.parse.html)
    * [`urllib.error` — Exception classes raised by urllib.request](https://docs.python.org/3/library/urllib.error.html)
    * [`urllib.robotparser` — Parser for robots.txt](https://docs.python.org/3/library/urllib.robotparser.html)
    * [`http` — HTTP modules](https://docs.python.org/3/library/http.html)
    * [`http.client` — HTTP protocol client](https://docs.python.org/3/library/http.client.html)
    * [`ftplib` — FTP protocol client](https://docs.python.org/3/library/ftplib.html)
    * [`poplib` — POP3 protocol client](https://docs.python.org/3/library/poplib.html)
    * [`imaplib` — IMAP4 protocol client](https://docs.python.org/3/library/imaplib.html)
    * [`smtplib` — SMTP protocol client](https://docs.python.org/3/library/smtplib.html)
    * [`uuid` — UUID objects according to **RFC 4122**](https://docs.python.org/3/library/uuid.html)
    * [`socketserver` — A framework for network servers](https://docs.python.org/3/library/socketserver.html)
    * [`http.server` — HTTP servers](https://docs.python.org/3/library/http.server.html)
    * [`http.cookies` — HTTP state management](https://docs.python.org/3/library/http.cookies.html)
    * [`http.coo