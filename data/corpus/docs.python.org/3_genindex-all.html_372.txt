Title: W Index - Python Documentation
URL: https://docs.python.org/3/genindex-all.html
Summary: This section lists various Python functions and constants starting with 'W', including W_OK from the os module and multiple wait methods from asyncio and other modules.
---

---|---  
## W
  * [W_OK (in module os)](https://docs.python.org/3/library/os.html#os.W_OK)
  * [wait() (asyncio.Barrier method)](https://docs.python.org/3/library/asyncio-sync.html#asyncio.Barrier.wait)
    * [(asyncio.Condition method)](https://docs.python.org/3/library/asyncio-sync.html#asyncio.Condition.wait)
    * [(asyncio.Event method)](https://docs.python.org/3/library/asyncio-sync.html#asyncio.Event.wait)
    * [(asyncio.subprocess.Process method)](https://docs.python.org/3/library/asyncio-subprocess.html#asyncio.subprocess.Process.wait)
    * [(in module asyncio)](https://docs.python.org/3/library/asyncio-task.html#asyncio.wait)
    * [(in module concurrent.futures)](https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.wait)
    * [(in module multiprocessing.connection)](https://docs.python.org/3/library/multiprocessing.html#multiprocessing.connection.wait)
    * [(in module os)](https://docs.python.org/3/library/os.html#os.wait)
    * [(multiprocessing.pool.AsyncResult method)](https://docs.python.org/3/library/multiprocessing.html#multiprocessing.pool.AsyncResult.wait)
    * [(subprocess.Popen method)](https://docs.python.org/3/library/subprocess.html#subprocess.Popen.wait)
    * [(threading.Barrier method)](https://docs.python.org/3/library/threading.html#threading.Barrier.wait)
    * [(threading.Condition method)](https://docs.python.org/3/library/threading.html#threading.Condition.wait)
    * [(threading.Event method)](https://docs.python.org/3/library/threading.html#threading.Event.wait)
  * [wait3() (in module os)](https://docs.python.org/3/library/os.html#os.wait3)
  * [wait4() (in module os)](https://docs.python.org/3/library/os.html#os.wait4)
  * [wait_closed() (asyncio.Server method)](https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.Server.wait_closed)
    * [(asyncio.StreamWriter method)](https://docs.python.org/3/library/asyncio-stream.html#asyncio.StreamWriter.wait_closed)
  * [wait_for() (asyncio.Condition method)](https://docs.python.org/3/library/asyncio-sync.html#asyncio.Condition.wait_for)
    * [(in module asyncio)](https://docs.python.org/3/library/asyncio-task.html#asyncio.wait_for)
    * [(threading.Condition method)](https://docs.python.org/3/library/threading.html#threading.Condition.wait_for)
  * [wait_process() (in module test.support)](https://docs.python.org/3/library/test.html#test.support.wait_process)
  * [wait_threads_exit() (in module test.support.threading_helper)](https://docs.python.org/3/library/test.html#test.support.threading_helper.wait_threads_exit)
  * [wait_until_any_call_with() (unittest.mock.ThreadingMock method)](https://docs.python.org/3/library/unittest.mock.html#unittest.mock.ThreadingMock.wait_until_any_call_with)
  * [wait_until_called() (unittest.mock.ThreadingMock method)](https://docs.python.org/3/library/unittest.mock.html#unittest.mock.ThreadingMock.wait_until_called)
  * [waitid() (in module os)](https://docs.python.org/3/library/os.html#os.waitid)
  * [waitpid() (in module os)](https://docs.python.org/3/library/os.html#os.waitpid)
  * [waitstatus_to_exitcode() (in module os)](https://docs.python.org/3/library/os.html#os.waitstatus_to_exitcode)
  * [walk() (email.message.EmailMessage method)](https://docs.python.org/3/library/email.message.html#email.message.EmailMessage.walk)
    * [(email.message.Message method)](https://docs.python.org/3/library/email.compat32-message.html#email.message.Message.walk)
    * [(in module ast)](https://docs.python.org/3/library/ast.html#ast.walk)
    * [(in module os)](https://docs.python.org/3/library/os.html#os.walk)
    * [(pathlib.Path method)](https://docs.python.org/3/library/pathlib.html#pathlib.Path.walk)
  * [walk_packages() (in module pkgutil)](https://docs.python.org/3/library/pkgutil.html#pkgutil.walk_packages)
  * [walk_stack() (in module traceback)](https://docs.python.org/3/library/traceback.html#traceback.walk_stack)
  * [walk_tb() (in module traceback)](https://docs.python.org/3/library/traceback.html#traceback.walk_tb)
  * [walrus operator](https://docs.python.org/3/reference/expressions.html#index-87)
  * [want (doctest.Example attribute)](https://docs.python.org/3/library/doctest.html#doctest.Example.want)
  * [warn() (in module warnings)](https://docs.python.org/3/library/warnings.html#warnings.warn)
  * [warn_default_encoding (sys.flags attribute)](https://docs.python.org/3/library/sys.html#sys.flags.warn_default_encoding)
  * [warn_explicit() (in module warnings)](https://docs.python.org/3/library/warnings.html#warnings.warn_explicit)
  * [Warning](https://docs.python.org/3/library/exceptions.html#Warning), [[1]](https://docs.python.org/3/library/sqlite3.html#sqlite3.Warning)
  * [WARNING (in module logging)](https://docs.python.org/3/library/logging.html#logging.WARNING)
    * [(in module tkinter.messagebox)](https://docs.python.org/3/library/tkinter.messagebox.html#tkinter.messagebox.WARNING)
  * [warning() (in module logging)](https://doc