Title: Python Command Line Environment Variables
URL: https://docs.python.org/3/using/cmdline.html
Summary: This section describes two environment variables in Python: PYTHONINTMAXSTRDIGITS, which sets the limit for integer string conversion length starting from version 3.11, and PYTHONIOENCODING, which overrides the encoding for stdin/stdout/stderr when set before running the interpreter, effective since version 3.4.
---

PYTHONINTMAXSTRDIGITS[¶](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONINTMAXSTRDIGITS "Link to this definition")
    
If this variable is set to an integer, it is used to configure the interpreter’s global [integer string conversion length limitation](https://docs.python.org/3/library/stdtypes.html#int-max-str-digits).
Added in version 3.11. 

PYTHONIOENCODING[¶](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONIOENCODING "Link to this definition")
    
If this is set before running the interpreter, it overrides the encoding used for stdin/stdout/stderr, in the syntax `encodingname:errorhandler`. Both the `encodingname` and the `:errorhandler` parts are optional and have the same meaning as in [`str.encode()`](https://docs.python.org/3/library/stdtypes.html#str.encode "str.encode").
For stderr, the `:errorhandler` part is ignored; the handler will always be `'backslashreplace'`.
Changed in version 3.4: The `encodingname` part is now optional.
Changed in version 3.6: On Windows, the encoding specified by this variable is ignored for interactive console buffers unless [`PYTHONLEGACYWINDOWSSTDIO`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONLEGACYWINDOWSSTDIO) is also specified. Files and pipes redirected through the standard streams are not affected. 

PYTHONNOUSERSITE[¶](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONNOUSERSITE "Link to this definition")
    
If this is set, Python won’t add the [`user site-packages directory`](https://docs.python.org/3/library/site.html#site.USER_SITE "site.USER_SITE") to [`sys.path`](https://docs.python.org/3/library/sys.html#sys.path "sys.path").
See also
[**PEP 370**](https://peps.python.org/pep-0370/) – Per user site-packages directory 

PYTHONUSERBASE[¶](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONUSERBASE "Link to this definition")
    
Defines the [`user base directory`](https://docs.python.org/3/library/site.html#site.USER_BASE "site.USER_BASE"), which is used to compute the path of the [`user site-packages directory`](https://docs.python.org/3/library/site.html#site.USER_SITE "site.USER_SITE") and [installation paths](https://docs.python.org/3/library/sysconfig.html#sysconfig-user-scheme) for `python -m pip install --user`.
See also
[**PEP 370**](https://peps.python.org/pep-0370/) – Per user site-packages directory 

PYTHONEXECUTABLE[¶](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONEXECUTABLE "Link to this definition")
    
If this environment variable is set, `sys.argv[0]` will be set to its value instead of the value got through the C runtime. Only works on macOS. 

PYTHONWARNINGS[¶](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONWARNINGS "Link to this definition")
    
This is equivalent to the [`-W`](https://docs.python.org/3/using/cmdline.html#cmdoption-W) option. If set to a comma separated string, it is equivalent to specifying [`-W`](https://docs.python.org/3/using/cmdline.html#cmdoption-W) multiple times, with filters later in the list taking precedence over those earlier in the list.
The simplest settings apply a particular action unconditionally to all warnings emitted by a process (even those that are otherwise ignored by default):
```
PYTHONWARNINGS=default# Warn once per call location
PYTHONWARNINGS=error# Convert to exceptions
PYTHONWARNINGS=always# Warn every time
PYTHONWARNINGS=all# Same as PYTHONWARNINGS=always
PYTHONWARNINGS=module# Warn once per calling module
PYTHONWARNINGS=once# Warn once per Python process
PYTHONWARNINGS=ignore# Never warn