Title: Python Lexical Analysis Overview
URL: https://docs.python.org/3/contents.html
Summary: This section details the lexical analysis components of Python, including implicit line joining, blank lines, indentation, whitespace between tokens, and various token types such as identifiers and keywords.
---

Implicit line joining](https://docs.python.org/3/reference/lexical_analysis.html#implicit-line-joining)
        * [2.1.7. Blank lines](https://docs.python.org/3/reference/lexical_analysis.html#blank-lines)
        * [2.1.8. Indentation](https://docs.python.org/3/reference/lexical_analysis.html#indentation)
        * [2.1.9. Whitespace between tokens](https://docs.python.org/3/reference/lexical_analysis.html#whitespace-between-tokens)
      * [2.2. Other tokens](https://docs.python.org/3/reference/lexical_analysis.html#other-tokens)
      * [2.3. Identifiers and keywords](https://docs.python.org/3/reference/lexical_analysis.html#identifiers)
        * [2.3.1. Keywords](https://docs.python.org/3/reference/lexical_analysis.html#keywords)
        * [2.3.2. Soft Keywords](https://docs.python.org/3/reference/lexical_analysis.html#soft-keywords)
        * [2.3.3. Reserved classes of identifiers](https://docs.python.org/3/reference/lexical_analysis.html#reserved-classes-of-identifiers)
      * [2.4. Literals](https://docs.python.org/3/reference/lexical_analysis.html#literals)
        * [2.4.1. String and Bytes literals](https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals)
          * [2.4.1.1. Escape sequences](https://docs.python.org/3/reference/lexical_analysis.html#escape-sequences)
        * [2.4.2. String literal concatenation](https://docs.python.org/3/reference/lexical_analysis.html#string-literal-concatenation)
        * [2.4.3. f-strings](https://docs.python.org/3/reference/lexical_analysis.html#formatted-string-literals)
        * [2.4.4. Numeric literals](https://docs.python.org/3/reference/lexical_analysis.html#numeric-literals)
        * [2.4.5. Integer literals](https://docs.python.org/3/reference/lexical_analysis.html#integer-literals)
        * [2.4.6. Floating-point literals](https://docs.python.org/3/reference/lexical_analysis.html#floating-point-literals)
        * [2.4.7. Imaginary literals](https://docs.python.org/3/reference/lexical_analysis.html#imaginary-literals)
      * [2.5. Operators](https://docs.python.org/3/reference/lexical_analysis.html#operators)
      * [2.6. Delimiters](https://docs.python.org/3/reference/lexical_analysis.html#delimiters)
    * [3. Data model](https://docs.python.org/3/reference/datamodel.html)
      * [3.1. Objects, values and types](https://docs.python.org/3/reference/datamodel.html#objects-values-and-types)
      * [3.2. The standard type hierarchy](https://docs.python.org/3/reference/datamodel.html#the-standard-type-hierarchy)
        * [3.2.1. None](https://docs.python.org/3/reference/datamodel.html#none)
        * [3.2.2. NotImplemented](https://docs.python.org/3/reference/datamodel.html#notimplemented)
        * [3.2.3. Ellipsis](https://docs.python.org/3/reference/datamodel.html#ellipsis)
        * [3.2.4. `numbers.Number`](https://docs.python.org/3/reference/datamodel.html#numbers-number)
          * [3.2.4.1. `numbers.Integral`](https://docs.python.org/3/reference/datamodel.html#numbers-integral)
          * [3.2.4.2. `numbers.Real` (`float`)](https://docs.python.org/3/reference/datamodel.html#numbers-real-float)
          * [3.2.4.3. `numbers.Complex` (`complex`)](https://docs.python.org/3/reference/datamodel.html#numbers-complex-complex)
        * [3.2.5. Sequences](https://docs.python.org/3/reference/datamodel.html#sequences)
          * [3.2.5.1. Immutable sequences](https://docs.python.org/3/reference/datamodel.html#immutable-sequences)
          * [3.2.5.2. Mutable sequences](https://docs.python.org/3/reference/datamodel.html#mutable-sequences)
        * [3.2.6. Set types](https://docs.python.org/3/reference/datamodel.html#set-types)
        * [3.2.7. Mappings](https://docs.python.org/3/reference/datamodel.html#mappings)
          * [3.2.7.1. Dictionaries](https://docs.python.org/3/reference/datamodel.html#dictionaries)
        * [3.2.8. Callable types](https://docs.python.org/3/reference/datamodel.html#callable-types)
          * [3.2.8.1. User-defined functions](https://docs.python.org/3/reference/datamodel.html#user-defined-functions)
            * [3.2.8.1.1. Special read-only attributes](https://docs.python.org/3/reference/datamodel.html#special-read-only-attributes)
            * [3.2.8.1.2. Special writable attributes](https://docs.python.org/3/reference/datamodel.html#special-writable-attributes)
          * [3.2.8.2. Instance methods](https://docs.python.org/3/reference/datamodel.html#instance-methods)
          * [3.2.8.3. Generator functions](https://docs.python.org/3/reference/datamodel.html#generator-functions)
          * [3.2.8.4. Coroutine functions](https://docs.python.org/3/reference/datamodel.html#coroutine-functions)
          * [3.2.8.5. Asynchronous generator functions](https://docs.python.org/3/reference/datamodel.html#asynchronous-generator-functions)
          * [3.2.8.6. Built-in functions](https://docs.python.org/3/reference/datamodel.html#built-in-functions)
          * [3.2.8.7.