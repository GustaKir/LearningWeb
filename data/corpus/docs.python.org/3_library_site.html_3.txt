Title: Python Site Module Constants
URL: https://docs.python.org/3/library/site.html
Summary: This section describes the constants related to the user site-packages directory in Python. `site.ENABLE_USER_SITE` indicates whether the user site-packages are enabled (`True`), disabled by user request (`False`), or disabled for security reasons (`None`). `site.USER_SITE` provides the path to the user site-packages, defaulting to `~/.local/lib/python_X.Y_[t]/site-packages` on UNIX and similar systems.
---

site.ENABLE_USER_SITE[¶](https://docs.python.org/3/library/site.html#site.ENABLE_USER_SITE "Link to this definition")
    
Flag showing the status of the user site-packages directory. `True` means that it is enabled and was added to `sys.path`. `False` means that it was disabled by user request (with [`-s`](https://docs.python.org/3/using/cmdline.html#cmdoption-s) or [`PYTHONNOUSERSITE`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONNOUSERSITE)). `None` means it was disabled for security reasons (mismatch between user or group id and effective id) or by an administrator. 

site.USER_SITE[¶](https://docs.python.org/3/library/site.html#site.USER_SITE "Link to this definition")
    
Path to the user site-packages for the running Python. Can be `None` if [`getusersitepackages()`](https://docs.python.org/3/library/site.html#site.getusersitepackages "site.getusersitepackages") hasn’t been called yet. Default value is `~/.local/lib/python_X.Y_[t]/site-packages`for UNIX and non-framework macOS builds,`~/Library/Python/_X.Y_/lib/python/site-packages`for macOS framework builds, and` _%APPDATA%_\Python\Python_XY_\site-packages`on Windows. The optional “t” indicates the free-threaded build. This directory is a site directory, which means that`.pth` files in it will be processed. 

site.USER_BASE[¶](https://docs.python.org/3/library/site.html#site.USER_BASE "Link to this definition")
    
Path to the base directory for the user site-packages. Can be `None` if [`getuserbase()`](https://docs.python.org/3/library/site.html#site.getuserbase "site.getuserbase") hasn’t been called yet. Default value is `~/.local` for UNIX and macOS non-framework builds, `~/Library/Python/_X.Y_`for macOS framework builds, and` _%APPDATA%_\Python`for Windows. This value is used to compute the installation directories for scripts, data files, Python modules, etc. for the[ user installation scheme](https://docs.python.org/3/library/sysconfig.html#sysconfig-user-scheme). See also [`PYTHONUSERBASE`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONUSERBASE). 

site.main()[¶](https://docs.python.org/3/library/site.html#site.main "Link to this definition")
    
Adds all the standard site-specific directories to the module search path. This function is called automatically when this module is imported, unless the Python interpreter was started with the [`-S`](https://docs.python.org/3/using/cmdline.html#cmdoption-S) flag.
Changed in version 3.3: This function used to be called unconditionally. 

site.addsitedir(_sitedir_ , _known_paths =None_)[¶](https://docs.python.org/3/library/site.html#site.addsitedir "Link to this definition")
    
Add a directory to sys.path and process its `.pth` files. Typically used in [`sitecustomize`](https://docs.python.org/3/library/site.html#module-sitecustomize "sitecustomize") or [`usercustomize`](https://docs.python.org/3/library/site.html#module-usercustomize "usercustomize") (see above). 

site.getsitepackages()[¶](https://docs.python.org/3/library/site.html#site.getsitepackages "Link to this definition")
    
Return a list containing all global site-packages directories.
Added in version 3.2. 

site.getuserbase()[¶](https://docs.python.org/3/library/site.html#site.getuserbase "Link to this definition")
    
Return the path of the user base directory, [`USER_BASE`](https://docs.python.org/3/library/site.html#site.USER_BASE "site.USER_BASE"). If it is not initialized yet, this function will also set it, respecting [`PYTHONUSERBASE`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONUSERBASE).
Added in version 3.2. 

site.getusersitepackages()[¶](https://docs.python.org/3/library/site.html#site.getusersitepackages "Link to this definition")
    
Return the path of the user-specific site-packages directory, [`USER_SITE`](https://docs.python.org/3/library/site.html#site.USER_SITE "site.USER_SITE"). If it is not initialized yet, this function will also set it, respecting [`USER_BASE`](https://docs.python.org/3/library/site.html#site.USER_BASE "site.USER_BASE"). To determine if the user-specific site-packages was added to `sys.path` [`ENABLE_USER_SITE`](https://docs.python.org/3/library/site.html#site.ENABLE_USER_SITE "site.ENABLE_USER_SITE") should be used.
Added in version 3.2.
## Command Line Interface[¶](https://docs.python.org/3/library/site.html#command-line-interface "Link to this heading")
The [`site`](https://docs.python.org/3/library/site.html#module-site "site: Module responsible for site-specific configuration.") module also provides a way to get the user directories from the command line:
```
$ python-msite--user-site
/home/user/.local/lib/python3.11/site-packages