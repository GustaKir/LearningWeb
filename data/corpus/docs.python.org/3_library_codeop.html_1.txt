Title: codeop Module Overview
URL: https://docs.python.org/3/library/codeop.html
Summary: The codeop module includes the Compile and CommandCompiler classes, which provide methods for compiling program text similar to the built-in compile() function. Notably, the Compile class retains the context of any __future__ statements across compilations.
---

_class_ codeop.Compile[¶](https://docs.python.org/3/library/codeop.html#codeop.Compile "Link to this definition")
    
Instances of this class have [`__call__()`](https://docs.python.org/3/reference/datamodel.html#object.__call__ "object.__call__") methods identical in signature to the built-in function [`compile()`](https://docs.python.org/3/library/functions.html#compile "compile"), but with the difference that if the instance compiles program text containing a [`__future__`](https://docs.python.org/3/library/__future__.html#module-__future__ "__future__: Future statement definitions") statement, the instance ‘remembers’ and compiles all subsequent program texts with the statement in force. 

_class_ codeop.CommandCompiler[¶](https://docs.python.org/3/library/codeop.html#codeop.CommandCompiler "Link to this definition")
    
Instances of this class have [`__call__()`](https://docs.python.org/3/reference/datamodel.html#object.__call__ "object.__call__") methods identical in signature to [`compile_command()`](https://docs.python.org/3/library/codeop.html#codeop.compile_command "codeop.compile_command"); the difference is that if the instance compiles program text containing a [`__future__`](https://docs.python.org/3/library/__future__.html#module-__future__ "__future__: Future statement definitions") statement, the instance ‘remembers’ and compiles all subsequent program texts with the statement in force.
#### Previous topic
[`code` — Interpreter base classes](https://docs.python.org/3/library/code.html "previous chapter")
#### Next topic
[Importing Modules](https://docs.python.org/3/library/modules.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/codeop.rst)


«
### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/library/modules.html "Importing Modules") |
  * [previous](https://docs.python.org/3/library/code.html "code — Interpreter base classes") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [The Python Standard Library](https://docs.python.org/3/library/index.html) »
  * [Custom Python Interpreters](https://docs.python.org/3/library/custominterp.html) »
  * [`codeop` — Compile Python code](https://docs.python.org/3/library/codeop.html)
  * | 
  * Theme  Auto Light Dark |


© [ Copyright ](https://docs.python.org/3/copyright.html) 2001-2025, Python Software Foundation. This page is licensed under the Python Software Foundation License Version 2. Examples, recipes, and other code in the documentation are additionally licensed under the Zero Clause BSD License. See [History and License](https://docs.python.org/license.html) for more information. The Python Software Foundation is a non-profit corporation. [Please donate.](https://www.python.org/psf/donations/) Last updated on Apr 27, 2025 (05:38 UTC). [Found a bug](https://docs.python.org/bugs.html)? Created using [Sphinx](https://www.sphinx-doc.org/) 8.2.3.