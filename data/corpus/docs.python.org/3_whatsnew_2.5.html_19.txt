Title: Python 2.5 Release Notes
URL: https://docs.python.org/3/whatsnew/2.5.html
Summary: Python 2.5 introduces several new features and modules, including the `msilib` module for creating Microsoft Installer files, enhanced domain access in the `nis` module, and improved functionality in the `operator` module with support for multiple fields in `itemgetter()` and `attrgetter()`. Notable contributions were made by Gregory K. Johnson, Martin von Löwis, Ben Bell, and Raymond Hettinger.
---

```

(Contributed by Gregory K. Johnson. Funding was provided by Google’s 2005 Summer of Code.)
  * New module: the `msilib` module allows creating Microsoft Installer `.msi` files and CAB files. Some support for reading the `.msi` database is also included. (Contributed by Martin von Löwis.)
  * The `nis` module now supports accessing domains other than the system default domain by supplying a _domain_ argument to the `nis.match()` and `nis.maps()` functions. (Contributed by Ben Bell.)
  * The [`operator`](https://docs.python.org/3/library/operator.html#module-operator "operator: Functions corresponding to the standard operators.") module’s `itemgetter()` and `attrgetter()` functions now support multiple fields. A call such as `operator.attrgetter('a', 'b')` will return a function that retrieves the `a` and `b` attributes. Combining this new feature with the `sort()` method’s `key` parameter lets you easily sort lists using multiple fields. (Contributed by Raymond Hettinger.)
  * The [`optparse`](https://docs.python.org/3/library/optparse.html#module-optparse "optparse: Command-line option parsing library.") module was updated to version 1.5.1 of the Optik library. The `OptionParser` class gained an `epilog` attribute, a string that will be printed after the help message, and a `destroy()` method to break reference cycles created by the object. (Contributed by Greg Ward.)
  * The [`os`](https://docs.python.org/3/library/os.html#module-os "os: Miscellaneous operating system interfaces.") module underwent several changes. The `stat_float_times` variable now defaults to true, meaning that [`os.stat()`](https://docs.python.org/3/library/os.html#os.stat "os.stat") will now return time values as floats. (This doesn’t necessarily mean that [`os.stat()`](https://docs.python.org/3/library/os.html#os.stat "os.stat") will return times that are precise to fractions of a second; not all systems support such precision.)
Constants named [`os.SEEK_SET`](https://docs.python.org/3/library/os.html#os.SEEK_SET "os.SEEK_SET"), [`os.SEEK_CUR`](https://docs.python.org/3/library/os.html#os.SEEK_CUR "os.SEEK_CUR"), and [`os.SEEK_END`](https://docs.python.org/3/library/os.html#os.SEEK_END "os.SEEK_END") have been added; these are the parameters to the [`os.lseek()`](https://docs.python.org/3/library/os.html#os.lseek "os.lseek") function. Two new constants for locking are [`os.O_SHLOCK`](https://docs.python.org/3/library/os.html#os.O_SHLOCK "os.O_SHLOCK") and [`os.O_EXLOCK`](https://docs.python.org/3/library/os.html#os.O_EXLOCK "os.O_EXLOCK").
Two new functions, `wait3()` and `wait4()`, were added. They’re similar the `waitpid()` function which waits for a child process to exit and returns a tuple of the process ID and its exit status, but `wait3()` and `wait4()` return additional information. `wait3()` doesn’t take a process ID as input, so it waits for any child process to exit and returns a 3-tuple of _process-id_ , _exit-status_ , _resource-usage_ as returned from the [`resource.getrusage()`](https://docs.python.org/3/library/resource.html#resource.getrusage "resource.getrusage") function. `wait4(pid)` does take a process ID. (Contributed by Chad J. Schroeder.)
On FreeBSD, the [`os.stat()`](https://docs.python.org/3/library/os.html#os.stat "os.stat") function now returns times with nanosecond resolution, and the returned object now has `st_gen` and `st_birthtime`. The `st_flags` attribute is also available, if the platform supports it. (Contributed by Antti Louko and Diego Pettenò.)
  * The Python debugger provided by the [`pdb`](https://docs.python.org/3/library/pdb.html#module-pdb "pdb: The Python debugger for interactive interpreters.") module can now store lists of commands to execute when a breakpoint is reached and execution stops. Once breakpoint #1 has been created, enter `commands 1` and enter a series of commands to be executed, finishing the list with `end`. The command list can include commands that resume execution, such as `continue` or `next`. (Contributed by Grégoire Dooms.)
  * The [`pickle`](https://docs.python.org/3/library/pickle.html#module-pickle "pickle: Convert Python objects to streams of bytes and back.") and `cPickle` modules no longer accept a return value of `None` from the [`__reduce__()`](https://docs.python.org/3/library/pickle.html#object.__reduce__ "object.__reduce__") method; the method must return a tuple of arguments instead. The ability to return `None` was deprecated in Python 2.4, so this completes the removal of the feature.
  * The [`pkgutil`](https://docs.python.org/3/library/pkgutil.html#module-pkgutil "pkgutil: Utilities for the import system.") module, containing various utility functions for finding packages, was enhanced to support [**PEP 302**](https://peps.python.org/pep-0302/)’s import hooks and now also works for packages stored in ZIP-format archives. (Contributed by Phillip J. Eby.)
  * The pybench benchmark suite by Marc-André Lemburg is now included in the `Tools/pybench` d