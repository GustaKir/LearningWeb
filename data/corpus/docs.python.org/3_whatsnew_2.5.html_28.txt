Title: Porting to Python 2.5
URL: https://docs.python.org/3/whatsnew/2.5.html
Summary: This section highlights key changes in Python 2.5 that may affect code compatibility, including the shift to ASCII as the default encoding, changes to the `gi_frame` attribute of generators due to PEP 342, and the introduction of `UnicodeWarning` for invalid comparisons between Unicode and 8-bit strings.
---

## Porting to Python 2.5[¶](https://docs.python.org/3/whatsnew/2.5.html#porting-to-python-2-5 "Link to this heading")
This section lists previously described changes that may require changes to your code:
  * ASCII is now the default encoding for modules. It’s now a syntax error if a module contains string literals with 8-bit characters but doesn’t have an encoding declaration. In Python 2.4 this triggered a warning, not a syntax error.
  * Previously, the `gi_frame` attribute of a generator was always a frame object. Because of the [**PEP 342**](https://peps.python.org/pep-0342/) changes described in section [PEP 342: New Generator Features](https://docs.python.org/3/whatsnew/2.5.html#pep-342), it’s now possible for `gi_frame` to be `None`.
  * A new warning, [`UnicodeWarning`](https://docs.python.org/3/library/exceptions.html#UnicodeWarning "UnicodeWarning"), is triggered when you attempt to compare a Unicode string and an 8-bit string that can’t be converted to Unicode using the default ASCII encoding. Previously such comparisons would raise a [`UnicodeDecodeError`](https://docs.python.org/3/library/exceptions.html#UnicodeDecodeError "UnicodeDecodeError") exception.
  * Library: the [`csv`](https://docs.python.org/3/library/csv.html#module-csv "csv: Write and read tabular data to and from delimited files.") module is now stricter about multi-line quoted fields. If your files contain newlines embedded within fields, the input should be split into lines in a manner which preserves the newline characters.
  * Library: the [`locale`](https://docs.python.org/3/library/locale.html#module-locale "locale: Internationalization services.") module’s [`format()`](https://docs.python.org/3/library/functions.html#format "format") function’s would previously accept any string as long as no more than one %char specifier appeared. In Python 2.5, the argument must be exactly one %char specifier with no surrounding text.
  * Library: The [`pickle`](https://docs.python.org/3/library/pickle.html#module-pickle "pickle: Convert Python objects to streams of bytes and back.") and `cPickle` modules no longer accept a return value of `None` from the [`__reduce__()`](https://docs.python.org/3/library/pickle.html#object.__reduce__ "object.__reduce__") method; the method must return a tuple of arguments instead. The modules also no longer accept the deprecated _bin_ keyword parameter.
  * Library: The [`SimpleXMLRPCServer`](https://docs.python.org/3/library/xmlrpc.server.html#module-xmlrpc.server "xmlrpc.server: Basic XML-RPC server implementations.") and [`DocXMLRPCServer`](https://docs.python.org/3/library/xmlrpc.server.html#module-xmlrpc.server "xmlrpc.server: Basic XML-RPC server implementations.") classes now have a `rpc_paths` attribute that constrains XML-RPC operations to a limited set of URL paths; the default is to allow only `'/'` and `'/RPC2'`. Setting `rpc_paths` to `None` or an empty tuple disables this path checking.
  * C API: Many functions now use [`Py_ssize_t`](https://docs.python.org/3/c-api/intro.html#c.Py_ssize_t "Py_ssize_t") instead of int to allow processing more data on 64-bit machines. Extension code may need to make the same change to avoid warnings and to support 64-bit machines. See the earlier section [PEP 353: Using ssize_t as the index type](https://docs.python.org/3/whatsnew/2.5.html#pep-353) for a discussion of this change.
  * C API: The obmalloc changes mean that you must be careful to not mix usage of the `PyMem_*` and `PyObject_*` families of functions. Memory allocated with one family’s `*_Malloc` must be freed with the corresponding family’s `*_Free` function.