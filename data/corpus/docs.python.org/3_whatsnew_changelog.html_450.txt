Title: Library Changes in Python
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section details several bug fixes and updates in the Python library, including a fix for NameError in zipimport, updates to importlib.metadata for better EntryPoint serialization, a correction in asyncio's behavior when the ssl module is missing, and a fix for a potential IndexError in email parsing.
---

### Library[Â¶](https://docs.python.org/3/whatsnew/changelog.html#id416 "Link to this heading")
  * [bpo-39033](https://bugs.python.org/issue?@action=redirect&bpo=39033): Fix [`NameError`](https://docs.python.org/3/library/exceptions.html#NameError "NameError") in [`zipimport`](https://docs.python.org/3/library/zipimport.html#module-zipimport "zipimport: Support for importing Python modules from ZIP archives."). Patch by Karthikeyan Singaravelan.
  * [bpo-39022](https://bugs.python.org/issue?@action=redirect&bpo=39022): Update importlib.metadata to include improvements from importlib_metadata 1.3 including better serialization of EntryPoints and improved documentation for custom finders.
  * [bpo-39006](https://bugs.python.org/issue?@action=redirect&bpo=39006): Fix asyncio when the ssl module is missing: only check for ssl.SSLSocket instance if the ssl module is available.
  * [bpo-38708](https://bugs.python.org/issue?@action=redirect&bpo=38708): Fix a potential IndexError in email parser when parsing an empty msg-id.
  * [bpo-38698](https://bugs.python.org/issue?@action=redirect&bpo=38698): Add a new `InvalidMessageID` token to email parser to represent invalid Message-ID headers. Also, add defects when there is remaining value after parsing the header.
  * [bpo-38994](https://bugs.python.org/issue?@action=redirect&bpo=38994): Implement `__class_getitem__` for `os.PathLike`, `pathlib.Path`.
  * [bpo-38979](https://bugs.python.org/issue?@action=redirect&bpo=38979): Return class from `ContextVar.__class_getitem__` to simplify subclassing.
  * [bpo-38978](https://bugs.python.org/issue?@action=redirect&bpo=38978): Implement `__class_getitem__` on asyncio objects (Future, Task, Queue). Patch by Batuhan Taskaya.
  * [bpo-38916](https://bugs.python.org/issue?@action=redirect&bpo=38916): [`array.array`](https://docs.python.org/3/library/array.html#array.array "array.array"): Remove `tostring()` and `fromstring()` methods. They were aliases to `tobytes()` and `frombytes()`, deprecated since Python 3.2.
  * [bpo-38986](https://bugs.python.org/issue?@action=redirect&bpo=38986): Make repr of C accelerated TaskWakeupMethWrapper the same as of pure Python version.
  * [bpo-38982](https://bugs.python.org/issue?@action=redirect&bpo=38982): Fix asyncio `PidfdChildWatcher`: handle `waitpid()` error. If `waitpid()` is called elsewhere, `waitpid()` call fails with [`ChildProcessError`](https://docs.python.org/3/library/exceptions.html#ChildProcessError "ChildProcessError"): use return code 255 in this case, and log a warning. It ensures that the pidfd file descriptor is closed if this error occurs.
  * [bpo-38529](https://bugs.python.org/issue?@action=redirect&bpo=38529): Drop too noisy asyncio warning about deletion of a stream without explicit `.close()` call.
  * [bpo-27413](https://bugs.python.org/issue?@action=redirect&bpo=27413): Added ability to pass through `ensure_ascii` options to json.dumps in the `json.tool` command-line interface.
  * [bpo-38634](https://bugs.python.org/issue?@action=redirect&bpo=38634): The [`readline`](https://docs.python.org/3/library/readline.html#module-readline "readline: GNU readline support for Python. \(Unix\)") module now detects if Python is linked to libedit at runtime on all platforms. Previously, the check was only done on macOS.
  * [bpo-33684](https://bugs.python.org/issue?@action=redirect&bpo=33684): Fix `json.tool` failed to read a JSON file with non-ASCII characters when locale encoding is not UTF-8.
  * [bpo-38698](https://bugs.python.org/issue?@action=redirect&bpo=38698): Prevent UnboundLocalError to pop up in parse_message_id.
parse_message_id() was improperly using a token defined inside an exception handler, which was raising `UnboundLocalError` on parsing an invalid value. Patch by Claudiu Popa.
  * [bpo-38927](https://bugs.python.org/issue?@action=redirect&bpo=38927): Use `python -m pip` instead of `pip` to upgrade dependencies in venv.
  * [bpo-26730](https://bugs.python.org/issue?@action=redirect&bpo=26730): Fix `SpooledTemporaryFile.rollover()` might corrupt the file when it is in text mode. Patch by Serhiy Storchaka.
  * [bpo-38881](https://bugs.python.org/issue?@action=redirect&bpo=38881): random.choices() now raises a ValueError when all the weights are zero.
  * [bpo-38876](https://bugs.python.org/issue?@action=redirect&bpo=38876): Raise pickle.UnpicklingError when loading an item from memo for invalid input.
The previous code was raising a `KeyError` for both the Python and C implementation. This was caused by the specified index of an invalid input which did not exist in the memo structure, where the pickle stores what objects it has seen. The malformed input would have caused either a `BINGET` or `LONG_BINGET` load from the memo, leading to a `KeyError` as the determined index was bogus. Patch by Claudiu Popa.
  * [bpo-38688](https://bugs.python.org/issue?@action=redirect&bpo=38688): Calling func:`shutil.copytree` to copy a directory tree from one directory to