Title: compileall.compile_dir Function
URL: https://docs.python.org/3/library/compileall.html
Summary: The compileall.compile_dir function compiles all `.py` files in the specified directory tree. It returns true if all files compile successfully, with a configurable recursion limit through the maxlevels parameter. The function can also handle traceback paths and other options for compilation.
---

compileall.compile_dir(_dir_ , _maxlevels =sys.getrecursionlimit()_, _ddir =None_, _force =False_, _rx =None_, _quiet =0_, _legacy =False_, _optimize =-1_, _workers =1_, _invalidation_mode =None_, _*_ , _stripdir =None_, _prependdir =None_, _limit_sl_dest =None_, _hardlink_dupes =False_)[¶](https://docs.python.org/3/library/compileall.html#compileall.compile_dir "Link to this definition")
    
Recursively descend the directory tree named by _dir_ , compiling all `.py` files along the way. Return a true value if all the files compiled successfully, and a false value otherwise.
The _maxlevels_ parameter is used to limit the depth of the recursion; it defaults to `sys.getrecursionlimit()`.
If _ddir_ is given, it is prepended to the path to each file being compiled for use in compilation time tracebacks, and is also compiled in to the byte-code file, where it will be used in tracebacks and other messages in cases where the source file does not exist at the time the byte-code file is executed.
If _force_ is true, modules are re-compiled even if the timestamps are up to date.
If _rx_ is given, its `search` method is called on the complete path to each file considered for compilation, and if it returns a true value, the file is skipped. This can be used to exclude files matching a regular expression, given as a [re.Pattern](https://docs.python.org/3/library/re.html#re-objects) object.
If _quiet_ is `False` or `0` (the default), the filenames and other information are printed to standard out. Set to `1`, only errors are printed. Set to `2`, all output is suppressed.
If _legacy_ is true, byte-code files are written to their legacy locations and names, which may overwrite byte-code files created by another version of Python. The default is to write files to their [**PEP 3147**](https://peps.python.org/pep-3147/) locations and names, which allows byte-code files from multiple versions of Python to coexist.
_optimize_ specifies the optimization level for the compiler. It is passed to the built-in [`compile()`](https://docs.python.org/3/library/functions.html#compile "compile") function. Accepts also a sequence of optimization levels which lead to multiple compilations of one `.py` file in one call.
The argument _workers_ specifies how many workers are used to compile files in parallel. The default is to not use multiple workers. If the platform can’t use multiple workers and _workers_ argument is given, then sequential compilation will be used as a fallback. If _workers_ is 0, the number of cores in the system is used. If _workers_ is lower than `0`, a [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError "ValueError") will be raised.
_invalidation_mode_ should be a member of the [`py_compile.PycInvalidationMode`](https://docs.python.org/3/library/py_compile.html#py_compile.PycInvalidationMode "py_compile.PycInvalidationMode") enum and controls how the generated pycs are invalidated at runtime.
The _stripdir_ , _prependdir_ and _limit_sl_dest_ arguments correspond to the `-s`, `-p` and `-e` options described above. They may be specified as `str` or [`os.PathLike`](https://docs.python.org/3/library/os.html#os.PathLike "os.PathLike").
If _hardlink_dupes_ is true and two `.pyc` files with different optimization level have the same content, use hard links to consolidate duplicate files.
Changed in version 3.2: Added the _legacy_ and _optimize_ parameter.
Changed in version 3.5: Added the _workers_ parameter.
Changed in version 3.5: _quiet_ parameter was changed to a multilevel value.
Changed in version 3.5: The _legacy_ parameter only writes out `.pyc` files, not `.pyo` files no matter what the value of _optimize_ is.
Changed in version 3.6: Accepts a [path-like object](https://docs.python.org/3/glossary.html#term-path-like-object).
Changed in version 3.7: The _invalidation_mode_ parameter was added.
Changed in version 3.7.2: The _invalidation_mode_ parameter’s default value is updated to `None`.
Changed in version 3.8: Setting _workers_ to 0 now chooses the optimal number of cores.
Changed in version 3.9: Added _stripdir_ , _prependdir_ , _limit_sl_dest_ and _hardlink_dupes_ arguments. Default value of _maxlevels_ was changed from `10` to `sys.getrecursionlimit()`