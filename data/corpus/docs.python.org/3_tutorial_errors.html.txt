Title: Errors and Exceptions in Python
URL: https://docs.python.org/3/tutorial/errors.html
Summary: This section of the Python documentation covers various aspects of errors and exceptions, including syntax errors, how to handle exceptions, the process of raising exceptions, and exception chaining.
---

[ ![Python logo](https://docs.python.org/3/_static/py.svg) ](https://www.python.org/) dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
Theme  Auto Light Dark
### [Table of Contents](https://docs.python.org/3/contents.html)
  * [8. Errors and Exceptions](https://docs.python.org/3/tutorial/errors.html)
    * [8.1. Syntax Errors](https://docs.python.org/3/tutorial/errors.html#syntax-errors)
    * [8.2. Exceptions](https://docs.python.org/3/tutorial/errors.html#exceptions)
    * [8.3. Handling Exceptions](https://docs.python.org/3/tutorial/errors.html#handling-exceptions)
    * [8.4. Raising Exceptions](https://docs.python.org/3/tutorial/errors.html#raising-exceptions)
    * [8.5. Exception Chaining](https://docs.python.org/3/tutorial/errors.html#exception-chaining)
    * [8.6. User-defined Exceptions](https://docs.python.org/3/tutorial/errors.html#user-defined-exceptions)
    * [8.7. Defining Clean-up Actions](https://docs.python.org/3/tutorial/errors.html#defining-clean-up-actions)
    * [8.8. Predefined Clean-up Actions](https://docs.python.org/3/tutorial/errors.html#predefined-clean-up-actions)
    * [8.9. Raising and Handling Multiple Unrelated Exceptions](https://docs.python.org/3/tutorial/errors.html#raising-and-handling-multiple-unrelated-exceptions)
    * [8.10. Enriching Exceptions with Notes](https://docs.python.org/3/tutorial/errors.html#enriching-exceptions-with-notes)


#### Previous topic
[7. Input and Output](https://docs.python.org/3/tutorial/inputoutput.html "previous chapter")
#### Next topic
[9. Classes](https://docs.python.org/3/tutorial/classes.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/tutorial/errors.rst)


### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/tutorial/classes.html "9. Classes") |
  * [previous](https://docs.python.org/3/tutorial/inputoutput.html "7. Input and Output") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [The Python Tutorial](https://docs.python.org/3/tutorial/index.html) »
  * [8. Errors and Exceptions](https://docs.python.org/3/tutorial/errors.html)
  * | 
  * Theme  Auto Light Dark |


# 8. Errors and Exceptions[¶](https://docs.python.org/3/tutorial/errors.html#errors-and-exceptions "Link to this heading")
Until now error messages haven’t been more than mentioned, but if you have tried out the examples you have probably seen some. There are (at least) two distinguishable kinds of errors: _syntax errors_ and _exceptions_.
## 8.1. Syntax Errors[¶](https://docs.python.org/3/tutorial/errors.html#syntax-errors "Link to this heading")
Syntax errors, also known as parsing errors, are perhaps the most common kind of complaint you get while you are still learning Python:
>>>```
>>> while True print('Hello world')
 File "<stdin>", line 1
while True print('Hello world')
^^^^^
SyntaxError: invalid syntax

```

The parser repeats the offending line and displays little arrows pointing at the place where the error was detected. Note that this is not always the place that needs to be fixed. In the example, the error is detected at the function [`print()`](https://docs.python.org/3/library/functions.html#print "print"), since a colon (`':'`) is missing just before it.
The file name (`<stdin>` in our example) and line number are printed so you know where to look in case the input came from a file.
## 8.2. Exceptions[¶](https://docs.python.org/3/tutorial/errors.html#exceptions "Link to this heading")
Even if a statement or expression is syntactically correct, it may cause an error when an attempt is made to execute it. Errors detected during execution are called _exceptions_ and are not unconditionally fatal: you will soon learn how to handle them in Python programs. Most exceptions are not handled by programs, however, and result in error messages as shown here:
>>>