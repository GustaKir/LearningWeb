Title: os Module Timer File Descriptor Flags
URL: https://docs.python.org/3/library/os.html
Summary: This section describes two flags for the `timerfd_create()` function in the os module: `TFD_NONBLOCK`, which makes the timer file descriptor non-blocking, and `TFD_CLOEXEC`, which applies to the execution of file descriptors. `TFD_NONBLOCK` is available on Linux >= 2.6.27 with glibc >= 2.8 and was added in version 3.13.
---

os.TFD_NONBLOCK[¶](https://docs.python.org/3/library/os.html#os.TFD_NONBLOCK "Link to this definition")
    
A flag for the [`timerfd_create()`](https://docs.python.org/3/library/os.html#os.timerfd_create "os.timerfd_create") function, which sets the [`O_NONBLOCK`](https://docs.python.org/3/library/os.html#os.O_NONBLOCK "os.O_NONBLOCK") status flag for the new timer file descriptor. If [`TFD_NONBLOCK`](https://docs.python.org/3/library/os.html#os.TFD_NONBLOCK "os.TFD_NONBLOCK") is not set as a flag, [`read()`](https://docs.python.org/3/library/os.html#os.read "os.read") blocks.
[Availability](https://docs.python.org/3/library/intro.html#availability): Linux >= 2.6.27 with glibc >= 2.8
Added in version 3.13. 

os.TFD_CLOEXEC[¶](https://docs.python.org/3/library/os.html#os.TFD_CLOEXEC "Link to this definition")
    
A flag for the [`timerfd_create()`](https://docs.python.org/3/library/os.html#os.timerfd_create "os.timerfd_create") function, If [`TFD_CLOEXEC`](https://docs.python.org/3/library/os.html#os.TFD_CLOEXEC "os.TFD_CLOEXEC") is set as a flag, set close-on-exec flag for new file descriptor.
[Availability](https://docs.python.org/3/library/intro.html#availability): Linux >= 2.6.27 with glibc >= 2.8
Added in version 3.13. 

os.TFD_TIMER_ABSTIME[¶](https://docs.python.org/3/library/os.html#os.TFD_TIMER_ABSTIME "Link to this definition")
    
A flag for the [`timerfd_settime()`](https://docs.python.org/3/library/os.html#os.timerfd_settime "os.timerfd_settime") and [`timerfd_settime_ns()`](https://docs.python.org/3/library/os.html#os.timerfd_settime_ns "os.timerfd_settime_ns") functions. If this flag is set, _initial_ is interpreted as an absolute value on the timer’s clock (in UTC seconds or nanoseconds since the Unix Epoch).
[Availability](https://docs.python.org/3/library/intro.html#availability): Linux >= 2.6.27 with glibc >= 2.8
Added in version 3.13. 

os.TFD_TIMER_CANCEL_ON_SET[¶](https://docs.python.org/3/library/os.html#os.TFD_TIMER_CANCEL_ON_SET "Link to this definition")
    
A flag for the [`timerfd_settime()`](https://docs.python.org/3/library/os.html#os.timerfd_settime "os.timerfd_settime") and [`timerfd_settime_ns()`](https://docs.python.org/3/library/os.html#os.timerfd_settime_ns "os.timerfd_settime_ns") functions along with [`TFD_TIMER_ABSTIME`](https://docs.python.org/3/library/os.html#os.TFD_TIMER_ABSTIME "os.TFD_TIMER_ABSTIME"). The timer is cancelled when the time of the underlying clock changes discontinuously.
[Availability](https://docs.python.org/3/library/intro.html#availability): Linux >= 2.6.27 with glibc >= 2.8
Added in version 3.13.
### Linux extended attributes[¶](https://docs.python.org/3/library/os.html#linux-extended-attributes "Link to this heading")
Added in version 3.3.
These functions are all available on Linux only. 

os.getxattr(_path_ , _attribute_ , _*_ , _follow_symlinks =True_)[¶](https://docs.python.org/3/library/os.html#os.getxattr "Link to this definition")
    
Return the value of the extended filesystem attribute _attribute_ for _path_. _attribute_ can be bytes or str (directly or indirectly through the [`PathLike`](https://docs.python.org/3/library/os.html#os.PathLike "os.PathLike") interface). If it is str, it is encoded with the filesystem encoding.
This function can support [specifying a file descriptor](https://docs.python.org/3/library/os.html#path-fd) and [not following symlinks](https://docs.python.org/3/library/os.html#follow-symlinks).
Raises an [auditing event](https://docs.python.org/3/library/sys.html#auditing) `os.getxattr` with arguments `path`, `attribute`.
Changed in version 3.6: Accepts a [path-like object](https://docs.python.org/3/glossary.html#term-path-like-object) for _path_ and _attribute_. 

os.listxattr(_path =None_, _*_ , _follow_symlinks =True_)[¶](https://docs.python.org/3/library/os.html#os.listxattr "Link to this definition")
    
Return a list of the extended filesystem attributes on _path_. The attributes in the list are represented as strings decoded with the filesystem encoding. If _path_ is `None`, [`listxattr()`](https://docs.python.org/3/library/os.html#os.listxattr "os.listxattr") will examine the current directory.
This function can support [specifying a file descriptor](https://docs.python.org/3/library/os.html#path-fd) and [not following symlinks](https://docs.python.org/3/library/os.html#follow-symlinks).
Raises an [auditing event](https://docs.python.org/3/library/sys.html#auditing) `os.listxattr` with argument `path`.
Changed in version 3.6: Accepts a [path-like object](https://docs.python.org/3/glossary.html#term-path-like-object).