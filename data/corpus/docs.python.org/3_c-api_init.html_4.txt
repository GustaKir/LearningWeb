Title: Py_LegacyWindowsFSEncodingFlag
URL: https://docs.python.org/3/c-api/init.html
Summary: The `Py_LegacyWindowsFSEncodingFlag` API is for backward compatibility, recommending the use of `PyPreConfig.legacy_windows_fs_encoding` instead. If set non-zero, it configures the filesystem to use `mbcs` encoding with a `replace` error handler rather than UTF-8 with `surrogatepass`. It can be activated by the `PYTHONLEGACYWINDOWSFSENCODING` environment variable.
---

intPy_LegacyWindowsFSEncodingFlag[¶](https://docs.python.org/3/c-api/init.html#c.Py_LegacyWindowsFSEncodingFlag "Link to this definition")
    
This API is kept for backward compatibility: setting [`PyPreConfig.legacy_windows_fs_encoding`](https://docs.python.org/3/c-api/init_config.html#c.PyPreConfig.legacy_windows_fs_encoding "PyPreConfig.legacy_windows_fs_encoding") should be used instead, see [Python Initialization Configuration](https://docs.python.org/3/c-api/init_config.html#init-config).
If the flag is non-zero, use the `mbcs` encoding with `replace` error handler, instead of the UTF-8 encoding with `surrogatepass` error handler, for the [filesystem encoding and error handler](https://docs.python.org/3/glossary.html#term-filesystem-encoding-and-error-handler).
Set to `1` if the [`PYTHONLEGACYWINDOWSFSENCODING`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONLEGACYWINDOWSFSENCODING) environment variable is set to a non-empty string.
See [**PEP 529**](https://peps.python.org/pep-0529/) for more details.
[Availability](https://docs.python.org/3/library/intro.html#availability): Windows.
Deprecated since version 3.12, will be removed in version 3.14. 

intPy_LegacyWindowsStdioFlag[¶](https://docs.python.org/3/c-api/init.html#c.Py_LegacyWindowsStdioFlag "Link to this definition")
    
This API is kept for backward compatibility: setting [`PyConfig.legacy_windows_stdio`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.legacy_windows_stdio "PyConfig.legacy_windows_stdio") should be used instead, see [Python Initialization Configuration](https://docs.python.org/3/c-api/init_config.html#init-config).
If the flag is non-zero, use [`io.FileIO`](https://docs.python.org/3/library/io.html#io.FileIO "io.FileIO") instead of `io._WindowsConsoleIO` for [`sys`](https://docs.python.org/3/library/sys.html#module-sys "sys: Access system-specific parameters and functions.") standard streams.
Set to `1` if the [`PYTHONLEGACYWINDOWSSTDIO`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONLEGACYWINDOWSSTDIO) environment variable is set to a non-empty string.
See [**PEP 528**](https://peps.python.org/pep-0528/) for more details.
[Availability](https://docs.python.org/3/library/intro.html#availability): Windows.
Deprecated since version 3.12, will be removed in version 3.14. 

intPy_NoSiteFlag[¶](https://docs.python.org/3/c-api/init.html#c.Py_NoSiteFlag "Link to this definition")
    
This API is kept for backward compatibility: setting [`PyConfig.site_import`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.site_import "PyConfig.site_import") should be used instead, see [Python Initialization Configuration](https://docs.python.org/3/c-api/init_config.html#init-config).
Disable the import of the module [`site`](https://docs.python.org/3/library/site.html#module-site "site: Module responsible for site-specific configuration.") and the site-dependent manipulations of [`sys.path`](https://docs.python.org/3/library/sys.html#sys.path "sys.path") that it entails. Also disable these manipulations if [`site`](https://docs.python.org/3/library/site.html#module-site "site: Module responsible for site-specific configuration.") is explicitly imported later (call [`site.main()`](https://docs.python.org/3/library/site.html#site.main "site.main") if you want them to be triggered).
Set by the [`-S`](https://docs.python.org/3/using/cmdline.html#cmdoption-S) option.
Deprecated since version 3.12, will be removed in version 3.14. 

intPy_NoUserSiteDirectory[¶](https://docs.python.org/3/c-api/init.html#c.Py_NoUserSiteDirectory "Link to this definition")
    
This API is kept for backward compatibility: setting [`PyConfig.user_site_directory`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.user_site_directory "PyConfig.user_site_directory") should be used instead, see [Python Initialization Configuration](https://docs.python.org/3/c-api/init_config.html#init-config).
Don’t add the [`user site-packages directory`](https://docs.python.org/3/library/site.html#site.USER_SITE "site.USER_SITE") to [`sys.path`](https://docs.python.org/3/library/sys.html#sys.path "sys.path").
Set by the [`-s`](https://docs.python.org/3/using/cmdline.html#cmdoption-s) and [`-I`](https://docs.python.org/3/using/cmdline.html#cmdoption-I) options, and the [`PYTHONNOUSERSITE`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONNOUSERSITE) environment variable.
Deprecated since version 3.12, will be removed in version 3.14.