Title: Overview of plistlib Dictionary Behavior and XML Parsing
URL: https://docs.python.org/3/library/plistlib.html
Summary: This section details the _dict_type_ used for dictionaries from plist files and the handling of datetime fields when _aware_datetime_ is true. It explains how XML data in the FMT_XML format is parsed using the Expat parser, which can raise exceptions for ill-formed XML. The plist parser ignores unknown elements and raises an InvalidFileException for unreadable files.
---

The _dict_type_ is the type used for dictionaries that are read from the plist file.
When _aware_datetime_ is true, fields with type `datetime.datetime` will be created as [aware object](https://docs.python.org/3/library/datetime.html#datetime-naive-aware), with `tzinfo` as [`datetime.UTC`](https://docs.python.org/3/library/datetime.html#datetime.UTC "datetime.UTC").
XML data for the [`FMT_XML`](https://docs.python.org/3/library/plistlib.html#plistlib.FMT_XML "plistlib.FMT_XML") format is parsed using the Expat parser from [`xml.parsers.expat`](https://docs.python.org/3/library/pyexpat.html#module-xml.parsers.expat "xml.parsers.expat: An interface to the Expat non-validating XML parser.") – see its documentation for possible exceptions on ill-formed XML. Unknown elements will simply be ignored by the plist parser.
The parser raises [`InvalidFileException`](https://docs.python.org/3/library/plistlib.html#plistlib.InvalidFileException "plistlib.InvalidFileException") when the file cannot be parsed.
Added in version 3.4.
Changed in version 3.13: The keyword-only parameter _aware_datetime_ has been added. 

plistlib.loads(_data_ , _*_ , _fmt =None_, _dict_type =dict_, _aware_datetime =False_)[¶](https://docs.python.org/3/library/plistlib.html#plistlib.loads "Link to this definition")
    
Load a plist from a bytes or string object. See [`load()`](https://docs.python.org/3/library/plistlib.html#plistlib.load "plistlib.load") for an explanation of the keyword arguments.
Added in version 3.4.
Changed in version 3.13: _data_ can be a string when _fmt_ equals [`FMT_XML`](https://docs.python.org/3/library/plistlib.html#plistlib.FMT_XML "plistlib.FMT_XML"). 

plistlib.dump(_value_ , _fp_ , _*_ , _fmt =FMT_XML_, _sort_keys =True_, _skipkeys =False_, _aware_datetime =False_)[¶](https://docs.python.org/3/library/plistlib.html#plistlib.dump "Link to this definition")
    
Write _value_ to a plist file. _fp_ should be a writable, binary file object.
The _fmt_ argument specifies the format of the plist file and can be one of the following values:
  * [`FMT_XML`](https://docs.python.org/3/library/plistlib.html#plistlib.FMT_XML "plistlib.FMT_XML"): XML formatted plist file
  * [`FMT_BINARY`](https://docs.python.org/3/library/plistlib.html#plistlib.FMT_BINARY "plistlib.FMT_BINARY"): Binary formatted plist file


When _sort_keys_ is true (the default) the keys for dictionaries will be written to the plist in sorted order, otherwise they will be written in the iteration order of the dictionary.
When _skipkeys_ is false (the default) the function raises [`TypeError`](https://docs.python.org/3/library/exceptions.html#TypeError "TypeError") when a key of a dictionary is not a string, otherwise such keys are skipped.
When _aware_datetime_ is true and any field with type `datetime.datetime` is set as an [aware object](https://docs.python.org/3/library/datetime.html#datetime-naive-aware), it will convert to UTC timezone before writing it.
A [`TypeError`](https://docs.python.org/3/library/exceptions.html#TypeError "TypeError") will be raised if the object is of an unsupported type or a container that contains objects of unsupported types.
An [`OverflowError`](https://docs.python.org/3/library/exceptions.html#OverflowError "OverflowError") will be raised for integer values that cannot be represented in (binary) plist files.
Added in version 3.4.
Changed in version 3.13: The keyword-only parameter _aware_datetime_ has been added. 

plistlib.dumps(_value_ , _*_ , _fmt =FMT_XML_, _sort_keys =True_, _skipkeys =False_, _aware_datetime =False_)[¶](https://docs.python.org/3/library/plistlib.html#plistlib.dumps "Link to this definition")
    
Return _value_ as a plist-formatted bytes object. See the documentation for [`dump()`](https://docs.python.org/3/library/plistlib.html#plistlib.dump "plistlib.dump") for an explanation of the keyword arguments of this function.
Added in version 3.4.
The following classes are available: 

_class_ plistlib.UID(_data_)[¶](https://docs.python.org/3/library/plistlib.html#plistlib.UID "Link to this definition")
    
Wraps an [`int`](https://docs.python.org/3/library/functions.html#int "int"). This is used when reading or writing NSKeyedArchiver encoded data, which contains UID (see PList manual). 

data[¶](https://docs.python.org/3/library/plistlib.html#plistlib.UID.data "Link to this definition")
    
Int value of the UID. It must be in the range `0 <= data < 2**64`.
Added in version 3.8.
The following constants are available: 

plistlib.FMT_XML[¶](https://docs.python.org/3/library/plistlib.html#plistlib.FMT_XML "Link to this definition")
    
The XML format for plist files.
Added in version 3.4. 

plistlib.FMT_BINARY[¶](https://docs.python.org/3/library/plistlib.html#plistlib.FMT_BINARY "Link to this definition")
    
The binary format for plist files
Added in version 3.4.
The module defines the following exceptions: