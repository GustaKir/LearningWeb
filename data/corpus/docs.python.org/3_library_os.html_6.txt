Title: OS Module - Process ID Functions
URL: https://docs.python.org/3/library/os.html
Summary: This section describes functions in the os module for retrieving process identifiers on Unix systems. It includes os.getegid() for getting the effective group ID, os.geteuid() for the effective user ID, and os.getgid() for the real group ID, with notes on their availability.
---

os.getegid()[¶](https://docs.python.org/3/library/os.html#os.getegid "Link to this definition")
    
Return the effective group id of the current process. This corresponds to the “set id” bit on the file being executed in the current process.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix, not WASI. 

os.geteuid()[¶](https://docs.python.org/3/library/os.html#os.geteuid "Link to this definition")
    
Return the current process’s effective user id.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix, not WASI. 

os.getgid()[¶](https://docs.python.org/3/library/os.html#os.getgid "Link to this definition")
    
Return the real group id of the current process.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix.
The function is a stub on WASI, see [WebAssembly platforms](https://docs.python.org/3/library/intro.html#wasm-availability) for more information. 

os.getgrouplist(_user_ , _group_ , _/_)[¶](https://docs.python.org/3/library/os.html#os.getgrouplist "Link to this definition")
    
Return list of group ids that _user_ belongs to. If _group_ is not in the list, it is included; typically, _group_ is specified as the group ID field from the password record for _user_ , because that group ID will otherwise be potentially omitted.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix, not WASI.
Added in version 3.3. 

os.getgroups()[¶](https://docs.python.org/3/library/os.html#os.getgroups "Link to this definition")
    
Return list of supplemental group ids associated with the current process.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix, not WASI.
Note
On macOS, [`getgroups()`](https://docs.python.org/3/library/os.html#os.getgroups "os.getgroups") behavior differs somewhat from other Unix platforms. If the Python interpreter was built with a deployment target of `10.5` or earlier, [`getgroups()`](https://docs.python.org/3/library/os.html#os.getgroups "os.getgroups") returns the list of effective group ids associated with the current user process; this list is limited to a system-defined number of entries, typically 16, and may be modified by calls to [`setgroups()`](https://docs.python.org/3/library/os.html#os.setgroups "os.setgroups") if suitably privileged. If built with a deployment target greater than `10.5`, [`getgroups()`](https://docs.python.org/3/library/os.html#os.getgroups "os.getgroups") returns the current group access list for the user associated with the effective user id of the process; the group access list may change over the lifetime of the process, it is not affected by calls to [`setgroups()`](https://docs.python.org/3/library/os.html#os.setgroups "os.setgroups"), and its length is not limited to 16. The deployment target value, `MACOSX_DEPLOYMENT_TARGET`, can be obtained with [`sysconfig.get_config_var()`](https://docs.python.org/3/library/sysconfig.html#sysconfig.get_config_var "sysconfig.get_config_var"). 

os.getlogin()[¶](https://docs.python.org/3/library/os.html#os.getlogin "Link to this definition")
    
Return the name of the user logged in on the controlling terminal of the process. For most purposes, it is more useful to use [`getpass.getuser()`](https://docs.python.org/3/library/getpass.html#getpass.getuser "getpass.getuser") since the latter checks the environment variables `LOGNAME` or `USERNAME` to find out who the user is, and falls back to `pwd.getpwuid(os.getuid())[0]` to get the login name of the current real user id.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix, Windows, not WASI. 

os.getpgid(_pid_)[¶](https://docs.python.org/3/library/os.html#os.getpgid "Link to this definition")
    
Return the process group id of the process with process id _pid_. If _pid_ is 0, the process group id of the current process is returned.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix, not WASI. 

os.getpgrp()[¶](https://docs.python.org/3/library/os.html#os.getpgrp "Link to this definition")
    
Return the id of the current process group.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix, not WASI. 

os.getpid()[¶](https://docs.python.org/3/library/os.html#os.getpid "Link to this definition")
    
Return the current process id.
The function is a stub on WASI, see [WebAssembly platforms](https://docs.python.org/3/library/intro.html#wasm-availability) for more information. 

os.getppid()[¶](https://docs.python.org/3/library/os.html#os.getppid "Link to this definition")
    
Return the parent’s process id. When the parent process has exited, on Unix the id returned is the one of the init process (1), on Windows it is still the same id, which may be already reused by another process.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix, Windows, not WASI.
Changed in version 3.2: Added support for Windows.