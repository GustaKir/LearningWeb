Title: Changes in Pickler and Unpickler Behavior
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: The recent updates prevent infinite recursion when using `super().persistent_id()` and `super().persistent_load()` in subclasses of `pickle.Pickler` and `pickle.Unpickler`. Additionally, improvements have been made to unittest's `assert_has_calls()` to indicate if no actual calls were made, and the backlog for `multiprocessing.connection.Listener` has been increased for better performance.
---

Calling `super().persistent_id()` and `super().persistent_load()` in subclasses of the C implementation of [`pickle.Pickler`](https://docs.python.org/3/library/pickle.html#pickle.Pickler "pickle.Pickler") and [`pickle.Unpickler`](https://docs.python.org/3/library/pickle.html#pickle.Unpickler "pickle.Unpickler") classes no longer causes infinite recursion.
  * [gh-113569](https://github.com/python/cpython/issues/113569): Indicate if there were no actual calls in unittest [`assert_has_calls()`](https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock.assert_has_calls "unittest.mock.Mock.assert_has_calls") failure.
  * [gh-101225](https://github.com/python/cpython/issues/101225): Increase the backlog for [`multiprocessing.connection.Listener`](https://docs.python.org/3/library/multiprocessing.html#multiprocessing.connection.Listener "multiprocessing.connection.Listener") objects created by `multiprocessing.manager` and `multiprocessing.resource_sharer` to significantly reduce the risk of getting a connection refused error when creating a [`multiprocessing.connection.Connection`](https://docs.python.org/3/library/multiprocessing.html#multiprocessing.connection.Connection "multiprocessing.connection.Connection") to them.
  * [gh-113568](https://github.com/python/cpython/issues/113568): Raise audit events from [`pathlib.Path`](https://docs.python.org/3/library/pathlib.html#pathlib.Path "pathlib.Path") and not its private base class `PathBase`.
  * [gh-113543](https://github.com/python/cpython/issues/113543): Make sure that `webbrowser.MacOSXOSAScript` sends `webbrowser.open` audit event.
  * [gh-113028](https://github.com/python/cpython/issues/113028): When a second reference to a string appears in the input to [`pickle`](https://docs.python.org/3/library/pickle.html#module-pickle "pickle: Convert Python objects to streams of bytes and back."), and the Python implementation is in use, we are guaranteed that a single copy gets pickled and a single object is shared when reloaded. Previously, in protocol 0, when a string contained certain characters (e.g. newline) it resulted in duplicate objects.
  * [gh-113421](https://github.com/python/cpython/issues/113421): Fix multiprocessing logger for `%(filename)s`.
  * [gh-111784](https://github.com/python/cpython/issues/111784): Fix segfaults in the `_elementtree` module. Fix first segfault during deallocation of `_elementtree.XMLParser` instances by keeping strong reference to `pyexpat` module in module state for capsule lifetime. Fix second segfault which happens in the same deallocation process by keeping strong reference to `_elementtree` module in `XMLParser` structure for `_elementtree` module lifetime.
  * [gh-113407](https://github.com/python/cpython/issues/113407): Fix import of [`unittest.mock`](https://docs.python.org/3/library/unittest.mock.html#module-unittest.mock "unittest.mock: Mock object library.") when CPython is built without docstrings.
  * [gh-113320](https://github.com/python/cpython/issues/113320): Fix regression in Python 3.12 where [`Protocol`](https://docs.python.org/3/library/typing.html#typing.Protocol "typing.Protocol") classes that were not marked as [`runtime-checkable`](https://docs.python.org/3/library/typing.html#typing.runtime_checkable "typing.runtime_checkable") would be unnecessarily introspected, potentially causing exceptions to be raised if the protocol had problematic members. Patch by Alex Waygood.
  * [gh-53502](https://github.com/python/cpython/issues/53502): Add a new option `aware_datetime` in [`plistlib`](https://docs.python.org/3/library/plistlib.html#module-plistlib "plistlib: Generate and parse Apple plist files.") to loads or dumps aware datetime.
  * [gh-113358](https://github.com/python/cpython/issues/113358): Fix rendering tracebacks with exceptions with a broken __getattr__
  * [gh-113214](https://github.com/python/cpython/issues/113214): Fix an `AttributeError` during asyncio SSL protocol aborts in SSL-over-SSL scenarios.
  * [gh-113246](https://github.com/python/cpython/issues/113246): Update bundled pip to 23.3.2.
  * [gh-87264](https://github.com/python/cpython/issues/87264): Fixed tarfile list() method to show file type.
  * [gh-112182](https://github.com/python/cpython/issues/112182): `asyncio.futures.Future.set_exception()` now transforms [`StopIteration`](https://docs.python.org/3/library/exceptions.html#StopIteration "StopIteration") into [`RuntimeError`](https://docs.python.org/3/library/exceptions.html#RuntimeError "RuntimeError") instead of hanging or other misbehavior.