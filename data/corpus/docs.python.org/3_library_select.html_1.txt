Title: select Module - Polling Objects
URL: https://docs.python.org/3/library/select.html
Summary: This section describes the `devpoll()` function, which is supported only on Solaris, and returns a `/dev/poll` polling object. It highlights limitations regarding the number of file descriptors, stating that reducing the limit causes failures, while increasing it may return incomplete results. The function was introduced in version 3.3 and changed in 3.4 to make new file descriptors non-inheritable. It also introduces `epoll()` for Linux systems.
---

select.devpoll()[¶](https://docs.python.org/3/library/select.html#select.devpoll "Link to this definition")
    
(Only supported on Solaris and derivatives.) Returns a `/dev/poll` polling object; see section [/dev/poll Polling Objects](https://docs.python.org/3/library/select.html#devpoll-objects) below for the methods supported by devpoll objects.
`devpoll()` objects are linked to the number of file descriptors allowed at the time of instantiation. If your program reduces this value, `devpoll()` will fail. If your program increases this value, `devpoll()` may return an incomplete list of active file descriptors.
The new file descriptor is [non-inheritable](https://docs.python.org/3/library/os.html#fd-inheritance).
Added in version 3.3.
Changed in version 3.4: The new file descriptor is now non-inheritable. 

select.epoll(_sizehint =-1_, _flags =0_)[¶](https://docs.python.org/3/library/select.html#select.epoll "Link to this definition")
    
(Only supported on Linux 2.5.44 and newer.) Return an edge polling object, which can be used as Edge or Level Triggered interface for I/O events.
_sizehint_ informs epoll about the expected number of events to be registered. It must be positive, or `-1` to use the default. It is only used on older systems where `epoll_create1()` is not available; otherwise it has no effect (though its value is still checked).
_flags_ is deprecated and completely ignored. However, when supplied, its value must be `0` or `select.EPOLL_CLOEXEC`, otherwise `OSError` is raised.
See the [Edge and Level Trigger Polling (epoll) Objects](https://docs.python.org/3/library/select.html#epoll-objects) section below for the methods supported by epolling objects.
`epoll` objects support the context management protocol: when used in a [`with`](https://docs.python.org/3/reference/compound_stmts.html#with) statement, the new file descriptor is automatically closed at the end of the block.
The new file descriptor is [non-inheritable](https://docs.python.org/3/library/os.html#fd-inheritance).
Changed in version 3.3: Added the _flags_ parameter.
Changed in version 3.4: Support for the [`with`](https://docs.python.org/3/reference/compound_stmts.html#with) statement was added. The new file descriptor is now non-inheritable.
Deprecated since version 3.4: The _flags_ parameter. `select.EPOLL_CLOEXEC` is used by default now. Use [`os.set_inheritable()`](https://docs.python.org/3/library/os.html#os.set_inheritable "os.set_inheritable") to make the file descriptor inheritable. 

select.poll()[¶](https://docs.python.org/3/library/select.html#select.poll "Link to this definition")
    
(Not supported by all operating systems.) Returns a polling object, which supports registering and unregistering file descriptors, and then polling them for I/O events; see section [Polling Objects](https://docs.python.org/3/library/select.html#poll-objects) below for the methods supported by polling objects. 

select.kqueue()[¶](https://docs.python.org/3/library/select.html#select.kqueue "Link to this definition")
    
(Only supported on BSD.) Returns a kernel queue object; see section [Kqueue Objects](https://docs.python.org/3/library/select.html#kqueue-objects) below for the methods supported by kqueue objects.
The new file descriptor is [non-inheritable](https://docs.python.org/3/library/os.html#fd-inheritance).
Changed in version 3.4: The new file descriptor is now non-inheritable. 

select.kevent(_ident_ , _filter =KQ_FILTER_READ_, _flags =KQ_EV_ADD_, _fflags =0_, _data =0_, _udata =0_)[¶](https://docs.python.org/3/library/select.html#select.kevent "Link to this definition")
    
(Only supported on BSD.) Returns a kernel event object; see section [Kevent Objects](https://docs.python.org/3/library/select.html#kevent-objects) below for the methods supported by kevent objects. 

select.select(_rlist_ , _wlist_ , _xlist_[, _timeout_])[¶](https://docs.python.org/3/library/select.html#select.select "Link to this definition")
    
This is a straightforward interface to the Unix `select()` system call. The first three arguments are iterables of ‘waitable objects’: either integers representing file descriptors or objects with a parameterless method named [`fileno()`](https://docs.python.org/3/library/io.html#io.IOBase.fileno "io.IOBase.fileno") returning such an integer:
  * _rlist_ : wait until ready for reading
  * _wlist_ : wait until ready for writing
  * _xlist_ : wait for an “exceptional condition” (see the manual page for what your system considers such a condition)