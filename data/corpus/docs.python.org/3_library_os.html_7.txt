Title: os.getpriority() - Retrieve Process Scheduling Priority
URL: https://docs.python.org/3/library/os.html
Summary: The os.getpriority() function retrieves the scheduling priority of a program based on the specified _which_ parameter (either PRIO_PROCESS, PRIO_PGRP, or PRIO_USER) and the corresponding _who_ parameter, which represents either a process identifier, process group identifier, or user ID. A value of zero for _who_ indicates the calling process or its group.
---

os.getpriority(_which_ , _who_)[¶](https://docs.python.org/3/library/os.html#os.getpriority "Link to this definition")
    
Get program scheduling priority. The value _which_ is one of [`PRIO_PROCESS`](https://docs.python.org/3/library/os.html#os.PRIO_PROCESS "os.PRIO_PROCESS"), [`PRIO_PGRP`](https://docs.python.org/3/library/os.html#os.PRIO_PGRP "os.PRIO_PGRP"), or [`PRIO_USER`](https://docs.python.org/3/library/os.html#os.PRIO_USER "os.PRIO_USER"), and _who_ is interpreted relative to _which_ (a process identifier for [`PRIO_PROCESS`](https://docs.python.org/3/library/os.html#os.PRIO_PROCESS "os.PRIO_PROCESS"), process group identifier for [`PRIO_PGRP`](https://docs.python.org/3/library/os.html#os.PRIO_PGRP "os.PRIO_PGRP"), and a user ID for [`PRIO_USER`](https://docs.python.org/3/library/os.html#os.PRIO_USER "os.PRIO_USER")). A zero value for _who_ denotes (respectively) the calling process, the process group of the calling process, or the real user ID of the calling process.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix, not WASI.
Added in version 3.3. 

os.PRIO_PROCESS[¶](https://docs.python.org/3/library/os.html#os.PRIO_PROCESS "Link to this definition")


os.PRIO_PGRP[¶](https://docs.python.org/3/library/os.html#os.PRIO_PGRP "Link to this definition")


os.PRIO_USER[¶](https://docs.python.org/3/library/os.html#os.PRIO_USER "Link to this definition")
    
Parameters for the [`getpriority()`](https://docs.python.org/3/library/os.html#os.getpriority "os.getpriority") and [`setpriority()`](https://docs.python.org/3/library/os.html#os.setpriority "os.setpriority") functions.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix, not WASI.
Added in version 3.3. 

os.PRIO_DARWIN_THREAD[¶](https://docs.python.org/3/library/os.html#os.PRIO_DARWIN_THREAD "Link to this definition")


os.PRIO_DARWIN_PROCESS[¶](https://docs.python.org/3/library/os.html#os.PRIO_DARWIN_PROCESS "Link to this definition")


os.PRIO_DARWIN_BG[¶](https://docs.python.org/3/library/os.html#os.PRIO_DARWIN_BG "Link to this definition")


os.PRIO_DARWIN_NONUI[¶](https://docs.python.org/3/library/os.html#os.PRIO_DARWIN_NONUI "Link to this definition")
    
Parameters for the [`getpriority()`](https://docs.python.org/3/library/os.html#os.getpriority "os.getpriority") and [`setpriority()`](https://docs.python.org/3/library/os.html#os.setpriority "os.setpriority") functions.
[Availability](https://docs.python.org/3/library/intro.html#availability): macOS
Added in version 3.12. 

os.getresuid()[¶](https://docs.python.org/3/library/os.html#os.getresuid "Link to this definition")
    
Return a tuple (ruid, euid, suid) denoting the current process’s real, effective, and saved user ids.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix, not WASI.
Added in version 3.2. 

os.getresgid()[¶](https://docs.python.org/3/library/os.html#os.getresgid "Link to this definition")
    
Return a tuple (rgid, egid, sgid) denoting the current process’s real, effective, and saved group ids.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix, not WASI.
Added in version 3.2. 

os.getuid()[¶](https://docs.python.org/3/library/os.html#os.getuid "Link to this definition")
    
Return the current process’s real user id.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix.
The function is a stub on WASI, see [WebAssembly platforms](https://docs.python.org/3/library/intro.html#wasm-availability) for more information. 

os.initgroups(_username_ , _gid_ , _/_)[¶](https://docs.python.org/3/library/os.html#os.initgroups "Link to this definition")
    
Call the system initgroups() to initialize the group access list with all of the groups of which the specified username is a member, plus the specified group id.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix, not WASI, not Android.
Added in version 3.2.