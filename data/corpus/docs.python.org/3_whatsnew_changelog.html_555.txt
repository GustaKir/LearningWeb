Title: Changelog Summary for Windows
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section details updates and fixes for the Windows platform in Python, including enhancements to API consistency, improvements to the py launcher, and bug fixes related to venv and multiprocessing. Notable changes include allowing ARM builds with MSVC and addressing handle leaks in os.stat.
---

### Windows[¶](https://docs.python.org/3/whatsnew/changelog.html#id479 "Link to this heading")
  * [bpo-35890](https://bugs.python.org/issue?@action=redirect&bpo=35890): Fix API calling consistency of GetVersionEx and wcstok.
  * [bpo-32560](https://bugs.python.org/issue?@action=redirect&bpo=32560): The `py` launcher now forwards its `STARTUPINFO` structure to child processes.
  * [bpo-35854](https://bugs.python.org/issue?@action=redirect&bpo=35854): Fix EnvBuilder and –symlinks in venv on Windows
  * [bpo-35811](https://bugs.python.org/issue?@action=redirect&bpo=35811): Avoid propagating venv settings when launching via py.exe
  * [bpo-35797](https://bugs.python.org/issue?@action=redirect&bpo=35797): Fix default executable used by the multiprocessing module
  * [bpo-35758](https://bugs.python.org/issue?@action=redirect&bpo=35758): Allow building on ARM with MSVC.
  * [bpo-29734](https://bugs.python.org/issue?@action=redirect&bpo=29734): Fix handle leaks in os.stat on Windows.
  * [bpo-35596](https://bugs.python.org/issue?@action=redirect&bpo=35596): Use unchecked PYCs for the embeddable distro to avoid zipimport restrictions.
  * [bpo-35596](https://bugs.python.org/issue?@action=redirect&bpo=35596): Fix vcruntime140.dll being added to embeddable distro multiple times.
  * [bpo-35402](https://bugs.python.org/issue?@action=redirect&bpo=35402): Update Windows build to use Tcl and Tk 8.6.9
  * [bpo-35401](https://bugs.python.org/issue?@action=redirect&bpo=35401): Updates Windows build to OpenSSL 1.1.0j
  * [bpo-34977](https://bugs.python.org/issue?@action=redirect&bpo=34977): venv on Windows will now use a python.exe redirector rather than copying the actual binaries from the base environment.
  * [bpo-34977](https://bugs.python.org/issue?@action=redirect&bpo=34977): Adds support for building a Windows App Store package
  * [bpo-35067](https://bugs.python.org/issue?@action=redirect&bpo=35067): Remove _distutils_findvs module and use vswhere.exe instead.
  * [bpo-32557](https://bugs.python.org/issue?@action=redirect&bpo=32557): Allow shutil.disk_usage to take a file path on Windows
  * [bpo-34770](https://bugs.python.org/issue?@action=redirect&bpo=34770): Fix a possible null pointer dereference in pyshellext.cpp.
  * [bpo-34603](https://bugs.python.org/issue?@action=redirect&bpo=34603): Fix returning structs from functions produced by MSVC
  * [bpo-34581](https://bugs.python.org/issue?@action=redirect&bpo=34581): Guard MSVC-specific code in socketmodule.c with `#ifdef _MSC_VER`.
  * [bpo-34532](https://bugs.python.org/issue?@action=redirect&bpo=34532): Fixes exit code of list version arguments for py.exe.
  * [bpo-34062](https://bugs.python.org/issue?@action=redirect&bpo=34062): Fixed the ‘–list’ and ‘–list-paths’ arguments for the py.exe launcher
  * [bpo-34225](https://bugs.python.org/issue?@action=redirect&bpo=34225): Ensure INCLUDE and LIB directories do not end with a backslash.
  * [bpo-34011](https://bugs.python.org/issue?@action=redirect&bpo=34011): A suite of code has been changed which copied across DLLs and init.tcl from the running Python location into a venv being created. These copies are needed only when running from a Python source build, and the copying code is now only run when that is the case, rather than whenever a venv is created.
  * [bpo-34006](https://bugs.python.org/issue?@action=redirect&bpo=34006): Revert line length limit for Windows help docs. The line-length limit is not needed because the pages appear in a separate app rather than on a browser tab. It can also interact badly with the DPI setting.
  * [bpo-31546](https://bugs.python.org/issue?@action=redirect&bpo=31546): Restore running PyOS_InputHook while waiting for user input at the prompt. The restores integration of interactive GUI windows (such as Matplotlib figures) with the prompt on Windows.
  * [bpo-30237](https://bugs.python.org/issue?@action=redirect&bpo=30237): Output error when ReadConsole is canceled by CancelSynchronousIo instead of crashing.
  * [bpo-33895](https://bugs.python.org/issue?@action=redirect&bpo=33895): GIL is released while calling functions that acquire Windows loader lock.
  * [bpo-33720](https://bugs.python.org/issue?@action=redirect&bpo=33720): Reduces maximum marshal recursion depth on release builds.
  * [bpo-29097](https://bugs.python.org/issue?@action=redirect&bpo=29097): Fix bug where `datetime.fromtimestamp()` erroneously throws an [`OSError`](https://docs.python.org/3/library/exceptions.html#OSError "OSError") on Windows for values between 0 and 86400. Patch by Ammar Askar.
  * [bpo-33316](https://bugs.python.org/issue?@action=redirect&bpo=33316): PyThread_release_lock always fails
  * [bpo-33184](https://bugs.python.org/issue?@action=redirect&bpo=33184): Update Windows installer to use OpenSSL 1.1.0h.
  * [bpo-32890](https://bugs.python.org/issue?@action=redirect&bpo=32890): Fix usage of GetLastError() instead of errno in os.execve() and os.truncate().
  * [bpo-33016](https://bugs.pytho