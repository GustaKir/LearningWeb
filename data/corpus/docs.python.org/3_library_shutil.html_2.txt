Title: shutil.copystat Function
URL: https://docs.python.org/3/library/shutil.html
Summary: The shutil.copystat function copies permission bits, access times, and flags from a source (_src_) to a destination (_dst_). It does not affect file contents, owner, or group. If _follow_symlinks_ is set to false, it operates on symbolic links directly.
---

shutil.copystat(_src_ , _dst_ , _*_ , _follow_symlinks =True_)[¶](https://docs.python.org/3/library/shutil.html#shutil.copystat "Link to this definition")
    
Copy the permission bits, last access time, last modification time, and flags from _src_ to _dst_. On Linux, [`copystat()`](https://docs.python.org/3/library/shutil.html#shutil.copystat "shutil.copystat") also copies the “extended attributes” where possible. The file contents, owner, and group are unaffected. _src_ and _dst_ are [path-like objects](https://docs.python.org/3/glossary.html#term-path-like-object) or path names given as strings.
If _follow_symlinks_ is false, and _src_ and _dst_ both refer to symbolic links, [`copystat()`](https://docs.python.org/3/library/shutil.html#shutil.copystat "shutil.copystat") will operate on the symbolic links themselves rather than the files the symbolic links refer to—reading the information from the _src_ symbolic link, and writing the information to the _dst_ symbolic link.
Note
Not all platforms provide the ability to examine and modify symbolic links. Python itself can tell you what functionality is locally available.
  * If `os.chmod in os.supports_follow_symlinks` is `True`, [`copystat()`](https://docs.python.org/3/library/shutil.html#shutil.copystat "shutil.copystat") can modify the permission bits of a symbolic link.
  * If `os.utime in os.supports_follow_symlinks` is `True`, [`copystat()`](https://docs.python.org/3/library/shutil.html#shutil.copystat "shutil.copystat") can modify the last access and modification times of a symbolic link.
  * If `os.chflags in os.supports_follow_symlinks` is `True`, [`copystat()`](https://docs.python.org/3/library/shutil.html#shutil.copystat "shutil.copystat") can modify the flags of a symbolic link. (`os.chflags` is not available on all platforms.)


On platforms where some or all of this functionality is unavailable, when asked to modify a symbolic link, [`copystat()`](https://docs.python.org/3/library/shutil.html#shutil.copystat "shutil.copystat") will copy everything it can. [`copystat()`](https://docs.python.org/3/library/shutil.html#shutil.copystat "shutil.copystat") never returns failure.
Please see [`os.supports_follow_symlinks`](https://docs.python.org/3/library/os.html#os.supports_follow_symlinks "os.supports_follow_symlinks") for more information.
Raises an [auditing event](https://docs.python.org/3/library/sys.html#auditing) `shutil.copystat` with arguments `src`, `dst`.
Changed in version 3.3: Added _follow_symlinks_ argument and support for Linux extended attributes. 

shutil.copy(_src_ , _dst_ , _*_ , _follow_symlinks =True_)[¶](https://docs.python.org/3/library/shutil.html#shutil.copy "Link to this definition")
    
Copies the file _src_ to the file or directory _dst_. _src_ and _dst_ should be [path-like objects](https://docs.python.org/3/glossary.html#term-path-like-object) or strings. If _dst_ specifies a directory, the file will be copied into _dst_ using the base filename from _src_. If _dst_ specifies a file that already exists, it will be replaced. Returns the path to the newly created file.
If _follow_symlinks_ is false, and _src_ is a symbolic link, _dst_ will be created as a symbolic link. If _follow_symlinks_ is true and _src_ is a symbolic link, _dst_ will be a copy of the file _src_ refers to.
[`copy()`](https://docs.python.org/3/library/shutil.html#shutil.copy "shutil.copy") copies the file data and the file’s permission mode (see [`os.chmod()`](https://docs.python.org/3/library/os.html#os.chmod "os.chmod")). Other metadata, like the file’s creation and modification times, is not preserved. To preserve all file metadata from the original, use [`copy2()`](https://docs.python.org/3/library/shutil.html#shutil.copy2 "shutil.copy2") instead.
Raises an [auditing event](https://docs.python.org/3/library/sys.html#auditing) `shutil.copyfile` with arguments `src`, `dst`.
Raises an [auditing event](https://docs.python.org/3/library/sys.html#auditing) `shutil.copymode` with arguments `src`, `dst`.
Changed in version 3.3: Added _follow_symlinks_ argument. Now returns path to the newly created file.
Changed in version 3.8: Platform-specific fast-copy syscalls may be used internally in order to copy the file more efficiently. See [Platform-dependent efficient copy operations](https://docs.python.org/3/library/shutil.html#shutil-platform-dependent-efficient-copy-operations) section.