Title: Asyncio Policies
URL: https://docs.python.org/3/library/asyncio-policy.html
Summary: This document outlines the various policies available in Python's asyncio library, including how to get and set policies, the types of policy objects, the role of process watchers, and the creation of custom policies.
---

[ ![Python logo](https://docs.python.org/3/_static/py.svg) ](https://www.python.org/) dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
Theme  Auto Light Dark
### [Table of Contents](https://docs.python.org/3/contents.html)
  * [Policies](https://docs.python.org/3/library/asyncio-policy.html)
    * [Getting and Setting the Policy](https://docs.python.org/3/library/asyncio-policy.html#getting-and-setting-the-policy)
    * [Policy Objects](https://docs.python.org/3/library/asyncio-policy.html#policy-objects)
    * [Process Watchers](https://docs.python.org/3/library/asyncio-policy.html#process-watchers)
    * [Custom Policies](https://docs.python.org/3/library/asyncio-policy.html#custom-policies)


#### Previous topic
[Transports and Protocols](https://docs.python.org/3/library/asyncio-protocol.html "previous chapter")
#### Next topic
[Platform Support](https://docs.python.org/3/library/asyncio-platforms.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/asyncio-policy.rst)


### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/library/asyncio-platforms.html "Platform Support") |
  * [previous](https://docs.python.org/3/library/asyncio-protocol.html "Transports and Protocols") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [The Python Standard Library](https://docs.python.org/3/library/index.html) »
  * [Networking and Interprocess Communication](https://docs.python.org/3/library/ipc.html) »
  * [`asyncio` — Asynchronous I/O](https://docs.python.org/3/library/asyncio.html) »
  * [Policies](https://docs.python.org/3/library/asyncio-policy.html)
  * | 
  * Theme  Auto Light Dark |


# Policies[¶](https://docs.python.org/3/library/asyncio-policy.html#policies "Link to this heading")
An event loop policy is a global object used to get and set the current [event loop](https://docs.python.org/3/library/asyncio-eventloop.html#asyncio-event-loop), as well as create new event loops. The default policy can be [replaced](https://docs.python.org/3/library/asyncio-policy.html#asyncio-policy-get-set) with [built-in alternatives](https://docs.python.org/3/library/asyncio-policy.html#asyncio-policy-builtin) to use different event loop implementations, or substituted by a [custom policy](https://docs.python.org/3/library/asyncio-policy.html#asyncio-custom-policies) that can override these behaviors.
The [policy object](https://docs.python.org/3/library/asyncio-policy.html#asyncio-policy-objects) gets and sets a separate event loop per _context_. This is per-thread by default, though custom policies could define _context_ differently.
Custom event loop policies can control the behavior of [`get_event_loop()`](https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.get_event_loop "asyncio.get_event_loop"), [`set_event_loop()`](https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.set_event_loop "asyncio.set_event_loop"), and [`new_event_loop()`](https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.new_event_loop "asyncio.new_event_loop").
Policy objects should implement the APIs defined in the [`AbstractEventLoopPolicy`](https://docs.python.org/3/library/asyncio-policy.html#asyncio.AbstractEventLoopPolicy "asyncio.AbstractEventLoopPolicy") abstract base class.
## Getting and Setting the Policy[¶](https://docs.python.org/3/library/asyncio-policy.html#getting-and-setting-the-policy "Link to this heading")
The following functions can be used to get and set the policy for the current process: 

asyncio.get_event_loop_policy()[¶](https://docs.python.org/3/library/asyncio-policy.html#asyncio.get_event_loop_policy "Link to this definition")
    
Return the current process-wide policy.