Title: Removed Features in Python 3.11
URL: https://docs.python.org/3/whatsnew/3.11.html
Summary: Python 3.11 removes several features, including the `PyFrame_BlockSetup()` and `PyFrame_BlockPop()` functions, certain math macros related to `errno`, and the `Py_UNICODE_COPY()` and `Py_UNICODE_FILL()` macros. The `pystrhex.h` header file has also been removed, as it contained only private functions.
---

### Removed[Â¶](https://docs.python.org/3/whatsnew/3.11.html#whatsnew311-c-api-removed "Link to this heading")
  * `PyFrame_BlockSetup()` and `PyFrame_BlockPop()` have been removed. (Contributed by Mark Shannon in [bpo-40222](https://bugs.python.org/issue?@action=redirect&bpo=40222).)
  * Remove the following math macros using the `errno` variable:
    * `Py_ADJUST_ERANGE1()`
    * `Py_ADJUST_ERANGE2()`
    * `Py_OVERFLOWED()`
    * `Py_SET_ERANGE_IF_OVERFLOW()`
    * `Py_SET_ERRNO_ON_MATH_ERROR()`
(Contributed by Victor Stinner in [bpo-45412](https://bugs.python.org/issue?@action=redirect&bpo=45412).)
  * Remove `Py_UNICODE_COPY()` and `Py_UNICODE_FILL()` macros, deprecated since Python 3.3. Use `PyUnicode_CopyCharacters()` or `memcpy()` (`wchar_t*` string), and `PyUnicode_Fill()` functions instead. (Contributed by Victor Stinner in [bpo-41123](https://bugs.python.org/issue?@action=redirect&bpo=41123).)
  * Remove the `pystrhex.h` header file. It only contains private functions. C extensions should only include the main `<Python.h>` header file. (Contributed by Victor Stinner in [bpo-45434](https://bugs.python.org/issue?@action=redirect&bpo=45434).)
  * Remove the `Py_FORCE_DOUBLE()` macro. It was used by the `Py_IS_INFINITY()` macro. (Contributed by Victor Stinner in [bpo-45440](https://bugs.python.org/issue?@action=redirect&bpo=45440).)
  * The following items are no longer available when [`Py_LIMITED_API`](https://docs.python.org/3/c-api/stable.html#c.Py_LIMITED_API "Py_LIMITED_API") is defined:
    * [`PyMarshal_WriteLongToFile()`](https://docs.python.org/3/c-api/marshal.html#c.PyMarshal_WriteLongToFile "PyMarshal_WriteLongToFile")
    * [`PyMarshal_WriteObjectToFile()`](https://docs.python.org/3/c-api/marshal.html#c.PyMarshal_WriteObjectToFile "PyMarshal_WriteObjectToFile")
    * [`PyMarshal_ReadObjectFromString()`](https://docs.python.org/3/c-api/marshal.html#c.PyMarshal_ReadObjectFromString "PyMarshal_ReadObjectFromString")
    * [`PyMarshal_WriteObjectToString()`](https://docs.python.org/3/c-api/marshal.html#c.PyMarshal_WriteObjectToString "PyMarshal_WriteObjectToString")
    * the `Py_MARSHAL_VERSION` macro
These are not part of the [limited API](https://docs.python.org/3/c-api/stable.html#limited-api-list).
(Contributed by Victor Stinner in [bpo-45474](https://bugs.python.org/issue?@action=redirect&bpo=45474).)
  * Exclude [`PyWeakref_GET_OBJECT()`](https://docs.python.org/3/c-api/weakref.html#c.PyWeakref_GET_OBJECT "PyWeakref_GET_OBJECT") from the limited C API. It never worked since the `PyWeakReference` structure is opaque in the limited C API. (Contributed by Victor Stinner in [bpo-35134](https://bugs.python.org/issue?@action=redirect&bpo=35134).)
  * Remove the `PyHeapType_GET_MEMBERS()` macro. It was exposed in the public C API by mistake, it must only be used by Python internally. Use the `PyTypeObject.tp_members` member instead. (Contributed by Victor Stinner in [bpo-40170](https://bugs.python.org/issue?@action=redirect&bpo=40170).)
  * Remove the `HAVE_PY_SET_53BIT_PRECISION` macro (moved to the internal C API). (Contributed by Victor Stinner in [bpo-45412](https://bugs.python.org/issue?@action=redirect&bpo=45412).)


  * Remove the [`Py_UNICODE`](https://docs.python.org/3/c-api/unicode.html#c.Py_UNICODE "Py_UNICODE") encoder APIs, as they have been deprecated since Python 3.3, are little used and are inefficient relative to the recommended alternatives.
The removed functions are:
    * `PyUnicode_Encode()`
    * `PyUnicode_EncodeASCII()`
    * `PyUnicode_EncodeLatin1()`
    * `PyUnicode_EncodeUTF7()`
    * `PyUnicode_EncodeUTF8()`
    * `PyUnicode_EncodeUTF16()`
    * `PyUnicode_EncodeUTF32()`
    * `PyUnicode_EncodeUnicodeEscape()`
    * `PyUnicode_EncodeRawUnicodeEscape()`
    * `PyUnicode_EncodeCharmap()`
    * `PyUnicode_TranslateCharmap()`
    * `PyUnicode_EncodeDecimal()`
    * `PyUnicode_TransformDecimalToASCII()`
See [**PEP 624**](https://peps.python.org/pep-0624/) for details and [**migration guidance**](https://peps.python.org/pep-0624/#alternative-apis). (Contributed by Inada Naoki in [bpo-44029](https://bugs.python.org/issue?@action=redirect&bpo=44029).)