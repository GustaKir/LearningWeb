Title: pickle.load() - Load Pickled Objects
URL: https://docs.python.org/3/library/pickle.html
Summary: The `pickle.load()` function reads a pickled object from a file object, returning the reconstructed object hierarchy. It automatically detects the protocol version, and additional arguments allow for handling of imports, encoding, and errors. The function has been updated in version 3.8 to include a `_buffers` argument.
---

pickle.load(_file_ , _*_ , _fix_imports =True_, _encoding ='ASCII'_, _errors ='strict'_, _buffers =None_)[¶](https://docs.python.org/3/library/pickle.html#pickle.load "Link to this definition")
    
Read the pickled representation of an object from the open [file object](https://docs.python.org/3/glossary.html#term-file-object) _file_ and return the reconstituted object hierarchy specified therein. This is equivalent to `Unpickler(file).load()`.
The protocol version of the pickle is detected automatically, so no protocol argument is needed. Bytes past the pickled representation of the object are ignored.
Arguments _file_ , _fix_imports_ , _encoding_ , _errors_ , _strict_ and _buffers_ have the same meaning as in the [`Unpickler`](https://docs.python.org/3/library/pickle.html#pickle.Unpickler "pickle.Unpickler") constructor.
Changed in version 3.8: The _buffers_ argument was added. 

pickle.loads(_data_ , _/_ , _*_ , _fix_imports =True_, _encoding ='ASCII'_, _errors ='strict'_, _buffers =None_)[¶](https://docs.python.org/3/library/pickle.html#pickle.loads "Link to this definition")
    
Return the reconstituted object hierarchy of the pickled representation _data_ of an object. _data_ must be a [bytes-like object](https://docs.python.org/3/glossary.html#term-bytes-like-object).
The protocol version of the pickle is detected automatically, so no protocol argument is needed. Bytes past the pickled representation of the object are ignored.
Arguments _fix_imports_ , _encoding_ , _errors_ , _strict_ and _buffers_ have the same meaning as in the [`Unpickler`](https://docs.python.org/3/library/pickle.html#pickle.Unpickler "pickle.Unpickler") constructor.
Changed in version 3.8: The _buffers_ argument was added.
The [`pickle`](https://docs.python.org/3/library/pickle.html#module-pickle "pickle: Convert Python objects to streams of bytes and back.") module defines three exceptions: 

_exception_ pickle.PickleError[¶](https://docs.python.org/3/library/pickle.html#pickle.PickleError "Link to this definition")
    
Common base class for the other pickling exceptions. It inherits from [`Exception`](https://docs.python.org/3/library/exceptions.html#Exception "Exception"). 

_exception_ pickle.PicklingError[¶](https://docs.python.org/3/library/pickle.html#pickle.PicklingError "Link to this definition")
    
Error raised when an unpicklable object is encountered by [`Pickler`](https://docs.python.org/3/library/pickle.html#pickle.Pickler "pickle.Pickler"). It inherits from [`PickleError`](https://docs.python.org/3/library/pickle.html#pickle.PickleError "pickle.PickleError").
Refer to [What can be pickled and unpickled?](https://docs.python.org/3/library/pickle.html#pickle-picklable) to learn what kinds of objects can be pickled. 

_exception_ pickle.UnpicklingError[¶](https://docs.python.org/3/library/pickle.html#pickle.UnpicklingError "Link to this definition")
    
Error raised when there is a problem unpickling an object, such as a data corruption or a security violation. It inherits from [`PickleError`](https://docs.python.org/3/library/pickle.html#pickle.PickleError "pickle.PickleError").
Note that other exceptions may also be raised during unpickling, including (but not necessarily limited to) AttributeError, EOFError, ImportError, and IndexError.
The [`pickle`](https://docs.python.org/3/library/pickle.html#module-pickle "pickle: Convert Python objects to streams of bytes and back.") module exports three classes, [`Pickler`](https://docs.python.org/3/library/pickle.html#pickle.Pickler "pickle.Pickler"), [`Unpickler`](https://docs.python.org/3/library/pickle.html#pickle.Unpickler "pickle.Unpickler") and [`PickleBuffer`](https://docs.python.org/3/library/pickle.html#pickle.PickleBuffer "pickle.PickleBuffer"):