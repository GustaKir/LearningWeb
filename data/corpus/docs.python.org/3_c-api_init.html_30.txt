Title: Trace Function Type Definition in Python C API
URL: https://docs.python.org/3/c-api/init.html
Summary: This section defines the type of the trace function used with PyEval_SetProfile and PyEval_SetTrace. It describes the parameters, including the object passed during registration, the frame object related to the event, and the event type constant indicating the nature of the trace event.
---

typedefint(*Py_tracefunc)([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*obj,[PyFrameObject](https://docs.python.org/3/c-api/frame.html#c.PyFrameObject "PyFrameObject")*frame,intwhat,[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*arg)[¶](https://docs.python.org/3/c-api/init.html#c.Py_tracefunc "Link to this definition")
    
The type of the trace function registered using [`PyEval_SetProfile()`](https://docs.python.org/3/c-api/init.html#c.PyEval_SetProfile "PyEval_SetProfile") and [`PyEval_SetTrace()`](https://docs.python.org/3/c-api/init.html#c.PyEval_SetTrace "PyEval_SetTrace"). The first parameter is the object passed to the registration function as _obj_ , _frame_ is the frame object to which the event pertains, _what_ is one of the constants [`PyTrace_CALL`](https://docs.python.org/3/c-api/init.html#c.PyTrace_CALL "PyTrace_CALL"), [`PyTrace_EXCEPTION`](https://docs.python.org/3/c-api/init.html#c.PyTrace_EXCEPTION "PyTrace_EXCEPTION"), [`PyTrace_LINE`](https://docs.python.org/3/c-api/init.html#c.PyTrace_LINE "PyTrace_LINE"), [`PyTrace_RETURN`](https://docs.python.org/3/c-api/init.html#c.PyTrace_RETURN "PyTrace_RETURN"), [`PyTrace_C_CALL`](https://docs.python.org/3/c-api/init.html#c.PyTrace_C_CALL "PyTrace_C_CALL"), [`PyTrace_C_EXCEPTION`](https://docs.python.org/3/c-api/init.html#c.PyTrace_C_EXCEPTION "PyTrace_C_EXCEPTION"), [`PyTrace_C_RETURN`](https://docs.python.org/3/c-api/init.html#c.PyTrace_C_RETURN "PyTrace_C_RETURN"), or [`PyTrace_OPCODE`](https://docs.python.org/3/c-api/init.html#c.PyTrace_OPCODE "PyTrace_OPCODE"), and _arg_ depends on the value of _what_ :
Value of _what_ | Meaning of _arg_  
---|---  
[`PyTrace_CALL`](https://docs.python.org/3/c-api/init.html#c.PyTrace_CALL "PyTrace_CALL") | Always [`Py_None`](https://docs.python.org/3/c-api/none.html#c.Py_None "Py_None").  
[`PyTrace_EXCEPTION`](https://docs.python.org/3/c-api/init.html#c.PyTrace_EXCEPTION "PyTrace_EXCEPTION") | Exception information as returned by [`sys.exc_info()`](https://docs.python.org/3/library/sys.html#sys.exc_info "sys.exc_info").  
[`PyTrace_LINE`](https://docs.python.org/3/c-api/init.html#c.PyTrace_LINE "PyTrace_LINE") | Always [`Py_None`](https://docs.python.org/3/c-api/none.html#c.Py_None "Py_None").  
[`PyTrace_RETURN`](https://docs.python.org/3/c-api/init.html#c.PyTrace_RETURN "PyTrace_RETURN") | Value being returned to the caller, or `NULL` if caused by an exception.  
[`PyTrace_C_CALL`](https://docs.python.org/3/c-api/init.html#c.PyTrace_C_CALL "PyTrace_C_CALL") | Function object being called.  
[`PyTrace_C_EXCEPTION`](https://docs.python.org/3/c-api/init.html#c.PyTrace_C_EXCEPTION "PyTrace_C_EXCEPTION") | Function object being called.  
[`PyTrace_C_RETURN`](https://docs.python.org/3/c-api/init.html#c.PyTrace_C_RETURN "PyTrace_C_RETURN") | Function object being called.  
[`PyTrace_OPCODE`](https://docs.python.org/3/c-api/init.html#c.PyTrace_OPCODE "PyTrace_OPCODE") | Always [`Py_None`](https://docs.python.org/3/c-api/none.html#c.Py_None "Py_None"). 

intPyTrace_CALL[¶](https://docs.python.org/3/c-api/init.html#c.PyTrace_CALL "Link to this definition")
      
The value of the _what_ parameter to a [`Py_tracefunc`](https://docs.python.org/3/c-api/init.html#c.Py_tracefunc "Py_tracefunc") function when a new call to a function or method is being reported, or a new entry into a generator. Note that the creation of the iterator for a generator function is not reported as there is no control transfer to the Python bytecode in the corresponding frame. 

intPyTrace_EXCEPTION[¶](https://docs.python.org/3/c-api/init.html#c.PyTrace_EXCEPTION "Link to this definition")
    
The value of the _what_ parameter to a [`Py_tracefunc`](https://docs.python.org/3/c-api/init.html#c.Py_tracefunc "Py_tracefunc") function when an exception has been raised. The callback function is called with this value for _what_ when after any bytecode is processed after which the exception becomes set within the frame being executed. The effect of this is that as exception propagation causes the Python stack to unwind, the callback is called upon return to each frame as the exception propagates. Only trace functions receives these events; they are not needed by the profiler. 

intPyTrace_LINE[¶](https://docs.python.org/3/c-api/init.html#c.PyTrace_LINE "Link to this definition")
    
The value passed as the _what_ parameter to a [`Py_tracefunc`](https://docs.python.org/3/c-api/init.html#c.Py_tracefunc "Py_tracefunc") function (but not a profiling function) when a line-number event is being reported. It may be disabled for a frame by setting [`f_trace_lines`](https://docs.python.org/3/reference/datamodel.html#frame.f_trace_lines "frame.f_trace_lines") to _0_ on that frame.