Title: Initialization Warning for Python C API Functions
URL: https://docs.python.org/3/c-api/init.html
Summary: This section warns that certain Python C API functions, including `Py_EncodeLocale()`, `Py_GetPath()`, and others, must not be called before the Python interpreter has been initialized, highlighting the importance of proper initialization in C extensions.
---

Note
Despite their apparent similarity to some of the functions listed above, the following functions **should not be called** before the interpreter has been initialized: [`Py_EncodeLocale()`](https://docs.python.org/3/c-api/sys.html#c.Py_EncodeLocale "Py_EncodeLocale"), [`Py_GetPath()`](https://docs.python.org/3/c-api/init.html#c.Py_GetPath "Py_GetPath"), [`Py_GetPrefix()`](https://docs.python.org/3/c-api/init.html#c.Py_GetPrefix "Py_GetPrefix"), [`Py_GetExecPrefix()`](https://docs.python.org/3/c-api/init.html#c.Py_GetExecPrefix "Py_GetExecPrefix"), [`Py_GetProgramFullPath()`](https://docs.python.org/3/c-api/init.html#c.Py_GetProgramFullPath "Py_GetProgramFullPath"), [`Py_GetPythonHome()`](https://docs.python.org/3/c-api/init.html#c.Py_GetPythonHome "Py_GetPythonHome"), [`Py_GetProgramName()`](https://docs.python.org/3/c-api/init.html#c.Py_GetProgramName "Py_GetProgramName"), [`PyEval_InitThreads()`](https://docs.python.org/3/c-api/init.html#c.PyEval_InitThreads "PyEval_InitThreads"), and [`Py_RunMain()`](https://docs.python.org/3/c-api/init.html#c.Py_RunMain "Py_RunMain").
## Global configuration variables[¶](https://docs.python.org/3/c-api/init.html#global-configuration-variables "Link to this heading")
Python has variables for the global configuration to control different features and options. By default, these flags are controlled by [command line options](https://docs.python.org/3/using/cmdline.html#using-on-interface-options).
When a flag is set by an option, the value of the flag is the number of times that the option was set. For example, `-b` sets [`Py_BytesWarningFlag`](https://docs.python.org/3/c-api/init.html#c.Py_BytesWarningFlag "Py_BytesWarningFlag") to 1 and `-bb` sets [`Py_BytesWarningFlag`](https://docs.python.org/3/c-api/init.html#c.Py_BytesWarningFlag "Py_BytesWarningFlag") to 2. 

intPy_BytesWarningFlag[¶](https://docs.python.org/3/c-api/init.html#c.Py_BytesWarningFlag "Link to this definition")
    
This API is kept for backward compatibility: setting [`PyConfig.bytes_warning`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.bytes_warning "PyConfig.bytes_warning") should be used instead, see [Python Initialization Configuration](https://docs.python.org/3/c-api/init_config.html#init-config).
Issue a warning when comparing [`bytes`](https://docs.python.org/3/library/stdtypes.html#bytes "bytes") or [`bytearray`](https://docs.python.org/3/library/stdtypes.html#bytearray "bytearray") with [`str`](https://docs.python.org/3/library/stdtypes.html#str "str") or [`bytes`](https://docs.python.org/3/library/stdtypes.html#bytes "bytes") with [`int`](https://docs.python.org/3/library/functions.html#int "int"). Issue an error if greater or equal to `2`.
Set by the [`-b`](https://docs.python.org/3/using/cmdline.html#cmdoption-b) option.
Deprecated since version 3.12, will be removed in version 3.14. 

intPy_DebugFlag[¶](https://docs.python.org/3/c-api/init.html#c.Py_DebugFlag "Link to this definition")
    
This API is kept for backward compatibility: setting [`PyConfig.parser_debug`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.parser_debug "PyConfig.parser_debug") should be used instead, see [Python Initialization Configuration](https://docs.python.org/3/c-api/init_config.html#init-config).
Turn on parser debugging output (for expert only, depending on compilation options).
Set by the [`-d`](https://docs.python.org/3/using/cmdline.html#cmdoption-d) option and the [`PYTHONDEBUG`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONDEBUG) environment variable.
Deprecated since version 3.12, will be removed in version 3.14. 

intPy_DontWriteBytecodeFlag[¶](https://docs.python.org/3/c-api/init.html#c.Py_DontWriteBytecodeFlag "Link to this definition")
    
This API is kept for backward compatibility: setting [`PyConfig.write_bytecode`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.write_bytecode "PyConfig.write_bytecode") should be used instead, see [Python Initialization Configuration](https://docs.python.org/3/c-api/init_config.html#init-config).
If set to non-zero, Python won’t try to write `.pyc` files on the import of source modules.
Set by the [`-B`](https://docs.python.org/3/using/cmdline.html#cmdoption-B) option and the [`PYTHONDONTWRITEBYTECODE`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONDONTWRITEBYTECODE) environment variable.
Deprecated since version 3.12, will be removed in version 3.14.