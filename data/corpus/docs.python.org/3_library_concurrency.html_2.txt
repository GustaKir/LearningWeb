Title: Concurrency in Python
URL: https://docs.python.org/3/library/concurrency.html
Summary: Overview of the Python concurrency library, including shared memory for inter-process communication and the `concurrent` package, which provides tools for launching parallel tasks using `ThreadPoolExecutor` and `ProcessPoolExecutor`, along with examples of their usage.
---

multiprocessing.shared_memory` — Shared memory for direct access across processes](https://docs.python.org/3/library/multiprocessing.shared_memory.html)
  * [The `concurrent` package](https://docs.python.org/3/library/concurrent.html)
  * [`concurrent.futures` — Launching parallel tasks](https://docs.python.org/3/library/concurrent.futures.html)
    * [Executor Objects](https://docs.python.org/3/library/concurrent.futures.html#executor-objects)
    * [ThreadPoolExecutor](https://docs.python.org/3/library/concurrent.futures.html#threadpoolexecutor)
      * [ThreadPoolExecutor Example](https://docs.python.org/3/library/concurrent.futures.html#threadpoolexecutor-example)
    * [ProcessPoolExecutor](https://docs.python.org/3/library/concurrent.futures.html#processpoolexecutor)
      * [ProcessPoolExecutor Example](https://docs.python.org/3/library/concurrent.futures.html#processpoolexecutor-example)
    * [Future Objects](https://docs.python.org/3/library/concurrent.futures.html#future-objects)
    * [Module Functions](https://docs.python.org/3/library/concurrent.futures.html#module-functions)
    * [Exception classes](https://docs.python.org/3/library/concurrent.futures.html#exception-classes)
  * [`subprocess` — Subprocess management](https://docs.python.org/3/library/subprocess.html)
    * [Using the `subprocess` Module](https://docs.python.org/3/library/subprocess.html#using-the-subprocess-module)
      * [Frequently Used Arguments](https://docs.python.org/3/library/subprocess.html#frequently-used-arguments)
      * [Popen Constructor](https://docs.python.org/3/library/subprocess.html#popen-constructor)
      * [Exceptions](https://docs.python.org/3/library/subprocess.html#exceptions)
    * [Security Considerations](https://docs.python.org/3/library/subprocess.html#security-considerations)
    * [Popen Objects](https://docs.python.org/3/library/subprocess.html#popen-objects)
    * [Windows Popen Helpers](https://docs.python.org/3/library/subprocess.html#windows-popen-helpers)
      * [Windows Constants](https://docs.python.org/3/library/subprocess.html#windows-constants)
    * [Older high-level API](https://docs.python.org/3/library/subprocess.html#older-high-level-api)
    * [Replacing Older Functions with the `subprocess` Module](https://docs.python.org/3/library/subprocess.html#replacing-older-functions-with-the-subprocess-module)
      * [Replacing **/bin/sh** shell command substitution](https://docs.python.org/3/library/subprocess.html#replacing-bin-sh-shell-command-substitution)
      * [Replacing shell pipeline](https://docs.python.org/3/library/subprocess.html#replacing-shell-pipeline)
      * [Replacing `os.system()`](https://docs.python.org/3/library/subprocess.html#replacing-os-system)
      * [Replacing the `os.spawn` family](https://docs.python.org/3/library/subprocess.html#replacing-the-os-spawn-family)
      * [Replacing `os.popen()`, `os.popen2()`, `os.popen3()`](https://docs.python.org/3/library/subprocess.html#replacing-os-popen-os-popen2-os-popen3)
      * [Replacing functions from the `popen2` module](https://docs.python.org/3/library/subprocess.html#replacing-functions-from-the-popen2-module)
    * [Legacy Shell Invocation Functions](https://docs.python.org/3/library/subprocess.html#legacy-shell-invocation-functions)
    * [Notes](https://docs.python.org/3/library/subprocess.html#notes)
      * [Converting an argument sequence to a string on Windows](https://docs.python.org/3/library/subprocess.html#converting-an-argument-sequence-to-a-string-on-windows)
      * [Disabling use of `vfork()` or `posix_spawn()`](https://docs.python.org/3/library/subprocess.html#disabling-use-of-vfork-or-posix-spawn)
  * [`sched` — Event scheduler](https://docs.python.org/3/library/sched.html)
    * [Scheduler Objects](https://docs.python.org/3/library/sched.html#scheduler-objects)
  * [`queue` — A synchronized queue class](https://docs.python.org/3/library/queue.html)
    * [Queue Objects](https://docs.python.org/3/library/queue.html#queue-objects)
      * [Terminating queues](https://docs.python.org/3/library/queue.html#terminating-queues)
    * [SimpleQueue Objects](https://docs.python.org/3/library/queue.html#simplequeue-objects)
  * [`contextvars` — Context Variables](https://docs.python.org/3/library/contextvars.html)
    * [Context Variables](https://docs.python.org/3/library/contextvars.html#context-variables)
    * [Manual Context Management](https://docs.python.org/3/library/contextvars.html#manual-context-management)
    * [asyncio support](https://docs.python.org/3/library/contextvars.html#asyncio-support)


The following are support modules for some of the above services:
  * [`_thread` — Low-level threading API](https://docs.python.org/3/library/_thread.html)