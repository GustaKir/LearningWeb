Title: Socket Timeout Exception
URL: https://docs.python.org/3/library/socket.html
Summary: The `socket.timeout` exception is a deprecated alias for `TimeoutError`, raised when a timeout occurs on a socket with timeouts enabled. It subclasses `OSError` and, since version 3.3, carries a message indicating a timeout. Changes in version 3.10 reinforced its role as an alias.
---

_exception_ socket.timeout[¶](https://docs.python.org/3/library/socket.html#socket.timeout "Link to this definition")
    
A deprecated alias of [`TimeoutError`](https://docs.python.org/3/library/exceptions.html#TimeoutError "TimeoutError").
A subclass of [`OSError`](https://docs.python.org/3/library/exceptions.html#OSError "OSError"), this exception is raised when a timeout occurs on a socket which has had timeouts enabled via a prior call to [`settimeout()`](https://docs.python.org/3/library/socket.html#socket.socket.settimeout "socket.socket.settimeout") (or implicitly through [`setdefaulttimeout()`](https://docs.python.org/3/library/socket.html#socket.setdefaulttimeout "socket.setdefaulttimeout")). The accompanying value is a string whose value is currently always “timed out”.
Changed in version 3.3: This class was made a subclass of [`OSError`](https://docs.python.org/3/library/exceptions.html#OSError "OSError").
Changed in version 3.10: This class was made an alias of [`TimeoutError`](https://docs.python.org/3/library/exceptions.html#TimeoutError "TimeoutError").
### Constants[¶](https://docs.python.org/3/library/socket.html#constants "Link to this heading")
> The AF_* and SOCK_* constants are now `AddressFamily` and `SocketKind` [`IntEnum`](https://docs.python.org/3/library/enum.html#enum.IntEnum "enum.IntEnum") collections.
> Added in version 3.4. 

socket.AF_UNIX[¶](https://docs.python.org/3/library/socket.html#socket.AF_UNIX "Link to this definition")


socket.AF_INET[¶](https://docs.python.org/3/library/socket.html#socket.AF_INET "Link to this definition")


socket.AF_INET6[¶](https://docs.python.org/3/library/socket.html#socket.AF_INET6 "Link to this definition")
    
These constants represent the address (and protocol) families, used for the first argument to [`socket()`](https://docs.python.org/3/library/socket.html#socket.socket "socket.socket"). If the [`AF_UNIX`](https://docs.python.org/3/library/socket.html#socket.AF_UNIX "socket.AF_UNIX") constant is not defined then this protocol is unsupported. More constants may be available depending on the system. 

socket.AF_UNSPEC[¶](https://docs.python.org/3/library/socket.html#socket.AF_UNSPEC "Link to this definition")
    
[`AF_UNSPEC`](https://docs.python.org/3/library/socket.html#socket.AF_UNSPEC "socket.AF_UNSPEC") means that [`getaddrinfo()`](https://docs.python.org/3/library/socket.html#socket.getaddrinfo "socket.getaddrinfo") should return socket addresses for any address family (either IPv4, IPv6, or any other) that can be used. 

socket.SOCK_STREAM[¶](https://docs.python.org/3/library/socket.html#socket.SOCK_STREAM "Link to this definition")


socket.SOCK_DGRAM[¶](https://docs.python.org/3/library/socket.html#socket.SOCK_DGRAM "Link to this definition")


socket.SOCK_RAW[¶](https://docs.python.org/3/library/socket.html#socket.SOCK_RAW "Link to this definition")


socket.SOCK_RDM[¶](https://docs.python.org/3/library/socket.html#socket.SOCK_RDM "Link to this definition")


socket.SOCK_SEQPACKET[¶](https://docs.python.org/3/library/socket.html#socket.SOCK_SEQPACKET "Link to this definition")
    
These constants represent the socket types, used for the second argument to [`socket()`](https://docs.python.org/3/library/socket.html#socket.socket "socket.socket"). More constants may be available depending on the system. (Only [`SOCK_STREAM`](https://docs.python.org/3/library/socket.html#socket.SOCK_STREAM "socket.SOCK_STREAM") and [`SOCK_DGRAM`](https://docs.python.org/3/library/socket.html#socket.SOCK_DGRAM "socket.SOCK_DGRAM") appear to be generally useful.) 

socket.SOCK_CLOEXEC[¶](https://docs.python.org/3/library/socket.html#socket.SOCK_CLOEXEC "Link to this definition")


socket.SOCK_NONBLOCK[¶](https://docs.python.org/3/library/socket.html#socket.SOCK_NONBLOCK "Link to this definition")
    
These two constants, if defined, can be combined with the socket types and allow you to set some flags atomically (thus avoiding possible race conditions and the need for separate calls).
See also
[Secure File Descriptor Handling](https://udrepper.livejournal.com/20407.html) for a more thorough explanation.
[Availability](https://docs.python.org/3/library/intro.html#availability): Linux >= 2.6.27.
Added in version 3.2. 

SO_*


socket.SOMAXCONN[¶](https://docs.python.org/3/library/socket.html#socket.SOMAXCONN "Link to this definition")


MSG_*


SOL_*


SCM_*


IPPROTO_*


IPPORT_*


INADDR_*


IP_*


IPV6_*


EAI_*


AI_*


NI_*