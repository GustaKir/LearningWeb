Title: Python 3.14 Release Notes Overview
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: In Python 3.14, using named placeholders with parameters as a sequence will trigger a DeprecationWarning. Future use will result in a ProgrammingError. Additionally, changes include the repr of OrderedDict now following regular dictionary formatting.
---

s://docs.python.org/3/library/exceptions.html#DeprecationWarning "DeprecationWarning") is now emitted when [named placeholders](https://docs.python.org/3/library/sqlite3.html#sqlite3-placeholders) are used together with parameters supplied as a [sequence](https://docs.python.org/3/glossary.html#term-sequence) instead of as a [`dict`](https://docs.python.org/3/library/stdtypes.html#dict "dict"). Starting from Python 3.14, using named placeholders with parameters supplied as a sequence will raise a [`ProgrammingError`](https://docs.python.org/3/library/sqlite3.html#sqlite3.ProgrammingError "sqlite3.ProgrammingError"). Patch by Erlend E. Aasland.
  * [gh-101446](https://github.com/python/cpython/issues/101446): Change repr of [`collections.OrderedDict`](https://docs.python.org/3/library/collections.html#collections.OrderedDict "collections.OrderedDict") to use regular dictionary formatting instead of pairs of keys and values.
  * [gh-101362](https://github.com/python/cpython/issues/101362): Speed up [`pathlib.PurePath`](https://docs.python.org/3/library/pathlib.html#pathlib.PurePath "pathlib.PurePath") construction by handling arguments more uniformly. When a [`pathlib.Path`](https://docs.python.org/3/library/pathlib.html#pathlib.Path "pathlib.Path") argument is supplied, we use its string representation rather than joining its parts with [`os.path.join()`](https://docs.python.org/3/library/os.path.html#os.path.join "os.path.join").
  * [gh-101362](https://github.com/python/cpython/issues/101362): Speed up [`pathlib.PurePath`](https://docs.python.org/3/library/pathlib.html#pathlib.PurePath "pathlib.PurePath") construction by calling [`os.path.join()`](https://docs.python.org/3/library/os.path.html#os.path.join "os.path.join") only when two or more arguments are given.
  * [gh-101362](https://github.com/python/cpython/issues/101362): Speed up [`pathlib.Path`](https://docs.python.org/3/library/pathlib.html#pathlib.Path "pathlib.Path") construction by running the path flavour compatibility check only when pathlib is imported.
  * [gh-85984](https://github.com/python/cpython/issues/85984): Refactored the implementation of [`pty.fork()`](https://docs.python.org/3/library/pty.html#pty.fork "pty.fork") to use [`os.login_tty()`](https://docs.python.org/3/library/os.html#os.login_tty "os.login_tty").
A [`DeprecationWarning`](https://docs.python.org/3/library/exceptions.html#DeprecationWarning "DeprecationWarning") is now raised by `pty.master_open()` and `pty.slave_open()`. They were undocumented and deprecated long long ago in the docstring in favor of [`pty.openpty()`](https://docs.python.org/3/library/pty.html#pty.openpty "pty.openpty").
  * [gh-101561](https://github.com/python/cpython/issues/101561): Add a new decorator [`typing.override()`](https://docs.python.org/3/library/typing.html#typing.override "typing.override"). See [**PEP 698**](https://peps.python.org/pep-0698/) for details. Patch by Steven Troxler.
  * [gh-63301](https://github.com/python/cpython/issues/63301): Set exit code when [`tabnanny`](https://docs.python.org/3/library/tabnanny.html#module-tabnanny "tabnanny: Tool for detecting white space related problems in Python source files in a directory tree.") CLI exits on error.
  * [gh-101360](https://github.com/python/cpython/issues/101360): Fix anchor matching in `pathlib.PureWindowsPath.match()`. Path and pattern anchors are now matched with [`fnmatch`](https://docs.python.org/3/library/fnmatch.html#module-fnmatch "fnmatch: Unix shell style filename pattern matching."), just like other path parts. This allows patterns such as `"*:/Users/*"` to be matched.
  * [gh-101277](https://github.com/python/cpython/issues/101277): Remove global state from [`itertools`](https://docs.python.org/3/library/itertools.html#module-itertools "itertools: Functions creating iterators for efficient looping.") module ([**PEP 687**](https://peps.python.org/pep-0687/)). Patches by Erlend E. Aasland.
  * [gh-100809](https://github.com/python/cpython/issues/100809): Fix handling of drive-relative paths (like ‘C:’ and ‘C:foo’) in [`pathlib.Path.absolute()`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.absolute "pathlib.Path.absolute"). This method now uses the OS API to retrieve the correct current working directory for the drive.
  * [gh-99138](https://github.com/python/cpython/issues/99138): Apply [**PEP 687**](https://peps.python.org/pep-0687/) to [`zoneinfo`](https://docs.python.org/3/library/zoneinfo.html#module-zoneinfo "zoneinfo: IANA time zone support"). Patch by Erlend E. Aasland.
  * [gh-96764](https://github.com/python/cpython/issues/96764): [`asyncio.wait_for()`](https://docs.python.org/3/library/asyncio-task.html#asyncio.wait_for "asyncio.wait_for") now uses [`asyncio.timeout()`](https://docs.python.org/3/library/asyncio-task.html#asyncio.timeout "asyncio.timeout") as its underlying implementation.