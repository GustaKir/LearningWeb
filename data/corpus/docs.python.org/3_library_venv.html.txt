Title: venv — Creation of Virtual Environments
URL: https://docs.python.org/3/library/venv.html
Summary: This section of the Python documentation provides an overview of the `venv` module, which enables the creation of isolated virtual environments. It includes details on how to create virtual environments, an explanation of their functionality, an overview of the API, and an example of extending the `EnvBuilder` class.
---

[ ![Python logo](https://docs.python.org/3/_static/py.svg) ](https://www.python.org/) dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
Theme  Auto Light Dark
### [Table of Contents](https://docs.python.org/3/contents.html)
  * [`venv` — Creation of virtual environments](https://docs.python.org/3/library/venv.html)
    * [Creating virtual environments](https://docs.python.org/3/library/venv.html#creating-virtual-environments)
    * [How venvs work](https://docs.python.org/3/library/venv.html#how-venvs-work)
    * [API](https://docs.python.org/3/library/venv.html#api)
    * [An example of extending `EnvBuilder`](https://docs.python.org/3/library/venv.html#an-example-of-extending-envbuilder)


#### Previous topic
[`ensurepip` — Bootstrapping the `pip` installer](https://docs.python.org/3/library/ensurepip.html "previous chapter")
#### Next topic
[`zipapp` — Manage executable Python zip archives](https://docs.python.org/3/library/zipapp.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/venv.rst)


### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/library/zipapp.html "zipapp — Manage executable Python zip archives") |
  * [previous](https://docs.python.org/3/library/ensurepip.html "ensurepip — Bootstrapping the pip installer") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [The Python Standard Library](https://docs.python.org/3/library/index.html) »
  * [Software Packaging and Distribution](https://docs.python.org/3/library/distribution.html) »
  * [`venv` — Creation of virtual environments](https://docs.python.org/3/library/venv.html)
  * | 
  * Theme  Auto Light Dark |


# `venv` — Creation of virtual environments[¶](https://docs.python.org/3/library/venv.html#module-venv "Link to this heading")
Added in version 3.3.
**Source code:** [Lib/venv/](https://github.com/python/cpython/tree/3.13/Lib/venv/)
The `venv` module supports creating lightweight “virtual environments”, each with their own independent set of Python packages installed in their [`site`](https://docs.python.org/3/library/site.html#module-site "site: Module responsible for site-specific configuration.") directories. A virtual environment is created on top of an existing Python installation, known as the virtual environment’s “base” Python, and may optionally be isolated from the packages in the base environment, so only those explicitly installed in the virtual environment are available.
When used from within a virtual environment, common installation tools such as [pip](https://pypi.org/project/pip/) will install Python packages into a virtual environment without needing to be told to do so explicitly.
A virtual environment is (amongst other things):
  * Used to contain a specific Python interpreter and software libraries and binaries which are needed to support a project (library or application). These are by default isolated from software in other virtual environments and Python interpreters and libraries installed in the operating system.
  * Contained in a directory, conventionally named `.venv` or `venv` in the project directory, or under a container directory for lots of virtual environments, such as `~/.virtualenvs`.
  * Not checked into source control systems such as Git.
  * Considered as disposable – it should be simple to delete and recreate it from scratch. You don’t place any project code in the environment.
  * Not considered as movable or copyable – you just recreate the same environment in the target location.