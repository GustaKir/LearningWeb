Title: Python Changes and Improvements
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This document outlines several enhancements in Python, including improved error messages for the `.format()` operation, changes to the output of `dis.dis()` to avoid confusing values, and updates to `time.sleep()` for better precision on Unix systems. Additionally, there are modifications regarding the `configparser` module.
---

action=redirect&bpo=20524): Improves error messages on `.format()` operation for `str`, `float`, `int`, and `complex`. New format now shows the problematic pattern and the object type.
  * [bpo-45168](https://bugs.python.org/issue?@action=redirect&bpo=45168): Change [`dis.dis()`](https://docs.python.org/3/library/dis.html#dis.dis "dis.dis") output to omit op arg values that cannot be resolved due to `co_consts`, `co_names` etc not being provided. Previously the oparg itself was repeated in the value field, which is not useful and can be confusing.
  * [bpo-21302](https://bugs.python.org/issue?@action=redirect&bpo=21302): In Unix operating systems, [`time.sleep()`](https://docs.python.org/3/library/time.html#time.sleep "time.sleep") now uses the `clock_nanosleep()` function, if available, which allows to sleep for an interval specified with nanosecond precision.
  * [bpo-45173](https://bugs.python.org/issue?@action=redirect&bpo=45173): Remove from the [`configparser`](https://docs.python.org/3/library/configparser.html#module-configparser "configparser: Configuration file parser.") module: the `SafeConfigParser` class, the `filename` property of the [`ParsingError`](https://docs.python.org/3/library/configparser.html#configparser.ParsingError "configparser.ParsingError") class, the `readfp()` method of the [`ConfigParser`](https://docs.python.org/3/library/configparser.html#configparser.ConfigParser "configparser.ConfigParser") class, deprecated since Python 3.2.
Patch by Hugo van Kemenade.
  * [bpo-44987](https://bugs.python.org/issue?@action=redirect&bpo=44987): Pure ASCII strings are now normalized in constant time by [`unicodedata.normalize()`](https://docs.python.org/3/library/unicodedata.html#unicodedata.normalize "unicodedata.normalize"). Patch by Donghee Na.
  * [bpo-35474](https://bugs.python.org/issue?@action=redirect&bpo=35474): Calling [`mimetypes.guess_all_extensions()`](https://docs.python.org/3/library/mimetypes.html#mimetypes.guess_all_extensions "mimetypes.guess_all_extensions") with `strict=False` no longer affects the result of the following call with `strict=True`. Also, mutating the returned list no longer affects the global state.
  * [bpo-45166](https://bugs.python.org/issue?@action=redirect&bpo=45166): [`typing.get_type_hints()`](https://docs.python.org/3/library/typing.html#typing.get_type_hints "typing.get_type_hints") now works with [`Final`](https://docs.python.org/3/library/typing.html#typing.Final "typing.Final") wrapped in [`ForwardRef`](https://docs.python.org/3/library/typing.html#typing.ForwardRef "typing.ForwardRef").
  * [bpo-45162](https://bugs.python.org/issue?@action=redirect&bpo=45162): Remove many old deprecated [`unittest`](https://docs.python.org/3/library/unittest.html#module-unittest "unittest: Unit testing framework for Python.") features:
    * “`fail*`” and “`assert*`” aliases of [`TestCase`](https://docs.python.org/3/library/unittest.html#unittest.TestCase "unittest.TestCase") methods.
    * Broken from start [`TestCase`](https://docs.python.org/3/library/unittest.html#unittest.TestCase "unittest.TestCase") method `assertDictContainsSubset()`.
    * Ignored `<unittest.TestLoader.loadTestsFromModule> TestLoader.loadTestsFromModule()` parameter _use_load_tests_.
    * Old alias `_TextTestResult` of [`TextTestResult`](https://docs.python.org/3/library/unittest.html#unittest.TextTestResult "unittest.TextTestResult").
  * [bpo-38371](https://bugs.python.org/issue?@action=redirect&bpo=38371): Remove the deprecated `split()` method of `_tkinter.TkappType`. Patch by Erlend E. Aasland.
  * [bpo-20499](https://bugs.python.org/issue?@action=redirect&bpo=20499): Improve the speed and accuracy of statistics.pvariance().
  * [bpo-45132](https://bugs.python.org/issue?@action=redirect&bpo=45132): Remove [`__getitem__()`](https://docs.python.org/3/reference/datamodel.html#object.__getitem__ "object.__getitem__") methods of [`xml.dom.pulldom.DOMEventStream`](https://docs.python.org/3/library/xml.dom.pulldom.html#xml.dom.pulldom.DOMEventStream "xml.dom.pulldom.DOMEventStream"), [`wsgiref.util.FileWrapper`](https://docs.python.org/3/library/wsgiref.html#wsgiref.util.FileWrapper "wsgiref.util.FileWrapper") and [`fileinput.FileInput`](https://docs.python.org/3/library/fileinput.html#fileinput.FileInput "fileinput.FileInput"), deprecated since Python 3.9.
Patch by Hugo van Kemenade.
  * [bpo-45129](https://bugs.python.org/issue?@action=redirect&bpo=45129): Due to significant security concerns, the _reuse_address_ parameter of [`asyncio.loop.create_datagram_endpoint()`](https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.loop.create_datagram_endpoint "asyncio.loop.create_datagram_endpoint"), disabled in Python 3.9, is now entirely removed.