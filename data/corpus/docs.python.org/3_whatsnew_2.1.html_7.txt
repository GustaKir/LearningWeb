Title: PEP 232: Function Attributes and Their `__dict__`
URL: https://docs.python.org/3/whatsnew/2.1.html
Summary: This section discusses the `__dict__` attribute for functions in Python, which allows access to function attributes. Unlike class instances, functions can have their `__dict__` attribute reassigned to a standard Python dictionary, but not to objects like `UserDict`. It also references PEP 232 for further details.
---

```

The dictionary containing attributes can be accessed as the function’s [`__dict__`](https://docs.python.org/3/reference/datamodel.html#function.__dict__ "function.__dict__"). Unlike the [`__dict__`](https://docs.python.org/3/reference/datamodel.html#type.__dict__ "type.__dict__") attribute of class instances, in functions you can actually assign a new dictionary to [`__dict__`](https://docs.python.org/3/reference/datamodel.html#function.__dict__ "function.__dict__"), though the new value is restricted to a regular Python dictionary; you _can’t_ be tricky and set it to a `UserDict` instance, or any other random object that behaves like a mapping.
See also 

[**PEP 232**](https://peps.python.org/pep-0232/) - Function Attributes
    
Written and implemented by Barry Warsaw.
## PEP 235: Importing Modules on Case-Insensitive Platforms[¶](https://docs.python.org/3/whatsnew/2.1.html#pep-235-importing-modules-on-case-insensitive-platforms "Link to this heading")
Some operating systems have filesystems that are case-insensitive, MacOS and Windows being the primary examples; on these systems, it’s impossible to distinguish the filenames `FILE.PY` and `file.py`, even though they do store the file’s name in its original case (they’re case-preserving, too).
In Python 2.1, the [`import`](https://docs.python.org/3/reference/simple_stmts.html#import) statement will work to simulate case-sensitivity on case-insensitive platforms. Python will now search for the first case-sensitive match by default, raising an [`ImportError`](https://docs.python.org/3/library/exceptions.html#ImportError "ImportError") if no such file is found, so `import file` will not import a module named `FILE.PY`. Case-insensitive matching can be requested by setting the [`PYTHONCASEOK`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONCASEOK) environment variable before starting the Python interpreter.
## PEP 217: Interactive Display Hook[¶](https://docs.python.org/3/whatsnew/2.1.html#pep-217-interactive-display-hook "Link to this heading")
When using the Python interpreter interactively, the output of commands is displayed using the built-in [`repr()`](https://docs.python.org/3/library/functions.html#repr "repr") function. In Python 2.1, the variable [`sys.displayhook()`](https://docs.python.org/3/library/sys.html#sys.displayhook "sys.displayhook") can be set to a callable object which will be called instead of [`repr()`](https://docs.python.org/3/library/functions.html#repr "repr"). For example, you can set it to a special pretty-printing function:
>>>```
>>> # Create a recursive data structure
... L = [1,2,3]
>>> L.append(L)
>>> L # Show Python's default output
[1, 2, 3, [...]]
>>> # Use pprint.pprint() as the display function
... importsys,pprint
>>> sys.displayhook = pprint.pprint
>>> L
[1, 2, 3, <Recursion on list with id=135143996>]
>>>