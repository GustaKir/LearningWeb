Title: Core and Builtins Bug Fixes
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section details several bug fixes and improvements in Python's core and built-in functionalities, addressing issues such as regression in normalization, parser loop rules, crashes with nested filter objects, handling of Windows 7, and a deadlock at shutdown.
---

### Core and Builtins[¶](https://docs.python.org/3/whatsnew/changelog.html#id161 "Link to this heading")
  * [gh-102493](https://github.com/python/cpython/issues/102493): Fix regression in semantics of normalisation in `PyErr_SetObject`.
  * [gh-102416](https://github.com/python/cpython/issues/102416): Do not memoize incorrectly automatically generated loop rules in the parser. Patch by Pablo Galindo.
  * [gh-102356](https://github.com/python/cpython/issues/102356): Fix a bug that caused a crash when deallocating deeply nested filter objects. Patch by Marta Gómez Macías.
  * [gh-102336](https://github.com/python/cpython/issues/102336): Cleanup Windows 7 specific special handling. Patch by Max Bachmann.
  * [gh-102250](https://github.com/python/cpython/issues/102250): Fixed a segfault occurring when the interpreter calls a `__bool__` method that raises.
  * [gh-102126](https://github.com/python/cpython/issues/102126): Fix deadlock at shutdown when clearing thread states if any finalizer tries to acquire the runtime head lock. Patch by Kumar Aditya.
  * [gh-102027](https://github.com/python/cpython/issues/102027): Use `GetCurrentProcessId` on Windows when `getpid` is unavailable. Patch by Max Bachmann.
  * [gh-102056](https://github.com/python/cpython/issues/102056): Fix error handling bugs in interpreter’s exception printing code, which could cause a crash on infinite recursion.
  * [gh-100982](https://github.com/python/cpython/issues/100982): Restrict the scope of the `FOR_ITER_RANGE` instruction to the scope of the original [`FOR_ITER`](https://docs.python.org/3/library/dis.html#opcode-FOR_ITER) instruction, to allow instrumentation.
  * [gh-101967](https://github.com/python/cpython/issues/101967): Fix possible segfault in `positional_only_passed_as_keyword` function, when new list created.
  * [gh-101952](https://github.com/python/cpython/issues/101952): Fix possible segfault in `BUILD_SET` opcode, when new set created.
  * [gh-74895](https://github.com/python/cpython/issues/74895): [`socket.getaddrinfo`](https://docs.python.org/3/library/socket.html#socket.getaddrinfo "socket.getaddrinfo") no longer raises [`OverflowError`](https://docs.python.org/3/library/exceptions.html#OverflowError "OverflowError") for [`int`](https://docs.python.org/3/library/functions.html#int "int") **port** values outside of the C long range. Out of range values are left up to the underlying string based C library API to report. A [`socket.gaierror`](https://docs.python.org/3/library/socket.html#socket.gaierror "socket.gaierror") `SAI_SERVICE` may occur instead, or no error at all as not all platform C libraries generate an error.
  * [gh-101799](https://github.com/python/cpython/issues/101799): Add [`CALL_INTRINSIC_2`](https://docs.python.org/3/library/dis.html#opcode-CALL_INTRINSIC_2) and use it instead of `PREP_RERAISE_STAR`.
  * [gh-101857](https://github.com/python/cpython/issues/101857): Fix xattr support detection on Linux systems by widening the check to linux, not just glibc. This fixes support for musl.
  * [gh-84783](https://github.com/python/cpython/issues/84783): Make the slice object hashable. Patch by Will Bradshaw and Furkan Onder.
  * [gh-87849](https://github.com/python/cpython/issues/87849): Change the `SEND` instruction to leave the receiver on the stack. This allows the specialized form of `SEND` to skip the chain of C calls and jump directly to the `RESUME` in the generator or coroutine.
  * [gh-101765](https://github.com/python/cpython/issues/101765): Fix SystemError / segmentation fault in iter `__reduce__` when internal access of `builtins.__dict__` keys mutates the iter object.
  * [gh-101430](https://github.com/python/cpython/issues/101430): Update [`tracemalloc`](https://docs.python.org/3/library/tracemalloc.html#module-tracemalloc "tracemalloc: Trace memory allocations.") to handle presize of object properly. Patch by Donghee Na.
  * [gh-101696](https://github.com/python/cpython/issues/101696): Invalidate type version tag in `_PyStaticType_Dealloc` for static types, avoiding bug where a false cache hit could crash the interpreter. Patch by Kumar Aditya.
  * [gh-101632](https://github.com/python/cpython/issues/101632): Adds a new [`RETURN_CONST`](https://docs.python.org/3/library/dis.html#opcode-RETURN_CONST) instruction.
  * [gh-100719](https://github.com/python/cpython/issues/100719): Remove gi_code field from generator (and coroutine and async generator) objects as it is redundant. The frame already includes a reference to the code object.
  * [gh-98627](https://github.com/python/cpython/issues/98627): When an interpreter is configured to check (and only then), importing an extension module will now fail when the extension does not support multiple interpreters (i.e. doesn’t implement PEP 489 multi-phase init). This does not apply to the main interpreter, nor to subinterpreters created with `Py_NewInterpreter()`.