Title: mboxMessage Class in Python's mailbox Module
URL: https://docs.python.org/3/library/mailbox.html
Summary: The `mailbox.mboxMessage` class represents a message with mbox-specific behaviors, with a constructor parameter for the message content. Mbox messages are stored in a single file, featuring sender information and delivery time in a format that varies across implementations. Key flags indicating message status include 'Read', 'Old', and 'Deleted'.
---

_class_ mailbox.mboxMessage(_message =None_)[¶](https://docs.python.org/3/library/mailbox.html#mailbox.mboxMessage "Link to this definition")
    
A message with mbox-specific behaviors. Parameter _message_ has the same meaning as with the [`Message`](https://docs.python.org/3/library/mailbox.html#mailbox.Message "mailbox.Message") constructor.
Messages in an mbox mailbox are stored together in a single file. The sender’s envelope address and the time of delivery are typically stored in a line beginning with “From “ that is used to indicate the start of a message, though there is considerable variation in the exact format of this data among mbox implementations. Flags that indicate the state of the message, such as whether it has been read or marked as important, are typically stored in _Status_ and _X-Status_ headers.
Conventional flags for mbox messages are as follows:
Flag | Meaning | Explanation  
---|---|---  
R | Read | Read  
O | Old | Previously detected by MUA  
D | Deleted | Marked for subsequent deletion  
F | Flagged | Marked as important  
A | Answered | Replied to  
The “R” and “O” flags are stored in the _Status_ header, and the “D”, “F”, and “A” flags are stored in the _X-Status_ header. The flags and headers typically appear in the order mentioned.
`mboxMessage` instances offer the following methods: 

get_from()[¶](https://docs.python.org/3/library/mailbox.html#mailbox.mboxMessage.get_from "Link to this definition")
    
Return a string representing the “From “ line that marks the start of the message in an mbox mailbox. The leading “From “ and the trailing newline are excluded. 

set_from(_from__ , _time_ =None_)[¶](https://docs.python.org/3/library/mailbox.html#mailbox.mboxMessage.set_from "Link to this definition")
    
Set the “From “ line to _from__ , which should be specified without a leading “From “ or trailing newline. For convenience, _time__ may be specified and will be formatted appropriately and appended to _from__. If _time__ is specified, it should be a [`time.struct_time`](https://docs.python.org/3/library/time.html#time.struct_time "time.struct_time") instance, a tuple suitable for passing to [`time.strftime()`](https://docs.python.org/3/library/time.html#time.strftime "time.strftime"), or `True` (to use [`time.gmtime()`](https://docs.python.org/3/library/time.html#time.gmtime "time.gmtime")). 

get_flags()[¶](https://docs.python.org/3/library/mailbox.html#mailbox.mboxMessage.get_flags "Link to this definition")
    
Return a string specifying the flags that are currently set. If the message complies with the conventional format, the result is the concatenation in the following order of zero or one occurrence of each of `'R'`, `'O'`, `'D'`, `'F'`, and `'A'`. 

set_flags(_flags_)[¶](https://docs.python.org/3/library/mailbox.html#mailbox.mboxMessage.set_flags "Link to this definition")
    
Set the flags specified by _flags_ and unset all others. Parameter _flags_ should be the concatenation in any order of zero or more occurrences of each of `'R'`, `'O'`, `'D'`, `'F'`, and `'A'`. 

add_flag(_flag_)[¶](https://docs.python.org/3/library/mailbox.html#mailbox.mboxMessage.add_flag "Link to this definition")
    
Set the flag(s) specified by _flag_ without changing other flags. To add more than one flag at a time, _flag_ may be a string of more than one character.