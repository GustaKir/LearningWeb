Title: Backward Compatibility and Documentation Changes in Python
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: The `f_lasti` attribute of Python frame objects is maintained for backward-compatibility. Integer mod and remainder operations now consistently return ints from the small integer cache. Additionally, certain classes and functions, such as `ctypes.UnionType` and 24 methods in `ctypes`, were updated to respect the `--without-doc-strings` compilation flag, no longer providing unconditional docstrings.
---

The `f_lasti` attribute of Python-layer frame objects is preserved for backward-compatibility.
  * [bpo-46961](https://bugs.python.org/issue?@action=redirect&bpo=46961): Integer mod/remainder operations, including the three-argument form of [`pow()`](https://docs.python.org/3/library/functions.html#pow "pow"), now consistently return ints from the global small integer cache when applicable.
  * [bpo-46962](https://bugs.python.org/issue?@action=redirect&bpo=46962): Classes and functions that unconditionally declared their docstrings ignoring the `--without-doc-strings` compilation flag no longer do so.
The classes affected are `ctypes.UnionType`, [`pickle.PickleBuffer`](https://docs.python.org/3/library/pickle.html#pickle.PickleBuffer "pickle.PickleBuffer"), `testcapi.RecursingInfinitelyError`, and [`types.GenericAlias`](https://docs.python.org/3/library/types.html#types.GenericAlias "types.GenericAlias").
The functions affected are 24 methods in [`ctypes`](https://docs.python.org/3/library/ctypes.html#module-ctypes "ctypes: A foreign function library for Python.").
Patch by Oleg Iarygin.
  * [bpo-46942](https://bugs.python.org/issue?@action=redirect&bpo=46942): Use Argument Clinic for the [`types.MethodType`](https://docs.python.org/3/library/types.html#types.MethodType "types.MethodType") constructor. Patch by Oleg Iarygin.
  * [bpo-46764](https://bugs.python.org/issue?@action=redirect&bpo=46764): Fix wrapping bound methods with @classmethod
  * [bpo-43464](https://bugs.python.org/issue?@action=redirect&bpo=43464): Optimize `set.intersection()` for non-set arguments.
  * [bpo-46721](https://bugs.python.org/issue?@action=redirect&bpo=46721): Optimize `set.issuperset()` for non-set argument.
  * [bpo-46509](https://bugs.python.org/issue?@action=redirect&bpo=46509): Add type-specialized versions of the `Py_DECREF()`, and use them for `float`, `int`, `str`, `bool`, and `None` to avoid pointer-chasing at runtime where types are known at C compile time.
  * [bpo-46045](https://bugs.python.org/issue?@action=redirect&bpo=46045): Do not use POSIX semaphores on NetBSD
  * [bpo-36819](https://bugs.python.org/issue?@action=redirect&bpo=36819): Fix crashes in built-in encoders with error handlers that return position less or equal than the starting position of non-encodable characters.
  * [bpo-34093](https://bugs.python.org/issue?@action=redirect&bpo=34093): `marshal.dumps()` uses `FLAG_REF` for all interned strings. This makes output more deterministic and helps reproducible build.
  * [bpo-26579](https://bugs.python.org/issue?@action=redirect&bpo=26579): Added `object.__getstate__` which provides the default implementation of the `__getstate__()` method.
Copying and pickling instances of subclasses of builtin types bytearray, set, frozenset, collections.OrderedDict, collections.deque, weakref.WeakSet, and datetime.tzinfo now copies and pickles instance attributes implemented as slots.