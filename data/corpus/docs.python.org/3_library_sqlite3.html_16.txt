Title: SQLite3 Autocommit Attribute
URL: https://docs.python.org/3/library/sqlite3.html
Summary: The `autocommit` attribute in SQLite3 controls transaction behavior in compliance with PEP 249. It accepts three values: `False` for standard transaction behavior with explicit use of `commit()` and `rollback()`, recommended as the default; `True` for SQLite's autocommit mode; and `None` which sets the default behavior to `False`. This attribute is crucial for managing transactions effectively when using the sqlite3 library.
---

autocommit[¶](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.autocommit "Link to this definition")
    
This attribute controls [**PEP 249**](https://peps.python.org/pep-0249/)-compliant transaction behaviour. `autocommit` has three allowed values:
  * `False`: Select [**PEP 249**](https://peps.python.org/pep-0249/)-compliant transaction behaviour, implying that `sqlite3` ensures a transaction is always open. Use [`commit()`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.commit "sqlite3.Connection.commit") and [`rollback()`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.rollback "sqlite3.Connection.rollback") to close transactions.
This is the recommended value of `autocommit`.
  * `True`: Use SQLite’s [autocommit mode](https://www.sqlite.org/lang_transaction.html#implicit_versus_explicit_transactions). [`commit()`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.commit "sqlite3.Connection.commit") and [`rollback()`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.rollback "sqlite3.Connection.rollback") have no effect in this mode.
  * [`LEGACY_TRANSACTION_CONTROL`](https://docs.python.org/3/library/sqlite3.html#sqlite3.LEGACY_TRANSACTION_CONTROL "sqlite3.LEGACY_TRANSACTION_CONTROL"): Pre-Python 3.12 (non-[**PEP 249**](https://peps.python.org/pep-0249/)-compliant) transaction control. See [`isolation_level`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.isolation_level "sqlite3.Connection.isolation_level") for more details.
This is currently the default value of `autocommit`.


Changing `autocommit` to `False` will open a new transaction, and changing it to `True` will commit any pending transaction.
See [Transaction control via the autocommit attribute](https://docs.python.org/3/library/sqlite3.html#sqlite3-transaction-control-autocommit) for more details.
Note
The [`isolation_level`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.isolation_level "sqlite3.Connection.isolation_level") attribute has no effect unless [`autocommit`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.autocommit "sqlite3.Connection.autocommit") is [`LEGACY_TRANSACTION_CONTROL`](https://docs.python.org/3/library/sqlite3.html#sqlite3.LEGACY_TRANSACTION_CONTROL "sqlite3.LEGACY_TRANSACTION_CONTROL").
Added in version 3.12. 

in_transaction[¶](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.in_transaction "Link to this definition")
    
This read-only attribute corresponds to the low-level SQLite [autocommit mode](https://www.sqlite.org/lang_transaction.html#implicit_versus_explicit_transactions).
`True` if a transaction is active (there are uncommitted changes), `False` otherwise.
Added in version 3.2. 

isolation_level[¶](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.isolation_level "Link to this definition")
    
Controls the [legacy transaction handling mode](https://docs.python.org/3/library/sqlite3.html#sqlite3-transaction-control-isolation-level) of `sqlite3`. If set to `None`, transactions are never implicitly opened. If set to one of `"DEFERRED"`, `"IMMEDIATE"`, or `"EXCLUSIVE"`, corresponding to the underlying [SQLite transaction behaviour](https://www.sqlite.org/lang_transaction.html#deferred_immediate_and_exclusive_transactions), [implicit transaction management](https://docs.python.org/3/library/sqlite3.html#sqlite3-transaction-control-isolation-level) is performed.
If not overridden by the _isolation_level_ parameter of [`connect()`](https://docs.python.org/3/library/sqlite3.html#sqlite3.connect "sqlite3.connect"), the default is `""`, which is an alias for `"DEFERRED"`.
Note
Using [`autocommit`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.autocommit "sqlite3.Connection.autocommit") to control transaction handling is recommended over using `isolation_level`. `isolation_level` has no effect unless [`autocommit`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.autocommit "sqlite3.Connection.autocommit") is set to [`LEGACY_TRANSACTION_CONTROL`](https://docs.python.org/3/library/sqlite3.html#sqlite3.LEGACY_TRANSACTION_CONTROL "sqlite3.LEGACY_TRANSACTION_CONTROL") (the default).