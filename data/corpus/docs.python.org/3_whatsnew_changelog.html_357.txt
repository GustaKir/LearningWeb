Title: Deprecation Warning for Asyncio Functions
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This update introduces deprecation warnings for asyncio functions, such as ensure_future, wrap_future, gather, shield, and as_completed, that implicitly create Future or Task objects without a running event loop or an explicit loop argument.
---

Emit deprecation warning for [`asyncio`](https://docs.python.org/3/library/asyncio.html#module-asyncio "asyncio: Asynchronous I/O.") functions which implicitly create a [`Future`](https://docs.python.org/3/library/asyncio-future.html#asyncio.Future "asyncio.Future") or [`Task`](https://docs.python.org/3/library/asyncio-task.html#asyncio.Task "asyncio.Task") objects if there is no running event loop and no explicit _loop_ argument is passed: [`ensure_future()`](https://docs.python.org/3/library/asyncio-future.html#asyncio.ensure_future "asyncio.ensure_future"), [`wrap_future()`](https://docs.python.org/3/library/asyncio-future.html#asyncio.wrap_future "asyncio.wrap_future"), [`gather()`](https://docs.python.org/3/library/asyncio-task.html#asyncio.gather "asyncio.gather"), [`shield()`](https://docs.python.org/3/library/asyncio-task.html#asyncio.shield "asyncio.shield"), [`as_completed()`](https://docs.python.org/3/library/asyncio-task.html#asyncio.as_completed "asyncio.as_completed") and constructors of [`Future`](https://docs.python.org/3/library/asyncio-future.html#asyncio.Future "asyncio.Future"), [`Task`](https://docs.python.org/3/library/asyncio-task.html#asyncio.Task "asyncio.Task"), [`StreamReader`](https://docs.python.org/3/library/asyncio-stream.html#asyncio.StreamReader "asyncio.StreamReader"), `StreamReaderProtocol`.
  * [bpo-18369](https://bugs.python.org/issue?@action=redirect&bpo=18369): Certificate and PrivateKey classes were added to the ssl module. Certificates and keys can now be loaded from memory buffer, too.
  * [bpo-41486](https://bugs.python.org/issue?@action=redirect&bpo=41486): Use a new output buffer management code for [`bz2`](https://docs.python.org/3/library/bz2.html#module-bz2 "bz2: Interfaces for bzip2 compression and decompression.") / [`lzma`](https://docs.python.org/3/library/lzma.html#module-lzma "lzma: A Python wrapper for the liblzma compression library.") / [`zlib`](https://docs.python.org/3/library/zlib.html#module-zlib "zlib: Low-level interface to compression and decompression routines compatible with gzip.") modules, and add `.readall()` function to `_compression.DecompressReader` class. These bring some performance improvements. Patch by Ma Lin.
  * [bpo-31870](https://bugs.python.org/issue?@action=redirect&bpo=31870): The [`ssl.get_server_certificate()`](https://docs.python.org/3/library/ssl.html#ssl.get_server_certificate "ssl.get_server_certificate") function now has a _timeout_ parameter.
  * [bpo-41735](https://bugs.python.org/issue?@action=redirect&bpo=41735): Fix thread locks in zlib module may go wrong in rare case. Patch by Ma Lin.
  * [bpo-36470](https://bugs.python.org/issue?@action=redirect&bpo=36470): Fix dataclasses with `InitVar`s and [`replace()`](https://docs.python.org/3/library/dataclasses.html#dataclasses.replace "dataclasses.replace"). Patch by Claudiu Popa.
  * [bpo-40849](https://bugs.python.org/issue?@action=redirect&bpo=40849): Expose X509_V_FLAG_PARTIAL_CHAIN ssl flag
  * [bpo-35114](https://bugs.python.org/issue?@action=redirect&bpo=35114): [`ssl.RAND_status()`](https://docs.python.org/3/library/ssl.html#ssl.RAND_status "ssl.RAND_status") now returns a boolean value (as documented) instead of `1` or `0`.
  * [bpo-39906](https://bugs.python.org/issue?@action=redirect&bpo=39906): [`pathlib.Path.stat()`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.stat "pathlib.Path.stat") and [`chmod()`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.chmod "pathlib.Path.chmod") now accept a _follow_symlinks_ keyword-only argument for consistency with corresponding functions in the [`os`](https://docs.python.org/3/library/os.html#module-os "os: Miscellaneous operating system interfaces.") module.
  * [bpo-39899](https://bugs.python.org/issue?@action=redirect&bpo=39899): [`os.path.expanduser()`](https://docs.python.org/3/library/os.path.html#os.path.expanduser "os.path.expanduser") now refuses to guess Windows home directories if the basename of current userâ€™s home directory does not match their username.
[`pathlib.Path.expanduser()`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.expanduser "pathlib.Path.expanduser") and [`home()`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.home "pathlib.Path.home") now consistently raise [`RuntimeError`](https://docs.python.org/3/library/exceptions.html#RuntimeError "RuntimeError") exception when a home directory cannot be resolved.