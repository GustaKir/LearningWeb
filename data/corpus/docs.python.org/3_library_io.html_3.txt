Title: io.text_encoding Function
URL: https://docs.python.org/3/library/io.html
Summary: The `io.text_encoding` function helps in determining the encoding for callables that use `open()` or `TextIOWrapper` with an `encoding=None` parameter. It returns the specified encoding if not `None`, or `
---

io.text_encoding(_encoding_ , _stacklevel =2_, _/_)[¶](https://docs.python.org/3/library/io.html#io.text_encoding "Link to this definition")
    
This is a helper function for callables that use [`open()`](https://docs.python.org/3/library/functions.html#open "open") or [`TextIOWrapper`](https://docs.python.org/3/library/io.html#io.TextIOWrapper "io.TextIOWrapper") and have an `encoding=None` parameter.
This function returns _encoding_ if it is not `None`. Otherwise, it returns `"locale"` or `"utf-8"` depending on [UTF-8 Mode](https://docs.python.org/3/library/os.html#utf8-mode).
This function emits an [`EncodingWarning`](https://docs.python.org/3/library/exceptions.html#EncodingWarning "EncodingWarning") if [`sys.flags.warn_default_encoding`](https://docs.python.org/3/library/sys.html#sys.flags "sys.flags") is true and _encoding_ is `None`. _stacklevel_ specifies where the warning is emitted. For example:
```
defread_text(path, encoding=None):
  encoding = io.text_encoding(encoding) # stacklevel=2
  with open(path, encoding) as f:
    return f.read()

```

In this example, an [`EncodingWarning`](https://docs.python.org/3/library/exceptions.html#EncodingWarning "EncodingWarning") is emitted for the caller of `read_text()`.
See [Text Encoding](https://docs.python.org/3/library/io.html#io-text-encoding) for more information.
Added in version 3.10.
Changed in version 3.11: [`text_encoding()`](https://docs.python.org/3/library/io.html#io.text_encoding "io.text_encoding") returns “utf-8” when UTF-8 mode is enabled and _encoding_ is `None`. 

_exception_ io.BlockingIOError[¶](https://docs.python.org/3/library/io.html#io.BlockingIOError "Link to this definition")
    
This is a compatibility alias for the builtin [`BlockingIOError`](https://docs.python.org/3/library/exceptions.html#BlockingIOError "BlockingIOError") exception. 

_exception_ io.UnsupportedOperation[¶](https://docs.python.org/3/library/io.html#io.UnsupportedOperation "Link to this definition")
    
An exception inheriting [`OSError`](https://docs.python.org/3/library/exceptions.html#OSError "OSError") and [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError "ValueError") that is raised when an unsupported operation is called on a stream.
See also