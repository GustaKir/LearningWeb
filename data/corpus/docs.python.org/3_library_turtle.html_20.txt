Title: Translation of Docstrings into Different Languages
URL: https://docs.python.org/3/library/turtle.html
Summary: This section describes a utility function, `turtle.write_docstringdict`, that creates a dictionary mapping method names to their docstrings for the Screen and Turtle classes. The function allows users to write this dictionary to a specified Python script file.
---

```



These modified docstrings are created automatically together with the function definitions that are derived from the methods at import time.
### Translation of docstrings into different languages[¶](https://docs.python.org/3/library/turtle.html#translation-of-docstrings-into-different-languages "Link to this heading")
There is a utility to create a dictionary the keys of which are the method names and the values of which are the docstrings of the public methods of the classes Screen and Turtle. 

turtle.write_docstringdict(_filename ='turtle_docstringdict'_)[¶](https://docs.python.org/3/library/turtle.html#turtle.write_docstringdict "Link to this definition")
     

Parameters:
    
**filename** – a string, used as filename
Create and write docstring-dictionary to a Python script with the given filename. This function has to be called explicitly (it is not used by the turtle graphics classes). The docstring dictionary will be written to the Python script `_filename_.py`. It is intended to serve as a template for translation of the docstrings into different languages.
If you (or your students) want to use [`turtle`](https://docs.python.org/3/library/turtle.html#module-turtle "turtle: An educational framework for simple graphics applications") with online help in your native language, you have to translate the docstrings and save the resulting file as e.g. `turtle_docstringdict_german.py`.
If you have an appropriate entry in your `turtle.cfg` file this dictionary will be read in at import time and will replace the original English docstrings.
At the time of this writing there are docstring dictionaries in German and in Italian. (Requests please to glingl@aon.at.)
### How to configure Screen and Turtles[¶](https://docs.python.org/3/library/turtle.html#how-to-configure-screen-and-turtles "Link to this heading")
The built-in default configuration mimics the appearance and behaviour of the old turtle module in order to retain best possible compatibility with it.
If you want to use a different configuration which better reflects the features of this module or which better fits to your needs, e.g. for use in a classroom, you can prepare a configuration file `turtle.cfg` which will be read at import time and modify the configuration according to its settings.
The built in configuration would correspond to the following `turtle.cfg`:
```
width=0.5
height=0.75
leftright=None
topbottom=None
canvwidth=400
canvheight=300
mode=standard
colormode=1.0
delay=10
undobuffersize=1000
shape=classic
pencolor=black
fillcolor=black
resizemode=noresize
visible=True
language=english
exampleturtle=turtle
examplescreen=screen
title=Python Turtle Graphics
using_IDLE=False