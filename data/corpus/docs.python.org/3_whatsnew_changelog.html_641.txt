Title: Python Library Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section outlines updates in the Python library, including bug fixes for xml.etree parser crashes, improvements to typing.get_type_hints, speed enhancements in the typing module, adjustments to the ElementTree C accelerator module, and socket.create_connection improvements that address reference cycles.
---

### Library[¶](https://docs.python.org/3/whatsnew/changelog.html#id607 "Link to this heading")
  * [bpo-31499](https://bugs.python.org/issue?@action=redirect&bpo=31499): xml.etree: Fix a crash when a parser is part of a reference cycle.
  * [bpo-28556](https://bugs.python.org/issue?@action=redirect&bpo=28556): typing.get_type_hints now finds the right globalns for classes and modules by default (when no `globalns` was specified by the caller).
  * [bpo-28556](https://bugs.python.org/issue?@action=redirect&bpo=28556): Speed improvements to the `typing` module. Original PRs by Ivan Levkivskyi and Mitar.
  * [bpo-31544](https://bugs.python.org/issue?@action=redirect&bpo=31544): The C accelerator module of ElementTree ignored exceptions raised when looking up TreeBuilder target methods in XMLParser().
  * [bpo-31234](https://bugs.python.org/issue?@action=redirect&bpo=31234): socket.create_connection() now fixes manually a reference cycle: clear the variable storing the last exception on success.
  * [bpo-31457](https://bugs.python.org/issue?@action=redirect&bpo=31457): LoggerAdapter objects can now be nested.
  * [bpo-31400](https://bugs.python.org/issue?@action=redirect&bpo=31400): Improves SSL error handling to avoid losing error numbers.
  * [bpo-28958](https://bugs.python.org/issue?@action=redirect&bpo=28958): ssl.SSLContext() now uses OpenSSL error information when a context cannot be instantiated.
  * [bpo-27340](https://bugs.python.org/issue?@action=redirect&bpo=27340): SSLSocket.sendall() now uses memoryview to create slices of data. This fixes support for all bytes-like object. It is also more efficient and avoids costly copies.
  * [bpo-31178](https://bugs.python.org/issue?@action=redirect&bpo=31178): Fix string concatenation bug in rare error path in the subprocess module
  * [bpo-31350](https://bugs.python.org/issue?@action=redirect&bpo=31350): Micro-optimize `asyncio._get_running_loop()` to become up to 10% faster.
  * [bpo-31170](https://bugs.python.org/issue?@action=redirect&bpo=31170): expat: Update libexpat from 2.2.3 to 2.2.4. Fix copying of partial characters for UTF-8 input (libexpat bug 115): <https://github.com/libexpat/libexpat/issues/115>
  * [bpo-29136](https://bugs.python.org/issue?@action=redirect&bpo=29136): Add TLS 1.3 cipher suites and OP_NO_TLSv1_3.
  * [bpo-29212](https://bugs.python.org/issue?@action=redirect&bpo=29212): Fix concurrent.futures.thread.ThreadPoolExecutor threads to have a non repr() based thread name by default when no thread_name_prefix is supplied. They will now identify themselves as “ThreadPoolExecutor-y_n”.
  * [bpo-9146](https://bugs.python.org/issue?@action=redirect&bpo=9146): Fix a segmentation fault in _hashopenssl when standard hash functions such as md5 are not available in the linked OpenSSL library. As in some special FIPS-140 build environments.
  * [bpo-27144](https://bugs.python.org/issue?@action=redirect&bpo=27144): The `map()` and `as_completed()` iterators in `concurrent.futures` now avoid keeping a reference to yielded objects.
  * [bpo-10746](https://bugs.python.org/issue?@action=redirect&bpo=10746): Fix ctypes producing wrong [**PEP 3118**](https://peps.python.org/pep-3118/) type codes for integer types.
  * [bpo-22536](https://bugs.python.org/issue?@action=redirect&bpo=22536): The subprocess module now sets the filename when FileNotFoundError is raised on POSIX systems due to the executable or cwd not being found.
  * [bpo-31249](https://bugs.python.org/issue?@action=redirect&bpo=31249): concurrent.futures: WorkItem.run() used by ThreadPoolExecutor now breaks a reference cycle between an exception object and the WorkItem object.
  * [bpo-31247](https://bugs.python.org/issue?@action=redirect&bpo=31247): xmlrpc.server now explicitly breaks reference cycles when using sys.exc_info() in code handling exceptions.
  * [bpo-30102](https://bugs.python.org/issue?@action=redirect&bpo=30102): The ssl and hashlib modules now call OPENSSL_add_all_algorithms_noconf() on OpenSSL < 1.1.0. The function detects CPU features and enables optimizations on some CPU architectures such as POWER8. Patch is based on research from Gustavo Serra Scalet.
  * [bpo-31185](https://bugs.python.org/issue?@action=redirect&bpo=31185): Fixed miscellaneous errors in asyncio speedup module.
  * [bpo-31135](https://bugs.python.org/issue?@action=redirect&bpo=31135): ttk: fix the destroy() method of LabeledScale and OptionMenu classes. Call the parent destroy() method even if the used attribute doesn’t exist. The LabeledScale.destroy() method now also explicitly clears label and scale attributes to help the garbage collector to destroy all widgets.
  * [bpo-31107](https://bugs.python.org/issue?@action=redirect&bpo=31107): Fix `copyreg._slotnames()` mangled attribute calculation for classes whose name begins with an underscore. Patch by Shane Harvey.
  * [bpo-31061](https://bugs.python.org/issue?@action=redirect&bpo=31061): Fixed a crash when using asyncio and threads.
  * [bpo-305