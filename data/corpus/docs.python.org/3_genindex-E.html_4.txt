Title: Encoding Methods in Python Documentation
URL: https://docs.python.org/3/genindex-E.html
Summary: This section lists various 'encode' methods available in Python's libraries, including the codecs module, JSON encoder, email headers, and more. Each entry provides a link to the relevant documentation for detailed information.
---

e)
  * [encode() (codecs.Codec method)](https://docs.python.org/3/library/codecs.html#codecs.Codec.encode)
    * [(codecs.IncrementalEncoder method)](https://docs.python.org/3/library/codecs.html#codecs.IncrementalEncoder.encode)
    * [(email.header.Header method)](https://docs.python.org/3/library/email.header.html#email.header.Header.encode)
    * [(in module base64)](https://docs.python.org/3/library/base64.html#base64.encode)
    * [(in module codecs)](https://docs.python.org/3/library/codecs.html#codecs.encode)
    * [(in module quopri)](https://docs.python.org/3/library/quopri.html#quopri.encode)
    * [(json.JSONEncoder method)](https://docs.python.org/3/library/json.html#json.JSONEncoder.encode)
    * [(str method)](https://docs.python.org/3/library/stdtypes.html#str.encode)
    * [(xmlrpc.client.Binary method)](https://docs.python.org/3/library/xmlrpc.client.html#xmlrpc.client.Binary.encode)
    * [(xmlrpc.client.DateTime method)](https://docs.python.org/3/library/xmlrpc.client.html#xmlrpc.client.DateTime.encode)
  * [encode_7or8bit() (in module email.encoders)](https://docs.python.org/3/library/email.encoders.html#email.encoders.encode_7or8bit)
  * [encode_base64() (in module email.encoders)](https://docs.python.org/3/library/email.encoders.html#email.encoders.encode_base64)
  * [encode_noop() (in module email.encoders)](https://docs.python.org/3/library/email.encoders.html#email.encoders.encode_noop)
  * [encode_quopri() (in module email.encoders)](https://docs.python.org/3/library/email.encoders.html#email.encoders.encode_quopri)
  * [encode_rfc2231() (in module email.utils)](https://docs.python.org/3/library/email.utils.html#email.utils.encode_rfc2231)
  * [encodebytes() (in module base64)](https://docs.python.org/3/library/base64.html#base64.encodebytes)
  * [EncodedFile() (in module codecs)](https://docs.python.org/3/library/codecs.html#codecs.EncodedFile)
  * [encodePriority() (logging.handlers.SysLogHandler method)](https://docs.python.org/3/library/logging.handlers.html#logging.handlers.SysLogHandler.encodePriority)
  * [encodestring() (in module quopri)](https://docs.python.org/3/library/quopri.html#quopri.encodestring)
  * encoding 
    * [base64](https://docs.python.org/3/library/base64.html#index-0)
    * [quoted-printable](https://docs.python.org/3/library/quopri.html#index-0)
  * [encoding (curses.window attribute)](https://docs.python.org/3/library/curses.html#curses.window.encoding)
  * [ENCODING (in module tarfile)](https://docs.python.org/3/library/tarfile.html#tarfile.ENCODING)
    * [(in module token)](https://docs.python.org/3/library/token.html#token.ENCODING)
  * [encoding (io.TextIOBase attribute)](https://docs.python.org/3/library/io.html#io.TextIOBase.encoding)
    * [(UnicodeError attribute)](https://docs.python.org/3/library/exceptions.html#UnicodeError.encoding)
  * [encoding declarations (source file)](https://docs.python.org/3/reference/lexical_analysis.html#index-5)
  * encodings.idna 
    * [module](https://docs.python.org/3/library/codecs.html#module-encodings.idna)
  * encodings.mbcs 
    * [module](https://docs.python.org/3/library/codecs.html#module-encodings.mbcs)
  * encodings.utf_8_sig 
    * [module](https://docs.python.org/3/library/codecs.html#module-encodings.utf_8_sig)
  * [encodings_map (in module mimetypes)](https://docs.python.org/3/library/mimetypes.html#mimetypes.encodings_map)
    * [(mimetypes.MimeTypes attribute)](https://docs.python.org/3/library/mimetypes.html#mimetypes.MimeTypes.encodings_map)
  * [EncodingWarning](https://docs.python.org/3/library/exceptions.html#EncodingWarning)
  * [end (UnicodeError attribute)](https://docs.python.org/3/library/exceptions.html#UnicodeError.end)
  * [end() (re.Match method)](https://docs.python.org/3/library/re.html#re.Match.end)
    * [(xml.etree.ElementTree.TreeBuilder method)](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.TreeBuilder.end)
  * [END_ASYNC_FOR (opcode)](https://docs.python.org/3/library/dis.html#opcode-END_ASYNC_FOR)
  * [end_col_offset (ast.AST attribute)](https://docs.python.org/3/library/ast.html#ast.AST.end_col_offset)
  * [end_colno (traceback.FrameSummary attribute)](https://docs.python.org/3/library/traceback.html#traceback.FrameSummary.end_colno)
  * [end_fill() (in module turtle)](https://docs.python.org/3/library/turtle.html#turtle.end_fill)
  * [END_FOR (opcode)](https://docs.python.org/3/library/dis.html#opcode-END_FOR)
  * [end_headers() (http.server.BaseHTTPRequestHandler method)](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler.end_headers)
  * [end_lineno (ast.AST attribute)](https://docs.python.org/3/library/ast.html#ast.AST.end_lineno)
    * [(SyntaxError attribute)](https://docs.python.org/3/library/exceptions.html#SyntaxError.end_lineno)
    * [(traceback.FrameSummary attribute)](https://docs.python.org/3/library/traceback.html#traceback.FrameSummary.end_lineno)
    * [(traceback.TracebackExcepti