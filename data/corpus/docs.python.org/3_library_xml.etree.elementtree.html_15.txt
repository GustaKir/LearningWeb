Title: ElementTree.write() Method
URL: https://docs.python.org/3/library/xml.etree.elementtree.html
Summary: The write() method writes an element tree to a file as XML, with parameters to specify output encoding, XML declaration options, default namespace, and output method. Default settings apply if parameters are not specified.
---

write(_file_ , _encoding ='us-ascii'_, _xml_declaration =None_, _default_namespace =None_, _method ='xml'_, _*_ , _short_empty_elements =True_)[¶](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.ElementTree.write "Link to this definition")
    
Writes the element tree to a file, as XML. _file_ is a file name, or a [file object](https://docs.python.org/3/glossary.html#term-file-object) opened for writing. _encoding_ [[1]](https://docs.python.org/3/library/xml.etree.elementtree.html#id9) is the output encoding (default is US-ASCII). _xml_declaration_ controls if an XML declaration should be added to the file. Use `False` for never, `True` for always, `None` for only if not US-ASCII or UTF-8 or Unicode (default is `None`). _default_namespace_ sets the default XML namespace (for “xmlns”). _method_ is either `"xml"`, `"html"` or `"text"` (default is `"xml"`). The keyword-only _short_empty_elements_ parameter controls the formatting of elements that contain no content. If `True` (the default), they are emitted as a single self-closed tag, otherwise they are emitted as a pair of start/end tags.
The output is either a string ([`str`](https://docs.python.org/3/library/stdtypes.html#str "str")) or binary ([`bytes`](https://docs.python.org/3/library/stdtypes.html#bytes "bytes")). This is controlled by the _encoding_ argument. If _encoding_ is `"unicode"`, the output is a string; otherwise, it’s binary. Note that this may conflict with the type of _file_ if it’s an open [file object](https://docs.python.org/3/glossary.html#term-file-object); make sure you do not try to write a string to a binary stream and vice versa.
Changed in version 3.4: Added the _short_empty_elements_ parameter.
Changed in version 3.8: The [`write()`](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.ElementTree.write "xml.etree.ElementTree.ElementTree.write") method now preserves the attribute order specified by the user.
This is the XML file that is going to be manipulated:
```
<html>
  <head>
    <title>Example page</title>
  </head>
  <body>
    <p>Moved to <a href="http://example.org/">example.org</a>
    or <a href="http://example.com/">example.com</a>.</p>
  </body>
</html>

```

Example of changing the attribute “target” of every link in first paragraph:
>>>```
>>> fromxml.etree.ElementTreeimport ElementTree
>>> tree = ElementTree()
>>> tree.parse("index.xhtml")
<Element 'html' at 0xb77e6fac>
>>> p = tree.find("body/p")   # Finds first occurrence of tag p in body
>>> p
<Element 'p' at 0xb77ec26c>
>>> links = list(p.iter("a"))  # Returns list of all links
>>> links
[<Element 'a' at 0xb77ec2ac>, <Element 'a' at 0xb77ec1cc>]
>>> for i in links:       # Iterates through all found links
...   i.attrib["target"] = "blank"
...
>>> tree.write("output.xhtml")