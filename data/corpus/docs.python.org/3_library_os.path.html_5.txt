Title: os.path.realpath Function
URL: https://docs.python.org/3/library/os.path.html
Summary: The os.path.realpath function returns the canonical path of a specified filename, resolving symbolic links and MS-DOS style names on Windows. It raises an OSError if a path doesn't exist or if a symlink loop occurs when 'strict' is True; otherwise, errors are ignored. The function's behavior may vary slightly between Windows and UNIX systems.
---

os.path.realpath(_path_ , _*_ , _strict =False_)[¶](https://docs.python.org/3/library/os.path.html#os.path.realpath "Link to this definition")
    
Return the canonical path of the specified filename, eliminating any symbolic links encountered in the path (if they are supported by the operating system). On Windows, this function will also resolve MS-DOS (also called 8.3) style names such as `C:\\PROGRA~1` to `C:\\Program Files`.
If a path doesn’t exist or a symlink loop is encountered, and _strict_ is `True`, [`OSError`](https://docs.python.org/3/library/exceptions.html#OSError "OSError") is raised. If _strict_ is `False` these errors are ignored, and so the result might be missing or otherwise inaccessible.
Note
This function emulates the operating system’s procedure for making a path canonical, which differs slightly between Windows and UNIX with respect to how links and subsequent path components interact.
Operating system APIs make paths canonical as needed, so it’s not normally necessary to call this function.
Changed in version 3.6: Accepts a [path-like object](https://docs.python.org/3/glossary.html#term-path-like-object).
Changed in version 3.8: Symbolic links and junctions are now resolved on Windows.
Changed in version 3.10: The _strict_ parameter was added. 

os.path.relpath(_path_ , _start =os.curdir_)[¶](https://docs.python.org/3/library/os.path.html#os.path.relpath "Link to this definition")
    
Return a relative filepath to _path_ either from the current directory or from an optional _start_ directory. This is a path computation: the filesystem is not accessed to confirm the existence or nature of _path_ or _start_. On Windows, [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError "ValueError") is raised when _path_ and _start_ are on different drives.
_start_ defaults to [`os.curdir`](https://docs.python.org/3/library/os.html#os.curdir "os.curdir").
Changed in version 3.6: Accepts a [path-like object](https://docs.python.org/3/glossary.html#term-path-like-object). 

os.path.samefile(_path1_ , _path2_)[¶](https://docs.python.org/3/library/os.path.html#os.path.samefile "Link to this definition")
    
Return `True` if both pathname arguments refer to the same file or directory. This is determined by the device number and i-node number and raises an exception if an [`os.stat()`](https://docs.python.org/3/library/os.html#os.stat "os.stat") call on either pathname fails.
Changed in version 3.2: Added Windows support.
Changed in version 3.4: Windows now uses the same implementation as all other platforms.
Changed in version 3.6: Accepts a [path-like object](https://docs.python.org/3/glossary.html#term-path-like-object). 

os.path.sameopenfile(_fp1_ , _fp2_)[¶](https://docs.python.org/3/library/os.path.html#os.path.sameopenfile "Link to this definition")
    
Return `True` if the file descriptors _fp1_ and _fp2_ refer to the same file.
Changed in version 3.2: Added Windows support.
Changed in version 3.6: Accepts a [path-like object](https://docs.python.org/3/glossary.html#term-path-like-object). 

os.path.samestat(_stat1_ , _stat2_)[¶](https://docs.python.org/3/library/os.path.html#os.path.samestat "Link to this definition")
    
Return `True` if the stat tuples _stat1_ and _stat2_ refer to the same file. These structures may have been returned by [`os.fstat()`](https://docs.python.org/3/library/os.html#os.fstat "os.fstat"), [`os.lstat()`](https://docs.python.org/3/library/os.html#os.lstat "os.lstat"), or [`os.stat()`](https://docs.python.org/3/library/os.html#os.stat "os.stat"). This function implements the underlying comparison used by [`samefile()`](https://docs.python.org/3/library/os.path.html#os.path.samefile "os.path.samefile") and [`sameopenfile()`](https://docs.python.org/3/library/os.path.html#os.path.sameopenfile "os.path.sameopenfile").
Changed in version 3.4: Added Windows support.
Changed in version 3.6: Accepts a [path-like object](https://docs.python.org/3/glossary.html#term-path-like-object).