Title: Python Documentation: Index of Terms Starting with 'W'
URL: https://docs.python.org/3/genindex-W.html
Summary: This section provides a list of Python terms and modules starting with the letter 'W,' including references to 'winerror' in OSError, 'WinError' in ctypes, 'winreg' module, 'winsound' module, and 'with' statement usage.
---

| 
  * [winerror (OSError attribute)](https://docs.python.org/3/library/exceptions.html#OSError.winerror)
  * [WinError() (in module ctypes)](https://docs.python.org/3/library/ctypes.html#ctypes.WinError)
  * [WINFUNCTYPE() (in module ctypes)](https://docs.python.org/3/library/ctypes.html#ctypes.WINFUNCTYPE)
  * winreg 
    * [module](https://docs.python.org/3/library/winreg.html#module-winreg)
  * [WinSock](https://docs.python.org/3/library/select.html#index-2)
  * winsound 
    * [module](https://docs.python.org/3/library/winsound.html#module-winsound)
  * [winver (in module sys)](https://docs.python.org/3/library/sys.html#sys.winver)
  * with 
    * [**statement**](https://docs.python.org/3/reference/compound_stmts.html#index-16), [[1]](https://docs.python.org/3/reference/datamodel.html#index-108)
  * [With (class in ast)](https://docs.python.org/3/library/ast.html#ast.With)
  * [WITH_EXCEPT_START (opcode)](https://docs.python.org/3/library/dis.html#opcode-WITH_EXCEPT_START)
  * [with_hostmask (ipaddress.IPv4Interface attribute)](https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv4Interface.with_hostmask)
    * [(ipaddress.IPv4Network attribute)](https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv4Network.with_hostmask)
    * [(ipaddress.IPv6Interface attribute)](https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv6Interface.with_hostmask)
    * [(ipaddress.IPv6Network attribute)](https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv6Network.with_hostmask)
  * [with_name() (pathlib.PurePath method)](https://docs.python.org/3/library/pathlib.html#pathlib.PurePath.with_name)
  * [with_netmask (ipaddress.IPv4Interface attribute)](https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv4Interface.with_netmask)
    * [(ipaddress.IPv4Network attribute)](https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv4Network.with_netmask)
    * [(ipaddress.IPv6Interface attribute)](https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv6Interface.with_netmask)
    * [(ipaddress.IPv6Network attribute)](https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv6Network.with_netmask)
  * [with_prefixlen (ipaddress.IPv4Interface attribute)](https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv4Interface.with_prefixlen)
    * [(ipaddress.IPv4Network attribute)](https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv4Network.with_prefixlen)
    * [(ipaddress.IPv6Interface attribute)](https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv6Interface.with_prefixlen)
    * [(ipaddress.IPv6Network attribute)](https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv6Network.with_prefixlen)
  * [with_pymalloc() (in module test.support)](https://docs.python.org/3/library/test.html#test.support.with_pymalloc)
  * [with_segments() (pathlib.PurePath method)](https://docs.python.org/3/library/pathlib.html#pathlib.PurePath.with_segments)
  * [with_stem() (pathlib.PurePath method)](https://docs.python.org/3/library/pathlib.html#pathlib.PurePath.with_stem)
  * [with_suffix() (pathlib.PurePath method)](https://docs.python.org/3/library/pathlib.html#pathlib.PurePath.with_suffix)
  * [with_traceback() (BaseException method)](https://docs.python.org/3/library/exceptions.html#BaseException.with_traceback)
  * [withitem (class in ast)](https://docs.python.org/3/library/ast.html#ast.withitem)
  * [WNOHANG (in module os)](https://docs.python.org/3/library/os.html#os.WNOHANG)
  * [WNOWAIT (in module os)](https://docs.python.org/3/library/os.html#os.WNOWAIT)
  * [wordchars (shlex.shlex attribute)](https://docs.python.org/3/library/shlex.html#shlex.shlex.wordchars)
  * [World Wide Web](https://docs.python.org/3/library/internet.html#index-0), [[1]](https://docs.python.org/3/library/urllib.parse.html#index-0), [[2]](https://docs.python.org/3/library/urllib.robotparser.html#index-0)
  * [wrap() (in module textwrap)](https://docs.python.org/3/library/textwrap.html#textwrap.wrap)
    * [(textwrap.TextWrapper method)](https://docs.python.org/3/library/textwrap.html#textwrap.TextWrapper.wrap)
  * [wrap_bio() (ssl.SSLContext method)](https://docs.python.org/3/library/ssl.html#ssl.SSLContext.wrap_bio)
  * [wrap_future() (in module asyncio)](https://docs.python.org/3/library/asyncio-future.html#asyncio.wrap_future)
  * [wrap_socket() (ssl.SSLContext method)](https://docs.python.org/3/library/ssl.html#ssl.SSLContext.wrap_socket)
  * [wrapper() (in module curses)](https://docs.python.org/3/library/curses.html#curses.wrapper)
  * [WrapperDescriptorType (in module types)](https://docs.python.org/3/library/types.html#types.WrapperDescriptorType)
  * [wraps() (in module functools)](https://docs.python.org/3/library/functools.html#functools.wraps)
  * [WRITABLE (in module _tkinter)](https://docs.python.org/3/library/tkinter.html#tkinter.WRITABLE)
    * [(inspect.BufferFlags attribute)](https://docs.python.org/3/library/inspect.html#inspect.BufferFlags.WRITABLE)
  * [writ