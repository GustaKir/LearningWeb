Title: Library Updates and Bug Fixes
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section highlights several bug fixes in the Python standard library, including improvements to `unittest.mock`, memory management in `tracemalloc`, and corrections in the behavior of `multiprocessing.Queue` and `readline`. Specific issues addressed include ensuring method-bound built-in functions work correctly in mocks, proper reference handling in `tracemalloc`, and improved thread completion handling for queues.
---

### Library[¶](https://docs.python.org/3/whatsnew/changelog.html#id709 "Link to this heading")
  * [bpo-29403](https://bugs.python.org/issue?@action=redirect&bpo=29403): Fix `unittest.mock`’s autospec to not fail on method-bound builtin functions. Patch by Aaron Gallagher.
  * [bpo-30961](https://bugs.python.org/issue?@action=redirect&bpo=30961): Fix decrementing a borrowed reference in tracemalloc.
  * [bpo-30886](https://bugs.python.org/issue?@action=redirect&bpo=30886): Fix multiprocessing.Queue.join_thread(): it now waits until the thread completes, even if the thread was started by the same process which created the queue.
  * [bpo-29854](https://bugs.python.org/issue?@action=redirect&bpo=29854): Fix segfault in readline when using readline’s history-size option. Patch by Nir Soffer.
  * [bpo-30807](https://bugs.python.org/issue?@action=redirect&bpo=30807): signal.setitimer() may disable the timer when passed a tiny value. Tiny values (such as 1e-6) are valid non-zero values for setitimer(), which is specified as taking microsecond-resolution intervals. However, on some platform, our conversion routine could convert 1e-6 into a zero interval, therefore disabling the timer instead of (re-)scheduling it.
  * [bpo-30441](https://bugs.python.org/issue?@action=redirect&bpo=30441): Fix bug when modifying os.environ while iterating over it
  * [bpo-30532](https://bugs.python.org/issue?@action=redirect&bpo=30532): Fix email header value parser dropping folding white space in certain cases.
  * [bpo-29169](https://bugs.python.org/issue?@action=redirect&bpo=29169): Update zlib to 1.2.11.
  * [bpo-30879](https://bugs.python.org/issue?@action=redirect&bpo=30879): os.listdir() and os.scandir() now emit bytes names when called with bytes-like argument.
  * [bpo-30746](https://bugs.python.org/issue?@action=redirect&bpo=30746): Prohibited the ‘=’ character in environment variable names in `os.putenv()` and `os.spawn*()`.
  * [bpo-29755](https://bugs.python.org/issue?@action=redirect&bpo=29755): Fixed the lgettext() family of functions in the gettext module. They now always return bytes.
  * [bpo-30645](https://bugs.python.org/issue?@action=redirect&bpo=30645): Fix path calculation in imp.load_package(), fixing it for cases when a package is only shipped with bytecodes. Patch by Alexandru Ardelean.
  * [bpo-23890](https://bugs.python.org/issue?@action=redirect&bpo=23890): unittest.TestCase.assertRaises() now manually breaks a reference cycle to not keep objects alive longer than expected.
  * [bpo-30149](https://bugs.python.org/issue?@action=redirect&bpo=30149): inspect.signature() now supports callables with variable-argument parameters wrapped with partialmethod. Patch by Donghee Na.
  * [bpo-29931](https://bugs.python.org/issue?@action=redirect&bpo=29931): Fixed comparison check for ipaddress.ip_interface objects. Patch by Sanjay Sundaresan.
  * [bpo-24484](https://bugs.python.org/issue?@action=redirect&bpo=24484): Avoid race condition in multiprocessing cleanup.
  * [bpo-28994](https://bugs.python.org/issue?@action=redirect&bpo=28994): The traceback no longer displayed for SystemExit raised in a callback registered by atexit.
  * [bpo-30508](https://bugs.python.org/issue?@action=redirect&bpo=30508): Don’t log exceptions if Task/Future “cancel()” method was called.
  * [bpo-28556](https://bugs.python.org/issue?@action=redirect&bpo=28556): Updates to typing module: Add generic AsyncContextManager, add support for ContextManager on all versions. Original PRs by Jelle Zijlstra and Ivan Levkivskyi
  * [bpo-29870](https://bugs.python.org/issue?@action=redirect&bpo=29870): Fix ssl sockets leaks when connection is aborted in asyncio/ssl implementation. Patch by Michaël Sghaïer.
  * [bpo-29743](https://bugs.python.org/issue?@action=redirect&bpo=29743): Closing transport during handshake process leaks open socket. Patch by Nikolay Kim
  * [bpo-27585](https://bugs.python.org/issue?@action=redirect&bpo=27585): Fix waiter cancellation in asyncio.Lock. Patch by Mathieu Sornay.
  * [bpo-30418](https://bugs.python.org/issue?@action=redirect&bpo=30418): On Windows, subprocess.Popen.communicate() now also ignore EINVAL on stdin.write() if the child process is still running but closed the pipe.
  * [bpo-30378](https://bugs.python.org/issue?@action=redirect&bpo=30378): Fix the problem that logging.handlers.SysLogHandler cannot handle IPv6 addresses.
  * [bpo-29960](https://bugs.python.org/issue?@action=redirect&bpo=29960): Preserve generator state when _random.Random.setstate() raises an exception. Patch by Bryan Olson.
  * [bpo-30414](https://bugs.python.org/issue?@action=redirect&bpo=30414): multiprocessing.Queue._feed background running thread do not break from main loop on exception.
  * [bpo-30003](https://bugs.python.org/issue?@action=redirect&bpo=30003): Fix handling escape characters in HZ codec. Based on patch by Ma Lin.
  * [bpo-30301](https://bugs.python.org/issue?@action=redirect&bpo=30301): Fix AttributeError when using