Title: Graphlib Module Exceptions
URL: https://docs.python.org/3/library/graphlib.html
Summary: The graphlib module raises a CycleError if a cycle is detected in the graph. This ensures that nodes like '0' and '2', which are at the same level, can be processed in the order of their insertion. The CycleError class is a subclass of ValueError and was added in Python version 3.9.
---

```

This is due to the fact that “0” and “2” are in the same level in the graph (they would have been returned in the same call to [`get_ready()`](https://docs.python.org/3/library/graphlib.html#graphlib.TopologicalSorter.get_ready "graphlib.TopologicalSorter.get_ready")) and the order between them is determined by the order of insertion.
If any cycle is detected, [`CycleError`](https://docs.python.org/3/library/graphlib.html#graphlib.CycleError "graphlib.CycleError") will be raised.
Added in version 3.9.
## Exceptions[¶](https://docs.python.org/3/library/graphlib.html#exceptions "Link to this heading")
The [`graphlib`](https://docs.python.org/3/library/graphlib.html#module-graphlib "graphlib: Functionality to operate with graph-like structures") module defines the following exception classes: 

_exception_ graphlib.CycleError[¶](https://docs.python.org/3/library/graphlib.html#graphlib.CycleError "Link to this definition")
    
Subclass of [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError "ValueError") raised by [`TopologicalSorter.prepare()`](https://docs.python.org/3/library/graphlib.html#graphlib.TopologicalSorter.prepare "graphlib.TopologicalSorter.prepare") if cycles exist in the working graph. If multiple cycles exist, only one undefined choice among them will be reported and included in the exception.
The detected cycle can be accessed via the second element in the [`args`](https://docs.python.org/3/library/exceptions.html#BaseException.args "BaseException.args") attribute of the exception instance and consists in a list of nodes, such that each node is, in the graph, an immediate predecessor of the next node in the list. In the reported list, the first and the last node will be the same, to make it clear that it is cyclic.
### [Table of Contents](https://docs.python.org/3/contents.html)
  * [`graphlib` — Functionality to operate with graph-like structures](https://docs.python.org/3/library/graphlib.html)
    * [Exceptions](https://docs.python.org/3/library/graphlib.html#exceptions)


#### Previous topic
[`enum` — Support for enumerations](https://docs.python.org/3/library/enum.html "previous chapter")
#### Next topic
[Numeric and Mathematical Modules](https://docs.python.org/3/library/numeric.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/graphlib.rst)


«
### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/library/numeric.html "Numeric and Mathematical Modules") |
  * [previous](https://docs.python.org/3/library/enum.html "enum — Support for enumerations") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [The Python Standard Library](https://docs.python.org/3/library/index.html) »
  * [Data Types](https://docs.python.org/3/library/datatypes.html) »
  * [`graphlib` — Functionality to operate with graph-like structures](https://docs.python.org/3/library/graphlib.html)
  * | 
  * Theme  Auto Light Dark |


© [ Copyright ](https://docs.python.org/3/copyright.html) 2001-2025, Python Software Foundation. This page is licensed under the Python Software Foundation License Version 2. Examples, recipes, and other code in the documentation are additionally licensed under the Zero Clause BSD License. See [History and License](https://docs.python.org/license.html) for more information. The Python Software Foundation is a non-profit corporation. [Please donate.](https://www.python.org/psf/donations/) Last updated on Apr 27, 2025 (05:38 UTC). [Found a bug](https://docs.python.org/bugs.html)? Created using [Sphinx](https://www.sphinx-doc.org/) 8.2.3.