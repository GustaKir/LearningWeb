Title: Using `os.setns` and Process Group Management in Python
URL: https://docs.python.org/3/library/os.html
Summary: The document discusses how to use the `os.setns` function to set the namespace of a process in Linux, requiring Linux version >= 3.0 and glibc >= 2.14, introduced in Python 3.12. It also provides details on the `os.setpgrp` and `os.setpgid` system calls for managing process groups, specifying their availability and related semantics.
---

```
fd = os.open("/proc/1/ns/net", os.O_RDONLY)
os.setns(fd, os.CLONE_NEWNET)
os.close(fd)

```

[Availability](https://docs.python.org/3/library/intro.html#availability): Linux >= 3.0 with glibc >= 2.14.
Added in version 3.12.
See also
The [`unshare()`](https://docs.python.org/3/library/os.html#os.unshare "os.unshare") function. 

os.setpgrp()[¶](https://docs.python.org/3/library/os.html#os.setpgrp "Link to this definition")
    
Call the system call `setpgrp()` or `setpgrp(0, 0)` depending on which version is implemented (if any). See the Unix manual for the semantics.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix, not WASI. 

os.setpgid(_pid_ , _pgrp_ , _/_)[¶](https://docs.python.org/3/library/os.html#os.setpgid "Link to this definition")
    
Call the system call `setpgid()` to set the process group id of the process with id _pid_ to the process group with id _pgrp_. See the Unix manual for the semantics.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix, not WASI. 

os.setpriority(_which_ , _who_ , _priority_)[¶](https://docs.python.org/3/library/os.html#os.setpriority "Link to this definition")
    
Set program scheduling priority. The value _which_ is one of [`PRIO_PROCESS`](https://docs.python.org/3/library/os.html#os.PRIO_PROCESS "os.PRIO_PROCESS"), [`PRIO_PGRP`](https://docs.python.org/3/library/os.html#os.PRIO_PGRP "os.PRIO_PGRP"), or [`PRIO_USER`](https://docs.python.org/3/library/os.html#os.PRIO_USER "os.PRIO_USER"), and _who_ is interpreted relative to _which_ (a process identifier for [`PRIO_PROCESS`](https://docs.python.org/3/library/os.html#os.PRIO_PROCESS "os.PRIO_PROCESS"), process group identifier for [`PRIO_PGRP`](https://docs.python.org/3/library/os.html#os.PRIO_PGRP "os.PRIO_PGRP"), and a user ID for [`PRIO_USER`](https://docs.python.org/3/library/os.html#os.PRIO_USER "os.PRIO_USER")). A zero value for _who_ denotes (respectively) the calling process, the process group of the calling process, or the real user ID of the calling process. _priority_ is a value in the range -20 to 19. The default priority is 0; lower priorities cause more favorable scheduling.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix, not WASI.
Added in version 3.3. 

os.setregid(_rgid_ , _egid_ , _/_)[¶](https://docs.python.org/3/library/os.html#os.setregid "Link to this definition")
    
Set the current process’s real and effective group ids.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix, not WASI, not Android. 

os.setresgid(_rgid_ , _egid_ , _sgid_ , _/_)[¶](https://docs.python.org/3/library/os.html#os.setresgid "Link to this definition")
    
Set the current process’s real, effective, and saved group ids.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix, not WASI, not Android.
Added in version 3.2. 

os.setresuid(_ruid_ , _euid_ , _suid_ , _/_)[¶](https://docs.python.org/3/library/os.html#os.setresuid "Link to this definition")
    
Set the current process’s real, effective, and saved user ids.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix, not WASI, not Android.
Added in version 3.2. 

os.setreuid(_ruid_ , _euid_ , _/_)[¶](https://docs.python.org/3/library/os.html#os.setreuid "Link to this definition")
    
Set the current process’s real and effective user ids.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix, not WASI, not Android. 

os.getsid(_pid_ , _/_)[¶](https://docs.python.org/3/library/os.html#os.getsid "Link to this definition")
    
Call the system call `getsid()`. See the Unix manual for the semantics.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix, not WASI. 

os.setsid()[¶](https://docs.python.org/3/library/os.html#os.setsid "Link to this definition")
    
Call the system call `setsid()`. See the Unix manual for the semantics.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix, not WASI. 

os.setuid(_uid_ , _/_)[¶](https://docs.python.org/3/library/os.html#os.setuid "Link to this definition")
    
Set the current process’s user id.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix, not WASI, not Android. 

os.strerror(_code_ , _/_)[¶](https://docs.python.org/3/library/os.html#os.strerror "Link to this definition")
    
Return the error message corresponding to the error code in _code_. On platforms where `strerror()` returns `NULL` when given an unknown error number, [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError "ValueError") is raised. 

os.supports_bytes_environ[¶](https://docs.python.org/3/library/os.html#os.supports_bytes_environ "Link to this definition")
    
`True` if the native OS type of the environment is bytes (eg. `False` on Windows).
Added in version 3.2.