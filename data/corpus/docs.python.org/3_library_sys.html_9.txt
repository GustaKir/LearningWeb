Title: Floating-point Arithmetic Information in Python
URL: https://docs.python.org/3/library/sys.html
Summary: This section details the `float_info` attributes in Python, specifically `radix` which indicates the radix of exponent representation, and `rounds` which defines the rounding mode for floating-point arithmetic, outlining various possible values including indeterminable and direction-based rounding modes.
---

float_info.radix[¶](https://docs.python.org/3/library/sys.html#sys.float_info.radix "Link to this definition")
| `FLT_RADIX` | The radix of exponent representation. 

float_info.rounds[¶](https://docs.python.org/3/library/sys.html#sys.float_info.rounds "Link to this definition")
| `FLT_ROUNDS` | An integer representing the rounding mode for floating-point arithmetic. This reflects the value of the system `FLT_ROUNDS` macro at interpreter startup time:  
  * `-1`: indeterminable
  * `0`: toward zero
  * `1`: to nearest
  * `2`: toward positive infinity
  * `3`: toward negative infinity

All other values for `FLT_ROUNDS` characterize implementation-defined rounding behavior.  
The attribute [`sys.float_info.dig`](https://docs.python.org/3/library/sys.html#sys.float_info.dig "sys.float_info.dig") needs further explanation. If `s` is any string representing a decimal number with at most `sys.float_info.dig` significant digits, then converting `s` to a float and back again will recover a string representing the same decimal value:
>>>```
>>> importsys
>>> sys.float_info.dig
15
>>> s = '3.14159265358979'  # decimal string with 15 significant digits
>>> format(float(s), '.15g') # convert to float and back -> same value
'3.14159265358979'

```

But for strings with more than [`sys.float_info.dig`](https://docs.python.org/3/library/sys.html#sys.float_info.dig "sys.float_info.dig") significant digits, this isn’t always true:
>>>```
>>> s = '9876543211234567'  # 16 significant digits is too many!
>>> format(float(s), '.16g') # conversion changes value
'9876543211234568'