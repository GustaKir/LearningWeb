Title: Installing and Managing Python Packages
URL: https://docs.python.org/3/installing/index.html
Summary: This section provides information about `pip`, its resources in the Python Packaging User Guide, and how to create virtual environments using the `venv` module. It also includes quick answers for common tasks, such as installing `pip` for Python versions prior to 3.4.
---

```

More information and resources regarding `pip` and its capabilities can be found in the [Python Packaging User Guide](https://packaging.python.org).
Creation of virtual environments is done through the [`venv`](https://docs.python.org/3/library/venv.html#module-venv "venv: Creation of virtual environments.") module. Installing packages into an active virtual environment uses the commands shown above.
See also
[Python Packaging User Guide: Installing Python Distribution Packages](https://packaging.python.org/installing/)
## How do I …?[¶](https://docs.python.org/3/installing/index.html#how-do-i "Link to this heading")
These are quick answers or links for some common tasks.
### … install `pip` in versions of Python prior to Python 3.4?[¶](https://docs.python.org/3/installing/index.html#install-pip-in-versions-of-python-prior-to-python-3-4 "Link to this heading")
Python only started bundling `pip` with Python 3.4. For earlier versions, `pip` needs to be “bootstrapped” as described in the Python Packaging User Guide.
See also
[Python Packaging User Guide: Requirements for Installing Packages](https://packaging.python.org/installing/#requirements-for-installing-packages)
### … install packages just for the current user?[¶](https://docs.python.org/3/installing/index.html#install-packages-just-for-the-current-user "Link to this heading")
Passing the `--user` option to `python -m pip install` will install a package just for the current user, rather than for all users of the system.
### … install scientific Python packages?[¶](https://docs.python.org/3/installing/index.html#install-scientific-python-packages "Link to this heading")
A number of scientific Python packages have complex binary dependencies, and aren’t currently easy to install using `pip` directly. At this point in time, it will often be easier for users to install these packages by [other means](https://packaging.python.org/science/) rather than attempting to install them with `pip`.
See also
[Python Packaging User Guide: Installing Scientific Packages](https://packaging.python.org/science/)
### … work with multiple versions of Python installed in parallel?[¶](https://docs.python.org/3/installing/index.html#work-with-multiple-versions-of-python-installed-in-parallel "Link to this heading")
On Linux, macOS, and other POSIX systems, use the versioned Python commands in combination with the `-m` switch to run the appropriate copy of `pip`:
```
python2  -m pip install SomePackage # default Python 2
python2.7 -m pip install SomePackage # specifically Python 2.7
python3  -m pip install SomePackage # default Python 3
python3.4 -m pip install SomePackage # specifically Python 3.4

```

Appropriately versioned `pip` commands may also be available.
On Windows, use the `py` Python launcher in combination with the `-m` switch:
```
py -2  -m pip install SomePackage # default Python 2
py -2.7 -m pip install SomePackage # specifically Python 2.7
py -3  -m pip install SomePackage # default Python 3
py -3.4 -m pip install SomePackage # specifically Python 3.4

```

## Common installation issues[¶](https://docs.python.org/3/installing/index.html#common-installation-issues "Link to this heading")
### Installing into the system Python on Linux[¶](https://docs.python.org/3/installing/index.html#installing-into-the-system-python-on-linux "Link to this heading")
On Linux systems, a Python installation will typically be included as part of the distribution. Installing into this Python installation requires root access to the system, and may interfere with the operation of the system package manager and other components of the system if a component is unexpectedly upgraded using `pip`.
On such systems, it is often better to use a virtual environment or a per-user installation when installing packages with `pip`.
### Pip not installed[¶](https://docs.python.org/3/installing/index.html#pip-not-installed "Link to this heading")
It is possible that `pip` does not get installed by default. One potential fix is:
```
python -m ensurepip --default-pip