Title: gzip.GzipFile Constructor
URL: https://docs.python.org/3/library/gzip.html
Summary: The `GzipFile` class constructor allows the simulation of file object methods, requiring at least one of the `fileobj` or `filename` parameters to be non-trivial. It can work with regular files, `io.BytesIO` objects, or any file-like object. The `filename` is used to open a file object if `fileobj` is not provided.
---

_class_ gzip.GzipFile(_filename =None_, _mode =None_, _compresslevel =9_, _fileobj =None_, _mtime =None_)[¶](https://docs.python.org/3/library/gzip.html#gzip.GzipFile "Link to this definition")
    
Constructor for the [`GzipFile`](https://docs.python.org/3/library/gzip.html#gzip.GzipFile "gzip.GzipFile") class, which simulates most of the methods of a [file object](https://docs.python.org/3/glossary.html#term-file-object), with the exception of the [`truncate()`](https://docs.python.org/3/library/io.html#io.IOBase.truncate "io.IOBase.truncate") method. At least one of _fileobj_ and _filename_ must be given a non-trivial value.
The new class instance is based on _fileobj_ , which can be a regular file, an [`io.BytesIO`](https://docs.python.org/3/library/io.html#io.BytesIO "io.BytesIO") object, or any other object which simulates a file. It defaults to `None`, in which case _filename_ is opened to provide a file object.
When _fileobj_ is not `None`, the _filename_ argument is only used to be included in the **gzip** file header, which may include the original filename of the uncompressed file. It defaults to the filename of _fileobj_ , if discernible; otherwise, it defaults to the empty string, and in this case the original filename is not included in the header.
The _mode_ argument can be any of `'r'`, `'rb'`, `'a'`, `'ab'`, `'w'`, `'wb'`, `'x'`, or `'xb'`, depending on whether the file will be read or written. The default is the mode of _fileobj_ if discernible; otherwise, the default is `'rb'`. In future Python releases the mode of _fileobj_ will not be used. It is better to always specify _mode_ for writing.
Note that the file is always opened in binary mode. To open a compressed file in text mode, use [`open()`](https://docs.python.org/3/library/gzip.html#gzip.open "gzip.open") (or wrap your [`GzipFile`](https://docs.python.org/3/library/gzip.html#gzip.GzipFile "gzip.GzipFile") with an [`io.TextIOWrapper`](https://docs.python.org/3/library/io.html#io.TextIOWrapper "io.TextIOWrapper")).
The _compresslevel_ argument is an integer from `0` to `9` controlling the level of compression; `1` is fastest and produces the least compression, and `9` is slowest and produces the most compression. `0` is no compression. The default is `9`.
The optional _mtime_ argument is the timestamp requested by gzip. The time is in Unix format, i.e., seconds since 00:00:00 UTC, January 1, 1970. If _mtime_ is omitted or `None`, the current time is used. Use _mtime_ = 0 to generate a compressed stream that does not depend on creation time.
See below for the [`mtime`](https://docs.python.org/3/library/gzip.html#gzip.GzipFile.mtime "gzip.GzipFile.mtime") attribute that is set when decompressing.
Calling a [`GzipFile`](https://docs.python.org/3/library/gzip.html#gzip.GzipFile "gzip.GzipFile") object’s `close()` method does not close _fileobj_ , since you might wish to append more material after the compressed data. This also allows you to pass an [`io.BytesIO`](https://docs.python.org/3/library/io.html#io.BytesIO "io.BytesIO") object opened for writing as _fileobj_ , and retrieve the resulting memory buffer using the [`io.BytesIO`](https://docs.python.org/3/library/io.html#io.BytesIO "io.BytesIO") object’s [`getvalue()`](https://docs.python.org/3/library/io.html#io.BytesIO.getvalue "io.BytesIO.getvalue") method.
[`GzipFile`](https://docs.python.org/3/library/gzip.html#gzip.GzipFile "gzip.GzipFile") supports the [`io.BufferedIOBase`](https://docs.python.org/3/library/io.html#io.BufferedIOBase "io.BufferedIOBase") interface, including iteration and the [`with`](https://docs.python.org/3/reference/compound_stmts.html#with) statement. Only the [`truncate()`](https://docs.python.org/3/library/io.html#io.IOBase.truncate "io.IOBase.truncate") method isn’t implemented.
[`GzipFile`](https://docs.python.org/3/library/gzip.html#gzip.GzipFile "gzip.GzipFile") also provides the following method and attribute: 

peek(_n_)[¶](https://docs.python.org/3/library/gzip.html#gzip.GzipFile.peek "Link to this definition")
    
Read _n_ uncompressed bytes without advancing the file position. The number of bytes returned may be more or less than requested.
Note
While calling [`peek()`](https://docs.python.org/3/library/gzip.html#gzip.GzipFile.peek "gzip.GzipFile.peek") does not change the file position of the [`GzipFile`](https://docs.python.org/3/library/gzip.html#gzip.GzipFile "gzip.GzipFile"), it may change the position of the underlying file object (e.g. if the [`GzipFile`](https://docs.python.org/3/library/gzip.html#gzip.GzipFile "gzip.GzipFile") was constructed with the _fileobj_ parameter).
Added in version 3.2. 

mode[¶](https://docs.python.org/3/library/gzip.html#gzip.GzipFile.mode "Link to this definition")
    
`'rb'` for reading and `'wb'` for writing.
Changed in version 3.13: In previous versions it was an integer `1` or `2`.