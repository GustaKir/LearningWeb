Title: Changes to Address Handling and GIL Management in Python
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: The document discusses the removal of unnecessary sanitization annotations from the address_in_range() function and provides a method for disabling the radix tree map. Additionally, it highlights improvements in handling asynchronous exceptions and GIL management, ensuring proper execution of __exit__() in with statements. The section also notes deprecations in various standard library modules.
---

sanitary behavior of the previous address_in_range(). The old address_in_range() was marked with the annotations _Py_NO_SANITIZE_ADDRESS, _Py_NO_SANITIZE_THREAD, and _Py_NO_SANITIZE_MEMORY. Those annotations are no longer needed.
To disable the radix tree map, set a preprocessor flag as follows: `-DWITH_PYMALLOC_RADIX_TREE=0`.
Co-authored-by: Tim Peters <tim.peters@gmail.com>
  * [bpo-29988](https://bugs.python.org/issue?@action=redirect&bpo=29988): Only handle asynchronous exceptions and requests to drop the GIL when returning from a call or on the back edges of loops. Makes sure that [`__exit__()`](https://docs.python.org/3/reference/datamodel.html#object.__exit__ "object.__exit__") is always called in with statements, even for interrupts.


### Library[¶](https://docs.python.org/3/whatsnew/changelog.html#id301 "Link to this heading")
  * [bpo-43720](https://bugs.python.org/issue?@action=redirect&bpo=43720): Document various stdlib deprecations in imp, pkgutil, and importlib.util for removal in Python 3.12.
  * [bpo-43433](https://bugs.python.org/issue?@action=redirect&bpo=43433): [`xmlrpc.client.ServerProxy`](https://docs.python.org/3/library/xmlrpc.client.html#xmlrpc.client.ServerProxy "xmlrpc.client.ServerProxy") no longer ignores query and fragment in the URL of the server.
  * [bpo-31956](https://bugs.python.org/issue?@action=redirect&bpo=31956): The [`index()`](https://docs.python.org/3/library/array.html#array.array.index "array.array.index") method of [`array.array`](https://docs.python.org/3/library/array.html#array.array "array.array") now has optional _start_ and _stop_ parameters.
  * [bpo-40066](https://bugs.python.org/issue?@action=redirect&bpo=40066): Enum: adjust `repr()` to show only enum and member name (not value, nor angle brackets) and `str()` to show only member name. Update and improve documentation to match.
  * [bpo-42136](https://bugs.python.org/issue?@action=redirect&bpo=42136): Deprecate all module_repr() methods found in importlib as their use is being phased out by Python 3.12.
  * [bpo-35930](https://bugs.python.org/issue?@action=redirect&bpo=35930): Raising an exception raised in a “future” instance will create reference cycles.
  * [bpo-41369](https://bugs.python.org/issue?@action=redirect&bpo=41369): Finish updating the vendored libmpdec to version 2.5.1. Patch by Stefan Krah.
  * [bpo-43422](https://bugs.python.org/issue?@action=redirect&bpo=43422): Revert the _decimal C API which was added in [bpo-41324](https://bugs.python.org/issue?@action=redirect&bpo=41324).
  * [bpo-43577](https://bugs.python.org/issue?@action=redirect&bpo=43577): Fix deadlock when using [`ssl.SSLContext`](https://docs.python.org/3/library/ssl.html#ssl.SSLContext "ssl.SSLContext") debug callback with [`ssl.SSLContext.sni_callback()`](https://docs.python.org/3/library/ssl.html#ssl.SSLContext.sni_callback "ssl.SSLContext.sni_callback").
  * [bpo-43571](https://bugs.python.org/issue?@action=redirect&bpo=43571): It’s now possible to create MPTCP sockets with IPPROTO_MPTCP
  * [bpo-43542](https://bugs.python.org/issue?@action=redirect&bpo=43542): `image/heic` and `image/heif` were added to [`mimetypes`](https://docs.python.org/3/library/mimetypes.html#module-mimetypes "mimetypes: Mapping of filename extensions to MIME types.").
  * [bpo-40645](https://bugs.python.org/issue?@action=redirect&bpo=40645): The [`hmac`](https://docs.python.org/3/library/hmac.html#module-hmac "hmac: Keyed-Hashing for Message Authentication \(HMAC\) implementation") module now uses OpenSSL’s HMAC implementation when digestmod argument is a hash name or builtin hash function.
  * [bpo-43510](https://bugs.python.org/issue?@action=redirect&bpo=43510): Implement [**PEP 597**](https://peps.python.org/pep-0597/): Add `EncodingWarning` warning, `-X warn_default_encoding` option, [`PYTHONWARNDEFAULTENCODING`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONWARNDEFAULTENCODING) environment variable and `encoding="locale"` argument value.
  * [bpo-43521](https://bugs.python.org/issue?@action=redirect&bpo=43521): `ast.unparse` can now render NaNs and empty sets.
  * [bpo-42914](https://bugs.python.org/issue?@action=redirect&bpo=42914): [`pprint.pprint()`](https://docs.python.org/3/library/pprint.html#pprint.pprint "pprint.pprint") gains a new boolean `underscore_numbers` optional argument to emit integers with thousands separated by an underscore character for improved readability (for example `1_000_000` instead of `1000000`).
  * [bpo-41361](https://bugs.python.org/issue?@action=redirect&bpo=41361): [`rotate()`](https://docs.python.org/3/library/collections.html#collections.deque.rotate "collections.deque.rotate") calls are now slightly faster due to faster argument parsing.
  * [bpo-43423](https://bugs.python.org/issue?@action=redirect&bpo=43423): `subprocess.communicate()` no longer raises an IndexError when there is an empty stdout or stderr IO buffer during a timeout on Windows.
  * [bpo-27820](https://bugs.python.org/issu