Title: New Typing Features in Python 3.13
URL: https://docs.python.org/3/whatsnew/3.13.html
Summary: Python 3.13 introduces several new typing features, including PEP 696 for type parameters supporting defaults, PEP 702 for a deprecation decorator in the type system, and PEP 705 which allows marking TypedDict items as read-only.
---

New typing features:
  * [**PEP 696**](https://peps.python.org/pep-0696/): Type parameters ([`typing.TypeVar`](https://docs.python.org/3/library/typing.html#typing.TypeVar "typing.TypeVar"), [`typing.ParamSpec`](https://docs.python.org/3/library/typing.html#typing.ParamSpec "typing.ParamSpec"), and [`typing.TypeVarTuple`](https://docs.python.org/3/library/typing.html#typing.TypeVarTuple "typing.TypeVarTuple")) now support defaults.
  * [**PEP 702**](https://peps.python.org/pep-0702/): The new [`warnings.deprecated()`](https://docs.python.org/3/library/warnings.html#warnings.deprecated "warnings.deprecated") decorator adds support for marking deprecations in the type system and at runtime.
  * [**PEP 705**](https://peps.python.org/pep-0705/): [`typing.ReadOnly`](https://docs.python.org/3/library/typing.html#typing.ReadOnly "typing.ReadOnly") can be used to mark an item of a [`typing.TypedDict`](https://docs.python.org/3/library/typing.html#typing.TypedDict "typing.TypedDict") as read-only for type checkers.
  * [**PEP 742**](https://peps.python.org/pep-0742/): [`typing.TypeIs`](https://docs.python.org/3/library/typing.html#typing.TypeIs "typing.TypeIs") provides more intuitive type narrowing behavior, as an alternative to [`typing.TypeGuard`](https://docs.python.org/3/library/typing.html#typing.TypeGuard "typing.TypeGuard").


Platform support:
  * [**PEP 730**](https://peps.python.org/pep-0730/): Apple’s iOS is now an [officially supported platform](https://docs.python.org/3/whatsnew/3.13.html#whatsnew313-platform-support), at [**tier 3**](https://peps.python.org/pep-0011/#tier-3).
  * [**PEP 738**](https://peps.python.org/pep-0738/): Android is now an [officially supported platform](https://docs.python.org/3/whatsnew/3.13.html#whatsnew313-platform-support), at [**tier 3**](https://peps.python.org/pep-0011/#tier-3).
  * `wasm32-wasi` is now supported as a [**tier 2**](https://peps.python.org/pep-0011/#tier-2) platform.
  * `wasm32-emscripten` is no longer an officially supported platform.


Important removals:
  * [PEP 594](https://docs.python.org/3/whatsnew/3.13.html#whatsnew313-pep594): The remaining 19 “dead batteries” (legacy stdlib modules) have been removed from the standard library: `aifc`, `audioop`, `cgi`, `cgitb`, `chunk`, `crypt`, `imghdr`, `mailcap`, `msilib`, `nis`, `nntplib`, `ossaudiodev`, `pipes`, `sndhdr`, `spwd`, `sunau`, `telnetlib`, `uu` and `xdrlib`.
  * Remove the **2to3** tool and `lib2to3` module (deprecated in Python 3.11).
  * Remove the `tkinter.tix` module (deprecated in Python 3.6).
  * Remove the `locale.resetlocale()` function.
  * Remove the `typing.io` and `typing.re` namespaces.
  * Remove chained [`classmethod`](https://docs.python.org/3/library/functions.html#classmethod "classmethod") descriptors.


Release schedule changes:
[**PEP 602**](https://peps.python.org/pep-0602/) (“Annual Release Cycle for Python”) has been updated to extend the full support (‘bugfix’) period for new releases to two years. This updated policy means that:
  * Python 3.9–3.12 have one and a half years of full support, followed by three and a half years of security fixes.
  * Python 3.13 and later have two years of full support, followed by three years of security fixes.


## New Features[¶](https://docs.python.org/3/whatsnew/3.13.html#new-features "Link to this heading")
### A better interactive interpreter[¶](https://docs.python.org/3/whatsnew/3.13.html#a-better-interactive-interpreter "Link to this heading")
Python now uses a new [interactive](https://docs.python.org/3/glossary.html#term-interactive) shell by default, based on code from the [PyPy project](https://pypy.org/). When the user starts the [REPL](https://docs.python.org/3/glossary.html#term-REPL) from an interactive terminal, the following new features are now supported:
  * Multiline editing with history preservation.
  * Direct support for REPL-specific commands like `help`, `exit`, and `quit`, without the need to call them as functions.
  * Prompts and tracebacks with [color enabled by default](https://docs.python.org/3/using/cmdline.html#using-on-controlling-color).
  * Interactive help browsing using `F1` with a separate command history.
  * History browsing using `F2` that skips output as well as the [>>>](https://docs.python.org/3/glossary.html#term-0) and […](https://docs.python.org/3/glossary.html#term-...) prompts.
  * “Paste mode” with `F3` that makes pasting larger blocks of code easier (press `F3` again to return to the regular prompt).