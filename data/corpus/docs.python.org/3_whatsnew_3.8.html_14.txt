Title: Python 3.8: Enhancements in OS Path Library
URL: https://docs.python.org/3/whatsnew/3.8.html
Summary: Python 3.8 introduces several enhancements to the os path library, including improved handling of UnicodeDecodeError for file paths, preference for the USERPROFILE environment variable over HOME in `expanduser()` on Windows, better behavior of `isdir()` regarding non-existent directories, and improved `realpath()` support for resolving reparse points such as symlinks and junctions.
---

ror "UnicodeDecodeError") for paths that contain characters or bytes unrepresentable at the OS level. (Contributed by Serhiy Storchaka in [bpo-33721](https://bugs.python.org/issue?@action=redirect&bpo=33721).)
[`expanduser()`](https://docs.python.org/3/library/os.path.html#os.path.expanduser "os.path.expanduser") on Windows now prefers the `USERPROFILE` environment variable and does not use `HOME`, which is not normally set for regular user accounts. (Contributed by Anthony Sottile in [bpo-36264](https://bugs.python.org/issue?@action=redirect&bpo=36264).)
[`isdir()`](https://docs.python.org/3/library/os.path.html#os.path.isdir "os.path.isdir") on Windows no longer returns `True` for a link to a non-existent directory.
[`realpath()`](https://docs.python.org/3/library/os.path.html#os.path.realpath "os.path.realpath") on Windows now resolves reparse points, including symlinks and directory junctions.
(Contributed by Steve Dower in [bpo-37834](https://bugs.python.org/issue?@action=redirect&bpo=37834).)
### pathlib[¶](https://docs.python.org/3/whatsnew/3.8.html#pathlib "Link to this heading")
[`pathlib.Path`](https://docs.python.org/3/library/pathlib.html#pathlib.Path "pathlib.Path") methods that return a boolean result like [`exists()`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.exists "pathlib.Path.exists"), [`is_dir()`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.is_dir "pathlib.Path.is_dir"), [`is_file()`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.is_file "pathlib.Path.is_file"), [`is_mount()`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.is_mount "pathlib.Path.is_mount"), [`is_symlink()`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.is_symlink "pathlib.Path.is_symlink"), [`is_block_device()`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.is_block_device "pathlib.Path.is_block_device"), [`is_char_device()`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.is_char_device "pathlib.Path.is_char_device"), [`is_fifo()`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.is_fifo "pathlib.Path.is_fifo"), [`is_socket()`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.is_socket "pathlib.Path.is_socket") now return `False` instead of raising [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError "ValueError") or its subclass [`UnicodeEncodeError`](https://docs.python.org/3/library/exceptions.html#UnicodeEncodeError "UnicodeEncodeError") for paths that contain characters unrepresentable at the OS level. (Contributed by Serhiy Storchaka in [bpo-33721](https://bugs.python.org/issue?@action=redirect&bpo=33721).)
Added `pathlib.Path.link_to()` which creates a hard link pointing to a path. (Contributed by Joannah Nanjekye in [bpo-26978](https://bugs.python.org/issue?@action=redirect&bpo=26978)) Note that `link_to` was deprecated in 3.10 and removed in 3.12 in favor of a `hardlink_to` method added in 3.10 which matches the semantics of the existing `symlink_to` method.
### pickle[¶](https://docs.python.org/3/whatsnew/3.8.html#pickle "Link to this heading")
[`pickle`](https://docs.python.org/3/library/pickle.html#module-pickle "pickle: Convert Python objects to streams of bytes and back.") extensions subclassing the C-optimized [`Pickler`](https://docs.python.org/3/library/pickle.html#pickle.Pickler "pickle.Pickler") can now override the pickling logic of functions and classes by defining the special [`reducer_override()`](https://docs.python.org/3/library/pickle.html#pickle.Pickler.reducer_override "pickle.Pickler.reducer_override") method. (Contributed by Pierre Glaser and Olivier Grisel in [bpo-35900](https://bugs.python.org/issue?@action=redirect&bpo=35900).)
### plistlib[¶](https://docs.python.org/3/whatsnew/3.8.html#plistlib "Link to this heading")
Added new [`plistlib.UID`](https://docs.python.org/3/library/plistlib.html#plistlib.UID "plistlib.UID") and enabled support for reading and writing NSKeyedArchiver-encoded binary plists. (Contributed by Jon Janzen in [bpo-26707](https://bugs.python.org/issue?@action=redirect&bpo=26707).)
### pprint[¶](https://docs.python.org/3/whatsnew/3.8.html#pprint "Link to this heading")
The [`pprint`](https://docs.python.org/3/library/pprint.html#module-pprint "pprint: Data pretty printer.") module added a _sort_dicts_ parameter to several functions. By default, those functions continue to sort dictionaries before rendering or printing. However, if _sort_dicts_ is set to false, the dictionaries retain the order that keys were inserted. This can be useful for comparison to JSON inputs during debugging.
In addition, there is a convenience new function, [`pprint.pp()`](https://docs.python.org/3/library/pprint.html#pprint.pp "pprint.pp") that is like [`pprint.pprint()`](https://docs.python.org/3/library/pprint.html#pprint.pprint "pprint.pprint") but with _sort_dicts_ defaulting to `False`:
>>>