Title: Isolated Configuration
URL: https://docs.python.org/3/c-api/init_config.html
Summary: The `PyPreConfig_InitIsolatedConfig()` and `PyConfig_InitIsolatedConfig()` functions create a Python configuration that isolates it from the system by ignoring global settings, environment variables, and command line arguments, while retaining certain configurations like C standard streams and locale.
---

```

## Isolated Configuration[¶](https://docs.python.org/3/c-api/init_config.html#isolated-configuration "Link to this heading")
[`PyPreConfig_InitIsolatedConfig()`](https://docs.python.org/3/c-api/init_config.html#c.PyPreConfig_InitIsolatedConfig "PyPreConfig_InitIsolatedConfig") and [`PyConfig_InitIsolatedConfig()`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig_InitIsolatedConfig "PyConfig_InitIsolatedConfig") functions create a configuration to isolate Python from the system. For example, to embed Python into an application.
This configuration ignores global configuration variables, environment variables, command line arguments ([`PyConfig.argv`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.argv "PyConfig.argv") is not parsed) and user site directory. The C standard streams (ex: `stdout`) and the LC_CTYPE locale are left unchanged. Signal handlers are not installed.
Configuration files are still used with this configuration to determine paths that are unspecified. Ensure [`PyConfig.home`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.home "PyConfig.home") is specified to avoid computing the default path configuration.
## Python Configuration[¶](https://docs.python.org/3/c-api/init_config.html#python-configuration "Link to this heading")
[`PyPreConfig_InitPythonConfig()`](https://docs.python.org/3/c-api/init_config.html#c.PyPreConfig_InitPythonConfig "PyPreConfig_InitPythonConfig") and [`PyConfig_InitPythonConfig()`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig_InitPythonConfig "PyConfig_InitPythonConfig") functions create a configuration to build a customized Python which behaves as the regular Python.
Environments variables and command line arguments are used to configure Python, whereas global configuration variables are ignored.
This function enables C locale coercion ([**PEP 538**](https://peps.python.org/pep-0538/)) and [Python UTF-8 Mode](https://docs.python.org/3/library/os.html#utf8-mode) ([**PEP 540**](https://peps.python.org/pep-0540/)) depending on the LC_CTYPE locale, [`PYTHONUTF8`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONUTF8) and [`PYTHONCOERCECLOCALE`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONCOERCECLOCALE) environment variables.
## Python Path Configuration[¶](https://docs.python.org/3/c-api/init_config.html#python-path-configuration "Link to this heading")
[`PyConfig`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig "PyConfig") contains multiple fields for the path configuration:
  * Path configuration inputs:
    * [`PyConfig.home`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.home "PyConfig.home")
    * [`PyConfig.platlibdir`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.platlibdir "PyConfig.platlibdir")
    * [`PyConfig.pathconfig_warnings`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.pathconfig_warnings "PyConfig.pathconfig_warnings")
    * [`PyConfig.program_name`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.program_name "PyConfig.program_name")
    * [`PyConfig.pythonpath_env`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.pythonpath_env "PyConfig.pythonpath_env")
    * current working directory: to get absolute paths
    * `PATH` environment variable to get the program full path (from [`PyConfig.program_name`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.program_name "PyConfig.program_name"))
    * `__PYVENV_LAUNCHER__` environment variable
    * (Windows only) Application paths in the registry under “SoftwarePythonPythonCoreX.YPythonPath” of HKEY_CURRENT_USER and HKEY_LOCAL_MACHINE (where X.Y is the Python version).
  * Path configuration output fields:
    * [`PyConfig.base_exec_prefix`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.base_exec_prefix "PyConfig.base_exec_prefix")
    * [`PyConfig.base_executable`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.base_executable "PyConfig.base_executable")
    * [`PyConfig.base_prefix`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.base_prefix "PyConfig.base_prefix")
    * [`PyConfig.exec_prefix`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.exec_prefix "PyConfig.exec_prefix")
    * [`PyConfig.executable`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.executable "PyConfig.executable")
    * [`PyConfig.module_search_paths_set`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.module_search_paths_set "PyConfig.module_search_paths_set"), [`PyConfig.module_search_paths`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.module_search_paths "PyConfig.module_search_paths")
    * [`PyConfig.prefix`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.prefix "PyConfig.prefix")