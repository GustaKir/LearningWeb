Title: Recent Fixes in Python 3.x
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This update includes several bug fixes, such as resolving reference cycles in tracebacks for `asyncio.open_connection()` with `happy_eyeballs_delay`, addressing an `AssertionError` in `asyncio.staggered_race()`, and ensuring proper quoting of template strings in `venv` activation scripts.
---

Patch by Bénédikt Tran.
  * [gh-124858](https://github.com/python/cpython/issues/124858): Fix reference cycles left in tracebacks in [`asyncio.open_connection()`](https://docs.python.org/3/library/asyncio-stream.html#asyncio.open_connection "asyncio.open_connection") when used with `happy_eyeballs_delay`
  * [gh-124390](https://github.com/python/cpython/issues/124390): Fixed [`AssertionError`](https://docs.python.org/3/library/exceptions.html#AssertionError "AssertionError") when using `asyncio.staggered.staggered_race()` with [`asyncio.eager_task_factory`](https://docs.python.org/3/library/asyncio-task.html#asyncio.eager_task_factory "asyncio.eager_task_factory").
  * [gh-124651](https://github.com/python/cpython/issues/124651): Properly quote template strings in [`venv`](https://docs.python.org/3/library/venv.html#module-venv "venv: Creation of virtual environments.") activation scripts.
  * [gh-116850](https://github.com/python/cpython/issues/116850): Fix [`argparse`](https://docs.python.org/3/library/argparse.html#module-argparse "argparse: Command-line option and argument parsing library.") for namespaces with not directly writable dict (e.g. classes).
  * [gh-58573](https://github.com/python/cpython/issues/58573): Fix conflicts between abbreviated long options in the parent parser and subparsers in [`argparse`](https://docs.python.org/3/library/argparse.html#module-argparse "argparse: Command-line option and argument parsing library.").
  * [gh-124594](https://github.com/python/cpython/issues/124594): All [`asyncio`](https://docs.python.org/3/library/asyncio.html#module-asyncio "asyncio: Asynchronous I/O.") REPL prompts run in the same [`context`](https://docs.python.org/3/library/contextvars.html#contextvars.Context "contextvars.Context"). Contributed by Bartosz Sławecki.
  * [gh-61181](https://github.com/python/cpython/issues/61181): Fix support of [choices](https://docs.python.org/3/library/argparse.html#choices) with string value in [`argparse`](https://docs.python.org/3/library/argparse.html#module-argparse "argparse: Command-line option and argument parsing library."). Substrings of the specified string no longer considered valid values.
  * [gh-80259](https://github.com/python/cpython/issues/80259): Fix [`argparse`](https://docs.python.org/3/library/argparse.html#module-argparse "argparse: Command-line option and argument parsing library.") support of positional arguments with `nargs='?'`, `default=argparse.SUPPRESS` and specified `type`.
  * [gh-120378](https://github.com/python/cpython/issues/120378): Fix a crash related to an integer overflow in [`curses.resizeterm()`](https://docs.python.org/3/library/curses.html#curses.resizeterm "curses.resizeterm") and [`curses.resize_term()`](https://docs.python.org/3/library/curses.html#curses.resize_term "curses.resize_term").
  * [gh-123884](https://github.com/python/cpython/issues/123884): Fixed bug in itertools.tee() handling of other tee inputs (a tee in a tee). The output now has the promised _n_ independent new iterators. Formerly, the first iterator was identical (not independent) to the input iterator. This would sometimes give surprising results.
  * [gh-58956](https://github.com/python/cpython/issues/58956): Fixed a bug in [`pdb`](https://docs.python.org/3/library/pdb.html#module-pdb "pdb: The Python debugger for interactive interpreters.") where sometimes the breakpoint won’t trigger if it was set on a function which is already in the call stack.
  * [gh-124345](https://github.com/python/cpython/issues/124345): [`argparse`](https://docs.python.org/3/library/argparse.html#module-argparse "argparse: Command-line option and argument parsing library.") vim supports abbreviated single-dash long options separated by `=` from its value.
  * [gh-104860](https://github.com/python/cpython/issues/104860): Fix disallowing abbreviation of single-dash long options in [`argparse`](https://docs.python.org/3/library/argparse.html#module-argparse "argparse: Command-line option and argument parsing library.") with `allow_abbrev=False`.
  * [gh-63143](https://github.com/python/cpython/issues/63143): Fix parsing mutually exclusive arguments in [`argparse`](https://docs.python.org/3/library/argparse.html#module-argparse "argparse: Command-line option and argument parsing library."). Arguments with the value identical to the default value (e.g. booleans, small integers, empty or 1-character strings) are no longer considered “not present”.
  * [gh-72795](https://github.com/python/cpython/issues/72795): Positional arguments with [nargs](https://docs.python.org/3/library/argparse.html#nargs) equal to `'*'` or `argparse.REMAINDER` are no longer required.