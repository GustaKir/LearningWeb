Title: Incremental and Stream Codecs in Python
URL: https://docs.python.org/3/library/codecs.html
Summary: This section describes the incremental encoder and decoder classes, which implement interfaces defined by `IncrementalEncoder` and `IncrementalDecoder`, and can maintain state. It also outlines stream writer and reader classes that follow the structures of `StreamWriter` and `StreamReader`.
---

incrementaldecoder[¶](https://docs.python.org/3/library/codecs.html#codecs.CodecInfo.incrementaldecoder "Link to this definition")
    
Incremental encoder and decoder classes or factory functions. These have to provide the interface defined by the base classes [`IncrementalEncoder`](https://docs.python.org/3/library/codecs.html#codecs.IncrementalEncoder "codecs.IncrementalEncoder") and [`IncrementalDecoder`](https://docs.python.org/3/library/codecs.html#codecs.IncrementalDecoder "codecs.IncrementalDecoder"), respectively. Incremental codecs can maintain state. 

streamwriter[¶](https://docs.python.org/3/library/codecs.html#codecs.CodecInfo.streamwriter "Link to this definition")


streamreader[¶](https://docs.python.org/3/library/codecs.html#codecs.CodecInfo.streamreader "Link to this definition")
    
Stream writer and reader classes or factory functions. These have to provide the interface defined by the base classes [`StreamWriter`](https://docs.python.org/3/library/codecs.html#codecs.StreamWriter "codecs.StreamWriter") and [`StreamReader`](https://docs.python.org/3/library/codecs.html#codecs.StreamReader "codecs.StreamReader"), respectively. Stream codecs can maintain state.
To simplify access to the various codec components, the module provides these additional functions which use [`lookup()`](https://docs.python.org/3/library/codecs.html#codecs.lookup "codecs.lookup") for the codec lookup: 

codecs.getencoder(_encoding_)[¶](https://docs.python.org/3/library/codecs.html#codecs.getencoder "Link to this definition")
    
Look up the codec for the given encoding and return its encoder function.
Raises a [`LookupError`](https://docs.python.org/3/library/exceptions.html#LookupError "LookupError") in case the encoding cannot be found. 

codecs.getdecoder(_encoding_)[¶](https://docs.python.org/3/library/codecs.html#codecs.getdecoder "Link to this definition")
    
Look up the codec for the given encoding and return its decoder function.
Raises a [`LookupError`](https://docs.python.org/3/library/exceptions.html#LookupError "LookupError") in case the encoding cannot be found. 

codecs.getincrementalencoder(_encoding_)[¶](https://docs.python.org/3/library/codecs.html#codecs.getincrementalencoder "Link to this definition")
    
Look up the codec for the given encoding and return its incremental encoder class or factory function.
Raises a [`LookupError`](https://docs.python.org/3/library/exceptions.html#LookupError "LookupError") in case the encoding cannot be found or the codec doesn’t support an incremental encoder. 

codecs.getincrementaldecoder(_encoding_)[¶](https://docs.python.org/3/library/codecs.html#codecs.getincrementaldecoder "Link to this definition")
    
Look up the codec for the given encoding and return its incremental decoder class or factory function.
Raises a [`LookupError`](https://docs.python.org/3/library/exceptions.html#LookupError "LookupError") in case the encoding cannot be found or the codec doesn’t support an incremental decoder. 

codecs.getreader(_encoding_)[¶](https://docs.python.org/3/library/codecs.html#codecs.getreader "Link to this definition")
    
Look up the codec for the given encoding and return its [`StreamReader`](https://docs.python.org/3/library/codecs.html#codecs.StreamReader "codecs.StreamReader") class or factory function.
Raises a [`LookupError`](https://docs.python.org/3/library/exceptions.html#LookupError "LookupError") in case the encoding cannot be found. 

codecs.getwriter(_encoding_)[¶](https://docs.python.org/3/library/codecs.html#codecs.getwriter "Link to this definition")
    
Look up the codec for the given encoding and return its [`StreamWriter`](https://docs.python.org/3/library/codecs.html#codecs.StreamWriter "codecs.StreamWriter") class or factory function.
Raises a [`LookupError`](https://docs.python.org/3/library/exceptions.html#LookupError "LookupError") in case the encoding cannot be found.
Custom codecs are made available by registering a suitable codec search function: 

codecs.register(_search_function_)[¶](https://docs.python.org/3/library/codecs.html#codecs.register "Link to this definition")
    
Register a codec search function. Search functions are expected to take one argument, being the encoding name in all lower case letters with hyphens and spaces converted to underscores, and return a [`CodecInfo`](https://docs.python.org/3/library/codecs.html#codecs.CodecInfo "codecs.CodecInfo") object. In case a search function cannot find a given encoding, it should return `None`.
Changed in version 3.9: Hyphens and spaces are converted to underscore.