Title: UseForeignDTD Method in Expat Parser
URL: https://docs.python.org/3/library/pyexpat.html
Summary: The UseForeignDTD method allows Expat to invoke the ExternalEntityRefHandler with None as an argument for loading alternate DTDs, even if no document type declaration is present.
---

xmlparser.UseForeignDTD([_flag_])[¶](https://docs.python.org/3/library/pyexpat.html#xml.parsers.expat.xmlparser.UseForeignDTD "Link to this definition")
    
Calling this with a true value for _flag_ (the default) will cause Expat to call the [`ExternalEntityRefHandler`](https://docs.python.org/3/library/pyexpat.html#xml.parsers.expat.xmlparser.ExternalEntityRefHandler "xml.parsers.expat.xmlparser.ExternalEntityRefHandler") with [`None`](https://docs.python.org/3/library/constants.html#None "None") for all arguments to allow an alternate DTD to be loaded. If the document does not contain a document type declaration, the [`ExternalEntityRefHandler`](https://docs.python.org/3/library/pyexpat.html#xml.parsers.expat.xmlparser.ExternalEntityRefHandler "xml.parsers.expat.xmlparser.ExternalEntityRefHandler") will still be called, but the [`StartDoctypeDeclHandler`](https://docs.python.org/3/library/pyexpat.html#xml.parsers.expat.xmlparser.StartDoctypeDeclHandler "xml.parsers.expat.xmlparser.StartDoctypeDeclHandler") and [`EndDoctypeDeclHandler`](https://docs.python.org/3/library/pyexpat.html#xml.parsers.expat.xmlparser.EndDoctypeDeclHandler "xml.parsers.expat.xmlparser.EndDoctypeDeclHandler") will not be called.
Passing a false value for _flag_ will cancel a previous call that passed a true value, but otherwise has no effect.
This method can only be called before the [`Parse()`](https://docs.python.org/3/library/pyexpat.html#xml.parsers.expat.xmlparser.Parse "xml.parsers.expat.xmlparser.Parse") or [`ParseFile()`](https://docs.python.org/3/library/pyexpat.html#xml.parsers.expat.xmlparser.ParseFile "xml.parsers.expat.xmlparser.ParseFile") methods are called; calling it after either of those have been called causes [`ExpatError`](https://docs.python.org/3/library/pyexpat.html#xml.parsers.expat.ExpatError "xml.parsers.expat.ExpatError") to be raised with the [`code`](https://docs.python.org/3/library/code.html#module-code "code: Facilities to implement read-eval-print loops.") attribute set to `errors.codes[errors.XML_ERROR_CANT_CHANGE_FEATURE_ONCE_PARSING]`. 

xmlparser.SetReparseDeferralEnabled(_enabled_)[¶](https://docs.python.org/3/library/pyexpat.html#xml.parsers.expat.xmlparser.SetReparseDeferralEnabled "Link to this definition")
    
Warning
Calling `SetReparseDeferralEnabled(False)` has security implications, as detailed below; please make sure to understand these consequences prior to using the `SetReparseDeferralEnabled` method.
Expat 2.6.0 introduced a security mechanism called “reparse deferral” where instead of causing denial of service through quadratic runtime from reparsing large tokens, reparsing of unfinished tokens is now delayed by default until a sufficient amount of input is reached. Due to this delay, registered handlers may — depending of the sizing of input chunks pushed to Expat — no longer be called right after pushing new input to the parser. Where immediate feedback and taking over responsibility of protecting against denial of service from large tokens are both wanted, calling `SetReparseDeferralEnabled(False)` disables reparse deferral for the current Expat parser instance, temporarily or altogether. Calling `SetReparseDeferralEnabled(True)` allows re-enabling reparse deferral.
Note that [`SetReparseDeferralEnabled()`](https://docs.python.org/3/library/pyexpat.html#xml.parsers.expat.xmlparser.SetReparseDeferralEnabled "xml.parsers.expat.xmlparser.SetReparseDeferralEnabled") has been backported to some prior releases of CPython as a security fix. Check for availability of [`SetReparseDeferralEnabled()`](https://docs.python.org/3/library/pyexpat.html#xml.parsers.expat.xmlparser.SetReparseDeferralEnabled "xml.parsers.expat.xmlparser.SetReparseDeferralEnabled") using [`hasattr()`](https://docs.python.org/3/library/functions.html#hasattr "hasattr") if used in code running across a variety of Python versions.
Added in version 3.13. 

xmlparser.GetReparseDeferralEnabled()[¶](https://docs.python.org/3/library/pyexpat.html#xml.parsers.expat.xmlparser.GetReparseDeferralEnabled "Link to this definition")
    
Returns whether reparse deferral is currently enabled for the given Expat parser instance.
Added in version 3.13.
`xmlparser` objects have the following attributes: 

xmlparser.buffer_size[¶](https://docs.python.org/3/library/pyexpat.html#xml.parsers.expat.xmlparser.buffer_size "Link to this definition")
    
The size of the buffer used when [`buffer_text`](https://docs.python.org/3/library/pyexpat.html#xml.parsers.expat.xmlparser.buffer_text "xml.parsers.expat.xmlparser.buffer_text") is true. A new buffer size can be set by assigning a new integer value to this attribute. When the size is changed, the buffer will be flushed.