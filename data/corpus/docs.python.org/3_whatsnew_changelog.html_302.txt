Title: Python 3.11.0 Alpha 3 Release Notes
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: Released on December 8, 2021, Python 3.11.0 Alpha 3 includes several important changes to core functionality and builtins, such as restoring previous behavior for sending values to newly started generators and fixing SyntaxError locations for for loops with invalid targets.
---

## Python 3.11.0 alpha 3[¶](https://docs.python.org/3/whatsnew/changelog.html#python-3-11-0-alpha-3 "Link to this heading")
_Release date: 2021-12-08_
### Core and Builtins[¶](https://docs.python.org/3/whatsnew/changelog.html#id261 "Link to this heading")
  * [bpo-46009](https://bugs.python.org/issue?@action=redirect&bpo=46009): Restore behavior from 3.9 and earlier when sending non-None to newly started generator. In 3.9 this did not affect the state of the generator. In 3.10.0 and 3.10.1 `gen_func().send(0)` is equivalent to `gen_func().throw(TypeError(...)` which exhausts the generator. In 3.10.2 onward, the behavior has been reverted to that of 3.9.
  * [bpo-46004](https://bugs.python.org/issue?@action=redirect&bpo=46004): Fix the [`SyntaxError`](https://docs.python.org/3/library/exceptions.html#SyntaxError "SyntaxError") location for errors involving for loops with invalid targets. Patch by Pablo Galindo
  * [bpo-45711](https://bugs.python.org/issue?@action=redirect&bpo=45711): `_PyErr_ChainStackItem()` no longer normalizes `exc_info` (including setting the traceback on the exception instance) because `exc_info` is always normalized.
  * [bpo-45607](https://bugs.python.org/issue?@action=redirect&bpo=45607): The `__note__` field was added to [`BaseException`](https://docs.python.org/3/library/exceptions.html#BaseException "BaseException"). It is `None` by default but can be set to a string which is added to the exception’s traceback.
  * [bpo-45947](https://bugs.python.org/issue?@action=redirect&bpo=45947): Place pointers to dict and values immediately before GC header. This reduces number of dependent memory loads to access either dict or values from 3 to 1.
  * [bpo-45915](https://bugs.python.org/issue?@action=redirect&bpo=45915): `is_valid_fd` now uses faster `fcntl(fd, F_GETFD)` on Linux, macOS, and Windows.
  * [bpo-44530](https://bugs.python.org/issue?@action=redirect&bpo=44530): Reverts a change to the `code.__new__` [audit event](https://docs.python.org/3/library/audit_events.html#audit-events) from an earlier prerelease.
  * [bpo-42268](https://bugs.python.org/issue?@action=redirect&bpo=42268): Fail the configure step if the selected compiler doesn’t support memory sanitizer. Patch by Pablo Galindo
  * [bpo-45711](https://bugs.python.org/issue?@action=redirect&bpo=45711): The three values of `exc_info` are now always consistent with each other. In particular, the `type` and `traceback` fields are now derived from the exception instance. This impacts the return values of [`sys.exc_info()`](https://docs.python.org/3/library/sys.html#sys.exc_info "sys.exc_info") and [`PyErr_GetExcInfo()`](https://docs.python.org/3/c-api/exceptions.html#c.PyErr_GetExcInfo "PyErr_GetExcInfo") if the exception instance is modified while the exception is handled, as well as [`PyErr_SetExcInfo()`](https://docs.python.org/3/c-api/exceptions.html#c.PyErr_SetExcInfo "PyErr_SetExcInfo"), which now ignores the `type` and `traceback` arguments provided to it.
  * [bpo-45727](https://bugs.python.org/issue?@action=redirect&bpo=45727): Refine the custom syntax error that suggests that a comma may be missing to trigger only when the expressions are detected between parentheses or brackets. Patch by Pablo Galindo
  * [bpo-45885](https://bugs.python.org/issue?@action=redirect&bpo=45885): Specialized the `COMPARE_OP` opcode using the PEP 659 machinery.
  * [bpo-45786](https://bugs.python.org/issue?@action=redirect&bpo=45786): Allocate space for the interpreter frame in the frame object, to avoid an additional allocation when the frame object outlives the frame activation.
  * [bpo-45614](https://bugs.python.org/issue?@action=redirect&bpo=45614): Fix [`traceback`](https://docs.python.org/3/library/traceback.html#module-traceback "traceback: Print or retrieve a stack traceback.") display for exceptions with invalid module name.
  * [bpo-45813](https://bugs.python.org/issue?@action=redirect&bpo=45813): Fix crash when calling coro.cr_frame.clear() after coroutine has been freed.
  * [bpo-45811](https://bugs.python.org/issue?@action=redirect&bpo=45811): Improve the tokenizer errors when encountering invisible control characters in the parser. Patch by Pablo Galindo
  * [bpo-45848](https://bugs.python.org/issue?@action=redirect&bpo=45848): Allow the parser to obtain error lines directly from encoded files. Patch by Pablo Galindo
  * [bpo-45709](https://bugs.python.org/issue?@action=redirect&bpo=45709): Restore behavior from 3.10 when tracing an exception raised within a with statement.
  * [bpo-44525](https://bugs.python.org/issue?@action=redirect&bpo=44525): Adds new [`COPY_FREE_VARS`](https://docs.python.org/3/library/dis.html#opcode-COPY_FREE_VARS) opcode, to make copying of free variables from function to frame explicit. Helps optimization of calls to Python function.
  * [bpo-45829](https://bugs.python.org/issue?@action=redirect&bpo=45829): Specialize [`BINARY_SUBSCR`](https://docs.python.org/3/library/dis.html#opcode-BINARY_SUBSC