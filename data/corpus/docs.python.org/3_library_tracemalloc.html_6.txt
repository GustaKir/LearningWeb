Title: tracemalloc.take_snapshot() Method
URL: https://docs.python.org/3/library/tracemalloc.html
Summary: The `tracemalloc.take_snapshot()` method creates a snapshot of memory blocks allocated by Python, returning a new `Snapshot` instance. This snapshot excludes memory allocated prior to the initiation of the `tracemalloc` module and is limited by the traceback frames defined by `get_traceback_limit()`. Users can adjust the number of stored frames using the `_nframe_` parameter in the `start()` function.
---

tracemalloc.take_snapshot()[¶](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.take_snapshot "Link to this definition")
    
Take a snapshot of traces of memory blocks allocated by Python. Return a new [`Snapshot`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.Snapshot "tracemalloc.Snapshot") instance.
The snapshot does not include memory blocks allocated before the [`tracemalloc`](https://docs.python.org/3/library/tracemalloc.html#module-tracemalloc "tracemalloc: Trace memory allocations.") module started to trace memory allocations.
Tracebacks of traces are limited to [`get_traceback_limit()`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.get_traceback_limit "tracemalloc.get_traceback_limit") frames. Use the _nframe_ parameter of the [`start()`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.start "tracemalloc.start") function to store more frames.
The [`tracemalloc`](https://docs.python.org/3/library/tracemalloc.html#module-tracemalloc "tracemalloc: Trace memory allocations.") module must be tracing memory allocations to take a snapshot, see the [`start()`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.start "tracemalloc.start") function.
See also the [`get_object_traceback()`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.get_object_traceback "tracemalloc.get_object_traceback") function.
### DomainFilter[¶](https://docs.python.org/3/library/tracemalloc.html#domainfilter "Link to this heading") 

_class_ tracemalloc.DomainFilter(_inclusive :[bool](https://docs.python.org/3/library/functions.html#bool "bool")_, _domain :[int](https://docs.python.org/3/library/functions.html#int "int")_)[¶](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.DomainFilter "Link to this definition")
    
Filter traces of memory blocks by their address space (domain).
Added in version 3.6. 

inclusive[¶](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.DomainFilter.inclusive "Link to this definition")
    
If _inclusive_ is `True` (include), match memory blocks allocated in the address space [`domain`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.DomainFilter.domain "tracemalloc.DomainFilter.domain").
If _inclusive_ is `False` (exclude), match memory blocks not allocated in the address space [`domain`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.DomainFilter.domain "tracemalloc.DomainFilter.domain"). 

domain[¶](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.DomainFilter.domain "Link to this definition")
    
Address space of a memory block (`int`). Read-only property.
### Filter[¶](https://docs.python.org/3/library/tracemalloc.html#filter "Link to this heading") 

_class_ tracemalloc.Filter(_inclusive :[bool](https://docs.python.org/3/library/functions.html#bool "bool")_, _filename_pattern :[str](https://docs.python.org/3/library/stdtypes.html#str "str")_, _lineno :[int](https://docs.python.org/3/library/functions.html#int "int")=None_, _all_frames :[bool](https://docs.python.org/3/library/functions.html#bool "bool")=False_, _domain :[int](https://docs.python.org/3/library/functions.html#int "int")=None_)[¶](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.Filter "Link to this definition")
    
Filter on traces of memory blocks.
See the [`fnmatch.fnmatch()`](https://docs.python.org/3/library/fnmatch.html#fnmatch.fnmatch "fnmatch.fnmatch") function for the syntax of _filename_pattern_. The `'.pyc'` file extension is replaced with `'.py'`.
Examples:
  * `Filter(True, subprocess.__file__)` only includes traces of the [`subprocess`](https://docs.python.org/3/library/subprocess.html#module-subprocess "subprocess: Subprocess management.") module
  * `Filter(False, tracemalloc.__file__)` excludes traces of the [`tracemalloc`](https://docs.python.org/3/library/tracemalloc.html#module-tracemalloc "tracemalloc: Trace memory allocations.") module
  * `Filter(False, "<unknown>")` excludes empty tracebacks


Changed in version 3.5: The `'.pyo'` file extension is no longer replaced with `'.py'`.
Changed in version 3.6: Added the [`domain`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.Filter.domain "tracemalloc.Filter.domain") attribute. 

domain[¶](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.Filter.domain "Link to this definition")
    
Address space of a memory block (`int` or `None`).
tracemalloc uses the domain `0` to trace memory allocations made by Python. C extensions can use other domains to trace other resources.