Title: CSV Dialect Configuration
URL: https://docs.python.org/3/library/csv.html
Summary: The CSV Dialect defines parameters for CSV format customization, including 'delimiter' which separates fields (default is ',') and 'doublequote' which determines how quotation marks inside fields are handled (default is True, doubling quotes). If 'doublequote' is set to False without an escape character, an error will occur if a quote character is found within a field.
---

Dialect.delimiter[¶](https://docs.python.org/3/library/csv.html#csv.Dialect.delimiter "Link to this definition")
    
A one-character string used to separate fields. It defaults to `','`. 

Dialect.doublequote[¶](https://docs.python.org/3/library/csv.html#csv.Dialect.doublequote "Link to this definition")
    
Controls how instances of _quotechar_ appearing inside a field should themselves be quoted. When [`True`](https://docs.python.org/3/library/constants.html#True "True"), the character is doubled. When [`False`](https://docs.python.org/3/library/constants.html#False "False"), the _escapechar_ is used as a prefix to the _quotechar_. It defaults to [`True`](https://docs.python.org/3/library/constants.html#True "True").
On output, if _doublequote_ is [`False`](https://docs.python.org/3/library/constants.html#False "False") and no _escapechar_ is set, [`Error`](https://docs.python.org/3/library/csv.html#csv.Error "csv.Error") is raised if a _quotechar_ is found in a field. 

Dialect.escapechar[¶](https://docs.python.org/3/library/csv.html#csv.Dialect.escapechar "Link to this definition")
    
A one-character string used by the writer to escape the _delimiter_ if _quoting_ is set to [`QUOTE_NONE`](https://docs.python.org/3/library/csv.html#csv.QUOTE_NONE "csv.QUOTE_NONE") and the _quotechar_ if _doublequote_ is [`False`](https://docs.python.org/3/library/constants.html#False "False"). On reading, the _escapechar_ removes any special meaning from the following character. It defaults to [`None`](https://docs.python.org/3/library/constants.html#None "None"), which disables escaping.
Changed in version 3.11: An empty _escapechar_ is not allowed. 

Dialect.lineterminator[¶](https://docs.python.org/3/library/csv.html#csv.Dialect.lineterminator "Link to this definition")
    
The string used to terminate lines produced by the [`writer`](https://docs.python.org/3/library/csv.html#csv.writer "csv.writer"). It defaults to `'\r\n'`.
Note
The [`reader`](https://docs.python.org/3/library/csv.html#csv.reader "csv.reader") is hard-coded to recognise either `'\r'` or `'\n'` as end-of-line, and ignores _lineterminator_. This behavior may change in the future. 

Dialect.quotechar[¶](https://docs.python.org/3/library/csv.html#csv.Dialect.quotechar "Link to this definition")
    
A one-character string used to quote fields containing special characters, such as the _delimiter_ or _quotechar_ , or which contain new-line characters. It defaults to `'"'`.
Changed in version 3.11: An empty _quotechar_ is not allowed. 

Dialect.quoting[¶](https://docs.python.org/3/library/csv.html#csv.Dialect.quoting "Link to this definition")
    
Controls when quotes should be generated by the writer and recognised by the reader. It can take on any of the [QUOTE_* constants](https://docs.python.org/3/library/csv.html#csv-constants) and defaults to [`QUOTE_MINIMAL`](https://docs.python.org/3/library/csv.html#csv.QUOTE_MINIMAL "csv.QUOTE_MINIMAL"). 

Dialect.skipinitialspace[¶](https://docs.python.org/3/library/csv.html#csv.Dialect.skipinitialspace "Link to this definition")
    
When [`True`](https://docs.python.org/3/library/constants.html#True "True"), spaces immediately following the _delimiter_ are ignored. The default is [`False`](https://docs.python.org/3/library/constants.html#False "False"). 

Dialect.strict[¶](https://docs.python.org/3/library/csv.html#csv.Dialect.strict "Link to this definition")
    
When `True`, raise exception [`Error`](https://docs.python.org/3/library/csv.html#csv.Error "csv.Error") on bad CSV input. The default is `False`.
## Reader Objects[¶](https://docs.python.org/3/library/csv.html#reader-objects "Link to this heading")
Reader objects ([`DictReader`](https://docs.python.org/3/library/csv.html#csv.DictReader "csv.DictReader") instances and objects returned by the [`reader()`](https://docs.python.org/3/library/csv.html#csv.reader "csv.reader") function) have the following public methods: 

csvreader.__next__()[¶](https://docs.python.org/3/library/csv.html#csv.csvreader.__next__ "Link to this definition")
    
Return the next row of the reader’s iterable object as a list (if the object was returned from [`reader()`](https://docs.python.org/3/library/csv.html#csv.reader "csv.reader")) or a dict (if it is a [`DictReader`](https://docs.python.org/3/library/csv.html#csv.DictReader "csv.DictReader") instance), parsed according to the current [`Dialect`](https://docs.python.org/3/library/csv.html#csv.Dialect "csv.Dialect"). Usually you should call this as `next(reader)`.
Reader objects have the following public attributes: 

csvreader.dialect[¶](https://docs.python.org/3/library/csv.html#csv.csvreader.dialect "Link to this definition")
    
A read-only description of the dialect in use by the parser.