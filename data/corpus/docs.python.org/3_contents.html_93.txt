Title: Python Standard Library - Contents Overview
URL: https://docs.python.org/3/contents.html
Summary: This section lists various modules in the Python Standard Library, including 'keyword' for testing Python keywords, 'tokenize' for tokenizing source code, 'tabnanny' for detecting ambiguous indentation, 'pyclbr' for module browsing support, and 'py_compile' for compiling source files, along with their features and command-line usage.
---

n.html)
      * [`keyword` — Testing for Python keywords](https://docs.python.org/3/library/keyword.html)
      * [`tokenize` — Tokenizer for Python source](https://docs.python.org/3/library/tokenize.html)
        * [Tokenizing Input](https://docs.python.org/3/library/tokenize.html#tokenizing-input)
        * [Command-Line Usage](https://docs.python.org/3/library/tokenize.html#command-line-usage)
        * [Examples](https://docs.python.org/3/library/tokenize.html#examples)
      * [`tabnanny` — Detection of ambiguous indentation](https://docs.python.org/3/library/tabnanny.html)
      * [`pyclbr` — Python module browser support](https://docs.python.org/3/library/pyclbr.html)
        * [Function Objects](https://docs.python.org/3/library/pyclbr.html#function-objects)
        * [Class Objects](https://docs.python.org/3/library/pyclbr.html#class-objects)
      * [`py_compile` — Compile Python source files](https://docs.python.org/3/library/py_compile.html)
        * [Command-Line Interface](https://docs.python.org/3/library/py_compile.html#command-line-interface)
      * [`compileall` — Byte-compile Python libraries](https://docs.python.org/3/library/compileall.html)
        * [Command-line use](https://docs.python.org/3/library/compileall.html#command-line-use)
        * [Public functions](https://docs.python.org/3/library/compileall.html#public-functions)
      * [`dis` — Disassembler for Python bytecode](https://docs.python.org/3/library/dis.html)
        * [Command-line interface](https://docs.python.org/3/library/dis.html#command-line-interface)
        * [Bytecode analysis](https://docs.python.org/3/library/dis.html#bytecode-analysis)
        * [Analysis functions](https://docs.python.org/3/library/dis.html#analysis-functions)
        * [Python Bytecode Instructions](https://docs.python.org/3/library/dis.html#python-bytecode-instructions)
        * [Opcode collections](https://docs.python.org/3/library/dis.html#opcode-collections)
      * [`pickletools` — Tools for pickle developers](https://docs.python.org/3/library/pickletools.html)
        * [Command line usage](https://docs.python.org/3/library/pickletools.html#command-line-usage)
          * [Command line options](https://docs.python.org/3/library/pickletools.html#command-line-options)
        * [Programmatic Interface](https://docs.python.org/3/library/pickletools.html#programmatic-interface)
    * [MS Windows Specific Services](https://docs.python.org/3/library/windows.html)
      * [`msvcrt` — Useful routines from the MS VC++ runtime](https://docs.python.org/3/library/msvcrt.html)
        * [File Operations](https://docs.python.org/3/library/msvcrt.html#file-operations)
        * [Console I/O](https://docs.python.org/3/library/msvcrt.html#console-i-o)
        * [Other Functions](https://docs.python.org/3/library/msvcrt.html#other-functions)
      * [`winreg` — Windows registry access](https://docs.python.org/3/library/winreg.html)
        * [Functions](https://docs.python.org/3/library/winreg.html#functions)
        * [Constants](https://docs.python.org/3/library/winreg.html#constants)
          * [HKEY_* Constants](https://docs.python.org/3/library/winreg.html#hkey-constants)
          * [Access Rights](https://docs.python.org/3/library/winreg.html#access-rights)
            * [64-bit Specific](https://docs.python.org/3/library/winreg.html#bit-specific)
          * [Value Types](https://docs.python.org/3/library/winreg.html#value-types)
        * [Registry Handle Objects](https://docs.python.org/3/library/winreg.html#registry-handle-objects)
      * [`winsound` — Sound-playing interface for Windows](https://docs.python.org/3/library/winsound.html)
    * [Unix Specific Services](https://docs.python.org/3/library/unix.html)
      * [`posix` — The most common POSIX system calls](https://docs.python.org/3/library/posix.html)
        * [Large File Support](https://docs.python.org/3/library/posix.html#large-file-support)
        * [Notable Module Contents](https://docs.python.org/3/library/posix.html#notable-module-contents)
      * [`pwd` — The password database](https://docs.python.org/3/library/pwd.html)
      * [`grp` — The group database](https://docs.python.org/3/library/grp.html)
      * [`termios` — POSIX style tty control](https://docs.python.org/3/library/termios.html)
        * [Example](https://docs.python.org/3/library/termios.html#example)
      * [`tty` — Terminal control functions](https://docs.python.org/3/library/tty.html)
      * [`pty` — Pseudo-terminal utilities](https://docs.python.org/3/library/pty.html)
        * [Example](https://docs.python.org/3/library/pty.html#example)
      * [`fcntl` — The `fcntl` and `ioctl` system calls](https://docs.python.org/3/library/fcntl.html)
      * [`resource` — Resource usage information](https://docs.python.org/3/library/resource.html)
        * [Resource Limits](https://docs.python.org/3/library/resource.html#resource-limits)
        * [Resource Usage](https://docs.python.org/3/library/reso