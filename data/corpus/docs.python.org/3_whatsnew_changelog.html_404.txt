Title: Python Changelog Highlights
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: Recent updates include improved precision in calculations, correct identification of instance methods by the pdb command, enhanced handling of dict subclasses in pprint, and better cancellation management in asyncio's wait_for function regarding timeouts.
---

Internally, each step is computed with extra precision so that the result is now almost always correctly rounded.
  * [bpo-41609](https://bugs.python.org/issue?@action=redirect&bpo=41609): The pdb whatis command correctly reports instance methods as ‘Method’ rather than ‘Function’.
  * [bpo-39994](https://bugs.python.org/issue?@action=redirect&bpo=39994): Fixed pprint’s handling of dict subclasses that override __repr__.
  * [bpo-32751](https://bugs.python.org/issue?@action=redirect&bpo=32751): When cancelling the task due to a timeout, [`asyncio.wait_for()`](https://docs.python.org/3/library/asyncio-task.html#asyncio.wait_for "asyncio.wait_for") will now wait until the cancellation is complete also in the case when _timeout_ is <= 0, like it does with positive timeouts.
  * [bpo-37658](https://bugs.python.org/issue?@action=redirect&bpo=37658): [`asyncio.wait_for()`](https://docs.python.org/3/library/asyncio-task.html#asyncio.wait_for "asyncio.wait_for") now properly handles races between cancellation of itself and the completion of the wrapped awaitable.
  * [bpo-40782](https://bugs.python.org/issue?@action=redirect&bpo=40782): Change the method asyncio.AbstractEventLoop.run_in_executor to not be a coroutine.
  * [bpo-41520](https://bugs.python.org/issue?@action=redirect&bpo=41520): Fix [`codeop`](https://docs.python.org/3/library/codeop.html#module-codeop "codeop: Compile \(possibly incomplete\) Python code.") regression that prevented turning compile warnings into errors.
  * [bpo-41528](https://bugs.python.org/issue?@action=redirect&bpo=41528): turtle uses math module functions to convert degrees to radians and vice versa and to calculate vector norm
  * [bpo-41513](https://bugs.python.org/issue?@action=redirect&bpo=41513): Minor algorithmic improvement to math.hypot() and math.dist() giving small gains in speed and accuracy.
  * [bpo-41503](https://bugs.python.org/issue?@action=redirect&bpo=41503): Fixed a race between setTarget and flush in logging.handlers.MemoryHandler.
  * [bpo-41497](https://bugs.python.org/issue?@action=redirect&bpo=41497): Fix potential UnicodeDecodeError in dis module.
  * [bpo-41467](https://bugs.python.org/issue?@action=redirect&bpo=41467): On Windows, fix asyncio `recv_into()` return value when the socket/pipe is closed ([`BrokenPipeError`](https://docs.python.org/3/library/exceptions.html#BrokenPipeError "BrokenPipeError")): return `0` rather than an empty byte string (`b''`).
  * [bpo-41425](https://bugs.python.org/issue?@action=redirect&bpo=41425): Make tkinter doc example runnable.
  * [bpo-41421](https://bugs.python.org/issue?@action=redirect&bpo=41421): Make an algebraic simplification to random.paretovariate(). It now is slightly less subject to round-off error and is slightly faster.