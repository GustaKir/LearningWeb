Title: Python IDLE and Tools/Demos Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section highlights updates for Python IDLE and associated tools. Key improvements for IDLE include maintaining operations on macOS, fixing the reporting of RE errors in search engines, and enhancing docstring retrieval for calltips. Additionally, updates to the smelly.py script allow it to check the Python dynamic library and extension modules, along with increased verbosity in its output.
---

### IDLE[¶](https://docs.python.org/3/whatsnew/changelog.html#id344 "Link to this heading")
  * [bpo-42508](https://bugs.python.org/issue?@action=redirect&bpo=42508): Keep IDLE running on macOS. Remove obsolete workaround that prevented running files with shortcuts when using new universal2 installers built on macOS 11.
  * [bpo-42426](https://bugs.python.org/issue?@action=redirect&bpo=42426): Fix reporting offset of the RE error in searchengine.
  * [bpo-42415](https://bugs.python.org/issue?@action=redirect&bpo=42415): Get docstrings for IDLE calltips more often by using inspect.getdoc.


### Tools/Demos[¶](https://docs.python.org/3/whatsnew/changelog.html#id345 "Link to this heading")
  * [bpo-42212](https://bugs.python.org/issue?@action=redirect&bpo=42212): The smelly.py script now also checks the Python dynamic library and extension modules, not only the Python static library. Make also the script more verbose: explain what it does.
  * [bpo-36310](https://bugs.python.org/issue?@action=redirect&bpo=36310): Allow `Tools/i18n/pygettext.py` to detect calls to `gettext` in f-strings.


### C API[¶](https://docs.python.org/3/whatsnew/changelog.html#id346 "Link to this heading")
  * [bpo-42423](https://bugs.python.org/issue?@action=redirect&bpo=42423): The [`PyType_FromSpecWithBases()`](https://docs.python.org/3/c-api/type.html#c.PyType_FromSpecWithBases "PyType_FromSpecWithBases") and [`PyType_FromModuleAndSpec()`](https://docs.python.org/3/c-api/type.html#c.PyType_FromModuleAndSpec "PyType_FromModuleAndSpec") functions now accept a single class as the _bases_ argument.
  * [bpo-1635741](https://bugs.python.org/issue?@action=redirect&bpo=1635741): Port [`select`](https://docs.python.org/3/library/select.html#module-select "select: Wait for I/O completion on multiple streams.") extension module to multiphase initialization ([**PEP 489**](https://peps.python.org/pep-0489/)).
  * [bpo-1635741](https://bugs.python.org/issue?@action=redirect&bpo=1635741): Port _posixsubprocess extension module to multiphase initialization ([**PEP 489**](https://peps.python.org/pep-0489/)).
  * [bpo-1635741](https://bugs.python.org/issue?@action=redirect&bpo=1635741): Port _posixshmem extension module to multiphase initialization ([**PEP 489**](https://peps.python.org/pep-0489/))
  * [bpo-1635741](https://bugs.python.org/issue?@action=redirect&bpo=1635741): Port _struct extension module to multiphase initialization ([**PEP 489**](https://peps.python.org/pep-0489/))
  * [bpo-1635741](https://bugs.python.org/issue?@action=redirect&bpo=1635741): Port `spwd` extension module to multiphase initialization ([**PEP 489**](https://peps.python.org/pep-0489/))
  * [bpo-1635741](https://bugs.python.org/issue?@action=redirect&bpo=1635741): Port [`gc`](https://docs.python.org/3/library/gc.html#module-gc "gc: Interface to the cycle-detecting garbage collector.") extension module to multiphase initialization ([**PEP 489**](https://peps.python.org/pep-0489/))
  * [bpo-1635741](https://bugs.python.org/issue?@action=redirect&bpo=1635741): Port _queue extension module to multiphase initialization ([**PEP 489**](https://peps.python.org/pep-0489/))
  * [bpo-39573](https://bugs.python.org/issue?@action=redirect&bpo=39573): Convert [`Py_TYPE()`](https://docs.python.org/3/c-api/structures.html#c.Py_TYPE "Py_TYPE") and [`Py_SIZE()`](https://docs.python.org/3/c-api/structures.html#c.Py_SIZE "Py_SIZE") back to macros to allow using them as an l-value. Many third party C extension modules rely on the ability of using Py_TYPE() and Py_SIZE() to set an object type and size: `Py_TYPE(obj) = type;` and `Py_SIZE(obj) = size;`.
  * [bpo-1635741](https://bugs.python.org/issue?@action=redirect&bpo=1635741): Port [`symtable`](https://docs.python.org/3/library/symtable.html#module-symtable "symtable: Interface to the compiler's internal symbol tables.") extension module to multiphase initialization ([**PEP 489**](https://peps.python.org/pep-0489/))
  * [bpo-1635741](https://bugs.python.org/issue?@action=redirect&bpo=1635741): Port [`grp`](https://docs.python.org/3/library/grp.html#module-grp "grp: The group database \(getgrnam\(\) and friends\). \(Unix\)") and [`pwd`](https://docs.python.org/3/library/pwd.html#module-pwd "pwd: The password database \(getpwnam\(\) and friends\). \(Unix\)") extension modules to multiphase initialization ([**PEP 489**](https://peps.python.org/pep-0489/))
  * [bpo-1635741](https://bugs.python.org/issue?@action=redirect&bpo=1635741): Port _random extension module to multiphase initialization ([**PEP 489**](https://peps.python.org/pep-0489/))
  * [bpo-1635741](https://bugs.python.org/issue?@action=redirect&bpo=1635741): Port _hashlib extension module to multiphase initialization ([**PEP 489**](https://peps.python.org/pep-0489/))
  * [bpo-41713](https://bugs.python.org/issue?@action=redirect&bpo=41713): Removed the undocumented `PyOS_InitInterrupts()` function. Initializing Python already implicitly installs signal handlers: see [`PyConfig.