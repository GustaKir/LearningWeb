Title: Tkinter Ttk Widgets Overview
URL: https://docs.python.org/3/library/tkinter.ttk.html
Summary: This section discusses `ttk.Widget`, which provides standard options and methods for Tk themed widgets in Python's Tkinter library. It also outlines common options available for `ttk` widgets, such as 'class' and 'cursor', detailing their descriptions and usage.
---

```

For more information about [TtkStyling](https://docs.python.org/3/library/tkinter.ttk.html#ttkstyling), see the [`Style`](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Style "tkinter.ttk.Style") class documentation.
## Widget[¶](https://docs.python.org/3/library/tkinter.ttk.html#widget "Link to this heading")
`ttk.Widget` defines standard options and methods supported by Tk themed widgets and is not supposed to be directly instantiated.
### Standard Options[¶](https://docs.python.org/3/library/tkinter.ttk.html#standard-options "Link to this heading")
All the `ttk` Widgets accept the following options:
Option | Description  
---|---  
class | Specifies the window class. The class is used when querying the option database for the window’s other options, to determine the default bindtags for the window, and to select the widget’s default layout and style. This option is read-only, and may only be specified when the window is created.  
cursor | Specifies the mouse cursor to be used for the widget. If set to the empty string (the default), the cursor is inherited for the parent widget.  
takefocus | Determines whether the window accepts the focus during keyboard traversal. 0, 1 or an empty string is returned. If 0 is returned, it means that the window should be skipped entirely during keyboard traversal. If 1, it means that the window should receive the input focus as long as it is viewable. And an empty string means that the traversal scripts make the decision about whether or not to focus on the window.  
style | May be used to specify a custom widget style.  
### Scrollable Widget Options[¶](https://docs.python.org/3/library/tkinter.ttk.html#scrollable-widget-options "Link to this heading")
The following options are supported by widgets that are controlled by a scrollbar.
Option | Description  
---|---  
xscrollcommand | Used to communicate with horizontal scrollbars. When the view in the widget’s window change, the widget will generate a Tcl command based on the scrollcommand. Usually this option consists of the method `Scrollbar.set()` of some scrollbar. This will cause the scrollbar to be updated whenever the view in the window changes.  
yscrollcommand | Used to communicate with vertical scrollbars. For some more information, see above.  
### Label Options[¶](https://docs.python.org/3/library/tkinter.ttk.html#label-options "Link to this heading")
The following options are supported by labels, buttons and other button-like widgets.
Option | Description  
---|---  
text | Specifies a text string to be displayed inside the widget.  
textvariable | Specifies a name whose value will be used in place of the text option resource.  
underline | If set, specifies the index (0-based) of a character to underline in the text string. The underline character is used for mnemonic activation.  
image | Specifies an image to display. This is a list of 1 or more elements. The first element is the default image name. The rest of the list if a sequence of statespec/value pairs as defined by [`Style.map()`](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Style.map "tkinter.ttk.Style.map"), specifying different images to use when the widget is in a particular state or a combination of states. All images in the list should have the same size.  
compound | Specifies how to display the image relative to the text, in the case both text and images options are present. Valid values are:
  * text: display text only
  * image: display image only
  * top, bottom, left, right: display image above, below, left of, or right of the text, respectively.
  * none: the default. display the image if present, otherwise the text.