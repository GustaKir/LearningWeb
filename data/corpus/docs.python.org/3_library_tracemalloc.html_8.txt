Title: Snapshot Methods in tracemalloc
URL: https://docs.python.org/3/library/tracemalloc.html
Summary: This section describes the methods available in the Snapshot class of the tracemalloc module, including 'dump' for saving snapshots to a file and 'filter_traces' for creating a new Snapshot with filtered traces based on specified filters.
---

dump(_filename_)[¶](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.Snapshot.dump "Link to this definition")
    
Write the snapshot into a file.
Use [`load()`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.Snapshot.load "tracemalloc.Snapshot.load") to reload the snapshot. 

filter_traces(_filters_)[¶](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.Snapshot.filter_traces "Link to this definition")
    
Create a new [`Snapshot`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.Snapshot "tracemalloc.Snapshot") instance with a filtered [`traces`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.Snapshot.traces "tracemalloc.Snapshot.traces") sequence, _filters_ is a list of [`DomainFilter`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.DomainFilter "tracemalloc.DomainFilter") and [`Filter`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.Filter "tracemalloc.Filter") instances. If _filters_ is an empty list, return a new [`Snapshot`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.Snapshot "tracemalloc.Snapshot") instance with a copy of the traces.
All inclusive filters are applied at once, a trace is ignored if no inclusive filters match it. A trace is ignored if at least one exclusive filter matches it.
Changed in version 3.6: [`DomainFilter`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.DomainFilter "tracemalloc.DomainFilter") instances are now also accepted in _filters_. 

_classmethod_ load(_filename_)[¶](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.Snapshot.load "Link to this definition")
    
Load a snapshot from a file.
See also [`dump()`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.Snapshot.dump "tracemalloc.Snapshot.dump"). 

statistics(_key_type :[str](https://docs.python.org/3/library/stdtypes.html#str "str")_, _cumulative :[bool](https://docs.python.org/3/library/functions.html#bool "bool")=False_)[¶](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.Snapshot.statistics "Link to this definition")
    
Get statistics as a sorted list of [`Statistic`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.Statistic "tracemalloc.Statistic") instances grouped by _key_type_ :
key_type | description  
---|---  
`'filename'` | filename  
`'lineno'` | filename and line number  
`'traceback'` | traceback  
If _cumulative_ is `True`, cumulate size and count of memory blocks of all frames of the traceback of a trace, not only the most recent frame. The cumulative mode can only be used with _key_type_ equals to `'filename'` and `'lineno'`.
The result is sorted from the biggest to the smallest by: [`Statistic.size`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.Statistic.size "tracemalloc.Statistic.size"), [`Statistic.count`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.Statistic.count "tracemalloc.Statistic.count") and then by [`Statistic.traceback`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.Statistic.traceback "tracemalloc.Statistic.traceback"). 

traceback_limit[¶](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.Snapshot.traceback_limit "Link to this definition")
    
Maximum number of frames stored in the traceback of [`traces`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.Snapshot.traces "tracemalloc.Snapshot.traces"): result of the [`get_traceback_limit()`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.get_traceback_limit "tracemalloc.get_traceback_limit") when the snapshot was taken. 

traces[¶](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.Snapshot.traces "Link to this definition")
    
Traces of all memory blocks allocated by Python: sequence of [`Trace`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.Trace "tracemalloc.Trace") instances.
The sequence has an undefined order. Use the [`Snapshot.statistics()`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.Snapshot.statistics "tracemalloc.Snapshot.statistics") method to get a sorted list of statistics.
### Statistic[¶](https://docs.python.org/3/library/tracemalloc.html#statistic "Link to this heading") 

_class_ tracemalloc.Statistic[¶](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.Statistic "Link to this definition")
    
Statistic on memory allocations.
[`Snapshot.statistics()`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.Snapshot.statistics "tracemalloc.Snapshot.statistics") returns a list of [`Statistic`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.Statistic "tracemalloc.Statistic") instances.
See also the [`StatisticDiff`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.StatisticDiff "tracemalloc.StatisticDiff") class.