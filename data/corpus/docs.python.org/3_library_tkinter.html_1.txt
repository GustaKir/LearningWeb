Title: Introduction to tkinter
URL: https://docs.python.org/3/library/tkinter.html
Summary: The `tkinter` package is the standard Python interface to the Tcl/Tk GUI toolkit, available on most Unix and Windows systems. It allows users to create graphical user interfaces in Python. Running `python -m tkinter` opens a window to verify its installation.
---

# `tkinter` — Python interface to Tcl/Tk[¶](https://docs.python.org/3/library/tkinter.html#module-tkinter "Link to this heading")
**Source code:** [Lib/tkinter/__init__.py](https://github.com/python/cpython/tree/3.13/Lib/tkinter/__init__.py)
The [`tkinter`](https://docs.python.org/3/library/tkinter.html#module-tkinter "tkinter: Interface to Tcl/Tk for graphical user interfaces") package (“Tk interface”) is the standard Python interface to the Tcl/Tk GUI toolkit. Both Tk and [`tkinter`](https://docs.python.org/3/library/tkinter.html#module-tkinter "tkinter: Interface to Tcl/Tk for graphical user interfaces") are available on most Unix platforms, including macOS, as well as on Windows systems.
Running `python -m tkinter` from the command line should open a window demonstrating a simple Tk interface, letting you know that [`tkinter`](https://docs.python.org/3/library/tkinter.html#module-tkinter "tkinter: Interface to Tcl/Tk for graphical user interfaces") is properly installed on your system, and also showing what version of Tcl/Tk is installed, so you can read the Tcl/Tk documentation specific to that version.
Tkinter supports a range of Tcl/Tk versions, built either with or without thread support. The official Python binary release bundles Tcl/Tk 8.6 threaded. See the source code for the [`_tkinter`](https://docs.python.org/3/library/tkinter.html#module-_tkinter "_tkinter: A binary module that contains the low-level interface to Tcl/Tk.") module for more information about supported versions.
Tkinter is not a thin wrapper, but adds a fair amount of its own logic to make the experience more pythonic. This documentation will concentrate on these additions and changes, and refer to the official Tcl/Tk documentation for details that are unchanged.
Note
Tcl/Tk 8.5 (2007) introduced a modern set of themed user interface components along with a new API to use them. Both old and new APIs are still available. Most documentation you will find online still uses the old API and can be woefully outdated.
See also
  * 

[TkDocs](https://tkdocs.com/)
    
Extensive tutorial on creating user interfaces with Tkinter. Explains key concepts, and illustrates recommended approaches using the modern API.
  * 

[Tkinter 8.5 reference: a GUI for Python](https://www.tkdocs.com/shipman/)
    
Reference documentation for Tkinter 8.5 detailing available classes, methods, and options.


Tcl/Tk Resources:
  * 

[Tk commands](https://www.tcl.tk/man/tcl8.6/TkCmd/contents.htm)
    
Comprehensive reference to each of the underlying Tcl/Tk commands used by Tkinter.
  * 

[Tcl/Tk Home Page](https://www.tcl.tk)
    
Additional documentation, and links to Tcl/Tk core development.


Books:
  * 

[Modern Tkinter for Busy Python Developers](https://tkdocs.com/book.html)
    
By Mark Roseman. (ISBN 978-1999149567)
  * 

[Python GUI programming with Tkinter](https://www.packtpub.com/en-us/product/python-gui-programming-with-tkinter-9781788835886)
    
By Alan D. Moore. (ISBN 978-1788835886)
  * 

[Programming Python](https://learning-python.com/about-pp4e.html)
    
By Mark Lutz; has excellent coverage of Tkinter. (ISBN 978-0596158101)
  * 

[Tcl and the Tk Toolkit (2nd edition)](https://www.amazon.com/exec/obidos/ASIN/032133633X)
    
By John Ousterhout, inventor of Tcl/Tk, and Ken Jones; does not cover Tkinter. (ISBN 978-0321336330)


## Architecture[¶](https://docs.python.org/3/library/tkinter.html#architecture "Link to this heading")
Tcl/Tk is not a single library but rather consists of a few distinct modules, each with separate functionality and its own official documentation. Python’s binary releases also ship an add-on module together with it. 

Tcl
    
Tcl is a dynamic interpreted programming language, just like Python. Though it can be used on its own as a general-purpose programming language, it is most commonly embedded into C applications as a scripting engine or an interface to the Tk toolkit. The Tcl library has a C interface to create and manage one or more instances of a Tcl interpreter, run Tcl commands and scripts in those instances, and add custom commands implemented in either Tcl or C. Each interpreter has an event queue, and there are facilities to send events to it and process them. Unlike Python, Tcl’s execution model is designed around cooperative multitasking, and Tkinter bridges this difference (see [Threading model](https://docs.python.org/3/library/tkinter.html#threading-model) for details). 

Tk
    
Tk is a [Tcl package](https://wiki.tcl-lang.org/37432) implemented in C that adds custom commands to create and manipulate GUI widgets. Each [`Tk`](https://docs.python.org/3/library/tkinter.html#tkinter.Tk "tkinter.Tk") object embeds its own Tcl interpreter instance with Tk loaded into it. Tk’s widgets are very customizable, though at the cost of a dated appearance. Tk uses Tcl’s event queue to generate and process GUI events.