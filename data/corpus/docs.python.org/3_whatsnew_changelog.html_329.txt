Title: Python 3 Changelog: Fixes and Improvements
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section outlines fixes related to skipping decorators in test classes, potential deadlock issues in concurrent futures, and bugs in the unittest framework's cleanup process. Notable improvements include ensuring proper invocation of cleanup functions registered with addModuleCleanup() and addClassCleanup().
---

Previously it returned `None` if the test class or method was decorated with a skipping decorator.
  * [bpo-45021](https://bugs.python.org/issue?@action=redirect&bpo=45021): Fix a potential deadlock at shutdown of forked children when using [`concurrent.futures`](https://docs.python.org/3/library/concurrent.futures.html#module-concurrent.futures "concurrent.futures: Execute computations concurrently using threads or processes.") module
  * [bpo-43913](https://bugs.python.org/issue?@action=redirect&bpo=43913): Fix bugs in cleaning up classes and modules in [`unittest`](https://docs.python.org/3/library/unittest.html#module-unittest "unittest: Unit testing framework for Python."):
    * Functions registered with [`addModuleCleanup()`](https://docs.python.org/3/library/unittest.html#unittest.addModuleCleanup "unittest.addModuleCleanup") were not called unless the user defines `tearDownModule()` in their test module.
    * Functions registered with [`addClassCleanup()`](https://docs.python.org/3/library/unittest.html#unittest.TestCase.addClassCleanup "unittest.TestCase.addClassCleanup") were not called if `tearDownClass` is set to `None`.
    * Buffering in [`TestResult`](https://docs.python.org/3/library/unittest.html#unittest.TestResult "unittest.TestResult") did not work with functions registered with `addClassCleanup()` and `addModuleCleanup()`.
    * Errors in functions registered with `addClassCleanup()` and `addModuleCleanup()` were not handled correctly in buffered and debug modes.
    * Errors in `setUpModule()` and functions registered with `addModuleCleanup()` were reported in wrong order.
    * And several lesser bugs.
  * [bpo-45030](https://bugs.python.org/issue?@action=redirect&bpo=45030): Fix integer overflow in pickling and copying the range iterator.
  * [bpo-45001](https://bugs.python.org/issue?@action=redirect&bpo=45001): Made email date parsing more robust against malformed input, namely a whitespace-only `Date:` header. Patch by Wouter Bolsterlee.
  * [bpo-45010](https://bugs.python.org/issue?@action=redirect&bpo=45010): Remove support of special method `__div__` in [`unittest.mock`](https://docs.python.org/3/library/unittest.mock.html#module-unittest.mock "unittest.mock: Mock object library."). It is not used in Python 3.
  * [bpo-39218](https://bugs.python.org/issue?@action=redirect&bpo=39218): Improve accuracy of variance calculations by using `x*x` instead of `x**2`.
  * [bpo-43613](https://bugs.python.org/issue?@action=redirect&bpo=43613): Improve the speed of [`gzip.compress()`](https://docs.python.org/3/library/gzip.html#gzip.compress "gzip.compress") and [`gzip.decompress()`](https://docs.python.org/3/library/gzip.html#gzip.decompress "gzip.decompress") by compressing and decompressing at once in memory instead of in a streamed fashion.
  * [bpo-37596](https://bugs.python.org/issue?@action=redirect&bpo=37596): Ensure that [`set`](https://docs.python.org/3/library/stdtypes.html#set "set") and [`frozenset`](https://docs.python.org/3/library/stdtypes.html#frozenset "frozenset") objects are always [`marshalled`](https://docs.python.org/3/library/marshal.html#module-marshal "marshal: Convert Python objects to streams of bytes and back \(with different constraints\).") reproducibly.
  * [bpo-44019](https://bugs.python.org/issue?@action=redirect&bpo=44019): A new function `operator.call` has been added, such that `operator.call(obj, *args, **kwargs) == obj(*args, **kwargs)`.
  * [bpo-42255](https://bugs.python.org/issue?@action=redirect&bpo=42255): `webbrowser.MacOSX` is deprecated and will be removed in Python 3.13. It is untested and undocumented and also not used by [`webbrowser`](https://docs.python.org/3/library/webbrowser.html#module-webbrowser "webbrowser: Easy-to-use controller for web browsers.") itself. Patch by Donghee Na.
  * [bpo-44955](https://bugs.python.org/issue?@action=redirect&bpo=44955): Method [`stopTestRun()`](https://docs.python.org/3/library/unittest.html#unittest.TestResult.stopTestRun "unittest.TestResult.stopTestRun") is now always called in pair with method [`startTestRun()`](https://docs.python.org/3/library/unittest.html#unittest.TestResult.startTestRun "unittest.TestResult.startTestRun") for [`TestResult`](https://docs.python.org/3/library/unittest.html#unittest.TestResult "unittest.TestResult") objects implicitly created in [`run()`](https://docs.python.org/3/library/unittest.html#unittest.TestCase.run "unittest.TestCase.run").