Title: Index of Python C Macros and Locale Constants
URL: https://docs.python.org/3/genindex-all.html
Summary: This segment provides an index of various C macros used in Python's C API, including types like T_BOOL, T_BYTE, and T_DOUBLE, as well as locale-related constants such as T_FMT and T_FMT_AMPM.
---

---|---  
## T
  * [T_BOOL (C macro)](https://docs.python.org/3/c-api/structures.html#index-4)
  * [T_BYTE (C macro)](https://docs.python.org/3/c-api/structures.html#index-4)
  * [T_CHAR (C macro)](https://docs.python.org/3/c-api/structures.html#index-4)
  * [T_DOUBLE (C macro)](https://docs.python.org/3/c-api/structures.html#index-4)
  * [T_FLOAT (C macro)](https://docs.python.org/3/c-api/structures.html#index-4)
  * [T_FMT (in module locale)](https://docs.python.org/3/library/locale.html#locale.T_FMT)
  * [T_FMT_AMPM (in module locale)](https://docs.python.org/3/library/locale.html#locale.T_FMT_AMPM)
  * [T_INT (C macro)](https://docs.python.org/3/c-api/structures.html#index-4)
  * [T_LONG (C macro)](https://docs.python.org/3/c-api/structures.html#index-4)
  * [T_LONGLONG (C macro)](https://docs.python.org/3/c-api/structures.html#index-4)
  * [T_NONE (C macro)](https://docs.python.org/3/c-api/structures.html#c.T_NONE)
  * [T_OBJECT (C macro)](https://docs.python.org/3/c-api/structures.html#c.T_OBJECT)
  * [T_OBJECT_EX (C macro)](https://docs.python.org/3/c-api/structures.html#index-4)
  * [T_PYSSIZET (C macro)](https://docs.python.org/3/c-api/structures.html#index-4)
  * [T_SHORT (C macro)](https://docs.python.org/3/c-api/structures.html#index-4)
  * [T_STRING (C macro)](https://docs.python.org/3/c-api/structures.html#index-4)
  * [T_STRING_INPLACE (C macro)](https://docs.python.org/3/c-api/structures.html#index-4)
  * [T_UBYTE (C macro)](https://docs.python.org/3/c-api/structures.html#index-4)
  * [T_UINT (C macro)](https://docs.python.org/3/c-api/structures.html#index-4)
  * [T_ULONG (C macro)](https://docs.python.org/3/c-api/structures.html#index-4)
  * [T_ULONGULONG (C macro)](https://docs.python.org/3/c-api/structures.html#index-4)
  * [T_USHORT (C macro)](https://docs.python.org/3/c-api/structures.html#index-4)
  * [tab](https://docs.python.org/3/reference/lexical_analysis.html#index-8)
  * [TAB (in module curses.ascii)](https://docs.python.org/3/library/curses.ascii.html#curses.ascii.TAB)
  * [tab() (tkinter.ttk.Notebook method)](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Notebook.tab)
  * [TabError](https://docs.python.org/3/library/exceptions.html#TabError)
  * tabnanny 
    * [module](https://docs.python.org/3/library/tabnanny.html#module-tabnanny)
  * [tabs() (tkinter.ttk.Notebook method)](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Notebook.tabs)
  * [tabsize (textwrap.TextWrapper attribute)](https://docs.python.org/3/library/textwrap.html#textwrap.TextWrapper.tabsize)
  * tabular 
    * [data](https://docs.python.org/3/library/csv.html#index-0)
  * [tag (xml.etree.ElementTree.Element attribute)](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.tag)
  * [tag_bind() (tkinter.ttk.Treeview method)](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Treeview.tag_bind)
  * [tag_configure() (tkinter.ttk.Treeview method)](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Treeview.tag_configure)
  * [tag_has() (tkinter.ttk.Treeview method)](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Treeview.tag_has)
  * [tagName (xml.dom.Element attribute)](https://docs.python.org/3/library/xml.dom.html#xml.dom.Element.tagName)
  * [tail (xml.etree.ElementTree.Element attribute)](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.tail)
  * [take_snapshot() (in module tracemalloc)](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.take_snapshot)
  * [takewhile() (in module itertools)](https://docs.python.org/3/library/itertools.html#itertools.takewhile)
  * [tan() (in module cmath)](https://docs.python.org/3/library/cmath.html#cmath.tan)
    * [(in module math)](https://docs.python.org/3/library/math.html#math.tan)
  * [tanh() (in module cmath)](https://docs.python.org/3/library/cmath.html#cmath.tanh)
    * [(in module math)](https://docs.python.org/3/library/math.html#math.tanh)
  * [tar_filter() (in module tarfile)](https://docs.python.org/3/library/tarfile.html#tarfile.tar_filter)
  * [TarError](https://docs.python.org/3/library/tarfile.html#tarfile.TarError)
  * tarfile 
    * [module](https://docs.python.org/3/library/tarfile.html#module-tarfile)
  * [TarFile (class in tarfile)](https://docs.python.org/3/library/tarfile.html#tarfile.TarFile)
  * tarfile command line option 
    * [--create](https://docs.python.org/3/library/tarfile.html#cmdoption-tarfile-create)
    * [--extract](https://docs.python.org/3/library/tarfile.html#cmdoption-tarfile-extract)
    * [--filter](https://docs.python.org/3/library/tarfile.html#cmdoption-tarfile-filter)
    * [--list](https://docs.python.org/3/library/tarfile.html#cmdoption-tarfile-list)
    * [--test](https://docs.python.org/3/library/tarfile.html#cmdoption-tarfile-test)
    * [--verbose](https://docs.python.org/3/library/tarfile.html#cmdoption-tarfile-v)
    * [-c](https://docs.python.org/3/li