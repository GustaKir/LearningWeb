Title: Python Test Support Module Enhancements
URL: https://docs.python.org/3/library/test.html
Summary: This document chunk highlights recent additions to the Python test support module, including the `skip_if_broken_multiprocessing_synchronize` function introduced in version 3.6 for skipping tests based on the availability of the `multiprocessing.synchronize` module, and two new functions added in version 3.10: `check_disallow_instantiation` for asserting type instantiation restrictions, and `adjust_int_max_str_digits`, a context manager for managing integer string digit limits.
---

```

Added in version 3.6. 

test.support.skip_if_broken_multiprocessing_synchronize()[¶](https://docs.python.org/3/library/test.html#test.support.skip_if_broken_multiprocessing_synchronize "Link to this definition")
    
Skip tests if the `multiprocessing.synchronize` module is missing, if there is no available semaphore implementation, or if creating a lock raises an [`OSError`](https://docs.python.org/3/library/exceptions.html#OSError "OSError").
Added in version 3.10. 

test.support.check_disallow_instantiation(_test_case_ , _tp_ , _* args_, _** kwds_)[¶](https://docs.python.org/3/library/test.html#test.support.check_disallow_instantiation "Link to this definition")
    
Assert that type _tp_ cannot be instantiated using _args_ and _kwds_.
Added in version 3.10. 

test.support.adjust_int_max_str_digits(_max_digits_)[¶](https://docs.python.org/3/library/test.html#test.support.adjust_int_max_str_digits "Link to this definition")
    
This function returns a context manager that will change the global [`sys.set_int_max_str_digits()`](https://docs.python.org/3/library/sys.html#sys.set_int_max_str_digits "sys.set_int_max_str_digits") setting for the duration of the context to allow execution of test code that needs a different limit on the number of digits when converting between an integer and string.
Added in version 3.11.
The [`test.support`](https://docs.python.org/3/library/test.html#module-test.support "test.support: Support for Python's regression test suite.") module defines the following classes: 

_class_ test.support.SuppressCrashReport[¶](https://docs.python.org/3/library/test.html#test.support.SuppressCrashReport "Link to this definition")
    
A context manager used to try to prevent crash dialog popups on tests that are expected to crash a subprocess.
On Windows, it disables Windows Error Reporting dialogs using [SetErrorMode](https://msdn.microsoft.com/en-us/library/windows/desktop/ms680621.aspx).
On UNIX, [`resource.setrlimit()`](https://docs.python.org/3/library/resource.html#resource.setrlimit "resource.setrlimit") is used to set [`resource.RLIMIT_CORE`](https://docs.python.org/3/library/resource.html#resource.RLIMIT_CORE "resource.RLIMIT_CORE")’s soft limit to 0 to prevent coredump file creation.
On both platforms, the old value is restored by [`__exit__()`](https://docs.python.org/3/reference/datamodel.html#object.__exit__ "object.__exit__"). 

_class_ test.support.SaveSignals[¶](https://docs.python.org/3/library/test.html#test.support.SaveSignals "Link to this definition")
    
Class to save and restore signal handlers registered by the Python signal handler. 

save(_self_)[¶](https://docs.python.org/3/library/test.html#test.support.SaveSignals.save "Link to this definition")
    
Save the signal handlers to a dictionary mapping signal numbers to the current signal handler. 

restore(_self_)[¶](https://docs.python.org/3/library/test.html#test.support.SaveSignals.restore "Link to this definition")
    
Set the signal numbers from the [`save()`](https://docs.python.org/3/library/test.html#test.support.SaveSignals.save "test.support.SaveSignals.save") dictionary to the saved handler. 

_class_ test.support.Matcher[¶](https://docs.python.org/3/library/test.html#test.support.Matcher "Link to this definition")
     

matches(_self_ , _d_ , _** kwargs_)[¶](https://docs.python.org/3/library/test.html#test.support.Matcher.matches "Link to this definition")
    
Try to match a single dict with the supplied arguments. 

match_value(_self_ , _k_ , _dv_ , _v_)[¶](https://docs.python.org/3/library/test.html#test.support.Matcher.match_value "Link to this definition")
    
Try to match a single stored value (_dv_) with a supplied value (_v_).
# [`test.support.socket_helper`](https://docs.python.org/3/library/test.html#module-test.support.socket_helper "test.support.socket_helper: Support for socket tests.") — Utilities for socket tests[¶](https://docs.python.org/3/library/test.html#module-test.support.socket_helper "Link to this heading")
The [`test.support.socket_helper`](https://docs.python.org/3/library/test.html#module-test.support.socket_helper "test.support.socket_helper: Support for socket tests.") module provides support for socket tests.
Added in version 3.9. 

test.support.socket_helper.IPV6_ENABLED[¶](https://docs.python.org/3/library/test.html#test.support.socket_helper.IPV6_ENABLED "Link to this definition")
    
Set to `True` if IPv6 is enabled on this host, `False` otherwise.