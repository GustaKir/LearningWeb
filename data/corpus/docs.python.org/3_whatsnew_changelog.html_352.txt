Title: Python Library Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section outlines recent updates and bug fixes in the Python library, including changes to @dataclass behavior, addition of a _total()_ method in collections.Counter, adjustments to netrc encoding, and optimizations in urllib.parse.parse_qsl.
---

### Library[¶](https://docs.python.org/3/whatsnew/changelog.html#id291 "Link to this heading")
  * [bpo-44015](https://bugs.python.org/issue?@action=redirect&bpo=44015): In @dataclass(), raise a TypeError if KW_ONLY is specified more than once.
  * [bpo-25478](https://bugs.python.org/issue?@action=redirect&bpo=25478): Added a _total()_ method to collections.Counter() to compute the sum of the counts.
  * [bpo-43733](https://bugs.python.org/issue?@action=redirect&bpo=43733): Change [`netrc.netrc`](https://docs.python.org/3/library/netrc.html#netrc.netrc "netrc.netrc") to use UTF-8 encoding before using locale encoding.
  * [bpo-43979](https://bugs.python.org/issue?@action=redirect&bpo=43979): Removed an unnecessary list comprehension before looping from [`urllib.parse.parse_qsl()`](https://docs.python.org/3/library/urllib.parse.html#urllib.parse.parse_qsl "urllib.parse.parse_qsl"). Patch by Christoph Zwerschke and Donghee Na.
  * [bpo-43993](https://bugs.python.org/issue?@action=redirect&bpo=43993): Update bundled pip to 21.1.1.
  * [bpo-43957](https://bugs.python.org/issue?@action=redirect&bpo=43957): [Enum] Deprecate `TypeError` when non-member is used in a containment check; In 3.12 `True` or `False` will be returned instead, and containment will return `True` if the value is either a member of that enum or one of its members’ value.
  * [bpo-42904](https://bugs.python.org/issue?@action=redirect&bpo=42904): For backwards compatibility with previous minor versions of Python, if [`typing.get_type_hints()`](https://docs.python.org/3/library/typing.html#typing.get_type_hints "typing.get_type_hints") receives no namespace dictionary arguments, [`typing.get_type_hints()`](https://docs.python.org/3/library/typing.html#typing.get_type_hints "typing.get_type_hints") will search through the global then local namespaces during evaluation of stringized type annotations (string forward references) inside a class.
  * [bpo-43945](https://bugs.python.org/issue?@action=redirect&bpo=43945): [Enum] Deprecate non-standard mixin format() behavior: in 3.12 the enum member, not the member’s value, will be used for format() calls.
  * [bpo-41139](https://bugs.python.org/issue?@action=redirect&bpo=41139): Deprecate undocumented `cgi.log()` API.
  * [bpo-43937](https://bugs.python.org/issue?@action=redirect&bpo=43937): Fixed the [`turtle`](https://docs.python.org/3/library/turtle.html#module-turtle "turtle: An educational framework for simple graphics applications") module working with non-default root window.
  * [bpo-43930](https://bugs.python.org/issue?@action=redirect&bpo=43930): Update bundled pip to 21.1 and setuptools to 56.0.0
  * [bpo-43907](https://bugs.python.org/issue?@action=redirect&bpo=43907): Fix a bug in the pure-Python pickle implementation when using protocol 5, where bytearray instances that occur several time in the pickled object graph would incorrectly unpickle into repeated copies of the bytearray object.
  * [bpo-43926](https://bugs.python.org/issue?@action=redirect&bpo=43926): In `importlib.metadata`, provide a uniform interface to `Description`, allow for any field to be encoded with multiline values, remove continuation lines from multiline values, and add a `.json` property for easy access to the PEP 566 JSON-compatible form. Sync with `importlib_metadata 4.0`.
  * [bpo-43920](https://bugs.python.org/issue?@action=redirect&bpo=43920): OpenSSL 3.0.0: [`load_verify_locations()`](https://docs.python.org/3/library/ssl.html#ssl.SSLContext.load_verify_locations "ssl.SSLContext.load_verify_locations") now returns a consistent error message when cadata contains no valid certificate.
  * [bpo-43607](https://bugs.python.org/issue?@action=redirect&bpo=43607): [`urllib`](https://docs.python.org/3/library/urllib.html#module-urllib "urllib") can now convert Windows paths with `\\?\` prefixes into URL paths.
  * [bpo-43817](https://bugs.python.org/issue?@action=redirect&bpo=43817): Add [`inspect.get_annotations()`](https://docs.python.org/3/library/inspect.html#inspect.get_annotations "inspect.get_annotations"), which safely computes the annotations defined on an object. It works around the quirks of accessing the annotations from various types of objects, and makes very few assumptions about the object passed in. [`inspect.get_annotations()`](https://docs.python.org/3/library/inspect.html#inspect.get_annotations "inspect.get_annotations") can also correctly un-stringize stringized annotations.
[`inspect.signature()`](https://docs.python.org/3/library/inspect.html#inspect.signature "inspect.signature"), `inspect.from_callable()`, and `inspect.from_function()` now call [`inspect.get_annotations()`](https://docs.python.org/3/library/inspect.html#inspect.get_annotations "inspect.get_annotations") to retrieve annotations. This means [`inspect.signature()`](https://docs.python.org/3/library/inspect.html#inspect.signature "inspect.signature") and `inspect.from_callable()` can now un-stringize stringized annotations, too