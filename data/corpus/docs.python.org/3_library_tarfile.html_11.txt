Title: TarFile and TarInfo Overview
URL: https://docs.python.org/3/library/tarfile.html
Summary: The section details the `TarFile.pax_headers`, a dictionary of key-value pairs for pax global headers, and introduces `TarInfo` objects, which represent individual members in a `TarFile`. `TarInfo` stores file attributes like type, size, and permissions but does not include the file's data.
---

TarFile.pax_headers _:[ dict](https://docs.python.org/3/library/stdtypes.html#dict "dict")_[¶](https://docs.python.org/3/library/tarfile.html#tarfile.TarFile.pax_headers "Link to this definition")
    
A dictionary containing key-value pairs of pax global headers.
## TarInfo Objects[¶](https://docs.python.org/3/library/tarfile.html#tarinfo-objects "Link to this heading")
A [`TarInfo`](https://docs.python.org/3/library/tarfile.html#tarfile.TarInfo "tarfile.TarInfo") object represents one member in a [`TarFile`](https://docs.python.org/3/library/tarfile.html#tarfile.TarFile "tarfile.TarFile"). Aside from storing all required attributes of a file (like file type, size, time, permissions, owner etc.), it provides some useful methods to determine its type. It does _not_ contain the file’s data itself.
[`TarInfo`](https://docs.python.org/3/library/tarfile.html#tarfile.TarInfo "tarfile.TarInfo") objects are returned by [`TarFile`](https://docs.python.org/3/library/tarfile.html#tarfile.TarFile "tarfile.TarFile")’s methods [`getmember()`](https://docs.python.org/3/library/tarfile.html#tarfile.TarFile.getmember "tarfile.TarFile.getmember"), [`getmembers()`](https://docs.python.org/3/library/tarfile.html#tarfile.TarFile.getmembers "tarfile.TarFile.getmembers") and [`gettarinfo()`](https://docs.python.org/3/library/tarfile.html#tarfile.TarFile.gettarinfo "tarfile.TarFile.gettarinfo").
Modifying the objects returned by [`getmember()`](https://docs.python.org/3/library/tarfile.html#tarfile.TarFile.getmember "tarfile.TarFile.getmember") or [`getmembers()`](https://docs.python.org/3/library/tarfile.html#tarfile.TarFile.getmembers "tarfile.TarFile.getmembers") will affect all subsequent operations on the archive. For cases where this is unwanted, you can use [`copy.copy()`](https://docs.python.org/3/library/copy.html#module-copy "copy: Shallow and deep copy operations.") or call the [`replace()`](https://docs.python.org/3/library/tarfile.html#tarfile.TarInfo.replace "tarfile.TarInfo.replace") method to create a modified copy in one step.
Several attributes can be set to `None` to indicate that a piece of metadata is unused or unknown. Different [`TarInfo`](https://docs.python.org/3/library/tarfile.html#tarfile.TarInfo "tarfile.TarInfo") methods handle `None` differently:
  * The [`extract()`](https://docs.python.org/3/library/tarfile.html#tarfile.TarFile.extract "tarfile.TarFile.extract") or [`extractall()`](https://docs.python.org/3/library/tarfile.html#tarfile.TarFile.extractall "tarfile.TarFile.extractall") methods will ignore the corresponding metadata, leaving it set to a default.
  * [`addfile()`](https://docs.python.org/3/library/tarfile.html#tarfile.TarFile.addfile "tarfile.TarFile.addfile") will fail.
  * [`list()`](https://docs.python.org/3/library/tarfile.html#tarfile.TarFile.list "tarfile.TarFile.list") will print a placeholder string.



_class_ tarfile.TarInfo(_name =''_)[¶](https://docs.python.org/3/library/tarfile.html#tarfile.TarInfo "Link to this definition")
    
Create a [`TarInfo`](https://docs.python.org/3/library/tarfile.html#tarfile.TarInfo "tarfile.TarInfo") object. 

_classmethod_ TarInfo.frombuf(_buf_ , _encoding_ , _errors_)[¶](https://docs.python.org/3/library/tarfile.html#tarfile.TarInfo.frombuf "Link to this definition")
    
Create and return a [`TarInfo`](https://docs.python.org/3/library/tarfile.html#tarfile.TarInfo "tarfile.TarInfo") object from string buffer _buf_.
Raises [`HeaderError`](https://docs.python.org/3/library/tarfile.html#tarfile.HeaderError "tarfile.HeaderError") if the buffer is invalid. 

_classmethod_ TarInfo.fromtarfile(_tarfile_)[¶](https://docs.python.org/3/library/tarfile.html#tarfile.TarInfo.fromtarfile "Link to this definition")
    
Read the next member from the [`TarFile`](https://docs.python.org/3/library/tarfile.html#tarfile.TarFile "tarfile.TarFile") object _tarfile_ and return it as a [`TarInfo`](https://docs.python.org/3/library/tarfile.html#tarfile.TarInfo "tarfile.TarInfo") object. 

TarInfo.tobuf(_format =DEFAULT_FORMAT_, _encoding =ENCODING_, _errors ='surrogateescape'_)[¶](https://docs.python.org/3/library/tarfile.html#tarfile.TarInfo.tobuf "Link to this definition")
    
Create a string buffer from a [`TarInfo`](https://docs.python.org/3/library/tarfile.html#tarfile.TarInfo "tarfile.TarInfo") object. For information on the arguments see the constructor of the [`TarFile`](https://docs.python.org/3/library/tarfile.html#tarfile.TarFile "tarfile.TarFile") class.
Changed in version 3.2: Use `'surrogateescape'` as the default for the _errors_ argument.
A `TarInfo` object has the following public data attributes: 

TarInfo.name _:[ str](https://docs.python.org/3/library/stdtypes.html#str "str")_[¶](https://docs.python.org/3/library/tarfile.html#tarfile.TarInfo.name "Link to this definition")
    
Name of the archive member.