Title: Pen Control in Turtle Graphics
URL: https://docs.python.org/3/library/turtle.html
Summary: This section covers how to control the drawing state of the turtle in Python's Turtle graphics, including commands to pull the pen down for drawing (turtle.pendown, turtle.pd, turtle.down) and to pull the pen up for no drawing (turtle.penup, turtle.pu, turtle.up). It also introduces changing the pen's size with turtle.pensize.
---

```

### Pen control[¶](https://docs.python.org/3/library/turtle.html#id1 "Link to this heading")
#### Drawing state[¶](https://docs.python.org/3/library/turtle.html#drawing-state "Link to this heading") 

turtle.pendown()[¶](https://docs.python.org/3/library/turtle.html#turtle.pendown "Link to this definition")


turtle.pd()[¶](https://docs.python.org/3/library/turtle.html#turtle.pd "Link to this definition")


turtle.down()[¶](https://docs.python.org/3/library/turtle.html#turtle.down "Link to this definition")
    
Pull the pen down – drawing when moving. 

turtle.penup()[¶](https://docs.python.org/3/library/turtle.html#turtle.penup "Link to this definition")


turtle.pu()[¶](https://docs.python.org/3/library/turtle.html#turtle.pu "Link to this definition")


turtle.up()[¶](https://docs.python.org/3/library/turtle.html#turtle.up "Link to this definition")
    
Pull the pen up – no drawing when moving. 

turtle.pensize(_width =None_)[¶](https://docs.python.org/3/library/turtle.html#turtle.pensize "Link to this definition")


turtle.width(_width =None_)[¶](https://docs.python.org/3/library/turtle.html#turtle.width "Link to this definition")
     

Parameters:
    
**width** – a positive number
Set the line thickness to _width_ or return it. If resizemode is set to “auto” and turtleshape is a polygon, that polygon is drawn with the same line thickness. If no argument is given, the current pensize is returned.
>>>```
>>> turtle.pensize()
1
>>> turtle.pensize(10)  # from here on lines of width 10 are drawn

```


turtle.pen(_pen =None_, _** pendict_)[¶](https://docs.python.org/3/library/turtle.html#turtle.pen "Link to this definition")
     

Parameters:
    
  * **pen** – a dictionary with some or all of the below listed keys
  * **pendict** – one or more keyword-arguments with the below listed keys as keywords


Return or set the pen’s attributes in a “pen-dictionary” with the following key/value pairs:
  * “shown”: True/False
  * “pendown”: True/False
  * “pencolor”: color-string or color-tuple
  * “fillcolor”: color-string or color-tuple
  * “pensize”: positive number
  * “speed”: number in range 0..10
  * “resizemode”: “auto” or “user” or “noresize”
  * “stretchfactor”: (positive number, positive number)
  * “outline”: positive number
  * “tilt”: number


This dictionary can be used as argument for a subsequent call to [`pen()`](https://docs.python.org/3/library/turtle.html#turtle.pen "turtle.pen") to restore the former pen-state. Moreover one or more of these attributes can be provided as keyword-arguments. This can be used to set several pen attributes in one statement.
>>>```
>>> turtle.pen(fillcolor="black", pencolor="red", pensize=10)
>>> sorted(turtle.pen().items())
[('fillcolor', 'black'), ('outline', 1), ('pencolor', 'red'),
 ('pendown', True), ('pensize', 10), ('resizemode', 'noresize'),
 ('shearfactor', 0.0), ('shown', True), ('speed', 9),
 ('stretchfactor', (1.0, 1.0)), ('tilt', 0.0)]
>>> penstate=turtle.pen()
>>> turtle.color("yellow", "")
>>> turtle.penup()
>>> sorted(turtle.pen().items())[:3]
[('fillcolor', ''), ('outline', 1), ('pencolor', 'yellow')]
>>> turtle.pen(penstate, fillcolor="green")
>>> sorted(turtle.pen().items())[:3]
[('fillcolor', 'green'), ('outline', 1), ('pencolor', 'red')]

```


turtle.isdown()[¶](https://docs.python.org/3/library/turtle.html#turtle.isdown "Link to this definition")
    
Return `True` if pen is down, `False` if it’s up.
>>>```
>>> turtle.penup()
>>> turtle.isdown()
False
>>> turtle.pendown()
>>> turtle.isdown()
True

```

#### Color control[¶](https://docs.python.org/3/library/turtle.html#color-control "Link to this heading") 

turtle.pencolor(_* args_)[¶](https://docs.python.org/3/library/turtle.html#turtle.pencolor "Link to this definition")
    
Return or set the pencolor.
Four input formats are allowed: 

`pencolor()`
    
Return the current pencolor as color specification string or as a tuple (see example). May be used as input to another color/pencolor/fillcolor call. 

`pencolor(colorstring)`
    
Set pencolor to _colorstring_ , which is a Tk color specification string, such as `"red"`, `"yellow"`, or `"#33cc8c"`. 

`pencolor((r, g, b))`
    
Set pencolor to the RGB color represented by the tuple of _r_ , _g_ , and _b_. Each of _r_ , _g_ , and _b_ must be in the range 0..colormode, where colormode is either 1.0 or 255 (see [`colormode()`](https://docs.python.org/3/library/turtle.html#turtle.colormode "turtle.colormode")). 

`pencolor(r, g, b)`
    
Set pencolor to the RGB color represented by _r_ , _g_ , and _b_. Each of _r_ , _g_ , and _b_ must be in the range 0..colormode.
If turtleshape is a polygon, the outline of that polygon is drawn with the newly set pencolor.
>>>