Title: Python 3.5.0 Beta 3 Release Notes
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section details the updates in Python 3.5.0 beta 3, released on July 5, 2015. Key changes include the fix for buffer over-read in bytearray, an upgrade to Unicode 8.0.0, addition of Py_tp_finalize slot for stable ABI, and the introduction of a distinct coroutine type as part of PEP 492.
---

## Python 3.5.0 beta 3[¶](https://docs.python.org/3/whatsnew/changelog.html#python-3-5-0-beta-3 "Link to this heading")
_Release date: 2015-07-05_
### Core and Builtins[¶](https://docs.python.org/3/whatsnew/changelog.html#id762 "Link to this heading")
  * [bpo-24467](https://bugs.python.org/issue?@action=redirect&bpo=24467): Fixed possible buffer over-read in bytearray. The bytearray object now always allocates place for trailing null byte and it’s buffer now is always null-terminated.
  * Upgrade to Unicode 8.0.0.
  * [bpo-24345](https://bugs.python.org/issue?@action=redirect&bpo=24345): Add Py_tp_finalize slot for the stable ABI.
  * [bpo-24400](https://bugs.python.org/issue?@action=redirect&bpo=24400): Introduce a distinct type for [**PEP 492**](https://peps.python.org/pep-0492/) coroutines; add types.CoroutineType, inspect.getcoroutinestate, inspect.getcoroutinelocals; coroutines no longer use CO_GENERATOR flag; sys.set_coroutine_wrapper works only for ‘async def’ coroutines; inspect.iscoroutine no longer uses collections.abc.Coroutine, it’s intended to test for pure ‘async def’ coroutines only; add new opcode: GET_YIELD_FROM_ITER; fix generators wrapper used in types.coroutine to be instance of collections.abc.Generator; collections.abc.Awaitable and collections.abc.Coroutine can no longer be used to detect generator-based coroutines–use inspect.isawaitable instead.
  * [bpo-24450](https://bugs.python.org/issue?@action=redirect&bpo=24450): Add gi_yieldfrom to generators and cr_await to coroutines. Contributed by Benno Leslie and Yury Selivanov.
  * [bpo-19235](https://bugs.python.org/issue?@action=redirect&bpo=19235): Add new RecursionError exception. Patch by Georg Brandl.


### Library[¶](https://docs.python.org/3/whatsnew/changelog.html#id763 "Link to this heading")
  * [bpo-21750](https://bugs.python.org/issue?@action=redirect&bpo=21750): mock_open.read_data can now be read from each instance, as it could in Python 3.3.
  * [bpo-24552](https://bugs.python.org/issue?@action=redirect&bpo=24552): Fix use after free in an error case of the _pickle module.
  * [bpo-24514](https://bugs.python.org/issue?@action=redirect&bpo=24514): tarfile now tolerates number fields consisting of only whitespace.
  * [bpo-19176](https://bugs.python.org/issue?@action=redirect&bpo=19176): Fixed doctype() related bugs in C implementation of ElementTree. A deprecation warning no longer issued by XMLParser subclass with default doctype() method. Direct call of doctype() now issues a warning. Parser’s doctype() now is not called if target’s doctype() is called. Based on patch by Martin Panter.
  * [bpo-20387](https://bugs.python.org/issue?@action=redirect&bpo=20387): Restore semantic round-trip correctness in tokenize/untokenize for tab-indented blocks.
  * [bpo-24456](https://bugs.python.org/issue?@action=redirect&bpo=24456): Fixed possible buffer over-read in adpcm2lin() and lin2adpcm() functions of the audioop module.
  * [bpo-24336](https://bugs.python.org/issue?@action=redirect&bpo=24336): The contextmanager decorator now works with functions with keyword arguments called “func” and “self”. Patch by Martin Panter.
  * [bpo-24522](https://bugs.python.org/issue?@action=redirect&bpo=24522): Fix possible integer overflow in json accelerator module.
  * [bpo-24489](https://bugs.python.org/issue?@action=redirect&bpo=24489): ensure a previously set C errno doesn’t disturb cmath.polar().
  * [bpo-24408](https://bugs.python.org/issue?@action=redirect&bpo=24408): Fixed AttributeError in measure() and metrics() methods of tkinter.Font.
  * [bpo-14373](https://bugs.python.org/issue?@action=redirect&bpo=14373): C implementation of functools.lru_cache() now can be used with methods.
  * [bpo-24347](https://bugs.python.org/issue?@action=redirect&bpo=24347): Set KeyError if PyDict_GetItemWithError returns NULL.
  * [bpo-24348](https://bugs.python.org/issue?@action=redirect&bpo=24348): Drop superfluous incref/decref.
  * [bpo-24359](https://bugs.python.org/issue?@action=redirect&bpo=24359): Check for changed OrderedDict size during iteration.
  * [bpo-24368](https://bugs.python.org/issue?@action=redirect&bpo=24368): Support keyword arguments in OrderedDict methods.
  * [bpo-24362](https://bugs.python.org/issue?@action=redirect&bpo=24362): Simplify the C OrderedDict fast nodes resize logic.
  * [bpo-24377](https://bugs.python.org/issue?@action=redirect&bpo=24377): Fix a ref leak in OrderedDict.__repr__.
  * [bpo-24369](https://bugs.python.org/issue?@action=redirect&bpo=24369): Defend against key-changes during iteration.


### Tests[¶](https://docs.python.org/3/whatsnew/changelog.html#id764 "Link to this heading")
  * [bpo-24373](https://bugs.python.org/issue?@action=redirect&bpo=24373): _testmultiphase and xxlimited now use tp_traverse and tp_finalize to avoid reference leaks encountered when combining tp_dealloc with PyType_FromSpec (see [bpo-16690](https://bugs.python.org/issue?@action=redirect&bpo=16690) for details)