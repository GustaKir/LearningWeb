Title: Current Date and Time in Python
URL: https://docs.python.org/3/library/datetime.html
Summary: The `datetime.now()` method retrieves the current local date and time. It operates without a timezone parameter, providing greater precision compared to `time.time()`. The method functions similarly to `today()`, but with enhanced accuracy.
---

```

See also [`now()`](https://docs.python.org/3/library/datetime.html#datetime.datetime.now "datetime.datetime.now"), [`fromtimestamp()`](https://docs.python.org/3/library/datetime.html#datetime.datetime.fromtimestamp "datetime.datetime.fromtimestamp").
This method is functionally equivalent to [`now()`](https://docs.python.org/3/library/datetime.html#datetime.datetime.now "datetime.datetime.now"), but without a `tz` parameter. 

_classmethod_ datetime.now(_tz =None_)[¶](https://docs.python.org/3/library/datetime.html#datetime.datetime.now "Link to this definition")
    
Return the current local date and time.
If optional argument _tz_ is `None` or not specified, this is like [`today()`](https://docs.python.org/3/library/datetime.html#datetime.datetime.today "datetime.datetime.today"), but, if possible, supplies more precision than can be gotten from going through a [`time.time()`](https://docs.python.org/3/library/time.html#time.time "time.time") timestamp (for example, this may be possible on platforms supplying the C `gettimeofday()` function).
If _tz_ is not `None`, it must be an instance of a [`tzinfo`](https://docs.python.org/3/library/datetime.html#datetime.tzinfo "datetime.tzinfo") subclass, and the current date and time are converted to _tz_ ’s time zone.
This function is preferred over [`today()`](https://docs.python.org/3/library/datetime.html#datetime.datetime.today "datetime.datetime.today") and [`utcnow()`](https://docs.python.org/3/library/datetime.html#datetime.datetime.utcnow "datetime.datetime.utcnow").
Note
Subsequent calls to `datetime.now()` may return the same instant depending on the precision of the underlying clock. 

_classmethod_ datetime.utcnow()[¶](https://docs.python.org/3/library/datetime.html#datetime.datetime.utcnow "Link to this definition")
    
Return the current UTC date and time, with [`tzinfo`](https://docs.python.org/3/library/datetime.html#datetime.datetime.tzinfo "datetime.datetime.tzinfo") `None`.
This is like [`now()`](https://docs.python.org/3/library/datetime.html#datetime.datetime.now "datetime.datetime.now"), but returns the current UTC date and time, as a naive [`datetime`](https://docs.python.org/3/library/datetime.html#datetime.datetime "datetime.datetime") object. An aware current UTC datetime can be obtained by calling `datetime.now(timezone.utc)`. See also [`now()`](https://docs.python.org/3/library/datetime.html#datetime.datetime.now "datetime.datetime.now").
Warning
Because naive `datetime` objects are treated by many `datetime` methods as local times, it is preferred to use aware datetimes to represent times in UTC. As such, the recommended way to create an object representing the current time in UTC is by calling `datetime.now(timezone.utc)`.
Deprecated since version 3.12: Use [`datetime.now()`](https://docs.python.org/3/library/datetime.html#datetime.datetime.now "datetime.datetime.now") with [`UTC`](https://docs.python.org/3/library/datetime.html#datetime.UTC "datetime.UTC") instead.