Title: Revamped nntplib Module in Python 3.2
URL: https://docs.python.org/3/whatsnew/3.2.html
Summary: The `nntplib` module in Python 3.2 has been improved with better bytes and text handling, new APIs, and added support for secure connections via TLS (both implicit and explicit). These changes break compatibility with the previous version in Python 3.1.
---

(Contributed by Antoine Pitrou in [bpo-8850](https://bugs.python.org/issue?@action=redirect&bpo=8850), [bpo-1589](https://bugs.python.org/issue?@action=redirect&bpo=1589), [bpo-8322](https://bugs.python.org/issue?@action=redirect&bpo=8322), [bpo-5639](https://bugs.python.org/issue?@action=redirect&bpo=5639), [bpo-4870](https://bugs.python.org/issue?@action=redirect&bpo=4870), [bpo-8484](https://bugs.python.org/issue?@action=redirect&bpo=8484), and [bpo-8321](https://bugs.python.org/issue?@action=redirect&bpo=8321).)
### nntp[¶](https://docs.python.org/3/whatsnew/3.2.html#nntp "Link to this heading")
The `nntplib` module has a revamped implementation with better bytes and text semantics as well as more practical APIs. These improvements break compatibility with the nntplib version in Python 3.1, which was partly dysfunctional in itself.
Support for secure connections through both implicit (using `nntplib.NNTP_SSL`) and explicit (using `nntplib.NNTP.starttls()`) TLS has also been added.
(Contributed by Antoine Pitrou in [bpo-9360](https://bugs.python.org/issue?@action=redirect&bpo=9360) and Andrew Vant in [bpo-1926](https://bugs.python.org/issue?@action=redirect&bpo=1926).)
### certificates[¶](https://docs.python.org/3/whatsnew/3.2.html#certificates "Link to this heading")
[`http.client.HTTPSConnection`](https://docs.python.org/3/library/http.client.html#http.client.HTTPSConnection "http.client.HTTPSConnection"), [`urllib.request.HTTPSHandler`](https://docs.python.org/3/library/urllib.request.html#urllib.request.HTTPSHandler "urllib.request.HTTPSHandler") and [`urllib.request.urlopen()`](https://docs.python.org/3/library/urllib.request.html#urllib.request.urlopen "urllib.request.urlopen") now take optional arguments to allow for server certificate checking against a set of Certificate Authorities, as recommended in public uses of HTTPS.
(Added by Antoine Pitrou, [bpo-9003](https://bugs.python.org/issue?@action=redirect&bpo=9003).)
### imaplib[¶](https://docs.python.org/3/whatsnew/3.2.html#imaplib "Link to this heading")
Support for explicit TLS on standard IMAP4 connections has been added through the new [`imaplib.IMAP4.starttls`](https://docs.python.org/3/library/imaplib.html#imaplib.IMAP4.starttls "imaplib.IMAP4.starttls") method.
(Contributed by Lorenzo M. Catucci and Antoine Pitrou, [bpo-4471](https://bugs.python.org/issue?@action=redirect&bpo=4471).)
### http.client[¶](https://docs.python.org/3/whatsnew/3.2.html#http-client "Link to this heading")
There were a number of small API improvements in the [`http.client`](https://docs.python.org/3/library/http.client.html#module-http.client "http.client: HTTP and HTTPS protocol client \(requires sockets\).") module. The old-style HTTP 0.9 simple responses are no longer supported and the _strict_ parameter is deprecated in all classes.
The [`HTTPConnection`](https://docs.python.org/3/library/http.client.html#http.client.HTTPConnection "http.client.HTTPConnection") and [`HTTPSConnection`](https://docs.python.org/3/library/http.client.html#http.client.HTTPSConnection "http.client.HTTPSConnection") classes now have a _source_address_ parameter for a (host, port) tuple indicating where the HTTP connection is made from.
Support for certificate checking and HTTPS virtual hosts were added to [`HTTPSConnection`](https://docs.python.org/3/library/http.client.html#http.client.HTTPSConnection "http.client.HTTPSConnection").
The [`request()`](https://docs.python.org/3/library/http.client.html#http.client.HTTPConnection.request "http.client.HTTPConnection.request") method on connection objects allowed an optional _body_ argument so that a [file object](https://docs.python.org/3/glossary.html#term-file-object) could be used to supply the content of the request. Conveniently, the _body_ argument now also accepts an [iterable](https://docs.python.org/3/glossary.html#term-iterable) object so long as it includes an explicit `Content-Length` header. This extended interface is much more flexible than before.
To establish an HTTPS connection through a proxy server, there is a new [`set_tunnel()`](https://docs.python.org/3/library/http.client.html#http.client.HTTPConnection.set_tunnel "http.client.HTTPConnection.set_tunnel") method that sets the host and port for HTTP Connect tunneling.
To match the behavior of [`http.server`](https://docs.python.org/3/library/http.server.html#module-http.server "http.server: HTTP server and request handlers."), the HTTP client library now also encodes headers with ISO-8859-1 (Latin-1) encoding. It was already doing that for incoming headers, so now the behavior is consistent for both incoming and outgoing traffic. (See work by Armin Ronacher in [bpo-10980](https://bugs.python.org/issue?@action=redirect&bpo=10980).)
### unittest[¶](https://docs.python.org/3/whatsnew/3.2.html#unittest "Link to this heading")
The unittest module has a number of improvements supporting test discovery for packages, easier experimentation at the interactive prompt, new