Title: Python C API: Interpreter State Functions
URL: https://docs.python.org/3/c-api/init.html
Summary: This section describes functions related to the Python interpreter's state. The `PyInterpreterState_Get` function retrieves the current interpreter, requiring the caller to hold the GIL, while `PyInterpreterState_GetID` returns the unique ID of a given interpreter state, signaling errors with a return value of -1.
---

[PyInterpreterState](https://docs.python.org/3/c-api/init.html#c.PyInterpreterState "PyInterpreterState")*PyInterpreterState_Get(void)[¶](https://docs.python.org/3/c-api/init.html#c.PyInterpreterState_Get "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable) since version 3.9._
Get the current interpreter.
Issue a fatal error if there no current Python thread state or no current interpreter. It cannot return NULL.
The caller must hold the GIL.
Added in version 3.9. 

int64_tPyInterpreterState_GetID([PyInterpreterState](https://docs.python.org/3/c-api/init.html#c.PyInterpreterState "PyInterpreterState")*interp)[¶](https://docs.python.org/3/c-api/init.html#c.PyInterpreterState_GetID "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable) since version 3.7._
Return the interpreter’s unique ID. If there was any error in doing so then `-1` is returned and an error is set.
The caller must hold the GIL.
Added in version 3.7. 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyInterpreterState_GetDict([PyInterpreterState](https://docs.python.org/3/c-api/init.html#c.PyInterpreterState "PyInterpreterState")*interp)[¶](https://docs.python.org/3/c-api/init.html#c.PyInterpreterState_GetDict "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable) since version 3.8._
Return a dictionary in which interpreter-specific data may be stored. If this function returns `NULL` then no exception has been raised and the caller should assume no interpreter-specific dict is available.
This is not a replacement for [`PyModule_GetState()`](https://docs.python.org/3/c-api/module.html#c.PyModule_GetState "PyModule_GetState"), which extensions should use to store interpreter-specific state information.
Added in version 3.8. 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyUnstable_InterpreterState_GetMainModule([PyInterpreterState](https://docs.python.org/3/c-api/init.html#c.PyInterpreterState "PyInterpreterState")*interp)[¶](https://docs.python.org/3/c-api/init.html#c.PyUnstable_InterpreterState_GetMainModule "Link to this definition")
    
_This is[ Unstable API](https://docs.python.org/3/c-api/stable.html#unstable-c-api). It may change without warning in minor releases._
Return a [strong reference](https://docs.python.org/3/glossary.html#term-strong-reference) to the `__main__` [module object](https://docs.python.org/3/c-api/module.html#moduleobjects) for the given interpreter.
The caller must hold the GIL.
Added in version 3.13. 

typedef[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*(*_PyFrameEvalFunction)([PyThreadState](https://docs.python.org/3/c-api/init.html#c.PyThreadState "PyThreadState")*tstate,[_PyInterpreterFrame](https://docs.python.org/3/c-api/frame.html#c._PyInterpreterFrame "_PyInterpreterFrame")*frame,intthrowflag)[¶](https://docs.python.org/3/c-api/init.html#c._PyFrameEvalFunction "Link to this definition")
    
Type of a frame evaluation function.
The _throwflag_ parameter is used by the `throw()` method of generators: if non-zero, handle the current exception.
Changed in version 3.9: The function now takes a _tstate_ parameter.
Changed in version 3.11: The _frame_ parameter changed from `PyFrameObject*` to `_PyInterpreterFrame*`. 

[_PyFrameEvalFunction](https://docs.python.org/3/c-api/init.html#c._PyFrameEvalFunction "_PyFrameEvalFunction")_PyInterpreterState_GetEvalFrameFunc([PyInterpreterState](https://docs.python.org/3/c-api/init.html#c.PyInterpreterState "PyInterpreterState")*interp)[¶](https://docs.python.org/3/c-api/init.html#c._PyInterpreterState_GetEvalFrameFunc "Link to this definition")
    
Get the frame evaluation function.
See the [**PEP 523**](https://peps.python.org/pep-0523/) “Adding a frame evaluation API to CPython”.
Added in version 3.9. 

void_PyInterpreterState_SetEvalFrameFunc([PyInterpreterState](https://docs.python.org/3/c-api/init.html#c.PyInterpreterState "PyInterpreterState")*interp, [_PyFrameEvalFunction](https://docs.python.org/3/c-api/init.html#c._PyFrameEvalFunction "_PyFrameEvalFunction")eval_frame)[¶](https://docs.python.org/3/c-api/init.html#c._PyInterpreterState_SetEvalFrameFunc "Link to this definition")
    
Set the frame evaluation function.
See the [**PEP 523**](https://peps.python.org/pep-0523/) “Adding a frame evaluation API to CPython”.
Added in version 3.9.