Title: CSV Module Constants
URL: https://docs.python.org/3/library/csv.html
Summary: The `csv` module in Python defines several constants for controlling how fields are quoted in CSV files. These include `QUOTE_ALL`, which quotes all fields; `QUOTE_MINIMAL`, which only quotes fields containing special characters; and `QUOTE_NONNUMERIC`, which quotes non-numeric fields.
---

```

The [`csv`](https://docs.python.org/3/library/csv.html#module-csv "csv: Write and read tabular data to and from delimited files.") module defines the following constants: 

csv.QUOTE_ALL[¶](https://docs.python.org/3/library/csv.html#csv.QUOTE_ALL "Link to this definition")
    
Instructs [`writer`](https://docs.python.org/3/library/csv.html#csv.writer "csv.writer") objects to quote all fields. 

csv.QUOTE_MINIMAL[¶](https://docs.python.org/3/library/csv.html#csv.QUOTE_MINIMAL "Link to this definition")
    
Instructs [`writer`](https://docs.python.org/3/library/csv.html#csv.writer "csv.writer") objects to only quote those fields which contain special characters such as _delimiter_ , _quotechar_ or any of the characters in _lineterminator_. 

csv.QUOTE_NONNUMERIC[¶](https://docs.python.org/3/library/csv.html#csv.QUOTE_NONNUMERIC "Link to this definition")
    
Instructs [`writer`](https://docs.python.org/3/library/csv.html#csv.writer "csv.writer") objects to quote all non-numeric fields.
Instructs [`reader`](https://docs.python.org/3/library/csv.html#csv.reader "csv.reader") objects to convert all non-quoted fields to type _float_. 

csv.QUOTE_NONE[¶](https://docs.python.org/3/library/csv.html#csv.QUOTE_NONE "Link to this definition")
    
Instructs [`writer`](https://docs.python.org/3/library/csv.html#csv.writer "csv.writer") objects to never quote fields. When the current _delimiter_ occurs in output data it is preceded by the current _escapechar_ character. If _escapechar_ is not set, the writer will raise [`Error`](https://docs.python.org/3/library/csv.html#csv.Error "csv.Error") if any characters that require escaping are encountered.
Instructs [`reader`](https://docs.python.org/3/library/csv.html#csv.reader "csv.reader") objects to perform no special processing of quote characters. 

csv.QUOTE_NOTNULL[¶](https://docs.python.org/3/library/csv.html#csv.QUOTE_NOTNULL "Link to this definition")
    
Instructs [`writer`](https://docs.python.org/3/library/csv.html#csv.writer "csv.writer") objects to quote all fields which are not `None`. This is similar to [`QUOTE_ALL`](https://docs.python.org/3/library/csv.html#csv.QUOTE_ALL "csv.QUOTE_ALL"), except that if a field value is `None` an empty (unquoted) string is written.
Instructs [`reader`](https://docs.python.org/3/library/csv.html#csv.reader "csv.reader") objects to interpret an empty (unquoted) field as `None` and to otherwise behave as [`QUOTE_ALL`](https://docs.python.org/3/library/csv.html#csv.QUOTE_ALL "csv.QUOTE_ALL").
Added in version 3.12. 

csv.QUOTE_STRINGS[¶](https://docs.python.org/3/library/csv.html#csv.QUOTE_STRINGS "Link to this definition")
    
Instructs [`writer`](https://docs.python.org/3/library/csv.html#csv.writer "csv.writer") objects to always place quotes around fields which are strings. This is similar to [`QUOTE_NONNUMERIC`](https://docs.python.org/3/library/csv.html#csv.QUOTE_NONNUMERIC "csv.QUOTE_NONNUMERIC"), except that if a field value is `None` an empty (unquoted) string is written.
Instructs [`reader`](https://docs.python.org/3/library/csv.html#csv.reader "csv.reader") objects to interpret an empty (unquoted) string as `None` and to otherwise behave as [`QUOTE_NONNUMERIC`](https://docs.python.org/3/library/csv.html#csv.QUOTE_NONNUMERIC "csv.QUOTE_NONNUMERIC").
Added in version 3.12.
The [`csv`](https://docs.python.org/3/library/csv.html#module-csv "csv: Write and read tabular data to and from delimited files.") module defines the following exception: 

_exception_ csv.Error[¶](https://docs.python.org/3/library/csv.html#csv.Error "Link to this definition")
    
Raised by any of the functions when an error is detected.
## Dialects and Formatting Parameters[¶](https://docs.python.org/3/library/csv.html#dialects-and-formatting-parameters "Link to this heading")
To make it easier to specify the format of input and output records, specific formatting parameters are grouped together into dialects. A dialect is a subclass of the [`Dialect`](https://docs.python.org/3/library/csv.html#csv.Dialect "csv.Dialect") class containing various attributes describing the format of the CSV file. When creating [`reader`](https://docs.python.org/3/library/csv.html#csv.reader "csv.reader") or [`writer`](https://docs.python.org/3/library/csv.html#csv.writer "csv.writer") objects, the programmer can specify a string or a subclass of the [`Dialect`](https://docs.python.org/3/library/csv.html#csv.Dialect "csv.Dialect") class as the dialect parameter. In addition to, or instead of, the _dialect_ parameter, the programmer can also specify individual formatting parameters, which have the same names as the attributes defined below for the [`Dialect`](https://docs.python.org/3/library/csv.html#csv.Dialect "csv.Dialect") class.
Dialects support the following attributes: