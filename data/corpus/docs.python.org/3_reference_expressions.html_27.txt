Title: Operator Precedence and Functionality in Python Expressions
URL: https://docs.python.org/3/reference/expressions.html
Summary: This section discusses the precedence of operators in Python, notably that the power operator `**` has lower binding compared to arithmetic unary operators, as demonstrated by `2**-1` yielding `0.5`. It also mentions that the `%` operator is used for both modulus and string formatting, maintaining the same precedence.
---

operator, like those involving comparisons between instance methods, or constants. Check their documentation for more info.
[[5](https://docs.python.org/3/reference/expressions.html#id17)]
The power operator `**` binds less tightly than an arithmetic or bitwise unary operator on its right, that is, `2**-1` is `0.5`.
[[6](https://docs.python.org/3/reference/expressions.html#id18)]
The `%` operator is also used for string formatting; the same precedence applies.
### [Table of Contents](https://docs.python.org/3/contents.html)
  * [6. Expressions](https://docs.python.org/3/reference/expressions.html)
    * [6.1. Arithmetic conversions](https://docs.python.org/3/reference/expressions.html#arithmetic-conversions)
    * [6.2. Atoms](https://docs.python.org/3/reference/expressions.html#atoms)
      * [6.2.1. Identifiers (Names)](https://docs.python.org/3/reference/expressions.html#atom-identifiers)
        * [6.2.1.1. Private name mangling](https://docs.python.org/3/reference/expressions.html#index-5)
      * [6.2.2. Literals](https://docs.python.org/3/reference/expressions.html#literals)
      * [6.2.3. Parenthesized forms](https://docs.python.org/3/reference/expressions.html#parenthesized-forms)
      * [6.2.4. Displays for lists, sets and dictionaries](https://docs.python.org/3/reference/expressions.html#displays-for-lists-sets-and-dictionaries)
      * [6.2.5. List displays](https://docs.python.org/3/reference/expressions.html#list-displays)
      * [6.2.6. Set displays](https://docs.python.org/3/reference/expressions.html#set-displays)
      * [6.2.7. Dictionary displays](https://docs.python.org/3/reference/expressions.html#dictionary-displays)
      * [6.2.8. Generator expressions](https://docs.python.org/3/reference/expressions.html#generator-expressions)
      * [6.2.9. Yield expressions](https://docs.python.org/3/reference/expressions.html#yield-expressions)
        * [6.2.9.1. Generator-iterator methods](https://docs.python.org/3/reference/expressions.html#generator-iterator-methods)
        * [6.2.9.2. Examples](https://docs.python.org/3/reference/expressions.html#examples)
        * [6.2.9.3. Asynchronous generator functions](https://docs.python.org/3/reference/expressions.html#asynchronous-generator-functions)
        * [6.2.9.4. Asynchronous generator-iterator methods](https://docs.python.org/3/reference/expressions.html#asynchronous-generator-iterator-methods)
    * [6.3. Primaries](https://docs.python.org/3/reference/expressions.html#primaries)
      * [6.3.1. Attribute references](https://docs.python.org/3/reference/expressions.html#attribute-references)
      * [6.3.2. Subscriptions](https://docs.python.org/3/reference/expressions.html#subscriptions)
      * [6.3.3. Slicings](https://docs.python.org/3/reference/expressions.html#slicings)
      * [6.3.4. Calls](https://docs.python.org/3/reference/expressions.html#calls)
    * [6.4. Await expression](https://docs.python.org/3/reference/expressions.html#await-expression)
    * [6.5. The power operator](https://docs.python.org/3/reference/expressions.html#the-power-operator)
    * [6.6. Unary arithmetic and bitwise operations](https://docs.python.org/3/reference/expressions.html#unary-arithmetic-and-bitwise-operations)
    * [6.7. Binary arithmetic operations](https://docs.python.org/3/reference/expressions.html#binary-arithmetic-operations)
    * [6.8. Shifting operations](https://docs.python.org/3/reference/expressions.html#shifting-operations)
    * [6.9. Binary bitwise operations](https://docs.python.org/3/reference/expressions.html#binary-bitwise-operations)
    * [6.10. Comparisons](https://docs.python.org/3/reference/expressions.html#comparisons)
      * [6.10.1. Value comparisons](https://docs.python.org/3/reference/expressions.html#value-comparisons)
      * [6.10.2. Membership test operations](https://docs.python.org/3/reference/expressions.html#membership-test-operations)
      * [6.10.3. Identity comparisons](https://docs.python.org/3/reference/expressions.html#is-not)
    * [6.11. Boolean operations](https://docs.python.org/3/reference/expressions.html#boolean-operations)
    * [6.12. Assignment expressions](https://docs.python.org/3/reference/expressions.html#assignment-expressions)
    * [6.13. Conditional expressions](https://docs.python.org/3/reference/expressions.html#conditional-expressions)
    * [6.14. Lambdas](https://docs.python.org/3/reference/expressions.html#lambda)
    * [6.15. Expression lists](https://docs.python.org/3/reference/expressions.html#expression-lists)
    * [6.16. Evaluation order](https://docs.python.org/3/reference/expressions.html#evaluation-order)
    * [6.17. Operator precedence](https://docs.python.org/3/reference/expressions.html#operator-precedence)