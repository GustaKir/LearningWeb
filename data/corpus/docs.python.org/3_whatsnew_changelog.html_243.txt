Title: Python 3.x Changes and Fixes
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section lists several updates and fixes including the resolution of an issue with threading.Condition.notify(), changes to the statistics.median_grouped() function to always return a float, and the removal of the deprecated link_to method from pathlib.Path in favor of hardlink_to().
---

Aasland.
  * [gh-92530](https://github.com/python/cpython/issues/92530): Fix an issue that occurred after interrupting [`threading.Condition.notify()`](https://docs.python.org/3/library/threading.html#threading.Condition.notify "threading.Condition.notify").
  * [gh-92531](https://github.com/python/cpython/issues/92531): The statistics.median_grouped() function now always return a float. Formerly, it did not convert the input type when for sequences of length one.
  * [gh-84131](https://github.com/python/cpython/issues/84131): The [`pathlib.Path`](https://docs.python.org/3/library/pathlib.html#pathlib.Path "pathlib.Path") deprecated method `link_to` has been removed. Use 3.10’s [`hardlink_to()`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.hardlink_to "pathlib.Path.hardlink_to") method instead as its semantics are consistent with that of [`symlink_to()`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.symlink_to "pathlib.Path.symlink_to").
  * [gh-89336](https://github.com/python/cpython/issues/89336): Removed [`configparser`](https://docs.python.org/3/library/configparser.html#module-configparser "configparser: Configuration file parser.") module APIs: the `SafeConfigParser` class alias, the `ParsingError.filename` property and parameter, and the `ConfigParser.readfp` method, all of which were deprecated since Python 3.2.
  * [gh-92391](https://github.com/python/cpython/issues/92391): Add [`__class_getitem__()`](https://docs.python.org/3/reference/datamodel.html#object.__class_getitem__ "object.__class_getitem__") to [`csv.DictReader`](https://docs.python.org/3/library/csv.html#csv.DictReader "csv.DictReader") and [`csv.DictWriter`](https://docs.python.org/3/library/csv.html#csv.DictWriter "csv.DictWriter"), allowing them to be parameterized at runtime. Patch by Marc Mueller.
  * [gh-91968](https://github.com/python/cpython/issues/91968): Add `SO_RTABLE` and `SO_USER_COOKIE` constants to [`socket`](https://docs.python.org/3/library/socket.html#module-socket "socket: Low-level networking interface.").
  * [gh-91810](https://github.com/python/cpython/issues/91810): [`ElementTree`](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.ElementTree "xml.etree.ElementTree.ElementTree") method [`write()`](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.ElementTree.write "xml.etree.ElementTree.ElementTree.write") and function [`tostring()`](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.tostring "xml.etree.ElementTree.tostring") now use the text file’s encoding (“UTF-8” if not available) instead of locale encoding in XML declaration when `encoding="unicode"` is specified.
  * [gh-81790](https://github.com/python/cpython/issues/81790): [`os.path.splitdrive()`](https://docs.python.org/3/library/os.path.html#os.path.splitdrive "os.path.splitdrive") now understands DOS device paths with UNC links (beginning `\\?\UNC\`). Contributed by Barney Gale.
  * [gh-91760](https://github.com/python/cpython/issues/91760): Apply more strict rules for numerical group references and group names in regular expressions. Only sequence of ASCII digits is now accepted as a numerical reference. The group name in bytes patterns and replacement strings can now only contain ASCII letters and digits and underscore.
  * [gh-90622](https://github.com/python/cpython/issues/90622): Worker processes for [`concurrent.futures.ProcessPoolExecutor`](https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.ProcessPoolExecutor "concurrent.futures.ProcessPoolExecutor") are no longer spawned on demand (a feature added in 3.9) when the multiprocessing context start method is `"fork"` as that can lead to deadlocks in the child processes due to a fork happening while threads are running.
  * [gh-91577](https://github.com/python/cpython/issues/91577): Move imports in `SharedMemory` methods to module level so that they can be executed late in python finalization.
  * [gh-91581](https://github.com/python/cpython/issues/91581): Remove an unhandled error case in the C implementation of calls to [`datetime.fromtimestamp`](https://docs.python.org/3/library/datetime.html#datetime.datetime.fromtimestamp "datetime.datetime.fromtimestamp") with no time zone (i.e. getting a local time from an epoch timestamp). This should have no user-facing effect other than giving a possibly more accurate error message when called with timestamps that fall on 10000-01-01 in the local time.