Title: Python Documentation and Core Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section highlights recent changes and fixes in Python's documentation and core features, including improvements to `PyModule_AddObjectRef()`, clarifications on `multiprocessing.Queue.empty()` behaviors, and a fix for a crash related to managed dictionaries.
---

### Documentation[¶](https://docs.python.org/3/whatsnew/changelog.html#id58 "Link to this heading")
  * [gh-121749](https://github.com/python/cpython/issues/121749): Fix documentation for [`PyModule_AddObjectRef()`](https://docs.python.org/3/c-api/module.html#c.PyModule_AddObjectRef "PyModule_AddObjectRef").
  * [gh-120012](https://github.com/python/cpython/issues/120012): Clarify the behaviours of [`multiprocessing.Queue.empty()`](https://docs.python.org/3/library/multiprocessing.html#multiprocessing.Queue.empty "multiprocessing.Queue.empty") and [`multiprocessing.SimpleQueue.empty()`](https://docs.python.org/3/library/multiprocessing.html#multiprocessing.SimpleQueue.empty "multiprocessing.SimpleQueue.empty") on closed queues. Patch by Bénédikt Tran.


### Core and Builtins[¶](https://docs.python.org/3/whatsnew/changelog.html#id59 "Link to this heading")
  * [gh-121860](https://github.com/python/cpython/issues/121860): Fix crash when rematerializing a managed dictionary after it was deleted.
  * [gh-121814](https://github.com/python/cpython/issues/121814): Fixed the SegFault when [`PyEval_SetTrace()`](https://docs.python.org/3/c-api/init.html#c.PyEval_SetTrace "PyEval_SetTrace") is used with no Python frame on stack.
  * [gh-121295](https://github.com/python/cpython/issues/121295): Fix PyREPL console getting into a blocked state after interrupting a long paste
  * [gh-121794](https://github.com/python/cpython/issues/121794): Fix bug in free-threaded Python where a resurrected object could lead to a negative ref count assertion failure.
  * [gh-121657](https://github.com/python/cpython/issues/121657): Improve the [`SyntaxError`](https://docs.python.org/3/library/exceptions.html#SyntaxError "SyntaxError") message if the user tries to use [`yield from`](https://docs.python.org/3/reference/simple_stmts.html#yield) outside a function.
  * [gh-121609](https://github.com/python/cpython/issues/121609): Fix pasting of characters containing unicode character joiners in the new REPL. Patch by Marta Gomez Macias
  * [gh-117482](https://github.com/python/cpython/issues/117482): Unexpected slot wrappers are no longer created for builtin static types in subinterpreters.
  * [gh-121499](https://github.com/python/cpython/issues/121499): Fix a bug affecting how multi-line history was being rendered in the new REPL after interacting with the new screen cache. Patch by Pablo Galindo
  * [gh-121497](https://github.com/python/cpython/issues/121497): Fix a bug that was preventing the REPL to correctly respect the history when an input hook was set. Patch by Pablo Galindo
  * [gh-121012](https://github.com/python/cpython/issues/121012): Tier 2 execution now ensures that list iterators remain exhausted, once they become exhausted.
  * [gh-121439](https://github.com/python/cpython/issues/121439): Allow tuples of length 20 in the freelist to be reused.
  * [gh-121368](https://github.com/python/cpython/issues/121368): Fix race condition in `_PyType_Lookup` in the free-threaded build due to a missing memory fence. This could lead to `_PyType_Lookup` returning incorrect results on arm64.
  * [gh-121130](https://github.com/python/cpython/issues/121130): Fix f-strings with debug expressions in format specifiers. Patch by Pablo Galindo
  * [gh-121115](https://github.com/python/cpython/issues/121115): [`PyLong_AsNativeBytes()`](https://docs.python.org/3/c-api/long.html#c.PyLong_AsNativeBytes "PyLong_AsNativeBytes") no longer uses [`__index__()`](https://docs.python.org/3/reference/datamodel.html#object.__index__ "object.__index__") methods by default. The `Py_ASNATIVEBYTES_ALLOW_INDEX` flag has been added to allow it.