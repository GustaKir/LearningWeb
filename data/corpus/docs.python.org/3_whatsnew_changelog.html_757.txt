Title: Python Changelog Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: Recent patches include converting hashing algorithms to ArgumentClinic, fixing the representation of sockets on Windows 64-bit, updating class representations, enabling the dis module to disassemble generator-iterator objects, modifying async_chat to ignore BlockingIOError, and fixing a DECREF issue in call_tzinfo_method.
---

Patch by Arfrever Frehtes Taifersar Arahesis.
  * [bpo-20173](https://bugs.python.org/issue?@action=redirect&bpo=20173): Convert sha1, sha256, sha512 and md5 to ArgumentClinic. Patch by Vajrasky Kok.
  * Fix repr(_socket.socket) on Windows 64-bit: don’t fail with OverflowError on closed socket. repr(socket.socket) already works fine.
  * [bpo-22033](https://bugs.python.org/issue?@action=redirect&bpo=22033): Reprs of most Python implemented classes now contain actual class name instead of hardcoded one.
  * [bpo-21947](https://bugs.python.org/issue?@action=redirect&bpo=21947): The dis module can now disassemble generator-iterator objects based on their gi_code attribute. Patch by Clement Rouault.
  * [bpo-16133](https://bugs.python.org/issue?@action=redirect&bpo=16133): The asynchat.async_chat.handle_read() method now ignores BlockingIOError exceptions.
  * [bpo-22044](https://bugs.python.org/issue?@action=redirect&bpo=22044): Fixed premature DECREF in call_tzinfo_method. Patch by Tom Flanagan.
  * [bpo-19884](https://bugs.python.org/issue?@action=redirect&bpo=19884): readline: Disable the meta modifier key if stdout is not a terminal to not write the ANSI sequence `"\033[1034h"` into stdout. This sequence is used on some terminal (ex: TERM=xterm-256color”) to enable support of 8 bit characters.
  * [bpo-4350](https://bugs.python.org/issue?@action=redirect&bpo=4350): Removed a number of out-of-dated and non-working for a long time Tkinter methods.
  * [bpo-6167](https://bugs.python.org/issue?@action=redirect&bpo=6167): Scrollbar.activate() now returns the name of active element if the argument is not specified. Scrollbar.set() now always accepts only 2 arguments.
  * [bpo-15275](https://bugs.python.org/issue?@action=redirect&bpo=15275): Clean up and speed up the ntpath module.
  * [bpo-21888](https://bugs.python.org/issue?@action=redirect&bpo=21888): plistlib’s load() and loads() now work if the fmt parameter is specified.
  * [bpo-22032](https://bugs.python.org/issue?@action=redirect&bpo=22032): __qualname__ instead of __name__ is now always used to format fully qualified class names of Python implemented classes.
  * [bpo-22031](https://bugs.python.org/issue?@action=redirect&bpo=22031): Reprs now always use hexadecimal format with the “0x” prefix when contain an id in form “ at 0x…”.
  * [bpo-22018](https://bugs.python.org/issue?@action=redirect&bpo=22018): signal.set_wakeup_fd() now raises an OSError instead of a ValueError on `fstat()` failure.
  * [bpo-21044](https://bugs.python.org/issue?@action=redirect&bpo=21044): tarfile.open() now handles fileobj with an integer ‘name’ attribute. Based on patch by Antoine Pietri.
  * [bpo-21966](https://bugs.python.org/issue?@action=redirect&bpo=21966): Respect -q command-line option when code module is ran.
  * [bpo-19076](https://bugs.python.org/issue?@action=redirect&bpo=19076): Don’t pass the redundant ‘file’ argument to self.error().
  * [bpo-16382](https://bugs.python.org/issue?@action=redirect&bpo=16382): Improve exception message of warnings.warn() for bad category. Initial patch by Phil Elson.
  * [bpo-21932](https://bugs.python.org/issue?@action=redirect&bpo=21932): os.read() now uses a [`Py_ssize_t()`](https://docs.python.org/3/c-api/intro.html#c.Py_ssize_t "Py_ssize_t") type instead of int for the size to support reading more than 2 GB at once. On Windows, the size is truncated to INT_MAX. As any call to os.read(), the OS may read less bytes than the number of requested bytes.
  * [bpo-21942](https://bugs.python.org/issue?@action=redirect&bpo=21942): Fixed source file viewing in pydoc’s server mode on Windows.
  * [bpo-11259](https://bugs.python.org/issue?@action=redirect&bpo=11259): asynchat.async_chat().set_terminator() now raises a ValueError if the number of received bytes is negative.
  * [bpo-12523](https://bugs.python.org/issue?@action=redirect&bpo=12523): asynchat.async_chat.push() now raises a TypeError if it doesn’t get a bytes string
  * [bpo-21707](https://bugs.python.org/issue?@action=redirect&bpo=21707): Add missing kwonlyargcount argument to ModuleFinder.replace_paths_in_code().
  * [bpo-20639](https://bugs.python.org/issue?@action=redirect&bpo=20639): calling Path.with_suffix(‘’) allows removing the suffix again. Patch by July Tikhonov.
  * [bpo-21714](https://bugs.python.org/issue?@action=redirect&bpo=21714): Disallow the construction of invalid paths using Path.with_name(). Original patch by Antony Lee.
  * [bpo-15014](https://bugs.python.org/issue?@action=redirect&bpo=15014): Added ‘auth’ method to smtplib to make implementing auth mechanisms simpler, and used it internally in the login method.
  * [bpo-21151](https://bugs.python.org/issue?@action=redirect&bpo=21151): Fixed a segfault in the winreg module when `None` is passed as a `REG_BINARY` value to SetValueEx. Patch by John Ehresman.
  * [bpo-21090](https://bugs.python.org/issue?@action=redirect&bpo=21090): io.FileIO.readall() does not ignore I/O errors anymore.