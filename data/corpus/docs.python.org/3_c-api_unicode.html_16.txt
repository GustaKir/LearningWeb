Title: Decoding UTF-16 in Python C API
URL: https://docs.python.org/3/c-api/unicode.html
Summary: This section describes the behavior of the `PyUnicode_DecodeUTF16Stateful` function regarding byte order marks (BOM) during the decoding process. It explains how the function handles BOM based on the `*byteorder` parameter, including settings for when it is zero, -1, or 1, and outlines the behavior when an exception occurs.
---

```

If `*byteorder` is zero, and the first two bytes of the input data are a byte order mark (BOM), the decoder switches to this byte order and the BOM is not copied into the resulting Unicode string. If `*byteorder` is `-1` or `1`, any byte order mark is copied to the output (where it will result in either a `\ufeff` or a `\ufffe` character).
After completion, `*byteorder` is set to the current byte order at the end of input data.
If _byteorder_ is `NULL`, the codec starts in native order mode.
Return `NULL` if an exception was raised by the codec. 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyUnicode_DecodeUTF16Stateful(constchar*str, [Py_ssize_t](https://docs.python.org/3/c-api/intro.html#c.Py_ssize_t "Py_ssize_t")size, constchar*errors, int*byteorder, [Py_ssize_t](https://docs.python.org/3/c-api/intro.html#c.Py_ssize_t "Py_ssize_t")*consumed)[¶](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_DecodeUTF16Stateful "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
If _consumed_ is `NULL`, behave like [`PyUnicode_DecodeUTF16()`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_DecodeUTF16 "PyUnicode_DecodeUTF16"). If _consumed_ is not `NULL`, [`PyUnicode_DecodeUTF16Stateful()`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_DecodeUTF16Stateful "PyUnicode_DecodeUTF16Stateful") will not treat trailing incomplete UTF-16 byte sequences (such as an odd number of bytes or a split surrogate pair) as an error. Those bytes will not be decoded and the number of bytes that have been decoded will be stored in _consumed_. 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyUnicode_AsUTF16String([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*unicode)[¶](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_AsUTF16String "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Return a Python byte string using the UTF-16 encoding in native byte order. The string always starts with a BOM mark. Error handling is “strict”. Return `NULL` if an exception was raised by the codec.
### UTF-7 Codecs[¶](https://docs.python.org/3/c-api/unicode.html#utf-7-codecs "Link to this heading")
These are the UTF-7 codec APIs: 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyUnicode_DecodeUTF7(constchar*str, [Py_ssize_t](https://docs.python.org/3/c-api/intro.html#c.Py_ssize_t "Py_ssize_t")size, constchar*errors)[¶](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_DecodeUTF7 "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Create a Unicode object by decoding _size_ bytes of the UTF-7 encoded string _str_. Return `NULL` if an exception was raised by the codec. 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyUnicode_DecodeUTF7Stateful(constchar*str, [Py_ssize_t](https://docs.python.org/3/c-api/intro.html#c.Py_ssize_t "Py_ssize_t")size, constchar*errors, [Py_ssize_t](https://docs.python.org/3/c-api/intro.html#c.Py_ssize_t "Py_ssize_t")*consumed)[¶](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_DecodeUTF7Stateful "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
If _consumed_ is `NULL`, behave like [`PyUnicode_DecodeUTF7()`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_DecodeUTF7 "PyUnicode_DecodeUTF7"). If _consumed_ is not `NULL`, trailing incomplete UTF-7 base-64 sections will not be treated as an error. Those bytes will not be decoded and the number of bytes that have been decoded will be stored in _consumed_.
### Unicode-Escape Codecs[¶](https://docs.python.org/3/c-api/unicode.html#unicode-escape-codecs "Link to this heading")
These are the “Unicode Escape” codec APIs: 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyUnicode_DecodeUnicodeEscape(constchar*str, [Py_ssize_t](https://docs.python.org/3/c-api/intro.html#c.Py_ssize_t "Py_ssize_t")size, constchar*errors)[¶](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_DecodeUnicodeEscape "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Create a Unicode object by decoding _size_ bytes of the Unicode-Escape encoded string _str_. Return `NULL` if an exception was raised by the codec.