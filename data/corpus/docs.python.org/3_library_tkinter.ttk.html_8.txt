Title: Tkinter Progressbar Methods
URL: https://docs.python.org/3/library/tkinter.ttk.html
Summary: This section covers three methods of the Tkinter Progressbar: `start()` initiates autoincrement mode with a specified interval (default 50 ms), `step()` increments the progress bar's value by a specified amount (default 1.0), and `stop()` cancels the autoincrement process.
---

start(_interval =None_)[¶](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Progressbar.start "Link to this definition")
    
Begin autoincrement mode: schedules a recurring timer event that calls [`Progressbar.step()`](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Progressbar.step "tkinter.ttk.Progressbar.step") every _interval_ milliseconds. If omitted, _interval_ defaults to 50 milliseconds. 

step(_amount =None_)[¶](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Progressbar.step "Link to this definition")
    
Increments the progress bar’s value by _amount_.
_amount_ defaults to 1.0 if omitted. 

stop()[¶](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Progressbar.stop "Link to this definition")
    
Stop autoincrement mode: cancels any recurring timer event initiated by [`Progressbar.start()`](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Progressbar.start "tkinter.ttk.Progressbar.start") for this progress bar.
## Separator[¶](https://docs.python.org/3/library/tkinter.ttk.html#separator "Link to this heading")
The `ttk.Separator` widget displays a horizontal or vertical separator bar.
It has no other methods besides the ones inherited from `ttk.Widget`.
### Options[¶](https://docs.python.org/3/library/tkinter.ttk.html#id6 "Link to this heading")
This widget accepts the following specific option:
Option | Description  
---|---  
orient | One of “horizontal” or “vertical”. Specifies the orientation of the separator.  
## Sizegrip[¶](https://docs.python.org/3/library/tkinter.ttk.html#sizegrip "Link to this heading")
The `ttk.Sizegrip` widget (also known as a grow box) allows the user to resize the containing toplevel window by pressing and dragging the grip.
This widget has neither specific options nor specific methods, besides the ones inherited from `ttk.Widget`.
### Platform-specific notes[¶](https://docs.python.org/3/library/tkinter.ttk.html#platform-specific-notes "Link to this heading")
  * On macOS, toplevel windows automatically include a built-in size grip by default. Adding a `Sizegrip` is harmless, since the built-in grip will just mask the widget.


### Bugs[¶](https://docs.python.org/3/library/tkinter.ttk.html#bugs "Link to this heading")
  * If the containing toplevel’s position was specified relative to the right or bottom of the screen (e.g. ….), the `Sizegrip` widget will not resize the window.
  * This widget supports only “southeast” resizing.