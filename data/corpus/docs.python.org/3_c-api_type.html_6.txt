Title: PyType_FromModuleAndSpec Function
URL: https://docs.python.org/3/c-api/type.html
Summary: The PyType_FromModuleAndSpec function creates a new type object based on a given module and specification. It was introduced in Python 3.9 and updated in subsequent versions to enhance its functionality, including accepting a single class for the bases argument and using metaclasses to correspond with base classes starting from version 3.12.
---

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyType_FromModuleAndSpec([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*module, [PyType_Spec](https://docs.python.org/3/c-api/type.html#c.PyType_Spec "PyType_Spec")*spec, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*bases)[¶](https://docs.python.org/3/c-api/type.html#c.PyType_FromModuleAndSpec "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable) since version 3.10._
Equivalent to `PyType_FromMetaclass(NULL, module, spec, bases)`.
Added in version 3.9.
Changed in version 3.10: The function now accepts a single class as the _bases_ argument and `NULL` as the `tp_doc` slot.
Changed in version 3.12: The function now finds and uses a metaclass corresponding to the provided base classes. Previously, only [`type`](https://docs.python.org/3/library/functions.html#type "type") instances were returned.
The [`tp_new`](https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_new "PyTypeObject.tp_new") of the metaclass is _ignored_. which may result in incomplete initialization. Creating classes whose metaclass overrides [`tp_new`](https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_new "PyTypeObject.tp_new") is deprecated and in Python 3.14+ it will be no longer allowed. 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyType_FromSpecWithBases([PyType_Spec](https://docs.python.org/3/c-api/type.html#c.PyType_Spec "PyType_Spec")*spec, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*bases)[¶](https://docs.python.org/3/c-api/type.html#c.PyType_FromSpecWithBases "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable) since version 3.3._
Equivalent to `PyType_FromMetaclass(NULL, NULL, spec, bases)`.
Added in version 3.3.
Changed in version 3.12: The function now finds and uses a metaclass corresponding to the provided base classes. Previously, only [`type`](https://docs.python.org/3/library/functions.html#type "type") instances were returned.
The [`tp_new`](https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_new "PyTypeObject.tp_new") of the metaclass is _ignored_. which may result in incomplete initialization. Creating classes whose metaclass overrides [`tp_new`](https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_new "PyTypeObject.tp_new") is deprecated and in Python 3.14+ it will be no longer allowed. 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyType_FromSpec([PyType_Spec](https://docs.python.org/3/c-api/type.html#c.PyType_Spec "PyType_Spec")*spec)[¶](https://docs.python.org/3/c-api/type.html#c.PyType_FromSpec "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Equivalent to `PyType_FromMetaclass(NULL, NULL, spec, NULL)`.
Changed in version 3.12: The function now finds and uses a metaclass corresponding to the base classes provided in _Py_tp_base[s]_ slots. Previously, only [`type`](https://docs.python.org/3/library/functions.html#type "type") instances were returned.
The [`tp_new`](https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_new "PyTypeObject.tp_new") of the metaclass is _ignored_. which may result in incomplete initialization. Creating classes whose metaclass overrides [`tp_new`](https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_new "PyTypeObject.tp_new") is deprecated and in Python 3.14+ it will be no longer allowed. 

typePyType_Spec[¶](https://docs.python.org/3/c-api/type.html#c.PyType_Spec "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable) (including all members)._
Structure defining a type’s behavior. 

constchar*name[¶](https://docs.python.org/3/c-api/type.html#c.PyType_Spec.name "Link to this definition")
    
Name of the type, used to set [`PyTypeObject.tp_name`](https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_name "PyTypeObject.tp_name").