Title: Functions in the cmath Module
URL: https://docs.python.org/3/library/cmath.html
Summary: The cmath module provides functions to compute hyperbolic cosine (cmath.cosh), sine (cmath.sinh), and tangent (cmath.tanh) of complex numbers. It also includes classification functions such as cmath.isfinite, which checks if a complex number's parts are finite, and cmath.isinf, which checks for infinite parts.
---

cmath.cosh(_z_)[¶](https://docs.python.org/3/library/cmath.html#cmath.cosh "Link to this definition")
    
Return the hyperbolic cosine of _z_. 

cmath.sinh(_z_)[¶](https://docs.python.org/3/library/cmath.html#cmath.sinh "Link to this definition")
    
Return the hyperbolic sine of _z_. 

cmath.tanh(_z_)[¶](https://docs.python.org/3/library/cmath.html#cmath.tanh "Link to this definition")
    
Return the hyperbolic tangent of _z_.
## Classification functions[¶](https://docs.python.org/3/library/cmath.html#classification-functions "Link to this heading") 

cmath.isfinite(_z_)[¶](https://docs.python.org/3/library/cmath.html#cmath.isfinite "Link to this definition")
    
Return `True` if both the real and imaginary parts of _z_ are finite, and `False` otherwise.
Added in version 3.2. 

cmath.isinf(_z_)[¶](https://docs.python.org/3/library/cmath.html#cmath.isinf "Link to this definition")
    
Return `True` if either the real or the imaginary part of _z_ is an infinity, and `False` otherwise. 

cmath.isnan(_z_)[¶](https://docs.python.org/3/library/cmath.html#cmath.isnan "Link to this definition")
    
Return `True` if either the real or the imaginary part of _z_ is a NaN, and `False` otherwise. 

cmath.isclose(_a_ , _b_ , _*_ , _rel_tol =1e-09_, _abs_tol =0.0_)[¶](https://docs.python.org/3/library/cmath.html#cmath.isclose "Link to this definition")
    
Return `True` if the values _a_ and _b_ are close to each other and `False` otherwise.
Whether or not two values are considered close is determined according to given absolute and relative tolerances. If no errors occur, the result will be: `abs(a-b) <= max(rel_tol * max(abs(a), abs(b)), abs_tol)`.
_rel_tol_ is the relative tolerance – it is the maximum allowed difference between _a_ and _b_ , relative to the larger absolute value of _a_ or _b_. For example, to set a tolerance of 5%, pass `rel_tol=0.05`. The default tolerance is `1e-09`, which assures that the two values are the same within about 9 decimal digits. _rel_tol_ must be nonnegative and less than `1.0`.
_abs_tol_ is the absolute tolerance; it defaults to `0.0` and it must be nonnegative. When comparing `x` to `0.0`, `isclose(x, 0)` is computed as `abs(x) <= rel_tol  * abs(x)`, which is `False` for any `x` and rel_tol less than `1.0`. So add an appropriate positive abs_tol argument to the call.
The IEEE 754 special values of `NaN`, `inf`, and `-inf` will be handled according to IEEE rules. Specifically, `NaN` is not considered close to any other value, including `NaN`. `inf` and `-inf` are only considered close to themselves.
Added in version 3.5.
See also
[**PEP 485**](https://peps.python.org/pep-0485/) – A function for testing approximate equality
## Constants[¶](https://docs.python.org/3/library/cmath.html#constants "Link to this heading") 

cmath.pi[¶](https://docs.python.org/3/library/cmath.html#cmath.pi "Link to this definition")
    
The mathematical constant _π_ , as a float. 

cmath.e[¶](https://docs.python.org/3/library/cmath.html#cmath.e "Link to this definition")
    
The mathematical constant _e_ , as a float. 

cmath.tau[¶](https://docs.python.org/3/library/cmath.html#cmath.tau "Link to this definition")
    
The mathematical constant _τ_ , as a float.
Added in version 3.6. 

cmath.inf[¶](https://docs.python.org/3/library/cmath.html#cmath.inf "Link to this definition")
    
Floating-point positive infinity. Equivalent to `float('inf')`.
Added in version 3.6. 

cmath.infj[¶](https://docs.python.org/3/library/cmath.html#cmath.infj "Link to this definition")
    
Complex number with zero real part and positive infinity imaginary part. Equivalent to `complex(0.0, float('inf'))`.
Added in version 3.6. 

cmath.nan[¶](https://docs.python.org/3/library/cmath.html#cmath.nan "Link to this definition")
    
A floating-point “not a number” (NaN) value. Equivalent to `float('nan')`.
Added in version 3.6.