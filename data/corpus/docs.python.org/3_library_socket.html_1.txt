Title: Socket Families in Python's Socket Module
URL: https://docs.python.org/3/library/socket.html
Summary: The Python socket module supports various socket families based on the system and build options. When creating a socket object, the address format is automatically determined by the specified address family. Examples include the representation of addresses for `AF_UNIX` sockets and Linux’s abstract namespace.
---

Module [`ssl`](https://docs.python.org/3/library/ssl.html#module-ssl "ssl: TLS/SSL wrapper for socket objects")
    
A TLS/SSL wrapper for socket objects.
## Socket families[¶](https://docs.python.org/3/library/socket.html#socket-families "Link to this heading")
Depending on the system and the build options, various socket families are supported by this module.
The address format required by a particular socket object is automatically selected based on the address family specified when the socket object was created. Socket addresses are represented as follows:
  * The address of an [`AF_UNIX`](https://docs.python.org/3/library/socket.html#socket.AF_UNIX "socket.AF_UNIX") socket bound to a file system node is represented as a string, using the file system encoding and the `'surrogateescape'` error handler (see [**PEP 383**](https://peps.python.org/pep-0383/)). An address in Linux’s abstract namespace is returned as a [bytes-like object](https://docs.python.org/3/glossary.html#term-bytes-like-object) with an initial null byte; note that sockets in this namespace can communicate with normal file system sockets, so programs intended to run on Linux may need to deal with both types of address. A string or bytes-like object can be used for either type of address when passing it as an argument.
Changed in version 3.3: Previously, [`AF_UNIX`](https://docs.python.org/3/library/socket.html#socket.AF_UNIX "socket.AF_UNIX") socket paths were assumed to use UTF-8 encoding.
Changed in version 3.5: Writable [bytes-like object](https://docs.python.org/3/glossary.html#term-bytes-like-object) is now accepted.