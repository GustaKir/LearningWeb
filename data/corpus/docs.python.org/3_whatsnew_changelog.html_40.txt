Title: Python 3 Updates: Handling ZIP Comments and Path Functions
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This update improves ZIP comment handling to conform with standards, resolves issues with `inspect.getclosurevars()` misclassifications, changes `posixpath.realpath()` to raise `NotADirectoryError` in strict mode for non-directory paths with trailing slashes, and ensures `os.path.abspath()` always returns an absolute path on Windows.
---

This also updates handling around ZIP max comment size to match the standard instead of reading comments that are one byte too long.
  * [gh-70764](https://github.com/python/cpython/issues/70764): Fixed an issue where [`inspect.getclosurevars()`](https://docs.python.org/3/library/inspect.html#inspect.getclosurevars "inspect.getclosurevars") would incorrectly classify an attribute name as a global variable when the name exists both as an attribute name and a global variable.
  * [gh-118289](https://github.com/python/cpython/issues/118289): `posixpath.realpath()` now raises [`NotADirectoryError`](https://docs.python.org/3/library/exceptions.html#NotADirectoryError "NotADirectoryError") when _strict_ mode is enabled and a non-directory path with a trailing slash is supplied.
  * [gh-119826](https://github.com/python/cpython/issues/119826): Always return an absolute path for [`os.path.abspath()`](https://docs.python.org/3/library/os.path.html#os.path.abspath "os.path.abspath") on Windows.
  * [gh-117766](https://github.com/python/cpython/issues/117766): Always use [`str()`](https://docs.python.org/3/library/stdtypes.html#str "str") to print `choices` in [`argparse`](https://docs.python.org/3/library/argparse.html#module-argparse "argparse: Command-line option and argument parsing library.").
  * [gh-101955](https://github.com/python/cpython/issues/101955): Fix SystemError when match regular expression pattern containing some combination of possessive quantifier, alternative and capture group.
  * [gh-88110](https://github.com/python/cpython/issues/88110): Fixed [`multiprocessing.Process`](https://docs.python.org/3/library/multiprocessing.html#multiprocessing.Process "multiprocessing.Process") reporting a `.exitcode` of 1 even on success when using the `"fork"` start method while using a [`concurrent.futures.ThreadPoolExecutor`](https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.ThreadPoolExecutor "concurrent.futures.ThreadPoolExecutor").
  * [gh-71936](https://github.com/python/cpython/issues/71936): Fix a race condition in [`multiprocessing.pool.Pool`](https://docs.python.org/3/library/multiprocessing.html#multiprocessing.pool.Pool "multiprocessing.pool.Pool").
  * [bpo-46128](https://bugs.python.org/issue?@action=redirect&bpo=46128): Strip [`unittest.IsolatedAsyncioTestCase`](https://docs.python.org/3/library/unittest.html#unittest.IsolatedAsyncioTestCase "unittest.IsolatedAsyncioTestCase") stack frames from reported stacktraces.
  * [bpo-14074](https://bugs.python.org/issue?@action=redirect&bpo=14074): Fix [`argparse`](https://docs.python.org/3/library/argparse.html#module-argparse "argparse: Command-line option and argument parsing library.") metavar processing to allow positional arguments to have a tuple metavar.


### IDLE[Â¶](https://docs.python.org/3/whatsnew/changelog.html#id23 "Link to this heading")
  * [gh-122392](https://github.com/python/cpython/issues/122392): Increase currently inadequate vertical spacing for the IDLE browsers (path, module, and stack) on high-resolution monitors.