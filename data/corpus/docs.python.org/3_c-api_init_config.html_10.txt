Title: Python C API: Configuration Parameters
URL: https://docs.python.org/3/c-api/init_config.html
Summary: This section defines key configuration parameters in the Python C API, including `exec_prefix`, which indicates the site-specific directory for platform-dependent Python files, and `executable`, which provides the absolute path of the Python interpreter binary. Both parameters are crucial for Python Path Configuration.
---

wchar_t*exec_prefix[¶](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.exec_prefix "Link to this definition")
    
The site-specific directory prefix where the platform-dependent Python files are installed: [`sys.exec_prefix`](https://docs.python.org/3/library/sys.html#sys.exec_prefix "sys.exec_prefix").
Default: `NULL`.
Part of the [Python Path Configuration](https://docs.python.org/3/c-api/init_config.html#init-path-config) output.
See also [`PyConfig.base_exec_prefix`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.base_exec_prefix "PyConfig.base_exec_prefix"). 

wchar_t*executable[¶](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.executable "Link to this definition")
    
The absolute path of the executable binary for the Python interpreter: [`sys.executable`](https://docs.python.org/3/library/sys.html#sys.executable "sys.executable").
Default: `NULL`.
Part of the [Python Path Configuration](https://docs.python.org/3/c-api/init_config.html#init-path-config) output.
See also [`PyConfig.base_executable`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.base_executable "PyConfig.base_executable"). 

intfaulthandler[¶](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.faulthandler "Link to this definition")
    
Enable faulthandler?
If non-zero, call [`faulthandler.enable()`](https://docs.python.org/3/library/faulthandler.html#faulthandler.enable "faulthandler.enable") at startup.
Set to `1` by [`-X faulthandler`](https://docs.python.org/3/using/cmdline.html#cmdoption-X) and the [`PYTHONFAULTHANDLER`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONFAULTHANDLER) environment variable.
Default: `-1` in Python mode, `0` in isolated mode. 

wchar_t*filesystem_encoding[¶](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.filesystem_encoding "Link to this definition")
    
[Filesystem encoding](https://docs.python.org/3/glossary.html#term-filesystem-encoding-and-error-handler): [`sys.getfilesystemencoding()`](https://docs.python.org/3/library/sys.html#sys.getfilesystemencoding "sys.getfilesystemencoding").
On macOS, Android and VxWorks: use `"utf-8"` by default.
On Windows: use `"utf-8"` by default, or `"mbcs"` if [`legacy_windows_fs_encoding`](https://docs.python.org/3/c-api/init_config.html#c.PyPreConfig.legacy_windows_fs_encoding "PyPreConfig.legacy_windows_fs_encoding") of [`PyPreConfig`](https://docs.python.org/3/c-api/init_config.html#c.PyPreConfig "PyPreConfig") is non-zero.
Default encoding on other platforms:
  * `"utf-8"` if [`PyPreConfig.utf8_mode`](https://docs.python.org/3/c-api/init_config.html#c.PyPreConfig.utf8_mode "PyPreConfig.utf8_mode") is non-zero.
  * `"ascii"` if Python detects that `nl_langinfo(CODESET)` announces the ASCII encoding, whereas the `mbstowcs()` function decodes from a different encoding (usually Latin1).
  * `"utf-8"` if `nl_langinfo(CODESET)` returns an empty string.
  * Otherwise, use the [locale encoding](https://docs.python.org/3/glossary.html#term-locale-encoding): `nl_langinfo(CODESET)` result.


At Python startup, the encoding name is normalized to the Python codec name. For example, `"ANSI_X3.4-1968"` is replaced with `"ascii"`.
See also the [`filesystem_errors`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.filesystem_errors "PyConfig.filesystem_errors") member. 

wchar_t*filesystem_errors[¶](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.filesystem_errors "Link to this definition")
    
[Filesystem error handler](https://docs.python.org/3/glossary.html#term-filesystem-encoding-and-error-handler): [`sys.getfilesystemencodeerrors()`](https://docs.python.org/3/library/sys.html#sys.getfilesystemencodeerrors "sys.getfilesystemencodeerrors").
On Windows: use `"surrogatepass"` by default, or `"replace"` if [`legacy_windows_fs_encoding`](https://docs.python.org/3/c-api/init_config.html#c.PyPreConfig.legacy_windows_fs_encoding "PyPreConfig.legacy_windows_fs_encoding") of [`PyPreConfig`](https://docs.python.org/3/c-api/init_config.html#c.PyPreConfig "PyPreConfig") is non-zero.
On other platforms: use `"surrogateescape"` by default.
Supported error handlers:
  * `"strict"`
  * `"surrogateescape"`
  * `"surrogatepass"` (only supported with the UTF-8 encoding)


See also the [`filesystem_encoding`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.filesystem_encoding "PyConfig.filesystem_encoding") member. 

unsignedlonghash_seed[¶](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.hash_seed "Link to this definition")