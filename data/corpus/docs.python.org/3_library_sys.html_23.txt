Title: Stack Profiler Trampoline Functions in sys Module
URL: https://docs.python.org/3/library/sys.html
Summary: The sys module provides functions to manage the stack profiler trampoline. The 'activate_stack_trampoline' function activates the 'perf' backend, while 'deactivate_stack_trampoline' deactivates it. The 'is_stack_trampoline_active' function checks if a stack profiler is currently active. These features are available on Linux starting from Python version 3.12.
---

sys.activate_stack_trampoline(_backend_ , _/_)[¶](https://docs.python.org/3/library/sys.html#sys.activate_stack_trampoline "Link to this definition")
    
Activate the stack profiler trampoline _backend_. The only supported backend is `"perf"`.
[Availability](https://docs.python.org/3/library/intro.html#availability): Linux.
Added in version 3.12.
See also
  * [Python support for the Linux perf profiler](https://docs.python.org/3/howto/perf_profiling.html#perf-profiling)
  * <https://perf.wiki.kernel.org>



sys.deactivate_stack_trampoline()[¶](https://docs.python.org/3/library/sys.html#sys.deactivate_stack_trampoline "Link to this definition")
    
Deactivate the current stack profiler trampoline backend.
If no stack profiler is activated, this function has no effect.
[Availability](https://docs.python.org/3/library/intro.html#availability): Linux.
Added in version 3.12. 

sys.is_stack_trampoline_active()[¶](https://docs.python.org/3/library/sys.html#sys.is_stack_trampoline_active "Link to this definition")
    
Return `True` if a stack profiler trampoline is active.
[Availability](https://docs.python.org/3/library/intro.html#availability): Linux.
Added in version 3.12. 

sys._enablelegacywindowsfsencoding()[¶](https://docs.python.org/3/library/sys.html#sys._enablelegacywindowsfsencoding "Link to this definition")
    
Changes the [filesystem encoding and error handler](https://docs.python.org/3/glossary.html#term-filesystem-encoding-and-error-handler) to ‘mbcs’ and ‘replace’ respectively, for consistency with versions of Python prior to 3.6.
This is equivalent to defining the [`PYTHONLEGACYWINDOWSFSENCODING`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONLEGACYWINDOWSFSENCODING) environment variable before launching Python.
See also [`sys.getfilesystemencoding()`](https://docs.python.org/3/library/sys.html#sys.getfilesystemencoding "sys.getfilesystemencoding") and [`sys.getfilesystemencodeerrors()`](https://docs.python.org/3/library/sys.html#sys.getfilesystemencodeerrors "sys.getfilesystemencodeerrors").
[Availability](https://docs.python.org/3/library/intro.html#availability): Windows.
Note
Changing the filesystem encoding after Python startup is risky because the old fsencoding or paths encoded by the old fsencoding may be cached somewhere. Use [`PYTHONLEGACYWINDOWSFSENCODING`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONLEGACYWINDOWSFSENCODING) instead.
Added in version 3.6: See [**PEP 529**](https://peps.python.org/pep-0529/) for more details.
Deprecated since version 3.13, will be removed in version 3.16: Use [`PYTHONLEGACYWINDOWSFSENCODING`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONLEGACYWINDOWSFSENCODING) instead. 

sys.stdin[¶](https://docs.python.org/3/library/sys.html#sys.stdin "Link to this definition")


sys.stdout[¶](https://docs.python.org/3/library/sys.html#sys.stdout "Link to this definition")


sys.stderr[¶](https://docs.python.org/3/library/sys.html#sys.stderr "Link to this definition")
    
[File objects](https://docs.python.org/3/glossary.html#term-file-object) used by the interpreter for standard input, output and errors:
  * `stdin` is used for all interactive input (including calls to [`input()`](https://docs.python.org/3/library/functions.html#input "input"));
  * `stdout` is used for the output of [`print()`](https://docs.python.org/3/library/functions.html#print "print") and [expression](https://docs.python.org/3/glossary.html#term-expression) statements and for the prompts of [`input()`](https://docs.python.org/3/library/functions.html#input "input");
  * The interpreter’s own prompts and its error messages go to `stderr`.