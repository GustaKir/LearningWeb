Title: PyUnicode_EncodeLocale Function
URL: https://docs.python.org/3/c-api/unicode.html
Summary: The PyUnicode_EncodeLocale function encodes a Unicode object to UTF-8 on specific platforms or to the current locale encoding on others. It supports 'strict' and 'surrogateescape' error handlers, defaulting to 'strict' if errors are not specified. The function returns a bytes object, with a restriction that the unicode object must not contain embedded null characters.
---

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyUnicode_EncodeLocale([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*unicode, constchar*errors)[¶](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_EncodeLocale "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable) since version 3.7._
Encode a Unicode object to UTF-8 on Android and VxWorks, or to the current locale encoding on other platforms. The supported error handlers are `"strict"` and `"surrogateescape"` ([**PEP 383**](https://peps.python.org/pep-0383/)). The encoder uses `"strict"` error handler if _errors_ is `NULL`. Return a [`bytes`](https://docs.python.org/3/library/stdtypes.html#bytes "bytes") object. _unicode_ cannot contain embedded null characters.
Use [`PyUnicode_EncodeFSDefault()`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_EncodeFSDefault "PyUnicode_EncodeFSDefault") to encode a string to the [filesystem encoding and error handler](https://docs.python.org/3/glossary.html#term-filesystem-encoding-and-error-handler).
This function ignores the [Python UTF-8 Mode](https://docs.python.org/3/library/os.html#utf8-mode).
See also
The [`Py_EncodeLocale()`](https://docs.python.org/3/c-api/sys.html#c.Py_EncodeLocale "Py_EncodeLocale") function.
Added in version 3.3.
Changed in version 3.7: The function now also uses the current locale encoding for the `surrogateescape` error handler, except on Android. Previously, [`Py_EncodeLocale()`](https://docs.python.org/3/c-api/sys.html#c.Py_EncodeLocale "Py_EncodeLocale") was used for the `surrogateescape`, and the current locale encoding was used for `strict`.
### File System Encoding[¶](https://docs.python.org/3/c-api/unicode.html#file-system-encoding "Link to this heading")
Functions encoding to and decoding from the [filesystem encoding and error handler](https://docs.python.org/3/glossary.html#term-filesystem-encoding-and-error-handler) ([**PEP 383**](https://peps.python.org/pep-0383/) and [**PEP 529**](https://peps.python.org/pep-0529/)).
To encode file names to [`bytes`](https://docs.python.org/3/library/stdtypes.html#bytes "bytes") during argument parsing, the `"O&"` converter should be used, passing `PyUnicode_FSConverter()` as the conversion function: 

intPyUnicode_FSConverter([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*obj, void*result)[¶](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_FSConverter "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
[PyArg_Parse* converter](https://docs.python.org/3/c-api/arg.html#arg-parsing): encode [`str`](https://docs.python.org/3/library/stdtypes.html#str "str") objects – obtained directly or through the [`os.PathLike`](https://docs.python.org/3/library/os.html#os.PathLike "os.PathLike") interface – to [`bytes`](https://docs.python.org/3/library/stdtypes.html#bytes "bytes") using [`PyUnicode_EncodeFSDefault()`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_EncodeFSDefault "PyUnicode_EncodeFSDefault"); [`bytes`](https://docs.python.org/3/library/stdtypes.html#bytes "bytes") objects are output as-is. _result_ must be an address of a C variable of type [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")* (or [PyBytesObject](https://docs.python.org/3/c-api/bytes.html#c.PyBytesObject "PyBytesObject")*). On success, set the variable to a new [strong reference](https://docs.python.org/3/glossary.html#term-strong-reference) to a [bytes object](https://docs.python.org/3/c-api/bytes.html#bytesobjects) which must be released when it is no longer used and return a non-zero value ([`Py_CLEANUP_SUPPORTED`](https://docs.python.org/3/c-api/arg.html#c.Py_CLEANUP_SUPPORTED "Py_CLEANUP_SUPPORTED")). Embedded null bytes are not allowed in the result. On failure, return `0` with an exception set.
If _obj_ is `NULL`, the function releases a strong reference stored in the variable referred by _result_ and returns `1`.
Added in version 3.1.
Changed in version 3.6: Accepts a [path-like object](https://docs.python.org/3/glossary.html#term-path-like-object).
To decode file names to [`str`](https://docs.python.org/3/library/stdtypes.html#str "str") during argument parsing, the `"O&"` converter should be used, passing `PyUnicode_FSDecoder()` as the conversion function: