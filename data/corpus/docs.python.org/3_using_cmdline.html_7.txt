Title: Python Command-Line Options for Implementation-Specific Features
URL: https://docs.python.org/3/using/cmdline.html
Summary: This section outlines the implementation-specific options available in CPython, specifically the `-X` option. It highlights three options: `-X faulthandler` for enabling faulthandler, `-X showrefcount` for outputting reference counts in debug builds, and `-X tracemalloc` for tracing memory allocations.
---

-X[¶](https://docs.python.org/3/using/cmdline.html#cmdoption-X "Link to this definition")
    
Reserved for various implementation-specific options. CPython currently defines the following possible values:
  * `-X faulthandler` to enable [`faulthandler`](https://docs.python.org/3/library/faulthandler.html#module-faulthandler "faulthandler: Dump the Python traceback."). See also [`PYTHONFAULTHANDLER`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONFAULTHANDLER).
Added in version 3.3.
  * `-X showrefcount` to output the total reference count and number of used memory blocks when the program finishes or after each statement in the interactive interpreter. This only works on [debug builds](https://docs.python.org/3/using/configure.html#debug-build).
Added in version 3.4.
  * `-X tracemalloc` to start tracing Python memory allocations using the [`tracemalloc`](https://docs.python.org/3/library/tracemalloc.html#module-tracemalloc "tracemalloc: Trace memory allocations.") module. By default, only the most recent frame is stored in a traceback of a trace. Use `-X tracemalloc=NFRAME` to start tracing with a traceback limit of _NFRAME_ frames. See [`tracemalloc.start()`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.start "tracemalloc.start") and [`PYTHONTRACEMALLOC`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONTRACEMALLOC) for more information.
Added in version 3.4.
  * `-X int_max_str_digits` configures the [integer string conversion length limitation](https://docs.python.org/3/library/stdtypes.html#int-max-str-digits). See also [`PYTHONINTMAXSTRDIGITS`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONINTMAXSTRDIGITS).
Added in version 3.11.
  * `-X importtime` to show how long each import takes. It shows module name, cumulative time (including nested imports) and self time (excluding nested imports). Note that its output may be broken in multi-threaded application. Typical usage is `python3 -X importtime -c 'import asyncio'`. See also [`PYTHONPROFILEIMPORTTIME`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONPROFILEIMPORTTIME).
Added in version 3.7.
  * `-X dev`: enable [Python Development Mode](https://docs.python.org/3/library/devmode.html#devmode), introducing additional runtime checks that are too expensive to be enabled by default. See also [`PYTHONDEVMODE`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONDEVMODE).
Added in version 3.7.
  * `-X utf8` enables the [Python UTF-8 Mode](https://docs.python.org/3/library/os.html#utf8-mode). `-X utf8=0` explicitly disables [Python UTF-8 Mode](https://docs.python.org/3/library/os.html#utf8-mode) (even when it would otherwise activate automatically). See also [`PYTHONUTF8`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONUTF8).
Added in version 3.7.
  * `-X pycache_prefix=PATH` enables writing `.pyc` files to a parallel tree rooted at the given directory instead of to the code tree. See also [`PYTHONPYCACHEPREFIX`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONPYCACHEPREFIX).
Added in version 3.8.
  * `-X warn_default_encoding` issues a [`EncodingWarning`](https://docs.python.org/3/library/exceptions.html#EncodingWarning "EncodingWarning") when the locale-specific default encoding is used for opening files. See also [`PYTHONWARNDEFAULTENCODING`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONWARNDEFAULTENCODING).
Added in version 3.10.
  * `-X no_debug_ranges` disables the inclusion of the tables mapping extra location information (end line, start column offset and end column offset) to every instruction in code objects. This is useful when smaller code objects and pyc files are desired as well as suppressing the extra visual location indicators when the interpreter displays tracebacks. See also [`PYTHONNODEBUGRANGES`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONNODEBUGRANGES).
Added in version 3.11.
  * `-X frozen_modules` determines whether or not frozen modules are ignored by the import machinery. A value of `on` means they get imported and `off` means they are ignored. The default is `on` if this is an installed Python (the normal case). If it’s under development (running from the source tree) then the default is `off`. Note that the `importlib_bootstrap` and `importlib_bootstrap_external` frozen modules are always used, even if this flag is set to `off`. See also [`PYTHON_FROZEN_MODULES`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHON_FROZEN_MODULES).
Added in version 3.11.
  * `-X perf` enables support for the Linux `perf` profiler. When this option is provided, the `perf` profiler will be able to report Python calls. This option is only available on some platforms and will do nothing if is not supported on the current system. The default value is “off”. See also [`PYTHONPERFSUPPORT`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONPERFSUPPORT) and [Python support for the Linux perf profiler](https://docs.python.org/3/ho