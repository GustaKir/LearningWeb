Title: Python Standard Library Changes
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This chunk lists several bugfixes and enhancements made to the Python standard library, including modifications to datetime handling, configparser behavior, email module functionality, multibyte encoding, and improvements to debug logging mechanisms.
---

Patch by Timo Furrer.
  * [bpo-33812](https://bugs.python.org/issue?@action=redirect&bpo=33812): Datetime instance d with non-None tzinfo, but with d.tzinfo.utcoffset(d) returning None is now treated as naive by the astimezone() method.
  * [bpo-32108](https://bugs.python.org/issue?@action=redirect&bpo=32108): In configparser, don’t clear section when it is assigned to itself.
  * [bpo-27397](https://bugs.python.org/issue?@action=redirect&bpo=27397): Make email module properly handle invalid-length base64 strings.
  * [bpo-33578](https://bugs.python.org/issue?@action=redirect&bpo=33578): Implement multibyte encoder/decoder state methods
  * [bpo-30805](https://bugs.python.org/issue?@action=redirect&bpo=30805): Avoid race condition with debug logging
  * [bpo-33476](https://bugs.python.org/issue?@action=redirect&bpo=33476): Fix _header_value_parser.py when address group is missing final ‘;’. Contributed by Enrique Perez-Terron
  * [bpo-33694](https://bugs.python.org/issue?@action=redirect&bpo=33694): asyncio: Fix a race condition causing data loss on pause_reading()/resume_reading() when using the ProactorEventLoop.
  * [bpo-32493](https://bugs.python.org/issue?@action=redirect&bpo=32493): Correct test for `uuid_enc_be` availability in `configure.ac`. Patch by Michael Felt.
  * [bpo-33792](https://bugs.python.org/issue?@action=redirect&bpo=33792): Add asyncio.WindowsSelectorEventLoopPolicy and asyncio.WindowsProactorEventLoopPolicy.
  * [bpo-33274](https://bugs.python.org/issue?@action=redirect&bpo=33274): W3C DOM Level 1 specifies return value of Element.removeAttributeNode() as “The Attr node that was removed.” xml.dom.minidom now complies with this requirement.
  * [bpo-33778](https://bugs.python.org/issue?@action=redirect&bpo=33778): Update `unicodedata`’s database to Unicode version 11.0.0.
  * [bpo-33165](https://bugs.python.org/issue?@action=redirect&bpo=33165): Added a stacklevel parameter to logging calls to allow use of wrapper/helper functions for logging APIs.
  * [bpo-33770](https://bugs.python.org/issue?@action=redirect&bpo=33770): improve base64 exception message for encoded inputs of invalid length
  * [bpo-33769](https://bugs.python.org/issue?@action=redirect&bpo=33769): asyncio/start_tls: Fix error message; cancel callbacks in case of an unhandled error; mark SSLTransport as closed if it is aborted.
  * [bpo-33767](https://bugs.python.org/issue?@action=redirect&bpo=33767): The concatenation (`+`) and repetition (`*`) sequence operations now raise [`TypeError`](https://docs.python.org/3/library/exceptions.html#TypeError "TypeError") instead of [`SystemError`](https://docs.python.org/3/library/exceptions.html#SystemError "SystemError") when performed on [`mmap.mmap`](https://docs.python.org/3/library/mmap.html#mmap.mmap "mmap.mmap") objects. Patch by Zackery Spytz.
  * [bpo-33734](https://bugs.python.org/issue?@action=redirect&bpo=33734): asyncio/ssl: Fix AttributeError, increase default handshake timeout
  * [bpo-31014](https://bugs.python.org/issue?@action=redirect&bpo=31014): Fixed creating a controller for [`webbrowser`](https://docs.python.org/3/library/webbrowser.html#module-webbrowser "webbrowser: Easy-to-use controller for web browsers.") when a user specifies a path to an entry in the BROWSER environment variable. Based on patch by John Still.
  * [bpo-2504](https://bugs.python.org/issue?@action=redirect&bpo=2504): Add gettext.pgettext() and variants.
  * [bpo-33197](https://bugs.python.org/issue?@action=redirect&bpo=33197): Add description property for _ParameterKind
  * [bpo-32751](https://bugs.python.org/issue?@action=redirect&bpo=32751): When cancelling the task due to a timeout, [`asyncio.wait_for()`](https://docs.python.org/3/library/asyncio-task.html#asyncio.wait_for "asyncio.wait_for") will now wait until the cancellation is complete.
  * [bpo-32684](https://bugs.python.org/issue?@action=redirect&bpo=32684): Fix gather to propagate cancellation of itself even with return_exceptions.
  * [bpo-33654](https://bugs.python.org/issue?@action=redirect&bpo=33654): Support protocol type switching in SSLTransport.set_protocol().
  * [bpo-33674](https://bugs.python.org/issue?@action=redirect&bpo=33674): Pause the transport as early as possible to further reduce the risk of data_received() being called before connection_made().
  * [bpo-33671](https://bugs.python.org/issue?@action=redirect&bpo=33671): [`shutil.copyfile()`](https://docs.python.org/3/library/shutil.html#shutil.copyfile "shutil.copyfile"), [`shutil.copy()`](https://docs.python.org/3/library/shutil.html#shutil.copy "shutil.copy"), [`shutil.copy2()`](https://docs.python.org/3/library/shutil.html#shutil.copy2 "shutil.copy2"), [`shutil.copytree()`](https://docs.python.org/3/library/shutil.html#shutil.copytree "shutil.copytree") and [`shutil.move()`](https://docs.python.org/3/library/shutil.html#shutil.move "shutil.move") use platform-specific fast-copy syscalls on Linux and macOS in order to copy the file more efficiently.