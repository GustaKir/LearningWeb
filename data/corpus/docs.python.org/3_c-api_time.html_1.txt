Title: Python C API - Time Functions
URL: https://docs.python.org/3/c-api/time.html
Summary: This section details several functions in the Python C API for reading different types of time: `PyTime_Monotonic()` retrieves the monotonic clock time, `PyTime_PerfCounter()` returns the performance counter time, and `PyTime_Time()` provides the wall clock time. Each function references equivalent Python time functions for more details.
---

intPyTime_Monotonic([PyTime_t](https://docs.python.org/3/c-api/time.html#c.PyTime_t "PyTime_t")*result)[¶](https://docs.python.org/3/c-api/time.html#c.PyTime_Monotonic "Link to this definition")
    
Read the monotonic clock. See [`time.monotonic()`](https://docs.python.org/3/library/time.html#time.monotonic "time.monotonic") for important details on this clock. 

intPyTime_PerfCounter([PyTime_t](https://docs.python.org/3/c-api/time.html#c.PyTime_t "PyTime_t")*result)[¶](https://docs.python.org/3/c-api/time.html#c.PyTime_PerfCounter "Link to this definition")
    
Read the performance counter. See [`time.perf_counter()`](https://docs.python.org/3/library/time.html#time.perf_counter "time.perf_counter") for important details on this clock. 

intPyTime_Time([PyTime_t](https://docs.python.org/3/c-api/time.html#c.PyTime_t "PyTime_t")*result)[¶](https://docs.python.org/3/c-api/time.html#c.PyTime_Time "Link to this definition")
    
Read the “wall clock” time. See [`time.time()`](https://docs.python.org/3/library/time.html#time.time "time.time") for details important on this clock.
## Raw Clock Functions[¶](https://docs.python.org/3/c-api/time.html#raw-clock-functions "Link to this heading")
Similar to clock functions, but don’t set an exception on error and don’t require the caller to hold the GIL.
On success, the functions return `0`.
On failure, they set `*result` to `0` and return `-1`, _without_ setting an exception. To get the cause of the error, acquire the GIL and call the regular (non-`Raw`) function. Note that the regular function may succeed after the `Raw` one failed. 

intPyTime_MonotonicRaw([PyTime_t](https://docs.python.org/3/c-api/time.html#c.PyTime_t "PyTime_t")*result)[¶](https://docs.python.org/3/c-api/time.html#c.PyTime_MonotonicRaw "Link to this definition")
    
Similar to [`PyTime_Monotonic()`](https://docs.python.org/3/c-api/time.html#c.PyTime_Monotonic "PyTime_Monotonic"), but don’t set an exception on error and don’t require holding the GIL. 

intPyTime_PerfCounterRaw([PyTime_t](https://docs.python.org/3/c-api/time.html#c.PyTime_t "PyTime_t")*result)[¶](https://docs.python.org/3/c-api/time.html#c.PyTime_PerfCounterRaw "Link to this definition")
    
Similar to [`PyTime_PerfCounter()`](https://docs.python.org/3/c-api/time.html#c.PyTime_PerfCounter "PyTime_PerfCounter"), but don’t set an exception on error and don’t require holding the GIL. 

intPyTime_TimeRaw([PyTime_t](https://docs.python.org/3/c-api/time.html#c.PyTime_t "PyTime_t")*result)[¶](https://docs.python.org/3/c-api/time.html#c.PyTime_TimeRaw "Link to this definition")
    
Similar to [`PyTime_Time()`](https://docs.python.org/3/c-api/time.html#c.PyTime_Time "PyTime_Time"), but don’t set an exception on error and don’t require holding the GIL.
## Conversion functions[¶](https://docs.python.org/3/c-api/time.html#conversion-functions "Link to this heading") 

doublePyTime_AsSecondsDouble([PyTime_t](https://docs.python.org/3/c-api/time.html#c.PyTime_t "PyTime_t")t)[¶](https://docs.python.org/3/c-api/time.html#c.PyTime_AsSecondsDouble "Link to this definition")
    
Convert a timestamp to a number of seconds as a C double.
The function cannot fail, but note that double has limited accuracy for large values.
### [Table of Contents](https://docs.python.org/3/contents.html)
  * [PyTime C API](https://docs.python.org/3/c-api/time.html)
    * [Types](https://docs.python.org/3/c-api/time.html#types)
    * [Clock Functions](https://docs.python.org/3/c-api/time.html#clock-functions)
    * [Raw Clock Functions](https://docs.python.org/3/c-api/time.html#raw-clock-functions)
    * [Conversion functions](https://docs.python.org/3/c-api/time.html#conversion-functions)


#### Previous topic
[Codec registry and support functions](https://docs.python.org/3/c-api/codec.html "previous chapter")
#### Next topic
[Support for Perf Maps](https://docs.python.org/3/c-api/perfmaps.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/c-api/time.rst)