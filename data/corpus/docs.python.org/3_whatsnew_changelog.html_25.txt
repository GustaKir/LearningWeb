Title: Library Changes in Python
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: Recent updates to Python's library include enhanced error handling for `ctypes` callbacks, which now utilizes `sys.unraisablehook()` for unlikely argument preparation errors. Additionally, `ValueError` messages for `asyncio.Barrier` have been corrected.
---

### Library[¶](https://docs.python.org/3/whatsnew/changelog.html#id12 "Link to this heading")
  * [gh-129502](https://github.com/python/cpython/issues/129502): Unlikely errors in preparing arguments for [`ctypes`](https://docs.python.org/3/library/ctypes.html#module-ctypes "ctypes: A foreign function library for Python.") callback are now handled in the same way as errors raised in the callback of in converting the result of the callback – using [`sys.unraisablehook()`](https://docs.python.org/3/library/sys.html#sys.unraisablehook "sys.unraisablehook") instead of [`sys.excepthook()`](https://docs.python.org/3/library/sys.html#sys.excepthook "sys.excepthook") and not setting [`sys.last_exc`](https://docs.python.org/3/library/sys.html#sys.last_exc "sys.last_exc") and other variables.
  * [gh-129403](https://github.com/python/cpython/issues/129403): Corrected [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError "ValueError") message for [`asyncio.Barrier`](https://docs.python.org/3/library/asyncio-sync.html#asyncio.Barrier "asyncio.Barrier") and [`threading.Barrier`](https://docs.python.org/3/library/threading.html#threading.Barrier "threading.Barrier").
  * [gh-129409](https://github.com/python/cpython/issues/129409): Fix an integer overflow in the [`csv`](https://docs.python.org/3/library/csv.html#module-csv "csv: Write and read tabular data to and from delimited files.") module when writing a data field larger than 2GB.
  * [gh-118761](https://github.com/python/cpython/issues/118761): Improve import time of [`subprocess`](https://docs.python.org/3/library/subprocess.html#module-subprocess "subprocess: Subprocess management.") by lazy importing `locale` and `signal`. Patch by Taneli Hukkinen.
  * [gh-129346](https://github.com/python/cpython/issues/129346): In [`sqlite3`](https://docs.python.org/3/library/sqlite3.html#module-sqlite3 "sqlite3: A DB-API 2.0 implementation using SQLite 3.x."), handle out-of-memory when creating user-defined SQL functions.
  * [gh-129061](https://github.com/python/cpython/issues/129061): Fix FORCE_COLOR and NO_COLOR when empty strings. Patch by Hugo van Kemenade.
  * [gh-128550](https://github.com/python/cpython/issues/128550): Removed an incorrect optimization relating to eager tasks in [`asyncio.TaskGroup`](https://docs.python.org/3/library/asyncio-task.html#asyncio.TaskGroup "asyncio.TaskGroup") that resulted in cancellations being missed.
  * [gh-128991](https://github.com/python/cpython/issues/128991): Release the enter frame reference within [`bdb`](https://docs.python.org/3/library/bdb.html#module-bdb "bdb: Debugger framework.") callback
  * [gh-128978](https://github.com/python/cpython/issues/128978): Fix a [`NameError`](https://docs.python.org/3/library/exceptions.html#NameError "NameError") in `sysconfig.expand_makefile_vars()`. Patch by Bénédikt Tran.
  * [gh-128961](https://github.com/python/cpython/issues/128961): Fix a crash when setting state on an exhausted [`array.array`](https://docs.python.org/3/library/array.html#array.array "array.array") iterator.
  * [gh-128894](https://github.com/python/cpython/issues/128894): Fix `traceback.TracebackException._format_syntax_error` not to fail on exceptions with custom metadata.
  * [gh-128916](https://github.com/python/cpython/issues/128916): Do not attempt to set `SO_REUSEPORT` on sockets of address families other than `AF_INET` and `AF_INET6`, as it is meaningless with these address families, and the call with fail with Linux kernel 6.12.9 and newer.
  * [gh-128679](https://github.com/python/cpython/issues/128679): Fix [`tracemalloc.stop()`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.stop "tracemalloc.stop") race condition. Fix [`tracemalloc`](https://docs.python.org/3/library/tracemalloc.html#module-tracemalloc "tracemalloc: Trace memory allocations.") to support calling [`tracemalloc.stop()`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.stop "tracemalloc.stop") in one thread, while another thread is tracing memory allocations. Patch by Victor Stinner.
  * [gh-128636](https://github.com/python/cpython/issues/128636): Fix PyREPL failure when [`os.environ`](https://docs.python.org/3/library/os.html#os.environ "os.environ") is overwritten with an invalid value.
  * [gh-128562](https://github.com/python/cpython/issues/128562): Fix possible conflicts in generated [`tkinter`](https://docs.python.org/3/library/tkinter.html#module-tkinter "tkinter: Interface to Tcl/Tk for graphical user interfaces") widget names if the widget class name ends with a digit.
  * [gh-128498](https://github.com/python/cpython/issues/128498): Default to stdout isatty for color detection instead of stderr. Patch by Hugo van Kemenade.
  * [gh-128552](https://github.com/python/cpython/issues/128552): Fix cyclic garbage introduced by [`asyncio.loop.create_task()`](https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.loop.create_task "asyncio.loop.create_task") and [`asyncio.Task