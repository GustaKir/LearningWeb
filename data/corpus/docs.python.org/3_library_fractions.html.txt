Title: Fractions Module in Python
URL: https://docs.python.org/3/library/fractions.html
Summary: This section provides an overview of the fractions module in Python, which allows for the creation and manipulation of rational number representations through fractions.
---

[ ![Python logo](https://docs.python.org/3/_static/py.svg) ](https://www.python.org/) dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
Theme  Auto Light Dark
#### Previous topic
[`decimal` — Decimal fixed-point and floating-point arithmetic](https://docs.python.org/3/library/decimal.html "previous chapter")
#### Next topic
[`random` — Generate pseudo-random numbers](https://docs.python.org/3/library/random.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/fractions.rst)


### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/library/random.html "random — Generate pseudo-random numbers") |
  * [previous](https://docs.python.org/3/library/decimal.html "decimal — Decimal fixed-point and floating-point arithmetic") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [The Python Standard Library](https://docs.python.org/3/library/index.html) »
  * [Numeric and Mathematical Modules](https://docs.python.org/3/library/numeric.html) »
  * [`fractions` — Rational numbers](https://docs.python.org/3/library/fractions.html)
  * | 
  * Theme  Auto Light Dark |


# `fractions` — Rational numbers[¶](https://docs.python.org/3/library/fractions.html#module-fractions "Link to this heading")
**Source code:** [Lib/fractions.py](https://github.com/python/cpython/tree/3.13/Lib/fractions.py)
The [`fractions`](https://docs.python.org/3/library/fractions.html#module-fractions "fractions: Rational numbers.") module provides support for rational number arithmetic.
A Fraction instance can be constructed from a pair of integers, from another rational number, or from a string. 

_class_ fractions.Fraction(_numerator =0_, _denominator =1_)[¶](https://docs.python.org/3/library/fractions.html#fractions.Fraction "Link to this definition")


_class_ fractions.Fraction(_other_fraction_)


_class_ fractions.Fraction(_float_)


_class_ fractions.Fraction(_decimal_)


_class_ fractions.Fraction(_string_)
    
The first version requires that _numerator_ and _denominator_ are instances of [`numbers.Rational`](https://docs.python.org/3/library/numbers.html#numbers.Rational "numbers.Rational") and returns a new [`Fraction`](https://docs.python.org/3/library/fractions.html#fractions.Fraction "fractions.Fraction") instance with value `numerator/denominator`. If _denominator_ is `0`, it raises a [`ZeroDivisionError`](https://docs.python.org/3/library/exceptions.html#ZeroDivisionError "ZeroDivisionError"). The second version requires that _other_fraction_ is an instance of [`numbers.Rational`](https://docs.python.org/3/library/numbers.html#numbers.Rational "numbers.Rational") and returns a [`Fraction`](https://docs.python.org/3/library/fractions.html#fractions.Fraction "fractions.Fraction") instance with the same value. The next two versions accept either a [`float`](https://docs.python.org/3/library/functions.html#float "float") or a [`decimal.Decimal`](https://docs.python.org/3/library/decimal.html#decimal.Decimal "decimal.Decimal") instance, and return a [`Fraction`](https://docs.python.org/3/library/fractions.html#fractions.Fraction "fractions.Fraction") instance with exactly the same value. Note that due to the usual issues with binary floating point (see [Floating-Point Arithmetic: Issues and Limitations](https://docs.python.org/3/tutorial/floatingpoint.html#tut-fp-issues)), the argument to `Fraction(1.1)` is not exactly equal to 11/10, and so `Fraction(1.1)` does _not_ return `Fraction(11, 10)` as one might expect. (But see the documentation for the [`limit_denominator()`](https://docs.python.org/3/library/fractions.html#fractions.Fraction.limit_denominator "fractions.Fraction.limit_denominator") method below.) The last version of the constructor expects a string or unicode instance. The usual form for this instance is:
```
[sign] numerator ['/' denominator]