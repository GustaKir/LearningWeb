Title: Python 3.11 New C API Functions
URL: https://docs.python.org/3/whatsnew/3.11.html
Summary: Python 3.11 introduces new functions for packing and unpacking C doubles (`PyFloat_Pack2`, `PyFloat_Pack4`, `PyFloat_Pack8`, `PyFloat_Unpack2`, `PyFloat_Unpack4`, and `PyFloat_Unpack8`). Additionally, functions to retrieve attributes of frame objects have been added. Contributions are credited to Petr Viktorin and Victor Stinner.
---

/structures.html#c.PyCMethod "PyCMethod")). (Contributed by Petr Viktorin in [bpo-46613](https://bugs.python.org/issue?@action=redirect&bpo=46613).)
  * Add new functions to pack and unpack C double (serialize and deserialize): [`PyFloat_Pack2()`](https://docs.python.org/3/c-api/float.html#c.PyFloat_Pack2 "PyFloat_Pack2"), [`PyFloat_Pack4()`](https://docs.python.org/3/c-api/float.html#c.PyFloat_Pack4 "PyFloat_Pack4"), [`PyFloat_Pack8()`](https://docs.python.org/3/c-api/float.html#c.PyFloat_Pack8 "PyFloat_Pack8"), [`PyFloat_Unpack2()`](https://docs.python.org/3/c-api/float.html#c.PyFloat_Unpack2 "PyFloat_Unpack2"), [`PyFloat_Unpack4()`](https://docs.python.org/3/c-api/float.html#c.PyFloat_Unpack4 "PyFloat_Unpack4") and [`PyFloat_Unpack8()`](https://docs.python.org/3/c-api/float.html#c.PyFloat_Unpack8 "PyFloat_Unpack8"). (Contributed by Victor Stinner in [bpo-46906](https://bugs.python.org/issue?@action=redirect&bpo=46906).)
  * Add new functions to get frame object attributes: [`PyFrame_GetBuiltins()`](https://docs.python.org/3/c-api/frame.html#c.PyFrame_GetBuiltins "PyFrame_GetBuiltins"), [`PyFrame_GetGenerator()`](https://docs.python.org/3/c-api/frame.html#c.PyFrame_GetGenerator "PyFrame_GetGenerator"), [`PyFrame_GetGlobals()`](https://docs.python.org/3/c-api/frame.html#c.PyFrame_GetGlobals "PyFrame_GetGlobals"), [`PyFrame_GetLasti()`](https://docs.python.org/3/c-api/frame.html#c.PyFrame_GetLasti "PyFrame_GetLasti").
  * Added two new functions to get and set the active exception instance: [`PyErr_GetHandledException()`](https://docs.python.org/3/c-api/exceptions.html#c.PyErr_GetHandledException "PyErr_GetHandledException") and [`PyErr_SetHandledException()`](https://docs.python.org/3/c-api/exceptions.html#c.PyErr_SetHandledException "PyErr_SetHandledException"). These are alternatives to [`PyErr_SetExcInfo()`](https://docs.python.org/3/c-api/exceptions.html#c.PyErr_SetExcInfo "PyErr_SetExcInfo") and [`PyErr_GetExcInfo()`](https://docs.python.org/3/c-api/exceptions.html#c.PyErr_GetExcInfo "PyErr_GetExcInfo") which work with the legacy 3-tuple representation of exceptions. (Contributed by Irit Katriel in [bpo-46343](https://bugs.python.org/issue?@action=redirect&bpo=46343).)
  * Added the [`PyConfig.safe_path`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.safe_path "PyConfig.safe_path") member. (Contributed by Victor Stinner in [gh-57684](https://github.com/python/cpython/issues/57684).)