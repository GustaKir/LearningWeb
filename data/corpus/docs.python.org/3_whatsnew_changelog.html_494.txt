Title: Python Standard Library Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: Recent patches in Python include the addition of `shlex.join()` in the `shlex` module, modifications to `asyncio.AbstractEventLoop.create_datagram_endpoint()` for improved UDP broadcasting, optimizations in `ThreadPoolExecutor` to utilize idle threads, and enhanced support for bytes and path-like objects in the `subprocess` module.
---

Patch by Ammar Askar.
  * [bpo-22454](https://bugs.python.org/issue?@action=redirect&bpo=22454): The [`shlex`](https://docs.python.org/3/library/shlex.html#module-shlex "shlex: Simple lexical analysis for Unix shell-like languages.") module now exposes [`shlex.join()`](https://docs.python.org/3/library/shlex.html#shlex.join "shlex.join"), the inverse of [`shlex.split()`](https://docs.python.org/3/library/shlex.html#shlex.split "shlex.split"). Patch by Bo Bayles.
  * [bpo-31922](https://bugs.python.org/issue?@action=redirect&bpo=31922): `asyncio.AbstractEventLoop.create_datagram_endpoint()`: Do not connect UDP socket when broadcast is allowed. This allows to receive replies after a UDP broadcast.
  * [bpo-24882](https://bugs.python.org/issue?@action=redirect&bpo=24882): Change ThreadPoolExecutor to use existing idle threads before spinning up new ones.
  * [bpo-31961](https://bugs.python.org/issue?@action=redirect&bpo=31961): Added support for bytes and path-like objects in [`subprocess.Popen()`](https://docs.python.org/3/library/subprocess.html#subprocess.Popen "subprocess.Popen") on Windows. The _args_ parameter now accepts a [path-like object](https://docs.python.org/3/glossary.html#term-path-like-object) if _shell_ is `False` and a sequence containing bytes and path-like objects. The _executable_ parameter now accepts a bytes and [path-like object](https://docs.python.org/3/glossary.html#term-path-like-object). The _cwd_ parameter now accepts a bytes object. Based on patch by Anders Lorentsen.
  * [bpo-33123](https://bugs.python.org/issue?@action=redirect&bpo=33123): [`pathlib.Path.unlink`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.unlink "pathlib.Path.unlink") now accepts a _missing_ok_ parameter to avoid a [`FileNotFoundError`](https://docs.python.org/3/library/exceptions.html#FileNotFoundError "FileNotFoundError") from being raised. Patch by Robert Buchholz.
  * [bpo-32941](https://bugs.python.org/issue?@action=redirect&bpo=32941): Allow [`mmap.mmap`](https://docs.python.org/3/library/mmap.html#mmap.mmap "mmap.mmap") objects to access the madvise() system call (through [`mmap.mmap.madvise()`](https://docs.python.org/3/library/mmap.html#mmap.mmap.madvise "mmap.mmap.madvise")).
  * [bpo-22102](https://bugs.python.org/issue?@action=redirect&bpo=22102): Added support for ZIP files with disks set to 0. Such files are commonly created by builtin tools on Windows when use ZIP64 extension. Patch by Francisco Facioni.
  * [bpo-32515](https://bugs.python.org/issue?@action=redirect&bpo=32515): trace.py can now run modules via python3 -m trace -t â€“module module_name
  * [bpo-32299](https://bugs.python.org/issue?@action=redirect&bpo=32299): Changed [`unittest.mock.patch.dict()`](https://docs.python.org/3/library/unittest.mock.html#unittest.mock.patch.dict "unittest.mock.patch.dict") to return the patched dictionary when used as context manager. Patch by Vadim Tsander.
  * [bpo-27141](https://bugs.python.org/issue?@action=redirect&bpo=27141): Added a `__copy__()` to `collections.UserList` and `collections.UserDict` in order to correctly implement shallow copying of the objects. Patch by Bar Harel.
  * [bpo-31829](https://bugs.python.org/issue?@action=redirect&bpo=31829): `\r`, `\0` and `\x1a` (end-of-file on Windows) are now escaped in protocol 0 pickles of Unicode strings. This allows to load them without loss from files open in text mode in Python 2.
  * [bpo-23395](https://bugs.python.org/issue?@action=redirect&bpo=23395): `_thread.interrupt_main()` now avoids setting the Python error status if the `SIGINT` signal is ignored or not handled by Python.