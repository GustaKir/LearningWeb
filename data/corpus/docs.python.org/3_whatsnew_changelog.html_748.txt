Title: Python Changelog: Compilation and Function Fixes
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This update addresses several issues including a quadratic compilation time problem with 'and' and 'or' operators, crashes in the super() function when used without arguments, flushing of standard streams in the interactive interpreter, potential pointer dereference issues during finalization of cyclic trash, and improvements to PyBytes_Concat() functionality.
---

This also fixes a quadratic compilation time issue noticeable when compiling code with a large number of “and” and “or” operators.
  * [bpo-21418](https://bugs.python.org/issue?@action=redirect&bpo=21418): Fix a crash in the builtin function super() when called without argument and without current frame (ex: embedded Python).
  * [bpo-21425](https://bugs.python.org/issue?@action=redirect&bpo=21425): Fix flushing of standard streams in the interactive interpreter.
  * [bpo-21435](https://bugs.python.org/issue?@action=redirect&bpo=21435): In rare cases, when running finalizers on objects in cyclic trash a bad pointer dereference could occur due to a subtle flaw in internal iteration logic.
  * [bpo-21377](https://bugs.python.org/issue?@action=redirect&bpo=21377): PyBytes_Concat() now tries to concatenate in-place when the first argument has a reference count of 1. Patch by Nikolaus Rath.
  * [bpo-20355](https://bugs.python.org/issue?@action=redirect&bpo=20355): -W command line options now have higher priority than the PYTHONWARNINGS environment variable. Patch by Arfrever.
  * [bpo-21274](https://bugs.python.org/issue?@action=redirect&bpo=21274): Define PATH_MAX for GNU/Hurd in Python/pythonrun.c.
  * [bpo-20904](https://bugs.python.org/issue?@action=redirect&bpo=20904): Support setting FPU precision on m68k.
  * [bpo-21209](https://bugs.python.org/issue?@action=redirect&bpo=21209): Fix sending tuples to custom generator objects with the yield from syntax.
  * [bpo-21193](https://bugs.python.org/issue?@action=redirect&bpo=21193): pow(a, b, c) now raises ValueError rather than TypeError when b is negative. Patch by Josh Rosenberg.
  * [bpo-21176](https://bugs.python.org/issue?@action=redirect&bpo=21176): PEP 465: Add the ‘@’ operator for matrix multiplication.
  * [bpo-21134](https://bugs.python.org/issue?@action=redirect&bpo=21134): Fix segfault when str is called on an uninitialized UnicodeEncodeError, UnicodeDecodeError, or UnicodeTranslateError object.
  * [bpo-19537](https://bugs.python.org/issue?@action=redirect&bpo=19537): Fix PyUnicode_DATA() alignment under m68k. Patch by Andreas Schwab.
  * [bpo-20929](https://bugs.python.org/issue?@action=redirect&bpo=20929): Add a type cast to avoid shifting a negative number.
  * [bpo-20731](https://bugs.python.org/issue?@action=redirect&bpo=20731): Properly position in source code files even if they are opened in text mode. Patch by Serhiy Storchaka.
  * [bpo-20637](https://bugs.python.org/issue?@action=redirect&bpo=20637): Key-sharing now also works for instance dictionaries of subclasses. Patch by Peter Ingebretson.
  * [bpo-8297](https://bugs.python.org/issue?@action=redirect&bpo=8297): Attributes missing from modules now include the module name in the error text. Original patch by ysj.ray.
  * [bpo-19995](https://bugs.python.org/issue?@action=redirect&bpo=19995): %c, %o, %x, and %X now raise TypeError on non-integer input.
  * [bpo-19655](https://bugs.python.org/issue?@action=redirect&bpo=19655): The ASDL parser - used by the build process to generate code for managing the Python AST in C - was rewritten. The new parser is self contained and does not require to carry long the spark.py parser-generator library; spark.py was removed from the source base.
  * [bpo-12546](https://bugs.python.org/issue?@action=redirect&bpo=12546): Allow `\x00` to be used as a fill character when using str, int, float, and complex __format__ methods.
  * [bpo-20480](https://bugs.python.org/issue?@action=redirect&bpo=20480): Add ipaddress.reverse_pointer. Patch by Leon Weber.
  * [bpo-13598](https://bugs.python.org/issue?@action=redirect&bpo=13598): Modify string.Formatter to support auto-numbering of replacement fields. It now matches the behavior of str.format() in this regard. Patches by Phil Elson and Ramchandra Apte.
  * [bpo-8931](https://bugs.python.org/issue?@action=redirect&bpo=8931): Make alternate formatting (‘#’) for type ‘c’ raise an exception. In versions prior to 3.5, ‘#’ with ‘c’ had no effect. Now specifying it is an error. Patch by Torsten Landschoff.
  * [bpo-23165](https://bugs.python.org/issue?@action=redirect&bpo=23165): Perform overflow checks before allocating memory in the _Py_char2wchar function.