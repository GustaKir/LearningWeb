Title: Python 3 Changelog Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: Recent patches have been contributed to improve Python functionality, including speeding up `pathlib.Path.glob()` using `os.DirEntry.path`, enhancing error messages for trailing commas in JSON, and enabling the `subprocess` module to utilize `os.posix_spawn()` with `close_fds=True` on compatible platforms.
---

Patch contributed by Jamie Phan.
  * [gh-113225](https://github.com/python/cpython/issues/113225): Speed up [`pathlib.Path.glob()`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.glob "pathlib.Path.glob") by using [`os.DirEntry.path`](https://docs.python.org/3/library/os.html#os.DirEntry.path "os.DirEntry.path") where possible.
  * [gh-113149](https://github.com/python/cpython/issues/113149): Improve error message when a JSON array or object contains a trailing comma. Patch by Carson Radtke.
  * [gh-113117](https://github.com/python/cpython/issues/113117): The [`subprocess`](https://docs.python.org/3/library/subprocess.html#module-subprocess "subprocess: Subprocess management.") module can now use the [`os.posix_spawn()`](https://docs.python.org/3/library/os.html#os.posix_spawn "os.posix_spawn") function with `close_fds=True` on platforms where `posix_spawn_file_actions_addclosefrom_np` is available. Patch by Jakub Kulik.
  * [gh-113199](https://github.com/python/cpython/issues/113199): Make `http.client.HTTPResponse.read1` and `http.client.HTTPResponse.readline` close IO after reading all data when content length is known. Patch by Illia Volochii.
  * [gh-113191](https://github.com/python/cpython/issues/113191): Add support of [`os.fchmod()`](https://docs.python.org/3/library/os.html#os.fchmod "os.fchmod") and a file descriptor in [`os.chmod()`](https://docs.python.org/3/library/os.html#os.chmod "os.chmod") on Windows.
  * [gh-113188](https://github.com/python/cpython/issues/113188): Fix [`shutil.copymode()`](https://docs.python.org/3/library/shutil.html#shutil.copymode "shutil.copymode") and [`shutil.copystat()`](https://docs.python.org/3/library/shutil.html#shutil.copystat "shutil.copystat") on Windows. Previously they worked differently if _dst_ is a symbolic link: they modified the permission bits of _dst_ itself rather than the file it points to if _follow_symlinks_ is true or _src_ is not a symbolic link, and did not modify the permission bits if _follow_symlinks_ is false and _src_ is a symbolic link.
  * [gh-113119](https://github.com/python/cpython/issues/113119): [`os.posix_spawn()`](https://docs.python.org/3/library/os.html#os.posix_spawn "os.posix_spawn") now accepts `env=None`, which makes the newly spawned process use the current process environment. Patch by Jakub Kulik.
  * [gh-113202](https://github.com/python/cpython/issues/113202): Add a `strict` option to `batched()` in the `itertools` module.
  * [gh-61648](https://github.com/python/cpython/issues/61648): Detect line numbers of properties in doctests.
  * [gh-113175](https://github.com/python/cpython/issues/113175): Sync with importlib_metadata 7.0, including improved type annotations, fixed issue with symlinked packages in `package_distributions`, added `EntryPoints.__repr__`, introduced the `diagnose` script, added `Distribution.origin` property, and removed deprecated `EntryPoint` access by numeric index (tuple behavior).
  * [gh-59616](https://github.com/python/cpython/issues/59616): Add support of [`os.lchmod()`](https://docs.python.org/3/library/os.html#os.lchmod "os.lchmod") and the _follow_symlinks_ argument in [`os.chmod()`](https://docs.python.org/3/library/os.html#os.chmod "os.chmod") on Windows. Note that the default value of _follow_symlinks_ in `os.lchmod()` is `False` on Windows.
  * [gh-112559](https://github.com/python/cpython/issues/112559): [`signal.signal()`](https://docs.python.org/3/library/signal.html#signal.signal "signal.signal") and [`signal.getsignal()`](https://docs.python.org/3/library/signal.html#signal.getsignal "signal.getsignal") no longer call `repr` on callable handlers. [`asyncio.run()`](https://docs.python.org/3/library/asyncio-runner.html#asyncio.run "asyncio.run") and [`asyncio.Runner.run()`](https://docs.python.org/3/library/asyncio-runner.html#asyncio.Runner.run "asyncio.Runner.run") no longer call `repr` on the task results. Patch by Yilei Yang.
  * [gh-112962](https://github.com/python/cpython/issues/112962): [`dis`](https://docs.python.org/3/library/dis.html#module-dis "dis: Disassembler for Python bytecode.") module functions add cache information to the [`Instruction`](https://docs.python.org/3/library/dis.html#dis.Instruction "dis.Instruction") instance rather than creating fake [`Instruction`](https://docs.python.org/3/library/dis.html#dis.Instruction "dis.Instruction") instances to represent the cache entries.
  * [gh-112989](https://github.com/python/cpython/issues/112989): Reduce overhead to connect sockets with [`asyncio`](https://docs.python.org/3/library/asyncio.html#module-asyncio "asyncio: Asynchronous I/O.") SelectorEventLoop.
  * [gh-112970](https://github.com/python/cpython/issues/112970): Use `closefrom()` on Linux where available (e.g. glibc-2.34), rather than only FreeBSD.
  * [gh-110190](https://github.com/python/cpython/issues/110190): Fix ctypes structs with array on PPC64LE platform by setting `MAX_STRUCT_SIZE` to 64 in stgdict.