Title: Python 3.7 Release Notes: Deprecation Warnings and XML Security Updates
URL: https://docs.python.org/3/whatsnew/3.7.html
Summary: Python 3.7 re-enables deprecation warnings by default for single-file scripts and the interactive prompt, following PEP 565. Additionally, enhancements to XML handling are introduced to mitigate risks associated with DTD and external entity retrieval.
---

(Contributed by Nick Coghlan and Victor Stinner in [bpo-20361](https://bugs.python.org/issue?@action=redirect&bpo=20361), [bpo-32043](https://bugs.python.org/issue?@action=redirect&bpo=32043), and [bpo-32230](https://bugs.python.org/issue?@action=redirect&bpo=32230).)
Deprecation warnings are once again shown by default in single-file scripts and at the interactive prompt. See [PEP 565: Show DeprecationWarning in __main__](https://docs.python.org/3/whatsnew/3.7.html#whatsnew37-pep565) for details. (Contributed by Nick Coghlan in [bpo-31975](https://bugs.python.org/issue?@action=redirect&bpo=31975).)
### xml[¶](https://docs.python.org/3/whatsnew/3.7.html#xml "Link to this heading")
As mitigation against DTD and external entity retrieval, the [`xml.dom.minidom`](https://docs.python.org/3/library/xml.dom.minidom.html#module-xml.dom.minidom "xml.dom.minidom: Minimal Document Object Model \(DOM\) implementation.") and [`xml.sax`](https://docs.python.org/3/library/xml.sax.html#module-xml.sax "xml.sax: Package containing SAX2 base classes and convenience functions.") modules no longer process external entities by default. (Contributed by Christian Heimes in [gh-61441](https://github.com/python/cpython/issues/61441).)
### xml.etree[¶](https://docs.python.org/3/whatsnew/3.7.html#xml-etree "Link to this heading")
[ElementPath](https://docs.python.org/3/library/xml.etree.elementtree.html#elementtree-xpath) predicates in the `find()` methods can now compare text of the current node with `[. = "text"]`, not only text in children. Predicates also allow adding spaces for better readability. (Contributed by Stefan Behnel in [bpo-31648](https://bugs.python.org/issue?@action=redirect&bpo=31648).)
### xmlrpc.server[¶](https://docs.python.org/3/whatsnew/3.7.html#xmlrpc-server "Link to this heading")
`SimpleXMLRPCDispatcher.register_function` can now be used as a decorator. (Contributed by Xiang Zhang in [bpo-7769](https://bugs.python.org/issue?@action=redirect&bpo=7769).)
### zipapp[¶](https://docs.python.org/3/whatsnew/3.7.html#zipapp "Link to this heading")
Function [`create_archive()`](https://docs.python.org/3/library/zipapp.html#zipapp.create_archive "zipapp.create_archive") now accepts an optional _filter_ argument to allow the user to select which files should be included in the archive. (Contributed by Irmen de Jong in [bpo-31072](https://bugs.python.org/issue?@action=redirect&bpo=31072).)
Function [`create_archive()`](https://docs.python.org/3/library/zipapp.html#zipapp.create_archive "zipapp.create_archive") now accepts an optional _compressed_ argument to generate a compressed archive. A command line option `--compress` has also been added to support compression. (Contributed by Zhiming Wang in [bpo-31638](https://bugs.python.org/issue?@action=redirect&bpo=31638).)
### zipfile[¶](https://docs.python.org/3/whatsnew/3.7.html#zipfile "Link to this heading")
[`ZipFile`](https://docs.python.org/3/library/zipfile.html#zipfile.ZipFile "zipfile.ZipFile") now accepts the new _compresslevel_ parameter to control the compression level. (Contributed by Bo Bayles in [bpo-21417](https://bugs.python.org/issue?@action=redirect&bpo=21417).)
Subdirectories in archives created by `ZipFile` are now stored in alphabetical order. (Contributed by Bernhard M. Wiedemann in [bpo-30693](https://bugs.python.org/issue?@action=redirect&bpo=30693).)
## C API Changes[¶](https://docs.python.org/3/whatsnew/3.7.html#c-api-changes "Link to this heading")
A new API for thread-local storage has been implemented. See [PEP 539: New C API for Thread-Local Storage](https://docs.python.org/3/whatsnew/3.7.html#whatsnew37-pep539) for an overview and [Thread Specific Storage (TSS) API](https://docs.python.org/3/c-api/init.html#thread-specific-storage-api) for a complete reference. (Contributed by Masayuki Yamamoto in [bpo-25658](https://bugs.python.org/issue?@action=redirect&bpo=25658).)
The new [context variables](https://docs.python.org/3/whatsnew/3.7.html#whatsnew37-pep567) functionality exposes a number of [new C APIs](https://docs.python.org/3/c-api/contextvars.html#contextvarsobjects).
The new [`PyImport_GetModule()`](https://docs.python.org/3/c-api/import.html#c.PyImport_GetModule "PyImport_GetModule") function returns the previously imported module with the given name. (Contributed by Eric Snow in [bpo-28411](https://bugs.python.org/issue?@action=redirect&bpo=28411).)
The new [`Py_RETURN_RICHCOMPARE`](https://docs.python.org/3/c-api/typeobj.html#c.Py_RETURN_RICHCOMPARE "Py_RETURN_RICHCOMPARE") macro eases writing rich comparison functions. (Contributed by Petr Victorin in [bpo-23699](https://bugs.python.org/issue?@action=redirect&bpo=23699).)
The new [`Py_UNREACHABLE`](https://docs.python.org/3/c-api/intro.html#c.Py_UNREACHABLE "Py_UNREACHABLE") macro can be used to mark unreachable code paths. (Contributed by Barry Warsaw in [bpo-31338](https://bugs.python.org/issue?@action=redirect&bpo=31338).)
The [`tracemalloc`](https://docs.python.org/3/library/t