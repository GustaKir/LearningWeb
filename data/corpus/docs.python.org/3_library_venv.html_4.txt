Title: Customizing venv.EnvBuilder Methods
URL: https://docs.python.org/3/library/venv.html
Summary: This section discusses the methods of `venv.EnvBuilder` that can be overridden, specifically `ensure_directories()`, `create_configuration()`, `setup_python()`, `setup_scripts()`, and `post_setup()`. It provides details on the `ensure_directories` method, which creates the environment directory along with any necessary subdirectories.
---

```

Each of the methods [`ensure_directories()`](https://docs.python.org/3/library/venv.html#venv.EnvBuilder.ensure_directories "venv.EnvBuilder.ensure_directories"), [`create_configuration()`](https://docs.python.org/3/library/venv.html#venv.EnvBuilder.create_configuration "venv.EnvBuilder.create_configuration"), [`setup_python()`](https://docs.python.org/3/library/venv.html#venv.EnvBuilder.setup_python "venv.EnvBuilder.setup_python"), [`setup_scripts()`](https://docs.python.org/3/library/venv.html#venv.EnvBuilder.setup_scripts "venv.EnvBuilder.setup_scripts") and [`post_setup()`](https://docs.python.org/3/library/venv.html#venv.EnvBuilder.post_setup "venv.EnvBuilder.post_setup") can be overridden. 

ensure_directories(_env_dir_)[¶](https://docs.python.org/3/library/venv.html#venv.EnvBuilder.ensure_directories "Link to this definition")
    
Creates the environment directory and all necessary subdirectories that don’t already exist, and returns a context object. This context object is just a holder for attributes (such as paths) for use by the other methods. If the [`EnvBuilder`](https://docs.python.org/3/library/venv.html#venv.EnvBuilder "venv.EnvBuilder") is created with the arg `clear=True`, contents of the environment directory will be cleared and then all necessary subdirectories will be recreated.
The returned context object is a [`types.SimpleNamespace`](https://docs.python.org/3/library/types.html#types.SimpleNamespace "types.SimpleNamespace") with the following attributes:
  * `env_dir` - The location of the virtual environment. Used for `__VENV_DIR__` in activation scripts (see [`install_scripts()`](https://docs.python.org/3/library/venv.html#venv.EnvBuilder.install_scripts "venv.EnvBuilder.install_scripts")).
  * `env_name` - The name of the virtual environment. Used for `__VENV_NAME__` in activation scripts (see [`install_scripts()`](https://docs.python.org/3/library/venv.html#venv.EnvBuilder.install_scripts "venv.EnvBuilder.install_scripts")).
  * `prompt` - The prompt to be used by the activation scripts. Used for `__VENV_PROMPT__` in activation scripts (see [`install_scripts()`](https://docs.python.org/3/library/venv.html#venv.EnvBuilder.install_scripts "venv.EnvBuilder.install_scripts")).
  * `executable` - The underlying Python executable used by the virtual environment. This takes into account the case where a virtual environment is created from another virtual environment.
  * `inc_path` - The include path for the virtual environment.
  * `lib_path` - The purelib path for the virtual environment.
  * `bin_path` - The script path for the virtual environment.
  * `bin_name` - The name of the script path relative to the virtual environment location. Used for `__VENV_BIN_NAME__` in activation scripts (see [`install_scripts()`](https://docs.python.org/3/library/venv.html#venv.EnvBuilder.install_scripts "venv.EnvBuilder.install_scripts")).
  * `env_exe` - The name of the Python interpreter in the virtual environment. Used for `__VENV_PYTHON__` in activation scripts (see [`install_scripts()`](https://docs.python.org/3/library/venv.html#venv.EnvBuilder.install_scripts "venv.EnvBuilder.install_scripts")).
  * `env_exec_cmd` - The name of the Python interpreter, taking into account filesystem redirections. This can be used to run Python in the virtual environment.


Changed in version 3.11: The _venv_ [sysconfig installation scheme](https://docs.python.org/3/library/sysconfig.html#installation-paths) is used to construct the paths of the created directories.
Changed in version 3.12: The attribute `lib_path` was added to the context, and the context object was documented. 

create_configuration(_context_)[¶](https://docs.python.org/3/library/venv.html#venv.EnvBuilder.create_configuration "Link to this definition")
    
Creates the `pyvenv.cfg` configuration file in the environment. 

setup_python(_context_)[¶](https://docs.python.org/3/library/venv.html#venv.EnvBuilder.setup_python "Link to this definition")
    
Creates a copy or symlink to the Python executable in the environment. On POSIX systems, if a specific executable `python3.x` was used, symlinks to `python` and `python3` will be created pointing to that executable, unless files with those names already exist. 

setup_scripts(_context_)[¶](https://docs.python.org/3/library/venv.html#venv.EnvBuilder.setup_scripts "Link to this definition")
    
Installs activation scripts appropriate to the platform into the virtual environment. 

upgrade_dependencies(_context_)[¶](https://docs.python.org/3/library/venv.html#venv.EnvBuilder.upgrade_dependencies "Link to this definition")
    
Upgrades the core venv dependency packages (currently [pip](https://pypi.org/project/pip/)) in the environment. This is done by shelling out to the `pip` executable in the environment.
Added in version 3.9.
Changed in version 3.12: [setuptools](https://pypi.org/project/setuptools/) is no longer a core venv dependency.