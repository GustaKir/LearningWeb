Title: IDLE Enhancements and Tools Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section outlines recent improvements to IDLE, including better error checking in the 'Go to Line' feature, automatic clearing of text selections when accessing the context menu, and updates to the status bar. Additional updates include porting python-gdb.py to FreeBSD.
---

### IDLE[¶](https://docs.python.org/3/whatsnew/changelog.html#id396 "Link to this heading")
  * [bpo-27115](https://bugs.python.org/issue?@action=redirect&bpo=27115): For ‘Go to Line’, use a Query box subclass with IDLE standard behavior and improved error checking.
  * [bpo-39885](https://bugs.python.org/issue?@action=redirect&bpo=39885): Since clicking to get an IDLE context menu moves the cursor, any text selection should be and now is cleared.
  * [bpo-39852](https://bugs.python.org/issue?@action=redirect&bpo=39852): Edit “Go to line” now clears any selection, preventing accidental deletion. It also updates Ln and Col on the status bar.
  * [bpo-39781](https://bugs.python.org/issue?@action=redirect&bpo=39781): Selecting code context lines no longer causes a jump.


### Tools/Demos[¶](https://docs.python.org/3/whatsnew/changelog.html#id397 "Link to this heading")
  * [bpo-36184](https://bugs.python.org/issue?@action=redirect&bpo=36184): Port python-gdb.py to FreeBSD. python-gdb.py now checks for “take_gil” function name to check if a frame tries to acquire the GIL, instead of checking for “pthread_cond_timedwait” which is specific to Linux and can be a different condition than the GIL.
  * [bpo-38080](https://bugs.python.org/issue?@action=redirect&bpo=38080): Added support to fix `getproxies` in the `lib2to3.fixes.fix_urllib` module. Patch by José Roberto Meza Cabrera.


### C API[¶](https://docs.python.org/3/whatsnew/changelog.html#id398 "Link to this heading")
  * [bpo-40024](https://bugs.python.org/issue?@action=redirect&bpo=40024): Add [`PyModule_AddType()`](https://docs.python.org/3/c-api/module.html#c.PyModule_AddType "PyModule_AddType") helper function: add a type to a module. Patch by Donghee Na.
  * [bpo-39946](https://bugs.python.org/issue?@action=redirect&bpo=39946): Remove `_PyRuntime.getframe` hook and remove `_PyThreadState_GetFrame` macro which was an alias to `_PyRuntime.getframe`. They were only exposed by the internal C API. Remove also `PyThreadFrameGetter` type.
  * [bpo-39947](https://bugs.python.org/issue?@action=redirect&bpo=39947): Add [`PyThreadState_GetFrame()`](https://docs.python.org/3/c-api/init.html#c.PyThreadState_GetFrame "PyThreadState_GetFrame") function: get the current frame of a Python thread state.
  * [bpo-37207](https://bugs.python.org/issue?@action=redirect&bpo=37207): Add _PyArg_NoKwnames helper function. Patch by Donghee Na.
  * [bpo-39947](https://bugs.python.org/issue?@action=redirect&bpo=39947): Add [`PyThreadState_GetInterpreter()`](https://docs.python.org/3/c-api/init.html#c.PyThreadState_GetInterpreter "PyThreadState_GetInterpreter"): get the interpreter of a Python thread state.
  * [bpo-39947](https://bugs.python.org/issue?@action=redirect&bpo=39947): Add [`PyInterpreterState_Get()`](https://docs.python.org/3/c-api/init.html#c.PyInterpreterState_Get "PyInterpreterState_Get") function to the limited C API.
  * [bpo-35370](https://bugs.python.org/issue?@action=redirect&bpo=35370): If [`PySys_Audit()`](https://docs.python.org/3/c-api/sys.html#c.PySys_Audit "PySys_Audit") fails in [`PyEval_SetProfile()`](https://docs.python.org/3/c-api/init.html#c.PyEval_SetProfile "PyEval_SetProfile") or [`PyEval_SetTrace()`](https://docs.python.org/3/c-api/init.html#c.PyEval_SetTrace "PyEval_SetTrace"), log the error as an unraisable exception.
  * [bpo-39947](https://bugs.python.org/issue?@action=redirect&bpo=39947): Move the static inline function flavor of Py_EnterRecursiveCall() and Py_LeaveRecursiveCall() to the internal C API: they access PyThreadState attributes. The limited C API provides regular functions which hide implementation details.
  * [bpo-39947](https://bugs.python.org/issue?@action=redirect&bpo=39947): Py_TRASHCAN_BEGIN_CONDITION and Py_TRASHCAN_END macro no longer access PyThreadState attributes, but call new private _PyTrash_begin() and _PyTrash_end() functions which hide implementation details.
  * [bpo-39884](https://bugs.python.org/issue?@action=redirect&bpo=39884): [`PyDescr_NewMethod()`](https://docs.python.org/3/c-api/descriptor.html#c.PyDescr_NewMethod "PyDescr_NewMethod") and [`PyCFunction_NewEx()`](https://docs.python.org/3/c-api/structures.html#c.PyCFunction_NewEx "PyCFunction_NewEx") now include the method name in the SystemError “bad call flags” error message to ease debug.
  * [bpo-39877](https://bugs.python.org/issue?@action=redirect&bpo=39877): Deprecated `PyEval_InitThreads()` and `PyEval_ThreadsInitialized()`. Calling `PyEval_InitThreads()` now does nothing.
  * [bpo-38249](https://bugs.python.org/issue?@action=redirect&bpo=38249): [`Py_UNREACHABLE`](https://docs.python.org/3/c-api/intro.html#c.Py_UNREACHABLE "Py_UNREACHABLE") is now implemented with `__builtin_unreachable()` and analogs in release mode.
  * [bpo-38643](https://bugs.python.org/issue?@action=redirect&bpo=38643): [`PyNumber_ToBase()`](https://docs.python.org/3/c-api/number.html#c.PyNumber_ToBase "PyNumber_ToBase") now raises a [`SystemError`](https://docs.python.org/3