Title: UTF-8 Mode in Python on Windows
URL: https://docs.python.org/3/using/windows.html
Summary: Introduced in Python 3.7, UTF-8 mode allows users to change the default text encoding from Windows' legacy ANSI Code Page to UTF-8, which is more widely used. This can be enabled using the `-X utf8` command line option or by setting the `PYTHONUTF8=1` environment variable. This is particularly useful for compatibility with web standards and Unix systems.
---

```

## 4.7. UTF-8 mode[¶](https://docs.python.org/3/using/windows.html#utf-8-mode "Link to this heading")
Added in version 3.7.
Windows still uses legacy encodings for the system encoding (the ANSI Code Page). Python uses it for the default encoding of text files (e.g. [`locale.getencoding()`](https://docs.python.org/3/library/locale.html#locale.getencoding "locale.getencoding")).
This may cause issues because UTF-8 is widely used on the internet and most Unix systems, including WSL (Windows Subsystem for Linux).
You can use the [Python UTF-8 Mode](https://docs.python.org/3/library/os.html#utf8-mode) to change the default text encoding to UTF-8. You can enable the [Python UTF-8 Mode](https://docs.python.org/3/library/os.html#utf8-mode) via the `-X utf8` command line option, or the `PYTHONUTF8=1` environment variable. See [`PYTHONUTF8`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONUTF8) for enabling UTF-8 mode, and [Excursus: Setting environment variables](https://docs.python.org/3/using/windows.html#setting-envvars) for how to modify environment variables.
When the [Python UTF-8 Mode](https://docs.python.org/3/library/os.html#utf8-mode) is enabled, you can still use the system encoding (the ANSI Code Page) via the “mbcs” codec.
Note that adding `PYTHONUTF8=1` to the default environment variables will affect all Python 3.7+ applications on your system. If you have any Python 3.7+ applications which rely on the legacy system encoding, it is recommended to set the environment variable temporarily or use the `-X utf8` command line option.
Note
Even when UTF-8 mode is disabled, Python uses UTF-8 by default on Windows for:
  * Console I/O including standard I/O (see [**PEP 528**](https://peps.python.org/pep-0528/) for details).
  * The [filesystem encoding](https://docs.python.org/3/glossary.html#term-filesystem-encoding-and-error-handler) (see [**PEP 529**](https://peps.python.org/pep-0529/) for details).


## 4.8. Python Launcher for Windows[¶](https://docs.python.org/3/using/windows.html#python-launcher-for-windows "Link to this heading")
Added in version 3.3.
The Python launcher for Windows is a utility which aids in locating and executing of different Python versions. It allows scripts (or the command-line) to indicate a preference for a specific Python version, and will locate and execute that version.
Unlike the `PATH` variable, the launcher will correctly select the most appropriate version of Python. It will prefer per-user installations over system-wide ones, and orders by language version rather than using the most recently installed version.
The launcher was originally specified in [**PEP 397**](https://peps.python.org/pep-0397/).
### 4.8.1. Getting started[¶](https://docs.python.org/3/using/windows.html#getting-started "Link to this heading")
#### 4.8.1.1. From the command-line[¶](https://docs.python.org/3/using/windows.html#from-the-command-line "Link to this heading")
Changed in version 3.6.
System-wide installations of Python 3.3 and later will put the launcher on your `PATH`. The launcher is compatible with all available versions of Python, so it does not matter which version is installed. To check that the launcher is available, execute the following command in Command Prompt:
```
py

```

You should find that the latest version of Python you have installed is started - it can be exited as normal, and any additional command-line arguments specified will be sent directly to Python.
If you have multiple versions of Python installed (e.g., 3.7 and 3.13) you will have noticed that Python 3.13 was started - to launch Python 3.7, try the command:
```
py -3.7

```

If you want the latest version of Python 2 you have installed, try the command:
```
py -2

```

If you see the following error, you do not have the launcher installed:
```
'py' is not recognized as an internal or external command,
operable program or batch file.

```

The command:
```
py --list

```

displays the currently installed version(s) of Python.
The `-x.y` argument is the short form of the `-V:Company/Tag` argument, which allows selecting a specific Python runtime, including those that may have come from somewhere other than python.org. Any runtime registered by following [**PEP 514**](https://peps.python.org/pep-0514/) will be discoverable. The `--list` command lists all available runtimes using the `-V:` format.
When using the `-V:` argument, specifying the Company will limit selection to runtimes from that provider, while specifying only the Tag will select from all providers. Note that omitting the slash implies a tag:
```
# Select any '3.*' tagged runtime
py -V:3
# Select any 'PythonCore' released runtime
py -V:PythonCore/
# Select PythonCore's latest Python 3 runtime
py -V:PythonCore/3