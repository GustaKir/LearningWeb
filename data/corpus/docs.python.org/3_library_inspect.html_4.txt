Title: Changes in inspect.isasyncgen Functionality
URL: https://docs.python.org/3/library/inspect.html
Summary: The documentation details changes made to the `inspect.isasyncgen` function, introduced in Python 3.6 and modified in versions 3.8 and 3.13 to enhance its capability to detect asynchronous generator functions and coroutine functions when wrapped in `functools.partial()` and `functools.partialmethod()`, respectively.
---

```

Added in version 3.6.
Changed in version 3.8: Functions wrapped in [`functools.partial()`](https://docs.python.org/3/library/functools.html#functools.partial "functools.partial") now return `True` if the wrapped function is an [asynchronous generator](https://docs.python.org/3/glossary.html#term-asynchronous-generator) function.
Changed in version 3.13: Functions wrapped in [`functools.partialmethod()`](https://docs.python.org/3/library/functools.html#functools.partialmethod "functools.partialmethod") now return `True` if the wrapped function is a [coroutine function](https://docs.python.org/3/glossary.html#term-coroutine-function). 

inspect.isasyncgen(_object_)[¶](https://docs.python.org/3/library/inspect.html#inspect.isasyncgen "Link to this definition")
    
Return `True` if the object is an [asynchronous generator iterator](https://docs.python.org/3/glossary.html#term-asynchronous-generator-iterator) created by an [asynchronous generator](https://docs.python.org/3/glossary.html#term-asynchronous-generator) function.
Added in version 3.6. 

inspect.istraceback(_object_)[¶](https://docs.python.org/3/library/inspect.html#inspect.istraceback "Link to this definition")
    
Return `True` if the object is a traceback. 

inspect.isframe(_object_)[¶](https://docs.python.org/3/library/inspect.html#inspect.isframe "Link to this definition")
    
Return `True` if the object is a frame. 

inspect.iscode(_object_)[¶](https://docs.python.org/3/library/inspect.html#inspect.iscode "Link to this definition")
    
Return `True` if the object is a code. 

inspect.isbuiltin(_object_)[¶](https://docs.python.org/3/library/inspect.html#inspect.isbuiltin "Link to this definition")
    
Return `True` if the object is a built-in function or a bound built-in method. 

inspect.ismethodwrapper(_object_)[¶](https://docs.python.org/3/library/inspect.html#inspect.ismethodwrapper "Link to this definition")
    
Return `True` if the type of object is a [`MethodWrapperType`](https://docs.python.org/3/library/types.html#types.MethodWrapperType "types.MethodWrapperType").
These are instances of [`MethodWrapperType`](https://docs.python.org/3/library/types.html#types.MethodWrapperType "types.MethodWrapperType"), such as [`__str__()`](https://docs.python.org/3/reference/datamodel.html#object.__str__ "object.__str__"), [`__eq__()`](https://docs.python.org/3/reference/datamodel.html#object.__eq__ "object.__eq__") and [`__repr__()`](https://docs.python.org/3/reference/datamodel.html#object.__repr__ "object.__repr__").
Added in version 3.11. 

inspect.isroutine(_object_)[¶](https://docs.python.org/3/library/inspect.html#inspect.isroutine "Link to this definition")
    
Return `True` if the object is a user-defined or built-in function or method. 

inspect.isabstract(_object_)[¶](https://docs.python.org/3/library/inspect.html#inspect.isabstract "Link to this definition")
    
Return `True` if the object is an abstract base class.