Title: SQLite3 Methods and Execution Models
URL: https://docs.python.org/3/genindex-E.html
Summary: This section lists various methods in the sqlite3 library, including 'executemany()' and 'executescript()', as well as terms related to Python's execution model such as execution frame, restricted execution, and stack.
---

emany() (sqlite3.Connection method)](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.executemany)
    * [(sqlite3.Cursor method)](https://docs.python.org/3/library/sqlite3.html#sqlite3.Cursor.executemany)
  * [executescript() (sqlite3.Connection method)](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.executescript)
    * [(sqlite3.Cursor method)](https://docs.python.org/3/library/sqlite3.html#sqlite3.Cursor.executescript)
  * execution 
    * [frame](https://docs.python.org/3/reference/compound_stmts.html#index-43), [[1]](https://docs.python.org/3/reference/executionmodel.html#index-2)
    * [restricted](https://docs.python.org/3/reference/executionmodel.html#index-14)
    * [stack](https://docs.python.org/3/reference/datamodel.html#index-68)
  * [execution model](https://docs.python.org/3/reference/executionmodel.html#index-0)
  * [ExecutionLoader (class in importlib.abc)](https://docs.python.org/3/library/importlib.html#importlib.abc.ExecutionLoader)
  * [Executor (class in concurrent.futures)](https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Executor)
  * [execv() (in module os)](https://docs.python.org/3/library/os.html#os.execv)
  * [execve() (in module os)](https://docs.python.org/3/library/os.html#os.execve)
  * [execvp() (in module os)](https://docs.python.org/3/library/os.html#os.execvp)
  * [execvpe() (in module os)](https://docs.python.org/3/library/os.html#os.execvpe)
  * [EXFULL (in module errno)](https://docs.python.org/3/library/errno.html#errno.EXFULL)
  * [exists() (in module os.path)](https://docs.python.org/3/library/os.path.html#os.path.exists)
    * [(pathlib.Path method)](https://docs.python.org/3/library/pathlib.html#pathlib.Path.exists)
    * [(tkinter.ttk.Treeview method)](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Treeview.exists)
    * [(zipfile.Path method)](https://docs.python.org/3/library/zipfile.html#zipfile.Path.exists)
  * [exit (built-in variable)](https://docs.python.org/3/library/constants.html#exit)
    * [(C function)](https://docs.python.org/3/c-api/sys.html#index-3)
  * [exit() (argparse.ArgumentParser method)](https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser.exit)
    * [(in module _thread)](https://docs.python.org/3/library/_thread.html#thread.exit)
    * [(in module sys)](https://docs.python.org/3/library/sys.html#sys.exit)
  * [exitcode (multiprocessing.Process attribute)](https://docs.python.org/3/library/multiprocessing.html#multiprocessing.Process.exitcode)
  * [exitonclick() (in module turtle)](https://docs.python.org/3/library/turtle.html#turtle.exitonclick)
  * [ExitStack (class in contextlib)](https://docs.python.org/3/library/contextlib.html#contextlib.ExitStack)
  * [exp() (decimal.Context method)](https://docs.python.org/3/library/decimal.html#decimal.Context.exp)
    * [(decimal.Decimal method)](https://docs.python.org/3/library/decimal.html#decimal.Decimal.exp)
    * [(in module cmath)](https://docs.python.org/3/library/cmath.html#cmath.exp)
    * [(in module math)](https://docs.python.org/3/library/math.html#math.exp)
  * [exp2() (in module math)](https://docs.python.org/3/library/math.html#math.exp2)
  * [expand() (re.Match method)](https://docs.python.org/3/library/re.html#re.Match.expand)
  * [expand_tabs (textwrap.TextWrapper attribute)](https://docs.python.org/3/library/textwrap.html#textwrap.TextWrapper.expand_tabs)
  * [ExpandEnvironmentStrings() (in module winreg)](https://docs.python.org/3/library/winreg.html#winreg.ExpandEnvironmentStrings)
  * [expandNode() (xml.dom.pulldom.DOMEventStream method)](https://docs.python.org/3/library/xml.dom.pulldom.html#xml.dom.pulldom.DOMEventStream.expandNode)
  * [expandtabs() (bytearray method)](https://docs.python.org/3/library/stdtypes.html#bytearray.expandtabs)
    * [(bytes method)](https://docs.python.org/3/library/stdtypes.html#bytes.expandtabs)
    * [(str method)](https://docs.python.org/3/library/stdtypes.html#str.expandtabs)
  * [expanduser() (in module os.path)](https://docs.python.org/3/library/os.path.html#os.path.expanduser)
    * [(pathlib.Path method)](https://docs.python.org/3/library/pathlib.html#pathlib.Path.expanduser)
  * [expandvars() (in module os.path)](https://docs.python.org/3/library/os.path.html#os.path.expandvars)
  * [Expat](https://docs.python.org/3/library/pyexpat.html#index-0)
  * [ExpatError](https://docs.python.org/3/library/pyexpat.html#xml.parsers.expat.ExpatError)
  * [expected (asyncio.IncompleteReadError attribute)](https://docs.python.org/3/library/asyncio-exceptions.html#asyncio.IncompleteReadError.expected)
  * [expectedFailure() (in module unittest)](https://docs.python.org/3/library/unittest.html#unittest.expectedFailure)
  * [expectedFailures (unittest.TestResult attribute)](https://docs.python.org/3/library/unittest.html#unittest.TestResult.expectedFailures)
  * [expired() (asyncio.Timeout method)](https://docs.python.org/3/library/asyncio-task.html#as