Title: Python Changelog Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section highlights several patch updates, including the addition of FreeBSD constants to the socket module, a fix for the ZipFile `.write()` method when handling buffer protocol objects, and improvements to the `stacklevel` argument handling in the logging module.
---

Patch by Kumar Aditya.
  * [bpo-46030](https://bugs.python.org/issue?@action=redirect&bpo=46030): Add `LOCAL_CREDS`, `LOCAL_CREDS_PERSISTENT` and `SCM_CREDS2` FreeBSD constants to the socket module.
  * [bpo-44439](https://bugs.python.org/issue?@action=redirect&bpo=44439): Fix `.write()` method of a member file in `ZipFile`, when the input data is an object that supports the buffer protocol, the file length may be wrong.
  * [bpo-45171](https://bugs.python.org/issue?@action=redirect&bpo=45171): Fix handling of the `stacklevel` argument to logging functions in the [`logging`](https://docs.python.org/3/library/logging.html#module-logging "logging: Flexible event logging system for applications.") module so that it is consistent across all logging functions and, as advertised, similar to the `stacklevel` argument used in [`warn()`](https://docs.python.org/3/library/warnings.html#warnings.warn "warnings.warn").
  * [bpo-24959](https://bugs.python.org/issue?@action=redirect&bpo=24959): Fix bug where [`unittest`](https://docs.python.org/3/library/unittest.html#module-unittest "unittest: Unit testing framework for Python.") sometimes drops frames from tracebacks of exceptions raised in tests.
  * [bpo-44859](https://bugs.python.org/issue?@action=redirect&bpo=44859): Raise more accurate and [**PEP 249**](https://peps.python.org/pep-0249/) compatible exceptions in [`sqlite3`](https://docs.python.org/3/library/sqlite3.html#module-sqlite3 "sqlite3: A DB-API 2.0 implementation using SQLite 3.x.").
    * Raise [`InterfaceError`](https://docs.python.org/3/library/sqlite3.html#sqlite3.InterfaceError "sqlite3.InterfaceError") instead of [`ProgrammingError`](https://docs.python.org/3/library/sqlite3.html#sqlite3.ProgrammingError "sqlite3.ProgrammingError") for `SQLITE_MISUSE` errors.
    * Don’t overwrite [`BufferError`](https://docs.python.org/3/library/exceptions.html#BufferError "BufferError") with [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError "ValueError") when conversion to BLOB fails.
    * Raise [`ProgrammingError`](https://docs.python.org/3/library/sqlite3.html#sqlite3.ProgrammingError "sqlite3.ProgrammingError") instead of [`Warning`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Warning "sqlite3.Warning") if user tries to [`execute()`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Cursor.execute "sqlite3.Cursor.execute") more than one SQL statement.
    * Raise [`ProgrammingError`](https://docs.python.org/3/library/sqlite3.html#sqlite3.ProgrammingError "sqlite3.ProgrammingError") instead of [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError "ValueError") if an SQL query contains null characters.
  * [bpo-44493](https://bugs.python.org/issue?@action=redirect&bpo=44493): Add missing terminated NUL in sockaddr_un’s length
This was potentially observable when using non-abstract AF_UNIX datagram sockets to processes written in another programming language.
  * [bpo-41930](https://bugs.python.org/issue?@action=redirect&bpo=41930): Add [`serialize()`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.serialize "sqlite3.Connection.serialize") and [`deserialize()`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.deserialize "sqlite3.Connection.deserialize") support to [`sqlite3`](https://docs.python.org/3/library/sqlite3.html#module-sqlite3 "sqlite3: A DB-API 2.0 implementation using SQLite 3.x."). Patch by Erlend E. Aasland.
  * [bpo-33178](https://bugs.python.org/issue?@action=redirect&bpo=33178): Added [`ctypes.BigEndianUnion`](https://docs.python.org/3/library/ctypes.html#ctypes.BigEndianUnion "ctypes.BigEndianUnion") and [`ctypes.LittleEndianUnion`](https://docs.python.org/3/library/ctypes.html#ctypes.LittleEndianUnion "ctypes.LittleEndianUnion") classes, as originally documented in the library docs but not yet implemented.
  * [bpo-43352](https://bugs.python.org/issue?@action=redirect&bpo=43352): Add an Barrier object in synchronization primitives of _asyncio_ Lib in order to be consistent with Barrier from _threading_ and _multiprocessing_ libs*
  * [bpo-35859](https://bugs.python.org/issue?@action=redirect&bpo=35859): [`re`](https://docs.python.org/3/library/re.html#module-re "re: Regular expression operations.") module, fix a few bugs about capturing group. In rare cases, capturing group gets an incorrect string. Patch by Ma Lin.