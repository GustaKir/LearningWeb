Title: C API Updates in Python
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section highlights recent changes to the C API, including the addition of the `Py_UNREACHABLE()` macro, the removal of a custom thread-local storage implementation due to native support across platforms, and an update to `PyUnicode_AsWideCharString()` that raises a ValueError under specific conditions.
---

### C API[¶](https://docs.python.org/3/whatsnew/changelog.html#id569 "Link to this heading")
  * [bpo-31338](https://bugs.python.org/issue?@action=redirect&bpo=31338): Added the `Py_UNREACHABLE()` macro for code paths which are never expected to be reached. This and a few other useful macros are now documented in the C API manual.
  * [bpo-30832](https://bugs.python.org/issue?@action=redirect&bpo=30832): Remove own implementation for thread-local storage. CPython has provided the own implementation for thread-local storage (TLS) on Python/thread.c, it’s used in the case which a platform has not supplied native TLS. However, currently all supported platforms (Windows and pthreads) have provided native TLS and defined the Py_HAVE_NATIVE_TLS macro with unconditional in any case.
  * [bpo-30708](https://bugs.python.org/issue?@action=redirect&bpo=30708): PyUnicode_AsWideCharString() now raises a ValueError if the second argument is NULL and the wchar_t* string contains null characters.
  * [bpo-16500](https://bugs.python.org/issue?@action=redirect&bpo=16500): Deprecate PyOS_AfterFork() and add PyOS_BeforeFork(), PyOS_AfterFork_Parent() and PyOS_AfterFork_Child().
  * [bpo-6532](https://bugs.python.org/issue?@action=redirect&bpo=6532): The type of results of PyThread_start_new_thread() and PyThread_get_thread_ident(), and the id parameter of PyThreadState_SetAsyncExc() changed from “long” to “unsigned long”.
  * [bpo-27867](https://bugs.python.org/issue?@action=redirect&bpo=27867): Function PySlice_GetIndicesEx() is deprecated and replaced with a macro if Py_LIMITED_API is not set or set to the value between 0x03050400 and 0x03060000 (not including) or 0x03060100 or higher. Added functions PySlice_Unpack() and PySlice_AdjustIndices().
  * [bpo-29083](https://bugs.python.org/issue?@action=redirect&bpo=29083): Fixed the declaration of some public API functions. PyArg_VaParse() and PyArg_VaParseTupleAndKeywords() were not available in limited API. PyArg_ValidateKeywordArguments(), PyArg_UnpackTuple() and Py_BuildValue() were not available in limited API of version < 3.3 when PY_SSIZE_T_CLEAN is defined.
  * [bpo-28769](https://bugs.python.org/issue?@action=redirect&bpo=28769): The result of PyUnicode_AsUTF8AndSize() and PyUnicode_AsUTF8() is now of type `const char *` rather of `char *`.
  * [bpo-29058](https://bugs.python.org/issue?@action=redirect&bpo=29058): All stable API extensions added after Python 3.2 are now available only when Py_LIMITED_API is set to the PY_VERSION_HEX value of the minimum Python version supporting this API.
  * [bpo-28822](https://bugs.python.org/issue?@action=redirect&bpo=28822): The index parameters _start_ and _end_ of PyUnicode_FindChar() are now adjusted to behave like `str[start:end]`.
  * [bpo-28808](https://bugs.python.org/issue?@action=redirect&bpo=28808): PyUnicode_CompareWithASCIIString() now never raises exceptions.
  * [bpo-28761](https://bugs.python.org/issue?@action=redirect&bpo=28761): The fields name and doc of structures PyMemberDef, PyGetSetDef, PyStructSequence_Field, PyStructSequence_Desc, and wrapperbase are now of type `const char *` rather of `char *`.
  * [bpo-28748](https://bugs.python.org/issue?@action=redirect&bpo=28748): Private variable _Py_PackageContext is now of type `const char *` rather of `char *`.
  * [bpo-19569](https://bugs.python.org/issue?@action=redirect&bpo=19569): Compiler warnings are now emitted if use most of deprecated functions.
  * [bpo-28426](https://bugs.python.org/issue?@action=redirect&bpo=28426): Deprecated undocumented functions PyUnicode_AsEncodedObject(), PyUnicode_AsDecodedObject(), PyUnicode_AsDecodedUnicode() and PyUnicode_AsEncodedUnicode().