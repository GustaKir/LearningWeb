Title: Operator Functions in Python
URL: https://docs.python.org/3/library/operator.html
Summary: This section documents various operator functions in Python, including `operator.__mod__`, `operator.mul`, `operator.__mul__`, `operator.matmul`, `operator.__matmul__`, `operator.neg`, and `operator.__neg__`, detailing their operations such as modulo, multiplication, matrix multiplication, and negation.
---

operator.__mod__(_a_ , _b_)[¶](https://docs.python.org/3/library/operator.html#operator.__mod__ "Link to this definition")
    
Return `a % b`. 

operator.mul(_a_ , _b_)[¶](https://docs.python.org/3/library/operator.html#operator.mul "Link to this definition")


operator.__mul__(_a_ , _b_)[¶](https://docs.python.org/3/library/operator.html#operator.__mul__ "Link to this definition")
    
Return `a * b`, for _a_ and _b_ numbers. 

operator.matmul(_a_ , _b_)[¶](https://docs.python.org/3/library/operator.html#operator.matmul "Link to this definition")


operator.__matmul__(_a_ , _b_)[¶](https://docs.python.org/3/library/operator.html#operator.__matmul__ "Link to this definition")
    
Return `a @ b`.
Added in version 3.5. 

operator.neg(_obj_)[¶](https://docs.python.org/3/library/operator.html#operator.neg "Link to this definition")


operator.__neg__(_obj_)[¶](https://docs.python.org/3/library/operator.html#operator.__neg__ "Link to this definition")
    
Return _obj_ negated (`-obj`). 

operator.or_(_a_ , _b_)[¶](https://docs.python.org/3/library/operator.html#operator.or_ "Link to this definition")


operator.__or__(_a_ , _b_)[¶](https://docs.python.org/3/library/operator.html#operator.__or__ "Link to this definition")
    
Return the bitwise or of _a_ and _b_. 

operator.pos(_obj_)[¶](https://docs.python.org/3/library/operator.html#operator.pos "Link to this definition")


operator.__pos__(_obj_)[¶](https://docs.python.org/3/library/operator.html#operator.__pos__ "Link to this definition")
    
Return _obj_ positive (`+obj`). 

operator.pow(_a_ , _b_)[¶](https://docs.python.org/3/library/operator.html#operator.pow "Link to this definition")


operator.__pow__(_a_ , _b_)[¶](https://docs.python.org/3/library/operator.html#operator.__pow__ "Link to this definition")
    
Return `a ** b`, for _a_ and _b_ numbers. 

operator.rshift(_a_ , _b_)[¶](https://docs.python.org/3/library/operator.html#operator.rshift "Link to this definition")


operator.__rshift__(_a_ , _b_)[¶](https://docs.python.org/3/library/operator.html#operator.__rshift__ "Link to this definition")
    
Return _a_ shifted right by _b_. 

operator.sub(_a_ , _b_)[¶](https://docs.python.org/3/library/operator.html#operator.sub "Link to this definition")


operator.__sub__(_a_ , _b_)[¶](https://docs.python.org/3/library/operator.html#operator.__sub__ "Link to this definition")
    
Return `a - b`. 

operator.truediv(_a_ , _b_)[¶](https://docs.python.org/3/library/operator.html#operator.truediv "Link to this definition")


operator.__truediv__(_a_ , _b_)[¶](https://docs.python.org/3/library/operator.html#operator.__truediv__ "Link to this definition")
    
Return `a / b` where 2/3 is .66 rather than 0. This is also known as “true” division. 

operator.xor(_a_ , _b_)[¶](https://docs.python.org/3/library/operator.html#operator.xor "Link to this definition")


operator.__xor__(_a_ , _b_)[¶](https://docs.python.org/3/library/operator.html#operator.__xor__ "Link to this definition")
    
Return the bitwise exclusive or of _a_ and _b_.
Operations which work with sequences (some of them with mappings too) include: 

operator.concat(_a_ , _b_)[¶](https://docs.python.org/3/library/operator.html#operator.concat "Link to this definition")


operator.__concat__(_a_ , _b_)[¶](https://docs.python.org/3/library/operator.html#operator.__concat__ "Link to this definition")
    
Return `a + b` for _a_ and _b_ sequences. 

operator.contains(_a_ , _b_)[¶](https://docs.python.org/3/library/operator.html#operator.contains "Link to this definition")


operator.__contains__(_a_ , _b_)[¶](https://docs.python.org/3/library/operator.html#operator.__contains__ "Link to this definition")
    
Return the outcome of the test `b in a`. Note the reversed operands. 

operator.countOf(_a_ , _b_)[¶](https://docs.python.org/3/library/operator.html#operator.countOf "Link to this definition")
    
Return the number of occurrences of _b_ in _a_. 

operator.delitem(_a_ , _b_)[¶](https://docs.python.org/3/library/operator.html#operator.delitem "Link to this definition")


operator.__delitem__(_a_ , _b_)[¶](https://docs.python.org/3/library/operator.html#operator.__delitem__ "Link to this definition")
    
Remove the value of _a_ at index _b_. 

operator.getitem(_a_ , _b_)[¶](https://docs.python.org/3/library/operator.html#operator.getitem "Link to this definition")


operator.__getitem__(_a_ , _b_)[¶](https://docs.python.org/3/library/operator.html#operator.__getitem__ "Link to this definition")
    
Return the value of _a_ at index _b_. 

operator.indexOf(_a_ , _b_)[¶](https://docs.python.org/3/library/operator.html#operator.indexOf "Link to this definition")
    
Return the index of the first of occurrence of _b_ in _a_. 

operator.setitem(_a_ , _b_ , _c_)[¶](https://docs.python.org/3/library/operator.html#operator.setitem "Link to this definition")