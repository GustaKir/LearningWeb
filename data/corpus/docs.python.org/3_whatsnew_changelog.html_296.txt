Title: Python 3 Changelog Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: The Python 3 changelog details several significant updates, including the replacement of various call bytecode instructions with new ones, the removal of the `YIELD_FROM` instruction in favor of `SEND`, and improvements in error handling within `_PyErr_Display()`. Additionally, there is a fix for parser errors related to non-UTF-8 characters in source files.
---

ugs.python.org/issue?@action=redirect&bpo=44525): Replace the four call bytecode instructions which one pre-call instruction and two call instructions.
Removes `CALL_FUNCTION`, `CALL_FUNCTION_KW`, `CALL_METHOD` and `CALL_METHOD_KW`.
Adds `CALL_NO_KW` and `CALL_KW` call instructions, and `PRECALL_METHOD` prefix for pairing with `LOAD_METHOD`.
  * [bpo-46039](https://bugs.python.org/issue?@action=redirect&bpo=46039): Remove the `YIELD_FROM` instruction and replace it with the `SEND` instruction which performs the same operation, but without the loop.
  * [bpo-45635](https://bugs.python.org/issue?@action=redirect&bpo=45635): The code called from `_PyErr_Display()` was refactored to improve error handling. It now exits immediately upon an unrecoverable error.
  * [bpo-46054](https://bugs.python.org/issue?@action=redirect&bpo=46054): Fix parser error when parsing non-utf8 characters in source files. Patch by Pablo Galindo.
  * [bpo-46042](https://bugs.python.org/issue?@action=redirect&bpo=46042): Improve the location of the caret in [`SyntaxError`](https://docs.python.org/3/library/exceptions.html#SyntaxError "SyntaxError") exceptions emitted by the symbol table. Patch by Pablo Galindo.
  * [bpo-46049](https://bugs.python.org/issue?@action=redirect&bpo=46049): Ensure `._pth` files work as intended on platforms other than Windows.
  * [bpo-46048](https://bugs.python.org/issue?@action=redirect&bpo=46048): Fixes parsing of `._pth` files on startup so that single-character paths are correctly read.
  * [bpo-37971](https://bugs.python.org/issue?@action=redirect&bpo=37971): Fix a bug where the line numbers given in a traceback when a decorator application raised an exception were wrong.
  * [bpo-46031](https://bugs.python.org/issue?@action=redirect&bpo=46031): Add [`POP_JUMP_IF_NOT_NONE`](https://docs.python.org/3/library/dis.html#opcode-POP_JUMP_IF_NOT_NONE) and [`POP_JUMP_IF_NONE`](https://docs.python.org/3/library/dis.html#opcode-POP_JUMP_IF_NONE) opcodes to speed up conditional jumps.
  * [bpo-45654](https://bugs.python.org/issue?@action=redirect&bpo=45654): Deepfreeze [`runpy`](https://docs.python.org/3/library/runpy.html#module-runpy "runpy: Locate and run Python modules without importing them first."), patch by Kumar Aditya.
  * [bpo-46025](https://bugs.python.org/issue?@action=redirect&bpo=46025): Fix a crash in the [`atexit`](https://docs.python.org/3/library/atexit.html#module-atexit "atexit: Register and execute cleanup functions.") module involving functions that unregister themselves before raising exceptions. Patch by Pablo Galindo.
  * [bpo-46000](https://bugs.python.org/issue?@action=redirect&bpo=46000): Improve compatibility of the [`curses`](https://docs.python.org/3/library/curses.html#module-curses "curses: An interface to the curses library, providing portable terminal handling. \(Unix\)") module with NetBSD curses.
  * [bpo-44525](https://bugs.python.org/issue?@action=redirect&bpo=44525): Specialize the CALL_FUNCTION instruction for calls to builtin types with a single argument. Speeds up `range(x)`, `list(x)`, and specifically `type(obj)`.
  * [bpo-42918](https://bugs.python.org/issue?@action=redirect&bpo=42918): Fix bug where the built-in [`compile()`](https://docs.python.org/3/library/functions.html#compile "compile") function did not always raise a [`SyntaxError`](https://docs.python.org/3/library/exceptions.html#SyntaxError "SyntaxError") when passed multiple statements in ‘single’ mode. Patch by Weipeng Hong.
  * [bpo-45953](https://bugs.python.org/issue?@action=redirect&bpo=45953): The main interpreter in _PyRuntimeState.interpreters is now statically allocated (as part of _PyRuntime). Likewise for the initial thread state of each interpreter. This means less allocation during runtime init, as well as better memory locality for these key state objects.
  * [bpo-45292](https://bugs.python.org/issue?@action=redirect&bpo=45292): Complete the [**PEP 654**](https://peps.python.org/pep-0654/) implementation: add `except*`.
  * [bpo-43413](https://bugs.python.org/issue?@action=redirect&bpo=43413): Revert changes in `set.__init__`. Subclass of [`set`](https://docs.python.org/3/library/stdtypes.html#set "set") needs to define a `__init__()` method if it defines a `__new__()` method with additional keyword parameters.
  * [bpo-43931](https://bugs.python.org/issue?@action=redirect&bpo=43931): Added the [`Py_Version`](https://docs.python.org/3/c-api/apiabiversion.html#c.Py_Version "Py_Version") constant which bears the same value as [`PY_VERSION_HEX`](https://docs.python.org/3/c-api/apiabiversion.html#c.PY_VERSION_HEX "PY_VERSION_HEX"). Patch by Gabriele N. Tornetta.