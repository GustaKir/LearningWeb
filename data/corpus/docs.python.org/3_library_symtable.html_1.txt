Title: Symbol Table Types in Python
URL: https://docs.python.org/3/library/symtable.html
Summary: This section describes various types used in the symbol table for Python's type system, including TYPE_ALIAS for type constructions, TYPE_PARAMETERS for generic functions and classes, and TYPE_VARIABLE for the representations of type variables.
---

TYPE_ALIAS _= "type alias"_[¶](https://docs.python.org/3/library/symtable.html#symtable.SymbolTableType.TYPE_ALIAS "Link to this definition")
    
Used for the symbol table of [`type`](https://docs.python.org/3/reference/simple_stmts.html#type) constructions. 

TYPE_PARAMETERS _= "type parameters"_[¶](https://docs.python.org/3/library/symtable.html#symtable.SymbolTableType.TYPE_PARAMETERS "Link to this definition")
    
Used for the symbol table of [generic functions](https://docs.python.org/3/reference/compound_stmts.html#generic-functions) or [generic classes](https://docs.python.org/3/reference/compound_stmts.html#generic-classes). 

TYPE_VARIABLE _= "type variable"_[¶](https://docs.python.org/3/library/symtable.html#symtable.SymbolTableType.TYPE_VARIABLE "Link to this definition")
    
Used for the symbol table of the bound, the constraint tuple or the default value of a single type variable in the formal sense, i.e., a TypeVar, a TypeVarTuple or a ParamSpec object (the latter two do not support a bound or a constraint tuple).
Added in version 3.13. 

_class_ symtable.SymbolTable[¶](https://docs.python.org/3/library/symtable.html#symtable.SymbolTable "Link to this definition")
    
A namespace table for a block. The constructor is not public. 

get_type()[¶](https://docs.python.org/3/library/symtable.html#symtable.SymbolTable.get_type "Link to this definition")
    
Return the type of the symbol table. Possible values are members of the [`SymbolTableType`](https://docs.python.org/3/library/symtable.html#symtable.SymbolTableType "symtable.SymbolTableType") enumeration.
Changed in version 3.12: Added `'annotation'`, `'TypeVar bound'`, `'type alias'`, and `'type parameter'` as possible return values.
Changed in version 3.13: Return values are members of the [`SymbolTableType`](https://docs.python.org/3/library/symtable.html#symtable.SymbolTableType "symtable.SymbolTableType") enumeration.
The exact values of the returned string may change in the future, and thus, it is recommended to use [`SymbolTableType`](https://docs.python.org/3/library/symtable.html#symtable.SymbolTableType "symtable.SymbolTableType") members instead of hard-coded strings. 

get_id()[¶](https://docs.python.org/3/library/symtable.html#symtable.SymbolTable.get_id "Link to this definition")
    
Return the table’s identifier. 

get_name()[¶](https://docs.python.org/3/library/symtable.html#symtable.SymbolTable.get_name "Link to this definition")
    
Return the table’s name. This is the name of the class if the table is for a class, the name of the function if the table is for a function, or `'top'` if the table is global ([`get_type()`](https://docs.python.org/3/library/symtable.html#symtable.SymbolTable.get_type "symtable.SymbolTable.get_type") returns `'module'`). For type parameter scopes (which are used for generic classes, functions, and type aliases), it is the name of the underlying class, function, or type alias. For type alias scopes, it is the name of the type alias. For [`TypeVar`](https://docs.python.org/3/library/typing.html#typing.TypeVar "typing.TypeVar") bound scopes, it is the name of the `TypeVar`. 

get_lineno()[¶](https://docs.python.org/3/library/symtable.html#symtable.SymbolTable.get_lineno "Link to this definition")
    
Return the number of the first line in the block this table represents. 

is_optimized()[¶](https://docs.python.org/3/library/symtable.html#symtable.SymbolTable.is_optimized "Link to this definition")
    
Return `True` if the locals in this table can be optimized. 

is_nested()[¶](https://docs.python.org/3/library/symtable.html#symtable.SymbolTable.is_nested "Link to this definition")
    
Return `True` if the block is a nested class or function. 

has_children()[¶](https://docs.python.org/3/library/symtable.html#symtable.SymbolTable.has_children "Link to this definition")
    
Return `True` if the block has nested namespaces within it. These can be obtained with [`get_children()`](https://docs.python.org/3/library/symtable.html#symtable.SymbolTable.get_children "symtable.SymbolTable.get_children"). 

get_identifiers()[¶](https://docs.python.org/3/library/symtable.html#symtable.SymbolTable.get_identifiers "Link to this definition")
    
Return a view object containing the names of symbols in the table. See the [documentation of view objects](https://docs.python.org/3/library/stdtypes.html#dict-views). 

lookup(_name_)[¶](https://docs.python.org/3/library/symtable.html#symtable.SymbolTable.lookup "Link to this definition")
    
Lookup _name_ in the table and return a [`Symbol`](https://docs.python.org/3/library/symtable.html#symtable.Symbol "symtable.Symbol") instance. 

get_symbols()[¶](https://docs.python.org/3/library/symtable.html#symtable.SymbolTable.get_symbols "Link to this definition")
    
Return a list of [`Symbol`](https://docs.python.org/3/library/symtable.html#symtable.Symbol "symtable.Symbol") instances for names in the table.