Title: Python 3 Changelog Highlights
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This chunk discusses several bug fixes and improvements in Python, including fixes for crashes related to NameError handling in unittest, parser bugs regarding PEP 263 coding cookies, and segmentation faults in the parser. Additionally, it mentions a simplification of the BINARY_OP implementation.
---

R) for classes with a `__getitem__` method implemented in Python
  * [bpo-45826](https://bugs.python.org/issue?@action=redirect&bpo=45826): Fixed a crash when calling `.with_traceback(None)` on `NameError`. This occurs internally in `unittest.TestCase.assertRaises()`.
  * [bpo-45822](https://bugs.python.org/issue?@action=redirect&bpo=45822): Fixed a bug in the parser that was causing it to not respect [**PEP 263**](https://peps.python.org/pep-0263/) coding cookies when no flags are provided. Patch by Pablo Galindo
  * [bpo-45820](https://bugs.python.org/issue?@action=redirect&bpo=45820): Fix a segfault when the parser fails without reading any input. Patch by Pablo Galindo
  * [bpo-45636](https://bugs.python.org/issue?@action=redirect&bpo=45636): Simplify the implementation of [`BINARY_OP`](https://docs.python.org/3/library/dis.html#opcode-BINARY_OP) by indexing into an array of function pointers (rather than switching on the oparg).
  * [bpo-42540](https://bugs.python.org/issue?@action=redirect&bpo=42540): Fix crash when [`os.fork()`](https://docs.python.org/3/library/os.html#os.fork "os.fork") is called with an active non-default memory allocator.
  * [bpo-45738](https://bugs.python.org/issue?@action=redirect&bpo=45738): Fix computation of error location for invalid continuation characters in the parser. Patch by Pablo Galindo.
  * [bpo-45636](https://bugs.python.org/issue?@action=redirect&bpo=45636): Remove an existing “fast path” for old-style string formatting, since it no longer appears to have any measurable impact.
  * [bpo-45753](https://bugs.python.org/issue?@action=redirect&bpo=45753): Make recursion checks a bit more efficient by tracking amount of calls left before overflow.
  * [bpo-45773](https://bugs.python.org/issue?@action=redirect&bpo=45773): Fix a compiler hang when attempting to optimize certain jump patterns.
  * [bpo-45764](https://bugs.python.org/issue?@action=redirect&bpo=45764): The parser now gives a better error message when leaving out the opening parenthesis `(` after a `def`-statement:
>>>```
>>> deff:
 File "<stdin>", line 1
deff:
^
SyntaxError: expected '('