Title: Python C API List Operations
URL: https://docs.python.org/3/c-api/list.html
Summary: This section covers functions for manipulating Python lists in C, including `PyList_Insert`, which inserts an item at a specified index, and returns 0 on success or -1 on failure, and `PyList_Append`, which appends an item to the end of the list.
---

intPyList_Insert([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*list, [Py_ssize_t](https://docs.python.org/3/c-api/intro.html#c.Py_ssize_t "Py_ssize_t")index, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*item)[¶](https://docs.python.org/3/c-api/list.html#c.PyList_Insert "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Insert the item _item_ into list _list_ in front of index _index_. Return `0` if successful; return `-1` and set an exception if unsuccessful. Analogous to `list.insert(index, item)`. 

intPyList_Append([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*list, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*item)[¶](https://docs.python.org/3/c-api/list.html#c.PyList_Append "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Append the object _item_ at the end of list _list_. Return `0` if successful; return `-1` and set an exception if unsuccessful. Analogous to `list.append(item)`. 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyList_GetSlice([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*list, [Py_ssize_t](https://docs.python.org/3/c-api/intro.html#c.Py_ssize_t "Py_ssize_t")low, [Py_ssize_t](https://docs.python.org/3/c-api/intro.html#c.Py_ssize_t "Py_ssize_t")high)[¶](https://docs.python.org/3/c-api/list.html#c.PyList_GetSlice "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Return a list of the objects in _list_ containing the objects _between_ _low_ and _high_. Return `NULL` and set an exception if unsuccessful. Analogous to `list[low:high]`. Indexing from the end of the list is not supported. 

intPyList_SetSlice([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*list, [Py_ssize_t](https://docs.python.org/3/c-api/intro.html#c.Py_ssize_t "Py_ssize_t")low, [Py_ssize_t](https://docs.python.org/3/c-api/intro.html#c.Py_ssize_t "Py_ssize_t")high, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*itemlist)[¶](https://docs.python.org/3/c-api/list.html#c.PyList_SetSlice "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Set the slice of _list_ between _low_ and _high_ to the contents of _itemlist_. Analogous to `list[low:high] = itemlist`. The _itemlist_ may be `NULL`, indicating the assignment of an empty list (slice deletion). Return `0` on success, `-1` on failure. Indexing from the end of the list is not supported. 

intPyList_Extend([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*list, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*iterable)[¶](https://docs.python.org/3/c-api/list.html#c.PyList_Extend "Link to this definition")
    
Extend _list_ with the contents of _iterable_. This is the same as `PyList_SetSlice(list, PY_SSIZE_T_MAX, PY_SSIZE_T_MAX, iterable)` and analogous to `list.extend(iterable)` or `list += iterable`.
Raise an exception and return `-1` if _list_ is not a [`list`](https://docs.python.org/3/library/stdtypes.html#list "list") object. Return 0 on success.
Added in version 3.13. 

intPyList_Clear([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*list)[¶](https://docs.python.org/3/c-api/list.html#c.PyList_Clear "Link to this definition")
    
Remove all items from _list_. This is the same as `PyList_SetSlice(list, 0, PY_SSIZE_T_MAX, NULL)` and analogous to `list.clear()` or `del list[:]`.
Raise an exception and return `-1` if _list_ is not a [`list`](https://docs.python.org/3/library/stdtypes.html#list "list") object. Return 0 on success.
Added in version 3.13. 

intPyList_Sort([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*list)[¶](https://docs.python.org/3/c-api/list.html#c.PyList_Sort "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Sort the items of _list_ in place. Return `0` on success, `-1` on failure. This is equivalent to `list.sort()`. 

intPyList_Reverse([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*list)[¶](https://docs.python.org/3/c-api/list.html#c.PyList_Reverse "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Reverse the items of _list_ in place. Return `0` on success, `-1` on failure. This is the equivalent of `list.reverse()`.