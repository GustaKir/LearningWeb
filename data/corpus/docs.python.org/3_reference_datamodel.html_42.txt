Title: Implementing Reverse Iteration in Python
URL: https://docs.python.org/3/reference/datamodel.html
Summary: The `__reversed__()` method allows custom objects to define behavior for reverse iteration when using the `reversed()` built-in function. If not implemented, Python defaults to using the sequence protocol methods `__len__()` and `__getitem__()` for reverse iteration.
---

object.__reversed__(_self_)[¶](https://docs.python.org/3/reference/datamodel.html#object.__reversed__ "Link to this definition")
    
Called (if present) by the [`reversed()`](https://docs.python.org/3/library/functions.html#reversed "reversed") built-in to implement reverse iteration. It should return a new iterator object that iterates over all the objects in the container in reverse order.
If the [`__reversed__()`](https://docs.python.org/3/reference/datamodel.html#object.__reversed__ "object.__reversed__") method is not provided, the [`reversed()`](https://docs.python.org/3/library/functions.html#reversed "reversed") built-in will fall back to using the sequence protocol ([`__len__()`](https://docs.python.org/3/reference/datamodel.html#object.__len__ "object.__len__") and [`__getitem__()`](https://docs.python.org/3/reference/datamodel.html#object.__getitem__ "object.__getitem__")). Objects that support the sequence protocol should only provide [`__reversed__()`](https://docs.python.org/3/reference/datamodel.html#object.__reversed__ "object.__reversed__") if they can provide an implementation that is more efficient than the one provided by [`reversed()`](https://docs.python.org/3/library/functions.html#reversed "reversed").
The membership test operators ([`in`](https://docs.python.org/3/reference/expressions.html#in) and [`not in`](https://docs.python.org/3/reference/expressions.html#not-in)) are normally implemented as an iteration through a container. However, container objects can supply the following special method with a more efficient implementation, which also does not require the object be iterable. 

object.__contains__(_self_ , _item_)[¶](https://docs.python.org/3/reference/datamodel.html#object.__contains__ "Link to this definition")
    
Called to implement membership test operators. Should return true if _item_ is in _self_ , false otherwise. For mapping objects, this should consider the keys of the mapping rather than the values or the key-item pairs.
For objects that don’t define [`__contains__()`](https://docs.python.org/3/reference/datamodel.html#object.__contains__ "object.__contains__"), the membership test first tries iteration via [`__iter__()`](https://docs.python.org/3/reference/datamodel.html#object.__iter__ "object.__iter__"), then the old sequence iteration protocol via [`__getitem__()`](https://docs.python.org/3/reference/datamodel.html#object.__getitem__ "object.__getitem__"), see [this section in the language reference](https://docs.python.org/3/reference/expressions.html#membership-test-details).
### 3.3.8. Emulating numeric types[¶](https://docs.python.org/3/reference/datamodel.html#emulating-numeric-types "Link to this heading")
The following methods can be defined to emulate numeric objects. Methods corresponding to operations that are not supported by the particular kind of number implemented (e.g., bitwise operations for non-integral numbers) should be left undefined. 

object.__add__(_self_ , _other_)[¶](https://docs.python.org/3/reference/datamodel.html#object.__add__ "Link to this definition")


object.__sub__(_self_ , _other_)[¶](https://docs.python.org/3/reference/datamodel.html#object.__sub__ "Link to this definition")


object.__mul__(_self_ , _other_)[¶](https://docs.python.org/3/reference/datamodel.html#object.__mul__ "Link to this definition")


object.__matmul__(_self_ , _other_)[¶](https://docs.python.org/3/reference/datamodel.html#object.__matmul__ "Link to this definition")


object.__truediv__(_self_ , _other_)[¶](https://docs.python.org/3/reference/datamodel.html#object.__truediv__ "Link to this definition")


object.__floordiv__(_self_ , _other_)[¶](https://docs.python.org/3/reference/datamodel.html#object.__floordiv__ "Link to this definition")


object.__mod__(_self_ , _other_)[¶](https://docs.python.org/3/reference/datamodel.html#object.__mod__ "Link to this definition")


object.__divmod__(_self_ , _other_)[¶](https://docs.python.org/3/reference/datamodel.html#object.__divmod__ "Link to this definition")


object.__pow__(_self_ , _other_[, _modulo_])[¶](https://docs.python.org/3/reference/datamodel.html#object.__pow__ "Link to this definition")


object.__lshift__(_self_ , _other_)[¶](https://docs.python.org/3/reference/datamodel.html#object.__lshift__ "Link to this definition")


object.__rshift__(_self_ , _other_)[¶](https://docs.python.org/3/reference/datamodel.html#object.__rshift__ "Link to this definition")


object.__and__(_self_ , _other_)[¶](https://docs.python.org/3/reference/datamodel.html#object.__and__ "Link to this definition")


object.__xor__(_self_ , _other_)[¶](https://docs.python.org/3/reference/datamodel.html#object.__xor__ "Link to this definition")