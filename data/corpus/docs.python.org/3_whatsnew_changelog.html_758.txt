Title: Python 3 Change Log Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This document outlines recent updates and bug fixes in Python 3, including optional headers in wsgiref, improved support for large strings in ssl.RAND_add(), prevention of unnecessary fstat() calls during file opening, and enhancements in cProfile and asyncore for better resource management.
---

Before, it ignored I/O errors if at least the first C call read() succeed.
  * [bpo-5800](https://bugs.python.org/issue?@action=redirect&bpo=5800): headers parameter of wsgiref.headers.Headers is now optional. Initial patch by Pablo Torres Navarrete and SilentGhost.
  * [bpo-21781](https://bugs.python.org/issue?@action=redirect&bpo=21781): ssl.RAND_add() now supports strings longer than 2 GB.
  * [bpo-21679](https://bugs.python.org/issue?@action=redirect&bpo=21679): Prevent extraneous fstat() calls during open(). Patch by Bohuslav Kabrda.
  * [bpo-21863](https://bugs.python.org/issue?@action=redirect&bpo=21863): cProfile now displays the module name of C extension functions, in addition to their own name.
  * [bpo-11453](https://bugs.python.org/issue?@action=redirect&bpo=11453): asyncore: emit a ResourceWarning when an unclosed file_wrapper object is destroyed. The destructor now closes the file if needed. The close() method can now be called twice: the second call does nothing.
  * [bpo-21858](https://bugs.python.org/issue?@action=redirect&bpo=21858): Better handling of Python exceptions in the sqlite3 module.
  * [bpo-21476](https://bugs.python.org/issue?@action=redirect&bpo=21476): Make sure the email.parser.BytesParser TextIOWrapper is discarded after parsing, so the input file isn’t unexpectedly closed.
  * [bpo-20295](https://bugs.python.org/issue?@action=redirect&bpo=20295): imghdr now recognizes OpenEXR format images.
  * [bpo-21729](https://bugs.python.org/issue?@action=redirect&bpo=21729): Used the “with” statement in the dbm.dumb module to ensure files closing. Patch by Claudiu Popa.
  * [bpo-21491](https://bugs.python.org/issue?@action=redirect&bpo=21491): socketserver: Fix a race condition in child processes reaping.
  * [bpo-21719](https://bugs.python.org/issue?@action=redirect&bpo=21719): Added the `st_file_attributes` field to os.stat_result on Windows.
  * [bpo-21832](https://bugs.python.org/issue?@action=redirect&bpo=21832): Require named tuple inputs to be exact strings.
  * [bpo-21722](https://bugs.python.org/issue?@action=redirect&bpo=21722): The distutils “upload” command now exits with a non-zero return code when uploading fails. Patch by Martin Dengler.
  * [bpo-21723](https://bugs.python.org/issue?@action=redirect&bpo=21723): asyncio.Queue: support any type of number (ex: float) for the maximum size. Patch written by Vajrasky Kok.
  * [bpo-21711](https://bugs.python.org/issue?@action=redirect&bpo=21711): support for “site-python” directories has now been removed from the site module (it was deprecated in 3.4).
  * [bpo-17552](https://bugs.python.org/issue?@action=redirect&bpo=17552): new socket.sendfile() method allowing a file to be sent over a socket by using high-performance os.sendfile() on UNIX. Patch by Giampaolo Rodola’.
  * [bpo-18039](https://bugs.python.org/issue?@action=redirect&bpo=18039): dbm.dump.open() now always creates a new database when the flag has the value ‘n’. Patch by Claudiu Popa.
  * [bpo-21326](https://bugs.python.org/issue?@action=redirect&bpo=21326): Add a new is_closed() method to asyncio.BaseEventLoop. run_forever() and run_until_complete() methods of asyncio.BaseEventLoop now raise an exception if the event loop was closed.
  * [bpo-21766](https://bugs.python.org/issue?@action=redirect&bpo=21766): Prevent a security hole in CGIHTTPServer by URL unquoting paths before checking for a CGI script at that path.
  * [bpo-21310](https://bugs.python.org/issue?@action=redirect&bpo=21310): Fixed possible resource leak in failed open().
  * [bpo-21256](https://bugs.python.org/issue?@action=redirect&bpo=21256): Printout of keyword args should be in deterministic order in a mock function call. This will help to write better doctests.
  * [bpo-21677](https://bugs.python.org/issue?@action=redirect&bpo=21677): Fixed chaining nonnormalized exceptions in io close() methods.
  * [bpo-11709](https://bugs.python.org/issue?@action=redirect&bpo=11709): Fix the pydoc.help function to not fail when sys.stdin is not a valid file.
  * [bpo-21515](https://bugs.python.org/issue?@action=redirect&bpo=21515): tempfile.TemporaryFile now uses os.O_TMPFILE flag is available.
  * [bpo-13223](https://bugs.python.org/issue?@action=redirect&bpo=13223): Fix pydoc.writedoc so that the HTML documentation for methods that use ‘self’ in the example code is generated correctly.
  * [bpo-21463](https://bugs.python.org/issue?@action=redirect&bpo=21463): In urllib.request, fix pruning of the FTP cache.
  * [bpo-21618](https://bugs.python.org/issue?@action=redirect&bpo=21618): The subprocess module could fail to close open fds that were inherited by the calling process and already higher than POSIX resource limits would otherwise allow.