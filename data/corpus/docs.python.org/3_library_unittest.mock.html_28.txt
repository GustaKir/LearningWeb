Title: FILTER_DIR in unittest.mock
URL: https://docs.python.org/3/library/unittest.mock.html
Summary: unittest.mock.FILTER_DIR is a module-level variable that dictates how mock objects respond to the dir() function. By default, it is set to True, filtering to display only useful members. Setting it to False disables this filtering and reveals all attributes, including dynamically created ones.
---

```

### FILTER_DIR[¶](https://docs.python.org/3/library/unittest.mock.html#filter-dir "Link to this heading") 

unittest.mock.FILTER_DIR[¶](https://docs.python.org/3/library/unittest.mock.html#unittest.mock.FILTER_DIR "Link to this definition")

[`FILTER_DIR`](https://docs.python.org/3/library/unittest.mock.html#unittest.mock.FILTER_DIR "unittest.mock.FILTER_DIR") is a module level variable that controls the way mock objects respond to [`dir()`](https://docs.python.org/3/library/functions.html#dir "dir"). The default is `True`, which uses the filtering described below, to only show useful members. If you dislike this filtering, or need to switch it off for diagnostic purposes, then set `mock.FILTER_DIR = False`.
With filtering on, `dir(some_mock)` shows only useful attributes and will include any dynamically created attributes that wouldn’t normally be shown. If the mock was created with a _spec_ (or _autospec_ of course) then all the attributes from the original are shown, even if they haven’t been accessed yet:
>>>```
>>> dir(Mock())
['assert_any_call',
 'assert_called',
 'assert_called_once',
 'assert_called_once_with',
 'assert_called_with',
 'assert_has_calls',
 'assert_not_called',
 'attach_mock',
 ...
>>> fromurllibimport request
>>> dir(Mock(spec=request))
['AbstractBasicAuthHandler',
 'AbstractDigestAuthHandler',
 'AbstractHTTPHandler',
 'BaseHandler',
 ...

```

Many of the not-very-useful (private to [`Mock`](https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock "unittest.mock.Mock") rather than the thing being mocked) underscore and double underscore prefixed attributes have been filtered from the result of calling [`dir()`](https://docs.python.org/3/library/functions.html#dir "dir") on a [`Mock`](https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock "unittest.mock.Mock"). If you dislike this behaviour you can switch it off by setting the module level switch [`FILTER_DIR`](https://docs.python.org/3/library/unittest.mock.html#unittest.mock.FILTER_DIR "unittest.mock.FILTER_DIR"):
>>>```
>>> fromunittestimport mock
>>> mock.FILTER_DIR = False
>>> dir(mock.Mock())
['_NonCallableMock__get_return_value',
 '_NonCallableMock__get_side_effect',
 '_NonCallableMock__return_value_doc',
 '_NonCallableMock__set_return_value',
 '_NonCallableMock__set_side_effect',
 '__call__',
 '__class__',
 ...