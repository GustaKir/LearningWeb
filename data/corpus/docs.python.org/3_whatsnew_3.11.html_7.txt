Title: Python 3.11 new features and changes
URL: https://docs.python.org/3/whatsnew/3.11.html
Summary: Highlights changes in Python 3.11, including the indefinite postponement of PEP 563 regarding postponed evaluation of annotations. Additional language changes include new capabilities for starred unpacking expressions.
---

```

See [**PEP 681**](https://peps.python.org/pep-0681/) for more details.
(Contributed by Jelle Zijlstra in [gh-91860](https://github.com/python/cpython/issues/91860). PEP written by Erik De Bonte and Eric Traut.)
### PEP 563 may not be the future[¶](https://docs.python.org/3/whatsnew/3.11.html#pep-563-may-not-be-the-future "Link to this heading")
[**PEP 563**](https://peps.python.org/pep-0563/) Postponed Evaluation of Annotations (the `from __future__ import annotations` [future statement](https://docs.python.org/3/reference/simple_stmts.html#future)) that was originally planned for release in Python 3.10 has been put on hold indefinitely. See [this message from the Steering Council](https://mail.python.org/archives/list/python-dev@python.org/message/VIZEBX5EYMSYIJNDBF6DMUMZOCWHARSO/) for more information.
## Other Language Changes[¶](https://docs.python.org/3/whatsnew/3.11.html#other-language-changes "Link to this heading")
  * Starred unpacking expressions can now be used in [`for`](https://docs.python.org/3/reference/compound_stmts.html#for) statements. (See [bpo-46725](https://bugs.python.org/issue?@action=redirect&bpo=46725) for more details.)
  * Asynchronous [comprehensions](https://docs.python.org/3/reference/expressions.html#comprehensions) are now allowed inside comprehensions in [asynchronous functions](https://docs.python.org/3/reference/compound_stmts.html#async-def). Outer comprehensions implicitly become asynchronous in this case. (Contributed by Serhiy Storchaka in [bpo-33346](https://bugs.python.org/issue?@action=redirect&bpo=33346).)
  * A [`TypeError`](https://docs.python.org/3/library/exceptions.html#TypeError "TypeError") is now raised instead of an [`AttributeError`](https://docs.python.org/3/library/exceptions.html#AttributeError "AttributeError") in [`with`](https://docs.python.org/3/reference/compound_stmts.html#with) statements and [`contextlib.ExitStack.enter_context()`](https://docs.python.org/3/library/contextlib.html#contextlib.ExitStack.enter_context "contextlib.ExitStack.enter_context") for objects that do not support the [context manager](https://docs.python.org/3/glossary.html#term-context-manager) protocol, and in [`async with`](https://docs.python.org/3/reference/compound_stmts.html#async-with) statements and [`contextlib.AsyncExitStack.enter_async_context()`](https://docs.python.org/3/library/contextlib.html#contextlib.AsyncExitStack.enter_async_context "contextlib.AsyncExitStack.enter_async_context") for objects not supporting the [asynchronous context manager](https://docs.python.org/3/glossary.html#term-asynchronous-context-manager) protocol. (Contributed by Serhiy Storchaka in [bpo-12022](https://bugs.python.org/issue?@action=redirect&bpo=12022) and [bpo-44471](https://bugs.python.org/issue?@action=redirect&bpo=44471).)
  * Added [`object.__getstate__()`](https://docs.python.org/3/library/pickle.html#object.__getstate__ "object.__getstate__"), which provides the default implementation of the `__getstate__()` method. [`copy`](https://docs.python.org/3/library/copy.html#module-copy "copy: Shallow and deep copy operations.")ing and [`pickle`](https://docs.python.org/3/library/pickle.html#module-pickle "pickle: Convert Python objects to streams of bytes and back.")ing instances of subclasses of builtin types [`bytearray`](https://docs.python.org/3/library/stdtypes.html#bytearray "bytearray"), [`set`](https://docs.python.org/3/library/stdtypes.html#set "set"), [`frozenset`](https://docs.python.org/3/library/stdtypes.html#frozenset "frozenset"), [`collections.OrderedDict`](https://docs.python.org/3/library/collections.html#collections.OrderedDict "collections.OrderedDict"), [`collections.deque`](https://docs.python.org/3/library/collections.html#collections.deque "collections.deque"), [`weakref.WeakSet`](https://docs.python.org/3/library/weakref.html#weakref.WeakSet "weakref.WeakSet"), and [`datetime.tzinfo`](https://docs.python.org/3/library/datetime.html#datetime.tzinfo "datetime.tzinfo") now copies and pickles instance attributes implemented as [slots](https://docs.python.org/3/glossary.html#term-__slots__). This change has an unintended side effect: It trips up a small minority of existing Python projects not expecting [`object.__getstate__()`](https://docs.python.org/3/library/pickle.html#object.__getstate__ "object.__getstate__") to exist. See the later comments on [gh-70766](https://github.com/python/cpython/issues/70766) for discussions of what workarounds such code may need. (Contributed by Serhiy Storchaka in [bpo-26579](https://bugs.python.org/issue?@action=redirect&bpo=26579).)