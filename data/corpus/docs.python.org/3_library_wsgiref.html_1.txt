Title: wsgiref — WSGI Utilities and Reference Implementation
URL: https://docs.python.org/3/library/wsgiref.html
Summary: The `wsgiref` module provides a reference implementation of the Web Server Gateway Interface (WSGI), a standard that facilitates communication between web servers and Python web applications. While web server and framework authors should understand WSGI in detail, users can install WSGI applications without needing comprehensive knowledge of it.
---

# `wsgiref` — WSGI Utilities and Reference Implementation[¶](https://docs.python.org/3/library/wsgiref.html#module-wsgiref "Link to this heading")
**Source code:** [Lib/wsgiref](https://github.com/python/cpython/tree/3.13/Lib/wsgiref)
The Web Server Gateway Interface (WSGI) is a standard interface between web server software and web applications written in Python. Having a standard interface makes it easy to use an application that supports WSGI with a number of different web servers.
Only authors of web servers and programming frameworks need to know every detail and corner case of the WSGI design. You don’t need to understand every detail of WSGI just to install a WSGI application or to write a web application using an existing framework.
[`wsgiref`](https://docs.python.org/3/library/wsgiref.html#module-wsgiref "wsgiref: WSGI Utilities and Reference Implementation.") is a reference implementation of the WSGI specification that can be used to add WSGI support to a web server or framework. It provides utilities for manipulating WSGI environment variables and response headers, base classes for implementing WSGI servers, a demo HTTP server that serves WSGI applications, types for static type checking, and a validation tool that checks WSGI servers and applications for conformance to the WSGI specification ([**PEP 3333**](https://peps.python.org/pep-3333/)).
See [wsgi.readthedocs.io](https://wsgi.readthedocs.io/) for more information about WSGI, and links to tutorials and other resources.
## [`wsgiref.util`](https://docs.python.org/3/library/wsgiref.html#module-wsgiref.util "wsgiref.util: WSGI environment utilities.") – WSGI environment utilities[¶](https://docs.python.org/3/library/wsgiref.html#module-wsgiref.util "Link to this heading")
This module provides a variety of utility functions for working with WSGI environments. A WSGI environment is a dictionary containing HTTP request variables as described in [**PEP 3333**](https://peps.python.org/pep-3333/). All of the functions taking an _environ_ parameter expect a WSGI-compliant dictionary to be supplied; please see [**PEP 3333**](https://peps.python.org/pep-3333/) for a detailed specification and [`WSGIEnvironment`](https://docs.python.org/3/library/wsgiref.html#wsgiref.types.WSGIEnvironment "wsgiref.types.WSGIEnvironment") for a type alias that can be used in type annotations. 

wsgiref.util.guess_scheme(_environ_)[¶](https://docs.python.org/3/library/wsgiref.html#wsgiref.util.guess_scheme "Link to this definition")
    
Return a guess for whether `wsgi.url_scheme` should be “http” or “https”, by checking for a `HTTPS` environment variable in the _environ_ dictionary. The return value is a string.
This function is useful when creating a gateway that wraps CGI or a CGI-like protocol such as FastCGI. Typically, servers providing such protocols will include a `HTTPS` variable with a value of “1”, “yes”, or “on” when a request is received via SSL. So, this function returns “https” if such a value is found, and “http” otherwise. 

wsgiref.util.request_uri(_environ_ , _include_query =True_)[¶](https://docs.python.org/3/library/wsgiref.html#wsgiref.util.request_uri "Link to this definition")
    
Return the full request URI, optionally including the query string, using the algorithm found in the “URL Reconstruction” section of [**PEP 3333**](https://peps.python.org/pep-3333/). If _include_query_ is false, the query string is not included in the resulting URI. 

wsgiref.util.application_uri(_environ_)[¶](https://docs.python.org/3/library/wsgiref.html#wsgiref.util.application_uri "Link to this definition")
    
Similar to [`request_uri()`](https://docs.python.org/3/library/wsgiref.html#wsgiref.util.request_uri "wsgiref.util.request_uri"), except that the `PATH_INFO` and `QUERY_STRING` variables are ignored. The result is the base URI of the application object addressed by the request.