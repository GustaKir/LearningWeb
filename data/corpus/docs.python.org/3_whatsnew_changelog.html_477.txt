Title: Python Changelog - Recent Bug Fixes and Enhancements
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section details recent improvements and bug fixes in Python, including updates to the shared memory name handling, the addition of a context manager for catching threading exceptions, and modifications to the concurrent futures and multiprocessing tests related to ForkServer instance management.
---

date and time types.") module. Patch by Joannah Nanjekye.
  * [bpo-37558](https://bugs.python.org/issue?@action=redirect&bpo=37558): Fix test_shared_memory_cleaned_after_process_termination name handling
  * [bpo-37526](https://bugs.python.org/issue?@action=redirect&bpo=37526): Add `test.support.catch_threading_exception()`: context manager catching [`threading.Thread`](https://docs.python.org/3/library/threading.html#threading.Thread "threading.Thread") exception using [`threading.excepthook()`](https://docs.python.org/3/library/threading.html#threading.excepthook "threading.excepthook").
  * [bpo-37421](https://bugs.python.org/issue?@action=redirect&bpo=37421): test_concurrent_futures now explicitly stops the ForkServer instance if it’s running.
  * [bpo-37421](https://bugs.python.org/issue?@action=redirect&bpo=37421): multiprocessing tests now stop the ForkServer instance if it’s running: close the “alive” file descriptor to ask the server to stop and then remove its UNIX address.
  * [bpo-37421](https://bugs.python.org/issue?@action=redirect&bpo=37421): test_distutils.test_build_ext() is now able to remove the temporary directory on Windows: don’t import the newly built C extension (“xx”) in the current process, but test it in a separated process.
  * [bpo-37421](https://bugs.python.org/issue?@action=redirect&bpo=37421): test_concurrent_futures now cleans up multiprocessing to remove immediately temporary directories created by multiprocessing.util.get_temp_dir().
  * [bpo-37421](https://bugs.python.org/issue?@action=redirect&bpo=37421): test_winconsoleio doesn’t leak a temporary file anymore: use tempfile.TemporaryFile() to remove it when the test completes.
  * [bpo-37421](https://bugs.python.org/issue?@action=redirect&bpo=37421): multiprocessing tests now explicitly call `_run_finalizers()` to immediately remove temporary directories created by tests.
  * [bpo-37421](https://bugs.python.org/issue?@action=redirect&bpo=37421): urllib.request tests now call [`urlcleanup()`](https://docs.python.org/3/library/urllib.request.html#urllib.request.urlcleanup "urllib.request.urlcleanup") to remove temporary files created by `urlretrieve()` tests and to clear the `_opener` global variable set by `urlopen()` and functions calling indirectly `urlopen()`.
  * [bpo-37472](https://bugs.python.org/issue?@action=redirect&bpo=37472): Remove `Lib/test/outstanding_bugs.py`.
  * [bpo-37199](https://bugs.python.org/issue?@action=redirect&bpo=37199): Fix test failures when IPv6 is unavailable or disabled.
  * [bpo-19696](https://bugs.python.org/issue?@action=redirect&bpo=19696): Replace deprecated method “random.choose” with “random.choice” in “test_pkg_import.py”.
  * [bpo-37335](https://bugs.python.org/issue?@action=redirect&bpo=37335): Remove no longer necessary code from c locale coercion tests
  * [bpo-37421](https://bugs.python.org/issue?@action=redirect&bpo=37421): Fix test_shutil to no longer leak temporary files.
  * [bpo-37411](https://bugs.python.org/issue?@action=redirect&bpo=37411): Fix test_wsgiref.testEnviron() to no longer depend on the environment variables (don’t fail if “X” variable is set).
  * [bpo-37400](https://bugs.python.org/issue?@action=redirect&bpo=37400): Fix test_os.test_chown(): use os.getgroups() rather than grp.getgrall() to get groups. Rename also the test to test_chown_gid().
  * [bpo-37359](https://bugs.python.org/issue?@action=redirect&bpo=37359): Add –cleanup option to python3 -m test to remove `test_python_*` directories of previous failed jobs. Add “make cleantest” to run `python3 -m test --cleanup`.
  * [bpo-37362](https://bugs.python.org/issue?@action=redirect&bpo=37362): test_gdb no longer fails if it gets an “unexpected” message on stderr: it now ignores stderr. The purpose of test_gdb is to test that python-gdb.py commands work as expected, not to test gdb.
  * [bpo-35998](https://bugs.python.org/issue?@action=redirect&bpo=35998): Avoid TimeoutError in test_asyncio: test_start_tls_server_1()
  * [bpo-37278](https://bugs.python.org/issue?@action=redirect&bpo=37278): Fix test_asyncio ProactorLoopCtrlC: join the thread to prevent leaking a running thread and leaking a reference.
  * [bpo-37261](https://bugs.python.org/issue?@action=redirect&bpo=37261): Fix [`test.support.catch_unraisable_exception()`](https://docs.python.org/3/library/test.html#test.support.catch_unraisable_exception "test.support.catch_unraisable_exception"): its __exit__() method now ignores unraisable exception raised when clearing its `unraisable` attribute.
  * [bpo-37069](https://bugs.python.org/issue?@action=redirect&bpo=37069): regrtest now uses [`sys.unraisablehook()`](https://docs.python.org/3/library/sys.html#sys.unraisablehook "sys.unraisablehook") to mark a test as “environment altered” (ENV_CHANGED) if it emits an “unraisable exception”.