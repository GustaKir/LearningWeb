Title: Built-in Exceptions in Python
URL: https://docs.python.org/3/library/exceptions.html
Summary: This section of the Python documentation covers the various built-in exceptions available in Python, including their context, inheritance from built-in exceptions, base classes, and concrete exceptions such as OS-specific errors.
---

[ ![Python logo](https://docs.python.org/3/_static/py.svg) ](https://www.python.org/) dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
Theme  Auto Light Dark
### [Table of Contents](https://docs.python.org/3/contents.html)
  * [Built-in Exceptions](https://docs.python.org/3/library/exceptions.html)
    * [Exception context](https://docs.python.org/3/library/exceptions.html#exception-context)
    * [Inheriting from built-in exceptions](https://docs.python.org/3/library/exceptions.html#inheriting-from-built-in-exceptions)
    * [Base classes](https://docs.python.org/3/library/exceptions.html#base-classes)
    * [Concrete exceptions](https://docs.python.org/3/library/exceptions.html#concrete-exceptions)
      * [OS exceptions](https://docs.python.org/3/library/exceptions.html#os-exceptions)
    * [Warnings](https://docs.python.org/3/library/exceptions.html#warnings)
    * [Exception groups](https://docs.python.org/3/library/exceptions.html#exception-groups)
    * [Exception hierarchy](https://docs.python.org/3/library/exceptions.html#exception-hierarchy)


#### Previous topic
[Built-in Types](https://docs.python.org/3/library/stdtypes.html "previous chapter")
#### Next topic
[Text Processing Services](https://docs.python.org/3/library/text.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/exceptions.rst)


### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/library/text.html "Text Processing Services") |
  * [previous](https://docs.python.org/3/library/stdtypes.html "Built-in Types") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [The Python Standard Library](https://docs.python.org/3/library/index.html) »
  * [Built-in Exceptions](https://docs.python.org/3/library/exceptions.html)
  * | 
  * Theme  Auto Light Dark |


# Built-in Exceptions[¶](https://docs.python.org/3/library/exceptions.html#built-in-exceptions "Link to this heading")
In Python, all exceptions must be instances of a class that derives from [`BaseException`](https://docs.python.org/3/library/exceptions.html#BaseException "BaseException"). In a [`try`](https://docs.python.org/3/reference/compound_stmts.html#try) statement with an [`except`](https://docs.python.org/3/reference/compound_stmts.html#except) clause that mentions a particular class, that clause also handles any exception classes derived from that class (but not exception classes from which _it_ is derived). Two exception classes that are not related via subclassing are never equivalent, even if they have the same name.
The built-in exceptions listed in this chapter can be generated by the interpreter or built-in functions. Except where mentioned, they have an “associated value” indicating the detailed cause of the error. This may be a string or a tuple of several items of information (e.g., an error code and a string explaining the code). The associated value is usually passed as arguments to the exception class’s constructor.
User code can raise built-in exceptions. This can be used to test an exception handler or to report an error condition “just like” the situation in which the interpreter raises the same exception; but beware that there is nothing to prevent user code from raising an inappropriate error.
The built-in exception classes can be subclassed to define new exceptions; programmers are encouraged to derive new exceptions from the [`Exception`](https://docs.python.org/3/library/exceptions.html#Exception "Exception") class or one of its subclasses, and not from [`BaseException`](https://docs.python.org/3/library/exceptions.html#BaseException "BaseException"). More information on defining exceptions is available in the Python Tutorial under [User-defined Exceptions](https://docs.python.org/3/tutorial/errors.html#tut-userexceptions).
## Exception context[¶](https://docs.python.org/3/library/exceptions.html#exception-context "Link to this heading")
Three attributes on exception objects provide information about the context in which the exception was raised: 

BaseException.__context__[¶](https://docs.python.org/3/library/exceptions.html#BaseException.__context__ "Link to this definition")