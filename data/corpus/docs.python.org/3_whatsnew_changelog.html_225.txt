Title: Python 3.11 Changelog - Performance Improvements and Fixes
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This document outlines various fixes in Python 3.11, including improvements to debug mode warnings, memory optimization by merging dict pointers, refactoring for configuration building, and preventing crashes in the AST constructor for long expressions.
---

Fixes slowdown in earlier versions of 3.11.
  * [gh-95324](https://github.com/python/cpython/issues/95324): Emit a warning in debug mode if an object does not call [`PyObject_GC_UnTrack()`](https://docs.python.org/3/c-api/gcsupport.html#c.PyObject_GC_UnTrack "PyObject_GC_UnTrack") before deallocation. Patch by Pablo Galindo.
  * [gh-95245](https://github.com/python/cpython/issues/95245): Merge managed dict and values pointer into a single tagged pointer to save one word in the pre-header.
  * [gh-93678](https://github.com/python/cpython/issues/93678): Add cfg_builder struct and refactor the relevant code so that a cfg can be constructed without an instance of the compiler struct.
  * [gh-95185](https://github.com/python/cpython/issues/95185): Prevented crashes in the AST constructor when compiling some absurdly long expressions like `"+0"*1000000`. [`RecursionError`](https://docs.python.org/3/library/exceptions.html#RecursionError "RecursionError") is now raised instead. Patch by Pablo Galindo
  * [gh-93351](https://github.com/python/cpython/issues/93351): [`ast.AST`](https://docs.python.org/3/library/ast.html#ast.AST "ast.AST") node positions are now validated when provided to [`compile()`](https://docs.python.org/3/library/functions.html#compile "compile") and other related functions. If invalid positions are detected, a [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError "ValueError") will be raised.
  * [gh-94438](https://github.com/python/cpython/issues/94438): Fix an issue that caused extended opcode arguments and some conditional pops to be ignored when calculating valid jump targets for assignments to the `f_lineno` attribute of frame objects. In some cases, this could cause inconsistent internal state, resulting in a hard crash of the interpreter.
  * [gh-95060](https://github.com/python/cpython/issues/95060): Undocumented `PyCode_Addr2Location` function now properly returns when `addrq` argument is less than zero.
  * [gh-95113](https://github.com/python/cpython/issues/95113): Replace all `EXTENDED_ARG_QUICK` instructions with basic [`EXTENDED_ARG`](https://docs.python.org/3/library/dis.html#opcode-EXTENDED_ARG) instructions in unquickened code. Consumers of non-adaptive bytecode should be able to handle extended arguments the same way they were handled in CPython 3.10 and older.
  * [gh-91409](https://github.com/python/cpython/issues/91409): Fix incorrect source location info caused by certain optimizations in the bytecode compiler.
  * [gh-95023](https://github.com/python/cpython/issues/95023): Implement [`os.setns()`](https://docs.python.org/3/library/os.html#os.setns "os.setns") and [`os.unshare()`](https://docs.python.org/3/library/os.html#os.unshare "os.unshare") for Linux. Patch by Noam Cohen.
  * [gh-94036](https://github.com/python/cpython/issues/94036): Fix incorrect source location info for some multi-line attribute accesses and method calls.
  * [gh-94938](https://github.com/python/cpython/issues/94938): Fix error detection in some builtin functions when keyword argument name is an instance of a str subclass with overloaded `__eq__` and `__hash__`. Previously it could cause SystemError or other undesired behavior.
  * [gh-94996](https://github.com/python/cpython/issues/94996): [`ast.parse()`](https://docs.python.org/3/library/ast.html#ast.parse "ast.parse") will no longer parse function definitions with positional-only params when passed `feature_version` less than `(3, 8)`. Patch by Shantanu Jain.
  * [gh-94739](https://github.com/python/cpython/issues/94739): Allow jumping within, out of, and across exception handlers in the debugger.
  * [gh-94949](https://github.com/python/cpython/issues/94949): [`ast.parse()`](https://docs.python.org/3/library/ast.html#ast.parse "ast.parse") will no longer parse parenthesized context managers when passed `feature_version` less than `(3, 9)`. Patch by Shantanu Jain.
  * [gh-94947](https://github.com/python/cpython/issues/94947): [`ast.parse()`](https://docs.python.org/3/library/ast.html#ast.parse "ast.parse") will no longer parse assignment expressions when passed `feature_version` less than `(3, 8)`. Patch by Shantanu Jain.
  * [gh-91256](https://github.com/python/cpython/issues/91256): Ensures the program name is known for help text during interpreter startup.
  * [gh-94869](https://github.com/python/cpython/issues/94869): Fix the column offsets for some expressions in multi-line f-strings [`ast`](https://docs.python.org/3/library/ast.html#module-ast "ast: Abstract Syntax Tree classes and manipulation.") nodes.