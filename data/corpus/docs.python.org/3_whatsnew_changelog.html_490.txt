Title: Enhancements in asyncio and threading modules
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This document chunk discusses two notable changes in Python's asyncio and threading libraries. First, it mentions the modification of asyncio.CancelledError to be a BaseException, which helps prevent common cancellation issues in asyncio tasks. Secondly, it introduces a new `threading.excepthook()` function to manage uncaught exceptions in threads, allowing for customization of error handling.
---

info(‘socket’)
  * [bpo-32528](https://bugs.python.org/issue?@action=redirect&bpo=32528): Make asyncio.CancelledError a BaseException.
This will address the common mistake many asyncio users make: an “except Exception” clause breaking Tasks cancellation.
In addition to this change, we stop inheriting asyncio.TimeoutError and asyncio.InvalidStateError from their concurrent.futures.* counterparts. There’s no point for these exceptions to share the inheritance chain.
  * [bpo-1230540](https://bugs.python.org/issue?@action=redirect&bpo=1230540): Add a new [`threading.excepthook()`](https://docs.python.org/3/library/threading.html#threading.excepthook "threading.excepthook") function which handles uncaught [`threading.Thread.run()`](https://docs.python.org/3/library/threading.html#threading.Thread.run "threading.Thread.run") exception. It can be overridden to control how uncaught [`threading.Thread.run()`](https://docs.python.org/3/library/threading.html#threading.Thread.run "threading.Thread.run") exceptions are handled.
  * [bpo-36996](https://bugs.python.org/issue?@action=redirect&bpo=36996): Handle [`unittest.mock.patch()`](https://docs.python.org/3/library/unittest.mock.html#unittest.mock.patch "unittest.mock.patch") used as a decorator on async functions.
  * [bpo-37008](https://bugs.python.org/issue?@action=redirect&bpo=37008): Add support for calling [`next()`](https://docs.python.org/3/library/functions.html#next "next") with the mock resulting from [`unittest.mock.mock_open()`](https://docs.python.org/3/library/unittest.mock.html#unittest.mock.mock_open "unittest.mock.mock_open")
  * [bpo-27737](https://bugs.python.org/issue?@action=redirect&bpo=27737): Allow whitespace only header encoding in `email.header` - by Batuhan Taskaya
  * [bpo-36969](https://bugs.python.org/issue?@action=redirect&bpo=36969): PDB command `args` now display positional only arguments. Patch contributed by Rémi Lapeyre.
  * [bpo-36969](https://bugs.python.org/issue?@action=redirect&bpo=36969): PDB command `args` now display keyword only arguments. Patch contributed by Rémi Lapeyre.
  * [bpo-36983](https://bugs.python.org/issue?@action=redirect&bpo=36983): Add missing names to `typing.__all__`: `ChainMap`, `ForwardRef`, `OrderedDict` - by Anthony Sottile.
  * [bpo-36972](https://bugs.python.org/issue?@action=redirect&bpo=36972): Add SupportsIndex protocol to the typing module to allow type checking to detect classes that can be passed to `hex()`, `oct()` and `bin()`.
  * [bpo-32972](https://bugs.python.org/issue?@action=redirect&bpo=32972): Implement `unittest.IsolatedAsyncioTestCase` to help testing asyncio-based code.
  * [bpo-36952](https://bugs.python.org/issue?@action=redirect&bpo=36952): [`fileinput.input()`](https://docs.python.org/3/library/fileinput.html#fileinput.input "fileinput.input") and [`fileinput.FileInput`](https://docs.python.org/3/library/fileinput.html#fileinput.FileInput "fileinput.FileInput") **bufsize** argument has been removed (was deprecated and ignored since Python 3.6), and as a result the **mode** and **openhook** arguments have been made keyword-only.
  * [bpo-36952](https://bugs.python.org/issue?@action=redirect&bpo=36952): Starting with Python 3.3, importing ABCs from [`collections`](https://docs.python.org/3/library/collections.html#module-collections "collections: Container datatypes") is deprecated, and import should be done from [`collections.abc`](https://docs.python.org/3/library/collections.abc.html#module-collections.abc "collections.abc: Abstract base classes for containers"). Still being able to import from [`collections`](https://docs.python.org/3/library/collections.html#module-collections "collections: Container datatypes") was marked for removal in 3.8, but has been delayed to 3.9; documentation and `DeprecationWarning` clarified.
  * [bpo-36949](https://bugs.python.org/issue?@action=redirect&bpo=36949): Implement __repr__ for WeakSet objects.
  * [bpo-36948](https://bugs.python.org/issue?@action=redirect&bpo=36948): Fix [`NameError`](https://docs.python.org/3/library/exceptions.html#NameError "NameError") in [`urllib.request.URLopener.retrieve()`](https://docs.python.org/3/library/urllib.request.html#urllib.request.URLopener.retrieve "urllib.request.URLopener.retrieve"). Patch by Karthikeyan Singaravelan.
  * [bpo-33524](https://bugs.python.org/issue?@action=redirect&bpo=33524): Fix the folding of email header when the max_line_length is 0 or None and the header contains non-ascii characters.