Title: IDLE Updates in Python
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: Recent updates to IDLE include enhancements for Windows DPI scaling, improved editor navigation with context line clicking, the adoption of a read-only text widget for code context, and changes to text scrolling behavior for better line visibility.
---

### IDLE[¶](https://docs.python.org/3/whatsnew/changelog.html#id491 "Link to this heading")
  * [bpo-33656](https://bugs.python.org/issue?@action=redirect&bpo=33656): On Windows, add API call saying that tk scales for DPI. On Windows 8.1+ or 10, with DPI compatibility properties of the Python binary unchanged, and a monitor resolution greater than 96 DPI, this should make text and lines sharper. It should otherwise have no effect.
  * [bpo-33768](https://bugs.python.org/issue?@action=redirect&bpo=33768): Clicking on a context line moves that line to the top of the editor window.
  * [bpo-33763](https://bugs.python.org/issue?@action=redirect&bpo=33763): IDLE: Use read-only text widget for code context instead of label widget.
  * [bpo-33664](https://bugs.python.org/issue?@action=redirect&bpo=33664): Scroll IDLE editor text by lines. Previously, the mouse wheel and scrollbar slider moved text by a fixed number of pixels, resulting in partial lines at the top of the editor box. The change also applies to the shell and grep output windows, but not to read-only text views.
  * [bpo-33679](https://bugs.python.org/issue?@action=redirect&bpo=33679): Enable theme-specific color configuration for Code Context. Use the Highlights tab to see the setting for built-in themes or add settings to custom themes.
  * [bpo-33642](https://bugs.python.org/issue?@action=redirect&bpo=33642): Display up to maxlines non-blank lines for Code Context. If there is no current context, show a single blank line.


## Python 3.7.0 beta 5[¶](https://docs.python.org/3/whatsnew/changelog.html#python-3-7-0-beta-5 "Link to this heading")
_Release date: 2018-05-30_
### Core and Builtins[¶](https://docs.python.org/3/whatsnew/changelog.html#id492 "Link to this heading")
  * [bpo-33622](https://bugs.python.org/issue?@action=redirect&bpo=33622): Fixed a leak when the garbage collector fails to add an object with the `__del__` method or referenced by it into the [`gc.garbage`](https://docs.python.org/3/library/gc.html#gc.garbage "gc.garbage") list. [`PyGC_Collect()`](https://docs.python.org/3/c-api/gcsupport.html#c.PyGC_Collect "PyGC_Collect") can now be called when an exception is set and preserves it.
  * [bpo-33509](https://bugs.python.org/issue?@action=redirect&bpo=33509): Fix module_globals parameter of warnings.warn_explicit(): don’t crash if module_globals is not a dict.
  * [bpo-20104](https://bugs.python.org/issue?@action=redirect&bpo=20104): The new `os.posix_spawn` added in 3.7.0b1 was removed as we are still working on what the API should look like. Expect this in 3.8 instead.
  * [bpo-33475](https://bugs.python.org/issue?@action=redirect&bpo=33475): Fixed miscellaneous bugs in converting annotations to strings and optimized parentheses in the string representation.
  * [bpo-33391](https://bugs.python.org/issue?@action=redirect&bpo=33391): Fix a leak in set_symmetric_difference().
  * [bpo-28055](https://bugs.python.org/issue?@action=redirect&bpo=28055): Fix unaligned accesses in siphash24(). Patch by Rolf Eike Beer.
  * [bpo-32911](https://bugs.python.org/issue?@action=redirect&bpo=32911): Due to unexpected compatibility issues discovered during downstream beta testing, reverted [bpo-29463](https://bugs.python.org/issue?@action=redirect&bpo=29463). `docstring` field is removed from Module, ClassDef, FunctionDef, and AsyncFunctionDef ast nodes which was added in 3.7a1. Docstring expression is restored as a first statement in their body. Based on patch by Inada Naoki.
  * [bpo-21983](https://bugs.python.org/issue?@action=redirect&bpo=21983): Fix a crash in `ctypes.cast()` in case the type argument is a ctypes structured data type. Patch by Eryk Sun and Oren Milman.