Title: Python 3 Library Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section details updates to the Python 3 library including optimizations in hashing for `inspect.Parameter`, bug fixes in `argparse.ArgumentParser.add_argument()`, enhancements to `platform.platform()`, and the addition of `mmap.MAP_ALIGNED_SUPER`.
---

### Library[¶](https://docs.python.org/3/whatsnew/changelog.html#id162 "Link to this heading")
  * [gh-102302](https://github.com/python/cpython/issues/102302): Micro-optimise hashing of [`inspect.Parameter`](https://docs.python.org/3/library/inspect.html#inspect.Parameter "inspect.Parameter"), reducing the time it takes to hash an instance by around 40%.
  * [gh-101979](https://github.com/python/cpython/issues/101979): Fix a bug where parentheses in the `metavar` argument to [`argparse.ArgumentParser.add_argument()`](https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser.add_argument "argparse.ArgumentParser.add_argument") were dropped. Patch by Yeojin Kim.
  * [gh-91038](https://github.com/python/cpython/issues/91038): [`platform.platform()`](https://docs.python.org/3/library/platform.html#platform.platform "platform.platform") now has boolean default arguments.
  * [gh-81652](https://github.com/python/cpython/issues/81652): Add [`mmap.MAP_ALIGNED_SUPER`](https://docs.python.org/3/library/mmap.html#mmap.MAP_ALIGNED_SUPER "mmap.MAP_ALIGNED_SUPER") FreeBSD and [`mmap.MAP_CONCEAL`](https://docs.python.org/3/library/mmap.html#mmap.MAP_CONCEAL "mmap.MAP_CONCEAL") OpenBSD constants to [`mmap`](https://docs.python.org/3/library/mmap.html#module-mmap "mmap: Interface to memory-mapped files for Unix and Windows."). Patch by Yeojin Kim.
  * [gh-102179](https://github.com/python/cpython/issues/102179): Fix [`os.dup2()`](https://docs.python.org/3/library/os.html#os.dup2 "os.dup2") error message for negative fds.
  * [gh-101961](https://github.com/python/cpython/issues/101961): For the binary mode, `fileinput.hookcompressed()` doesn’t set the `encoding` value even if the value is `None`. Patch by Gihwan Kim.
  * [gh-101936](https://github.com/python/cpython/issues/101936): The default value of `fp` becomes [`io.BytesIO`](https://docs.python.org/3/library/io.html#io.BytesIO "io.BytesIO") if [`HTTPError`](https://docs.python.org/3/library/urllib.error.html#urllib.error.HTTPError "urllib.error.HTTPError") is initialized without a designated `fp` parameter. Patch by Long Vo.
  * [gh-101566](https://github.com/python/cpython/issues/101566): In zipfile, sync Path with [zipp 3.14](https://zipp.readthedocs.io/en/latest/history.html#v3-14-0), including fix for extractall on the underlying zipfile after being wrapped in `Path`.
  * [gh-97930](https://github.com/python/cpython/issues/97930): Apply changes from [importlib_resources 5.12](https://importlib-resources.readthedocs.io/en/latest/history.html#v5-12-0), including fix for `MultiplexedPath` to support directories in multiple namespaces (python/importlib_resources#265).
  * [gh-101997](https://github.com/python/cpython/issues/101997): Upgrade pip wheel bundled with ensurepip (pip 23.0.1)
  * [gh-99108](https://github.com/python/cpython/issues/99108): The built-in extension modules for [`hashlib`](https://docs.python.org/3/library/hashlib.html#module-hashlib "hashlib: Secure hash and message digest algorithms.") SHA2 algorithms, used when OpenSSL does not provide them, now live in a single internal `_sha2` module instead of separate `_sha256` and `_sha512` modules.
  * [gh-101892](https://github.com/python/cpython/issues/101892): Callable iterators no longer raise [`SystemError`](https://docs.python.org/3/library/exceptions.html#SystemError "SystemError") when the callable object exhausts the iterator but forgets to either return a sentinel value or raise [`StopIteration`](https://docs.python.org/3/library/exceptions.html#StopIteration "StopIteration").
  * [gh-87634](https://github.com/python/cpython/issues/87634): Remove locking behavior from [`functools.cached_property()`](https://docs.python.org/3/library/functools.html#functools.cached_property "functools.cached_property").
  * [gh-97786](https://github.com/python/cpython/issues/97786): Fix potential undefined behaviour in corner cases of floating-point-to-time conversions.
  * [gh-101517](https://github.com/python/cpython/issues/101517): Fixed bug where [`bdb`](https://docs.python.org/3/library/bdb.html#module-bdb "bdb: Debugger framework.") looks up the source line with [`linecache`](https://docs.python.org/3/library/linecache.html#module-linecache "linecache: Provides random access to individual lines from text files.") with a `lineno=None`, which causes it to fail with an unhandled exception.
  * [gh-101773](https://github.com/python/cpython/issues/101773): Optimize [`fractions.Fraction`](https://docs.python.org/3/library/fractions.html#fractions.Fraction "fractions.Fraction") for small components. The private argument `_normalize` of the [`fractions.Fraction`](https://docs.python.org/3/library/fractions.html#fractions.Fraction "fractions.Fraction") constructor has been removed.
  * [gh-101693](https://github.com/python/cpython/issues/101693): In [`sqlite3.Cursor.execute()`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Cursor.execute "sqlite3.Cursor.execute"), [`DeprecationWarning`](http