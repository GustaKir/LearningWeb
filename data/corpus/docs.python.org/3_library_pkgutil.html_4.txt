Title: Package Resource Loading and Name Resolution in Python
URL: https://docs.python.org/3/library/pkgutil.html
Summary: The document discusses how package loading can fail if a loader does not support certain functions like `get_data`, particularly with namespace packages. It also introduces `pkgutil.resolve_name`, a function used to resolve a name to an object within the standard library.
---

```

If the package cannot be located or loaded, or it uses a [loader](https://docs.python.org/3/glossary.html#term-loader) which does not support [`get_data`](https://docs.python.org/3/library/importlib.html#importlib.abc.ResourceLoader.get_data "importlib.abc.ResourceLoader.get_data"), then `None` is returned. In particular, the [loader](https://docs.python.org/3/glossary.html#term-loader) for [namespace packages](https://docs.python.org/3/glossary.html#term-namespace-package) does not support [`get_data`](https://docs.python.org/3/library/importlib.html#importlib.abc.ResourceLoader.get_data "importlib.abc.ResourceLoader.get_data"). 

pkgutil.resolve_name(_name_)[¶](https://docs.python.org/3/library/pkgutil.html#pkgutil.resolve_name "Link to this definition")
    
Resolve a name to an object.
This functionality is used in numerous places in the standard library (see [bpo-12915](https://bugs.python.org/issue?@action=redirect&bpo=12915)) - and equivalent functionality is also in widely used third-party packages such as setuptools, Django and Pyramid.
It is expected that _name_ will be a string in one of the following formats, where W is shorthand for a valid Python identifier and dot stands for a literal period in these pseudo-regexes:
  * `W(.W)*`
  * `W(.W)*:(W(.W)*)?`


The first form is intended for backward compatibility only. It assumes that some part of the dotted name is a package, and the rest is an object somewhere within that package, possibly nested inside other objects. Because the place where the package stops and the object hierarchy starts can’t be inferred by inspection, repeated attempts to import must be done with this form.
In the second form, the caller makes the division point clear through the provision of a single colon: the dotted name to the left of the colon is a package to be imported, and the dotted name to the right is the object hierarchy within that package. Only one import is needed in this form. If it ends with the colon, then a module object is returned.
The function will return an object (which might be a module), or raise one of the following exceptions:
[`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError "ValueError") – if _name_ isn’t in a recognised format.
[`ImportError`](https://docs.python.org/3/library/exceptions.html#ImportError "ImportError") – if an import failed when it shouldn’t have.
[`AttributeError`](https://docs.python.org/3/library/exceptions.html#AttributeError "AttributeError") – If a failure occurred when traversing the object hierarchy within the imported package to get to the desired object.
Added in version 3.9.
#### Previous topic
[`zipimport` — Import modules from Zip archives](https://docs.python.org/3/library/zipimport.html "previous chapter")
#### Next topic
[`modulefinder` — Find modules used by a script](https://docs.python.org/3/library/modulefinder.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/pkgutil.rst)


«
### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/library/modulefinder.html "modulefinder — Find modules used by a script") |
  * [previous](https://docs.python.org/3/library/zipimport.html "zipimport — Import modules from Zip archives") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [The Python Standard Library](https://docs.python.org/3/library/index.html) »
  * [Importing Modules](https://docs.python.org/3/library/modules.html) »
  * [`pkgutil` — Package extension utility](https://docs.python.org/3/library/pkgutil.html)
  * | 
  * Theme  Auto Light Dark |


© [ Copyright ](https://docs.python.org/3/copyright.html) 2001-2025, Python Software Foundation. This page is licensed under the Python Software Foundation License Version 2. Examples, recipes, and other code in the documentation are additionally licensed under the Zero Clause BSD License. See [History and License](https://docs.python.org/license.html) for more information. The Python Software Foundation is a non-profit corporation. [Please donate.](https://www.python.org/psf/donations/) Last updated on Apr 27, 2025 (05:38 UTC). [Found a bug](https://docs.python.org/bugs.html)? Created using [Sphinx](https://www.sphinx-doc.org/) 8.2.3.