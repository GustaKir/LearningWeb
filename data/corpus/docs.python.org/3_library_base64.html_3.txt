Title: base64.a85decode - Ascii85 Decoding in Python
URL: https://docs.python.org/3/library/base64.html
Summary: The `base64.a85decode` function decodes Ascii85 encoded bytes-like objects or ASCII strings. It takes parameters to handle space folding, Adobe-specific formatting, and characters to ignore. The function returns the decoded bytes.
---

base64.a85decode(_b_ , _*_ , _foldspaces =False_, _adobe =False_, _ignorechars =b' \t\n\r\x0b'_)[¶](https://docs.python.org/3/library/base64.html#base64.a85decode "Link to this definition")
    
Decode the Ascii85 encoded [bytes-like object](https://docs.python.org/3/glossary.html#term-bytes-like-object) or ASCII string _b_ and return the decoded [`bytes`](https://docs.python.org/3/library/stdtypes.html#bytes "bytes").
_foldspaces_ is a flag that specifies whether the ‘y’ short sequence should be accepted as shorthand for 4 consecutive spaces (ASCII 0x20). This feature is not supported by the “standard” Ascii85 encoding.
_adobe_ controls whether the input sequence is in Adobe Ascii85 format (i.e. is framed with <~ and ~>).
_ignorechars_ should be a [bytes-like object](https://docs.python.org/3/glossary.html#term-bytes-like-object) or ASCII string containing characters to ignore from the input. This should only contain whitespace characters, and by default contains all whitespace characters in ASCII.
Added in version 3.4. 

base64.b85encode(_b_ , _pad =False_)[¶](https://docs.python.org/3/library/base64.html#base64.b85encode "Link to this definition")
    
Encode the [bytes-like object](https://docs.python.org/3/glossary.html#term-bytes-like-object) _b_ using base85 (as used in e.g. git-style binary diffs) and return the encoded [`bytes`](https://docs.python.org/3/library/stdtypes.html#bytes "bytes").
If _pad_ is true, the input is padded with `b'\0'` so its length is a multiple of 4 bytes before encoding.
Added in version 3.4. 

base64.b85decode(_b_)[¶](https://docs.python.org/3/library/base64.html#base64.b85decode "Link to this definition")
    
Decode the base85-encoded [bytes-like object](https://docs.python.org/3/glossary.html#term-bytes-like-object) or ASCII string _b_ and return the decoded [`bytes`](https://docs.python.org/3/library/stdtypes.html#bytes "bytes"). Padding is implicitly removed, if necessary.
Added in version 3.4. 

base64.z85encode(_s_)[¶](https://docs.python.org/3/library/base64.html#base64.z85encode "Link to this definition")
    
Encode the [bytes-like object](https://docs.python.org/3/glossary.html#term-bytes-like-object) _s_ using Z85 (as used in ZeroMQ) and return the encoded [`bytes`](https://docs.python.org/3/library/stdtypes.html#bytes "bytes"). See [Z85 specification](https://rfc.zeromq.org/spec/32/) for more information.
Added in version 3.13. 

base64.z85decode(_s_)[¶](https://docs.python.org/3/library/base64.html#base64.z85decode "Link to this definition")
    
Decode the Z85-encoded [bytes-like object](https://docs.python.org/3/glossary.html#term-bytes-like-object) or ASCII string _s_ and return the decoded [`bytes`](https://docs.python.org/3/library/stdtypes.html#bytes "bytes"). See [Z85 specification](https://rfc.zeromq.org/spec/32/) for more information.
Added in version 3.13.
The legacy interface: 

base64.decode(_input_ , _output_)[¶](https://docs.python.org/3/library/base64.html#base64.decode "Link to this definition")
    
Decode the contents of the binary _input_ file and write the resulting binary data to the _output_ file. _input_ and _output_ must be [file objects](https://docs.python.org/3/glossary.html#term-file-object). _input_ will be read until `input.readline()` returns an empty bytes object. 

base64.decodebytes(_s_)[¶](https://docs.python.org/3/library/base64.html#base64.decodebytes "Link to this definition")
    
Decode the [bytes-like object](https://docs.python.org/3/glossary.html#term-bytes-like-object) _s_ , which must contain one or more lines of base64 encoded data, and return the decoded [`bytes`](https://docs.python.org/3/library/stdtypes.html#bytes "bytes").
Added in version 3.1. 

base64.encode(_input_ , _output_)[¶](https://docs.python.org/3/library/base64.html#base64.encode "Link to this definition")
    
Encode the contents of the binary _input_ file and write the resulting base64 encoded data to the _output_ file. _input_ and _output_ must be [file objects](https://docs.python.org/3/glossary.html#term-file-object). _input_ will be read until `input.read()` returns an empty bytes object. [`encode()`](https://docs.python.org/3/library/base64.html#base64.encode "base64.encode") inserts a newline character (`b'\n'`) after every 76 bytes of the output, as well as ensuring that the output always ends with a newline, as per [**RFC 2045**](https://datatracker.ietf.org/doc/html/rfc2045.html) (MIME).