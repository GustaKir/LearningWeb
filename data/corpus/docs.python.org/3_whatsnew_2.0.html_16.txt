Title: Python 2.0 Release Notes
URL: https://docs.python.org/3/whatsnew/2.0.html
Summary: Highlights of Python 2.0 include contributions like `xit.register` for exit functions, new Unicode support through modules like `codecs`, `encodings`, and `unicodedata`. The `filecmp` module replaces deprecated modules `cmp`, `cmpcache`, and `dircmp`. Additionally, the `gettext` module provides internationalization and localization support for Python programs.
---

xit.register") with the function to be called on exit. (Contributed by Skip Montanaro.)
  * [`codecs`](https://docs.python.org/3/library/codecs.html#module-codecs "codecs: Encode and decode data and streams."), `encodings`, [`unicodedata`](https://docs.python.org/3/library/unicodedata.html#module-unicodedata "unicodedata: Access the Unicode Database."): Added as part of the new Unicode support.
  * [`filecmp`](https://docs.python.org/3/library/filecmp.html#module-filecmp "filecmp: Compare files efficiently."): Supersedes the old `cmp`, `cmpcache` and `dircmp` modules, which have now become deprecated. (Contributed by Gordon MacMillan and Moshe Zadka.)
  * [`gettext`](https://docs.python.org/3/library/gettext.html#module-gettext "gettext: Multilingual internationalization services."): This module provides internationalization (I18N) and localization (L10N) support for Python programs by providing an interface to the GNU gettext message catalog library. (Integrated by Barry Warsaw, from separate contributions by Martin von Löwis, Peter Funk, and James Henstridge.)
  * `linuxaudiodev`: Support for the `/dev/audio` device on Linux, a twin to the existing `sunaudiodev` module. (Contributed by Peter Bosch, with fixes by Jeremy Hylton.)
  * [`mmap`](https://docs.python.org/3/library/mmap.html#module-mmap "mmap: Interface to memory-mapped files for Unix and Windows."): An interface to memory-mapped files on both Windows and Unix. A file’s contents can be mapped directly into memory, at which point it behaves like a mutable string, so its contents can be read and modified. They can even be passed to functions that expect ordinary strings, such as the [`re`](https://docs.python.org/3/library/re.html#module-re "re: Regular expression operations.") module. (Contributed by Sam Rushing, with some extensions by A.M. Kuchling.)
  * `pyexpat`: An interface to the Expat XML parser. (Contributed by Paul Prescod.)
  * [`robotparser`](https://docs.python.org/3/library/urllib.robotparser.html#module-urllib.robotparser "urllib.robotparser: Load a robots.txt file and answer questions about fetchability of other URLs."): Parse a `robots.txt` file, which is used for writing web spiders that politely avoid certain areas of a web site. The parser accepts the contents of a `robots.txt` file, builds a set of rules from it, and can then answer questions about the fetchability of a given URL. (Contributed by Skip Montanaro.)
  * [`tabnanny`](https://docs.python.org/3/library/tabnanny.html#module-tabnanny "tabnanny: Tool for detecting white space related problems in Python source files in a directory tree."): A module/script to check Python source code for ambiguous indentation. (Contributed by Tim Peters.)
  * `UserString`: A base class useful for deriving objects that behave like strings.
  * [`webbrowser`](https://docs.python.org/3/library/webbrowser.html#module-webbrowser "webbrowser: Easy-to-use controller for web browsers."): A module that provides a platform independent way to launch a web browser on a specific URL. For each platform, various browsers are tried in a specific order. The user can alter which browser is launched by setting the _BROWSER_ environment variable. (Originally inspired by Eric S. Raymond’s patch to [`urllib`](https://docs.python.org/3/library/urllib.html#module-urllib "urllib") which added similar functionality, but the final module comes from code originally implemented by Fred Drake as `Tools/idle/BrowserControl.py`, and adapted for the standard library by Fred.)
  * [`_winreg`](https://docs.python.org/3/library/winreg.html#module-winreg "winreg: Routines and objects for manipulating the Windows registry. \(Windows\)"): An interface to the Windows registry. `_winreg` is an adaptation of functions that have been part of PythonWin since 1995, but has now been added to the core distribution, and enhanced to support Unicode. `_winreg` was written by Bill Tutt and Mark Hammond.
  * [`zipfile`](https://docs.python.org/3/library/zipfile.html#module-zipfile "zipfile: Read and write ZIP-format archive files."): A module for reading and writing ZIP-format archives. These are archives produced by **PKZIP** on DOS/Windows or **zip** on Unix, not to be confused with **gzip** -format files (which are supported by the [`gzip`](https://docs.python.org/3/library/gzip.html#module-gzip "gzip: Interfaces for gzip compression and decompression using file objects.") module) (Contributed by James C. Ahlstrom.)
  * `imputil`: A module that provides a simpler way for writing customized import hooks, in comparison to the existing `ihooks` module. (Implemented by Greg Stein, with much discussion on python-dev along the way.)