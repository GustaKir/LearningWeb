Title: Python Changelog Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This document lists recent patches and bug fixes for Python, including a fix for a deadlock in `concurrent.futures.ProcessPoolExecutor`, corrections to `pdb` and `bdb` debugging issues, and resolutions for infinite loops during debugging of empty files.
---

Patch by Alex Waygood.
  * [gh-125451](https://github.com/python/cpython/issues/125451): Fix deadlock when [`concurrent.futures.ProcessPoolExecutor`](https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.ProcessPoolExecutor "concurrent.futures.ProcessPoolExecutor") shuts down concurrently with an error when feeding a job to a worker process.
  * [gh-125422](https://github.com/python/cpython/issues/125422): Fixed the bug where [`pdb`](https://docs.python.org/3/library/pdb.html#module-pdb "pdb: The Python debugger for interactive interpreters.") and [`bdb`](https://docs.python.org/3/library/bdb.html#module-bdb "bdb: Debugger framework.") can step into the bottom caller frame.
  * [gh-100141](https://github.com/python/cpython/issues/100141): Fixed the bug where [`pdb`](https://docs.python.org/3/library/pdb.html#module-pdb "pdb: The Python debugger for interactive interpreters.") will be stuck in an infinite loop when debugging an empty file.
  * [gh-125115](https://github.com/python/cpython/issues/125115): Fixed a bug in [`pdb`](https://docs.python.org/3/library/pdb.html#module-pdb "pdb: The Python debugger for interactive interpreters.") where arguments starting with `-` canâ€™t be passed to the debugged script.
  * [gh-53203](https://github.com/python/cpython/issues/53203): Fix [`time.strptime()`](https://docs.python.org/3/library/time.html#time.strptime "time.strptime") for `%c`, `%x` and `%X` formats in many locales that use non-ASCII digits, like Persian, Burmese, Odia and Shan.
  * [gh-125398](https://github.com/python/cpython/issues/125398): Fix the conversion of the `VIRTUAL_ENV` path in the activate script in [`venv`](https://docs.python.org/3/library/venv.html#module-venv "venv: Creation of virtual environments.") when running in Git Bash for Windows.
  * [gh-125316](https://github.com/python/cpython/issues/125316): Fix using [`functools.partial()`](https://docs.python.org/3/library/functools.html#functools.partial "functools.partial") as [`enum.Enum`](https://docs.python.org/3/library/enum.html#enum.Enum "enum.Enum") member. A FutureWarning with suggestion to use [`enum.member()`](https://docs.python.org/3/library/enum.html#enum.member "enum.member") is now emitted when the `partial` instance is used as an enum member.
  * [gh-125245](https://github.com/python/cpython/issues/125245): Fix race condition when importing [`collections.abc`](https://docs.python.org/3/library/collections.abc.html#module-collections.abc "collections.abc: Abstract base classes for containers"), which could incorrectly return an empty module.
  * [gh-125243](https://github.com/python/cpython/issues/125243): Fix data race when creating [`zoneinfo.ZoneInfo`](https://docs.python.org/3/library/zoneinfo.html#zoneinfo.ZoneInfo "zoneinfo.ZoneInfo") objects in the free threading build.
  * [gh-125254](https://github.com/python/cpython/issues/125254): Fix a bug where ArgumentError includes the incorrect ambiguous option in [`argparse`](https://docs.python.org/3/library/argparse.html#module-argparse "argparse: Command-line option and argument parsing library.").
  * [gh-125235](https://github.com/python/cpython/issues/125235): Keep [`tkinter`](https://docs.python.org/3/library/tkinter.html#module-tkinter "tkinter: Interface to Tcl/Tk for graphical user interfaces") TCL paths in venv pointing to base installation on Windows.
  * [gh-61011](https://github.com/python/cpython/issues/61011): Fix inheritance of nested mutually exclusive groups from parent parser in [`argparse.ArgumentParser`](https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser "argparse.ArgumentParser"). Previously, all nested mutually exclusive groups lost their connection to the group containing them and were displayed as belonging directly to the parser.
  * [gh-52551](https://github.com/python/cpython/issues/52551): Fix encoding issues in [`time.strftime()`](https://docs.python.org/3/library/time.html#time.strftime "time.strftime"), the [`strftime()`](https://docs.python.org/3/library/datetime.html#datetime.datetime.strftime "datetime.datetime.strftime") method of the [`datetime`](https://docs.python.org/3/library/datetime.html#module-datetime "datetime: Basic date and time types.") classes [`datetime`](https://docs.python.org/3/library/datetime.html#datetime.datetime "datetime.datetime"), [`date`](https://docs.python.org/3/library/datetime.html#datetime.date "datetime.date") and [`time`](https://docs.python.org/3/library/datetime.html#datetime.time "datetime.time") and formatting of these classes. Characters not encodable in the current locale are now acceptable in the format string. Surrogate pairs and sequence of surrogatescape-encoded bytes are no longer recombinated.