Title: Datetime Comparison Behavior Changes
URL: https://docs.python.org/3/library/datetime.html
Summary: This section discusses changes in the comparison behavior of `datetime` instances in Python. Version 3.3 introduced equality comparisons between aware and naive `datetime` instances without raising `TypeError`. Version 3.13 further modified comparisons between `datetime` and non-`datetime` subclass instances, preventing the automatic conversion of the latter to `date` and allowing customization by overriding special comparison methods.
---

/docs.python.org/3/library/datetime.html#datetime.datetime.tzinfo "datetime.datetime.tzinfo") attributes, the comparison acts as comparands were first converted to UTC datetimes except that the implementation never overflows.


Changed in version 3.3: Equality comparisons between aware and naive [`datetime`](https://docs.python.org/3/library/datetime.html#datetime.datetime "datetime.datetime") instances don’t raise [`TypeError`](https://docs.python.org/3/library/exceptions.html#TypeError "TypeError").
Changed in version 3.13: Comparison between [`datetime`](https://docs.python.org/3/library/datetime.html#datetime.datetime "datetime.datetime") object and an instance of the [`date`](https://docs.python.org/3/library/datetime.html#datetime.date "datetime.date") subclass that is not a `datetime` subclass no longer converts the latter to `date`, ignoring the time part and the time zone. The default behavior can be changed by overriding the special comparison methods in subclasses.
Instance methods: 

datetime.date()[¶](https://docs.python.org/3/library/datetime.html#datetime.datetime.date "Link to this definition")
    
Return [`date`](https://docs.python.org/3/library/datetime.html#datetime.date "datetime.date") object with same year, month and day. 

datetime.time()[¶](https://docs.python.org/3/library/datetime.html#datetime.datetime.time "Link to this definition")
    
Return [`time`](https://docs.python.org/3/library/datetime.html#datetime.time "datetime.time") object with same hour, minute, second, microsecond and fold. [`tzinfo`](https://docs.python.org/3/library/datetime.html#datetime.datetime.tzinfo "datetime.datetime.tzinfo") is `None`. See also method [`timetz()`](https://docs.python.org/3/library/datetime.html#datetime.datetime.timetz "datetime.datetime.timetz").
Changed in version 3.6: The fold value is copied to the returned [`time`](https://docs.python.org/3/library/datetime.html#datetime.time "datetime.time") object. 

datetime.timetz()[¶](https://docs.python.org/3/library/datetime.html#datetime.datetime.timetz "Link to this definition")
    
Return [`time`](https://docs.python.org/3/library/datetime.html#datetime.time "datetime.time") object with same hour, minute, second, microsecond, fold, and tzinfo attributes. See also method [`time()`](https://docs.python.org/3/library/time.html#module-time "time: Time access and conversions.").
Changed in version 3.6: The fold value is copied to the returned [`time`](https://docs.python.org/3/library/datetime.html#datetime.time "datetime.time") object. 

datetime.replace(_year =self.year_, _month =self.month_, _day =self.day_, _hour =self.hour_, _minute =self.minute_, _second =self.second_, _microsecond =self.microsecond_, _tzinfo =self.tzinfo_, _*_ , _fold =0_)[¶](https://docs.python.org/3/library/datetime.html#datetime.datetime.replace "Link to this definition")
    
Return a new [`datetime`](https://docs.python.org/3/library/datetime.html#module-datetime "datetime: Basic date and time types.") object with the same attributes, but with specified parameters updated. Note that `tzinfo=None` can be specified to create a naive datetime from an aware datetime with no conversion of date and time data.
[`datetime`](https://docs.python.org/3/library/datetime.html#datetime.datetime "datetime.datetime") objects are also supported by generic function [`copy.replace()`](https://docs.python.org/3/library/copy.html#copy.replace "copy.replace").
Changed in version 3.6: Added the _fold_ parameter.