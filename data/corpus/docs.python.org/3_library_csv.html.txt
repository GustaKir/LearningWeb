Title: CSV File Reading and Writing
URL: https://docs.python.org/3/library/csv.html
Summary: This section of the documentation covers the Python `csv` module, which facilitates reading and writing CSV files. It includes information on module contents, dialects and formatting parameters, as well as details on reader and writer objects, with examples provided.
---

[ ![Python logo](https://docs.python.org/3/_static/py.svg) ](https://www.python.org/) dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
Theme  Auto Light Dark
### [Table of Contents](https://docs.python.org/3/contents.html)
  * [`csv` — CSV File Reading and Writing](https://docs.python.org/3/library/csv.html)
    * [Module Contents](https://docs.python.org/3/library/csv.html#module-contents)
    * [Dialects and Formatting Parameters](https://docs.python.org/3/library/csv.html#dialects-and-formatting-parameters)
    * [Reader Objects](https://docs.python.org/3/library/csv.html#reader-objects)
    * [Writer Objects](https://docs.python.org/3/library/csv.html#writer-objects)
    * [Examples](https://docs.python.org/3/library/csv.html#examples)


#### Previous topic
[File Formats](https://docs.python.org/3/library/fileformats.html "previous chapter")
#### Next topic
[`configparser` — Configuration file parser](https://docs.python.org/3/library/configparser.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/csv.rst)


### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/library/configparser.html "configparser — Configuration file parser") |
  * [previous](https://docs.python.org/3/library/fileformats.html "File Formats") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [The Python Standard Library](https://docs.python.org/3/library/index.html) »
  * [File Formats](https://docs.python.org/3/library/fileformats.html) »
  * [`csv` — CSV File Reading and Writing](https://docs.python.org/3/library/csv.html)
  * | 
  * Theme  Auto Light Dark |


# `csv` — CSV File Reading and Writing[¶](https://docs.python.org/3/library/csv.html#module-csv "Link to this heading")
**Source code:** [Lib/csv.py](https://github.com/python/cpython/tree/3.13/Lib/csv.py)
The so-called CSV (Comma Separated Values) format is the most common import and export format for spreadsheets and databases. CSV format was used for many years prior to attempts to describe the format in a standardized way in [**RFC 4180**](https://datatracker.ietf.org/doc/html/rfc4180.html). The lack of a well-defined standard means that subtle differences often exist in the data produced and consumed by different applications. These differences can make it annoying to process CSV files from multiple sources. Still, while the delimiters and quoting characters vary, the overall format is similar enough that it is possible to write a single module which can efficiently manipulate such data, hiding the details of reading and writing the data from the programmer.
The [`csv`](https://docs.python.org/3/library/csv.html#module-csv "csv: Write and read tabular data to and from delimited files.") module implements classes to read and write tabular data in CSV format. It allows programmers to say, “write this data in the format preferred by Excel,” or “read data from this file which was generated by Excel,” without knowing the precise details of the CSV format used by Excel. Programmers can also describe the CSV formats understood by other applications or define their own special-purpose CSV formats.
The [`csv`](https://docs.python.org/3/library/csv.html#module-csv "csv: Write and read tabular data to and from delimited files.") module’s [`reader`](https://docs.python.org/3/library/csv.html#csv.reader "csv.reader") and [`writer`](https://docs.python.org/3/library/csv.html#csv.writer "csv.writer") objects read and write sequences. Programmers can also read and write data in dictionary form using the [`DictReader`](https://docs.python.org/3/library/csv.html#csv.DictReader "csv.DictReader") and [`DictWriter`](https://docs.python.org/3/library/csv.html#csv.DictWriter "csv.DictWriter") classes.
See also