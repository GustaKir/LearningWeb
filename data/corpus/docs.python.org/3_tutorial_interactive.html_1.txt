Title: Interactive Input Editing and History Substitution
URL: https://docs.python.org/3/tutorial/interactive.html
Summary: This section describes how certain Python interpreter versions allow for input line editing and history substitution using the GNU Readline library. It details features such as tab completion for variable and module names, which is automatically enabled at startup.
---

# 14. Interactive Input Editing and History Substitution[¶](https://docs.python.org/3/tutorial/interactive.html#interactive-input-editing-and-history-substitution "Link to this heading")
Some versions of the Python interpreter support editing of the current input line and history substitution, similar to facilities found in the Korn shell and the GNU Bash shell. This is implemented using the [GNU Readline](https://tiswww.case.edu/php/chet/readline/rltop.html) library, which supports various styles of editing. This library has its own documentation which we won’t duplicate here.
## 14.1. Tab Completion and History Editing[¶](https://docs.python.org/3/tutorial/interactive.html#tab-completion-and-history-editing "Link to this heading")
Completion of variable and module names is [automatically enabled](https://docs.python.org/3/library/site.html#rlcompleter-config) at interpreter startup so that the `Tab` key invokes the completion function; it looks at Python statement names, the current local variables, and the available module names. For dotted expressions such as `string.a`, it will evaluate the expression up to the final `'.'` and then suggest completions from the attributes of the resulting object. Note that this may execute application-defined code if an object with a [`__getattr__()`](https://docs.python.org/3/reference/datamodel.html#object.__getattr__ "object.__getattr__") method is part of the expression. The default configuration also saves your history into a file named `.python_history` in your user directory. The history will be available again during the next interactive interpreter session.
## 14.2. Alternatives to the Interactive Interpreter[¶](https://docs.python.org/3/tutorial/interactive.html#alternatives-to-the-interactive-interpreter "Link to this heading")
This facility is an enormous step forward compared to earlier versions of the interpreter; however, some wishes are left: It would be nice if the proper indentation were suggested on continuation lines (the parser knows if an [`INDENT`](https://docs.python.org/3/library/token.html#token.INDENT "token.INDENT") token is required next). The completion mechanism might use the interpreter’s symbol table. A command to check (or even suggest) matching parentheses, quotes, etc., would also be useful.
One alternative enhanced interactive interpreter that has been around for quite some time is [IPython](https://ipython.org/), which features tab completion, object exploration and advanced history management. It can also be thoroughly customized and embedded into other applications. Another similar enhanced interactive environment is [bpython](https://bpython-interpreter.org/).
### [Table of Contents](https://docs.python.org/3/contents.html)
  * [14. Interactive Input Editing and History Substitution](https://docs.python.org/3/tutorial/interactive.html)
    * [14.1. Tab Completion and History Editing](https://docs.python.org/3/tutorial/interactive.html#tab-completion-and-history-editing)
    * [14.2. Alternatives to the Interactive Interpreter](https://docs.python.org/3/tutorial/interactive.html#alternatives-to-the-interactive-interpreter)


#### Previous topic
[13. What Now?](https://docs.python.org/3/tutorial/whatnow.html "previous chapter")
#### Next topic
[15. Floating-Point Arithmetic: Issues and Limitations](https://docs.python.org/3/tutorial/floatingpoint.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/tutorial/interactive.rst)


«
### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/tutorial/floatingpoint.html "15. Floating-Point Arithmetic: Issues and Limitations") |
  * [previous](https://docs.python.org/3/tutorial/whatnow.html "13. What Now?") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [The Python Tutorial](https://docs.python.org/3/tutorial/index.html) »
  * [14. Interactive Input Editing and History Substitution](https://docs.python.org/3/tutorial/interactive.html)
  * | 
  * Theme  Auto Light Dark |