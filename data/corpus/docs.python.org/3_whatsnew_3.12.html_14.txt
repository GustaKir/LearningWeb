Title: SQLite3 Enhancements in Python 3.12
URL: https://docs.python.org/3/whatsnew/3.12.html
Summary: This section outlines the additions to the sqlite3 module in Python 3.12, including a new command-line interface contributed by Erlend E. Aasland, the introduction of the autocommit attribute for handling transactions per PEP 249, and new functions for improved database management.
---

### sqlite3[¶](https://docs.python.org/3/whatsnew/3.12.html#sqlite3 "Link to this heading")
  * Add a [command-line interface](https://docs.python.org/3/library/sqlite3.html#sqlite3-cli). (Contributed by Erlend E. Aasland in [gh-77617](https://github.com/python/cpython/issues/77617).)
  * Add the [`sqlite3.Connection.autocommit`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.autocommit "sqlite3.Connection.autocommit") attribute to [`sqlite3.Connection`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection "sqlite3.Connection") and the _autocommit_ parameter to [`sqlite3.connect()`](https://docs.python.org/3/library/sqlite3.html#sqlite3.connect "sqlite3.connect") to control [**PEP 249**](https://peps.python.org/pep-0249/)-compliant [transaction handling](https://docs.python.org/3/library/sqlite3.html#sqlite3-transaction-control-autocommit). (Contributed by Erlend E. Aasland in [gh-83638](https://github.com/python/cpython/issues/83638).)
  * Add _entrypoint_ keyword-only parameter to [`sqlite3.Connection.load_extension()`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.load_extension "sqlite3.Connection.load_extension"), for overriding the SQLite extension entry point. (Contributed by Erlend E. Aasland in [gh-103015](https://github.com/python/cpython/issues/103015).)
  * Add [`sqlite3.Connection.getconfig()`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.getconfig "sqlite3.Connection.getconfig") and [`sqlite3.Connection.setconfig()`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.setconfig "sqlite3.Connection.setconfig") to [`sqlite3.Connection`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection "sqlite3.Connection") to make configuration changes to a database connection. (Contributed by Erlend E. Aasland in [gh-103489](https://github.com/python/cpython/issues/103489).)


### statistics[¶](https://docs.python.org/3/whatsnew/3.12.html#statistics "Link to this heading")
  * Extend [`statistics.correlation()`](https://docs.python.org/3/library/statistics.html#statistics.correlation "statistics.correlation") to include as a `ranked` method for computing the Spearman correlation of ranked data. (Contributed by Raymond Hettinger in [gh-95861](https://github.com/python/cpython/issues/95861).)


### sys[¶](https://docs.python.org/3/whatsnew/3.12.html#sys "Link to this heading")
  * Add the [`sys.monitoring`](https://docs.python.org/3/library/sys.monitoring.html#module-sys.monitoring "sys.monitoring: Access and control event monitoring") namespace to expose the new [PEP 669](https://docs.python.org/3/whatsnew/3.12.html#whatsnew312-pep669) monitoring API. (Contributed by Mark Shannon in [gh-103082](https://github.com/python/cpython/issues/103082).)
  * Add [`sys.activate_stack_trampoline()`](https://docs.python.org/3/library/sys.html#sys.activate_stack_trampoline "sys.activate_stack_trampoline") and [`sys.deactivate_stack_trampoline()`](https://docs.python.org/3/library/sys.html#sys.deactivate_stack_trampoline "sys.deactivate_stack_trampoline") for activating and deactivating stack profiler trampolines, and [`sys.is_stack_trampoline_active()`](https://docs.python.org/3/library/sys.html#sys.is_stack_trampoline_active "sys.is_stack_trampoline_active") for querying if stack profiler trampolines are active. (Contributed by Pablo Galindo and Christian Heimes with contributions from Gregory P. Smith [Google] and Mark Shannon in [gh-96123](https://github.com/python/cpython/issues/96123).)
  * Add [`sys.last_exc`](https://docs.python.org/3/library/sys.html#sys.last_exc "sys.last_exc") which holds the last unhandled exception that was raised (for post-mortem debugging use cases). Deprecate the three fields that have the same information in its legacy form: [`sys.last_type`](https://docs.python.org/3/library/sys.html#sys.last_type "sys.last_type"), [`sys.last_value`](https://docs.python.org/3/library/sys.html#sys.last_value "sys.last_value") and [`sys.last_traceback`](https://docs.python.org/3/library/sys.html#sys.last_traceback "sys.last_traceback"). (Contributed by Irit Katriel in [gh-102778](https://github.com/python/cpython/issues/102778).)
  * [`sys._current_exceptions()`](https://docs.python.org/3/library/sys.html#sys._current_exceptions "sys._current_exceptions") now returns a mapping from thread-id to an exception instance, rather than to a `(typ, exc, tb)` tuple. (Contributed by Irit Katriel in [gh-103176](https://github.com/python/cpython/issues/103176).)
  * [`sys.setrecursionlimit()`](https://docs.python.org/3/library/sys.html#sys.setrecursionlimit "sys.setrecursionlimit") and [`sys.getrecursionlimit()`](https://docs.python.org/3/library/sys.html#sys.getrecursionlimit "sys.getrecursionlimit"). The recursion limit now applies only to Python code. Builtin functions do not use the recursion limit, but are protected by a different mechanism that prevents recursion from causing a virtual machine crash.