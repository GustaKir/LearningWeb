Title: glob - Unix style pathname pattern expansion
URL: https://docs.python.org/3/library/glob.html
Summary: The glob module in Python provides functionality for Unix style pathname pattern expansion, allowing users to match file names using wildcard characters. This documentation section includes links to examples and related topics.
---

[ ![Python logo](https://docs.python.org/3/_static/py.svg) ](https://www.python.org/) dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
Theme  Auto Light Dark
### [Table of Contents](https://docs.python.org/3/contents.html)
  * [`glob` — Unix style pathname pattern expansion](https://docs.python.org/3/library/glob.html)
    * [Examples](https://docs.python.org/3/library/glob.html#examples)


#### Previous topic
[`tempfile` — Generate temporary files and directories](https://docs.python.org/3/library/tempfile.html "previous chapter")
#### Next topic
[`fnmatch` — Unix filename pattern matching](https://docs.python.org/3/library/fnmatch.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/glob.rst)


### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/library/fnmatch.html "fnmatch — Unix filename pattern matching") |
  * [previous](https://docs.python.org/3/library/tempfile.html "tempfile — Generate temporary files and directories") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [The Python Standard Library](https://docs.python.org/3/library/index.html) »
  * [File and Directory Access](https://docs.python.org/3/library/filesys.html) »
  * [`glob` — Unix style pathname pattern expansion](https://docs.python.org/3/library/glob.html)
  * | 
  * Theme  Auto Light Dark |


# `glob` — Unix style pathname pattern expansion[¶](https://docs.python.org/3/library/glob.html#module-glob "Link to this heading")
**Source code:** [Lib/glob.py](https://github.com/python/cpython/tree/3.13/Lib/glob.py)
The [`glob`](https://docs.python.org/3/library/glob.html#module-glob "glob: Unix shell style pathname pattern expansion.") module finds all the pathnames matching a specified pattern according to the rules used by the Unix shell, although results are returned in arbitrary order. No tilde expansion is done, but `*`, `?`, and character ranges expressed with `[]` will be correctly matched. This is done by using the [`os.scandir()`](https://docs.python.org/3/library/os.html#os.scandir "os.scandir") and [`fnmatch.fnmatch()`](https://docs.python.org/3/library/fnmatch.html#fnmatch.fnmatch "fnmatch.fnmatch") functions in concert, and not by actually invoking a subshell.
Note that files beginning with a dot (`.`) can only be matched by patterns that also start with a dot, unlike [`fnmatch.fnmatch()`](https://docs.python.org/3/library/fnmatch.html#fnmatch.fnmatch "fnmatch.fnmatch") or [`pathlib.Path.glob()`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.glob "pathlib.Path.glob"). (For tilde and shell variable expansion, use [`os.path.expanduser()`](https://docs.python.org/3/library/os.path.html#os.path.expanduser "os.path.expanduser") and [`os.path.expandvars()`](https://docs.python.org/3/library/os.path.html#os.path.expandvars "os.path.expandvars").)
For a literal match, wrap the meta-characters in brackets. For example, `'[?]'` matches the character `'?'`.
The [`glob`](https://docs.python.org/3/library/glob.html#module-glob "glob: Unix shell style pathname pattern expansion.") module defines the following functions: