Title: HTTP Request Handling in Python
URL: https://docs.python.org/3/library/http.server.html
Summary: This section describes the 'request_version' attribute, which contains the version string of the HTTP request (e.g., 'HTTP/1.0'). It also covers the 'headers' attribute, which holds an instance of 'MessageClass' that parses and manages the request headers using the 'parse_headers()' function.
---

request_version[¶](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler.request_version "Link to this definition")
    
Contains the version string from the request. For example, `'HTTP/1.0'`. 

headers[¶](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler.headers "Link to this definition")
    
Holds an instance of the class specified by the [`MessageClass`](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler.MessageClass "http.server.BaseHTTPRequestHandler.MessageClass") class variable. This instance parses and manages the headers in the HTTP request. The [`parse_headers()`](https://docs.python.org/3/library/http.client.html#http.client.parse_headers "http.client.parse_headers") function from [`http.client`](https://docs.python.org/3/library/http.client.html#module-http.client "http.client: HTTP and HTTPS protocol client \(requires sockets\).") is used to parse the headers and it requires that the HTTP request provide a valid [**RFC 2822**](https://datatracker.ietf.org/doc/html/rfc2822.html) style header. 

rfile[¶](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler.rfile "Link to this definition")
    
An [`io.BufferedIOBase`](https://docs.python.org/3/library/io.html#io.BufferedIOBase "io.BufferedIOBase") input stream, ready to read from the start of the optional input data. 

wfile[¶](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler.wfile "Link to this definition")
    
Contains the output stream for writing a response back to the client. Proper adherence to the HTTP protocol must be used when writing to this stream in order to achieve successful interoperation with HTTP clients.
Changed in version 3.6: This is an [`io.BufferedIOBase`](https://docs.python.org/3/library/io.html#io.BufferedIOBase "io.BufferedIOBase") stream.
[`BaseHTTPRequestHandler`](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler "http.server.BaseHTTPRequestHandler") has the following attributes: 

server_version[¶](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler.server_version "Link to this definition")
    
Specifies the server software version. You may want to override this. The format is multiple whitespace-separated strings, where each string is of the form name[/version]. For example, `'BaseHTTP/0.2'`. 

sys_version[¶](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler.sys_version "Link to this definition")
    
Contains the Python system version, in a form usable by the [`version_string`](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler.version_string "http.server.BaseHTTPRequestHandler.version_string") method and the [`server_version`](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler.server_version "http.server.BaseHTTPRequestHandler.server_version") class variable. For example, `'Python/1.4'`. 

error_message_format[¶](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler.error_message_format "Link to this definition")
    
Specifies a format string that should be used by [`send_error()`](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler.send_error "http.server.BaseHTTPRequestHandler.send_error") method for building an error response to the client. The string is filled by default with variables from [`responses`](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler.responses "http.server.BaseHTTPRequestHandler.responses") based on the status code that passed to [`send_error()`](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler.send_error "http.server.BaseHTTPRequestHandler.send_error"). 

error_content_type[¶](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler.error_content_type "Link to this definition")
    
Specifies the Content-Type HTTP header of error responses sent to the client. The default value is `'text/html'`. 

protocol_version[¶](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler.protocol_version "Link to this definition")
    
Specifies the HTTP version to which the server is conformant. It is sent in responses to let the client know the server’s communication capabilities for future requests. If set to `'HTTP/1.1'`, the server will permit HTTP persistent connections; however, your server _must_ then include an accurate `Content-Length` header (using [`send_header()`](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler.send_header "http.server.BaseHTTPRequestHandler.send_header")) in all of its responses to clients. For backwards compatibility, the setting defaults to `'HTTP/1.0'`.