Title: ElementTree Objects in xml.etree.ElementTree
URL: https://docs.python.org/3/library/xml.etree.elementtree.html
Summary: The ElementTree class represents an entire XML element hierarchy, offering additional functionality for serialization. It can be initialized with a root element or an XML file, and includes a method to replace the root element with a new one.
---

```

### ElementTree Objects[¶](https://docs.python.org/3/library/xml.etree.elementtree.html#elementtree-objects "Link to this heading") 

_class_ xml.etree.ElementTree.ElementTree(_element =None_, _file =None_)[¶](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.ElementTree "Link to this definition")
    
ElementTree wrapper class. This class represents an entire element hierarchy, and adds some extra support for serialization to and from standard XML.
_element_ is the root element. The tree is initialized with the contents of the XML _file_ if given. 

_setroot(_element_)[¶](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.ElementTree._setroot "Link to this definition")
    
Replaces the root element for this tree. This discards the current contents of the tree, and replaces it with the given element. Use with care. _element_ is an element instance. 

find(_match_ , _namespaces =None_)[¶](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.ElementTree.find "Link to this definition")
    
Same as [`Element.find()`](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.find "xml.etree.ElementTree.Element.find"), starting at the root of the tree. 

findall(_match_ , _namespaces =None_)[¶](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.ElementTree.findall "Link to this definition")
    
Same as [`Element.findall()`](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.findall "xml.etree.ElementTree.Element.findall"), starting at the root of the tree. 

findtext(_match_ , _default =None_, _namespaces =None_)[¶](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.ElementTree.findtext "Link to this definition")
    
Same as [`Element.findtext()`](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.findtext "xml.etree.ElementTree.Element.findtext"), starting at the root of the tree. 

getroot()[¶](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.ElementTree.getroot "Link to this definition")
    
Returns the root element for this tree. 

iter(_tag =None_)[¶](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.ElementTree.iter "Link to this definition")
    
Creates and returns a tree iterator for the root element. The iterator loops over all elements in this tree, in section order. _tag_ is the tag to look for (default is to return all elements). 

iterfind(_match_ , _namespaces =None_)[¶](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.ElementTree.iterfind "Link to this definition")
    
Same as [`Element.iterfind()`](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.iterfind "xml.etree.ElementTree.Element.iterfind"), starting at the root of the tree.
Added in version 3.2. 

parse(_source_ , _parser =None_)[¶](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.ElementTree.parse "Link to this definition")
    
Loads an external XML section into this element tree. _source_ is a file name or [file object](https://docs.python.org/3/glossary.html#term-file-object). _parser_ is an optional parser instance. If not given, the standard [`XMLParser`](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.XMLParser "xml.etree.ElementTree.XMLParser") parser is used. Returns the section root element.