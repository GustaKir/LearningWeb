Title: decimal.Context Class
URL: https://docs.python.org/3/library/decimal.html
Summary: The `decimal.Context` class creates a new context for decimal arithmetic operations. It allows specifying parameters like precision, rounding mode, and various flags. If unspecified, it uses default values from `DefaultContext`. Notably, precision is an integer between 1 and `MAX_PREC`.
---

_class_ decimal.Context(_prec =None_, _rounding =None_, _Emin =None_, _Emax =None_, _capitals =None_, _clamp =None_, _flags =None_, _traps =None_)[Â¶](https://docs.python.org/3/library/decimal.html#decimal.Context "Link to this definition")
    
Creates a new context. If a field is not specified or is [`None`](https://docs.python.org/3/library/constants.html#None "None"), the default values are copied from the [`DefaultContext`](https://docs.python.org/3/library/decimal.html#decimal.DefaultContext "decimal.DefaultContext"). If the _flags_ field is not specified or is [`None`](https://docs.python.org/3/library/constants.html#None "None"), all flags are cleared.
_prec_ is an integer in the range [`1`, [`MAX_PREC`](https://docs.python.org/3/library/decimal.html#decimal.MAX_PREC "decimal.MAX_PREC")] that sets the precision for arithmetic operations in the context.
The _rounding_ option is one of the constants listed in the section [Rounding Modes](https://docs.python.org/3/library/decimal.html#rounding-modes).
The _traps_ and _flags_ fields list any signals to be set. Generally, new contexts should only set traps and leave the flags clear.
The _Emin_ and _Emax_ fields are integers specifying the outer limits allowable for exponents. _Emin_ must be in the range [[`MIN_EMIN`](https://docs.python.org/3/library/decimal.html#decimal.MIN_EMIN "decimal.MIN_EMIN"), `0`], _Emax_ in the range [`0`, [`MAX_EMAX`](https://docs.python.org/3/library/decimal.html#decimal.MAX_EMAX "decimal.MAX_EMAX")].
The _capitals_ field is either `0` or `1` (the default). If set to `1`, exponents are printed with a capital `E`; otherwise, a lowercase `e` is used: `Decimal('6.02e+23')`.
The _clamp_ field is either `0` (the default) or `1`. If set to `1`, the exponent `e` of a [`Decimal`](https://docs.python.org/3/library/decimal.html#decimal.Decimal "decimal.Decimal") instance representable in this context is strictly limited to the range `Emin - prec + 1 <= e <= Emax - prec + 1`. If _clamp_ is `0` then a weaker condition holds: the adjusted exponent of the [`Decimal`](https://docs.python.org/3/library/decimal.html#decimal.Decimal "decimal.Decimal") instance is at most `Emax`. When _clamp_ is `1`, a large normal number will, where possible, have its exponent reduced and a corresponding number of zeros added to its coefficient, in order to fit the exponent constraints; this preserves the value of the number but loses information about significant trailing zeros. For example:
>>>```
>>> Context(prec=6, Emax=999, clamp=1).create_decimal('1.23e999')
Decimal('1.23000E+999')