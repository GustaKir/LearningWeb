Title: PyObject_Call Function
URL: https://docs.python.org/3/c-api/call.html
Summary: The `PyObject_Call` function invokes a callable Python object with specified positional and named arguments. It requires a non-null tuple for arguments and allows null for named arguments. On success, it returns the callable's result; on failure, it raises an exception and returns null.
---

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyObject_Call([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*callable, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*args, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*kwargs)[¶](https://docs.python.org/3/c-api/call.html#c.PyObject_Call "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._  
Call a callable Python object _callable_ , with arguments given by the tuple _args_ , and named arguments given by the dictionary _kwargs_.
_args_ must not be _NULL_ ; use an empty tuple if no arguments are needed. If no named arguments are needed, _kwargs_ can be _NULL_.
Return the result of the call on success, or raise an exception and return _NULL_ on failure.
This is the equivalent of the Python expression: `callable(*args, **kwargs)`. 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyObject_CallNoArgs([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*callable)[¶](https://docs.python.org/3/c-api/call.html#c.PyObject_CallNoArgs "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable) since version 3.10._
Call a callable Python object _callable_ without any arguments. It is the most efficient way to call a callable Python object without any argument.
Return the result of the call on success, or raise an exception and return _NULL_ on failure.
Added in version 3.9. 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyObject_CallOneArg([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*callable, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*arg)[¶](https://docs.python.org/3/c-api/call.html#c.PyObject_CallOneArg "Link to this definition")
    _Return value: New reference._
Call a callable Python object _callable_ with exactly 1 positional argument _arg_ and no keyword arguments.
Return the result of the call on success, or raise an exception and return _NULL_ on failure.
Added in version 3.9. 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyObject_CallObject([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*callable, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*args)[¶](https://docs.python.org/3/c-api/call.html#c.PyObject_CallObject "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Call a callable Python object _callable_ , with arguments given by the tuple _args_. If no arguments are needed, then _args_ can be _NULL_.
Return the result of the call on success, or raise an exception and return _NULL_ on failure.
This is the equivalent of the Python expression: `callable(*args)`. 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyObject_CallFunction([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*callable, constchar*format, ...)[¶](https://docs.python.org/3/c-api/call.html#c.PyObject_CallFunction "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Call a callable Python object _callable_ , with a variable number of C arguments. The C arguments are described using a [`Py_BuildValue()`](https://docs.python.org/3/c-api/arg.html#c.Py_BuildValue "Py_BuildValue") style format string. The format can be _NULL_ , indicating that no arguments are provided.
Return the result of the call on success, or raise an exception and return _NULL_ on failure.
This is the equivalent of the Python expression: `callable(*args)`.
Note that if you only pass [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")* args, [`PyObject_CallFunctionObjArgs()`](https://docs.python.org/3/c-api/call.html#c.PyObject_CallFunctionObjArgs "PyObject_CallFunctionObjArgs") is a faster alternative.
Changed in version 3.4: The type of _format_ was changed from `char *`.