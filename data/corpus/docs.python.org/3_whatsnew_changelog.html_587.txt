Title: Python 3 Changelog Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: Recent updates include the addition of the _nullcontext_ no-op context manager, a new decorator to skip asyncio tests on non-root Android versions, changes to codecs.StreamReader.read() for better compatibility, and improvements to the warnings module.
---

tests that match the given pattern(s).
  * [bpo-10049](https://bugs.python.org/issue?@action=redirect&bpo=10049): Added _nullcontext_ no-op context manager to contextlib. This provides a simpler and faster alternative to ExitStack() when handling optional context managers.
  * [bpo-28684](https://bugs.python.org/issue?@action=redirect&bpo=28684): The new test.support.skip_unless_bind_unix_socket() decorator is used here to skip asyncio tests that fail because the platform lacks a functional bind() function for unix domain sockets (as it is the case for non root users on the recent Android versions that run now SELinux in enforcing mode).
  * [bpo-32110](https://bugs.python.org/issue?@action=redirect&bpo=32110): `codecs.StreamReader.read(n)` now returns not more than _n_ characters/bytes for non-negative _n_. This makes it compatible with `read()` methods of other file-like objects.
  * [bpo-27535](https://bugs.python.org/issue?@action=redirect&bpo=27535): The warnings module doesn’t leak memory anymore in the hidden warnings registry for the “ignore” action of warnings filters. warn_explicit() function doesn’t add the warning key to the registry anymore for the “ignore” action.
  * [bpo-32088](https://bugs.python.org/issue?@action=redirect&bpo=32088): warnings: When Python is build is debug mode (`Py_DEBUG`), [`DeprecationWarning`](https://docs.python.org/3/library/exceptions.html#DeprecationWarning "DeprecationWarning"), [`PendingDeprecationWarning`](https://docs.python.org/3/library/exceptions.html#PendingDeprecationWarning "PendingDeprecationWarning") and [`ImportWarning`](https://docs.python.org/3/library/exceptions.html#ImportWarning "ImportWarning") warnings are now displayed by default.
  * [bpo-1647489](https://bugs.python.org/issue?@action=redirect&bpo=1647489): Fixed searching regular expression patterns that could match an empty string. Non-empty string can now be correctly found after matching an empty string.
  * [bpo-25054](https://bugs.python.org/issue?@action=redirect&bpo=25054): Added support of splitting on a pattern that could match an empty string.
  * [bpo-32072](https://bugs.python.org/issue?@action=redirect&bpo=32072): Fixed issues with binary plists: Fixed saving bytearrays. Identical objects will be saved only once. Equal references will be load as identical objects. Added support for saving and loading recursive data structures.
  * [bpo-32069](https://bugs.python.org/issue?@action=redirect&bpo=32069): Drop legacy SSL transport from asyncio, ssl.MemoryBIO is always used anyway.
  * [bpo-32066](https://bugs.python.org/issue?@action=redirect&bpo=32066): asyncio: Support pathlib.Path in create_unix_connection; sock arg should be optional
  * [bpo-32046](https://bugs.python.org/issue?@action=redirect&bpo=32046): Updates 2to3 to convert from operator.isCallable(obj) to callable(obj). Patch by Donghee Na.
  * [bpo-32018](https://bugs.python.org/issue?@action=redirect&bpo=32018): inspect.signature should follow [**PEP 8**](https://peps.python.org/pep-0008/), if the parameter has an annotation and a default value. Patch by Donghee Na.
  * [bpo-32025](https://bugs.python.org/issue?@action=redirect&bpo=32025): Add time.thread_time() and time.thread_time_ns()
  * [bpo-32037](https://bugs.python.org/issue?@action=redirect&bpo=32037): Integers that fit in a signed 32-bit integer will be now pickled with protocol 0 using the INT opcode. This will decrease the size of a pickle, speed up pickling and unpickling, and make these integers be unpickled as int instances in Python 2.
  * [bpo-32034](https://bugs.python.org/issue?@action=redirect&bpo=32034): Make asyncio.IncompleteReadError and LimitOverrunError pickleable.
  * [bpo-32015](https://bugs.python.org/issue?@action=redirect&bpo=32015): Fixed the looping of asyncio in the case of reconnection the socket during waiting async read/write from/to the socket.
  * [bpo-32011](https://bugs.python.org/issue?@action=redirect&bpo=32011): Restored support of loading marshal files with the TYPE_INT64 code. These files can be produced in Python 2.7.
  * [bpo-28369](https://bugs.python.org/issue?@action=redirect&bpo=28369): Enhance add_reader/writer check that socket is not used by some transport. Before, only cases when add_reader/writer were called with an int FD were supported. Now the check is implemented correctly for all file-like objects.
  * [bpo-31976](https://bugs.python.org/issue?@action=redirect&bpo=31976): Fix race condition when flushing a file is slow, which can cause a segfault if closing the file from another thread.
  * [bpo-31985](https://bugs.python.org/issue?@action=redirect&bpo=31985): Formally deprecated aifc.openfp, sunau.openfp, and wave.openfp.