Title: Library Updates in Python
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section details various updates and fixes in the Python library, including a crash fix in `ctypes.Structure`, improved error messages for `array.array`, enhanced Bluetooth socket support on certain BSD systems, and error handling in `QueueListener.start`.
---

### Library[¶](https://docs.python.org/3/whatsnew/changelog.html#library "Link to this heading")
  * [gh-132673](https://github.com/python/cpython/issues/132673): Fix a crash when using `_align_ = 0` and `_fields_ = []` in a [`ctypes.Structure`](https://docs.python.org/3/library/ctypes.html#ctypes.Structure "ctypes.Structure").
  * [gh-132527](https://github.com/python/cpython/issues/132527): Include the valid typecode ‘w’ in the error message when an invalid typecode is passed to [`array.array`](https://docs.python.org/3/library/array.html#array.array "array.array").
  * [gh-132429](https://github.com/python/cpython/issues/132429): Fix support of Bluetooth sockets on NetBSD and DragonFly BSD.
  * [gh-132106](https://github.com/python/cpython/issues/132106): [`QueueListener.start`](https://docs.python.org/3/library/logging.handlers.html#logging.handlers.QueueListener.start "logging.handlers.QueueListener.start") now raises a [`RuntimeError`](https://docs.python.org/3/library/exceptions.html#RuntimeError "RuntimeError") if the listener is already started.
  * [gh-132417](https://github.com/python/cpython/issues/132417): Fix a `NULL` pointer dereference when a C function called using [`ctypes`](https://docs.python.org/3/library/ctypes.html#module-ctypes "ctypes: A foreign function library for Python.") with `restype` [`py_object`](https://docs.python.org/3/library/ctypes.html#ctypes.py_object "ctypes.py_object") returns `NULL`.
  * [gh-132250](https://github.com/python/cpython/issues/132250): Fixed the [`SystemError`](https://docs.python.org/3/library/exceptions.html#SystemError "SystemError") in [`cProfile`](https://docs.python.org/3/library/profile.html#module-cProfile "cProfile") when locating the actual C function of a method raises an exception.
  * [gh-132063](https://github.com/python/cpython/issues/132063): Prevent exceptions that evaluate as falsey (namely, when their `__bool__` method returns `False` or their `__len__` method returns 0) from being ignored by [`concurrent.futures.ProcessPoolExecutor`](https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.ProcessPoolExecutor "concurrent.futures.ProcessPoolExecutor") and [`concurrent.futures.ThreadPoolExecutor`](https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.ThreadPoolExecutor "concurrent.futures.ThreadPoolExecutor").
  * [gh-131434](https://github.com/python/cpython/issues/131434): Improve error reporting for incorrect format in [`time.strptime()`](https://docs.python.org/3/library/time.html#time.strptime "time.strptime").
  * [gh-131127](https://github.com/python/cpython/issues/131127): Systems using LibreSSL now successfully build.
  * [gh-114713](https://github.com/python/cpython/issues/114713): Handle case of an empty string passed to [`zoneinfo.ZoneInfo`](https://docs.python.org/3/library/zoneinfo.html#zoneinfo.ZoneInfo "zoneinfo.ZoneInfo").
  * [gh-130941](https://github.com/python/cpython/issues/130941): Fix [`configparser.ConfigParser`](https://docs.python.org/3/library/configparser.html#configparser.ConfigParser "configparser.ConfigParser") parsing empty interpolation with `allow_no_value` set to `True`.
  * [gh-129098](https://github.com/python/cpython/issues/129098): Fix REPL traceback reporting when using [`compile()`](https://docs.python.org/3/library/functions.html#compile "compile") with an inexisting file. Patch by Bénédikt Tran.
  * [gh-130631](https://github.com/python/cpython/issues/130631): `http.cookiejar.join_header_words()` is now more similar to the original Perl version. It now quotes the same set of characters and always quote values that end with `"\n"`.
  * [gh-129719](https://github.com/python/cpython/issues/129719): Fix missing `socket.CAN_RAW_ERR_FILTER` constant in the socket module on Linux systems. It was missing since Python 3.11.
  * [gh-122179](https://github.com/python/cpython/issues/122179): [`hashlib.file_digest()`](https://docs.python.org/3/library/hashlib.html#hashlib.file_digest "hashlib.file_digest") now raises [`BlockingIOError`](https://docs.python.org/3/library/exceptions.html#BlockingIOError "BlockingIOError") when no data is available during non-blocking I/O. Before, it added spurious null bytes to the digest.