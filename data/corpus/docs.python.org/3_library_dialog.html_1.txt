Title: Python Tkinter Dialog Module Overview
URL: https://docs.python.org/3/library/dialog.html
Summary: The dialog module in Python's Tkinter library includes functionality for creating custom button layouts with buttonbox(), as well as classes for file selection through the tkinter.filedialog module, which offers various factory functions for generating file and directory selection windows.
---

buttonbox()[¶](https://docs.python.org/3/library/dialog.html#tkinter.simpledialog.Dialog.buttonbox "Link to this definition")
    
Default behaviour adds OK and Cancel buttons. Override for custom button layouts.
## [`tkinter.filedialog`](https://docs.python.org/3/library/dialog.html#module-tkinter.filedialog "tkinter.filedialog: Dialog classes for file selection \(Tk\)") — File selection dialogs[¶](https://docs.python.org/3/library/dialog.html#module-tkinter.filedialog "Link to this heading")
**Source code:** [Lib/tkinter/filedialog.py](https://github.com/python/cpython/tree/3.13/Lib/tkinter/filedialog.py)
The [`tkinter.filedialog`](https://docs.python.org/3/library/dialog.html#module-tkinter.filedialog "tkinter.filedialog: Dialog classes for file selection \(Tk\)") module provides classes and factory functions for creating file/directory selection windows.
### Native Load/Save Dialogs[¶](https://docs.python.org/3/library/dialog.html#native-load-save-dialogs "Link to this heading")
The following classes and functions provide file dialog windows that combine a native look-and-feel with configuration options to customize behaviour. The following keyword arguments are applicable to the classes and functions listed below:
> _parent_ - the window to place the dialog on top of
> _title_ - the title of the window
> _initialdir_ - the directory that the dialog starts in
> _initialfile_ - the file selected upon opening of the dialog
> _filetypes_ - a sequence of (label, pattern) tuples, ‘*’ wildcard is allowed
> _defaultextension_ - default extension to append to file (save dialogs)
> _multiple_ - when true, selection of multiple items is allowed
**Static factory functions**
The below functions when called create a modal, native look-and-feel dialog, wait for the user’s selection, then return the selected value(s) or `None` to the caller. 

tkinter.filedialog.askopenfile(_mode ='r'_, _** options_)[¶](https://docs.python.org/3/library/dialog.html#tkinter.filedialog.askopenfile "Link to this definition")


tkinter.filedialog.askopenfiles(_mode ='r'_, _** options_)[¶](https://docs.python.org/3/library/dialog.html#tkinter.filedialog.askopenfiles "Link to this definition")
    
The above two functions create an [`Open`](https://docs.python.org/3/library/dialog.html#tkinter.filedialog.Open "tkinter.filedialog.Open") dialog and return the opened file object(s) in read-only mode. 

tkinter.filedialog.asksaveasfile(_mode ='w'_, _** options_)[¶](https://docs.python.org/3/library/dialog.html#tkinter.filedialog.asksaveasfile "Link to this definition")
    
Create a [`SaveAs`](https://docs.python.org/3/library/dialog.html#tkinter.filedialog.SaveAs "tkinter.filedialog.SaveAs") dialog and return a file object opened in write-only mode. 

tkinter.filedialog.askopenfilename(_** options_)[¶](https://docs.python.org/3/library/dialog.html#tkinter.filedialog.askopenfilename "Link to this definition")


tkinter.filedialog.askopenfilenames(_** options_)[¶](https://docs.python.org/3/library/dialog.html#tkinter.filedialog.askopenfilenames "Link to this definition")
    
The above two functions create an [`Open`](https://docs.python.org/3/library/dialog.html#tkinter.filedialog.Open "tkinter.filedialog.Open") dialog and return the selected filename(s) that correspond to existing file(s). 

tkinter.filedialog.asksaveasfilename(_** options_)[¶](https://docs.python.org/3/library/dialog.html#tkinter.filedialog.asksaveasfilename "Link to this definition")
    
Create a [`SaveAs`](https://docs.python.org/3/library/dialog.html#tkinter.filedialog.SaveAs "tkinter.filedialog.SaveAs") dialog and return the selected filename. 

tkinter.filedialog.askdirectory(_** options_)[¶](https://docs.python.org/3/library/dialog.html#tkinter.filedialog.askdirectory "Link to this definition")
    
Prompt user to select a directory.
Additional keyword option:
_mustexist_ - determines if selection must be an existing directory. 

_class_ tkinter.filedialog.Open(_master =None_, _** options_)[¶](https://docs.python.org/3/library/dialog.html#tkinter.filedialog.Open "Link to this definition")


_class_ tkinter.filedialog.SaveAs(_master =None_, _** options_)[¶](https://docs.python.org/3/library/dialog.html#tkinter.filedialog.SaveAs "Link to this definition")
    
The above two classes provide native dialog windows for saving and loading files.
**Convenience classes**
The below classes are used for creating file/directory windows from scratch. These do not emulate the native look-and-feel of the platform. 

_class_ tkinter.filedialog.Directory(_master =None_, _** options_)[¶](https://docs.python.org/3/library/dialog.html#tkinter.filedialog.Directory "Link to this definition")
    
Create a dialog prompting the user to select a directory.
Note
The _FileDialog_ class should be subclassed for custom event handling and behaviour.