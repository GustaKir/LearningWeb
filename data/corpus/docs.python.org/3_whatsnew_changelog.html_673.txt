Title: Python Library Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section outlines several updates to the Python library, including fixes for error messages in imp.find_module(), improvements to SSL calls, changes to cookie time formats, and deprecation of non-standard dbm.dumb behavior.
---

### Library[¶](https://docs.python.org/3/whatsnew/changelog.html#id676 "Link to this heading")
  * [bpo-26844](https://bugs.python.org/issue?@action=redirect&bpo=26844): Fix error message for imp.find_module() to refer to ‘path’ instead of ‘name’. Patch by Lev Maximov.
  * [bpo-23804](https://bugs.python.org/issue?@action=redirect&bpo=23804): Fix SSL zero-length recv() calls to not block and not raise an error about unclean EOF.
  * [bpo-27466](https://bugs.python.org/issue?@action=redirect&bpo=27466): Change time format returned by http.cookie.time2netscape, confirming the netscape cookie format and making it consistent with documentation.
  * [bpo-21708](https://bugs.python.org/issue?@action=redirect&bpo=21708): Deprecated dbm.dumb behavior that differs from common dbm behavior: creating a database in ‘r’ and ‘w’ modes and modifying a database in ‘r’ mode.
  * [bpo-26721](https://bugs.python.org/issue?@action=redirect&bpo=26721): Change the socketserver.StreamRequestHandler.wfile attribute to implement BufferedIOBase. In particular, the write() method no longer does partial writes.
  * [bpo-22115](https://bugs.python.org/issue?@action=redirect&bpo=22115): Added methods trace_add, trace_remove and trace_info in the tkinter.Variable class. They replace old methods trace_variable, trace, trace_vdelete and trace_vinfo that use obsolete Tcl commands and might not work in future versions of Tcl. Fixed old tracing methods: trace_vdelete() with wrong mode no longer break tracing, trace_vinfo() now always returns a list of pairs of strings, tracing in the “u” mode now works.
  * [bpo-26243](https://bugs.python.org/issue?@action=redirect&bpo=26243): Only the level argument to zlib.compress() is keyword argument now. The first argument is positional-only.
  * [bpo-27038](https://bugs.python.org/issue?@action=redirect&bpo=27038): Expose the DirEntry type as os.DirEntry. Code patch by Jelle Zijlstra.
  * [bpo-27186](https://bugs.python.org/issue?@action=redirect&bpo=27186): Update os.fspath()/PyOS_FSPath() to check the return value of __fspath__() to be either str or bytes.
  * [bpo-18726](https://bugs.python.org/issue?@action=redirect&bpo=18726): All optional parameters of the dump(), dumps(), load() and loads() functions and JSONEncoder and JSONDecoder class constructors in the json module are now keyword-only.
  * [bpo-27319](https://bugs.python.org/issue?@action=redirect&bpo=27319): Methods selection_set(), selection_add(), selection_remove() and selection_toggle() of ttk.TreeView now allow passing multiple items as multiple arguments instead of passing them as a tuple. Deprecated undocumented ability of calling the selection() method with arguments.
  * [bpo-27079](https://bugs.python.org/issue?@action=redirect&bpo=27079): Fixed curses.ascii functions isblank(), iscntrl() and ispunct().
  * [bpo-27294](https://bugs.python.org/issue?@action=redirect&bpo=27294): Numerical state in the repr for Tkinter event objects is now represented as a combination of known flags.
  * [bpo-27177](https://bugs.python.org/issue?@action=redirect&bpo=27177): Match objects in the re module now support index-like objects as group indices. Based on patches by Jeroen Demeyer and Xiang Zhang.
  * [bpo-26754](https://bugs.python.org/issue?@action=redirect&bpo=26754): Some functions (compile() etc) accepted a filename argument encoded as an iterable of integers. Now only strings and byte-like objects are accepted.
  * [bpo-26536](https://bugs.python.org/issue?@action=redirect&bpo=26536): socket.ioctl now supports SIO_LOOPBACK_FAST_PATH. Patch by Daniel Stokes.
  * [bpo-27048](https://bugs.python.org/issue?@action=redirect&bpo=27048): Prevents distutils failing on Windows when environment variables contain non-ASCII characters
  * [bpo-27330](https://bugs.python.org/issue?@action=redirect&bpo=27330): Fixed possible leaks in the ctypes module.
  * [bpo-27238](https://bugs.python.org/issue?@action=redirect&bpo=27238): Got rid of bare excepts in the turtle module. Original patch by Jelle Zijlstra.
  * [bpo-27122](https://bugs.python.org/issue?@action=redirect&bpo=27122): When an exception is raised within the context being managed by a contextlib.ExitStack() and one of the exit stack generators catches and raises it in a chain, do not re-raise the original exception when exiting, let the new chained one through. This avoids the [**PEP 479**](https://peps.python.org/pep-0479/) bug described in issue25782.
  * [bpo-16864](https://bugs.python.org/issue?@action=redirect&bpo=16864): sqlite3.Cursor.lastrowid now supports REPLACE statement. Initial patch by Alex LordThorsen.
  * [bpo-26386](https://bugs.python.org/issue?@action=redirect&bpo=26386): Fixed ttk.TreeView selection operations with item id’s containing spaces.
  * [bpo-8637](https://bugs.python.org/issue?@action=redirect&bpo=8637): Honor a pager set by the env var MANPAGER (in preference to one set by the env var PAGER).
  * [bpo-16182](https://bugs.python.org/issue?@action=redirect&bpo=1