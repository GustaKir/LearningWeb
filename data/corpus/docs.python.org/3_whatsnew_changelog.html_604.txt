Title: Python Issue Fixes and Enhancements
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This document section lists various bug fixes and enhancements made in Python, including improvements to `fileinput.FileInput` with `pathlib.Path`, corrections in `ctypes` for PEP 3118 type codes, the addition of `AF_VSOCK` to the socket interface for VM communication, updates in the subprocess module for handling `FileNotFoundError`, and method updates in the `_pyio` module to accept integer types.
---

@action=redirect&bpo=31281): Fix `fileinput.FileInput(files, inplace=True)` when `files` contain `pathlib.Path` objects.
  * [bpo-10746](https://bugs.python.org/issue?@action=redirect&bpo=10746): Fix ctypes producing wrong [**PEP 3118**](https://peps.python.org/pep-3118/) type codes for integer types.
  * [bpo-27584](https://bugs.python.org/issue?@action=redirect&bpo=27584): `AF_VSOCK` has been added to the socket interface which allows communication between virtual machines and their host.
  * [bpo-22536](https://bugs.python.org/issue?@action=redirect&bpo=22536): The subprocess module now sets the filename when FileNotFoundError is raised on POSIX systems due to the executable or cwd not being found.
  * [bpo-29741](https://bugs.python.org/issue?@action=redirect&bpo=29741): Update some methods in the _pyio module to also accept integer types. Patch by Oren Milman.
  * [bpo-31249](https://bugs.python.org/issue?@action=redirect&bpo=31249): concurrent.futures: WorkItem.run() used by ThreadPoolExecutor now breaks a reference cycle between an exception object and the WorkItem object.
  * [bpo-31247](https://bugs.python.org/issue?@action=redirect&bpo=31247): xmlrpc.server now explicitly breaks reference cycles when using sys.exc_info() in code handling exceptions.
  * [bpo-23835](https://bugs.python.org/issue?@action=redirect&bpo=23835): configparser: reading defaults in the `ConfigParser()` constructor is now using `read_dict()`, making its behavior consistent with the rest of the parser. Non-string keys and values in the defaults dictionary are now being implicitly converted to strings. Patch by James Tocknell.
  * [bpo-31238](https://bugs.python.org/issue?@action=redirect&bpo=31238): pydoc: the stop() method of the private ServerThread class now waits until DocServer.serve_until_quit() completes and then explicitly sets its docserver attribute to None to break a reference cycle.
  * [bpo-5001](https://bugs.python.org/issue?@action=redirect&bpo=5001): Many asserts in `multiprocessing` are now more informative, and some error types have been changed to more specific ones.
  * [bpo-31109](https://bugs.python.org/issue?@action=redirect&bpo=31109): Convert zipimport to use Argument Clinic.
  * [bpo-30102](https://bugs.python.org/issue?@action=redirect&bpo=30102): The ssl and hashlib modules now call OPENSSL_add_all_algorithms_noconf() on OpenSSL < 1.1.0. The function detects CPU features and enables optimizations on some CPU architectures such as POWER8. Patch is based on research from Gustavo Serra Scalet.
  * [bpo-18966](https://bugs.python.org/issue?@action=redirect&bpo=18966): Non-daemonic threads created by a multiprocessing.Process are now joined on child exit.
  * [bpo-31183](https://bugs.python.org/issue?@action=redirect&bpo=31183): `dis` now works with asynchronous generator and coroutine objects. Patch by George Collins based on diagnosis by Luciano Ramalho.
  * [bpo-5001](https://bugs.python.org/issue?@action=redirect&bpo=5001): There are a number of uninformative asserts in the `multiprocessing` module, as noted in issue 5001. This change fixes two of the most potentially problematic ones, since they are in error-reporting code, in the `multiprocessing.managers.convert_to_error` function. (It also makes more informative a ValueError message.) The only potentially problematic change is that the AssertionError is now a TypeError; however, this should also help distinguish it from an AssertionError being _reported_ by the function/its caller (such as in issue 31169). - Patch by Allen W. Smith (drallensmith on github).
  * [bpo-31185](https://bugs.python.org/issue?@action=redirect&bpo=31185): Fixed miscellaneous errors in asyncio speedup module.
  * [bpo-31151](https://bugs.python.org/issue?@action=redirect&bpo=31151): socketserver.ForkingMixIn.server_close() now waits until all child processes completed to prevent leaking zombie processes.
  * [bpo-31072](https://bugs.python.org/issue?@action=redirect&bpo=31072): Add an `include_file` parameter to `zipapp.create_archive()`
  * [bpo-24700](https://bugs.python.org/issue?@action=redirect&bpo=24700): Optimize array.array comparison. It is now from 10x up to 70x faster when comparing arrays holding values of the same integer type.
  * [bpo-31135](https://bugs.python.org/issue?@action=redirect&bpo=31135): ttk: fix the destroy() method of LabeledScale and OptionMenu classes. Call the parent destroy() method even if the used attribute doesnâ€™t exist. The LabeledScale.destroy() method now also explicitly clears label and scale attributes to help the garbage collector to destroy all widgets.
  * [bpo-31107](https://bugs.python.org/issue?@action=redirect&bpo=31107): Fix `copyreg._slotnames()` mangled attribute calculation for classes whose name begins with an underscore.