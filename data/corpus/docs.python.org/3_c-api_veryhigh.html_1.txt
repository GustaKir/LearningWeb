Title: PyRun_AnyFileExFlags Function
URL: https://docs.python.org/3/c-api/veryhigh.html
Summary: The `PyRun_AnyFileExFlags` function executes the contents of a file. If the file is linked to an interactive device, it calls `PyRun_InteractiveLoop`; otherwise, it executes using `PyRun_SimpleFile`. The function handles filename encoding and optionally closes the file based on the `closeit` parameter.
---

intPyRun_AnyFileExFlags(FILE*fp, constchar*filename, intcloseit, [PyCompilerFlags](https://docs.python.org/3/c-api/veryhigh.html#c.PyCompilerFlags "PyCompilerFlags")*flags)[¶](https://docs.python.org/3/c-api/veryhigh.html#c.PyRun_AnyFileExFlags "Link to this definition")
    
If _fp_ refers to a file associated with an interactive device (console or terminal input or Unix pseudo-terminal), return the value of [`PyRun_InteractiveLoop()`](https://docs.python.org/3/c-api/veryhigh.html#c.PyRun_InteractiveLoop "PyRun_InteractiveLoop"), otherwise return the result of [`PyRun_SimpleFile()`](https://docs.python.org/3/c-api/veryhigh.html#c.PyRun_SimpleFile "PyRun_SimpleFile"). _filename_ is decoded from the filesystem encoding ([`sys.getfilesystemencoding()`](https://docs.python.org/3/library/sys.html#sys.getfilesystemencoding "sys.getfilesystemencoding")). If _filename_ is `NULL`, this function uses `"???"` as the filename. If _closeit_ is true, the file is closed before `PyRun_SimpleFileExFlags()` returns. 

intPyRun_SimpleString(constchar*command)[¶](https://docs.python.org/3/c-api/veryhigh.html#c.PyRun_SimpleString "Link to this definition")
    
This is a simplified interface to [`PyRun_SimpleStringFlags()`](https://docs.python.org/3/c-api/veryhigh.html#c.PyRun_SimpleStringFlags "PyRun_SimpleStringFlags") below, leaving the [`PyCompilerFlags`](https://docs.python.org/3/c-api/veryhigh.html#c.PyCompilerFlags "PyCompilerFlags")* argument set to `NULL`. 

intPyRun_SimpleStringFlags(constchar*command, [PyCompilerFlags](https://docs.python.org/3/c-api/veryhigh.html#c.PyCompilerFlags "PyCompilerFlags")*flags)[¶](https://docs.python.org/3/c-api/veryhigh.html#c.PyRun_SimpleStringFlags "Link to this definition")
    
Executes the Python source code from _command_ in the [`__main__`](https://docs.python.org/3/library/__main__.html#module-__main__ "__main__: The environment where top-level code is run. Covers command-line interfaces, import-time behavior, and ``__name__ == '__main__'``.") module according to the _flags_ argument. If [`__main__`](https://docs.python.org/3/library/__main__.html#module-__main__ "__main__: The environment where top-level code is run. Covers command-line interfaces, import-time behavior, and ``__name__ == '__main__'``.") does not already exist, it is created. Returns `0` on success or `-1` if an exception was raised. If there was an error, there is no way to get the exception information. For the meaning of _flags_ , see below.
Note that if an otherwise unhandled [`SystemExit`](https://docs.python.org/3/library/exceptions.html#SystemExit "SystemExit") is raised, this function will not return `-1`, but exit the process, as long as [`PyConfig.inspect`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.inspect "PyConfig.inspect") is zero. 

intPyRun_SimpleFile(FILE*fp, constchar*filename)[¶](https://docs.python.org/3/c-api/veryhigh.html#c.PyRun_SimpleFile "Link to this definition")
    
This is a simplified interface to [`PyRun_SimpleFileExFlags()`](https://docs.python.org/3/c-api/veryhigh.html#c.PyRun_SimpleFileExFlags "PyRun_SimpleFileExFlags") below, leaving _closeit_ set to `0` and _flags_ set to `NULL`. 

intPyRun_SimpleFileEx(FILE*fp, constchar*filename, intcloseit)[¶](https://docs.python.org/3/c-api/veryhigh.html#c.PyRun_SimpleFileEx "Link to this definition")
    
This is a simplified interface to [`PyRun_SimpleFileExFlags()`](https://docs.python.org/3/c-api/veryhigh.html#c.PyRun_SimpleFileExFlags "PyRun_SimpleFileExFlags") below, leaving _flags_ set to `NULL`. 

intPyRun_SimpleFileExFlags(FILE*fp, constchar*filename, intcloseit, [PyCompilerFlags](https://docs.python.org/3/c-api/veryhigh.html#c.PyCompilerFlags "PyCompilerFlags")*flags)[¶](https://docs.python.org/3/c-api/veryhigh.html#c.PyRun_SimpleFileExFlags "Link to this definition")
    
Similar to [`PyRun_SimpleStringFlags()`](https://docs.python.org/3/c-api/veryhigh.html#c.PyRun_SimpleStringFlags "PyRun_SimpleStringFlags"), but the Python source code is read from _fp_ instead of an in-memory string. _filename_ should be the name of the file, it is decoded from [filesystem encoding and error handler](https://docs.python.org/3/glossary.html#term-filesystem-encoding-and-error-handler). If _closeit_ is true, the file is closed before `PyRun_SimpleFileExFlags()` returns.
Note
On Windows, _fp_ should be opened as binary mode (e.g. `fopen(filename, "rb")`). Otherwise, Python may not handle script file with LF line ending correctly. 

intPyRun_InteractiveOne(FILE*fp, constchar*filename)[¶](https://docs.python.org/3/c-api/veryhigh.html#c.PyRun_InteractiveOne "Link to this definition")
    
This is a simplified interface to [`PyRun_InteractiveOneFlags()`](https://docs.python.org/3/c-api/veryhigh.html#c.PyRun_InteractiveOneFlags "PyRun_InteractiveOneFlags") below, leaving _flags_ set to `NULL`.