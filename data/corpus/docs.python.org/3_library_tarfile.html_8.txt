Title: Extracting Members from a Tar Archive
URL: https://docs.python.org/3/library/tarfile.html
Summary: The TarFile.extract method allows for the extraction of a member from a tar archive to a specified directory, setting file attributes unless specified otherwise. The method accepts a filename or TarInfo object as _member_, and supports additional parameters like _numeric_owner_ and _filter_, which mirror those in extractall.
---

TarFile.extract(_member_ , _path =''_, _set_attrs =True_, _*_ , _numeric_owner =False_, _filter =None_)[¶](https://docs.python.org/3/library/tarfile.html#tarfile.TarFile.extract "Link to this definition")
    
Extract a member from the archive to the current working directory, using its full name. Its file information is extracted as accurately as possible. _member_ may be a filename or a [`TarInfo`](https://docs.python.org/3/library/tarfile.html#tarfile.TarInfo "tarfile.TarInfo") object. You can specify a different directory using _path_. _path_ may be a [path-like object](https://docs.python.org/3/glossary.html#term-path-like-object). File attributes (owner, mtime, mode) are set unless _set_attrs_ is false.
The _numeric_owner_ and _filter_ arguments are the same as for [`extractall()`](https://docs.python.org/3/library/tarfile.html#tarfile.TarFile.extractall "tarfile.TarFile.extractall").
Note
The [`extract()`](https://docs.python.org/3/library/tarfile.html#tarfile.TarFile.extract "tarfile.TarFile.extract") method does not take care of several extraction issues. In most cases you should consider using the [`extractall()`](https://docs.python.org/3/library/tarfile.html#tarfile.TarFile.extractall "tarfile.TarFile.extractall") method.
Warning
See the warning for [`extractall()`](https://docs.python.org/3/library/tarfile.html#tarfile.TarFile.extractall "tarfile.TarFile.extractall").
Set `filter='data'` to prevent the most dangerous security issues, and read the [Extraction filters](https://docs.python.org/3/library/tarfile.html#tarfile-extraction-filter) section for details.
Changed in version 3.2: Added the _set_attrs_ parameter.
Changed in version 3.5: Added the _numeric_owner_ parameter.
Changed in version 3.6: The _path_ parameter accepts a [path-like object](https://docs.python.org/3/glossary.html#term-path-like-object).
Changed in version 3.12: Added the _filter_ parameter. 

TarFile.extractfile(_member_)[¶](https://docs.python.org/3/library/tarfile.html#tarfile.TarFile.extractfile "Link to this definition")
    
Extract a member from the archive as a file object. _member_ may be a filename or a [`TarInfo`](https://docs.python.org/3/library/tarfile.html#tarfile.TarInfo "tarfile.TarInfo") object. If _member_ is a regular file or a link, an [`io.BufferedReader`](https://docs.python.org/3/library/io.html#io.BufferedReader "io.BufferedReader") object is returned. For all other existing members, [`None`](https://docs.python.org/3/library/constants.html#None "None") is returned. If _member_ does not appear in the archive, [`KeyError`](https://docs.python.org/3/library/exceptions.html#KeyError "KeyError") is raised.
Changed in version 3.3: Return an [`io.BufferedReader`](https://docs.python.org/3/library/io.html#io.BufferedReader "io.BufferedReader") object.
Changed in version 3.13: The returned [`io.BufferedReader`](https://docs.python.org/3/library/io.html#io.BufferedReader "io.BufferedReader") object has the `mode` attribute which is always equal to `'rb'`. 

TarFile.errorlevel _:[ int](https://docs.python.org/3/library/functions.html#int "int")_[¶](https://docs.python.org/3/library/tarfile.html#tarfile.TarFile.errorlevel "Link to this definition")
    
If _errorlevel_ is `0`, errors are ignored when using [`TarFile.extract()`](https://docs.python.org/3/library/tarfile.html#tarfile.TarFile.extract "tarfile.TarFile.extract") and [`TarFile.extractall()`](https://docs.python.org/3/library/tarfile.html#tarfile.TarFile.extractall "tarfile.TarFile.extractall"). Nevertheless, they appear as error messages in the debug output when _debug_ is greater than 0. If `1` (the default), all _fatal_ errors are raised as [`OSError`](https://docs.python.org/3/library/exceptions.html#OSError "OSError") or [`FilterError`](https://docs.python.org/3/library/tarfile.html#tarfile.FilterError "tarfile.FilterError") exceptions. If `2`, all _non-fatal_ errors are raised as [`TarError`](https://docs.python.org/3/library/tarfile.html#tarfile.TarError "tarfile.TarError") exceptions as well.
Some exceptions, e.g. ones caused by wrong argument types or data corruption, are always raised.
Custom [extraction filters](https://docs.python.org/3/library/tarfile.html#tarfile-extraction-filter) should raise [`FilterError`](https://docs.python.org/3/library/tarfile.html#tarfile.FilterError "tarfile.FilterError") for _fatal_ errors and [`ExtractError`](https://docs.python.org/3/library/tarfile.html#tarfile.ExtractError "tarfile.ExtractError") for _non-fatal_ ones.
Note that when an exception is raised, the archive may be partially extracted. It is the user’s responsibility to clean up.