Title: Build Improvements in Python
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section details various build system updates in Python, including enhancements to the configure scripts and tests for compiler support, fixes for GCC detection during cross-compilation, and adjustments to file handling to avoid issues in test setups.
---

### Build[¶](https://docs.python.org/3/whatsnew/changelog.html#id248 "Link to this heading")
  * [bpo-46602](https://bugs.python.org/issue?@action=redirect&bpo=46602): Tidied up configure.ac so that conftest.c is truncated rather than appended. This assists in the case where the ‘rm’ of conftest.c fails to happen between tests. Downstream issues such as a clobbered SOABI can result.
  * [bpo-46600](https://bugs.python.org/issue?@action=redirect&bpo=46600): Fix the test checking if the C compiler supports `-Og` option in the `./configure` script to also use `-Og` on clang which supports it. Patch by Victor Stinner.
  * [bpo-38472](https://bugs.python.org/issue?@action=redirect&bpo=38472): Fix GCC detection in setup.py when cross-compiling. The C compiler is now run with LC_ALL=C. Previously, the detection failed with a German locale.
  * [bpo-46513](https://bugs.python.org/issue?@action=redirect&bpo=46513): **configure** no longer uses `AC_C_CHAR_UNSIGNED` macro and `pyconfig.h` no longer defines reserved symbol `__CHAR_UNSIGNED__`.
  * [bpo-46471](https://bugs.python.org/issue?@action=redirect&bpo=46471): Use global singletons for single byte bytes objects in deepfreeze.
  * [bpo-46443](https://bugs.python.org/issue?@action=redirect&bpo=46443): Deepfreeze now uses cached small integers as it saves some space for common small integers.
  * [bpo-46429](https://bugs.python.org/issue?@action=redirect&bpo=46429): Merge all deep-frozen files into one for space savings. Patch by Kumar Aditya.
  * [bpo-45569](https://bugs.python.org/issue?@action=redirect&bpo=45569): The build now defaults to using 30-bit digits for Python integers. Previously either 15-bit or 30-bit digits would be selected, depending on the platform. 15-bit digits may still be selected using the `--enable-big-digits=15` option to the `configure` script, or by defining `PYLONG_BITS_IN_DIGIT` in `pyconfig.h`.
  * [bpo-45925](https://bugs.python.org/issue?@action=redirect&bpo=45925): Update Windows installer to use SQLite 3.37.2.
  * [bpo-43112](https://bugs.python.org/issue?@action=redirect&bpo=43112): Detect musl libc as a separate SOABI (tagged as `linux-musl`).


### Windows[¶](https://docs.python.org/3/whatsnew/changelog.html#id249 "Link to this heading")
  * [bpo-33125](https://bugs.python.org/issue?@action=redirect&bpo=33125): The traditional EXE/MSI based installer for Windows is now available for ARM64
  * [bpo-46362](https://bugs.python.org/issue?@action=redirect&bpo=46362): os.path.abspath(“C:CON”) is now fixed to return “\\.CON”, not the same path. The regression was true of all legacy DOS devices such as COM1, LPT1, or NUL.
  * [bpo-44934](https://bugs.python.org/issue?@action=redirect&bpo=44934): The installer now offers a command-line only option to add the installation directory to the end of `PATH` instead of at the start.


### macOS[¶](https://docs.python.org/3/whatsnew/changelog.html#id250 "Link to this heading")
  * [bpo-45925](https://bugs.python.org/issue?@action=redirect&bpo=45925): Update macOS installer to SQLite 3.37.2.


### IDLE[¶](https://docs.python.org/3/whatsnew/changelog.html#id251 "Link to this heading")
  * [bpo-45296](https://bugs.python.org/issue?@action=redirect&bpo=45296): Clarify close, quit, and exit in IDLE. In the File menu, ‘Close’ and ‘Exit’ are now ‘Close Window’ (the current one) and ‘Exit’ is now ‘Exit IDLE’ (by closing all windows). In Shell, ‘quit()’ and ‘exit()’ mean ‘close Shell’. If there are no other windows, this also exits IDLE.


### C API[¶](https://docs.python.org/3/whatsnew/changelog.html#id252 "Link to this heading")
  * [bpo-40170](https://bugs.python.org/issue?@action=redirect&bpo=40170): Remove the `PyHeapType_GET_MEMBERS()` macro. It was exposed in the public C API by mistake, it must only be used by Python internally. Use the `PyTypeObject.tp_members` member instead. Patch by Victor Stinner.
  * [bpo-40170](https://bugs.python.org/issue?@action=redirect&bpo=40170): Move _Py_GetAllocatedBlocks() and _PyObject_DebugMallocStats() private functions to the internal C API. Patch by Victor Stinner.
  * [bpo-46433](https://bugs.python.org/issue?@action=redirect&bpo=46433): The internal function _PyType_GetModuleByDef now correctly handles inheritance patterns involving static types.
  * [bpo-45459](https://bugs.python.org/issue?@action=redirect&bpo=45459): [`Py_buffer`](https://docs.python.org/3/c-api/buffer.html#c.Py_buffer "Py_buffer") and various `Py_buffer` related functions are now part of the limited API and stable ABI.
  * [bpo-14916](https://bugs.python.org/issue?@action=redirect&bpo=14916): Fixed bug in the tokenizer that prevented `PyRun_InteractiveOne` from parsing from the provided FD.