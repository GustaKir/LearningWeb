Title: Using Import Statements in IDLE
URL: https://docs.python.org/3/library/idle.html
Summary: In IDLE, certain functions require explicit import statements, such as 'import turtle' for 'turtle.write()' to work. Code context can be toggled to show a pane that retains visibility of the block header lines, making it easier to work with larger code sections.
---

alltip appears because Idle imports itertools into the user process for its own use. (This could change.) Enter `turtle.write(` and nothing appears. Idle does not itself import turtle. The menu entry and shortcut also do nothing. Enter `import turtle`. Thereafter, `turtle.write(` will display a calltip.
In an editor, import statements have no effect until one runs the file. One might want to run a file after writing import statements, after adding function definitions, or after opening an existing file.
### Code Context[¶](https://docs.python.org/3/library/idle.html#code-context "Link to this heading")
Within an editor window containing Python code, code context can be toggled in order to show or hide a pane at the top of the window. When shown, this pane freezes the opening lines for block code, such as those beginning with `class`, `def`, or `if` keywords, that would have otherwise scrolled out of view. The size of the pane will be expanded and contracted as needed to show the all current levels of context, up to the maximum number of lines defined in the Configure IDLE dialog (which defaults to 15). If there are no current context lines and the feature is toggled on, a single blank line will display. Clicking on a line in the context pane will move that line to the top of the editor.
The text and background colors for the context pane can be configured under the Highlights tab in the Configure IDLE dialog.
### Shell window[¶](https://docs.python.org/3/library/idle.html#shell-window "Link to this heading")
In IDLE’s Shell, enter, edit, and recall complete statements. (Most consoles and terminals only work with a single physical line at a time).
Submit a single-line statement for execution by hitting `Return` with the cursor anywhere on the line. If a line is extended with Backslash (`\`), the cursor must be on the last physical line. Submit a multi-line compound statement by entering a blank line after the statement.
When one pastes code into Shell, it is not compiled and possibly executed until one hits `Return`, as specified above. One may edit pasted code first. If one pastes more than one statement into Shell, the result will be a [`SyntaxError`](https://docs.python.org/3/library/exceptions.html#SyntaxError "SyntaxError") when multiple statements are compiled as if they were one.
Lines containing `RESTART` mean that the user execution process has been re-started. This occurs when the user execution process has crashed, when one requests a restart on the Shell menu, or when one runs code in an editor window.
The editing features described in previous subsections work when entering code interactively. IDLE’s Shell window also responds to the following:
  * `C`-`c` attempts to interrupt statement execution (but may fail).
  * `C`-`d` closes Shell if typed at a `>>>` prompt.
  * `Alt`-`p` and `Alt`-`n` (`C`-`p` and `C`-`n` on macOS) retrieve to the current prompt the previous or next previously entered statement that matches anything already typed.
  * `Return` while the cursor is on any previous statement appends the latter to anything already typed at the prompt.