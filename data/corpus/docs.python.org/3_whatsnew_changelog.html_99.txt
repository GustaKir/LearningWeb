Title: Python 3 Change Log Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: Recent changes include enhancements to `threading.Lock` by making it a proper class, the addition of `dbm.sqlite3` as the default backend for `dbm`, and a reversion of previous changes to `TestResult` methods for consistent behavior.
---

Previously it could leave a random garbage in some fields.
  * [gh-114315](https://github.com/python/cpython/issues/114315): Make [`threading.Lock`](https://docs.python.org/3/library/threading.html#threading.Lock "threading.Lock") a real class, not a factory function. Add `__new__` to `_thread.lock` type.
  * [gh-100414](https://github.com/python/cpython/issues/100414): Add [`dbm.sqlite3`](https://docs.python.org/3/library/dbm.html#module-dbm.sqlite3 "dbm.sqlite3: SQLite backend for dbm \(All\)") as a backend to [`dbm`](https://docs.python.org/3/library/dbm.html#module-dbm "dbm: Interfaces to various Unix "database" formats."), and make it the new default `dbm` backend. Patch by Raymond Hettinger and Erlend E. Aasland.
  * [gh-113267](https://github.com/python/cpython/issues/113267): Revert changes in [gh-106584](https://github.com/python/cpython/issues/106584) which made calls of `TestResult` methods `startTest()` and `stopTest()` unbalanced.
  * [gh-75128](https://github.com/python/cpython/issues/75128): Ignore an [`OSError`](https://docs.python.org/3/library/exceptions.html#OSError "OSError") in `asyncio.BaseEventLoop.create_server()` when IPv6 is available but the interface cannot actually support it.
  * [gh-114423](https://github.com/python/cpython/issues/114423): `_DummyThread` entries in `threading._active` are now automatically removed when the related thread dies.
  * [gh-114257](https://github.com/python/cpython/issues/114257): Dismiss the `FileNotFound` error in [`ctypes.util.find_library()`](https://docs.python.org/3/library/ctypes.html#ctypes.util.find_library "ctypes.util.find_library") and just return `None` on Linux.
  * [gh-114321](https://github.com/python/cpython/issues/114321): Expose more platform specific constants in the [`fcntl`](https://docs.python.org/3/library/fcntl.html#module-fcntl "fcntl: The fcntl\(\) and ioctl\(\) system calls. \(Unix\)") module on Linux, macOS, FreeBSD and NetBSD.
  * [gh-114328](https://github.com/python/cpython/issues/114328): The [`tty.setcbreak()`](https://docs.python.org/3/library/tty.html#tty.setcbreak "tty.setcbreak") and new [`tty.cfmakecbreak()`](https://docs.python.org/3/library/tty.html#tty.cfmakecbreak "tty.cfmakecbreak") no longer clears the terminal input ICRLF flag. This fixes a regression introduced in 3.12 that no longer matched how OSes define cbreak mode in their `stty(1)` manual pages.
  * [gh-114281](https://github.com/python/cpython/issues/114281): Remove type hints from `Lib/asyncio/staggered.py`. The annotations in the [typeshed](https://github.com/python/typeshed) project should be used instead.
  * [gh-101438](https://github.com/python/cpython/issues/101438): Avoid reference cycle in ElementTree.iterparse. The iterator returned by `ElementTree.iterparse` may hold on to a file descriptor. The reference cycle prevented prompt clean-up of the file descriptor if the returned iterator was not exhausted.
  * [gh-114198](https://github.com/python/cpython/issues/114198): The signature for the `__replace__` method on [`dataclasses`](https://docs.python.org/3/library/dataclasses.html#module-dataclasses "dataclasses: Generate special methods on user-defined classes.") now has the first argument named `self`, rather than `obj`.
  * [gh-104522](https://github.com/python/cpython/issues/104522): [`OSError`](https://docs.python.org/3/library/exceptions.html#OSError "OSError") raised when run a subprocess now only has _filename_ attribute set to _cwd_ if the error was caused by a failed attempt to change the current directory.
  * [gh-114149](https://github.com/python/cpython/issues/114149): Enum: correctly handle tuple subclasses in custom `__new__`.
  * [gh-83648](https://github.com/python/cpython/issues/83648): Support deprecation of options, positional arguments and subcommands in [`argparse`](https://docs.python.org/3/library/argparse.html#module-argparse "argparse: Command-line option and argument parsing library.").
  * [gh-114087](https://github.com/python/cpython/issues/114087): Speed up `dataclasses.asdict` up to 1.35x.
  * [gh-109534](https://github.com/python/cpython/issues/109534): Fix a reference leak in `asyncio.selector_events.BaseSelectorEventLoop` when SSL handshakes fail.