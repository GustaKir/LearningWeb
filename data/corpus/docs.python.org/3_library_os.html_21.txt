Title: os.splice Function in Python
URL: https://docs.python.org/3/library/os.html
Summary: The os.splice function transfers a specified number of bytes from one file descriptor to another, allowing for efficient data movement without additional copying overhead. It requires that at least one file descriptor refers to a pipe and that both descriptors reside on the same filesystem to avoid an OSError.
---

os.splice(_src_ , _dst_ , _count_ , _offset_src =None_, _offset_dst =None_)[¶](https://docs.python.org/3/library/os.html#os.splice "Link to this definition")
    
Transfer _count_ bytes from file descriptor _src_ , starting from offset _offset_src_ , to file descriptor _dst_ , starting from offset _offset_dst_. At least one of the file descriptors must refer to a pipe. If _offset_src_ is `None`, then _src_ is read from the current position; respectively for _offset_dst_. The offset associated to the file descriptor that refers to a pipe must be `None`. The files pointed to by _src_ and _dst_ must reside in the same filesystem, otherwise an [`OSError`](https://docs.python.org/3/library/exceptions.html#OSError "OSError") is raised with [`errno`](https://docs.python.org/3/library/exceptions.html#OSError.errno "OSError.errno") set to [`errno.EXDEV`](https://docs.python.org/3/library/errno.html#errno.EXDEV "errno.EXDEV").
This copy is done without the additional cost of transferring data from the kernel to user space and then back into the kernel. Additionally, some filesystems could implement extra optimizations. The copy is done as if both files are opened as binary.
Upon successful completion, returns the number of bytes spliced to or from the pipe. A return value of 0 means end of input. If _src_ refers to a pipe, then this means that there was no data to transfer, and it would not make sense to block because there are no writers connected to the write end of the pipe.
[Availability](https://docs.python.org/3/library/intro.html#availability): Linux >= 2.6.17 with glibc >= 2.5
Added in version 3.10. 

os.SPLICE_F_MOVE[¶](https://docs.python.org/3/library/os.html#os.SPLICE_F_MOVE "Link to this definition")


os.SPLICE_F_NONBLOCK[¶](https://docs.python.org/3/library/os.html#os.SPLICE_F_NONBLOCK "Link to this definition")


os.SPLICE_F_MORE[¶](https://docs.python.org/3/library/os.html#os.SPLICE_F_MORE "Link to this definition")
    
Added in version 3.10. 

os.readv(_fd_ , _buffers_ , _/_)[¶](https://docs.python.org/3/library/os.html#os.readv "Link to this definition")
    
Read from a file descriptor _fd_ into a number of mutable [bytes-like objects](https://docs.python.org/3/glossary.html#term-bytes-like-object) _buffers_. Transfer data into each buffer until it is full and then move on to the next buffer in the sequence to hold the rest of the data.
Return the total number of bytes actually read which can be less than the total capacity of all the objects.
The operating system may set a limit ([`sysconf()`](https://docs.python.org/3/library/os.html#os.sysconf "os.sysconf") value `'SC_IOV_MAX'`) on the number of buffers that can be used.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix.
Added in version 3.3. 

os.tcgetpgrp(_fd_ , _/_)[¶](https://docs.python.org/3/library/os.html#os.tcgetpgrp "Link to this definition")
    
Return the process group associated with the terminal given by _fd_ (an open file descriptor as returned by [`os.open()`](https://docs.python.org/3/library/os.html#os.open "os.open")).
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix, not WASI. 

os.tcsetpgrp(_fd_ , _pg_ , _/_)[¶](https://docs.python.org/3/library/os.html#os.tcsetpgrp "Link to this definition")
    
Set the process group associated with the terminal given by _fd_ (an open file descriptor as returned by [`os.open()`](https://docs.python.org/3/library/os.html#os.open "os.open")) to _pg_.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix, not WASI. 

os.ttyname(_fd_ , _/_)[¶](https://docs.python.org/3/library/os.html#os.ttyname "Link to this definition")
    
Return a string which specifies the terminal device associated with file descriptor _fd_. If _fd_ is not associated with a terminal device, an exception is raised.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix. 

os.unlockpt(_fd_ , _/_)[¶](https://docs.python.org/3/library/os.html#os.unlockpt "Link to this definition")
    
Unlock the slave pseudo-terminal device associated with the master pseudo-terminal device to which the file descriptor _fd_ refers. The file descriptor _fd_ is not closed upon failure.
Calls the C standard library function `unlockpt()`.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix, not WASI.
Added in version 3.13.