Title: Environment Variables for Python Memory Allocators
URL: https://docs.python.org/3/using/cmdline.html
Summary: This section discusses the `PYTHONMALLOCSTATS` and `PYTHONLEGACYWINDOWSFSENCODING` environment variables. `PYTHONMALLOCSTATS` enables memory allocation statistics for pymalloc, effective from Python 3.6, and is ignored if `PYTHONMALLOC` is set. The `PYTHONLEGACYWINDOWSFSENCODING` variable adjusts filesystem encoding for legacy Windows compatibility.
---

Added in version 3.6.
Changed in version 3.7: Added the `"default"` allocator. 

PYTHONMALLOCSTATS[¶](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONMALLOCSTATS "Link to this definition")
    
If set to a non-empty string, Python will print statistics of the [pymalloc memory allocator](https://docs.python.org/3/c-api/memory.html#pymalloc) every time a new pymalloc object arena is created, and on shutdown.
This variable is ignored if the [`PYTHONMALLOC`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONMALLOC) environment variable is used to force the `malloc()` allocator of the C library, or if Python is configured without `pymalloc` support.
Changed in version 3.6: This variable can now also be used on Python compiled in release mode. It now has no effect if set to an empty string. 

PYTHONLEGACYWINDOWSFSENCODING[¶](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONLEGACYWINDOWSFSENCODING "Link to this definition")
    
If set to a non-empty string, the default [filesystem encoding and error handler](https://docs.python.org/3/glossary.html#term-filesystem-encoding-and-error-handler) mode will revert to their pre-3.6 values of ‘mbcs’ and ‘replace’, respectively. Otherwise, the new defaults ‘utf-8’ and ‘surrogatepass’ are used.
This may also be enabled at runtime with [`sys._enablelegacywindowsfsencoding()`](https://docs.python.org/3/library/sys.html#sys._enablelegacywindowsfsencoding "sys._enablelegacywindowsfsencoding").
[Availability](https://docs.python.org/3/library/intro.html#availability): Windows.
Added in version 3.6: See [**PEP 529**](https://peps.python.org/pep-0529/) for more details. 

PYTHONLEGACYWINDOWSSTDIO[¶](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONLEGACYWINDOWSSTDIO "Link to this definition")
    
If set to a non-empty string, does not use the new console reader and writer. This means that Unicode characters will be encoded according to the active console code page, rather than using utf-8.
This variable is ignored if the standard streams are redirected (to files or pipes) rather than referring to console buffers.
[Availability](https://docs.python.org/3/library/intro.html#availability): Windows.
Added in version 3.6. 

PYTHONCOERCECLOCALE[¶](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONCOERCECLOCALE "Link to this definition")
    
If set to the value `0`, causes the main Python command line application to skip coercing the legacy ASCII-based C and POSIX locales to a more capable UTF-8 based alternative.
If this variable is _not_ set (or is set to a value other than `0`), the `LC_ALL` locale override environment variable is also not set, and the current locale reported for the `LC_CTYPE` category is either the default `C` locale, or else the explicitly ASCII-based `POSIX` locale, then the Python CLI will attempt to configure the following locales for the `LC_CTYPE` category in the order listed before loading the interpreter runtime:
  * `C.UTF-8`
  * `C.utf8`
  * `UTF-8`