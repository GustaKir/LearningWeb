Title: MIMEBase Class Overview
URL: https://docs.python.org/3/library/email.mime.html
Summary: The `MIMEBase` class in the `email.mime.base` module serves as the foundational class for all MIME-specific subclasses of the `Message` class. While instances of `MIMEBase` are rarely created directly, it offers a base for developing more specialized MIME-aware subclasses. The class requires parameters for the major content type and subtype.
---

_class_ email.mime.base.MIMEBase(__maintype_ , __subtype_ , _*_ , _policy =compat32_, _** _params_)[¶](https://docs.python.org/3/library/email.mime.html#email.mime.base.MIMEBase "Link to this definition")
    
Module: [`email.mime.base`](https://docs.python.org/3/library/email.mime.html#module-email.mime.base "email.mime.base")
This is the base class for all the MIME-specific subclasses of [`Message`](https://docs.python.org/3/library/email.compat32-message.html#email.message.Message "email.message.Message"). Ordinarily you won’t create instances specifically of [`MIMEBase`](https://docs.python.org/3/library/email.mime.html#email.mime.base.MIMEBase "email.mime.base.MIMEBase"), although you could. [`MIMEBase`](https://docs.python.org/3/library/email.mime.html#email.mime.base.MIMEBase "email.mime.base.MIMEBase") is provided primarily as a convenient base class for more specific MIME-aware subclasses.
__maintype_ is the _Content-Type_ major type (e.g. _text_ or _image_), and __subtype_ is the _Content-Type_ minor type (e.g. _plain_ or _gif_). __params_ is a parameter key/value dictionary and is passed directly to [`Message.add_header`](https://docs.python.org/3/library/email.compat32-message.html#email.message.Message.add_header "email.message.Message.add_header").
If _policy_ is specified, (defaults to the [`compat32`](https://docs.python.org/3/library/email.policy.html#email.policy.Compat32 "email.policy.Compat32") policy) it will be passed to [`Message`](https://docs.python.org/3/library/email.compat32-message.html#email.message.Message "email.message.Message").
The [`MIMEBase`](https://docs.python.org/3/library/email.mime.html#email.mime.base.MIMEBase "email.mime.base.MIMEBase") class always adds a _Content-Type_ header (based on __maintype_ , __subtype_ , and __params_), and a _MIME-Version_ header (always set to `1.0`).
Changed in version 3.6: Added _policy_ keyword-only parameter. 

_class_ email.mime.nonmultipart.MIMENonMultipart[¶](https://docs.python.org/3/library/email.mime.html#email.mime.nonmultipart.MIMENonMultipart "Link to this definition")
    
Module: [`email.mime.nonmultipart`](https://docs.python.org/3/library/email.mime.html#module-email.mime.nonmultipart "email.mime.nonmultipart")
A subclass of [`MIMEBase`](https://docs.python.org/3/library/email.mime.html#email.mime.base.MIMEBase "email.mime.base.MIMEBase"), this is an intermediate base class for MIME messages that are not _multipart_. The primary purpose of this class is to prevent the use of the [`attach()`](https://docs.python.org/3/library/email.compat32-message.html#email.message.Message.attach "email.message.Message.attach") method, which only makes sense for _multipart_ messages. If [`attach()`](https://docs.python.org/3/library/email.compat32-message.html#email.message.Message.attach "email.message.Message.attach") is called, a [`MultipartConversionError`](https://docs.python.org/3/library/email.errors.html#email.errors.MultipartConversionError "email.errors.MultipartConversionError") exception is raised. 

_class_ email.mime.multipart.MIMEMultipart(__subtype ='mixed'_, _boundary =None_, __subparts =None_, _*_ , _policy =compat32_, _** _params_)[¶](https://docs.python.org/3/library/email.mime.html#email.mime.multipart.MIMEMultipart "Link to this definition")
    
Module: [`email.mime.multipart`](https://docs.python.org/3/library/email.mime.html#module-email.mime.multipart "email.mime.multipart")
A subclass of [`MIMEBase`](https://docs.python.org/3/library/email.mime.html#email.mime.base.MIMEBase "email.mime.base.MIMEBase"), this is an intermediate base class for MIME messages that are _multipart_. Optional __subtype_ defaults to _mixed_ , but can be used to specify the subtype of the message. A _Content-Type_ header of _multipart/_subtype_ will be added to the message object. A _MIME-Version_ header will also be added.
Optional _boundary_ is the multipart boundary string. When `None` (the default), the boundary is calculated when needed (for example, when the message is serialized).
__subparts_ is a sequence of initial subparts for the payload. It must be possible to convert this sequence to a list. You can always attach new subparts to the message by using the [`Message.attach`](https://docs.python.org/3/library/email.compat32-message.html#email.message.Message.attach "email.message.Message.attach") method.
Optional _policy_ argument defaults to [`compat32`](https://docs.python.org/3/library/email.policy.html#email.policy.Compat32 "email.policy.Compat32").
Additional parameters for the _Content-Type_ header are taken from the keyword arguments, or passed into the __params_ argument, which is a keyword dictionary.
Changed in version 3.6: Added _policy_ keyword-only parameter.