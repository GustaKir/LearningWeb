Title: Testing Support Functions in Python
URL: https://docs.python.org/3/library/test.html
Summary: This section discusses utility functions for testing in Python, including setting temporary values in objects within a context block and flushing standard output streams. It covers how to manage `obj[
---

```

This will set `obj["item"]` to 5 for the duration of the `with` block, restoring the old value at the end of the block. If `item` doesn’t exist on `obj`, it will be created and then deleted at the end of the block.
The old value (or `None` if it doesn’t exist) will be assigned to the target of the “as” clause, if there is one. 

test.support.flush_std_streams()[¶](https://docs.python.org/3/library/test.html#test.support.flush_std_streams "Link to this definition")
    
Call the `flush()` method on [`sys.stdout`](https://docs.python.org/3/library/sys.html#sys.stdout "sys.stdout") and then on [`sys.stderr`](https://docs.python.org/3/library/sys.html#sys.stderr "sys.stderr"). It can be used to make sure that the logs order is consistent before writing into stderr.
Added in version 3.11. 

test.support.print_warning(_msg_)[¶](https://docs.python.org/3/library/test.html#test.support.print_warning "Link to this definition")
    
Print a warning into [`sys.__stderr__`](https://docs.python.org/3/library/sys.html#sys.__stderr__ "sys.__stderr__"). Format the message as: `f"Warning -- {msg}"`. If _msg_ is made of multiple lines, add `"Warning -- "` prefix to each line.
Added in version 3.9. 

test.support.wait_process(_pid_ , _*_ , _exitcode_ , _timeout =None_)[¶](https://docs.python.org/3/library/test.html#test.support.wait_process "Link to this definition")
    
Wait until process _pid_ completes and check that the process exit code is _exitcode_.
Raise an [`AssertionError`](https://docs.python.org/3/library/exceptions.html#AssertionError "AssertionError") if the process exit code is not equal to _exitcode_.
If the process runs longer than _timeout_ seconds ([`SHORT_TIMEOUT`](https://docs.python.org/3/library/test.html#test.support.SHORT_TIMEOUT "test.support.SHORT_TIMEOUT") by default), kill the process and raise an [`AssertionError`](https://docs.python.org/3/library/exceptions.html#AssertionError "AssertionError"). The timeout feature is not available on Windows.
Added in version 3.9. 

test.support.calcobjsize(_fmt_)[¶](https://docs.python.org/3/library/test.html#test.support.calcobjsize "Link to this definition")
    
Return the size of the [`PyObject`](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject") whose structure members are defined by _fmt_. The returned value includes the size of the Python object header and alignment. 

test.support.calcvobjsize(_fmt_)[¶](https://docs.python.org/3/library/test.html#test.support.calcvobjsize "Link to this definition")
    
Return the size of the [`PyVarObject`](https://docs.python.org/3/c-api/structures.html#c.PyVarObject "PyVarObject") whose structure members are defined by _fmt_. The returned value includes the size of the Python object header and alignment. 

test.support.checksizeof(_test_ , _o_ , _size_)[¶](https://docs.python.org/3/library/test.html#test.support.checksizeof "Link to this definition")
    
For testcase _test_ , assert that the `sys.getsizeof` for _o_ plus the GC header size equals _size_. 

@test.support.anticipate_failure(_condition_)[¶](https://docs.python.org/3/library/test.html#test.support.anticipate_failure "Link to this definition")
    
A decorator to conditionally mark tests with [`unittest.expectedFailure()`](https://docs.python.org/3/library/unittest.html#unittest.expectedFailure "unittest.expectedFailure"). Any use of this decorator should have an associated comment identifying the relevant tracker issue. 

test.support.system_must_validate_cert(_f_)[¶](https://docs.python.org/3/library/test.html#test.support.system_must_validate_cert "Link to this definition")
    
A decorator that skips the decorated test on TLS certification validation failures. 

@test.support.run_with_locale(_catstr_ , _* locales_)[¶](https://docs.python.org/3/library/test.html#test.support.run_with_locale "Link to this definition")
    
A decorator for running a function in a different locale, correctly resetting it after it has finished. _catstr_ is the locale category as a string (for example `"LC_ALL"`). The _locales_ passed will be tried sequentially, and the first valid locale will be used. 

@test.support.run_with_tz(_tz_)[¶](https://docs.python.org/3/library/test.html#test.support.run_with_tz "Link to this definition")
    
A decorator for running a function in a specific timezone, correctly resetting it after it has finished. 

@test.support.requires_freebsd_version(_* min_version_)[¶](https://docs.python.org/3/library/test.html#test.support.requires_freebsd_version "Link to this definition")
    
Decorator for the minimum version when running test on FreeBSD. If the FreeBSD version is less than the minimum, the test is skipped. 

@test.support.requires_linux_version(_* min_version_)[¶](https://docs.python.org/3/library/test.html#test.support.requires_linux_version "Link to this definition")
    
Decorator for the minimum version when running test on Linux. If the Linux version is less than the minimum, the test is skipped.