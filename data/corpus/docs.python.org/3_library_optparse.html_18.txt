Title: Optparse Options: Append and Count
URL: https://docs.python.org/3/library/optparse.html
Summary: This section describes the 'append_const' option in the optparse module, which appends a constant value to a list if the option is encountered, and the 'count' option, which increments an integer stored at the specified destination.
---

```

  * `"append_const"` [required: [`const`](https://docs.python.org/3/library/optparse.html#optparse.Option.const "optparse.Option.const"); relevant: [`dest`](https://docs.python.org/3/library/optparse.html#optparse.Option.dest "optparse.Option.dest")]
Like `"store_const"`, but the value [`const`](https://docs.python.org/3/library/optparse.html#optparse.Option.const "optparse.Option.const") is appended to [`dest`](https://docs.python.org/3/library/optparse.html#optparse.Option.dest "optparse.Option.dest"); as with `"append"`, [`dest`](https://docs.python.org/3/library/optparse.html#optparse.Option.dest "optparse.Option.dest") defaults to `None`, and an empty list is automatically created the first time the option is encountered.
  * `"count"` [relevant: [`dest`](https://docs.python.org/3/library/optparse.html#optparse.Option.dest "optparse.Option.dest")]
Increment the integer stored at [`dest`](https://docs.python.org/3/library/optparse.html#optparse.Option.dest "optparse.Option.dest"). If no default value is supplied, [`dest`](https://docs.python.org/3/library/optparse.html#optparse.Option.dest "optparse.Option.dest") is set to zero before being incremented the first time.
Example:
```
parser.add_option("-v", action="count", dest="verbosity")

```

The first time `-v` is seen on the command line, [`optparse`](https://docs.python.org/3/library/optparse.html#module-optparse "optparse: Command-line option parsing library.") does the equivalent of:
```
options.verbosity = 0
options.verbosity += 1

```

Every subsequent occurrence of `-v` results in
```
options.verbosity += 1

```

  * `"callback"` [required: [`callback`](https://docs.python.org/3/library/optparse.html#optparse.Option.callback "optparse.Option.callback"); relevant: [`type`](https://docs.python.org/3/library/optparse.html#optparse.Option.type "optparse.Option.type"), [`nargs`](https://docs.python.org/3/library/optparse.html#optparse.Option.nargs "optparse.Option.nargs"), [`callback_args`](https://docs.python.org/3/library/optparse.html#optparse.Option.callback_args "optparse.Option.callback_args"), [`callback_kwargs`](https://docs.python.org/3/library/optparse.html#optparse.Option.callback_kwargs "optparse.Option.callback_kwargs")]
Call the function specified by [`callback`](https://docs.python.org/3/library/optparse.html#optparse.Option.callback "optparse.Option.callback"), which is called as
```
func(option, opt_str, value, parser, *args, **kwargs)

```

See section [Option Callbacks](https://docs.python.org/3/library/optparse.html#optparse-option-callbacks) for more detail.
  * `"help"`
Prints a complete help message for all the options in the current option parser. The help message is constructed from the `usage` string passed to OptionParserâ€™s constructor and the [`help`](https://docs.python.org/3/library/optparse.html#optparse.Option.help "optparse.Option.help") string passed to every option.
If no [`help`](https://docs.python.org/3/library/optparse.html#optparse.Option.help "optparse.Option.help") string is supplied for an option, it will still be listed in the help message. To omit an option entirely, use the special value `optparse.SUPPRESS_HELP`.
[`optparse`](https://docs.python.org/3/library/optparse.html#module-optparse "optparse: Command-line option parsing library.") automatically adds a [`help`](https://docs.python.org/3/library/optparse.html#optparse.Option.help "optparse.Option.help") option to all OptionParsers, so you do not normally need to create one.
Example:
```
fromoptparseimport OptionParser, SUPPRESS_HELP
# usually, a help option is added automatically, but that can
# be suppressed using the add_help_option argument
parser = OptionParser(add_help_option=False)
parser.add_option("-h", "--help", action="help")
parser.add_option("-v", action="store_true", dest="verbose",
         help="Be moderately verbose")
parser.add_option("--file", dest="filename",
         help="Input file to read data from")
parser.add_option("--secret", help=SUPPRESS_HELP)

```

If [`optparse`](https://docs.python.org/3/library/optparse.html#module-optparse "optparse: Command-line option parsing library.") sees either `-h` or `--help` on the command line, it will print something like the following help message to stdout (assuming `sys.argv[0]` is `"foo.py"`):
```
Usage: foo.py [options]
Options:
 -h, --help    Show this help message and exit
 -v        Be moderately verbose
 --file=FILENAME  Input file to read data from