Title: Python Changelog Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This update includes various bug fixes and enhancements based on contributions, such as restricting socket use for subprocess stdin to AIX, adjusting `DocTest.lineno` for objects without a docstring, and improving subprocess environment isolation for `ensurepip`.
---

Based on patch by Gregory Beauregard.
  * [bpo-46364](https://bugs.python.org/issue?@action=redirect&bpo=46364): Restrict use of sockets instead of pipes for stdin of subprocesses created by [`asyncio`](https://docs.python.org/3/library/asyncio.html#module-asyncio "asyncio: Asynchronous I/O.") to AIX platform only.
  * [bpo-28249](https://bugs.python.org/issue?@action=redirect&bpo=28249): Set [`doctest.DocTest.lineno`](https://docs.python.org/3/library/doctest.html#doctest.DocTest.lineno "doctest.DocTest.lineno") to `None` when an object does not have [`__doc__`](https://docs.python.org/3/library/stdtypes.html#definition.__doc__ "definition.__doc__").
  * [bpo-46197](https://bugs.python.org/issue?@action=redirect&bpo=46197): Fix [`ensurepip`](https://docs.python.org/3/library/ensurepip.html#module-ensurepip "ensurepip: Bootstrapping the "pip" installer into an existing Python installation or virtual environment.") environment isolation for subprocess running `pip`.
  * [bpo-45924](https://bugs.python.org/issue?@action=redirect&bpo=45924): Fix [`asyncio`](https://docs.python.org/3/library/asyncio.html#module-asyncio "asyncio: Asynchronous I/O.") incorrect traceback when futureâ€™s exception is raised multiple times. Patch by Kumar Aditya.
  * [bpo-45046](https://bugs.python.org/issue?@action=redirect&bpo=45046): Add support of context managers in [`unittest`](https://docs.python.org/3/library/unittest.html#module-unittest "unittest: Unit testing framework for Python."): methods [`enterContext()`](https://docs.python.org/3/library/unittest.html#unittest.TestCase.enterContext "unittest.TestCase.enterContext") and [`enterClassContext()`](https://docs.python.org/3/library/unittest.html#unittest.TestCase.enterClassContext "unittest.TestCase.enterClassContext") of class [`TestCase`](https://docs.python.org/3/library/unittest.html#unittest.TestCase "unittest.TestCase"), method [`enterAsyncContext()`](https://docs.python.org/3/library/unittest.html#unittest.IsolatedAsyncioTestCase.enterAsyncContext "unittest.IsolatedAsyncioTestCase.enterAsyncContext") of class [`IsolatedAsyncioTestCase`](https://docs.python.org/3/library/unittest.html#unittest.IsolatedAsyncioTestCase "unittest.IsolatedAsyncioTestCase") and function [`unittest.enterModuleContext()`](https://docs.python.org/3/library/unittest.html#unittest.enterModuleContext "unittest.enterModuleContext").
  * [bpo-44173](https://bugs.python.org/issue?@action=redirect&bpo=44173): Enable fast seeking of uncompressed unencrypted `zipfile.ZipExtFile`
  * [bpo-42627](https://bugs.python.org/issue?@action=redirect&bpo=42627): Fix incorrect parsing of Windows registry proxy settings
  * [bpo-42047](https://bugs.python.org/issue?@action=redirect&bpo=42047): Add [`threading.get_native_id()`](https://docs.python.org/3/library/threading.html#threading.get_native_id "threading.get_native_id") support for DragonFly BSD. Patch by David Carlier.
  * [bpo-14243](https://bugs.python.org/issue?@action=redirect&bpo=14243): The [`tempfile.NamedTemporaryFile`](https://docs.python.org/3/library/tempfile.html#tempfile.NamedTemporaryFile "tempfile.NamedTemporaryFile") function has a new optional parameter _delete_on_close_
  * [bpo-41246](https://bugs.python.org/issue?@action=redirect&bpo=41246): Give the same callback function for when the overlapped operation is done to the functions `recv`, `recv_into`, `recvfrom`, `sendto`, `send` and `sendfile` inside `IocpProactor`.
  * [bpo-39264](https://bugs.python.org/issue?@action=redirect&bpo=39264): Fixed `collections.UserDict.get()` to not call `__missing__()` when a value is not found. This matches the behavior of [`dict`](https://docs.python.org/3/library/stdtypes.html#dict "dict"). Patch by Bar Harel.
  * [bpo-38693](https://bugs.python.org/issue?@action=redirect&bpo=38693): [`importlib`](https://docs.python.org/3/library/importlib.html#module-importlib "importlib: The implementation of the import machinery.") now uses f-strings internally instead of `str.format`.
  * [bpo-38267](https://bugs.python.org/issue?@action=redirect&bpo=38267): Add _timeout_ parameter to [`asyncio.loop.shutdown_default_executor()`](https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.loop.shutdown_default_executor "asyncio.loop.shutdown_default_executor"). The default value is `None`, which means the executor will be given an unlimited amount of time.