Title: Python 3 Change Log - Recent Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This patch includes updates by Charlie Zhao, enhancing exception handling in `sys.monitoring` by adding the exception as a third argument to `PY_UNWIND` callbacks and introducing `RERAISE` events. It also raises a `ValueError` for monitoring callback function returns that cannot be disabled locally, and addresses multiprocessing synchronization issues to prevent segfaults.
---

Patch by Charlie Zhao.
  * [gh-106898](https://github.com/python/cpython/issues/106898): Add the exception as the third argument to `PY_UNIND` callbacks in `sys.monitoring`. This makes the `PY_UNWIND` callback consistent with the other exception handling callbacks.
  * [gh-106895](https://github.com/python/cpython/issues/106895): Raise a `ValueError` when a monitoring callback function returns `DISABLE` for events that cannot be disabled locally.
  * [gh-106897](https://github.com/python/cpython/issues/106897): Add a `RERAISE` event to `sys.monitoring`, which occurs when an exception is reraise, either explicitly by a plain `raise` statement, or implicitly in an `except` or `finally` block.
  * [gh-77377](https://github.com/python/cpython/issues/77377): Ensure that multiprocessing synchronization objects created in a fork context are not sent to a different process created in a spawn context. This changes a segfault into an actionable RuntimeError in the parent process.
  * [gh-106931](https://github.com/python/cpython/issues/106931): Statically allocated string objects are now interned globally instead of per-interpreter. This fixes a situation where such a string would only be interned in a single interpreter. Normal string objects are unaffected.
  * [gh-104621](https://github.com/python/cpython/issues/104621): Unsupported modules now always fail to be imported.
  * [gh-107122](https://github.com/python/cpython/issues/107122): Add [`dbm.ndbm.ndbm.clear()`](https://docs.python.org/3/library/dbm.html#dbm.ndbm.ndbm.clear "dbm.ndbm.ndbm.clear") to [`dbm.ndbm`](https://docs.python.org/3/library/dbm.html#module-dbm.ndbm "dbm.ndbm: The New Database Manager \(Unix\)"). Patch By Donghee Na.
  * [gh-107122](https://github.com/python/cpython/issues/107122): Add [`dbm.gnu.gdbm.clear()`](https://docs.python.org/3/library/dbm.html#dbm.gnu.gdbm.clear "dbm.gnu.gdbm.clear") to [`dbm.gnu`](https://docs.python.org/3/library/dbm.html#module-dbm.gnu "dbm.gnu: GNU database manager \(Unix\)"). Patch By Donghee Na.
  * [gh-107015](https://github.com/python/cpython/issues/107015): The ASYNC and AWAIT tokens are removed from the Grammar, which removes the possibility of making `async` and `await` soft keywords when using `feature_version<7` in [`ast.parse()`](https://docs.python.org/3/library/ast.html#ast.parse "ast.parse").
  * [gh-106917](https://github.com/python/cpython/issues/106917): Fix classmethod-style [`super()`](https://docs.python.org/3/library/functions.html#super "super") method calls (i.e., where the second argument to [`super()`](https://docs.python.org/3/library/functions.html#super "super"), or the implied second argument drawn from `self/cls` in the case of zero-arg super, is a type) when the target of the call is not a classmethod.
  * [gh-105699](https://github.com/python/cpython/issues/105699): Python no longer crashes due an infrequent race when initializing per-interpreter interned strings. The crash would manifest when the interpreter was finalized.
  * [gh-105699](https://github.com/python/cpython/issues/105699): Python no longer crashes due to an infrequent race in setting `Py_FileSystemDefaultEncoding` and `Py_FileSystemDefaultEncodeErrors` (both deprecated), when simultaneously initializing two isolated subinterpreters. Now they are only set during runtime initialization.
  * [gh-106908](https://github.com/python/cpython/issues/106908): Fix various hangs, reference leaks, test failures, and tracing/introspection bugs when running with `PYTHONUOPS` or [`-X uops`](https://docs.python.org/3/using/cmdline.html#cmdoption-X) enabled.
  * [gh-106092](https://github.com/python/cpython/issues/106092): Fix a segmentation fault caused by a use-after-free bug in `frame_dealloc` when the trashcan delays the deallocation of a `PyFrameObject`.
  * [gh-106485](https://github.com/python/cpython/issues/106485): Reduce the number of materialized instances dictionaries by dematerializing them when possible.
  * [gh-106719](https://github.com/python/cpython/issues/106719): No longer suppress arbitrary errors in the `__annotations__` getter and setter in the type and module types.
  * [gh-106723](https://github.com/python/cpython/issues/106723): Propagate `frozen_modules` to multiprocessing spawned process interpreters.
  * [gh-104909](https://github.com/python/cpython/issues/104909): Split `LOAD_ATTR_INSTANCE_VALUE` into micro-ops.
  * [gh-104909](https://github.com/python/cpython/issues/104909): Split [`LOAD_GLOBAL`](https://docs.python.org/3/library/dis.html#opcode-LOAD_GLOBAL) specializations into micro-ops.
  * [gh-106597](https://github.com/python/cpython/issues/106597): A new debug structure of offsets has been added to the `_PyRuntimeState` that will help out-of-process debuggers and profilers to obtain the offsets to relevant interpreter structures in a way that is agnostic of how Python was compiled and that doesnâ€™t require copying the headers.