Title: Recent Library Updates in Python
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: The document outlines recent fixes and improvements in Python's libraries, including solutions for clang rpath issues in distutils, addressing freed memory access in pyexpat.xmlparser, and enhancements to the threading.Lock.acquire() method to utilize the monotonic clock on compatible Unix systems.
---

### Library[¶](https://docs.python.org/3/whatsnew/changelog.html#id280 "Link to this heading")
  * [bpo-45371](https://bugs.python.org/issue?@action=redirect&bpo=45371): Fix clang rpath issue in `distutils`. The UnixCCompiler now uses correct clang option to add a runtime library directory (rpath) to a shared library.
  * [bpo-45329](https://bugs.python.org/issue?@action=redirect&bpo=45329): Fix freed memory access in `pyexpat.xmlparser` when building it with an installed expat library <= 2.2.0.
  * [bpo-41710](https://bugs.python.org/issue?@action=redirect&bpo=41710): On Unix, if the `sem_clockwait()` function is available in the C library (glibc 2.30 and newer), the [`threading.Lock.acquire()`](https://docs.python.org/3/library/threading.html#threading.Lock.acquire "threading.Lock.acquire") method now uses the monotonic clock ([`time.CLOCK_MONOTONIC`](https://docs.python.org/3/library/time.html#time.CLOCK_MONOTONIC "time.CLOCK_MONOTONIC")) for the timeout, rather than using the system clock ([`time.CLOCK_REALTIME`](https://docs.python.org/3/library/time.html#time.CLOCK_REALTIME "time.CLOCK_REALTIME")), to not be affected by system clock changes. Patch by Victor Stinner.
  * [bpo-1596321](https://bugs.python.org/issue?@action=redirect&bpo=1596321): Fix the `threading._shutdown()` function when the [`threading`](https://docs.python.org/3/library/threading.html#module-threading "threading: Thread-based parallelism.") module was imported first from a thread different than the main thread: no longer log an error at Python exit.
  * [bpo-45274](https://bugs.python.org/issue?@action=redirect&bpo=45274): Fix a race condition in the [`Thread.join()`](https://docs.python.org/3/library/threading.html#threading.Thread.join "threading.Thread.join") method of the [`threading`](https://docs.python.org/3/library/threading.html#module-threading "threading: Thread-based parallelism.") module. If the function is interrupted by a signal and the signal handler raises an exception, make sure that the thread remains in a consistent state to prevent a deadlock. Patch by Victor Stinner.
  * [bpo-21302](https://bugs.python.org/issue?@action=redirect&bpo=21302): In Unix operating systems, [`time.sleep()`](https://docs.python.org/3/library/time.html#time.sleep "time.sleep") now uses the `nanosleep()` function, if `clock_nanosleep()` is not available but `nanosleep()` is available. `nanosleep()` allows to sleep with nanosecond precision.
  * [bpo-21302](https://bugs.python.org/issue?@action=redirect&bpo=21302): On Windows, [`time.sleep()`](https://docs.python.org/3/library/time.html#time.sleep "time.sleep") now uses a waitable timer which has a resolution of 100 nanoseconds (10-7 seconds). Previously, it had a resolution of 1 millisecond (10-3 seconds). Patch by Benjamin Szőke and Victor Stinner.
  * [bpo-45238](https://bugs.python.org/issue?@action=redirect&bpo=45238): Fix `unittest.IsolatedAsyncioTestCase.debug()`: it runs now asynchronous methods and callbacks.
  * [bpo-36674](https://bugs.python.org/issue?@action=redirect&bpo=36674): [`unittest.TestCase.debug()`](https://docs.python.org/3/library/unittest.html#unittest.TestCase.debug "unittest.TestCase.debug") raises now a [`unittest.SkipTest`](https://docs.python.org/3/library/unittest.html#unittest.SkipTest "unittest.SkipTest") if the class or the test method are decorated with the skipping decorator.
  * [bpo-45235](https://bugs.python.org/issue?@action=redirect&bpo=45235): Fix an issue where argparse would not preserve values in a provided namespace when using a subparser with defaults.
  * [bpo-45183](https://bugs.python.org/issue?@action=redirect&bpo=45183): Have zipimport.zipimporter.find_spec() not raise an exception when the underlying zip file has been deleted and the internal cache has been reset via invalidate_cache().
  * [bpo-45234](https://bugs.python.org/issue?@action=redirect&bpo=45234): Fixed a regression in [`copyfile()`](https://docs.python.org/3/library/shutil.html#shutil.copyfile "shutil.copyfile"), [`copy()`](https://docs.python.org/3/library/shutil.html#shutil.copy "shutil.copy"), [`copy2()`](https://docs.python.org/3/library/shutil.html#shutil.copy2 "shutil.copy2") raising [`FileNotFoundError`](https://docs.python.org/3/library/exceptions.html#FileNotFoundError "FileNotFoundError") when source is a directory, which should raise [`IsADirectoryError`](https://docs.python.org/3/library/exceptions.html#IsADirectoryError "IsADirectoryError")
  * [bpo-45228](https://bugs.python.org/issue?@action=redirect&bpo=45228): Fix stack buffer overflow in parsing J1939 network address.
  * [bpo-45225](https://bugs.python.org/issue?@action=redirect&bpo=45225): use map function instead of genexpr in capwords.
  * [bpo-42135](https://bugs.python.org/issue?@action=redirect&bpo=42135): Fix typo: `importlib.find_loader` is really slated for removal in Python 3.12 not 3.10, like the others in PR 25169.
Patch by Hugo van Kemenade.
  * [bpo-20524](https://bugs.python.org/issue?@