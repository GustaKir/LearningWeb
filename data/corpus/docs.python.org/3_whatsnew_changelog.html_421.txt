Title: Platform-Specific Updates in Python
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section outlines recent updates and bug fixes for Python on Windows and macOS, including the inclusion of winsock2.h for timeval on Windows, increased stack space to prevent crashes, and enhanced IPv6 support in asyncio. For macOS, updates include linking `_tkinter` with non-system Tcl and Tk frameworks when building from source.
---

### Windows[¶](https://docs.python.org/3/whatsnew/changelog.html#id373 "Link to this heading")
  * [bpo-40650](https://bugs.python.org/issue?@action=redirect&bpo=40650): Include winsock2.h in pytime.c for timeval.
  * [bpo-40458](https://bugs.python.org/issue?@action=redirect&bpo=40458): Increase reserved stack space to prevent overflow crash on Windows.
  * [bpo-39148](https://bugs.python.org/issue?@action=redirect&bpo=39148): Add IPv6 support to [`asyncio`](https://docs.python.org/3/library/asyncio.html#module-asyncio "asyncio: Asynchronous I/O.") datagram endpoints in ProactorEventLoop. Change the raised exception for unknown address families to ValueError as it’s not coming from Windows API.


### macOS[¶](https://docs.python.org/3/whatsnew/changelog.html#id374 "Link to this heading")
  * [bpo-34956](https://bugs.python.org/issue?@action=redirect&bpo=34956): When building Python on macOS from source, `_tkinter` now links with non-system Tcl and Tk frameworks if they are installed in `/Library/Frameworks`, as had been the case on older releases of macOS. If a macOS SDK is explicitly configured, by using `--enable-universalsdk=` or `-isysroot`, only the SDK itself is searched. The default behavior can still be overridden with `--with-tcltk-includes` and `--with-tcltk-libs`.
  * [bpo-35569](https://bugs.python.org/issue?@action=redirect&bpo=35569): Expose RFC 3542 IPv6 socket options.


### Tools/Demos[¶](https://docs.python.org/3/whatsnew/changelog.html#id375 "Link to this heading")
  * [bpo-40479](https://bugs.python.org/issue?@action=redirect&bpo=40479): Update multissltest helper to test with latest OpenSSL 1.0.2, 1.1.0, 1.1.1, and 3.0.0-alpha.
  * [bpo-40431](https://bugs.python.org/issue?@action=redirect&bpo=40431): Fix a syntax typo in `turtledemo` that now raises a `SyntaxError`.
  * [bpo-40163](https://bugs.python.org/issue?@action=redirect&bpo=40163): Fix multissltest tool. OpenSSL has changed download URL for old releases. The multissltest tool now tries to download from current and old download URLs.


### C API[¶](https://docs.python.org/3/whatsnew/changelog.html#id376 "Link to this heading")
  * [bpo-39465](https://bugs.python.org/issue?@action=redirect&bpo=39465): Remove the `_PyUnicode_ClearStaticStrings()` function from the C API.
  * [bpo-38787](https://bugs.python.org/issue?@action=redirect&bpo=38787): Add PyCFunction_CheckExact() macro for exact type checks now that we allow subtypes of PyCFunction, as well as PyCMethod_CheckExact() and PyCMethod_Check() for the new PyCMethod subtype.
  * [bpo-40545](https://bugs.python.org/issue?@action=redirect&bpo=40545): Declare `_PyErr_GetTopmostException()` with `PyAPI_FUNC()` to properly export the function in the C API. The function remains private (`_Py`) prefix.
  * [bpo-40412](https://bugs.python.org/issue?@action=redirect&bpo=40412): Nullify inittab_copy during finalization, preventing future interpreter initializations in an embedded situation from crashing. Patch by Gregory Szorc.
  * [bpo-40429](https://bugs.python.org/issue?@action=redirect&bpo=40429): The [`PyThreadState_GetFrame()`](https://docs.python.org/3/c-api/init.html#c.PyThreadState_GetFrame "PyThreadState_GetFrame") function now returns a strong reference to the frame.
  * [bpo-40428](https://bugs.python.org/issue?@action=redirect&bpo=40428): Remove the following functions from the C API. Call [`PyGC_Collect()`](https://docs.python.org/3/c-api/gcsupport.html#c.PyGC_Collect "PyGC_Collect") explicitly to free all free lists.
    * `PyAsyncGen_ClearFreeLists()`
    * `PyContext_ClearFreeList()`
    * `PyDict_ClearFreeList()`
    * `PyFloat_ClearFreeList()`
    * `PyFrame_ClearFreeList()`
    * `PyList_ClearFreeList()`
    * `PySet_ClearFreeList()`
    * `PyTuple_ClearFreeList()`
  * [bpo-40421](https://bugs.python.org/issue?@action=redirect&bpo=40421): New [`PyFrame_GetBack()`](https://docs.python.org/3/c-api/frame.html#c.PyFrame_GetBack "PyFrame_GetBack") function: get the frame next outer frame.
  * [bpo-40421](https://bugs.python.org/issue?@action=redirect&bpo=40421): New [`PyFrame_GetCode()`](https://docs.python.org/3/c-api/frame.html#c.PyFrame_GetCode "PyFrame_GetCode") function: return a borrowed reference to the frame code.
  * [bpo-40217](https://bugs.python.org/issue?@action=redirect&bpo=40217): Ensure that instances of types created with [`PyType_FromSpecWithBases()`](https://docs.python.org/3/c-api/type.html#c.PyType_FromSpecWithBases "PyType_FromSpecWithBases") will visit its class object when traversing references in the garbage collector (implemented as an extension of the provided [`tp_traverse`](https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_traverse "PyTypeObject.tp_traverse")). Patch by Pablo Galindo.
  * [bpo-38787](https://bugs.python.org/issue?@action=redirect&bpo=38787): Module C state is now accessible from C-defined heap type methods ([**PEP 573**](https://peps.python.org/pep-0573/)). Patch by Marcel Plch and Petr Viktorin.