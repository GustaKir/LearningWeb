Title: Python Changes and Improvements Summary
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section outlines notable changes in Python, including the requirement for platforms to support `long long`, removal of Windows CE support, implementation of PEP 523, and various bug fixes and memory management improvements related to integer operations and string conversions.
---

direct&bpo=27961): Require platforms to support `long long`. Python hasn’t compiled without `long long` for years, so this is basically a formality.
  * [bpo-27355](https://bugs.python.org/issue?@action=redirect&bpo=27355): Removed support for Windows CE. It was never finished, and Windows CE is no longer a relevant platform for Python.
  * Implement [**PEP 523**](https://peps.python.org/pep-0523/).
  * [bpo-27870](https://bugs.python.org/issue?@action=redirect&bpo=27870): A left shift of zero by a large integer no longer attempts to allocate large amounts of memory.
  * [bpo-25402](https://bugs.python.org/issue?@action=redirect&bpo=25402): In int-to-decimal-string conversion, improve the estimate of the intermediate memory required, and remove an unnecessarily strict overflow check. Patch by Serhiy Storchaka.
  * [bpo-27214](https://bugs.python.org/issue?@action=redirect&bpo=27214): In long_invert, be more careful about modifying object returned by long_add, and remove an unnecessary check for small longs. Thanks Oren Milman for analysis and patch.
  * [bpo-27506](https://bugs.python.org/issue?@action=redirect&bpo=27506): Support passing the bytes/bytearray.translate() “delete” argument by keyword.
  * [bpo-27812](https://bugs.python.org/issue?@action=redirect&bpo=27812): Properly clear out a generator’s frame’s backreference to the generator to prevent crashes in frame.clear().
  * [bpo-27811](https://bugs.python.org/issue?@action=redirect&bpo=27811): Fix a crash when a coroutine that has not been awaited is finalized with warnings-as-errors enabled.
  * [bpo-27587](https://bugs.python.org/issue?@action=redirect&bpo=27587): Fix another issue found by PVS-Studio: Null pointer check after use of ‘def’ in _PyState_AddModule(). Initial patch by Christian Heimes.
  * [bpo-27792](https://bugs.python.org/issue?@action=redirect&bpo=27792): The modulo operation applied to `bool` and other `int` subclasses now always returns an `int`. Previously the return type depended on the input values. Patch by Xiang Zhang.
  * [bpo-26984](https://bugs.python.org/issue?@action=redirect&bpo=26984): int() now always returns an instance of exact int.
  * [bpo-25604](https://bugs.python.org/issue?@action=redirect&bpo=25604): Fix a minor bug in integer true division; this bug could potentially have caused off-by-one-ulp results on platforms with unreliable ldexp implementations.
  * [bpo-24254](https://bugs.python.org/issue?@action=redirect&bpo=24254): Make class definition namespace ordered by default.
  * [bpo-27662](https://bugs.python.org/issue?@action=redirect&bpo=27662): Fix an overflow check in `List_New`: the original code was checking against `Py_SIZE_MAX` instead of the correct upper bound of `Py_SSIZE_T_MAX`. Patch by Xiang Zhang.
  * [bpo-27782](https://bugs.python.org/issue?@action=redirect&bpo=27782): Multi-phase extension module import now correctly allows the `m_methods` field to be used to add module level functions to instances of non-module types returned from `Py_create_mod`. Patch by Xiang Zhang.
  * [bpo-27936](https://bugs.python.org/issue?@action=redirect&bpo=27936): The round() function accepted a second None argument for some types but not for others. Fixed the inconsistency by accepting None for all numeric types.
  * [bpo-27487](https://bugs.python.org/issue?@action=redirect&bpo=27487): Warn if a submodule argument to “python -m” or runpy.run_module() is found in sys.modules after parent packages are imported, but before the submodule is executed.
  * [bpo-27157](https://bugs.python.org/issue?@action=redirect&bpo=27157): Make only type() itself accept the one-argument form. Patch by Eryk Sun and Emanuel Barry.
  * [bpo-27558](https://bugs.python.org/issue?@action=redirect&bpo=27558): Fix a SystemError in the implementation of “raise” statement. In a brand new thread, raise a RuntimeError since there is no active exception to reraise. Patch written by Xiang Zhang.
  * [bpo-28008](https://bugs.python.org/issue?@action=redirect&bpo=28008): Implement [**PEP 530**](https://peps.python.org/pep-0530/) – asynchronous comprehensions.
  * [bpo-27942](https://bugs.python.org/issue?@action=redirect&bpo=27942): Fix memory leak in codeobject.c