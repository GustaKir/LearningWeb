Title: Python 3.7 New Features
URL: https://docs.python.org/3/whatsnew/3.7.html
Summary: Python 3.7 introduces new functions for per-thread CPU time measurements, including `time.thread_time()` and `time.thread_time_ns()`, as well as `time.pthread_getcpuclockid()` for thread-specific CPU-time clock IDs. Additionally, a new `tkinter.ttk.Spinbox` class is now available.
---

The new [`time.thread_time()`](https://docs.python.org/3/library/time.html#time.thread_time "time.thread_time") and [`time.thread_time_ns()`](https://docs.python.org/3/library/time.html#time.thread_time_ns "time.thread_time_ns") functions can be used to get per-thread CPU time measurements. (Contributed by Antoine Pitrou in [bpo-32025](https://bugs.python.org/issue?@action=redirect&bpo=32025).)
The new [`time.pthread_getcpuclockid()`](https://docs.python.org/3/library/time.html#time.pthread_getcpuclockid "time.pthread_getcpuclockid") function returns the clock ID of the thread-specific CPU-time clock.
### tkinter[¶](https://docs.python.org/3/whatsnew/3.7.html#tkinter "Link to this heading")
The new [`tkinter.ttk.Spinbox`](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Spinbox "tkinter.ttk.Spinbox") class is now available. (Contributed by Alan Moore in [bpo-32585](https://bugs.python.org/issue?@action=redirect&bpo=32585).)
### tracemalloc[¶](https://docs.python.org/3/whatsnew/3.7.html#tracemalloc "Link to this heading")
[`tracemalloc.Traceback`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.Traceback "tracemalloc.Traceback") behaves more like regular tracebacks, sorting the frames from oldest to most recent. [`Traceback.format()`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.Traceback.format "tracemalloc.Traceback.format") now accepts negative _limit_ , truncating the result to the `abs(limit)` oldest frames. To get the old behaviour, use the new _most_recent_first_ argument to `Traceback.format()`. (Contributed by Jesse Bakker in [bpo-32121](https://bugs.python.org/issue?@action=redirect&bpo=32121).)
### types[¶](https://docs.python.org/3/whatsnew/3.7.html#types "Link to this heading")
The new [`WrapperDescriptorType`](https://docs.python.org/3/library/types.html#types.WrapperDescriptorType "types.WrapperDescriptorType"), [`MethodWrapperType`](https://docs.python.org/3/library/types.html#types.MethodWrapperType "types.MethodWrapperType"), [`MethodDescriptorType`](https://docs.python.org/3/library/types.html#types.MethodDescriptorType "types.MethodDescriptorType"), and [`ClassMethodDescriptorType`](https://docs.python.org/3/library/types.html#types.ClassMethodDescriptorType "types.ClassMethodDescriptorType") classes are now available. (Contributed by Manuel Krebber and Guido van Rossum in [bpo-29377](https://bugs.python.org/issue?@action=redirect&bpo=29377), and Serhiy Storchaka in [bpo-32265](https://bugs.python.org/issue?@action=redirect&bpo=32265).)
The new [`types.resolve_bases()`](https://docs.python.org/3/library/types.html#types.resolve_bases "types.resolve_bases") function resolves MRO entries dynamically as specified by [**PEP 560**](https://peps.python.org/pep-0560/). (Contributed by Ivan Levkivskyi in [bpo-32717](https://bugs.python.org/issue?@action=redirect&bpo=32717).)
### unicodedata[¶](https://docs.python.org/3/whatsnew/3.7.html#unicodedata "Link to this heading")
The internal [`unicodedata`](https://docs.python.org/3/library/unicodedata.html#module-unicodedata "unicodedata: Access the Unicode Database.") database has been upgraded to use [Unicode 11](https://www.unicode.org/versions/Unicode11.0.0/). (Contributed by Benjamin Peterson.)
### unittest[¶](https://docs.python.org/3/whatsnew/3.7.html#unittest "Link to this heading")
The new `-k` command-line option allows filtering tests by a name substring or a Unix shell-like pattern. For example, `python -m unittest -k foo` runs `foo_tests.SomeTest.test_something`, `bar_tests.SomeTest.test_foo`, but not `bar_tests.FooTest.test_something`. (Contributed by Jonas Haag in [bpo-32071](https://bugs.python.org/issue?@action=redirect&bpo=32071).)
### unittest.mock[¶](https://docs.python.org/3/whatsnew/3.7.html#unittest-mock "Link to this heading")
The [`sentinel`](https://docs.python.org/3/library/unittest.mock.html#unittest.mock.sentinel "unittest.mock.sentinel") attributes now preserve their identity when they are [`copied`](https://docs.python.org/3/library/copy.html#module-copy "copy: Shallow and deep copy operations.") or [`pickled`](https://docs.python.org/3/library/pickle.html#module-pickle "pickle: Convert Python objects to streams of bytes and back."). (Contributed by Serhiy Storchaka in [bpo-20804](https://bugs.python.org/issue?@action=redirect&bpo=20804).)
The new [`seal()`](https://docs.python.org/3/library/unittest.mock.html#unittest.mock.seal "unittest.mock.seal") function allows sealing [`Mock`](https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock "unittest.mock.Mock") instances, which will disallow further creation of attribute mocks. The seal is applied recursively to all attributes that are themselves mocks. (Contributed by Mario Corchero in [bpo-30541](https://bugs.python.org/issue?@action=redirect&bpo=30541).)
### urllib.parse[¶](https://docs.python.org/3/whatsnew/3.7.html#urllib-parse "Link to this heading")
[`urllib.parse.quote()`](https://docs.python.org/3/lib