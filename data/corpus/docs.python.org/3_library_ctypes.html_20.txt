Title: ctypes Module Functions
URL: https://docs.python.org/3/library/ctypes.html
Summary: This section explains functions in the ctypes module for working with foreign function calls in Python. It details `ctypes.cast`, which behaves like the C cast operator by returning a new instance pointing to the same memory block as an object, and `ctypes.create_string_buffer`, which creates a mutable character buffer initialized with a specified size or bytes.
---

```

The returned object can only be used as a foreign function call parameter. It behaves similar to `pointer(obj)`, but the construction is a lot faster. 

ctypes.cast(_obj_ , _type_)[¶](https://docs.python.org/3/library/ctypes.html#ctypes.cast "Link to this definition")
    
This function is similar to the cast operator in C. It returns a new instance of _type_ which points to the same memory block as _obj_. _type_ must be a pointer type, and _obj_ must be an object that can be interpreted as a pointer. 

ctypes.create_string_buffer(_init_or_size_ , _size =None_)[¶](https://docs.python.org/3/library/ctypes.html#ctypes.create_string_buffer "Link to this definition")
    
This function creates a mutable character buffer. The returned object is a ctypes array of [`c_char`](https://docs.python.org/3/library/ctypes.html#ctypes.c_char "ctypes.c_char").
_init_or_size_ must be an integer which specifies the size of the array, or a bytes object which will be used to initialize the array items.
If a bytes object is specified as first argument, the buffer is made one item larger than its length so that the last element in the array is a NUL termination character. An integer can be passed as second argument which allows specifying the size of the array if the length of the bytes should not be used.
Raises an [auditing event](https://docs.python.org/3/library/sys.html#auditing) `ctypes.create_string_buffer` with arguments `init`, `size`. 

ctypes.create_unicode_buffer(_init_or_size_ , _size =None_)[¶](https://docs.python.org/3/library/ctypes.html#ctypes.create_unicode_buffer "Link to this definition")
    
This function creates a mutable unicode character buffer. The returned object is a ctypes array of [`c_wchar`](https://docs.python.org/3/library/ctypes.html#ctypes.c_wchar "ctypes.c_wchar").
_init_or_size_ must be an integer which specifies the size of the array, or a string which will be used to initialize the array items.
If a string is specified as first argument, the buffer is made one item larger than the length of the string so that the last element in the array is a NUL termination character. An integer can be passed as second argument which allows specifying the size of the array if the length of the string should not be used.
Raises an [auditing event](https://docs.python.org/3/library/sys.html#auditing) `ctypes.create_unicode_buffer` with arguments `init`, `size`. 

ctypes.DllCanUnloadNow()[¶](https://docs.python.org/3/library/ctypes.html#ctypes.DllCanUnloadNow "Link to this definition")
    
This function is a hook which allows implementing in-process COM servers with ctypes. It is called from the DllCanUnloadNow function that the _ctypes extension dll exports.
[Availability](https://docs.python.org/3/library/intro.html#availability): Windows 

ctypes.DllGetClassObject()[¶](https://docs.python.org/3/library/ctypes.html#ctypes.DllGetClassObject "Link to this definition")
    
This function is a hook which allows implementing in-process COM servers with ctypes. It is called from the DllGetClassObject function that the `_ctypes` extension dll exports.
[Availability](https://docs.python.org/3/library/intro.html#availability): Windows 

ctypes.util.find_library(_name_)[¶](https://docs.python.org/3/library/ctypes.html#ctypes.util.find_library "Link to this definition")
    
Try to find a library and return a pathname. _name_ is the library name without any prefix like `lib`, suffix like `.so`, `.dylib` or version number (this is the form used for the posix linker option `-l`). If no library can be found, returns `None`.
The exact functionality is system dependent. 

ctypes.util.find_msvcrt()[¶](https://docs.python.org/3/library/ctypes.html#ctypes.util.find_msvcrt "Link to this definition")
    
Returns the filename of the VC runtime library used by Python, and by the extension modules. If the name of the library cannot be determined, `None` is returned.
If you need to free memory, for example, allocated by an extension module with a call to the `free(void *)`, it is important that you use the function in the same library that allocated the memory.
[Availability](https://docs.python.org/3/library/intro.html#availability): Windows 

ctypes.FormatError([_code_])[¶](https://docs.python.org/3/library/ctypes.html#ctypes.FormatError "Link to this definition")
    
Returns a textual description of the error code _code_. If no error code is specified, the last error code is used by calling the Windows api function GetLastError.
[Availability](https://docs.python.org/3/library/intro.html#availability): Windows 

ctypes.GetLastError()[¶](https://docs.python.org/3/library/ctypes.html#ctypes.GetLastError "Link to this definition")
    
Returns the last error code set by Windows in the calling thread. This function calls the Windows `GetLastError()` function directly, it does not return the ctypes-private copy of the error code.
[Availability](https://docs.python.org/3/library/intro.html#availability): Windows