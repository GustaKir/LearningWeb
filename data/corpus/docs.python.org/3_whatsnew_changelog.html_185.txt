Title: Python Library Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: Recent changes in the Python library include updates to `locale.getencoding()` to prevent deprecation warnings, the restriction on registering conditional breakpoints in `Pdb` that raise `SyntaxError`, improved exception handling in member type creation, the final `_generate_next_value_` being set as a `staticmethod`, and correct display of the current line label in `dis`.
---

### Library[¶](https://docs.python.org/3/whatsnew/changelog.html#id153 "Link to this heading")
  * [gh-103085](https://github.com/python/cpython/issues/103085): Pure python [`locale.getencoding()`](https://docs.python.org/3/library/locale.html#locale.getencoding "locale.getencoding") will not warn deprecation.
  * [gh-103068](https://github.com/python/cpython/issues/103068): It’s no longer possible to register conditional breakpoints in [`Pdb`](https://docs.python.org/3/library/pdb.html#pdb.Pdb "pdb.Pdb") that raise [`SyntaxError`](https://docs.python.org/3/library/exceptions.html#SyntaxError "SyntaxError"). Patch by Tian Gao.
  * [gh-102549](https://github.com/python/cpython/issues/102549): Don’t ignore exceptions in member type creation.
  * [gh-103056](https://github.com/python/cpython/issues/103056): Ensure final `_generate_next_value_` is a `staticmethod`.
  * [gh-103046](https://github.com/python/cpython/issues/103046): Display current line label correctly in [`dis`](https://docs.python.org/3/library/dis.html#module-dis "dis: Disassembler for Python bytecode.") when `show_caches` is False and `lasti` points to a CACHE entry.
  * [gh-102433](https://github.com/python/cpython/issues/102433): [`isinstance()`](https://docs.python.org/3/library/functions.html#isinstance "isinstance") checks against [`runtime-checkable protocols`](https://docs.python.org/3/library/typing.html#typing.runtime_checkable "typing.runtime_checkable") now use [`inspect.getattr_static()`](https://docs.python.org/3/library/inspect.html#inspect.getattr_static "inspect.getattr_static") rather than [`hasattr()`](https://docs.python.org/3/library/functions.html#hasattr "hasattr") to lookup whether attributes exist. This means that descriptors and [`__getattr__()`](https://docs.python.org/3/reference/datamodel.html#object.__getattr__ "object.__getattr__") methods are no longer unexpectedly evaluated during `isinstance()` checks against runtime-checkable protocols. However, it may also mean that some objects which used to be considered instances of a runtime-checkable protocol may no longer be considered instances of that protocol on Python 3.12+, and vice versa. Most users are unlikely to be affected by this change. Patch by Alex Waygood.
  * [gh-103023](https://github.com/python/cpython/issues/103023): It’s no longer possible to register expressions to display in [`Pdb`](https://docs.python.org/3/library/pdb.html#pdb.Pdb "pdb.Pdb") that raise [`SyntaxError`](https://docs.python.org/3/library/exceptions.html#SyntaxError "SyntaxError"). Patch by Tian Gao.
  * [gh-102947](https://github.com/python/cpython/issues/102947): Improve traceback when [`dataclasses.fields()`](https://docs.python.org/3/library/dataclasses.html#dataclasses.fields "dataclasses.fields") is called on a non-dataclass. Patch by Alex Waygood
  * [gh-102780](https://github.com/python/cpython/issues/102780): The [`asyncio.Timeout`](https://docs.python.org/3/library/asyncio-task.html#asyncio.Timeout "asyncio.Timeout") context manager now works reliably even when performing cleanup due to task cancellation. Previously it could raise a [`CancelledError`](https://docs.python.org/3/library/asyncio-exceptions.html#asyncio.CancelledError "asyncio.CancelledError") instead of an [`TimeoutError`](https://docs.python.org/3/library/asyncio-exceptions.html#asyncio.TimeoutError "asyncio.TimeoutError") in such cases.
  * [gh-102871](https://github.com/python/cpython/issues/102871): Remove support for obsolete browsers from [`webbrowser`](https://docs.python.org/3/library/webbrowser.html#module-webbrowser "webbrowser: Easy-to-use controller for web browsers."). Removed browsers include Grail, Mosaic, Netscape, Galeon, Skipstone, Iceape, Firebird, and Firefox versions 35 and below.
  * [gh-102839](https://github.com/python/cpython/issues/102839): Improve performance of [`math.log()`](https://docs.python.org/3/library/math.html#math.log "math.log") arguments handling by removing the argument clinic.
  * [gh-102828](https://github.com/python/cpython/issues/102828): Add the `onexc` arg to [`shutil.rmtree()`](https://docs.python.org/3/library/shutil.html#shutil.rmtree "shutil.rmtree"), which is like `onerror` but expects an exception instance rather than an exc_info tuple. Deprecate `onerror`.
  * [gh-88965](https://github.com/python/cpython/issues/88965): typing: Fix a bug relating to substitution in custom classes generic over a [`ParamSpec`](https://docs.python.org/3/library/typing.html#typing.ParamSpec "typing.ParamSpec"). Previously, if the `ParamSpec` was substituted with a parameters list that itself contained a [`TypeVar`](https://docs.python.org/3/library/typing.html#typing.TypeVar "typing.TypeVar"), the `TypeVar` in the parameters list could not be subsequently substituted. This is now fixed.
Patch by Nikita Sobolev.
  * [gh-76846](https://github.com/python/cpython/issues/76846): Fix issue where `__new__()` and `__init__()` methods of [`pathlib.PurePath`](https://docs.python.org/3/l