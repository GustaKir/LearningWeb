Title: Expat Parser Functions
URL: https://docs.python.org/3/library/pyexpat.html
Summary: This section describes functions in the xml.parsers.expat module, including ErrorString, which returns a string for a specific error number, and ParserCreate, which creates a new xmlparser object with optional encoding and namespace processing features.
---

xml.parsers.expat.ErrorString(_errno_)[¶](https://docs.python.org/3/library/pyexpat.html#xml.parsers.expat.ErrorString "Link to this definition")
    
Returns an explanatory string for a given error number _errno_. 

xml.parsers.expat.ParserCreate(_encoding =None_, _namespace_separator =None_)[¶](https://docs.python.org/3/library/pyexpat.html#xml.parsers.expat.ParserCreate "Link to this definition")
    
Creates and returns a new `xmlparser` object. _encoding_ , if specified, must be a string naming the encoding used by the XML data. Expat doesn’t support as many encodings as Python does, and its repertoire of encodings can’t be extended; it supports UTF-8, UTF-16, ISO-8859-1 (Latin1), and ASCII. If _encoding_ [[1]](https://docs.python.org/3/library/pyexpat.html#id3) is given it will override the implicit or explicit encoding of the document.
Expat can optionally do XML namespace processing for you, enabled by providing a value for _namespace_separator_. The value must be a one-character string; a [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError "ValueError") will be raised if the string has an illegal length (`None` is considered the same as omission). When namespace processing is enabled, element type names and attribute names that belong to a namespace will be expanded. The element name passed to the element handlers `StartElementHandler` and `EndElementHandler` will be the concatenation of the namespace URI, the namespace separator character, and the local part of the name. If the namespace separator is a zero byte (`chr(0)`) then the namespace URI and the local part will be concatenated without any separator.
For example, if _namespace_separator_ is set to a space character (`' '`) and the following document is parsed:
```
<?xml version="1.0"?>
<rootxmlns  ="http://default-namespace.org/"
xmlns:py ="http://www.python.org/ns/">
<py:elem1/>
<elem2xmlns=""/>
</root>

```

`StartElementHandler` will receive the following strings for each element:
```
http://default-namespace.org/ root
http://www.python.org/ns/ elem1
elem2