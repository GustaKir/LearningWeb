Title: Python Standard Library Index
URL: https://docs.python.org/3/library/index.html
Summary: This section of the Python documentation provides an overview of various modules available in the standard library, including tools for tracing execution, managing memory, software packaging, creating virtual environments, and accessing system-specific parameters.
---

ry/timeit.html)
    * [`trace` — Trace or track Python statement execution](https://docs.python.org/3/library/trace.html)
    * [`tracemalloc` — Trace memory allocations](https://docs.python.org/3/library/tracemalloc.html)
  * [Software Packaging and Distribution](https://docs.python.org/3/library/distribution.html)
    * [`ensurepip` — Bootstrapping the `pip` installer](https://docs.python.org/3/library/ensurepip.html)
    * [`venv` — Creation of virtual environments](https://docs.python.org/3/library/venv.html)
    * [`zipapp` — Manage executable Python zip archives](https://docs.python.org/3/library/zipapp.html)
  * [Python Runtime Services](https://docs.python.org/3/library/python.html)
    * [`sys` — System-specific parameters and functions](https://docs.python.org/3/library/sys.html)
    * [`sys.monitoring` — Execution event monitoring](https://docs.python.org/3/library/sys.monitoring.html)
    * [`sysconfig` — Provide access to Python’s configuration information](https://docs.python.org/3/library/sysconfig.html)
    * [`builtins` — Built-in objects](https://docs.python.org/3/library/builtins.html)
    * [`__main__` — Top-level code environment](https://docs.python.org/3/library/__main__.html)
    * [`warnings` — Warning control](https://docs.python.org/3/library/warnings.html)
    * [`dataclasses` — Data Classes](https://docs.python.org/3/library/dataclasses.html)
    * [`contextlib` — Utilities for `with`-statement contexts](https://docs.python.org/3/library/contextlib.html)
    * [`abc` — Abstract Base Classes](https://docs.python.org/3/library/abc.html)
    * [`atexit` — Exit handlers](https://docs.python.org/3/library/atexit.html)
    * [`traceback` — Print or retrieve a stack traceback](https://docs.python.org/3/library/traceback.html)
    * [`__future__` — Future statement definitions](https://docs.python.org/3/library/__future__.html)
    * [`gc` — Garbage Collector interface](https://docs.python.org/3/library/gc.html)
    * [`inspect` — Inspect live objects](https://docs.python.org/3/library/inspect.html)
    * [`site` — Site-specific configuration hook](https://docs.python.org/3/library/site.html)
  * [Custom Python Interpreters](https://docs.python.org/3/library/custominterp.html)
    * [`code` — Interpreter base classes](https://docs.python.org/3/library/code.html)
    * [`codeop` — Compile Python code](https://docs.python.org/3/library/codeop.html)
  * [Importing Modules](https://docs.python.org/3/library/modules.html)
    * [`zipimport` — Import modules from Zip archives](https://docs.python.org/3/library/zipimport.html)
    * [`pkgutil` — Package extension utility](https://docs.python.org/3/library/pkgutil.html)
    * [`modulefinder` — Find modules used by a script](https://docs.python.org/3/library/modulefinder.html)
    * [`runpy` — Locating and executing Python modules](https://docs.python.org/3/library/runpy.html)
    * [`importlib` — The implementation of `import`](https://docs.python.org/3/library/importlib.html)
    * [`importlib.resources` – Package resource reading, opening and access](https://docs.python.org/3/library/importlib.resources.html)
    * [`importlib.resources.abc` – Abstract base classes for resources](https://docs.python.org/3/library/importlib.resources.abc.html)
    * [`importlib.metadata` – Accessing package metadata](https://docs.python.org/3/library/importlib.metadata.html)
    * [The initialization of the `sys.path` module search path](https://docs.python.org/3/library/sys_path_init.html)
  * [Python Language Services](https://docs.python.org/3/library/language.html)
    * [`ast` — Abstract Syntax Trees](https://docs.python.org/3/library/ast.html)
    * [`symtable` — Access to the compiler’s symbol tables](https://docs.python.org/3/library/symtable.html)
    * [`token` — Constants used with Python parse trees](https://docs.python.org/3/library/token.html)
    * [`keyword` — Testing for Python keywords](https://docs.python.org/3/library/keyword.html)
    * [`tokenize` — Tokenizer for Python source](https://docs.python.org/3/library/tokenize.html)
    * [`tabnanny` — Detection of ambiguous indentation](https://docs.python.org/3/library/tabnanny.html)
    * [`pyclbr` — Python module browser support](https://docs.python.org/3/library/pyclbr.html)
    * [`py_compile` — Compile Python source files](https://docs.python.org/3/library/py_compile.html)
    * [`compileall` — Byte-compile Python libraries](https://docs.python.org/3/library/compileall.html)
    * [`dis` — Disassembler for Python bytecode](https://docs.python.org/3/library/dis.html)
    * [`pickletools` — Tools for pickle developers](https://docs.python.org/3/library/pickletools.html)
  * [MS Windows Specific Services](https://docs.python.org/3/library/windows.html)
    * [`msvcrt` — Useful routines from the MS VC++ runtime](https://docs.python.org/3/library/msvcrt.html)
    * [`winreg` — Windows registry access](https://docs.python.org/3/library/winreg.html)
    * [`winsound` — Sound-playing interface fo