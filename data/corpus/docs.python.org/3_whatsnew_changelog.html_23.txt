Title: Python 3.x Changelog - Bug Fixes
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section documents several bug fixes in Python 3.x, including corrections for SyntaxErrors in the tokenizer, data races in template compilation and free threading, issues with the `SystemExit` return codes in the REPL, and improvements in `PyList_Insert()` thread safety.
---

16042](https://github.com/python/cpython/issues/116042): Fix location for SyntaxErrors of invalid escapes in the tokenizer. Patch by Pablo Galindo
  * [gh-129983](https://github.com/python/cpython/issues/129983): Fix data race in compile_template in `sre.c`.
  * [gh-129967](https://github.com/python/cpython/issues/129967): Fix a race condition in the [free threading](https://docs.python.org/3/glossary.html#term-free-threading) build when `repr(set)` is called concurrently with `set.clear()`.
  * [gh-129900](https://github.com/python/cpython/issues/129900): Fix return codes inside [`SystemExit`](https://docs.python.org/3/library/exceptions.html#SystemExit "SystemExit") not getting returned by the REPL.
  * [gh-129732](https://github.com/python/cpython/issues/129732): Fixed a race in `_Py_qsbr_reserve` in the free threading build.
  * [gh-129643](https://github.com/python/cpython/issues/129643): Fix thread safety of [`PyList_Insert()`](https://docs.python.org/3/c-api/list.html#c.PyList_Insert "PyList_Insert") in free-threading builds.
  * [gh-129668](https://github.com/python/cpython/issues/129668): Fix race condition when raising [`MemoryError`](https://docs.python.org/3/library/exceptions.html#MemoryError "MemoryError") in the free threaded build.
  * [gh-129643](https://github.com/python/cpython/issues/129643): Fix thread safety of [`PyList_SetItem()`](https://docs.python.org/3/c-api/list.html#c.PyList_SetItem "PyList_SetItem") in free-threading builds. Patch by Kumar Aditya.
  * [gh-128714](https://github.com/python/cpython/issues/128714): Fix the potential races in get/set dunder methods `__annotations__`, `__annotate__` and `__type_params__` for function object, and add related tests.
  * [gh-128632](https://github.com/python/cpython/issues/128632): Disallow `__classdict__` as the name of a type parameter. Using this name would previously crash the interpreter in some circumstances.
  * [gh-127953](https://github.com/python/cpython/issues/127953): The time to handle a `LINE` event in sys.monitoring (and sys.settrace) is now independent of the number of lines in the code object.
  * [gh-125331](https://github.com/python/cpython/issues/125331): `from __future__ import barry_as_FLUFL` now works in more contexts, including when it is used in files, with the `-c` flag, and in the REPL when there are multiple statements on the same line. Previously, it worked only on subsequent lines in the REPL, and when the appropriate flags were passed directly to [`compile()`](https://docs.python.org/3/library/functions.html#compile "compile"). Patch by Pablo Galindo.


### C API[¶](https://docs.python.org/3/whatsnew/changelog.html#id5 "Link to this heading")
  * [gh-131740](https://github.com/python/cpython/issues/131740): Update PyUnstable_GC_VisitObjects to traverse perm gen.
  * [gh-129533](https://github.com/python/cpython/issues/129533): Update [`PyGC_Enable()`](https://docs.python.org/3/c-api/gcsupport.html#c.PyGC_Enable "PyGC_Enable"), [`PyGC_Disable()`](https://docs.python.org/3/c-api/gcsupport.html#c.PyGC_Disable "PyGC_Disable"), [`PyGC_IsEnabled()`](https://docs.python.org/3/c-api/gcsupport.html#c.PyGC_IsEnabled "PyGC_IsEnabled") to use atomic operation for thread-safety at free-threading build. Patch by Donghee Na.


### Build[¶](https://docs.python.org/3/whatsnew/changelog.html#id6 "Link to this heading")
  * [gh-131865](https://github.com/python/cpython/issues/131865): The DTrace build now properly passes the `CC` and `CFLAGS` variables to the `dtrace` command when utilizing SystemTap on Linux.
  * [gh-131675](https://github.com/python/cpython/issues/131675): Fix mimalloc library builds for 32-bit ARM targets.
  * [gh-130673](https://github.com/python/cpython/issues/130673): Fix potential `KeyError` when handling object sections during JIT building process.
  * [gh-130740](https://github.com/python/cpython/issues/130740): Ensure that `Python.h` is included before `stdbool.h` unless `pyconfig.h` is included before or in some platform-specific contexts.
  * [gh-129838](https://github.com/python/cpython/issues/129838): Don’t redefine `_Py_NO_SANITIZE_UNDEFINED` when compiling with a recent GCC version and undefined sanitizer enabled.
  * [gh-129660](https://github.com/python/cpython/issues/129660): Drop `test_embed` from PGO training, whose contribution in recent versions is considered to be ignorable.


## Python 3.13.2 final[¶](https://docs.python.org/3/whatsnew/changelog.html#python-3-13-2-final "Link to this heading")
_Release date: 2025-02-04_
### macOS[¶](https://docs.python.org/3/whatsnew/changelog.html#id7 "Link to this heading")
  * [gh-127592](https://github.com/python/cpython/issues/127592): Usage of the unified Apple System Log APIs was disabled when the minimum macOS version is earlier than 10.12.