Title: Python Documentation: 'W' Index
URL: https://docs.python.org/3/genindex-W.html
Summary: This document section provides an index of Python documentation related to terms and functions starting with the letter 'W', including various modules such as 'traceback', 'warnings', and 'logging'. It lists functions like 'walk_stack()', 'warn()', and properties like 'warn_default_encoding'.
---

ceback.html#traceback.walk_stack)
  * [walk_tb() (in module traceback)](https://docs.python.org/3/library/traceback.html#traceback.walk_tb)
  * [walrus operator](https://docs.python.org/3/reference/expressions.html#index-87)
  * [want (doctest.Example attribute)](https://docs.python.org/3/library/doctest.html#doctest.Example.want)
  * [warn() (in module warnings)](https://docs.python.org/3/library/warnings.html#warnings.warn)
  * [warn_default_encoding (sys.flags attribute)](https://docs.python.org/3/library/sys.html#sys.flags.warn_default_encoding)
  * [warn_explicit() (in module warnings)](https://docs.python.org/3/library/warnings.html#warnings.warn_explicit)
  * [Warning](https://docs.python.org/3/library/exceptions.html#Warning), [[1]](https://docs.python.org/3/library/sqlite3.html#sqlite3.Warning)
  * [WARNING (in module logging)](https://docs.python.org/3/library/logging.html#logging.WARNING)
    * [(in module tkinter.messagebox)](https://docs.python.org/3/library/tkinter.messagebox.html#tkinter.messagebox.WARNING)
  * [warning() (in module logging)](https://docs.python.org/3/library/logging.html#logging.warning)
    * [(logging.Logger method)](https://docs.python.org/3/library/logging.html#logging.Logger.warning)
    * [(xml.sax.handler.ErrorHandler method)](https://docs.python.org/3/library/xml.sax.handler.html#xml.sax.handler.ErrorHandler.warning)
  * [warnings](https://docs.python.org/3/library/warnings.html#index-0)
    * [module](https://docs.python.org/3/library/warnings.html#module-warnings)
  * [WarningsRecorder (class in test.support.warnings_helper)](https://docs.python.org/3/library/test.html#test.support.warnings_helper.WarningsRecorder)
  * [warnoptions (in module sys)](https://docs.python.org/3/library/sys.html#sys.warnoptions)
  * [wasSuccessful() (unittest.TestResult method)](https://docs.python.org/3/library/unittest.html#unittest.TestResult.wasSuccessful)
  * [WatchedFileHandler (class in logging.handlers)](https://docs.python.org/3/library/logging.handlers.html#logging.handlers.WatchedFileHandler)
  * wave 
    * [module](https://docs.python.org/3/library/wave.html#module-wave)
  * [Wave_read (class in wave)](https://docs.python.org/3/library/wave.html#wave.Wave_read)
  * [Wave_write (class in wave)](https://docs.python.org/3/library/wave.html#wave.Wave_write)
  * [WCONTINUED (in module os)](https://docs.python.org/3/library/os.html#os.WCONTINUED)
  * [WCOREDUMP() (in module os)](https://docs.python.org/3/library/os.html#os.WCOREDUMP)
  * [WeakKeyDictionary (class in weakref)](https://docs.python.org/3/library/weakref.html#weakref.WeakKeyDictionary)
  * [WeakMethod (class in weakref)](https://docs.python.org/3/library/weakref.html#weakref.WeakMethod)
  * weakref 
    * [module](https://docs.python.org/3/library/weakref.html#module-weakref)
  * [WeakSet (class in weakref)](https://docs.python.org/3/library/weakref.html#weakref.WeakSet)
  * [WeakValueDictionary (class in weakref)](https://docs.python.org/3/library/weakref.html#weakref.WeakValueDictionary)
  * webbrowser 
    * [module](https://docs.python.org/3/library/webbrowser.html#module-webbrowser)
  * webbrowser command line option 
    * [--new-tab](https://docs.python.org/3/library/webbrowser.html#cmdoption-webbrowser-t)
    * [--new-window](https://docs.python.org/3/library/webbrowser.html#cmdoption-webbrowser-n)
    * [-n](https://docs.python.org/3/library/webbrowser.html#cmdoption-webbrowser-n)
    * [-t](https://docs.python.org/3/library/webbrowser.html#cmdoption-webbrowser-t)
  * [WEDNESDAY (in module calendar)](https://docs.python.org/3/library/calendar.html#calendar.WEDNESDAY)
  * [weekday (calendar.IllegalWeekdayError attribute)](https://docs.python.org/3/library/calendar.html#calendar.IllegalWeekdayError.weekday)
  * [weekday() (datetime.date method)](https://docs.python.org/3/library/datetime.html#datetime.date.weekday)
    * [(datetime.datetime method)](https://docs.python.org/3/library/datetime.html#datetime.datetime.weekday)
    * [(in module calendar)](https://docs.python.org/3/library/calendar.html#calendar.weekday)
  * [weekheader() (in module calendar)](https://docs.python.org/3/library/calendar.html#calendar.weekheader)
  * [weibullvariate() (in module random)](https://docs.python.org/3/library/random.html#random.weibullvariate)
  * [WEXITED (in module os)](https://docs.python.org/3/library/os.html#os.WEXITED)
  * [WEXITSTATUS() (in module os)](https://docs.python.org/3/library/os.html#os.WEXITSTATUS)
  * [wfile (http.server.BaseHTTPRequestHandler attribute)](https://docs.python.org/3/library/http.server.html#http.server.BaseHTTPRequestHandler.wfile)
    * [(socketserver.DatagramRequestHandler attribute)](https://docs.python.org/3/library/socketserver.html#socketserver.DatagramRequestHandler.wfile)
  * [whatis (pdb command)](https://docs.python.org/3/library/pdb.html#pdbcommand-whatis)
  * [when() (asyncio.Timeout method)](https://docs.python.org/3/library/asyncio-task.html#asyncio.Timeout.when)
    * [(asy