Title: Locale Settings and Conventions in Python
URL: https://docs.python.org/3/library/locale.html
Summary: This section discusses how to set the locale for all categories to the user's default, typically defined by the `LANG` environment variable. It highlights that multithreading should not cause issues if the locale remains unchanged. Additionally, it provides information about the `locale.localeconv()` function, which returns a dictionary of local conventions with keys such as `'decimal_point'` and `'grouping'` that dictate numeric formatting.
---

```

This sets the locale for all categories to the user’s default setting (typically specified in the `LANG` environment variable). If the locale is not changed thereafter, using multithreading should not cause problems. 

locale.localeconv()[¶](https://docs.python.org/3/library/locale.html#locale.localeconv "Link to this definition")
    
Returns the database of the local conventions as a dictionary. This dictionary has the following strings as keys:
Category | Key | Meaning  
---|---|---  
[`LC_NUMERIC`](https://docs.python.org/3/library/locale.html#locale.LC_NUMERIC "locale.LC_NUMERIC") | `'decimal_point'` | Decimal point character.  
| `'grouping'` | Sequence of numbers specifying which relative positions the `'thousands_sep'` is expected. If the sequence is terminated with [`CHAR_MAX`](https://docs.python.org/3/library/locale.html#locale.CHAR_MAX "locale.CHAR_MAX"), no further grouping is performed. If the sequence terminates with a `0`, the last group size is repeatedly used.  
| `'thousands_sep'` | Character used between groups.  
[`LC_MONETARY`](https://docs.python.org/3/library/locale.html#locale.LC_MONETARY "locale.LC_MONETARY") | `'int_curr_symbol'` | International currency symbol.  
| `'currency_symbol'` | Local currency symbol.  
| `'p_cs_precedes/n_cs_precedes'` | Whether the currency symbol precedes the value (for positive resp. negative values).  
| `'p_sep_by_space/n_sep_by_space'` | Whether the currency symbol is separated from the value by a space (for positive resp. negative values).  
| `'mon_decimal_point'` | Decimal point used for monetary values.  
| `'frac_digits'` | Number of fractional digits used in local formatting of monetary values.  
| `'int_frac_digits'` | Number of fractional digits used in international formatting of monetary values.  
| `'mon_thousands_sep'` | Group separator used for monetary values.  
| `'mon_grouping'` | Equivalent to `'grouping'`, used for monetary values.  
| `'positive_sign'` | Symbol used to annotate a positive monetary value.  
| `'negative_sign'` | Symbol used to annotate a negative monetary value.  
| `'p_sign_posn/n_sign_posn'` | The position of the sign (for positive resp. negative values), see below.  
All numeric values can be set to [`CHAR_MAX`](https://docs.python.org/3/library/locale.html#locale.CHAR_MAX "locale.CHAR_MAX") to indicate that there is no value specified in this locale.
The possible values for `'p_sign_posn'` and `'n_sign_posn'` are given below.
Value | Explanation  
---|---  
`0` | Currency and value are surrounded by parentheses.  
`1` | The sign should precede the value and currency symbol.  
`2` | The sign should follow the value and currency symbol.  
`3` | The sign should immediately precede the value.  
`4` | The sign should immediately follow the value.  
`CHAR_MAX` | Nothing is specified in this locale.  
The function temporarily sets the `LC_CTYPE` locale to the `LC_NUMERIC` locale or the `LC_MONETARY` locale if locales are different and numeric or monetary strings are non-ASCII. This temporary change affects other threads.
Changed in version 3.7: The function now temporarily sets the `LC_CTYPE` locale to the `LC_NUMERIC` locale in some cases. 

locale.nl_langinfo(_option_)[¶](https://docs.python.org/3/library/locale.html#locale.nl_langinfo "Link to this definition")
    
Return some locale-specific information as a string. This function is not available on all systems, and the set of possible options might also vary across platforms. The possible argument values are numbers, for which symbolic constants are available in the locale module.
The [`nl_langinfo()`](https://docs.python.org/3/library/locale.html#locale.nl_langinfo "locale.nl_langinfo") function accepts one of the following keys. Most descriptions are taken from the corresponding description in the GNU C library. 

locale.CODESET[¶](https://docs.python.org/3/library/locale.html#locale.CODESET "Link to this definition")
    
Get a string with the name of the character encoding used in the selected locale. 

locale.D_T_FMT[¶](https://docs.python.org/3/library/locale.html#locale.D_T_FMT "Link to this definition")
    
Get a string that can be used as a format string for [`time.strftime()`](https://docs.python.org/3/library/time.html#time.strftime "time.strftime") to represent date and time in a locale-specific way. 

locale.D_FMT[¶](https://docs.python.org/3/library/locale.html#locale.D_FMT "Link to this definition")
    
Get a string that can be used as a format string for [`time.strftime()`](https://docs.python.org/3/library/time.html#time.strftime "time.strftime") to represent a date in a locale-specific way. 

locale.T_FMT[¶](https://docs.python.org/3/library/locale.html#locale.T_FMT "Link to this definition")
    
Get a string that can be used as a format string for [`time.strftime()`](https://docs.python.org/3/library/time.html#time.strftime "time.strftime") to represent a time in a locale-specific way.