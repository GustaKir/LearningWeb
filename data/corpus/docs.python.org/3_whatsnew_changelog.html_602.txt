Title: Python Issue Fixes and Improvements
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This document chunk outlines several bug fixes and improvements made in Python, including implicit initialization of uninitialized types, checks for NULL tp_name in PyType_Ready(), crash fixes during AST compilation and weak reference callbacks, improvements to dictionary hash conflict handling, and changes to string constant internment.
---

Patch by Oren Milman.
  * [bpo-26906](https://bugs.python.org/issue?@action=redirect&bpo=26906): Resolving special methods of uninitialized type now causes implicit initialization of the type instead of a fail.
  * [bpo-18287](https://bugs.python.org/issue?@action=redirect&bpo=18287): PyType_Ready() now checks that tp_name is not NULL. Original patch by Niklas Koep.
  * [bpo-24098](https://bugs.python.org/issue?@action=redirect&bpo=24098): Fixed possible crash when AST is changed in process of compiling it.
  * [bpo-28201](https://bugs.python.org/issue?@action=redirect&bpo=28201): Dict reduces possibility of 2nd conflict in hash table when hashes have same lower bits.
  * [bpo-28350](https://bugs.python.org/issue?@action=redirect&bpo=28350): String constants with null character no longer interned.
  * [bpo-26617](https://bugs.python.org/issue?@action=redirect&bpo=26617): Fix crash when GC runs during weakref callbacks.
  * [bpo-27942](https://bugs.python.org/issue?@action=redirect&bpo=27942): String constants now interned recursively in tuples and frozensets.
  * [bpo-28289](https://bugs.python.org/issue?@action=redirect&bpo=28289): ImportError.__init__ now resets not specified attributes.
  * [bpo-21578](https://bugs.python.org/issue?@action=redirect&bpo=21578): Fixed misleading error message when ImportError called with invalid keyword args.
  * [bpo-28203](https://bugs.python.org/issue?@action=redirect&bpo=28203): Fix incorrect type in complex(1.0, {2:3}) error message. Patch by Soumya Sharma.
  * [bpo-28086](https://bugs.python.org/issue?@action=redirect&bpo=28086): Single var-positional argument of tuple subtype was passed unscathed to the C-defined function. Now it is converted to exact tuple.
  * [bpo-28214](https://bugs.python.org/issue?@action=redirect&bpo=28214): Now __set_name__ is looked up on the class instead of the instance.
  * [bpo-27955](https://bugs.python.org/issue?@action=redirect&bpo=27955): Fallback on reading /dev/urandom device when the getrandom() syscall fails with EPERM, for example when blocked by SECCOMP.
  * [bpo-28192](https://bugs.python.org/issue?@action=redirect&bpo=28192): Don’t import readline in isolated mode.
  * [bpo-27441](https://bugs.python.org/issue?@action=redirect&bpo=27441): Remove some redundant assignments to ob_size in longobject.c. Thanks Oren Milman.
  * [bpo-27222](https://bugs.python.org/issue?@action=redirect&bpo=27222): Clean up redundant code in long_rshift function. Thanks Oren Milman.
  * Upgrade internal unicode databases to Unicode version 9.0.0.
  * [bpo-28131](https://bugs.python.org/issue?@action=redirect&bpo=28131): Fix a regression in zipimport’s compile_source(). zipimport should use the same optimization level as the interpreter.
  * [bpo-28126](https://bugs.python.org/issue?@action=redirect&bpo=28126): Replace Py_MEMCPY with memcpy(). Visual Studio can properly optimize memcpy().
  * [bpo-28120](https://bugs.python.org/issue?@action=redirect&bpo=28120): Fix dict.pop() for splitted dictionary when trying to remove a “pending key” (Not yet inserted in split-table). Patch by Xiang Zhang.
  * [bpo-26182](https://bugs.python.org/issue?@action=redirect&bpo=26182): Raise DeprecationWarning when async and await keywords are used as variable/attribute/class/function name.
  * [bpo-26182](https://bugs.python.org/issue?@action=redirect&bpo=26182): Fix a refleak in code that raises DeprecationWarning.
  * [bpo-28721](https://bugs.python.org/issue?@action=redirect&bpo=28721): Fix asynchronous generators aclose() and athrow() to handle StopAsyncIteration propagation properly.
  * [bpo-26110](https://bugs.python.org/issue?@action=redirect&bpo=26110): Speed-up method calls: add LOAD_METHOD and CALL_METHOD opcodes.