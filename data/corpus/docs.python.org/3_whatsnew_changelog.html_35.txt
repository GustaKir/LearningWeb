Title: Python 3 Changelog - Fixes and Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section outlines several bug fixes in Python 3, including resolving issues in the email policy's header parsing that added unnecessary whitespace, and correcting a problem in pdb where breakpoints couldn't be set on functions with specific annotations.
---

Patch by Kumar Aditya.
  * [gh-124452](https://github.com/python/cpython/issues/124452): Fix an issue in [`email.policy.EmailPolicy.header_source_parse()`](https://docs.python.org/3/library/email.policy.html#email.policy.EmailPolicy.header_source_parse "email.policy.EmailPolicy.header_source_parse") and [`email.policy.Compat32.header_source_parse()`](https://docs.python.org/3/library/email.policy.html#email.policy.Compat32.header_source_parse "email.policy.Compat32.header_source_parse") that introduced spurious leading whitespaces into header values when the header includes a newline character after the header name delimiter (`:`) and before the value.
  * [gh-125884](https://github.com/python/cpython/issues/125884): Fixed the bug for [`pdb`](https://docs.python.org/3/library/pdb.html#module-pdb "pdb: The Python debugger for interactive interpreters.") where it canâ€™t set breakpoints on functions with certain annotations.
  * [gh-125355](https://github.com/python/cpython/issues/125355): Fix several bugs in [`argparse.ArgumentParser.parse_intermixed_args()`](https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser.parse_intermixed_args "argparse.ArgumentParser.parse_intermixed_args").
    * The parser no longer changes temporarily during parsing.
    * Default values are not processed twice.
    * Required mutually exclusive groups containing positional arguments are now supported.
    * The missing arguments report now includes the names of all required optional and positional arguments.
    * Unknown options can be intermixed with positional arguments in parse_known_intermixed_args().
  * [gh-125666](https://github.com/python/cpython/issues/125666): Avoid the exiting the interpreter if a null byte is given as input in the new REPL.
  * [gh-125710](https://github.com/python/cpython/issues/125710): [Enum] fix hashable<->nonhashable comparisons for member values
  * [gh-125631](https://github.com/python/cpython/issues/125631): Restore ability to set [`persistent_id`](https://docs.python.org/3/library/pickle.html#pickle.Pickler.persistent_id "pickle.Pickler.persistent_id") and [`persistent_load`](https://docs.python.org/3/library/pickle.html#pickle.Unpickler.persistent_load "pickle.Unpickler.persistent_load") attributes of instances of the `Pickler` and `Unpickler` classes in the [`pickle`](https://docs.python.org/3/library/pickle.html#module-pickle "pickle: Convert Python objects to streams of bytes and back.") module.
  * [gh-125378](https://github.com/python/cpython/issues/125378): Fixed the bug in [`pdb`](https://docs.python.org/3/library/pdb.html#module-pdb "pdb: The Python debugger for interactive interpreters.") where after a multi-line command, an empty line repeats the first line of the multi-line command, instead of the full command.
  * [gh-125682](https://github.com/python/cpython/issues/125682): Reject non-ASCII digits in the Python implementation of [`json.loads()`](https://docs.python.org/3/library/json.html#json.loads "json.loads") conforming to the JSON specification.
  * [gh-125660](https://github.com/python/cpython/issues/125660): Reject invalid unicode escapes for Python implementation of [`json.loads()`](https://docs.python.org/3/library/json.html#json.loads "json.loads").
  * [gh-125259](https://github.com/python/cpython/issues/125259): Fix the notes removal logic for errors thrown in enum initialization.
  * [gh-125590](https://github.com/python/cpython/issues/125590): Allow `FrameLocalsProxy` to delete and pop if the key is not a fast variable.
  * [gh-125519](https://github.com/python/cpython/issues/125519): Improve traceback if [`importlib.reload()`](https://docs.python.org/3/library/importlib.html#importlib.reload "importlib.reload") is called with an object that is not a module.