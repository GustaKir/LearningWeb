Title: Python 3 Changelog Highlights
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This patch by Pablo Galindo addresses several issues, including replacing the `CHECK_SMALL_INT` macro with explicit returns in `longobject.c`, normalizing encoding names in `codecs.lookup()`, and fixing compilation of `break` and `continue` statements in `finally` blocks.
---

Patch by Pablo Galindo.
  * [bpo-37812](https://bugs.python.org/issue?@action=redirect&bpo=37812): The `CHECK_SMALL_INT` macro used inside `Object/longobject.c` has been replaced with an explicit `return` at each call site.
  * [bpo-37751](https://bugs.python.org/issue?@action=redirect&bpo=37751): Fix [`codecs.lookup()`](https://docs.python.org/3/library/codecs.html#codecs.lookup "codecs.lookup") to normalize the encoding name the same way than `encodings.normalize_encoding()`, except that [`codecs.lookup()`](https://docs.python.org/3/library/codecs.html#codecs.lookup "codecs.lookup") also converts the name to lower case.
  * [bpo-37830](https://bugs.python.org/issue?@action=redirect&bpo=37830): Fixed compilation of [`break`](https://docs.python.org/3/reference/simple_stmts.html#break) and [`continue`](https://docs.python.org/3/reference/simple_stmts.html#continue) in the [`finally`](https://docs.python.org/3/reference/compound_stmts.html#finally) block when the corresponding [`try`](https://docs.python.org/3/reference/compound_stmts.html#try) block contains [`return`](https://docs.python.org/3/reference/simple_stmts.html#return) with a non-constant value.
  * [bpo-20490](https://bugs.python.org/issue?@action=redirect&bpo=20490): Improve import error message for partially initialized module on circular `from` imports - by Anthony Sottile.
  * [bpo-37840](https://bugs.python.org/issue?@action=redirect&bpo=37840): Fix handling of negative indices in [`sq_item`](https://docs.python.org/3/c-api/typeobj.html#c.PySequenceMethods.sq_item "PySequenceMethods.sq_item") of [`bytearray`](https://docs.python.org/3/library/stdtypes.html#bytearray "bytearray"). Patch by Sergey Fedoseev.
  * [bpo-37802](https://bugs.python.org/issue?@action=redirect&bpo=37802): Slightly improve performance of [`PyLong_FromUnsignedLong()`](https://docs.python.org/3/c-api/long.html#c.PyLong_FromUnsignedLong "PyLong_FromUnsignedLong"), [`PyLong_FromUnsignedLongLong()`](https://docs.python.org/3/c-api/long.html#c.PyLong_FromUnsignedLongLong "PyLong_FromUnsignedLongLong") and [`PyLong_FromSize_t()`](https://docs.python.org/3/c-api/long.html#c.PyLong_FromSize_t "PyLong_FromSize_t"). Patch by Sergey Fedoseev.
  * [bpo-37409](https://bugs.python.org/issue?@action=redirect&bpo=37409): Ensure explicit relative imports from interactive sessions and scripts (having no parent package) always raise ImportError, rather than treating the current module as the package. Patch by Ben Lewis.
  * [bpo-32912](https://bugs.python.org/issue?@action=redirect&bpo=32912): Reverted [bpo-32912](https://bugs.python.org/issue?@action=redirect&bpo=32912): emitting [`SyntaxWarning`](https://docs.python.org/3/library/exceptions.html#SyntaxWarning "SyntaxWarning") instead of [`DeprecationWarning`](https://docs.python.org/3/library/exceptions.html#DeprecationWarning "DeprecationWarning") for invalid escape sequences in string and bytes literals.
  * [bpo-37757](https://bugs.python.org/issue?@action=redirect&bpo=37757): [**PEP 572**](https://peps.python.org/pep-0572/): As described in the PEP, assignment expressions now raise [`SyntaxError`](https://docs.python.org/3/library/exceptions.html#SyntaxError "SyntaxError") when their interaction with comprehension scoping results in an ambiguous target scope.
The `TargetScopeError` subclass originally proposed by the PEP has been removed in favour of just raising regular syntax errors for the disallowed cases.
  * [bpo-36279](https://bugs.python.org/issue?@action=redirect&bpo=36279): Fix potential use of uninitialized memory in [`os.wait3()`](https://docs.python.org/3/library/os.html#os.wait3 "os.wait3").
  * [bpo-36311](https://bugs.python.org/issue?@action=redirect&bpo=36311): Decoding bytes objects larger than 2GiB is faster and no longer fails when a multibyte characters spans a chunk boundary.
  * [bpo-34880](https://bugs.python.org/issue?@action=redirect&bpo=34880): The [`assert`](https://docs.python.org/3/reference/simple_stmts.html#assert) statement now works properly if the [`AssertionError`](https://docs.python.org/3/library/exceptions.html#AssertionError "AssertionError") exception is being shadowed. Patch by Zackery Spytz.
  * [bpo-37340](https://bugs.python.org/issue?@action=redirect&bpo=37340): Removed object cache (`free_list`) for bound method objects. Temporary bound method objects are less used than before thanks to the `LOAD_METHOD` opcode and the `_PyObject_VectorcallMethod` C API.
  * [bpo-37648](https://bugs.python.org/issue?@action=redirect&bpo=37648): Fixed minor inconsistency in `list.__contains__()`, `tuple.__contains__()` and a few other places.