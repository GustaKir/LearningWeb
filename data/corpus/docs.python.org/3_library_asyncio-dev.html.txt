Title: Developing with asyncio
URL: https://docs.python.org/3/library/asyncio-dev.html
Summary: This document covers the asyncio library in Python, detailing its debug mode, concurrency and multithreading capabilities, handling of blocking code, logging features, and detection of never-awaited coroutines.
---

[ ![Python logo](https://docs.python.org/3/_static/py.svg) ](https://www.python.org/) dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
Theme  Auto Light Dark
### [Table of Contents](https://docs.python.org/3/contents.html)
  * [Developing with asyncio](https://docs.python.org/3/library/asyncio-dev.html)
    * [Debug Mode](https://docs.python.org/3/library/asyncio-dev.html#debug-mode)
    * [Concurrency and Multithreading](https://docs.python.org/3/library/asyncio-dev.html#concurrency-and-multithreading)
    * [Running Blocking Code](https://docs.python.org/3/library/asyncio-dev.html#running-blocking-code)
    * [Logging](https://docs.python.org/3/library/asyncio-dev.html#logging)
    * [Detect never-awaited coroutines](https://docs.python.org/3/library/asyncio-dev.html#detect-never-awaited-coroutines)
    * [Detect never-retrieved exceptions](https://docs.python.org/3/library/asyncio-dev.html#detect-never-retrieved-exceptions)


#### Previous topic
[Low-level API Index](https://docs.python.org/3/library/asyncio-llapi-index.html "previous chapter")
#### Next topic
[`socket` — Low-level networking interface](https://docs.python.org/3/library/socket.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/asyncio-dev.rst)


### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/library/socket.html "socket — Low-level networking interface") |
  * [previous](https://docs.python.org/3/library/asyncio-llapi-index.html "Low-level API Index") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [The Python Standard Library](https://docs.python.org/3/library/index.html) »
  * [Networking and Interprocess Communication](https://docs.python.org/3/library/ipc.html) »
  * [`asyncio` — Asynchronous I/O](https://docs.python.org/3/library/asyncio.html) »
  * [Developing with asyncio](https://docs.python.org/3/library/asyncio-dev.html)
  * | 
  * Theme  Auto Light Dark |


# Developing with asyncio[¶](https://docs.python.org/3/library/asyncio-dev.html#developing-with-asyncio "Link to this heading")
Asynchronous programming is different from classic “sequential” programming.
This page lists common mistakes and traps and explains how to avoid them.
## Debug Mode[¶](https://docs.python.org/3/library/asyncio-dev.html#debug-mode "Link to this heading")
By default asyncio runs in production mode. In order to ease the development asyncio has a _debug mode_.
There are several ways to enable asyncio debug mode:
  * Setting the [`PYTHONASYNCIODEBUG`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONASYNCIODEBUG) environment variable to `1`.
  * Using the [Python Development Mode](https://docs.python.org/3/library/devmode.html#devmode).
  * Passing `debug=True` to [`asyncio.run()`](https://docs.python.org/3/library/asyncio-runner.html#asyncio.run "asyncio.run").
  * Calling [`loop.set_debug()`](https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.loop.set_debug "asyncio.loop.set_debug").


In addition to enabling the debug mode, consider also:
  * setting the log level of the [asyncio logger](https://docs.python.org/3/library/asyncio-dev.html#asyncio-logger) to [`logging.DEBUG`](https://docs.python.org/3/library/logging.html#logging.DEBUG "logging.DEBUG"), for example the following snippet of code can be run at startup of the application:
```
logging.basicConfig(level=logging.DEBUG)