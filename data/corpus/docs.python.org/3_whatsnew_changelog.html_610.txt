Title: Python 3.8 Release Notes - Key Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: The webbrowser.register() method is now thread-safe. Various enhancements include the zipfile module accepting path-like objects, updated index() and count() methods in collections.abc.Sequence for identity checks, support for bytes paths in os.fwalk(), introduction of the TCP_NOTSENT_LOWAT constant in sockets, and allowing path-like objects in ConfigParser.read(). Additionally, the sqlite3 module has been migrated to the _v2 API.
---

webbrowser.register() is now thread-safe.
  * [bpo-28231](https://bugs.python.org/issue?@action=redirect&bpo=28231): The zipfile module now accepts path-like objects for external paths.
  * [bpo-26915](https://bugs.python.org/issue?@action=redirect&bpo=26915): index() and count() methods of collections.abc.Sequence now check identity before checking equality when do comparisons.
  * [bpo-28682](https://bugs.python.org/issue?@action=redirect&bpo=28682): Added support for bytes paths in os.fwalk().
  * [bpo-29728](https://bugs.python.org/issue?@action=redirect&bpo=29728): Add new `socket.TCP_NOTSENT_LOWAT` (Linux 3.12) constant. Patch by Nathaniel J. Smith.
  * [bpo-29623](https://bugs.python.org/issue?@action=redirect&bpo=29623): Allow use of path-like object as a single argument in ConfigParser.read(). Patch by David Ellis.
  * [bpo-9303](https://bugs.python.org/issue?@action=redirect&bpo=9303): Migrate sqlite3 module to _v2 API. Patch by Aviv Palivoda.
  * [bpo-28963](https://bugs.python.org/issue?@action=redirect&bpo=28963): Fix out of bound iteration in asyncio.Future.remove_done_callback implemented in C.
  * [bpo-29704](https://bugs.python.org/issue?@action=redirect&bpo=29704): asyncio.subprocess.SubprocessStreamProtocol no longer closes before all pipes are closed.
  * [bpo-29271](https://bugs.python.org/issue?@action=redirect&bpo=29271): Fix Task.current_task and Task.all_tasks implemented in C to accept None argument as their pure Python implementation.
  * [bpo-29703](https://bugs.python.org/issue?@action=redirect&bpo=29703): Fix asyncio to support instantiation of new event loops in child processes.
  * [bpo-29615](https://bugs.python.org/issue?@action=redirect&bpo=29615): SimpleXMLRPCDispatcher no longer chains KeyError (or any other exception) to exception(s) raised in the dispatched methods. Patch by Petr Motejlek.
  * [bpo-7769](https://bugs.python.org/issue?@action=redirect&bpo=7769): Method register_function() of xmlrpc.server.SimpleXMLRPCDispatcher and its subclasses can now be used as a decorator.
  * [bpo-29376](https://bugs.python.org/issue?@action=redirect&bpo=29376): Fix assertion error in threading._DummyThread.is_alive().
  * [bpo-28624](https://bugs.python.org/issue?@action=redirect&bpo=28624): Add a test that checks that cwd parameter of Popen() accepts PathLike objects. Patch by Sayan Chowdhury.
  * [bpo-28518](https://bugs.python.org/issue?@action=redirect&bpo=28518): Start a transaction implicitly before a DML statement. Patch by Aviv Palivoda.
  * [bpo-29742](https://bugs.python.org/issue?@action=redirect&bpo=29742): get_extra_info() raises exception if get called on closed ssl transport. Patch by Nikolay Kim.
  * [bpo-16285](https://bugs.python.org/issue?@action=redirect&bpo=16285): urllib.parse.quote is now based on RFC 3986 and hence includes ‘~’ in the set of characters that is not quoted by default. Patch by Christian Theune and Ratnadeep Debnath.
  * [bpo-29532](https://bugs.python.org/issue?@action=redirect&bpo=29532): Altering a kwarg dictionary passed to functools.partial() no longer affects a partial object after creation.
  * [bpo-29110](https://bugs.python.org/issue?@action=redirect&bpo=29110): Fix file object leak in aifc.open() when file is given as a filesystem path and is not in valid AIFF format. Patch by Anthony Zhang.
  * [bpo-22807](https://bugs.python.org/issue?@action=redirect&bpo=22807): Add uuid.SafeUUID and uuid.UUID.is_safe to relay information from the platform about whether generated UUIDs are generated with a multiprocessing safe method.
  * [bpo-29576](https://bugs.python.org/issue?@action=redirect&bpo=29576): Improve some deprecations in importlib. Some deprecated methods now emit DeprecationWarnings and have better descriptive messages.
  * [bpo-29534](https://bugs.python.org/issue?@action=redirect&bpo=29534): Fixed different behaviour of Decimal.from_float() for _decimal and _pydecimal. Thanks Andrew Nester.
  * [bpo-10379](https://bugs.python.org/issue?@action=redirect&bpo=10379): locale.format_string now supports the ‘monetary’ keyword argument, and locale.format is deprecated.
  * [bpo-29851](https://bugs.python.org/issue?@action=redirect&bpo=29851): importlib.reload() now raises ModuleNotFoundError if the module lacks a spec.
  * [bpo-28556](https://bugs.python.org/issue?@action=redirect&bpo=28556): Various updates to typing module: typing.Counter, typing.ChainMap, improved ABC caching, etc. Original PRs by Jelle Zijlstra, Ivan Levkivskyi, Manuel Krebber, and Łukasz Langa.
  * [bpo-29100](https://bugs.python.org/issue?@action=redirect&bpo=29100): Fix datetime.fromtimestamp() regression introduced in Python 3.6.0: check minimum and maximum years.
  * [bpo-29416](https://bugs.python.org/issue?@action=redirect&bpo=29416): Prevent infinite loop in pathlib.Path.mkdir
  * [bpo-29444](https://bugs.python.org/issue?@action=redirect&bpo=29444): Fixed out-of-bounds buffer access in the group() method of the match object.