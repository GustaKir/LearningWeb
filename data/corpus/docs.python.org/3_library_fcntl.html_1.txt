Title: fcntl — The fcntl and ioctl System Calls
URL: https://docs.python.org/3/library/fcntl.html
Summary: The `fcntl` module provides an interface for file and I/O control on file descriptors, utilizing the Unix routines `fcntl()` and `ioctl()`. It requires a file descriptor as its first argument, which can be either an integer or an `io.IOBase` object. This module is available on Unix systems only.
---

# `fcntl` — The `fcntl` and `ioctl` system calls[¶](https://docs.python.org/3/library/fcntl.html#module-fcntl "Link to this heading")
This module performs file and I/O control on file descriptors. It is an interface to the `fcntl()` and `ioctl()` Unix routines. See the _[fcntl(2)](https://manpages.debian.org/fcntl\(2\))_ and _[ioctl(2)](https://manpages.debian.org/ioctl\(2\))_ Unix manual pages for full details.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix, not WASI.
All functions in this module take a file descriptor _fd_ as their first argument. This can be an integer file descriptor, such as returned by `sys.stdin.fileno()`, or an [`io.IOBase`](https://docs.python.org/3/library/io.html#io.IOBase "io.IOBase") object, such as `sys.stdin` itself, which provides a [`fileno()`](https://docs.python.org/3/library/io.html#io.IOBase.fileno "io.IOBase.fileno") that returns a genuine file descriptor.
Changed in version 3.3: Operations in this module used to raise an [`IOError`](https://docs.python.org/3/library/exceptions.html#IOError "IOError") where they now raise an [`OSError`](https://docs.python.org/3/library/exceptions.html#OSError "OSError").
Changed in version 3.8: The `fcntl` module now contains `F_ADD_SEALS`, `F_GET_SEALS`, and `F_SEAL_*` constants for sealing of [`os.memfd_create()`](https://docs.python.org/3/library/os.html#os.memfd_create "os.memfd_create") file descriptors.
Changed in version 3.9: On macOS, the `fcntl` module exposes the `F_GETPATH` constant, which obtains the path of a file from a file descriptor. On Linux(>=3.15), the `fcntl` module exposes the `F_OFD_GETLK`, `F_OFD_SETLK` and `F_OFD_SETLKW` constants, which are used when working with open file description locks.
Changed in version 3.10: On Linux >= 2.6.11, the `fcntl` module exposes the `F_GETPIPE_SZ` and `F_SETPIPE_SZ` constants, which allow to check and modify a pipe’s size respectively.
Changed in version 3.11: On FreeBSD, the `fcntl` module exposes the `F_DUP2FD` and `F_DUP2FD_CLOEXEC` constants, which allow to duplicate a file descriptor, the latter setting `FD_CLOEXEC` flag in addition.
Changed in version 3.12: On Linux >= 4.5, the [`fcntl`](https://docs.python.org/3/library/fcntl.html#module-fcntl "fcntl: The fcntl\(\) and ioctl\(\) system calls. \(Unix\)") module exposes the `FICLONE` and `FICLONERANGE` constants, which allow to share some data of one file with another file by reflinking on some filesystems (e.g., btrfs, OCFS2, and XFS). This behavior is commonly referred to as “copy-on-write”.
Changed in version 3.13: On Linux >= 2.6.32, the `fcntl` module exposes the `F_GETOWN_EX`, `F_SETOWN_EX`, `F_OWNER_TID`, `F_OWNER_PID`, `F_OWNER_PGRP` constants, which allow to direct I/O availability signals to a specific thread, process, or process group. On Linux >= 4.13, the `fcntl` module exposes the `F_GET_RW_HINT`, `F_SET_RW_HINT`, `F_GET_FILE_RW_HINT`, `F_SET_FILE_RW_HINT`, and `RWH_WRITE_LIFE_*` constants, which allow to inform the kernel about the relative expected lifetime of writes on a given inode or via a particular open file description. On Linux >= 5.1 and NetBSD, the `fcntl` module exposes the `F_SEAL_FUTURE_WRITE` constant for use with `F_ADD_SEALS` and `F_GET_SEALS` operations. On FreeBSD, the `fcntl` module exposes the `F_READAHEAD`, `F_ISUNIONSTACK`, and `F_KINFO` constants. On macOS and FreeBSD, the `fcntl` module exposes the `F_RDAHEAD` constant. On NetBSD and AIX, the `fcntl` module exposes the `F_CLOSEM` constant. On NetBSD, the `fcntl` module exposes the `F_MAXFD` constant. On macOS and NetBSD, the `fcntl` module exposes the `F_GETNOSIGPIPE` and `F_SETNOSIGPIPE` constant.
The module defines the following functions: