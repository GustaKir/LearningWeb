Title: Deprecated C APIs in Python 3.13
URL: https://docs.python.org/3/whatsnew/3.13.html
Summary: Python 3.13 deprecates several old C API initialization functions, including `PySys_ResetWarnOptions()`, `Py_GetExecPrefix()`, `Py_GetPath()`, and `Py_GetPrefix()`, advising the use of the corresponding `sys` attributes as replacements.
---

### Deprecated C APIs[Â¶](https://docs.python.org/3/whatsnew/3.13.html#deprecated-c-apis "Link to this heading")
  * Deprecate old Python initialization functions:
    * [`PySys_ResetWarnOptions()`](https://docs.python.org/3/c-api/sys.html#c.PySys_ResetWarnOptions "PySys_ResetWarnOptions"): Clear [`sys.warnoptions`](https://docs.python.org/3/library/sys.html#sys.warnoptions "sys.warnoptions") and `warnings.filters` instead.
    * [`Py_GetExecPrefix()`](https://docs.python.org/3/c-api/init.html#c.Py_GetExecPrefix "Py_GetExecPrefix"): Get [`sys.exec_prefix`](https://docs.python.org/3/library/sys.html#sys.exec_prefix "sys.exec_prefix") instead.
    * [`Py_GetPath()`](https://docs.python.org/3/c-api/init.html#c.Py_GetPath "Py_GetPath"): Get [`sys.path`](https://docs.python.org/3/library/sys.html#sys.path "sys.path") instead.
    * [`Py_GetPrefix()`](https://docs.python.org/3/c-api/init.html#c.Py_GetPrefix "Py_GetPrefix"): Get [`sys.prefix`](https://docs.python.org/3/library/sys.html#sys.prefix "sys.prefix") instead.
    * [`Py_GetProgramFullPath()`](https://docs.python.org/3/c-api/init.html#c.Py_GetProgramFullPath "Py_GetProgramFullPath"): Get [`sys.executable`](https://docs.python.org/3/library/sys.html#sys.executable "sys.executable") instead.
    * [`Py_GetProgramName()`](https://docs.python.org/3/c-api/init.html#c.Py_GetProgramName "Py_GetProgramName"): Get [`sys.executable`](https://docs.python.org/3/library/sys.html#sys.executable "sys.executable") instead.
    * [`Py_GetPythonHome()`](https://docs.python.org/3/c-api/init.html#c.Py_GetPythonHome "Py_GetPythonHome"): Get [`PyConfig.home`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.home "PyConfig.home") or the [`PYTHONHOME`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONHOME) environment variable instead.
(Contributed by Victor Stinner in [gh-105145](https://github.com/python/cpython/issues/105145).)
  * [Soft deprecate](https://docs.python.org/3/glossary.html#term-soft-deprecated) the [`PyEval_GetBuiltins()`](https://docs.python.org/3/c-api/reflection.html#c.PyEval_GetBuiltins "PyEval_GetBuiltins"), [`PyEval_GetGlobals()`](https://docs.python.org/3/c-api/reflection.html#c.PyEval_GetGlobals "PyEval_GetGlobals"), and [`PyEval_GetLocals()`](https://docs.python.org/3/c-api/reflection.html#c.PyEval_GetLocals "PyEval_GetLocals") functions, which return a [borrowed reference](https://docs.python.org/3/glossary.html#term-borrowed-reference). (Soft deprecated as part of [**PEP 667**](https://peps.python.org/pep-0667/).)
  * Deprecate the [`PyImport_ImportModuleNoBlock()`](https://docs.python.org/3/c-api/import.html#c.PyImport_ImportModuleNoBlock "PyImport_ImportModuleNoBlock") function, which is just an alias to [`PyImport_ImportModule()`](https://docs.python.org/3/c-api/import.html#c.PyImport_ImportModule "PyImport_ImportModule") since Python 3.3. (Contributed by Victor Stinner in [gh-105396](https://github.com/python/cpython/issues/105396).)
  * [Soft deprecate](https://docs.python.org/3/glossary.html#term-soft-deprecated) the [`PyModule_AddObject()`](https://docs.python.org/3/c-api/module.html#c.PyModule_AddObject "PyModule_AddObject") function. It should be replaced with [`PyModule_Add()`](https://docs.python.org/3/c-api/module.html#c.PyModule_Add "PyModule_Add") or [`PyModule_AddObjectRef()`](https://docs.python.org/3/c-api/module.html#c.PyModule_AddObjectRef "PyModule_AddObjectRef"). (Contributed by Serhiy Storchaka in [gh-86493](https://github.com/python/cpython/issues/86493).)
  * Deprecate the old `Py_UNICODE` and `PY_UNICODE_TYPE` types and the `Py_UNICODE_WIDE` define. Use the `wchar_t` type directly instead. Since Python 3.3, `Py_UNICODE` and `PY_UNICODE_TYPE` are just aliases to `wchar_t`. (Contributed by Victor Stinner in [gh-105156](https://github.com/python/cpython/issues/105156).)
  * Deprecate the [`PyWeakref_GetObject()`](https://docs.python.org/3/c-api/weakref.html#c.PyWeakref_GetObject "PyWeakref_GetObject") and [`PyWeakref_GET_OBJECT()`](https://docs.python.org/3/c-api/weakref.html#c.PyWeakref_GET_OBJECT "PyWeakref_GET_OBJECT") functions, which return a [borrowed reference](https://docs.python.org/3/glossary.html#term-borrowed-reference). Replace them with the new [`PyWeakref_GetRef()`](https://docs.python.org/3/c-api/weakref.html#c.PyWeakref_GetRef "PyWeakref_GetRef") function, which returns a [strong reference](https://docs.python.org/3/glossary.html#term-strong-reference). The [pythoncapi-compat project](https://github.com/python/pythoncapi-compat/) can be used to get [`PyWeakref_GetRef()`](https://docs.python.org/3/c-api/weakref.html#c.PyWeakref_GetRef "PyWeakref_GetRef") on Python 3.12 and older. (Contributed by Victor Stinner in [gh-105927](https://github.com/python/cpython/issues/105927).)