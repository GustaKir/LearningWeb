Title: Build and C API Changes in Python 3.3
URL: https://docs.python.org/3/whatsnew/3.3.html
Summary: This section highlights the updates to Python's build process and the C API in version 3.3, including the introduction of PEP 3118 with the `PyMemoryView_FromMemory()` function, and PEP 393 which adds new Unicode types, macros, and functions such as `PyUnicode_CopyCharacters()`, `PyUnicode_FindChar()`, and `PyUnicode_GetLength()`.
---

## Build and C API Changes[¶](https://docs.python.org/3/whatsnew/3.3.html#build-and-c-api-changes "Link to this heading")
Changes to Python’s build process and to the C API include:
  * New [**PEP 3118**](https://peps.python.org/pep-3118/) related function:
    * [`PyMemoryView_FromMemory()`](https://docs.python.org/3/c-api/memoryview.html#c.PyMemoryView_FromMemory "PyMemoryView_FromMemory")
  * [**PEP 393**](https://peps.python.org/pep-0393/) added new Unicode types, macros and functions:
    * High-level API:
      * [`PyUnicode_CopyCharacters()`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_CopyCharacters "PyUnicode_CopyCharacters")
      * [`PyUnicode_FindChar()`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_FindChar "PyUnicode_FindChar")
      * [`PyUnicode_GetLength()`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_GetLength "PyUnicode_GetLength"), [`PyUnicode_GET_LENGTH`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_GET_LENGTH "PyUnicode_GET_LENGTH")
      * [`PyUnicode_New()`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_New "PyUnicode_New")
      * [`PyUnicode_Substring()`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_Substring "PyUnicode_Substring")
      * [`PyUnicode_ReadChar()`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_ReadChar "PyUnicode_ReadChar"), [`PyUnicode_WriteChar()`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_WriteChar "PyUnicode_WriteChar")
    * Low-level API:
      * [`Py_UCS1`](https://docs.python.org/3/c-api/unicode.html#c.Py_UCS1 "Py_UCS1"), [`Py_UCS2`](https://docs.python.org/3/c-api/unicode.html#c.Py_UCS2 "Py_UCS2"), [`Py_UCS4`](https://docs.python.org/3/c-api/unicode.html#c.Py_UCS4 "Py_UCS4") types
      * [`PyASCIIObject`](https://docs.python.org/3/c-api/unicode.html#c.PyASCIIObject "PyASCIIObject") and [`PyCompactUnicodeObject`](https://docs.python.org/3/c-api/unicode.html#c.PyCompactUnicodeObject "PyCompactUnicodeObject") structures
      * [`PyUnicode_READY`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_READY "PyUnicode_READY")
      * [`PyUnicode_FromKindAndData()`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_FromKindAndData "PyUnicode_FromKindAndData")
      * [`PyUnicode_AsUCS4()`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_AsUCS4 "PyUnicode_AsUCS4"), [`PyUnicode_AsUCS4Copy()`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_AsUCS4Copy "PyUnicode_AsUCS4Copy")
      * [`PyUnicode_DATA`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_DATA "PyUnicode_DATA"), [`PyUnicode_1BYTE_DATA`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_1BYTE_DATA "PyUnicode_1BYTE_DATA"), [`PyUnicode_2BYTE_DATA`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_2BYTE_DATA "PyUnicode_2BYTE_DATA"), [`PyUnicode_4BYTE_DATA`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_4BYTE_DATA "PyUnicode_4BYTE_DATA")
      * [`PyUnicode_KIND`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_KIND "PyUnicode_KIND") with `PyUnicode_Kind` enum: `PyUnicode_WCHAR_KIND`, [`PyUnicode_1BYTE_KIND`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_1BYTE_KIND "PyUnicode_1BYTE_KIND"), [`PyUnicode_2BYTE_KIND`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_2BYTE_KIND "PyUnicode_2BYTE_KIND"), [`PyUnicode_4BYTE_KIND`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_4BYTE_KIND "PyUnicode_4BYTE_KIND")
      * [`PyUnicode_READ`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_READ "PyUnicode_READ"), [`PyUnicode_READ_CHAR`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_READ_CHAR "PyUnicode_READ_CHAR"), [`PyUnicode_WRITE`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_WRITE "PyUnicode_WRITE")
      * [`PyUnicode_MAX_CHAR_VALUE`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_MAX_CHAR_VALUE "PyUnicode_MAX_CHAR_VALUE")
  * [`PyArg_ParseTuple`](https://docs.python.org/3/c-api/arg.html#c.PyArg_ParseTuple "PyArg_ParseTuple") now accepts a [`bytearray`](https://docs.python.org/3/library/stdtypes.html#bytearray "bytearray") for the `c` format ([bpo-12380](https://bugs.python.org/issue?@action=redirect&bpo=12380)).