Title: Python C API: Compiling Strings
URL: https://docs.python.org/3/c-api/veryhigh.html
Summary: This section describes the `Py_CompileStringFlags` and `Py_CompileStringObject` functions, which provide a simplified interface for compiling Python source code from strings. `Py_CompileStringFlags` uses default optimization settings, while `Py_CompileStringObject` allows for specific filename, compiler flags, and optimization level.
---

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*Py_CompileStringFlags(constchar*str, constchar*filename, intstart, [PyCompilerFlags](https://docs.python.org/3/c-api/veryhigh.html#c.PyCompilerFlags "PyCompilerFlags")*flags)[¶](https://docs.python.org/3/c-api/veryhigh.html#c.Py_CompileStringFlags "Link to this definition")
    _Return value: New reference._
This is a simplified interface to [`Py_CompileStringExFlags()`](https://docs.python.org/3/c-api/veryhigh.html#c.Py_CompileStringExFlags "Py_CompileStringExFlags") below, with _optimize_ set to `-1`. 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*Py_CompileStringObject(constchar*str, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*filename, intstart, [PyCompilerFlags](https://docs.python.org/3/c-api/veryhigh.html#c.PyCompilerFlags "PyCompilerFlags")*flags, intoptimize)[¶](https://docs.python.org/3/c-api/veryhigh.html#c.Py_CompileStringObject "Link to this definition")
    _Return value: New reference._
Parse and compile the Python source code in _str_ , returning the resulting code object. The start token is given by _start_ ; this can be used to constrain the code which can be compiled and should be [`Py_eval_input`](https://docs.python.org/3/c-api/veryhigh.html#c.Py_eval_input "Py_eval_input"), [`Py_file_input`](https://docs.python.org/3/c-api/veryhigh.html#c.Py_file_input "Py_file_input"), or [`Py_single_input`](https://docs.python.org/3/c-api/veryhigh.html#c.Py_single_input "Py_single_input"). The filename specified by _filename_ is used to construct the code object and may appear in tracebacks or [`SyntaxError`](https://docs.python.org/3/library/exceptions.html#SyntaxError "SyntaxError") exception messages. This returns `NULL` if the code cannot be parsed or compiled.
The integer _optimize_ specifies the optimization level of the compiler; a value of `-1` selects the optimization level of the interpreter as given by [`-O`](https://docs.python.org/3/using/cmdline.html#cmdoption-O) options. Explicit levels are `0` (no optimization; `__debug__` is true), `1` (asserts are removed, `__debug__` is false) or `2` (docstrings are removed too).
Added in version 3.4. 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*Py_CompileStringExFlags(constchar*str, constchar*filename, intstart, [PyCompilerFlags](https://docs.python.org/3/c-api/veryhigh.html#c.PyCompilerFlags "PyCompilerFlags")*flags, intoptimize)[¶](https://docs.python.org/3/c-api/veryhigh.html#c.Py_CompileStringExFlags "Link to this definition")
    _Return value: New reference._
Like [`Py_CompileStringObject()`](https://docs.python.org/3/c-api/veryhigh.html#c.Py_CompileStringObject "Py_CompileStringObject"), but _filename_ is a byte string decoded from the [filesystem encoding and error handler](https://docs.python.org/3/glossary.html#term-filesystem-encoding-and-error-handler).
Added in version 3.2. 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyEval_EvalCode([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*co, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*globals, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*locals)[¶](https://docs.python.org/3/c-api/veryhigh.html#c.PyEval_EvalCode "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
This is a simplified interface to [`PyEval_EvalCodeEx()`](https://docs.python.org/3/c-api/veryhigh.html#c.PyEval_EvalCodeEx "PyEval_EvalCodeEx"), with just the code object, and global and local variables. The other arguments are set to `NULL`.