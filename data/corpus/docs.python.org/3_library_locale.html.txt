Title: Locale - Internationalization Services
URL: https://docs.python.org/3/library/locale.html
Summary: The 'locale' module in Python provides services for internationalization, allowing the adaptation of programs to different languages and regional settings. It covers various aspects such as background information, details, tips, and caveats, as well as guidance for extension writers and programs embedding Python.
---

[ ![Python logo](https://docs.python.org/3/_static/py.svg) ](https://www.python.org/) dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
Theme  Auto Light Dark
### [Table of Contents](https://docs.python.org/3/contents.html)
  * [`locale` — Internationalization services](https://docs.python.org/3/library/locale.html)
    * [Background, details, hints, tips and caveats](https://docs.python.org/3/library/locale.html#background-details-hints-tips-and-caveats)
    * [For extension writers and programs that embed Python](https://docs.python.org/3/library/locale.html#for-extension-writers-and-programs-that-embed-python)
    * [Access to message catalogs](https://docs.python.org/3/library/locale.html#access-to-message-catalogs)


#### Previous topic
[`gettext` — Multilingual internationalization services](https://docs.python.org/3/library/gettext.html "previous chapter")
#### Next topic
[Program Frameworks](https://docs.python.org/3/library/frameworks.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/locale.rst)


### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/library/frameworks.html "Program Frameworks") |
  * [previous](https://docs.python.org/3/library/gettext.html "gettext — Multilingual internationalization services") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [The Python Standard Library](https://docs.python.org/3/library/index.html) »
  * [Internationalization](https://docs.python.org/3/library/i18n.html) »
  * [`locale` — Internationalization services](https://docs.python.org/3/library/locale.html)
  * | 
  * Theme  Auto Light Dark |


# `locale` — Internationalization services[¶](https://docs.python.org/3/library/locale.html#module-locale "Link to this heading")
**Source code:** [Lib/locale.py](https://github.com/python/cpython/tree/3.13/Lib/locale.py)
The [`locale`](https://docs.python.org/3/library/locale.html#module-locale "locale: Internationalization services.") module opens access to the POSIX locale database and functionality. The POSIX locale mechanism allows programmers to deal with certain cultural issues in an application, without requiring the programmer to know all the specifics of each country where the software is executed.
The [`locale`](https://docs.python.org/3/library/locale.html#module-locale "locale: Internationalization services.") module is implemented on top of the `_locale` module, which in turn uses an ANSI C locale implementation if available.
The [`locale`](https://docs.python.org/3/library/locale.html#module-locale "locale: Internationalization services.") module defines the following exception and functions: 

_exception_ locale.Error[¶](https://docs.python.org/3/library/locale.html#locale.Error "Link to this definition")
    
Exception raised when the locale passed to [`setlocale()`](https://docs.python.org/3/library/locale.html#locale.setlocale "locale.setlocale") is not recognized. 

locale.setlocale(_category_ , _locale =None_)[¶](https://docs.python.org/3/library/locale.html#locale.setlocale "Link to this definition")
    
If _locale_ is given and not `None`, [`setlocale()`](https://docs.python.org/3/library/locale.html#locale.setlocale "locale.setlocale") modifies the locale setting for the _category_. The available categories are listed in the data description below. _locale_ may be a string, or an iterable of two strings (language code and encoding). If it’s an iterable, it’s converted to a locale name using the locale aliasing engine. An empty string specifies the user’s default settings. If the modification of the locale fails, the exception [`Error`](https://docs.python.org/3/library/locale.html#locale.Error "locale.Error") is raised. If successful, the new locale setting is returned.
If _locale_ is omitted or `None`, the current setting for _category_ is returned.
[`setlocale()`](https://docs.python.org/3/library/locale.html#locale.setlocale "locale.setlocale") is not thread-safe on most systems. Applications typically start with a call of
```
importlocale
locale.setlocale(locale.LC_ALL, '')