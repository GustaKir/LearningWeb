Title: Changes to Python 3.7 C API Initialization Requirements
URL: https://docs.python.org/3/whatsnew/3.7.html
Summary: Python 3.7 introduces stricter requirements for calling `Py_Initialize()` before using most C API functions, which may prevent segfaults in embedding applications. The document also introduces the new `PyInterpreterState_GetID()` function for retrieving a unique interpreter ID.
---

(Contributed by Serhiy Storchaka in [bpo-30708](https://bugs.python.org/issue?@action=redirect&bpo=30708).)
Changes to the startup sequence and the management of dynamic memory allocators mean that the long documented requirement to call [`Py_Initialize()`](https://docs.python.org/3/c-api/init.html#c.Py_Initialize "Py_Initialize") before calling most C API functions is now relied on more heavily, and failing to abide by it may lead to segfaults in embedding applications. See the [Porting to Python 3.7](https://docs.python.org/3/whatsnew/3.7.html#porting-to-python-37) section in this document and the [Before Python Initialization](https://docs.python.org/3/c-api/init.html#pre-init-safe) section in the C API documentation for more details.
The new [`PyInterpreterState_GetID()`](https://docs.python.org/3/c-api/init.html#c.PyInterpreterState_GetID "PyInterpreterState_GetID") returns the unique ID for a given interpreter. (Contributed by Eric Snow in [bpo-29102](https://bugs.python.org/issue?@action=redirect&bpo=29102).)
[`Py_DecodeLocale()`](https://docs.python.org/3/c-api/sys.html#c.Py_DecodeLocale "Py_DecodeLocale"), [`Py_EncodeLocale()`](https://docs.python.org/3/c-api/sys.html#c.Py_EncodeLocale "Py_EncodeLocale") now use the UTF-8 encoding when the [UTF-8 mode](https://docs.python.org/3/whatsnew/3.7.html#whatsnew37-pep540) is enabled. (Contributed by Victor Stinner in [bpo-29240](https://bugs.python.org/issue?@action=redirect&bpo=29240).)
[`PyUnicode_DecodeLocaleAndSize()`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_DecodeLocaleAndSize "PyUnicode_DecodeLocaleAndSize") and [`PyUnicode_EncodeLocale()`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_EncodeLocale "PyUnicode_EncodeLocale") now use the current locale encoding for `surrogateescape` error handler. (Contributed by Victor Stinner in [bpo-29240](https://bugs.python.org/issue?@action=redirect&bpo=29240).)
The _start_ and _end_ parameters of [`PyUnicode_FindChar()`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_FindChar "PyUnicode_FindChar") are now adjusted to behave like string slices. (Contributed by Xiang Zhang in [bpo-28822](https://bugs.python.org/issue?@action=redirect&bpo=28822).)
## Build Changes[¶](https://docs.python.org/3/whatsnew/3.7.html#build-changes "Link to this heading")
Support for building `--without-threads` has been removed. The [`threading`](https://docs.python.org/3/library/threading.html#module-threading "threading: Thread-based parallelism.") module is now always available. (Contributed by Antoine Pitrou in [bpo-31370](https://bugs.python.org/issue?@action=redirect&bpo=31370).).
A full copy of libffi is no longer bundled for use when building the [`_ctypes`](https://docs.python.org/3/library/ctypes.html#module-ctypes "ctypes: A foreign function library for Python.") module on non-OSX UNIX platforms. An installed copy of libffi is now required when building `_ctypes` on such platforms. (Contributed by Zachary Ware in [bpo-27979](https://bugs.python.org/issue?@action=redirect&bpo=27979).)
The Windows build process no longer depends on Subversion to pull in external sources, a Python script is used to download zipfiles from GitHub instead. If Python 3.6 is not found on the system (via `py -3.6`), NuGet is used to download a copy of 32-bit Python for this purpose. (Contributed by Zachary Ware in [bpo-30450](https://bugs.python.org/issue?@action=redirect&bpo=30450).)
The [`ssl`](https://docs.python.org/3/library/ssl.html#module-ssl "ssl: TLS/SSL wrapper for socket objects") module requires OpenSSL 1.0.2 or 1.1 compatible libssl. OpenSSL 1.0.1 has reached end of lifetime on 2016-12-31 and is no longer supported. LibreSSL is temporarily not supported as well. LibreSSL releases up to version 2.6.4 are missing required OpenSSL 1.0.2 APIs.
## Optimizations[¶](https://docs.python.org/3/whatsnew/3.7.html#optimizations "Link to this heading")
The overhead of calling many methods of various standard library classes implemented in C has been significantly reduced by porting more code to use the `METH_FASTCALL` convention. (Contributed by Victor Stinner in [bpo-29300](https://bugs.python.org/issue?@action=redirect&bpo=29300), [bpo-29507](https://bugs.python.org/issue?@action=redirect&bpo=29507), [bpo-29452](https://bugs.python.org/issue?@action=redirect&bpo=29452), and [bpo-29286](https://bugs.python.org/issue?@action=redirect&bpo=29286).)
Various optimizations have reduced Python startup time by 10% on Linux and up to 30% on macOS. (Contributed by Victor Stinner, INADA Naoki in [bpo-29585](https://bugs.python.org/issue?@action=redirect&bpo=29585), and Ivan Levkivskyi in [bpo-31333](https://bugs.python.org/issue?@action=redirect&bpo=31333).)
Method calls are now up to 20% faster due to the bytecode changes which avoid creating bound method instances.