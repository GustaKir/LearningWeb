Title: DocTestRunner Reporting Methods
URL: https://docs.python.org/3/library/doctest.html
Summary: This section describes the `report_success` and `report_failure` methods of the `DocTestRunner` class in Python's doctest module. `report_success` reports successful test execution and is meant for subclass customization, while `report_failure` indicates a test failure. Both methods accept parameters such as the output function, test instance, example being processed, and the actual output.
---

report_success(_out_ , _test_ , _example_ , _got_)[¶](https://docs.python.org/3/library/doctest.html#doctest.DocTestRunner.report_success "Link to this definition")
    
Report that the given example ran successfully. This method is provided to allow subclasses of [`DocTestRunner`](https://docs.python.org/3/library/doctest.html#doctest.DocTestRunner "doctest.DocTestRunner") to customize their output; it should not be called directly.
_example_ is the example about to be processed. _got_ is the actual output from the example. _test_ is the test containing _example_. _out_ is the output function that was passed to [`DocTestRunner.run()`](https://docs.python.org/3/library/doctest.html#doctest.DocTestRunner.run "doctest.DocTestRunner.run"). 

report_failure(_out_ , _test_ , _example_ , _got_)[¶](https://docs.python.org/3/library/doctest.html#doctest.DocTestRunner.report_failure "Link to this definition")
    
Report that the given example failed. This method is provided to allow subclasses of [`DocTestRunner`](https://docs.python.org/3/library/doctest.html#doctest.DocTestRunner "doctest.DocTestRunner") to customize their output; it should not be called directly.
_example_ is the example about to be processed. _got_ is the actual output from the example. _test_ is the test containing _example_. _out_ is the output function that was passed to [`DocTestRunner.run()`](https://docs.python.org/3/library/doctest.html#doctest.DocTestRunner.run "doctest.DocTestRunner.run"). 

report_unexpected_exception(_out_ , _test_ , _example_ , _exc_info_)[¶](https://docs.python.org/3/library/doctest.html#doctest.DocTestRunner.report_unexpected_exception "Link to this definition")
    
Report that the given example raised an unexpected exception. This method is provided to allow subclasses of [`DocTestRunner`](https://docs.python.org/3/library/doctest.html#doctest.DocTestRunner "doctest.DocTestRunner") to customize their output; it should not be called directly.
_example_ is the example about to be processed. _exc_info_ is a tuple containing information about the unexpected exception (as returned by [`sys.exc_info()`](https://docs.python.org/3/library/sys.html#sys.exc_info "sys.exc_info")). _test_ is the test containing _example_. _out_ is the output function that was passed to [`DocTestRunner.run()`](https://docs.python.org/3/library/doctest.html#doctest.DocTestRunner.run "doctest.DocTestRunner.run"). 

run(_test_ , _compileflags =None_, _out =None_, _clear_globs =True_)[¶](https://docs.python.org/3/library/doctest.html#doctest.DocTestRunner.run "Link to this definition")
    
Run the examples in _test_ (a [`DocTest`](https://docs.python.org/3/library/doctest.html#doctest.DocTest "doctest.DocTest") object), and display the results using the writer function _out_. Return a [`TestResults`](https://docs.python.org/3/library/doctest.html#doctest.TestResults "doctest.TestResults") instance.
The examples are run in the namespace `test.globs`. If _clear_globs_ is true (the default), then this namespace will be cleared after the test runs, to help with garbage collection. If you would like to examine the namespace after the test completes, then use _clear_globs=False_.
_compileflags_ gives the set of flags that should be used by the Python compiler when running the examples. If not specified, then it will default to the set of future-import flags that apply to _globs_.
The output of each example is checked using the [`DocTestRunner`](https://docs.python.org/3/library/doctest.html#doctest.DocTestRunner "doctest.DocTestRunner")’s output checker, and the results are formatted by the `DocTestRunner.report_*()` methods. 

summarize(_verbose =None_)[¶](https://docs.python.org/3/library/doctest.html#doctest.DocTestRunner.summarize "Link to this definition")
    
Print a summary of all the test cases that have been run by this DocTestRunner, and return a [`TestResults`](https://docs.python.org/3/library/doctest.html#doctest.TestResults "doctest.TestResults") instance.
The optional _verbose_ argument controls how detailed the summary is. If the verbosity is not specified, then the [`DocTestRunner`](https://docs.python.org/3/library/doctest.html#doctest.DocTestRunner "doctest.DocTestRunner")’s verbosity is used.
[`DocTestParser`](https://docs.python.org/3/library/doctest.html#doctest.DocTestParser "doctest.DocTestParser") has the following attributes: 

tries[¶](https://docs.python.org/3/library/doctest.html#doctest.DocTestRunner.tries "Link to this definition")
    
Number of attempted examples. 

failures[¶](https://docs.python.org/3/library/doctest.html#doctest.DocTestRunner.failures "Link to this definition")
    
Number of failed examples. 

skips[¶](https://docs.python.org/3/library/doctest.html#doctest.DocTestRunner.skips "Link to this definition")
    
Number of skipped examples.
Added in version 3.13.
### OutputChecker objects[¶](https://docs.python.org/3/library/doctest.html#outputchecker-objects "Link to this heading")