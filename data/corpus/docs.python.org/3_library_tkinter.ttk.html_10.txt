Title: Treeview Widget Column and Virtual Events
URL: https://docs.python.org/3/library/tkinter.ttk.html
Summary: This section explains the distinction between data column numbers, which refer to an item's option values, and display column numbers for treeview display. It clarifies that column #0 is always reserved for tree labels. Additionally, it outlines three virtual events generated by the Treeview widget: <<TreeviewSelect>>, <<TreeviewOpen>>, and <<TreeviewClose>>, which are triggered on selection changes and item state changes.
---

A data column number is an index into an item’s option values list; a display column number is the column number in the tree where the values are displayed. Tree labels are displayed in column #0. If option displaycolumns is not set, then data column n is displayed in column #n+1. Again, **column #0 always refers to the tree column**.
### Virtual Events[¶](https://docs.python.org/3/library/tkinter.ttk.html#id8 "Link to this heading")
The Treeview widget generates the following virtual events.
Event | Description  
---|---  
<<TreeviewSelect>> | Generated whenever the selection changes.  
<<TreeviewOpen>> | Generated just before settings the focus item to open=True.  
<<TreeviewClose>> | Generated just after setting the focus item to open=False.  
The [`Treeview.focus()`](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Treeview.focus "tkinter.ttk.Treeview.focus") and [`Treeview.selection()`](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Treeview.selection "tkinter.ttk.Treeview.selection") methods can be used to determine the affected item or items.
### ttk.Treeview[¶](https://docs.python.org/3/library/tkinter.ttk.html#ttk-treeview "Link to this heading") 

_class_ tkinter.ttk.Treeview[¶](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Treeview "Link to this definition")
     

bbox(_item_ , _column =None_)[¶](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Treeview.bbox "Link to this definition")
    
Returns the bounding box (relative to the treeview widget’s window) of the specified _item_ in the form (x, y, width, height).
If _column_ is specified, returns the bounding box of that cell. If the _item_ is not visible (i.e., if it is a descendant of a closed item or is scrolled offscreen), returns an empty string. 

get_children(_item =None_)[¶](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Treeview.get_children "Link to this definition")
    
Returns the list of children belonging to _item_.
If _item_ is not specified, returns root children. 

set_children(_item_ , _* newchildren_)[¶](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Treeview.set_children "Link to this definition")
    
Replaces _item_ ’s child with _newchildren_.
Children present in _item_ that are not present in _newchildren_ are detached from the tree. No items in _newchildren_ may be an ancestor of _item_. Note that not specifying _newchildren_ results in detaching _item_ ’s children. 

column(_column_ , _option =None_, _** kw_)[¶](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Treeview.column "Link to this definition")
    
Query or modify the options for the specified _column_.
If _kw_ is not given, returns a dict of the column option values. If _option_ is specified then the value for that _option_ is returned. Otherwise, sets the options to the corresponding values.
The valid options/values are: 

_id_
    
Returns the column name. This is a read-only option. 

_anchor_ : One of the standard Tk anchor values.
    
Specifies how the text in this column should be aligned with respect to the cell. 

_minwidth_ : width
    
The minimum width of the column in pixels. The treeview widget will not make the column any smaller than specified by this option when the widget is resized or the user drags a column. 

_stretch_ : `True`/`False`
    
Specifies whether the column’s width should be adjusted when the widget is resized. 

_width_ : width
    
The width of the column in pixels.
To configure the tree column, call this with column = “#0” 

delete(_* items_)[¶](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Treeview.delete "Link to this definition")
    
Delete all specified _items_ and all their descendants.
The root item may not be deleted. 

detach(_* items_)[¶](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Treeview.detach "Link to this definition")
    
Unlinks all of the specified _items_ from the tree.
The items and all of their descendants are still present, and may be reinserted at another point in the tree, but will not be displayed.
The root item may not be detached. 

exists(_item_)[¶](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Treeview.exists "Link to this definition")
    
Returns `True` if the specified _item_ is present in the tree. 

focus(_item =None_)[¶](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Treeview.focus "Link to this definition")
    
If _item_ is specified, sets the focus item to _item_. Otherwise, returns the current focus item, or ‘’ if there is none.