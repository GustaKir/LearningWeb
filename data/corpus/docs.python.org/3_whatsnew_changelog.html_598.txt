Title: Python 3 ChangeLog Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This chunk discusses several bug fixes and improvements in Python 3, including changes to error handling for relative imports, enhancements in signal delivery, mutex locking behavior, syntax error message specificity, and resolution of a race condition in submodule imports.
---

the package instead of failing with SystemError. Relative import from non-package now fails with ImportError rather than SystemError.
  * [bpo-30703](https://bugs.python.org/issue?@action=redirect&bpo=30703): Improve signal delivery. Avoid using Py_AddPendingCall from signal handler, to avoid calling signal-unsafe functions. The tests I’m adding here fail without the rest of the patch, on Linux and OS X. This means our signal delivery logic had defects (some signals could be lost).
  * [bpo-30765](https://bugs.python.org/issue?@action=redirect&bpo=30765): Avoid blocking in pthread_mutex_lock() when PyThread_acquire_lock() is asked not to block.
  * [bpo-31161](https://bugs.python.org/issue?@action=redirect&bpo=31161): Make sure the ‘Missing parentheses’ syntax error message is only applied to SyntaxError, not to subclasses. Patch by Martijn Pieters.
  * [bpo-30814](https://bugs.python.org/issue?@action=redirect&bpo=30814): Fixed a race condition when import a submodule from a package.
  * [bpo-30736](https://bugs.python.org/issue?@action=redirect&bpo=30736): The internal unicodedata database has been upgraded to Unicode 10.0.
  * [bpo-30604](https://bugs.python.org/issue?@action=redirect&bpo=30604): Move co_extra_freefuncs from per-thread to per-interpreter to avoid crashes.
  * [bpo-30597](https://bugs.python.org/issue?@action=redirect&bpo=30597): `print` now shows expected input in custom error message when used as a Python 2 statement. Patch by Sanyam Khurana.
  * [bpo-30682](https://bugs.python.org/issue?@action=redirect&bpo=30682): Removed a too-strict assertion that failed for certain f-strings, such as eval(“f’\n’”) and eval(“f’\r’”).
  * [bpo-30501](https://bugs.python.org/issue?@action=redirect&bpo=30501): The compiler now produces more optimal code for complex condition expressions in the “if”, “while” and “assert” statement, the “if” expression, and generator expressions and comprehensions.
  * [bpo-28180](https://bugs.python.org/issue?@action=redirect&bpo=28180): Implement [**PEP 538**](https://peps.python.org/pep-0538/) (legacy C locale coercion). This means that when a suitable coercion target locale is available, both the core interpreter and locale-aware C extensions will assume the use of UTF-8 as the default text encoding, rather than ASCII.
  * [bpo-30486](https://bugs.python.org/issue?@action=redirect&bpo=30486): Allows setting cell values for __closure__. Patch by Lisa Roach.
  * [bpo-30537](https://bugs.python.org/issue?@action=redirect&bpo=30537): itertools.islice now accepts integer-like objects (having an __index__ method) as start, stop, and slice arguments
  * [bpo-25324](https://bugs.python.org/issue?@action=redirect&bpo=25324): Tokens needed for parsing in Python moved to C. `COMMENT`, `NL` and `ENCODING`. This way the tokens and tok_names in the token module don’t get changed when you import the tokenize module.
  * [bpo-29104](https://bugs.python.org/issue?@action=redirect&bpo=29104): Fixed parsing backslashes in f-strings.
  * [bpo-27945](https://bugs.python.org/issue?@action=redirect&bpo=27945): Fixed various segfaults with dict when input collections are mutated during searching, inserting or comparing. Based on patches by Duane Griffin and Tim Mitchell.
  * [bpo-25794](https://bugs.python.org/issue?@action=redirect&bpo=25794): Fixed type.__setattr__() and type.__delattr__() for non-interned attribute names. Based on patch by Eryk Sun.
  * [bpo-30039](https://bugs.python.org/issue?@action=redirect&bpo=30039): If a KeyboardInterrupt happens when the interpreter is in the middle of resuming a chain of nested ‘yield from’ or ‘await’ calls, it’s now correctly delivered to the innermost frame.
  * [bpo-28974](https://bugs.python.org/issue?@action=redirect&bpo=28974): `object.__format__(x, '')` is now equivalent to `str(x)` rather than `format(str(self), '')`.
  * [bpo-30024](https://bugs.python.org/issue?@action=redirect&bpo=30024): Circular imports involving absolute imports with binding a submodule to a name are now supported.
  * [bpo-12414](https://bugs.python.org/issue?@action=redirect&bpo=12414): sys.getsizeof() on a code object now returns the sizes which includes the code struct and sizes of objects which it references. Patch by Donghee Na.
  * [bpo-29839](https://bugs.python.org/issue?@action=redirect&bpo=29839): len() now raises ValueError rather than OverflowError if __len__() returned a large negative integer.
  * [bpo-11913](https://bugs.python.org/issue?@action=redirect&bpo=11913): README.rst is now included in the list of distutils standard READMEs and therefore included in source distributions.
  * [bpo-29914](https://bugs.python.org/issue?@action=redirect&bpo=29914): Fixed default implementations of __reduce__ and __reduce_ex__().