Title: File Position Adjustment Parameters in Python's os Module
URL: https://docs.python.org/3/library/os.html
Summary: The chunk outlines the parameters for the `lseek()` function and `seek()` method used to adjust the file position indicator. It details three constants: `SEEK_SET` (to adjust relative to the start of the file), `SEEK_CUR` (relative to the current position), and `SEEK_END` (relative to the end of the file), with corresponding values of 0, 1, and 2.
---

os.SEEK_END[¶](https://docs.python.org/3/library/os.html#os.SEEK_END "Link to this definition")
    
Parameters to the [`lseek()`](https://docs.python.org/3/library/os.html#os.lseek "os.lseek") function and the [`seek()`](https://docs.python.org/3/library/io.html#io.IOBase.seek "io.IOBase.seek") method on [file-like objects](https://docs.python.org/3/glossary.html#term-file-object), for whence to adjust the file position indicator. 

[`SEEK_SET`](https://docs.python.org/3/library/os.html#os.SEEK_SET "os.SEEK_SET")
    
Adjust the file position relative to the beginning of the file. 

[`SEEK_CUR`](https://docs.python.org/3/library/os.html#os.SEEK_CUR "os.SEEK_CUR")
    
Adjust the file position relative to the current file position. 

[`SEEK_END`](https://docs.python.org/3/library/os.html#os.SEEK_END "os.SEEK_END")
    
Adjust the file position relative to the end of the file.
Their values are 0, 1, and 2, respectively. 

os.SEEK_HOLE[¶](https://docs.python.org/3/library/os.html#os.SEEK_HOLE "Link to this definition")


os.SEEK_DATA[¶](https://docs.python.org/3/library/os.html#os.SEEK_DATA "Link to this definition")
    
Parameters to the [`lseek()`](https://docs.python.org/3/library/os.html#os.lseek "os.lseek") function and the [`seek()`](https://docs.python.org/3/library/io.html#io.IOBase.seek "io.IOBase.seek") method on [file-like objects](https://docs.python.org/3/glossary.html#term-file-object), for seeking file data and holes on sparsely allocated files. 

`SEEK_DATA`
    
Adjust the file offset to the next location containing data, relative to the seek position. 

`SEEK_HOLE`
    
Adjust the file offset to the next location containing a hole, relative to the seek position. A hole is defined as a sequence of zeros.
Note
These operations only make sense for filesystems that support them.
[Availability](https://docs.python.org/3/library/intro.html#availability): Linux >= 3.1, macOS, Unix
Added in version 3.3. 

os.open(_path_ , _flags_ , _mode =0o777_, _*_ , _dir_fd =None_)[¶](https://docs.python.org/3/library/os.html#os.open "Link to this definition")
    
Open the file _path_ and set various flags according to _flags_ and possibly its mode according to _mode_. When computing _mode_ , the current umask value is first masked out. Return the file descriptor for the newly opened file. The new file descriptor is [non-inheritable](https://docs.python.org/3/library/os.html#fd-inheritance).
For a description of the flag and mode values, see the C run-time documentation; flag constants (like [`O_RDONLY`](https://docs.python.org/3/library/os.html#os.O_RDONLY "os.O_RDONLY") and [`O_WRONLY`](https://docs.python.org/3/library/os.html#os.O_WRONLY "os.O_WRONLY")) are defined in the [`os`](https://docs.python.org/3/library/os.html#module-os "os: Miscellaneous operating system interfaces.") module. In particular, on Windows adding [`O_BINARY`](https://docs.python.org/3/library/os.html#os.O_BINARY "os.O_BINARY") is needed to open files in binary mode.
This function can support [paths relative to directory descriptors](https://docs.python.org/3/library/os.html#dir-fd) with the _dir_fd_ parameter.
Raises an [auditing event](https://docs.python.org/3/library/sys.html#auditing) `open` with arguments `path`, `mode`, `flags`.
Changed in version 3.4: The new file descriptor is now non-inheritable.
Note
This function is intended for low-level I/O. For normal usage, use the built-in function [`open()`](https://docs.python.org/3/library/functions.html#open "open"), which returns a [file object](https://docs.python.org/3/glossary.html#term-file-object) with `read()` and `write()` methods (and many more). To wrap a file descriptor in a file object, use [`fdopen()`](https://docs.python.org/3/library/os.html#os.fdopen "os.fdopen").
Changed in version 3.3: Added the _dir_fd_ parameter.
Changed in version 3.5: If the system call is interrupted and the signal handler does not raise an exception, the function now retries the system call instead of raising an [`InterruptedError`](https://docs.python.org/3/library/exceptions.html#InterruptedError "InterruptedError") exception (see [**PEP 475**](https://peps.python.org/pep-0475/) for the rationale).
Changed in version 3.6: Accepts a [path-like object](https://docs.python.org/3/glossary.html#term-path-like-object).
The following constants are options for the _flags_ parameter to the [`open()`](https://docs.python.org/3/library/os.html#os.open "os.open") function. They can be combined using the bitwise OR operator `|`. Some of them are not available on all platforms. For descriptions of their availability and use, consult the _[open(2)](https://manpages.debian.org/open\(2\))_ manual page on Unix or [the MSDN](https://msdn.microsoft.com/en-us/library/z0kc8e3z.aspx) on Windows. 

os.O_RDONLY[¶](https://docs.python.org/3/library/os.html#os.O_RDONLY "Link to this definition")


os.O_WRONLY[¶](https://docs.python.org/3/library/os.html#os.O_WRONLY "Link to this definition")