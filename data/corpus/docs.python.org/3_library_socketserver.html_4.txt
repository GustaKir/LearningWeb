Title: handle_request() Method in SocketServer
URL: https://docs.python.org/3/library/socketserver.html
Summary: The `handle_request()` method processes a single request by sequentially calling `get_request()`, `verify_request()`, and `process_request()`. If the `handle()` method defined by the user raises an exception, the server responds using the `handle_error()` method.
---

handle_request()[¶](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer.handle_request "Link to this definition")
    
Process a single request. This function calls the following methods in order: [`get_request()`](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer.get_request "socketserver.BaseServer.get_request"), [`verify_request()`](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer.verify_request "socketserver.BaseServer.verify_request"), and [`process_request()`](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer.process_request "socketserver.BaseServer.process_request"). If the user-provided [`handle()`](https://docs.python.org/3/library/socketserver.html#socketserver.BaseRequestHandler.handle "socketserver.BaseRequestHandler.handle") method of the handler class raises an exception, the server’s [`handle_error()`](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer.handle_error "socketserver.BaseServer.handle_error") method will be called. If no request is received within [`timeout`](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer.timeout "socketserver.BaseServer.timeout") seconds, [`handle_timeout()`](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer.handle_timeout "socketserver.BaseServer.handle_timeout") will be called and [`handle_request()`](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer.handle_request "socketserver.BaseServer.handle_request") will return. 

serve_forever(_poll_interval =0.5_)[¶](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer.serve_forever "Link to this definition")
    
Handle requests until an explicit [`shutdown()`](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer.shutdown "socketserver.BaseServer.shutdown") request. Poll for shutdown every _poll_interval_ seconds. Ignores the [`timeout`](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer.timeout "socketserver.BaseServer.timeout") attribute. It also calls [`service_actions()`](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer.service_actions "socketserver.BaseServer.service_actions"), which may be used by a subclass or mixin to provide actions specific to a given service. For example, the [`ForkingMixIn`](https://docs.python.org/3/library/socketserver.html#socketserver.ForkingMixIn "socketserver.ForkingMixIn") class uses [`service_actions()`](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer.service_actions "socketserver.BaseServer.service_actions") to clean up zombie child processes.
Changed in version 3.3: Added `service_actions` call to the `serve_forever` method. 

service_actions()[¶](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer.service_actions "Link to this definition")
    
This is called in the [`serve_forever()`](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer.serve_forever "socketserver.BaseServer.serve_forever") loop. This method can be overridden by subclasses or mixin classes to perform actions specific to a given service, such as cleanup actions.
Added in version 3.3. 

shutdown()[¶](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer.shutdown "Link to this definition")
    
Tell the [`serve_forever()`](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer.serve_forever "socketserver.BaseServer.serve_forever") loop to stop and wait until it does. [`shutdown()`](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer.shutdown "socketserver.BaseServer.shutdown") must be called while [`serve_forever()`](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer.serve_forever "socketserver.BaseServer.serve_forever") is running in a different thread otherwise it will deadlock. 

server_close()[¶](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer.server_close "Link to this definition")
    
Clean up the server. May be overridden. 

address_family[¶](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer.address_family "Link to this definition")
    
The family of protocols to which the server’s socket belongs. Common examples are [`socket.AF_INET`](https://docs.python.org/3/library/socket.html#socket.AF_INET "socket.AF_INET"), [`socket.AF_INET6`](https://docs.python.org/3/library/socket.html#socket.AF_INET6 "socket.AF_INET6"), and [`socket.AF_UNIX`](https://docs.python.org/3/library/socket.html#socket.AF_UNIX "socket.AF_UNIX"). Subclass the TCP or UDP server classes in this module with class attribute `address_family = AF_INET6` set if you want IPv6 server classes.