Title: socket.inet_ntop: Convert Packed IP Addresses
URL: https://docs.python.org/3/library/socket.html
Summary: The `socket.inet_ntop` function converts a packed IP address (bytes-like object) into its standard string representation, supporting both IPv4 (`AF_INET`) and IPv6 (`AF_INET6`) address families. This function is particularly useful for handling `in_addr` and `in6_addr` types returned by libraries or network protocols.
---

socket.inet_ntop(_address_family_ , _packed_ip_)[¶](https://docs.python.org/3/library/socket.html#socket.inet_ntop "Link to this definition")
    
Convert a packed IP address (a [bytes-like object](https://docs.python.org/3/glossary.html#term-bytes-like-object) of some number of bytes) to its standard, family-specific string representation (for example, `'7.10.0.5'` or `'5aef:2b::8'`). [`inet_ntop()`](https://docs.python.org/3/library/socket.html#socket.inet_ntop "socket.inet_ntop") is useful when a library or network protocol returns an object of type `in_addr` (similar to [`inet_ntoa()`](https://docs.python.org/3/library/socket.html#socket.inet_ntoa "socket.inet_ntoa")) or `in6_addr`.
Supported values for _address_family_ are currently [`AF_INET`](https://docs.python.org/3/library/socket.html#socket.AF_INET "socket.AF_INET") and [`AF_INET6`](https://docs.python.org/3/library/socket.html#socket.AF_INET6 "socket.AF_INET6"). If the bytes object _packed_ip_ is not the correct length for the specified address family, [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError "ValueError") will be raised. [`OSError`](https://docs.python.org/3/library/exceptions.html#OSError "OSError") is raised for errors from the call to [`inet_ntop()`](https://docs.python.org/3/library/socket.html#socket.inet_ntop "socket.inet_ntop").
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix, Windows.
Changed in version 3.4: Windows support added
Changed in version 3.5: Writable [bytes-like object](https://docs.python.org/3/glossary.html#term-bytes-like-object) is now accepted. 

socket.CMSG_LEN(_length_)[¶](https://docs.python.org/3/library/socket.html#socket.CMSG_LEN "Link to this definition")
    
Return the total length, without trailing padding, of an ancillary data item with associated data of the given _length_. This value can often be used as the buffer size for [`recvmsg()`](https://docs.python.org/3/library/socket.html#socket.socket.recvmsg "socket.socket.recvmsg") to receive a single item of ancillary data, but [**RFC 3542**](https://datatracker.ietf.org/doc/html/rfc3542.html) requires portable applications to use [`CMSG_SPACE()`](https://docs.python.org/3/library/socket.html#socket.CMSG_SPACE "socket.CMSG_SPACE") and thus include space for padding, even when the item will be the last in the buffer. Raises [`OverflowError`](https://docs.python.org/3/library/exceptions.html#OverflowError "OverflowError") if _length_ is outside the permissible range of values.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix, not WASI.
Most Unix platforms.
Added in version 3.3. 

socket.CMSG_SPACE(_length_)[¶](https://docs.python.org/3/library/socket.html#socket.CMSG_SPACE "Link to this definition")
    
Return the buffer size needed for [`recvmsg()`](https://docs.python.org/3/library/socket.html#socket.socket.recvmsg "socket.socket.recvmsg") to receive an ancillary data item with associated data of the given _length_ , along with any trailing padding. The buffer space needed to receive multiple items is the sum of the [`CMSG_SPACE()`](https://docs.python.org/3/library/socket.html#socket.CMSG_SPACE "socket.CMSG_SPACE") values for their associated data lengths. Raises [`OverflowError`](https://docs.python.org/3/library/exceptions.html#OverflowError "OverflowError") if _length_ is outside the permissible range of values.
Note that some systems might support ancillary data without providing this function. Also note that setting the buffer size using the results of this function may not precisely limit the amount of ancillary data that can be received, since additional data may be able to fit into the padding area.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix, not WASI.
most Unix platforms.
Added in version 3.3. 

socket.getdefaulttimeout()[¶](https://docs.python.org/3/library/socket.html#socket.getdefaulttimeout "Link to this definition")
    
Return the default timeout in seconds (float) for new socket objects. A value of `None` indicates that new socket objects have no timeout. When the socket module is first imported, the default is `None`. 

socket.setdefaulttimeout(_timeout_)[¶](https://docs.python.org/3/library/socket.html#socket.setdefaulttimeout "Link to this definition")
    
Set the default timeout in seconds (float) for new socket objects. When the socket module is first imported, the default is `None`. See [`settimeout()`](https://docs.python.org/3/library/socket.html#socket.socket.settimeout "socket.socket.settimeout") for possible values and their respective meanings.