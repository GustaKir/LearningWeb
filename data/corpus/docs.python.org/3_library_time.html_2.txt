Title: time.asctime() - Time Formatting
URL: https://docs.python.org/3/library/time.html
Summary: The `time.asctime()` function converts a tuple or `struct_time` into a string representing the local time in a specified format. If no argument is provided, it uses the current local time. It does not utilize locale information, and the day field is space padded if necessary.
---

time.asctime([_t_])[¶](https://docs.python.org/3/library/time.html#time.asctime "Link to this definition")
    
Convert a tuple or [`struct_time`](https://docs.python.org/3/library/time.html#time.struct_time "time.struct_time") representing a time as returned by [`gmtime()`](https://docs.python.org/3/library/time.html#time.gmtime "time.gmtime") or [`localtime()`](https://docs.python.org/3/library/time.html#time.localtime "time.localtime") to a string of the following form: `'Sun Jun 20 23:21:05 1993'`. The day field is two characters long and is space padded if the day is a single digit, e.g.: `'Wed Jun  9 04:26:40 1993'`.
If _t_ is not provided, the current time as returned by [`localtime()`](https://docs.python.org/3/library/time.html#time.localtime "time.localtime") is used. Locale information is not used by [`asctime()`](https://docs.python.org/3/library/time.html#time.asctime "time.asctime").
Note
Unlike the C function of the same name, [`asctime()`](https://docs.python.org/3/library/time.html#time.asctime "time.asctime") does not add a trailing newline. 

time.pthread_getcpuclockid(_thread_id_)[¶](https://docs.python.org/3/library/time.html#time.pthread_getcpuclockid "Link to this definition")
    
Return the _clk_id_ of the thread-specific CPU-time clock for the specified _thread_id_.
Use [`threading.get_ident()`](https://docs.python.org/3/library/threading.html#threading.get_ident "threading.get_ident") or the [`ident`](https://docs.python.org/3/library/threading.html#threading.Thread.ident "threading.Thread.ident") attribute of [`threading.Thread`](https://docs.python.org/3/library/threading.html#threading.Thread "threading.Thread") objects to get a suitable value for _thread_id_.
Warning
Passing an invalid or expired _thread_id_ may result in undefined behavior, such as segmentation fault.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix
See the man page for _[pthread_getcpuclockid(3)](https://manpages.debian.org/pthread_getcpuclockid\(3\))_ for further information.
Added in version 3.7. 

time.clock_getres(_clk_id_)[¶](https://docs.python.org/3/library/time.html#time.clock_getres "Link to this definition")
    
Return the resolution (precision) of the specified clock _clk_id_. Refer to [Clock ID Constants](https://docs.python.org/3/library/time.html#time-clock-id-constants) for a list of accepted values for _clk_id_.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix.
Added in version 3.3. 

time.clock_gettime(_clk_id_) → [float](https://docs.python.org/3/library/functions.html#float "float")[¶](https://docs.python.org/3/library/time.html#time.clock_gettime "Link to this definition")
    
Return the time of the specified clock _clk_id_. Refer to [Clock ID Constants](https://docs.python.org/3/library/time.html#time-clock-id-constants) for a list of accepted values for _clk_id_.
Use [`clock_gettime_ns()`](https://docs.python.org/3/library/time.html#time.clock_gettime_ns "time.clock_gettime_ns") to avoid the precision loss caused by the [`float`](https://docs.python.org/3/library/functions.html#float "float") type.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix.
Added in version 3.3. 

time.clock_gettime_ns(_clk_id_) → [int](https://docs.python.org/3/library/functions.html#int "int")[¶](https://docs.python.org/3/library/time.html#time.clock_gettime_ns "Link to this definition")
    
Similar to [`clock_gettime()`](https://docs.python.org/3/library/time.html#time.clock_gettime "time.clock_gettime") but return time as nanoseconds.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix.
Added in version 3.7. 

time.clock_settime(_clk_id_ , _time :[float](https://docs.python.org/3/library/functions.html#float "float")_)[¶](https://docs.python.org/3/library/time.html#time.clock_settime "Link to this definition")
    
Set the time of the specified clock _clk_id_. Currently, [`CLOCK_REALTIME`](https://docs.python.org/3/library/time.html#time.CLOCK_REALTIME "time.CLOCK_REALTIME") is the only accepted value for _clk_id_.
Use [`clock_settime_ns()`](https://docs.python.org/3/library/time.html#time.clock_settime_ns "time.clock_settime_ns") to avoid the precision loss caused by the [`float`](https://docs.python.org/3/library/functions.html#float "float") type.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix, not Android, not iOS.
Added in version 3.3. 

time.clock_settime_ns(_clk_id_ , _time :[int](https://docs.python.org/3/library/functions.html#int "int")_)[¶](https://docs.python.org/3/library/time.html#time.clock_settime_ns "Link to this definition")
    
Similar to [`clock_settime()`](https://docs.python.org/3/library/time.html#time.clock_settime "time.clock_settime") but set time with nanoseconds.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix, not Android, not iOS.
Added in version 3.7.