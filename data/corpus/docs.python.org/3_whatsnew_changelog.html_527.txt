Title: Python Changelog Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section of the Python changelog outlines various bug fixes and improvements, including the premature call to `_untrack_reader`, enhancements in ElementTree and minidom for attribute order preservation, documentation improvements in difflib, and the deprecation of `l*gettext()` functions in the `gettext` module due to their outdated handling of string types.
---

The call to `_untrack_reader` is currently performed too soon, causing the protocol to forget about the reader before `connection_lost` can run and feed the EOF to the reader.
  * [bpo-34160](https://bugs.python.org/issue?@action=redirect&bpo=34160): ElementTree and minidom now preserve the attribute order specified by the user.
  * [bpo-35079](https://bugs.python.org/issue?@action=redirect&bpo=35079): Improve difflib.SequenceManager.get_matching_blocks doc by adding ‘non-overlapping’ and changing ‘!=’ to ‘<’.
  * [bpo-33710](https://bugs.python.org/issue?@action=redirect&bpo=33710): Deprecated `l*gettext()` functions and methods in the [`gettext`](https://docs.python.org/3/library/gettext.html#module-gettext "gettext: Multilingual internationalization services.") module. They return encoded bytes instead of Unicode strings and are artifacts from Python 2 times. Also deprecated functions and methods related to setting the charset for `l*gettext()` functions and methods.
  * [bpo-35017](https://bugs.python.org/issue?@action=redirect&bpo=35017): [`socketserver.BaseServer.serve_forever()`](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer.serve_forever "socketserver.BaseServer.serve_forever") now exits immediately if it’s [`shutdown()`](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer.shutdown "socketserver.BaseServer.shutdown") method is called while it is polling for new events.
  * [bpo-35024](https://bugs.python.org/issue?@action=redirect&bpo=35024): `importlib` no longer logs `wrote <bytecode path>` redundantly after `(created|could not create) <bytecode path>` is already logged. Patch by Quentin Agren.
  * [bpo-35047](https://bugs.python.org/issue?@action=redirect&bpo=35047): `unittest.mock` now includes mock calls in exception messages if `assert_not_called`, `assert_called_once`, or `assert_called_once_with` fails. Patch by Petter Strandmark.
  * [bpo-31047](https://bugs.python.org/issue?@action=redirect&bpo=31047): Fix `ntpath.abspath` regression where it didn’t remove a trailing separator on Windows. Patch by Tim Graham.
  * [bpo-35053](https://bugs.python.org/issue?@action=redirect&bpo=35053): tracemalloc now tries to update the traceback when an object is reused from a “free list” (optimization for faster object creation, used by the builtin list type for example).
  * [bpo-31553](https://bugs.python.org/issue?@action=redirect&bpo=31553): Add the –json-lines option to json.tool. Patch by hongweipeng.
  * [bpo-34794](https://bugs.python.org/issue?@action=redirect&bpo=34794): Fixed a leak in Tkinter when pass the Python wrapper around Tcl_Obj back to Tcl/Tk.
  * [bpo-34909](https://bugs.python.org/issue?@action=redirect&bpo=34909): Enum: fix grandchildren subclassing when parent mixed with concrete data types.
  * [bpo-35022](https://bugs.python.org/issue?@action=redirect&bpo=35022): [`unittest.mock.MagicMock`](https://docs.python.org/3/library/unittest.mock.html#unittest.mock.MagicMock "unittest.mock.MagicMock") now supports the `__fspath__` method (from [`os.PathLike`](https://docs.python.org/3/library/os.html#os.PathLike "os.PathLike")).
  * [bpo-35008](https://bugs.python.org/issue?@action=redirect&bpo=35008): Fixed references leaks when call the `__setstate__()` method of [`xml.etree.ElementTree.Element`](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element "xml.etree.ElementTree.Element") in the C implementation for already initialized element.
  * [bpo-23420](https://bugs.python.org/issue?@action=redirect&bpo=23420): Verify the value for the parameter ‘-s’ of the cProfile CLI. Patch by Robert Kuska
  * [bpo-33947](https://bugs.python.org/issue?@action=redirect&bpo=33947): dataclasses now handle recursive reprs without raising RecursionError.
  * [bpo-34890](https://bugs.python.org/issue?@action=redirect&bpo=34890): Make [`inspect.iscoroutinefunction()`](https://docs.python.org/3/library/inspect.html#inspect.iscoroutinefunction "inspect.iscoroutinefunction"), [`inspect.isgeneratorfunction()`](https://docs.python.org/3/library/inspect.html#inspect.isgeneratorfunction "inspect.isgeneratorfunction") and [`inspect.isasyncgenfunction()`](https://docs.python.org/3/library/inspect.html#inspect.isasyncgenfunction "inspect.isasyncgenfunction") work with [`functools.partial()`](https://docs.python.org/3/library/functools.html#functools.partial "functools.partial").