Title: Python 3.12 New Features Overview
URL: https://docs.python.org/3/whatsnew/3.12.html
Summary: Python 3.12 introduces deprecations in the `tarfile` module, with a shift in default extraction filters expected by Python 3.14. Furthermore, updates in the `typing` module include aliases for `collections.abc.Hashable` and `collections.abc.Sized` to enhance type hint support.
---

(Contributed by Irit Katriel in [gh-102778](https://github.com/python/cpython/issues/102778).)
  * [`tarfile`](https://docs.python.org/3/library/tarfile.html#module-tarfile "tarfile: Read and write tar-format archive files."): Extracting tar archives without specifying _filter_ is deprecated until Python 3.14, when `'data'` filter will become the default. See [Extraction filters](https://docs.python.org/3/library/tarfile.html#tarfile-extraction-filter) for details.
  * [`typing`](https://docs.python.org/3/library/typing.html#module-typing "typing: Support for type hints \(see :pep:`484`\)."):
    * [`typing.Hashable`](https://docs.python.org/3/library/typing.html#typing.Hashable "typing.Hashable") and [`typing.Sized`](https://docs.python.org/3/library/typing.html#typing.Sized "typing.Sized"), aliases for [`collections.abc.Hashable`](https://docs.python.org/3/library/collections.abc.html#collections.abc.Hashable "collections.abc.Hashable") and [`collections.abc.Sized`](https://docs.python.org/3/library/collections.abc.html#collections.abc.Sized "collections.abc.Sized") respectively, are deprecated. ([gh-94309](https://github.com/python/cpython/issues/94309).)
    * [`typing.ByteString`](https://docs.python.org/3/library/typing.html#typing.ByteString "typing.ByteString"), deprecated since Python 3.9, now causes a [`DeprecationWarning`](https://docs.python.org/3/library/exceptions.html#DeprecationWarning "DeprecationWarning") to be emitted when it is used. (Contributed by Alex Waygood in [gh-91896](https://github.com/python/cpython/issues/91896).)
  * [`xml.etree.ElementTree`](https://docs.python.org/3/library/xml.etree.elementtree.html#module-xml.etree.ElementTree "xml.etree.ElementTree: Implementation of the ElementTree API."): The module now emits [`DeprecationWarning`](https://docs.python.org/3/library/exceptions.html#DeprecationWarning "DeprecationWarning") when testing the truth value of an [`xml.etree.ElementTree.Element`](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element "xml.etree.ElementTree.Element"). Before, the Python implementation emitted [`FutureWarning`](https://docs.python.org/3/library/exceptions.html#FutureWarning "FutureWarning"), and the C implementation emitted nothing. (Contributed by Jacob Walls in [gh-83122](https://github.com/python/cpython/issues/83122).)
  * The 3-arg signatures (type, value, traceback) of [`coroutine throw()`](https://docs.python.org/3/reference/datamodel.html#coroutine.throw "coroutine.throw"), [`generator throw()`](https://docs.python.org/3/reference/expressions.html#generator.throw "generator.throw") and [`async generator throw()`](https://docs.python.org/3/reference/expressions.html#agen.athrow "agen.athrow") are deprecated and may be removed in a future version of Python. Use the single-arg versions of these functions instead. (Contributed by Ofey Chan in [gh-89874](https://github.com/python/cpython/issues/89874).)
  * [`DeprecationWarning`](https://docs.python.org/3/library/exceptions.html#DeprecationWarning "DeprecationWarning") is now raised when [`__package__`](https://docs.python.org/3/reference/datamodel.html#module.__package__ "module.__package__") on a module differs from [`__spec__.parent`](https://docs.python.org/3/library/importlib.html#importlib.machinery.ModuleSpec.parent "importlib.machinery.ModuleSpec.parent") (previously it was [`ImportWarning`](https://docs.python.org/3/library/exceptions.html#ImportWarning "ImportWarning")). (Contributed by Brett Cannon in [gh-65961](https://github.com/python/cpython/issues/65961).)
  * Setting [`__package__`](https://docs.python.org/3/reference/datamodel.html#module.__package__ "module.__package__") or [`__cached__`](https://docs.python.org/3/reference/datamodel.html#module.__cached__ "module.__cached__") on a module is deprecated, and will cease to be set or taken into consideration by the import system in Python 3.14. (Contributed by Brett Cannon in [gh-65961](https://github.com/python/cpython/issues/65961).)
  * The bitwise inversion operator (`~`) on bool is deprecated. It will throw an error in Python 3.16. Use `not` for logical negation of bools instead. In the rare case that you really need the bitwise inversion of the underlying `int`, convert to int explicitly: `~int(x)`. (Contributed by Tim Hoffmann in [gh-103487](https://github.com/python/cpython/issues/103487).)
  * Accessing [`co_lnotab`](https://docs.python.org/3/reference/datamodel.html#codeobject.co_lnotab "codeobject.co_lnotab") on code objects was deprecated in Python 3.10 via [**PEP 626**](https://peps.python.org/pep-0626/), but it only got a proper [`DeprecationWarning`](https://docs.python.org/3/library/exceptions.html#DeprecationWarning "DeprecationWarning") in 3.12. May be removed in 3.15. (Contributed by Nikita Sobolev in [gh-101866](https://github.com/python/cpython/issues/101866).)