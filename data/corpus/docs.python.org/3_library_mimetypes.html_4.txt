Title: MIME Types Library Documentation - Read and Load Functions
URL: https://docs.python.org/3/library/mimetypes.html
Summary: This section describes functions for loading MIME type information from files and the Windows registry. The `read()` function loads data from a specified file, while `readfp()` loads from an open file object. Both functions allow for strict mode to differentiate between standard and non-standard MIME types.
---

read(_filename_ , _strict =True_)[¶](https://docs.python.org/3/library/mimetypes.html#mimetypes.MimeTypes.read "Link to this definition")
    
Load MIME information from a file named _filename_. This uses [`readfp()`](https://docs.python.org/3/library/mimetypes.html#mimetypes.MimeTypes.readfp "mimetypes.MimeTypes.readfp") to parse the file.
If _strict_ is `True`, information will be added to list of standard types, else to the list of non-standard types. 

readfp(_fp_ , _strict =True_)[¶](https://docs.python.org/3/library/mimetypes.html#mimetypes.MimeTypes.readfp "Link to this definition")
    
Load MIME type information from an open file _fp_. The file must have the format of the standard `mime.types` files.
If _strict_ is `True`, information will be added to the list of standard types, else to the list of non-standard types. 

read_windows_registry(_strict =True_)[¶](https://docs.python.org/3/library/mimetypes.html#mimetypes.MimeTypes.read_windows_registry "Link to this definition")
    
Load MIME type information from the Windows registry.
[Availability](https://docs.python.org/3/library/intro.html#availability): Windows.
If _strict_ is `True`, information will be added to the list of standard types, else to the list of non-standard types.
Added in version 3.2. 

add_type(_type_ , _ext_ , _strict =True_)[¶](https://docs.python.org/3/library/mimetypes.html#mimetypes.MimeTypes.add_type "Link to this definition")
    
Add a mapping from the MIME type _type_ to the extension _ext_. When the extension is already known, the new type will replace the old one. When the type is already known the extension will be added to the list of known extensions.
When _strict_ is `True` (the default), the mapping will be added to the official MIME types, otherwise to the non-standard ones.
### [Table of Contents](https://docs.python.org/3/contents.html)
  * [`mimetypes` — Map filenames to MIME types](https://docs.python.org/3/library/mimetypes.html)
    * [MimeTypes Objects](https://docs.python.org/3/library/mimetypes.html#mimetypes-objects)


#### Previous topic
[`mailbox` — Manipulate mailboxes in various formats](https://docs.python.org/3/library/mailbox.html "previous chapter")
#### Next topic
[`base64` — Base16, Base32, Base64, Base85 Data Encodings](https://docs.python.org/3/library/base64.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/mimetypes.rst)


«
### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/library/base64.html "base64 — Base16, Base32, Base64, Base85 Data Encodings") |
  * [previous](https://docs.python.org/3/library/mailbox.html "mailbox — Manipulate mailboxes in various formats") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [The Python Standard Library](https://docs.python.org/3/library/index.html) »
  * [Internet Data Handling](https://docs.python.org/3/library/netdata.html) »
  * [`mimetypes` — Map filenames to MIME types](https://docs.python.org/3/library/mimetypes.html)
  * | 
  * Theme  Auto Light Dark |


© [ Copyright ](https://docs.python.org/3/copyright.html) 2001-2025, Python Software Foundation. This page is licensed under the Python Software Foundation License Version 2. Examples, recipes, and other code in the documentation are additionally licensed under the Zero Clause BSD License. See [History and License](https://docs.python.org/license.html) for more information. The Python Software Foundation is a non-profit corporation. [Please donate.](https://www.python.org/psf/donations/) Last updated on Apr 27, 2025 (05:38 UTC). [Found a bug](https://docs.python.org/bugs.html)? Created using [Sphinx](https://www.sphinx-doc.org/) 8.2.3. 
  *[*]: Keyword-only parameters separator (PEP 3102)