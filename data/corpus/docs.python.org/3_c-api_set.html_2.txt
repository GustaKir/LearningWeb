Title: Creating a New Frozenset
URL: https://docs.python.org/3/c-api/set.html
Summary: The `PyFrozenSet_New` function returns a new frozenset containing objects from the provided iterable. If the iterable is NULL, an empty frozenset is created. The function returns NULL on failure and raises a TypeError if the iterable is not truly iterable.
---

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyFrozenSet_New([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*iterable)[¶](https://docs.python.org/3/c-api/set.html#c.PyFrozenSet_New "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Return a new [`frozenset`](https://docs.python.org/3/library/stdtypes.html#frozenset "frozenset") containing objects returned by the _iterable_. The _iterable_ may be `NULL` to create a new empty frozenset. Return the new set on success or `NULL` on failure. Raise [`TypeError`](https://docs.python.org/3/library/exceptions.html#TypeError "TypeError") if _iterable_ is not actually iterable.
The following functions and macros are available for instances of [`set`](https://docs.python.org/3/library/stdtypes.html#set "set") or [`frozenset`](https://docs.python.org/3/library/stdtypes.html#frozenset "frozenset") or instances of their subtypes. 

[Py_ssize_t](https://docs.python.org/3/c-api/intro.html#c.Py_ssize_t "Py_ssize_t")PySet_Size([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*anyset)[¶](https://docs.python.org/3/c-api/set.html#c.PySet_Size "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Return the length of a [`set`](https://docs.python.org/3/library/stdtypes.html#set "set") or [`frozenset`](https://docs.python.org/3/library/stdtypes.html#frozenset "frozenset") object. Equivalent to `len(anyset)`. Raises a [`SystemError`](https://docs.python.org/3/library/exceptions.html#SystemError "SystemError") if _anyset_ is not a [`set`](https://docs.python.org/3/library/stdtypes.html#set "set"), [`frozenset`](https://docs.python.org/3/library/stdtypes.html#frozenset "frozenset"), or an instance of a subtype. 

[Py_ssize_t](https://docs.python.org/3/c-api/intro.html#c.Py_ssize_t "Py_ssize_t")PySet_GET_SIZE([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*anyset)[¶](https://docs.python.org/3/c-api/set.html#c.PySet_GET_SIZE "Link to this definition")
    
Macro form of [`PySet_Size()`](https://docs.python.org/3/c-api/set.html#c.PySet_Size "PySet_Size") without error checking. 

intPySet_Contains([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*anyset, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*key)[¶](https://docs.python.org/3/c-api/set.html#c.PySet_Contains "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Return `1` if found, `0` if not found, and `-1` if an error is encountered. Unlike the Python [`__contains__()`](https://docs.python.org/3/reference/datamodel.html#object.__contains__ "object.__contains__") method, this function does not automatically convert unhashable sets into temporary frozensets. Raise a [`TypeError`](https://docs.python.org/3/library/exceptions.html#TypeError "TypeError") if the _key_ is unhashable. Raise [`SystemError`](https://docs.python.org/3/library/exceptions.html#SystemError "SystemError") if _anyset_ is not a [`set`](https://docs.python.org/3/library/stdtypes.html#set "set"), [`frozenset`](https://docs.python.org/3/library/stdtypes.html#frozenset "frozenset"), or an instance of a subtype. 

intPySet_Add([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*set, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*key)[¶](https://docs.python.org/3/c-api/set.html#c.PySet_Add "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Add _key_ to a [`set`](https://docs.python.org/3/library/stdtypes.html#set "set") instance. Also works with [`frozenset`](https://docs.python.org/3/library/stdtypes.html#frozenset "frozenset") instances (like [`PyTuple_SetItem()`](https://docs.python.org/3/c-api/tuple.html#c.PyTuple_SetItem "PyTuple_SetItem") it can be used to fill in the values of brand new frozensets before they are exposed to other code). Return `0` on success or `-1` on failure. Raise a [`TypeError`](https://docs.python.org/3/library/exceptions.html#TypeError "TypeError") if the _key_ is unhashable. Raise a [`MemoryError`](https://docs.python.org/3/library/exceptions.html#MemoryError "MemoryError") if there is no room to grow. Raise a [`SystemError`](https://docs.python.org/3/library/exceptions.html#SystemError "SystemError") if _set_ is not an instance of [`set`](https://docs.python.org/3/library/stdtypes.html#set "set") or its subtype.
The following functions are available for instances of [`set`](https://docs.python.org/3/library/stdtypes.html#set "set") or its subtypes but not for instances of [`frozenset`](https://docs.python.org/3/library/stdtypes.html#frozenset "frozenset") or its subtypes.