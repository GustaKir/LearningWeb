Title: Annotation Scopes and Exception Propagation in Python
URL: https://docs.python.org/3/reference/compound_stmts.html
Summary: This section discusses annotation scopes in Python functions, clarifying that certain capitalized names are not bound at runtime. It also explains exception propagation in relation to the `finally` clause, stating that a new exception can cause the previous one to be lost. Additionally, it defines sequences in the context of pattern matching.
---

```

Here, `annotation-def` (not a real keyword) indicates an [annotation scope](https://docs.python.org/3/reference/executionmodel.html#annotation-scopes). The capitalized names like `TYPE_PARAMS_OF_ListOrSet` are not actually bound at runtime.
Footnotes
[[1](https://docs.python.org/3/reference/compound_stmts.html#id1)]
The exception is propagated to the invocation stack unless there is a [`finally`](https://docs.python.org/3/reference/compound_stmts.html#finally) clause which happens to raise another exception. That new exception causes the old one to be lost.
[[2](https://docs.python.org/3/reference/compound_stmts.html#id11)]
In pattern matching, a sequence is defined as one of the following:
  * a class that inherits from [`collections.abc.Sequence`](https://docs.python.org/3/library/collections.abc.html#collections.abc.Sequence "collections.abc.Sequence")
  * a Python class that has been registered as [`collections.abc.Sequence`](https://docs.python.org/3/library/collections.abc.html#collections.abc.Sequence "collections.abc.Sequence")
  * a builtin class that has its (CPython) [`Py_TPFLAGS_SEQUENCE`](https://docs.python.org/3/c-api/typeobj.html#c.Py_TPFLAGS_SEQUENCE "Py_TPFLAGS_SEQUENCE") bit set
  * a class that inherits from any of the above


The following standard library classes are sequences:
  * [`array.array`](https://docs.python.org/3/library/array.html#array.array "array.array")
  * [`collections.deque`](https://docs.python.org/3/library/collections.html#collections.deque "collections.deque")
  * [`list`](https://docs.python.org/3/library/stdtypes.html#list "list")
  * [`memoryview`](https://docs.python.org/3/library/stdtypes.html#memoryview "memoryview")
  * [`range`](https://docs.python.org/3/library/stdtypes.html#range "range")
  * [`tuple`](https://docs.python.org/3/library/stdtypes.html#tuple "tuple")


Note
Subject values of type `str`, `bytes`, and `bytearray` do not match sequence patterns.
[[3](https://docs.python.org/3/reference/compound_stmts.html#id13)]
In pattern matching, a mapping is defined as one of the following:
  * a class that inherits from [`collections.abc.Mapping`](https://docs.python.org/3/library/collections.abc.html#collections.abc.Mapping "collections.abc.Mapping")
  * a Python class that has been registered as [`collections.abc.Mapping`](https://docs.python.org/3/library/collections.abc.html#collections.abc.Mapping "collections.abc.Mapping")
  * a builtin class that has its (CPython) [`Py_TPFLAGS_MAPPING`](https://docs.python.org/3/c-api/typeobj.html#c.Py_TPFLAGS_MAPPING "Py_TPFLAGS_MAPPING") bit set
  * a class that inherits from any of the above