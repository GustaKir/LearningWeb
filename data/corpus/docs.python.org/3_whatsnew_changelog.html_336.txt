Title: Python Changelog Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This document details several patch updates, including the preference of f-strings over .format in importlib.resources and importlib.metadata. It also mentions the incorporation of minor tweaks from importlib_metadata 4.1, the removal of the deprecated @asyncio.coroutine decorator, and changes linked to legacy coroutine support.
---

Patch by Donghee Na.
  * [bpo-38693](https://bugs.python.org/issue?@action=redirect&bpo=38693): Prefer f-strings to `.format` in importlib.resources.
  * [bpo-33693](https://bugs.python.org/issue?@action=redirect&bpo=33693): Importlib.metadata now prefers f-strings to .format.
  * [bpo-44241](https://bugs.python.org/issue?@action=redirect&bpo=44241): Incorporate minor tweaks from importlib_metadata 4.1: SimplePath protocol, support for Metadata 2.2.
  * [bpo-43216](https://bugs.python.org/issue?@action=redirect&bpo=43216): Remove the `@asyncio.coroutine` [decorator](https://docs.python.org/3/glossary.html#term-decorator) enabling legacy generator-based coroutines to be compatible with async/await code; remove `asyncio.coroutines.CoroWrapper` used for wrapping legacy coroutine objects in the debug mode. The decorator has been deprecated since Python 3.8 and the removal was initially scheduled for Python 3.10. Patch by Illia Volochii.
  * [bpo-44210](https://bugs.python.org/issue?@action=redirect&bpo=44210): Make importlib.metadata._meta.PackageMetadata public.
  * [bpo-43643](https://bugs.python.org/issue?@action=redirect&bpo=43643): Declare readers.MultiplexedPath.name as a property per the spec.
  * [bpo-27334](https://bugs.python.org/issue?@action=redirect&bpo=27334): The [`sqlite3`](https://docs.python.org/3/library/sqlite3.html#module-sqlite3 "sqlite3: A DB-API 2.0 implementation using SQLite 3.x.") context manager now performs a rollback (thus releasing the database lock) if commit failed. Patch by Luca Citi and Erlend E. Aasland.
  * [bpo-4928](https://bugs.python.org/issue?@action=redirect&bpo=4928): Documented existing behavior on POSIX: NamedTemporaryFiles are not deleted when creating process is killed with SIGKILL
  * [bpo-44154](https://bugs.python.org/issue?@action=redirect&bpo=44154): Optimize [`fractions.Fraction`](https://docs.python.org/3/library/fractions.html#fractions.Fraction "fractions.Fraction") pickling for large components.
  * [bpo-33433](https://bugs.python.org/issue?@action=redirect&bpo=33433): For IPv4 mapped IPv6 addresses ([**RFC 4291**](https://datatracker.ietf.org/doc/html/rfc4291.html) Section 2.5.5.2), the [`ipaddress.IPv6Address.is_private`](https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv6Address.is_private "ipaddress.IPv6Address.is_private") check is deferred to the mapped IPv4 address. This solves a bug where public mapped IPv4 addresses were considered private by the IPv6 check.
  * [bpo-44150](https://bugs.python.org/issue?@action=redirect&bpo=44150): Add optional _weights_ argument to statistics.fmean().
  * [bpo-44142](https://bugs.python.org/issue?@action=redirect&bpo=44142): [`ast.unparse()`](https://docs.python.org/3/library/ast.html#ast.unparse "ast.unparse") will now drop the redundant parentheses when tuples used as assignment targets (e.g in for loops).
  * [bpo-44145](https://bugs.python.org/issue?@action=redirect&bpo=44145): [`hmac`](https://docs.python.org/3/library/hmac.html#module-hmac "hmac: Keyed-Hashing for Message Authentication \(HMAC\) implementation") computations were not releasing the GIL while calling the OpenSSL `HMAC_Update` C API (a new feature in 3.9). This unintentionally prevented parallel computation as other [`hashlib`](https://docs.python.org/3/library/hashlib.html#module-hashlib "hashlib: Secure hash and message digest algorithms.") algorithms support.
  * [bpo-44095](https://bugs.python.org/issue?@action=redirect&bpo=44095): [`zipfile.Path`](https://docs.python.org/3/library/zipfile.html#zipfile.Path "zipfile.Path") now supports [`zipfile.Path.stem`](https://docs.python.org/3/library/zipfile.html#zipfile.Path.stem "zipfile.Path.stem"), [`zipfile.Path.suffixes`](https://docs.python.org/3/library/zipfile.html#zipfile.Path.suffixes "zipfile.Path.suffixes"), and [`zipfile.Path.suffix`](https://docs.python.org/3/library/zipfile.html#zipfile.Path.suffix "zipfile.Path.suffix") attributes.
  * [bpo-44077](https://bugs.python.org/issue?@action=redirect&bpo=44077): Itâ€™s now possible to receive the type of service (ToS), a.k.a. differentiated services (DS), a.k.a. differentiated services code point (DSCP) and explicit congestion notification (ECN) IP header fields with `socket.IP_RECVTOS`.
  * [bpo-37788](https://bugs.python.org/issue?@action=redirect&bpo=37788): Fix a reference leak when a Thread object is never joined.
  * [bpo-38908](https://bugs.python.org/issue?@action=redirect&bpo=38908): Subclasses of `typing.Protocol` which only have data variables declared will now raise a `TypeError` when checked with `isinstance` unless they are decorated with `runtime_checkable()`. Previously, these checks passed silently.