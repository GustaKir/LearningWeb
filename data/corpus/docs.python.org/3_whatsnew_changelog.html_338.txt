Title: Python 3 Changelog - Recent Fixes and Improvements
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section outlines several recent patches, including a fix for `MemoryError` in `shutil.unpack_archive()` on large files, an enhancement to `zlib.compress()` allowing for a raw deflate block compression, and an update to `importlib._bootstrap._find_and_load()` to improve its loading mechanism.
---

Patch by M Felt.
  * [bpo-43650](https://bugs.python.org/issue?@action=redirect&bpo=43650): Fix [`MemoryError`](https://docs.python.org/3/library/exceptions.html#MemoryError "MemoryError") in [`shutil.unpack_archive()`](https://docs.python.org/3/library/shutil.html#shutil.unpack_archive "shutil.unpack_archive") which fails inside `shutil._unpack_zipfile()` on large files. Patch by Igor Bolshakov.
  * [bpo-43612](https://bugs.python.org/issue?@action=redirect&bpo=43612): [`zlib.compress()`](https://docs.python.org/3/library/zlib.html#zlib.compress "zlib.compress") now accepts a wbits parameter which allows users to compress data as a raw deflate block without zlib headers and trailers in one go. Previously this required instantiating a `zlib.compressobj`. It also provides a faster alternative to `gzip.compress` when wbits=31 is used.
  * [bpo-43392](https://bugs.python.org/issue?@action=redirect&bpo=43392): `importlib._bootstrap._find_and_load()` now implements a two-step check to avoid locking when modules have been already imported and are ready. This improves performance of repeated calls to [`importlib.import_module()`](https://docs.python.org/3/library/importlib.html#importlib.import_module "importlib.import_module") and [`importlib.__import__()`](https://docs.python.org/3/library/importlib.html#importlib.__import__ "importlib.__import__").
  * [bpo-43318](https://bugs.python.org/issue?@action=redirect&bpo=43318): Fix a bug where [`pdb`](https://docs.python.org/3/library/pdb.html#module-pdb "pdb: The Python debugger for interactive interpreters.") does not always echo cleared breakpoints.
  * [bpo-43234](https://bugs.python.org/issue?@action=redirect&bpo=43234): Prohibit passing non-[`concurrent.futures.ThreadPoolExecutor`](https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.ThreadPoolExecutor "concurrent.futures.ThreadPoolExecutor") executors to `loop.set_default_executor()` following a deprecation in Python 3.8. Patch by Illia Volochii.
  * [bpo-43232](https://bugs.python.org/issue?@action=redirect&bpo=43232): Prohibit previously deprecated potentially disruptive operations on `asyncio.trsock.TransportSocket`. Patch by Illia Volochii.
  * [bpo-30077](https://bugs.python.org/issue?@action=redirect&bpo=30077): Added support for Apple’s aifc/sowt pseudo-compression
  * [bpo-42971](https://bugs.python.org/issue?@action=redirect&bpo=42971): Add definition of `errno.EQFULL` for platforms that define this constant (such as macOS).
  * [bpo-43086](https://bugs.python.org/issue?@action=redirect&bpo=43086): Added a new optional `strict_mode` parameter to _binascii.a2b_base64_. When `scrict_mode` is set to `True`, the _a2b_base64_ function will accept only valid base64 content. More details about what “valid base64 content” is, can be found in the function’s documentation.
  * [bpo-43024](https://bugs.python.org/issue?@action=redirect&bpo=43024): Improve the help signature of [`traceback.print_exception()`](https://docs.python.org/3/library/traceback.html#traceback.print_exception "traceback.print_exception"), [`traceback.format_exception()`](https://docs.python.org/3/library/traceback.html#traceback.format_exception "traceback.format_exception") and [`traceback.format_exception_only()`](https://docs.python.org/3/library/traceback.html#traceback.format_exception_only "traceback.format_exception_only").
  * [bpo-33809](https://bugs.python.org/issue?@action=redirect&bpo=33809): Add the [`traceback.TracebackException.print()`](https://docs.python.org/3/library/traceback.html#traceback.TracebackException.print "traceback.TracebackException.print") method which prints the formatted exception information.
  * [bpo-42862](https://bugs.python.org/issue?@action=redirect&bpo=42862): [`sqlite3`](https://docs.python.org/3/library/sqlite3.html#module-sqlite3 "sqlite3: A DB-API 2.0 implementation using SQLite 3.x.") now utilizes [`functools.lru_cache()`](https://docs.python.org/3/library/functools.html#functools.lru_cache "functools.lru_cache") to implement the connection statement cache. As a small optimisation, the default statement cache size has been increased from 100 to 128. Patch by Erlend E. Aasland.
  * [bpo-41818](https://bugs.python.org/issue?@action=redirect&bpo=41818): Soumendra Ganguly: add termios.tcgetwinsize(), termios.tcsetwinsize().
  * [bpo-40497](https://bugs.python.org/issue?@action=redirect&bpo=40497): [`subprocess.check_output()`](https://docs.python.org/3/library/subprocess.html#subprocess.check_output "subprocess.check_output") now raises [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError "ValueError") when the invalid keyword argument _check_ is passed by user code. Previously such use would fail later with a [`TypeError`](https://docs.python.org/3/library/exceptions.html#TypeError "TypeError").