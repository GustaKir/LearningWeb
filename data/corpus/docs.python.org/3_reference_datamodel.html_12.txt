Title: Module Attributes in Python
URL: https://docs.python.org/3/reference/datamodel.html
Summary: This section discusses key attributes of a Python module, namely `module.__name__`, which identifies the module in the import system and is set to `__main__` for directly executed modules, and `module.__spec__`, which holds the module’s state related to the import system and is linked to the module spec used during import. The `module.__spec__` attribute was introduced in Python 3.4.
---

```


module.__name__[¶](https://docs.python.org/3/reference/datamodel.html#module.__name__ "Link to this definition")
    
The name used to uniquely identify the module in the import system. For a directly executed module, this will be set to `"__main__"`.
This attribute must be set to the fully qualified name of the module. It is expected to match the value of [`module.__spec__.name`](https://docs.python.org/3/library/importlib.html#importlib.machinery.ModuleSpec.name "importlib.machinery.ModuleSpec.name"). 

module.__spec__[¶](https://docs.python.org/3/reference/datamodel.html#module.__spec__ "Link to this definition")
    
A record of the module’s import-system-related state.
Set to the [`module spec`](https://docs.python.org/3/library/importlib.html#importlib.machinery.ModuleSpec "importlib.machinery.ModuleSpec") that was used when importing the module. See [Module specs](https://docs.python.org/3/reference/import.html#module-specs) for more details.
Added in version 3.4. 

module.__package__[¶](https://docs.python.org/3/reference/datamodel.html#module.__package__ "Link to this definition")
    
The [package](https://docs.python.org/3/glossary.html#term-package) a module belongs to.
If the module is top-level (that is, not a part of any specific package) then the attribute should be set to `''` (the empty string). Otherwise, it should be set to the name of the module’s package (which can be equal to [`module.__name__`](https://docs.python.org/3/reference/datamodel.html#module.__name__ "module.__name__") if the module itself is a package). See [**PEP 366**](https://peps.python.org/pep-0366/) for further details.
This attribute is used instead of [`__name__`](https://docs.python.org/3/reference/datamodel.html#module.__name__ "module.__name__") to calculate explicit relative imports for main modules. It defaults to `None` for modules created dynamically using the [`types.ModuleType`](https://docs.python.org/3/library/types.html#types.ModuleType "types.ModuleType") constructor; use [`importlib.util.module_from_spec()`](https://docs.python.org/3/library/importlib.html#importlib.util.module_from_spec "importlib.util.module_from_spec") instead to ensure the attribute is set to a [`str`](https://docs.python.org/3/library/stdtypes.html#str "str").
It is **strongly** recommended that you use [`module.__spec__.parent`](https://docs.python.org/3/library/importlib.html#importlib.machinery.ModuleSpec.parent "importlib.machinery.ModuleSpec.parent") instead of `module.__package__`. [`__package__`](https://docs.python.org/3/reference/datamodel.html#module.__package__ "module.__package__") is now only used as a fallback if `__spec__.parent` is not set, and this fallback path is deprecated.
Changed in version 3.4: This attribute now defaults to `None` for modules created dynamically using the [`types.ModuleType`](https://docs.python.org/3/library/types.html#types.ModuleType "types.ModuleType") constructor. Previously the attribute was optional.
Changed in version 3.6: The value of `__package__` is expected to be the same as [`__spec__.parent`](https://docs.python.org/3/library/importlib.html#importlib.machinery.ModuleSpec.parent "importlib.machinery.ModuleSpec.parent"). [`__package__`](https://docs.python.org/3/reference/datamodel.html#module.__package__ "module.__package__") is now only used as a fallback during import resolution if `__spec__.parent` is not defined.
Changed in version 3.10: [`ImportWarning`](https://docs.python.org/3/library/exceptions.html#ImportWarning "ImportWarning") is raised if an import resolution falls back to `__package__` instead of [`__spec__.parent`](https://docs.python.org/3/library/importlib.html#importlib.machinery.ModuleSpec.parent "importlib.machinery.ModuleSpec.parent").
Changed in version 3.12: Raise [`DeprecationWarning`](https://docs.python.org/3/library/exceptions.html#DeprecationWarning "DeprecationWarning") instead of [`ImportWarning`](https://docs.python.org/3/library/exceptions.html#ImportWarning "ImportWarning") when falling back to `__package__` during import resolution.
Deprecated since version 3.13, will be removed in version 3.15: `__package__` will cease to be set or taken into consideration by the import system or standard library.