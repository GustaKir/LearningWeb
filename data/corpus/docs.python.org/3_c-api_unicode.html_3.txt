Title: Unicode C API Functions
URL: https://docs.python.org/3/c-api/unicode.html
Summary: This section describes functions for reading characters from a Unicode object in Python's C API. The `PyUnicode_READ_CHAR` function retrieves a character at a specified index, but is less efficient for multiple reads compared to `PyUnicode_READ`. It was introduced in version 3.3.
---

[Py_UCS4](https://docs.python.org/3/c-api/unicode.html#c.Py_UCS4 "Py_UCS4")PyUnicode_READ_CHAR([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*unicode, [Py_ssize_t](https://docs.python.org/3/c-api/intro.html#c.Py_ssize_t "Py_ssize_t")index)[¶](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_READ_CHAR "Link to this definition")
    
Read a character from a Unicode object _unicode_ , which must be in the “canonical” representation. This is less efficient than [`PyUnicode_READ()`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_READ "PyUnicode_READ") if you do multiple consecutive reads.
Added in version 3.3. 

[Py_UCS4](https://docs.python.org/3/c-api/unicode.html#c.Py_UCS4 "Py_UCS4")PyUnicode_MAX_CHAR_VALUE([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*unicode)[¶](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_MAX_CHAR_VALUE "Link to this definition")
    
Return the maximum code point that is suitable for creating another string based on _unicode_ , which must be in the “canonical” representation. This is always an approximation but more efficient than iterating over the string.
Added in version 3.3. 

intPyUnicode_IsIdentifier([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*unicode)[¶](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_IsIdentifier "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Return `1` if the string is a valid identifier according to the language definition, section [Identifiers and keywords](https://docs.python.org/3/reference/lexical_analysis.html#identifiers). Return `0` otherwise.
Changed in version 3.9: The function does not call [`Py_FatalError()`](https://docs.python.org/3/c-api/sys.html#c.Py_FatalError "Py_FatalError") anymore if the string is not ready.
### Unicode Character Properties[¶](https://docs.python.org/3/c-api/unicode.html#unicode-character-properties "Link to this heading")
Unicode provides many different character properties. The most often needed ones are available through these macros which are mapped to C functions depending on the Python configuration. 

intPy_UNICODE_ISSPACE([Py_UCS4](https://docs.python.org/3/c-api/unicode.html#c.Py_UCS4 "Py_UCS4")ch)[¶](https://docs.python.org/3/c-api/unicode.html#c.Py_UNICODE_ISSPACE "Link to this definition")
    
Return `1` or `0` depending on whether _ch_ is a whitespace character. 

intPy_UNICODE_ISLOWER([Py_UCS4](https://docs.python.org/3/c-api/unicode.html#c.Py_UCS4 "Py_UCS4")ch)[¶](https://docs.python.org/3/c-api/unicode.html#c.Py_UNICODE_ISLOWER "Link to this definition")
    
Return `1` or `0` depending on whether _ch_ is a lowercase character. 

intPy_UNICODE_ISUPPER([Py_UCS4](https://docs.python.org/3/c-api/unicode.html#c.Py_UCS4 "Py_UCS4")ch)[¶](https://docs.python.org/3/c-api/unicode.html#c.Py_UNICODE_ISUPPER "Link to this definition")
    
Return `1` or `0` depending on whether _ch_ is an uppercase character. 

intPy_UNICODE_ISTITLE([Py_UCS4](https://docs.python.org/3/c-api/unicode.html#c.Py_UCS4 "Py_UCS4")ch)[¶](https://docs.python.org/3/c-api/unicode.html#c.Py_UNICODE_ISTITLE "Link to this definition")
    
Return `1` or `0` depending on whether _ch_ is a titlecase character. 

intPy_UNICODE_ISLINEBREAK([Py_UCS4](https://docs.python.org/3/c-api/unicode.html#c.Py_UCS4 "Py_UCS4")ch)[¶](https://docs.python.org/3/c-api/unicode.html#c.Py_UNICODE_ISLINEBREAK "Link to this definition")
    
Return `1` or `0` depending on whether _ch_ is a linebreak character. 

intPy_UNICODE_ISDECIMAL([Py_UCS4](https://docs.python.org/3/c-api/unicode.html#c.Py_UCS4 "Py_UCS4")ch)[¶](https://docs.python.org/3/c-api/unicode.html#c.Py_UNICODE_ISDECIMAL "Link to this definition")
    
Return `1` or `0` depending on whether _ch_ is a decimal character. 

intPy_UNICODE_ISDIGIT([Py_UCS4](https://docs.python.org/3/c-api/unicode.html#c.Py_UCS4 "Py_UCS4")ch)[¶](https://docs.python.org/3/c-api/unicode.html#c.Py_UNICODE_ISDIGIT "Link to this definition")
    
Return `1` or `0` depending on whether _ch_ is a digit character. 

intPy_UNICODE_ISNUMERIC([Py_UCS4](https://docs.python.org/3/c-api/unicode.html#c.Py_UCS4 "Py_UCS4")ch)[¶](https://docs.python.org/3/c-api/unicode.html#c.Py_UNICODE_ISNUMERIC "Link to this definition")
    
Return `1` or `0` depending on whether _ch_ is a numeric character. 

intPy_UNICODE_ISALPHA([Py_UCS4](https://docs.python.org/3/c-api/unicode.html#c.Py_UCS4 "Py_UCS4")ch)[¶](https://docs.python.org/3/c-api/unicode.html#c.Py_UNICODE_ISALPHA "Link to this definition")
    
Return `1` or `0` depending on whether _ch_ is an alphabetic character. 

intPy_UNICODE_ISALNUM([Py_UCS4](https://docs.python.org/3/c-api/unicode.html#c.Py_UCS4 "Py_UCS4")ch)[¶](https://docs.python.org/3/c-api/unicode.html#c.Py_UNICODE_ISALNUM "Link to this definition")
    
Return `1` or `0` depending on whether _ch_ is an alphanumeric character.