Title: Python 3.13 Updates: Time and Tkinter
URL: https://docs.python.org/3/whatsnew/3.13.html
Summary: In Python 3.13, the `monotonic()` and `time()` functions on Windows have been updated to use higher resolution clocks, improving accuracy to 1 microsecond. Additionally, there are enhancements related to the `tkinter` module.
---

### time[¶](https://docs.python.org/3/whatsnew/3.13.html#time "Link to this heading")
  * On Windows, [`monotonic()`](https://docs.python.org/3/library/time.html#time.monotonic "time.monotonic") now uses the `QueryPerformanceCounter()` clock for a resolution of 1 microsecond, instead of the `GetTickCount64()` clock which has a resolution of 15.6 milliseconds. (Contributed by Victor Stinner in [gh-88494](https://github.com/python/cpython/issues/88494).)
  * On Windows, [`time()`](https://docs.python.org/3/library/time.html#time.time "time.time") now uses the `GetSystemTimePreciseAsFileTime()` clock for a resolution of 1 microsecond, instead of the `GetSystemTimeAsFileTime()` clock which has a resolution of 15.6 milliseconds. (Contributed by Victor Stinner in [gh-63207](https://github.com/python/cpython/issues/63207).)


### tkinter[¶](https://docs.python.org/3/whatsnew/3.13.html#tkinter "Link to this heading")
  * Add [`tkinter`](https://docs.python.org/3/library/tkinter.html#module-tkinter "tkinter: Interface to Tcl/Tk for graphical user interfaces") widget methods: `tk_busy_hold()`, `tk_busy_configure()`, `tk_busy_cget()`, `tk_busy_forget()`, `tk_busy_current()`, and `tk_busy_status()`. (Contributed by Miguel, klappnase and Serhiy Storchaka in [gh-72684](https://github.com/python/cpython/issues/72684).)
  * The [`tkinter`](https://docs.python.org/3/library/tkinter.html#module-tkinter "tkinter: Interface to Tcl/Tk for graphical user interfaces") widget method `wm_attributes()` now accepts the attribute name without the minus prefix to get window attributes, for example `w.wm_attributes('alpha')` and allows specifying attributes and values to set as keyword arguments, for example `w.wm_attributes(alpha=0.5)`. (Contributed by Serhiy Storchaka in [gh-43457](https://github.com/python/cpython/issues/43457).)
  * `wm_attributes()` can now return attributes as a [`dict`](https://docs.python.org/3/library/stdtypes.html#dict "dict"), by using the new optional keyword-only parameter _return_python_dict_. (Contributed by Serhiy Storchaka in [gh-43457](https://github.com/python/cpython/issues/43457).)
  * `Text.count()` can now return a simple [`int`](https://docs.python.org/3/library/functions.html#int "int") when the new optional keyword-only parameter _return_ints_ is used. Otherwise, the single count is returned as a 1-tuple or `None`. (Contributed by Serhiy Storchaka in [gh-97928](https://github.com/python/cpython/issues/97928).)
  * Support the “vsapi” element type in the [`element_create()`](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Style.element_create "tkinter.ttk.Style.element_create") method of [`tkinter.ttk.Style`](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Style "tkinter.ttk.Style"). (Contributed by Serhiy Storchaka in [gh-68166](https://github.com/python/cpython/issues/68166).)
  * Add the `after_info()` method for Tkinter widgets. (Contributed by Cheryl Sabella in [gh-77020](https://github.com/python/cpython/issues/77020).)
  * Add a new `copy_replace()` method to `PhotoImage` to copy a region from one image to another, possibly with pixel zooming, subsampling, or both. (Contributed by Serhiy Storchaka in [gh-118225](https://github.com/python/cpython/issues/118225).)
  * Add _from_coords_ parameter to the `PhotoImage` methods `copy()`, `zoom()` and `subsample()`. Add _zoom_ and _subsample_ parameters to the `PhotoImage` method `copy()`. (Contributed by Serhiy Storchaka in [gh-118225](https://github.com/python/cpython/issues/118225).)
  * Add the `PhotoImage` methods `read()` to read an image from a file and `data()` to get the image data. Add _background_ and _grayscale_ parameters to the `write()` method. (Contributed by Serhiy Storchaka in [gh-118271](https://github.com/python/cpython/issues/118271).)