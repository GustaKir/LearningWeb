Title: Python Runtime Services
URL: https://docs.python.org/3/library/python.html
Summary: This section provides an overview of the modules that offer services related to the Python interpreter and its environment, including the `sys` module for system-specific functions and the `sys.monitoring` module for execution event monitoring.
---

# Python Runtime Services[¶](https://docs.python.org/3/library/python.html#python-runtime-services "Link to this heading")
The modules described in this chapter provide a wide range of services related to the Python interpreter and its interaction with its environment. Here’s an overview:
  * [`sys` — System-specific parameters and functions](https://docs.python.org/3/library/sys.html)
  * [`sys.monitoring` — Execution event monitoring](https://docs.python.org/3/library/sys.monitoring.html)
    * [Tool identifiers](https://docs.python.org/3/library/sys.monitoring.html#tool-identifiers)
      * [Registering and using tools](https://docs.python.org/3/library/sys.monitoring.html#registering-and-using-tools)
    * [Events](https://docs.python.org/3/library/sys.monitoring.html#events)
      * [Local events](https://docs.python.org/3/library/sys.monitoring.html#local-events)
      * [Ancillary events](https://docs.python.org/3/library/sys.monitoring.html#ancillary-events)
      * [Other events](https://docs.python.org/3/library/sys.monitoring.html#other-events)
      * [The STOP_ITERATION event](https://docs.python.org/3/library/sys.monitoring.html#the-stop-iteration-event)
    * [Turning events on and off](https://docs.python.org/3/library/sys.monitoring.html#turning-events-on-and-off)
      * [Setting events globally](https://docs.python.org/3/library/sys.monitoring.html#setting-events-globally)
      * [Per code object events](https://docs.python.org/3/library/sys.monitoring.html#per-code-object-events)
      * [Disabling events](https://docs.python.org/3/library/sys.monitoring.html#disabling-events)
    * [Registering callback functions](https://docs.python.org/3/library/sys.monitoring.html#registering-callback-functions)
      * [Callback function arguments](https://docs.python.org/3/library/sys.monitoring.html#callback-function-arguments)
  * [`sysconfig` — Provide access to Python’s configuration information](https://docs.python.org/3/library/sysconfig.html)
    * [Configuration variables](https://docs.python.org/3/library/sysconfig.html#configuration-variables)
    * [Installation paths](https://docs.python.org/3/library/sysconfig.html#installation-paths)
    * [User scheme](https://docs.python.org/3/library/sysconfig.html#user-scheme)
      * [`posix_user`](https://docs.python.org/3/library/sysconfig.html#posix-user)
      * [`nt_user`](https://docs.python.org/3/library/sysconfig.html#nt-user)
      * [`osx_framework_user`](https://docs.python.org/3/library/sysconfig.html#osx-framework-user)
    * [Home scheme](https://docs.python.org/3/library/sysconfig.html#home-scheme)
      * [`posix_home`](https://docs.python.org/3/library/sysconfig.html#posix-home)
    * [Prefix scheme](https://docs.python.org/3/library/sysconfig.html#prefix-scheme)
      * [`posix_prefix`](https://docs.python.org/3/library/sysconfig.html#posix-prefix)
      * [`nt`](https://docs.python.org/3/library/sysconfig.html#nt)
    * [Installation path functions](https://docs.python.org/3/library/sysconfig.html#installation-path-functions)
    * [Other functions](https://docs.python.org/3/library/sysconfig.html#other-functions)
    * [Using `sysconfig` as a script](https://docs.python.org/3/library/sysconfig.html#using-sysconfig-as-a-script)
  * [`builtins` — Built-in objects](https://docs.python.org/3/library/builtins.html)
  * [`__main__` — Top-level code environment](https://docs.python.org/3/library/__main__.html)
    * [`__name__ == '__main__'`](https://docs.python.org/3/library/__main__.html#name-main)
      * [What is the “top-level code environment”?](https://docs.python.org/3/library/__main__.html#what-is-the-top-level-code-environment)
      * [Idiomatic Usage](https://docs.python.org/3/library/__main__.html#idiomatic-usage)
      * [Packaging Considerations](https://docs.python.org/3/library/__main__.html#packaging-considerations)
    * [`__main__.py` in Python Packages](https://docs.python.org/3/library/__main__.html#main-py-in-python-packages)
      * [Idiomatic Usage](https://docs.python.org/3/library/__main__.html#id1)
    * [`import __main__`](https://docs.python.org/3/library/__main__.html#import-main)
  * [`warnings` — Warning control](https://docs.python.org/3/library/warnings.html)
    * [Warning Categories](https://docs.python.org/3/library/warnings.html#warning-categories)
    * [The Warnings Filter](https://docs.python.org/3/library/warnings.html#the-warnings-filter)
      * [Repeated Warning Suppression Criteria](https://docs.python.org/3/library/warnings.html#repeated-warning-suppression-criteria)
      * [Describing Warning Filters](https://docs.python.org/3/library/warnings.html#describing-warning-filters)
      * [Default Warning Filter](https://docs.python.org/3/library/warnings.html#default-warning-filter)
      * [Overriding the default filter](https://docs.python.org/3/library/warnings.html#overriding-the-default-filter)
    * [Temporarily Suppressing Warnings](https://docs.python.org/3/library/warnings.htm