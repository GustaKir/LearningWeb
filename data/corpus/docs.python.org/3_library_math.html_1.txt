Title: Math Module in Python
URL: https://docs.python.org/3/library/math.html
Summary: The `math` module in Python provides access to mathematical functions defined by the C standard, excluding support for complex numbers, which are handled by the `cmath` module. The document distinguishes between functions for real and complex numbers to facilitate error detection for unexpected inputs.
---

# `math` — Mathematical functions[¶](https://docs.python.org/3/library/math.html#module-math "Link to this heading")
This module provides access to the mathematical functions defined by the C standard.
These functions cannot be used with complex numbers; use the functions of the same name from the [`cmath`](https://docs.python.org/3/library/cmath.html#module-cmath "cmath: Mathematical functions for complex numbers.") module if you require support for complex numbers. The distinction between functions which support complex numbers and those which don’t is made since most users do not want to learn quite as much mathematics as required to understand complex numbers. Receiving an exception instead of a complex result allows earlier detection of the unexpected complex number used as a parameter, so that the programmer can determine how and why it was generated in the first place.
The following functions are provided by this module. Except when explicitly noted otherwise, all return values are floats.
**Number-theoretic functions**  
---  
[`comb(n, k)`](https://docs.python.org/3/library/math.html#math.comb "math.comb") | Number of ways to choose _k_ items from _n_ items without repetition and without order  
[`factorial(n)`](https://docs.python.org/3/library/math.html#math.factorial "math.factorial") | _n_ factorial  
[`gcd(*integers)`](https://docs.python.org/3/library/math.html#math.gcd "math.gcd") | Greatest common divisor of the integer arguments  
[`isqrt(n)`](https://docs.python.org/3/library/math.html#math.isqrt "math.isqrt") | Integer square root of a nonnegative integer _n_  
[`lcm(*integers)`](https://docs.python.org/3/library/math.html#math.lcm "math.lcm") | Least common multiple of the integer arguments  
[`perm(n, k)`](https://docs.python.org/3/library/math.html#math.perm "math.perm") | Number of ways to choose _k_ items from _n_ items without repetition and with order  
**Floating point arithmetic**  
[`ceil(x)`](https://docs.python.org/3/library/math.html#math.ceil "math.ceil") | Ceiling of _x_ , the smallest integer greater than or equal to _x_  
[`fabs(x)`](https://docs.python.org/3/library/math.html#math.fabs "math.fabs") | Absolute value of _x_  
[`floor(x)`](https://docs.python.org/3/library/math.html#math.floor "math.floor") | Floor of _x_ , the largest integer less than or equal to _x_  
[`fma(x, y, z)`](https://docs.python.org/3/library/math.html#math.fma "math.fma") | Fused multiply-add operation: `(x * y) + z`  
[`fmod(x, y)`](https://docs.python.org/3/library/math.html#math.fmod "math.fmod") | Remainder of division `x / y`  
[`modf(x)`](https://docs.python.org/3/library/math.html#math.modf "math.modf") | Fractional and integer parts of _x_  
[`remainder(x, y)`](https://docs.python.org/3/library/math.html#math.remainder "math.remainder") | Remainder of _x_ with respect to _y_  
[`trunc(x)`](https://docs.python.org/3/library/math.html#math.trunc "math.trunc") | Integer part of _x_  
**Floating point manipulation functions**  
[`copysign(x, y)`](https://docs.python.org/3/library/math.html#math.copysign "math.copysign") | Magnitude (absolute value) of _x_ with the sign of _y_  
[`frexp(x)`](https://docs.python.org/3/library/math.html#math.frexp "math.frexp") | Mantissa and exponent of _x_  
[`isclose(a, b, rel_tol, abs_tol)`](https://docs.python.org/3/library/math.html#math.isclose "math.isclose") | Check if the values _a_ and _b_ are close to each other  
[`isfinite(x)`](https://docs.python.org/3/library/math.html#math.isfinite "math.isfinite") | Check if _x_ is neither an infinity nor a NaN  
[`isinf(x)`](https://docs.python.org/3/library/math.html#math.isinf "math.isinf") | Check if _x_ is a positive or negative infinity  
[`isnan(x)`](https://docs.python.org/3/library/math.html#math.isnan "math.isnan") | Check if _x_ is a NaN (not a number)  
[`ldexp(x, i)`](https://docs.python.org/3/library/math.html#math.ldexp "math.ldexp") | `x * (2**i)`, inverse of function [`frexp()`](https://docs.python.org/3/library/math.html#math.frexp "math.frexp")  
[`nextafter(x, y, steps)`](https://docs.python.org/3/library/math.html#math.nextafter "math.nextafter") | Floating-point value _steps_ steps after _x_ towards _y_  
[`ulp(x)`](https://docs.python.org/3/library/math.html#math.ulp "math.ulp") | Value of the least significant bit of _x_  
**Power, exponential and logarithmic functions**  
[`cbrt(x)`](https://docs.python.org/3/library/math.html#math.cbrt "math.cbrt") | Cube root of _x_  
[`exp(x)`](https://docs.python.org/3/library/math.html#math.exp "math.exp") | _e_ raised to the power _x_  
[`exp2(x)`](https://docs.python.org/3/library/math.html#math.exp2 "math.exp2") | _2_ raised to the power _x_  
[`expm1(x)`](https://docs.python.org/3/library/math.html#math.expm1 "math.expm1") | _e_ raised to the power _x_ , minus 1  
[`log(x, base)`](https://docs.python.org/3/library/math.html#math.log "math.log") | Logarithm of _x_ to the given base (_e_ by default)  
[`log1p(x)`](https://docs.python.org/3/l