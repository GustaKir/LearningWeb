Title: Python Standard Library Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section outlines recent updates to the Python standard library, including the addition of the `@typing.final` decorator's `__final__` attribute, the new `sys.exception()` method for retrieving active exceptions, and enhancements to `string.Template` with new validation and identifier methods.
---

### Library[¶](https://docs.python.org/3/whatsnew/changelog.html#id254 "Link to this heading")
  * [bpo-46342](https://bugs.python.org/issue?@action=redirect&bpo=46342): The `@typing.final` decorator now sets the `__final__` attribute on the decorated object to allow runtime introspection. Patch by Jelle Zijlstra.
  * [bpo-46328](https://bugs.python.org/issue?@action=redirect&bpo=46328): Added the [`sys.exception()`](https://docs.python.org/3/library/sys.html#sys.exception "sys.exception") method which returns the active exception instance.
  * [bpo-46307](https://bugs.python.org/issue?@action=redirect&bpo=46307): Add [`string.Template.is_valid()`](https://docs.python.org/3/library/string.html#string.Template.is_valid "string.Template.is_valid") and [`string.Template.get_identifiers()`](https://docs.python.org/3/library/string.html#string.Template.get_identifiers "string.Template.get_identifiers") methods.
  * [bpo-46306](https://bugs.python.org/issue?@action=redirect&bpo=46306): Assume that [`types.CodeType`](https://docs.python.org/3/library/types.html#types.CodeType "types.CodeType") always has `types.CodeType.co_firstlineno` in [`doctest`](https://docs.python.org/3/library/doctest.html#module-doctest "doctest: Test pieces of code within docstrings.").
  * [bpo-40479](https://bugs.python.org/issue?@action=redirect&bpo=40479): Fix [`hashlib`](https://docs.python.org/3/library/hashlib.html#module-hashlib "hashlib: Secure hash and message digest algorithms.") _usedforsecurity_ option to work correctly with OpenSSL 3.0.0 in FIPS mode.
  * [bpo-46070](https://bugs.python.org/issue?@action=redirect&bpo=46070): Fix possible segfault when importing the [`asyncio`](https://docs.python.org/3/library/asyncio.html#module-asyncio "asyncio: Asynchronous I/O.") module from different sub-interpreters in parallel. Patch by Erlend E. Aasland.
  * [bpo-46244](https://bugs.python.org/issue?@action=redirect&bpo=46244): Removed `__slots__` from [`typing.ParamSpec`](https://docs.python.org/3/library/typing.html#typing.ParamSpec "typing.ParamSpec") and [`typing.TypeVar`](https://docs.python.org/3/library/typing.html#typing.TypeVar "typing.TypeVar"). They served no purpose. Patch by Arie Bovenberg.
  * [bpo-46278](https://bugs.python.org/issue?@action=redirect&bpo=46278): Reflect `context` argument in `AbstractEventLoop.call_*()` methods. Loop implementations already support it.
  * [bpo-46269](https://bugs.python.org/issue?@action=redirect&bpo=46269): Remove special-casing of `__new__` in [`enum.Enum.__dir__()`](https://docs.python.org/3/library/enum.html#enum.Enum.__dir__ "enum.Enum.__dir__").
  * [bpo-46266](https://bugs.python.org/issue?@action=redirect&bpo=46266): Improve day constants in [`calendar`](https://docs.python.org/3/library/calendar.html#module-calendar "calendar: Functions for working with calendars, including some emulation of the Unix cal program.").
Now all constants (`MONDAY` … `SUNDAY`) are documented, tested, and added to `__all__`.
  * [bpo-46257](https://bugs.python.org/issue?@action=redirect&bpo=46257): Optimized the mean, variance, and stdev functions in the statistics module. If the input is an iterator, it is consumed in a single pass rather than eating memory by conversion to a list. The single pass algorithm is about twice as fast as the previous two pass code.
  * [bpo-41011](https://bugs.python.org/issue?@action=redirect&bpo=41011): Added two new variables to _pyvenv.cfg_ which is generated by [`venv`](https://docs.python.org/3/library/venv.html#module-venv "venv: Creation of virtual environments.") module: _executable_ for the executable and _command_ for the command line used to create the environment.
  * [bpo-46239](https://bugs.python.org/issue?@action=redirect&bpo=46239): Improve error message when importing `asyncio.windows_events` on non-Windows.
  * [bpo-46238](https://bugs.python.org/issue?@action=redirect&bpo=46238): Reuse `_winapi` constants in `asyncio.windows_events`.
  * [bpo-46222](https://bugs.python.org/issue?@action=redirect&bpo=46222): Adding `SF_NOCACHE` sendfile constant for FreeBSD for the posixmodule.
  * [bpo-37295](https://bugs.python.org/issue?@action=redirect&bpo=37295): Add fast path for `0 <= k <= n <= 67` for [`math.comb()`](https://docs.python.org/3/library/math.html#math.comb "math.comb").
  * [bpo-46176](https://bugs.python.org/issue?@action=redirect&bpo=46176): Adding the `MAP_STACK` constant for the mmap module.
  * [bpo-43424](https://bugs.python.org/issue?@action=redirect&bpo=43424): Deprecate `webbrowser.MacOSXOSAScript._name` and use `name` instead.
  * [bpo-45321](https://bugs.python.org/issue?@action=redirect&bpo=45321): Added missing error codes to module `xml.parsers.expat.errors`.
  * [bpo-46125](https://bugs.python.org/issue?@action=redirect&bpo=46125): Refactor tests to test traversable API directly. Includes changes from importlib 5.4.0.
  * [bpo-46118](https://bugs.python.org/issue?@action=redirect&bpo=46118): Moved importlib.resources and its re