Title: Python 3 Changelog - Build and C API Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section of the Python 3 changelog outlines important updates and fixes related to the build process, including correction of CFLAGS, handling of LLVM installations, resolution of build errors on Windows, and ensuring compatibility of the `python-config` shell script. Additionally, it notes the removal of the private `_Py_CODEUNIT` type from the public C API.
---

### Build[¶](https://docs.python.org/3/whatsnew/changelog.html#id64 "Link to this heading")
  * [gh-120671](https://github.com/python/cpython/issues/120671): Fix failing configure tests due to a missing space when appending to CFLAGS.
  * [gh-120602](https://github.com/python/cpython/issues/120602): Correctly handle LLVM installs with `LLVM_VERSION_SUFFIX` when building with `--enable-experimental-jit`.
  * [gh-120326](https://github.com/python/cpython/issues/120326): On Windows, fix build error when `--disable-gil` and `--experimental-jit` options are combined.
  * [gh-120291](https://github.com/python/cpython/issues/120291): Make the `python-config` shell script compatible with non-bash shells.


### C API[¶](https://docs.python.org/3/whatsnew/changelog.html#id65 "Link to this heading")
  * [gh-120642](https://github.com/python/cpython/issues/120642): Remove the private `_Py_CODEUNIT` type from the public C API. The internal `pycore_code.h` header should now be used to get this internal type. Patch by Victor Stinner.
  * [gh-120858](https://github.com/python/cpython/issues/120858): [`PyDict_Next()`](https://docs.python.org/3/c-api/dict.html#c.PyDict_Next "PyDict_Next") no longer locks the dictionary in the free-threaded build. The locking needs to be done by the caller around the entire iteration loop.
  * [gh-120642](https://github.com/python/cpython/issues/120642): Remove the following unstable functions:
    * `PyUnstable_Replace_Executor()`
    * `PyUnstable_SetOptimizer()`
    * `PyUnstable_GetOptimizer()`
    * `PyUnstable_GetExecutor()`
    * `PyUnstable_Optimizer_NewCounter()`
    * `PyUnstable_Optimizer_NewUOpOptimizer()`
Patch by Victor Stinner.
  * [gh-119344](https://github.com/python/cpython/issues/119344): The critical section API is now public as part of the non-limited C API.
  * [gh-118789](https://github.com/python/cpython/issues/118789): Add [`PyUnstable_Object_ClearWeakRefsNoCallbacks()`](https://docs.python.org/3/c-api/weakref.html#c.PyUnstable_Object_ClearWeakRefsNoCallbacks "PyUnstable_Object_ClearWeakRefsNoCallbacks"), which clears weakrefs without calling their callbacks.
  * [gh-117511](https://github.com/python/cpython/issues/117511): Make the [`PyMutex`](https://docs.python.org/3/c-api/init.html#c.PyMutex "PyMutex") public in the non-limited C API.


## Python 3.13.0 beta 2[¶](https://docs.python.org/3/whatsnew/changelog.html#python-3-13-0-beta-2 "Link to this heading")
_Release date: 2024-06-05_
### Security[¶](https://docs.python.org/3/whatsnew/changelog.html#id66 "Link to this heading")
  * [gh-118773](https://github.com/python/cpython/issues/118773): Fixes creation of ACLs in [`os.mkdir()`](https://docs.python.org/3/library/os.html#os.mkdir "os.mkdir") on Windows to work correctly on non-English machines.
  * [gh-118486](https://github.com/python/cpython/issues/118486): [`os.mkdir()`](https://docs.python.org/3/library/os.html#os.mkdir "os.mkdir") on Windows now accepts _mode_ of `0o700` to restrict the new directory to the current user. This fixes [**CVE 2024-4030**](https://www.cve.org/CVERecord?id=CVE-2024-4030) affecting [`tempfile.mkdtemp()`](https://docs.python.org/3/library/tempfile.html#tempfile.mkdtemp "tempfile.mkdtemp") in scenarios where the base temporary directory is more permissive than the default.