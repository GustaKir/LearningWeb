Title: PyUnicode_FindChar Function in Python C API
URL: https://docs.python.org/3/c-api/unicode.html
Summary: The PyUnicode_FindChar function searches for the first occurrence of a specified character in a substring of a Python Unicode object, using a defined search direction. It returns the index of the match or indicates failure with specific return values.
---

[Py_ssize_t](https://docs.python.org/3/c-api/intro.html#c.Py_ssize_t "Py_ssize_t")PyUnicode_FindChar([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*unicode, [Py_UCS4](https://docs.python.org/3/c-api/unicode.html#c.Py_UCS4 "Py_UCS4")ch, [Py_ssize_t](https://docs.python.org/3/c-api/intro.html#c.Py_ssize_t "Py_ssize_t")start, [Py_ssize_t](https://docs.python.org/3/c-api/intro.html#c.Py_ssize_t "Py_ssize_t")end, intdirection)[¶](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_FindChar "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable) since version 3.7._
Return the first position of the character _ch_ in `unicode[start:end]` using the given _direction_ (_direction_ == `1` means to do a forward search, _direction_ == `-1` a backward search). The return value is the index of the first match; a value of `-1` indicates that no match was found, and `-2` indicates that an error occurred and an exception has been set.
Added in version 3.3.
Changed in version 3.7: _start_ and _end_ are now adjusted to behave like `unicode[start:end]`. 

[Py_ssize_t](https://docs.python.org/3/c-api/intro.html#c.Py_ssize_t "Py_ssize_t")PyUnicode_Count([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*unicode, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*substr, [Py_ssize_t](https://docs.python.org/3/c-api/intro.html#c.Py_ssize_t "Py_ssize_t")start, [Py_ssize_t](https://docs.python.org/3/c-api/intro.html#c.Py_ssize_t "Py_ssize_t")end)[¶](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_Count "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Return the number of non-overlapping occurrences of _substr_ in `unicode[start:end]`. Return `-1` if an error occurred. 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyUnicode_Replace([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*unicode, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*substr, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*replstr, [Py_ssize_t](https://docs.python.org/3/c-api/intro.html#c.Py_ssize_t "Py_ssize_t")maxcount)[¶](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_Replace "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Replace at most _maxcount_ occurrences of _substr_ in _unicode_ with _replstr_ and return the resulting Unicode object. _maxcount_ == `-1` means replace all occurrences. 

intPyUnicode_Compare([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*left, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*right)[¶](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_Compare "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Compare two strings and return `-1`, `0`, `1` for less than, equal, and greater than, respectively.
This function returns `-1` upon failure, so one should call [`PyErr_Occurred()`](https://docs.python.org/3/c-api/exceptions.html#c.PyErr_Occurred "PyErr_Occurred") to check for errors. 

intPyUnicode_EqualToUTF8AndSize([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*unicode, constchar*string, [Py_ssize_t](https://docs.python.org/3/c-api/intro.html#c.Py_ssize_t "Py_ssize_t")size)[¶](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_EqualToUTF8AndSize "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable) since version 3.13._
Compare a Unicode object with a char buffer which is interpreted as being UTF-8 or ASCII encoded and return true (`1`) if they are equal, or false (`0`) otherwise. If the Unicode object contains surrogate code points (`U+D800` - `U+DFFF`) or the C string is not valid UTF-8, false (`0`) is returned.
This function does not raise exceptions.
Added in version 3.13. 

intPyUnicode_EqualToUTF8([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*unicode, constchar*string)[¶](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_EqualToUTF8 "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable) since version 3.13._
Similar to [`PyUnicode_EqualToUTF8AndSize()`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_EqualToUTF8AndSize "PyUnicode_EqualToUTF8AndSize"), but compute _string_ length using `strlen()`. If the Unicode object contains null characters, false (`0`) is returned.
Added in version 3.13.