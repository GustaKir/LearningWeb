Title: Python Changelog Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This document details various updates and bug fixes including the addition of XMLPullParser to ElementTree, changes to BufferedReader and BufferedWriter methods, iterator behavior conformity for array.array, support for packages in doctest functions, and a regression fix for mock.MagicMock.
---

Patch by Xiang Zhang.
  * [bpo-26676](https://bugs.python.org/issue?@action=redirect&bpo=26676): Added missing XMLPullParser to ElementTree.__all__.
  * [bpo-22854](https://bugs.python.org/issue?@action=redirect&bpo=22854): Change BufferedReader.writable() and BufferedWriter.readable() to always return False.
  * [bpo-26492](https://bugs.python.org/issue?@action=redirect&bpo=26492): Exhausted iterator of array.array now conforms with the behavior of iterators of other mutable sequences: it lefts exhausted even if iterated array is extended.
  * [bpo-26641](https://bugs.python.org/issue?@action=redirect&bpo=26641): doctest.DocFileTest and doctest.testfile() now support packages (module splitted into multiple directories) for the package parameter.
  * [bpo-25195](https://bugs.python.org/issue?@action=redirect&bpo=25195): Fix a regression in mock.MagicMock. _Call is a subclass of tuple (changeset 3603bae63c13 only works for classes) so we need to implement __ne__ ourselves. Patch by Andrew Plummer.
  * [bpo-26644](https://bugs.python.org/issue?@action=redirect&bpo=26644): Raise ValueError rather than SystemError when a negative length is passed to SSLSocket.recv() or read().
  * [bpo-23804](https://bugs.python.org/issue?@action=redirect&bpo=23804): Fix SSL recv(0) and read(0) methods to return zero bytes instead of up to 1024.
  * [bpo-26616](https://bugs.python.org/issue?@action=redirect&bpo=26616): Fixed a bug in datetime.astimezone() method.
  * [bpo-26637](https://bugs.python.org/issue?@action=redirect&bpo=26637): The [`importlib`](https://docs.python.org/3/library/importlib.html#module-importlib "importlib: The implementation of the import machinery.") module now emits an [`ImportError`](https://docs.python.org/3/library/exceptions.html#ImportError "ImportError") rather than a [`TypeError`](https://docs.python.org/3/library/exceptions.html#TypeError "TypeError") if [`__import__()`](https://docs.python.org/3/library/functions.html#import__ "__import__") is tried during the Python shutdown process but [`sys.path`](https://docs.python.org/3/library/sys.html#sys.path "sys.path") is already cleared (set to `None`).
  * [bpo-21925](https://bugs.python.org/issue?@action=redirect&bpo=21925): [`warnings.formatwarning()`](https://docs.python.org/3/library/warnings.html#warnings.formatwarning "warnings.formatwarning") now catches exceptions when calling [`linecache.getline()`](https://docs.python.org/3/library/linecache.html#linecache.getline "linecache.getline") and [`tracemalloc.get_object_traceback()`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.get_object_traceback "tracemalloc.get_object_traceback") to be able to log [`ResourceWarning`](https://docs.python.org/3/library/exceptions.html#ResourceWarning "ResourceWarning") emitted late during the Python shutdown process.
  * [bpo-23848](https://bugs.python.org/issue?@action=redirect&bpo=23848): On Windows, faulthandler.enable() now also installs an exception handler to dump the traceback of all Python threads on any Windows exception, not only on UNIX signals (SIGSEGV, SIGFPE, SIGABRT).
  * [bpo-26530](https://bugs.python.org/issue?@action=redirect&bpo=26530): Add C functions `_PyTraceMalloc_Track()` and `_PyTraceMalloc_Untrack()` to track memory blocks using the [`tracemalloc`](https://docs.python.org/3/library/tracemalloc.html#module-tracemalloc "tracemalloc: Trace memory allocations.") module. Add `_PyTraceMalloc_GetTraceback()` to get the traceback of an object.
  * [bpo-26588](https://bugs.python.org/issue?@action=redirect&bpo=26588): The _tracemalloc now supports tracing memory allocations of multiple address spaces (domains).
  * [bpo-24266](https://bugs.python.org/issue?@action=redirect&bpo=24266): Ctrl+C during Readline history search now cancels the search mode when compiled with Readline 7.
  * [bpo-26590](https://bugs.python.org/issue?@action=redirect&bpo=26590): Implement a safe finalizer for the _socket.socket type. It now releases the GIL to close the socket.
  * [bpo-18787](https://bugs.python.org/issue?@action=redirect&bpo=18787): spwd.getspnam() now raises a PermissionError if the user doesnâ€™t have privileges.
  * [bpo-26560](https://bugs.python.org/issue?@action=redirect&bpo=26560): Avoid potential ValueError in BaseHandler.start_response. Initial patch by Peter Inglesby.
  * [bpo-26567](https://bugs.python.org/issue?@action=redirect&bpo=26567): Add a new function [`PyErr_ResourceWarning()`](https://docs.python.org/3/c-api/exceptions.html#c.PyErr_ResourceWarning "PyErr_ResourceWarning") function to pass the destroyed object. Add a _source_ attribute to `warnings.WarningMessage`.