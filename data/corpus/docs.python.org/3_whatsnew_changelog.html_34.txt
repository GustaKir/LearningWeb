Title: Python Changelog - Key Fixes and Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This document outlines several key fixes in Python, including a crash issue in `cProfile.Profile`, a correction in handling Windows DOS drive paths in `urllib.request`, and improved error handling for invalid Unicode characters in `_interpreters.create()`. Patch contributions are credited to Nico Posada.
---

Patch by Nico Posada.
  * [gh-126220](https://github.com/python/cpython/issues/126220): Fix crash in `cProfile.Profile` and `_lsprof.Profiler` when their callbacks were directly called with 0 arguments.
  * [gh-126212](https://github.com/python/cpython/issues/126212): Fix issue where [`urllib.request.pathname2url()`](https://docs.python.org/3/library/urllib.request.html#urllib.request.pathname2url "urllib.request.pathname2url") and [`url2pathname()`](https://docs.python.org/3/library/urllib.request.html#urllib.request.url2pathname "urllib.request.url2pathname") removed slashes from Windows DOS drive paths and URLs.
  * [gh-126223](https://github.com/python/cpython/issues/126223): Raise a [`UnicodeEncodeError`](https://docs.python.org/3/library/exceptions.html#UnicodeEncodeError "UnicodeEncodeError") instead of a [`SystemError`](https://docs.python.org/3/library/exceptions.html#SystemError "SystemError") upon calling `_interpreters.create()` with an invalid Unicode character.
  * [gh-126205](https://github.com/python/cpython/issues/126205): Fix issue where [`urllib.request.pathname2url()`](https://docs.python.org/3/library/urllib.request.html#urllib.request.pathname2url "urllib.request.pathname2url") generated URLs beginning with four slashes (rather than two) when given a Windows UNC path.
  * [gh-126105](https://github.com/python/cpython/issues/126105): Fix a crash in [`ast`](https://docs.python.org/3/library/ast.html#module-ast "ast: Abstract Syntax Tree classes and manipulation.") when the [`ast.AST._fields`](https://docs.python.org/3/library/ast.html#ast.AST._fields "ast.AST._fields") attribute is deleted.
  * [gh-126106](https://github.com/python/cpython/issues/126106): Fixes a possible `NULL` pointer dereference in [`ssl`](https://docs.python.org/3/library/ssl.html#module-ssl "ssl: TLS/SSL wrapper for socket objects").
  * [gh-126080](https://github.com/python/cpython/issues/126080): Fix a use-after-free crash on [`asyncio.Task`](https://docs.python.org/3/library/asyncio-task.html#asyncio.Task "asyncio.Task") objects for which the underlying event loop implements an evil [`__getattribute__()`](https://docs.python.org/3/reference/datamodel.html#object.__getattribute__ "object.__getattribute__"). Reported by Nico-Posada. Patch by Bénédikt Tran.
  * [gh-126083](https://github.com/python/cpython/issues/126083): Fixed a reference leak in [`asyncio.Task`](https://docs.python.org/3/library/asyncio-task.html#asyncio.Task "asyncio.Task") objects when reinitializing the same object with a non-`None` context. Patch by Nico Posada.
  * [gh-125984](https://github.com/python/cpython/issues/125984): Fix use-after-free crashes on [`asyncio.Future`](https://docs.python.org/3/library/asyncio-future.html#asyncio.Future "asyncio.Future") objects for which the underlying event loop implements an evil [`__getattribute__()`](https://docs.python.org/3/reference/datamodel.html#object.__getattribute__ "object.__getattribute__"). Reported by Nico-Posada. Patch by Bénédikt Tran.
  * [gh-125969](https://github.com/python/cpython/issues/125969): Fix an out-of-bounds crash when an evil [`asyncio.loop.call_soon()`](https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.loop.call_soon "asyncio.loop.call_soon") mutates the length of the internal callbacks list. Patch by Bénédikt Tran.
  * [gh-125966](https://github.com/python/cpython/issues/125966): Fix a use-after-free crash in [`asyncio.Future.remove_done_callback()`](https://docs.python.org/3/library/asyncio-future.html#asyncio.Future.remove_done_callback "asyncio.Future.remove_done_callback"). Patch by Bénédikt Tran.
  * [gh-125789](https://github.com/python/cpython/issues/125789): Fix possible crash when mutating list of callbacks returned by `asyncio.Future._callbacks`. It now always returns a new copy in C implementation `_asyncio`.