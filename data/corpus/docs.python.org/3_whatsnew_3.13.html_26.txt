Title: Python 3.13 Changes: CGI and Crypt Libraries
URL: https://docs.python.org/3/whatsnew/3.13.html
Summary: In Python 3.13, `cgi.parse_multipart()` is recommended to be replaced with the `email` package or the `multipart` library for improved MIME support. Additionally, the `standard-cgi` and `standard-cgitb` packages are available for redistributing `cgi` and `cgitb` libraries, while updates are noted for the `crypt` extension and `hashlib`.
---

```

    * `cgi.parse_multipart()` can be replaced with the functionality in the [`email`](https://docs.python.org/3/library/email.html#module-email "email: Package supporting the parsing, manipulating, and generating email messages.") package, which implements the same MIME RFCs, or with the [multipart](https://pypi.org/project/multipart/) library. For example, the [`email.message.EmailMessage`](https://docs.python.org/3/library/email.message.html#email.message.EmailMessage "email.message.EmailMessage") and [`email.message.Message`](https://docs.python.org/3/library/email.compat32-message.html#email.message.Message "email.message.Message") classes.
    * [standard-cgi](https://pypi.org/project/standard-cgi/): and [standard-cgitb](https://pypi.org/project/standard-cgitb/): Use the redistribution of `cgi` and `cgitb` library from PyPI.
  * `crypt` and the private `_crypt` extension. The [`hashlib`](https://docs.python.org/3/library/hashlib.html#module-hashlib "hashlib: Secure hash and message digest algorithms.") module may be an appropriate replacement when simply hashing a value is required. Otherwise, various third-party libraries on PyPI are available:
    * [bcrypt](https://pypi.org/project/bcrypt/): Modern password hashing for your software and your servers.
    * [passlib](https://pypi.org/project/passlib/): Comprehensive password hashing framework supporting over 30 schemes.
    * [argon2-cffi](https://pypi.org/project/argon2-cffi/): The secure Argon2 password hashing algorithm.
    * [legacycrypt](https://pypi.org/project/legacycrypt/): [`ctypes`](https://docs.python.org/3/library/ctypes.html#module-ctypes "ctypes: A foreign function library for Python.") wrapper to the POSIX crypt library call and associated functionality.
    * [crypt_r](https://pypi.org/project/crypt_r/): Fork of the `crypt` module, wrapper to the _[crypt_r(3)](https://manpages.debian.org/crypt_r\(3\))_ library call and associated functionality.
    * [standard-crypt](https://pypi.org/project/standard-crypt/) and [deprecated-crypt-alternative](https://pypi.org/project/deprecated-crypt-alternative/): Use the redistribution of `crypt` and reimplementation of `_crypt` libraries from PyPI.
  * `imghdr`: The [filetype](https://pypi.org/project/filetype/), [puremagic](https://pypi.org/project/puremagic/), or [python-magic](https://pypi.org/project/python-magic/) libraries should be used as replacements. For example, the `puremagic.what()` function can be used to replace the `imghdr.what()` function for all file formats that were supported by `imghdr`.
    * [standard-imghdr](https://pypi.org/project/standard-imghdr/): Use the redistribution of `imghdr` library from PyPI.
  * `mailcap`: Use the [`mimetypes`](https://docs.python.org/3/library/mimetypes.html#module-mimetypes "mimetypes: Mapping of filename extensions to MIME types.") module instead.
    * [standard-mailcap](https://pypi.org/project/standard-mailcap/): Use the redistribution of `mailcap` library from PyPI.
  * `msilib`
  * `nis`
  * `nntplib`: Use the [pynntp](https://pypi.org/project/pynntp/) library from PyPI instead.
    * [standard-nntplib](https://pypi.org/project/standard-nntplib/): Use the redistribution of `nntplib` library from PyPI.
  * `ossaudiodev`: For audio playback, use the [pygame](https://pypi.org/project/pygame/) library from PyPI instead.
  * `pipes`: Use the [`subprocess`](https://docs.python.org/3/library/subprocess.html#module-subprocess "subprocess: Subprocess management.") module instead. Use [`shlex.quote()`](https://docs.python.org/3/library/shlex.html#shlex.quote "shlex.quote") to replace the undocumented `pipes.quote` function.
    * [standard-pipes](https://pypi.org/project/standard-pipes/): Use the redistribution of `pipes` library from PyPI.
  * `sndhdr`: The [filetype](https://pypi.org/project/filetype/), [puremagic](https://pypi.org/project/puremagic/), or [python-magic](https://pypi.org/project/python-magic/) libraries should be used as replacements.
    * [standard-sndhdr](https://pypi.org/project/standard-sndhdr/): Use the redistribution of `sndhdr` library from PyPI.
  * `spwd`: Use the [python-pam](https://pypi.org/project/python-pam/) library from PyPI instead.
  * `sunau`
    * [standard-sunau](https://pypi.org/project/standard-sunau/): Use the redistribution of `sunau` library from PyPI.
  * `telnetlib`, Use the [telnetlib3](https://pypi.org/project/telnetlib3/) or [Exscript](https://pypi.org/project/Exscript/) libraries from PyPI instead.
    * [standard-telnetlib](https://pypi.org/project/standard-telnetlib/): Use the redistribution of `telnetlib` library from PyPI.
  * `uu`: Use the [`base64`](https://docs.python.org/3/library/base64.html#module-base64 "base64: RFC 4648: Base16, Base32, Base64 Data Encodings; Base85 and Ascii85") module instead, as a modern alternative.
    * [standard-uu](https://pypi.org/project/standard-uu/): Use the redistribution of `uu` library from PyPI.
  * `xdrlib`
    * [standard-xdrlib](https://pypi.or