Title: Python Changelog Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This document details several patches and fixes, including a resolution for a crash caused by an improperly initialized `MemoryError`, improvements to event handling in PyTrace, and enhancements to the argument parsing mechanism. Notably, changes to the interpreter frame have been made to ensure `instr_ptr` reflects the current instruction, and support for displaying source code and complete tracebacks in the REPL has been added.
---

Patch by Pablo Galindo
  * [gh-109894](https://github.com/python/cpython/issues/109894): Fixed crash due to improperly initialized static [`MemoryError`](https://docs.python.org/3/library/exceptions.html#MemoryError "MemoryError") in subinterpreter.
  * [gh-110892](https://github.com/python/cpython/issues/110892): Return `NULL` for `PyTrace_RETURN` events caused by an exception
  * [gh-110864](https://github.com/python/cpython/issues/110864): Fix argument parsing by `_PyArg_UnpackKeywordsWithVararg` for functions defining pos-or-keyword, vararg, and kw-only parameters.
  * [gh-109094](https://github.com/python/cpython/issues/109094): Replace `prev_instr` on the interpreter frame by `instr_ptr` which points to the beginning of the instruction that is currently executing (or will execute once the frame resumes).
  * [gh-110805](https://github.com/python/cpython/issues/110805): Allow the repl to show source code and complete tracebacks. Patch by Pablo Galindo
  * [gh-110722](https://github.com/python/cpython/issues/110722): Add `PYTHON_PRESITE=package.module` to import a module early in the interpreter lifecycle before `site.py` is executed. Python needs to be [built in debug mode](https://docs.python.org/3/using/configure.html#debug-build) for this option to exist.
  * [gh-110481](https://github.com/python/cpython/issues/110481): Implement biased reference counting in `--disable-gil` builds.
  * [gh-110543](https://github.com/python/cpython/issues/110543): Fix regression in Python 3.12 where `types.CodeType.replace()` would produce a broken code object if called on a module or class code object that contains a comprehension. Patch by Jelle Zijlstra.
  * [gh-89519](https://github.com/python/cpython/issues/89519): Removed chained [`classmethod`](https://docs.python.org/3/library/functions.html#classmethod "classmethod") descriptors (introduced in [bpo-19072](https://bugs.python.org/issue?@action=redirect&bpo=19072)). This can no longer be used to wrap other descriptors such as [`property`](https://docs.python.org/3/library/functions.html#property "property"). The core design of this feature was flawed and caused a number of downstream problems. To “pass-through” a [`classmethod`](https://docs.python.org/3/library/functions.html#classmethod "classmethod"), consider using the `__wrapped__` attribute that was added in Python 3.10.
  * [gh-103615](https://github.com/python/cpython/issues/103615): Use local events for opcode tracing
  * [bpo-46657](https://bugs.python.org/issue?@action=redirect&bpo=46657): Add mimalloc memory allocator support.
  * [gh-106718](https://github.com/python/cpython/issues/106718): When PyConfig.stdlib_dir is explicitly set, it’s now respected and won’t be overridden by PyConfig.home.
  * [gh-106905](https://github.com/python/cpython/issues/106905): Fix incorrect SystemError about AST constructor recursion depth mismatch.
  * [gh-100445](https://github.com/python/cpython/issues/100445): Improve error message for unterminated strings with escapes.
  * [bpo-45759](https://bugs.python.org/issue?@action=redirect&bpo=45759): Improved error messages for `elif`/`else` statements not matching any valid statements. Patch by Jeremiah Vivian.