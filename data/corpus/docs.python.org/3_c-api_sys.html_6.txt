Title: Python C API: Error Handling Functions
URL: https://docs.python.org/3/c-api/sys.html
Summary: This section describes two functions in the Python C API: `Py_FatalError`, which prints a fatal error message and terminates the process without cleanup, and `Py_Exit`, which gracefully exits the Python interpreter. The `Py_FatalError` function was updated in version 3.9 to automatically log the current function name, contingent on the `Py_LIMITED_API` macro not being defined.
---

voidPy_FatalError(constchar*message)[¶](https://docs.python.org/3/c-api/sys.html#c.Py_FatalError "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Print a fatal error message and kill the process. No cleanup is performed. This function should only be invoked when a condition is detected that would make it dangerous to continue using the Python interpreter; e.g., when the object administration appears to be corrupted. On Unix, the standard C library function `abort()` is called which will attempt to produce a `core` file.
The `Py_FatalError()` function is replaced with a macro which logs automatically the name of the current function, unless the `Py_LIMITED_API` macro is defined.
Changed in version 3.9: Log the function name automatically. 

voidPy_Exit(intstatus)[¶](https://docs.python.org/3/c-api/sys.html#c.Py_Exit "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Exit the current process. This calls [`Py_FinalizeEx()`](https://docs.python.org/3/c-api/init.html#c.Py_FinalizeEx "Py_FinalizeEx") and then calls the standard C library function `exit(status)`. If [`Py_FinalizeEx()`](https://docs.python.org/3/c-api/init.html#c.Py_FinalizeEx "Py_FinalizeEx") indicates an error, the exit status is set to 120.
Changed in version 3.6: Errors from finalization no longer ignored. 

intPy_AtExit(void(*func)())[¶](https://docs.python.org/3/c-api/sys.html#c.Py_AtExit "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Register a cleanup function to be called by [`Py_FinalizeEx()`](https://docs.python.org/3/c-api/init.html#c.Py_FinalizeEx "Py_FinalizeEx"). The cleanup function will be called with no arguments and should return no value. At most 32 cleanup functions can be registered. When the registration is successful, [`Py_AtExit()`](https://docs.python.org/3/c-api/sys.html#c.Py_AtExit "Py_AtExit") returns `0`; on failure, it returns `-1`. The cleanup function registered last is called first. Each cleanup function will be called at most once. Since Python’s internal finalization will have completed before the cleanup function, no Python APIs should be called by _func_.
See also
[`PyUnstable_AtExit()`](https://docs.python.org/3/c-api/init.html#c.PyUnstable_AtExit "PyUnstable_AtExit") for passing a `void *data` argument.
### [Table of Contents](https://docs.python.org/3/contents.html)
  * [Operating System Utilities](https://docs.python.org/3/c-api/sys.html)
  * [System Functions](https://docs.python.org/3/c-api/sys.html#system-functions)
  * [Process Control](https://docs.python.org/3/c-api/sys.html#process-control)


#### Previous topic
[Utilities](https://docs.python.org/3/c-api/utilities.html "previous chapter")
#### Next topic
[Importing Modules](https://docs.python.org/3/c-api/import.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/c-api/sys.rst)


«
### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/c-api/import.html "Importing Modules") |
  * [previous](https://docs.python.org/3/c-api/utilities.html "Utilities") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [Python/C API Reference Manual](https://docs.python.org/3/c-api/index.html) »
  * [Utilities](https://docs.python.org/3/c-api/utilities.html) »
  * [Operating System Utilities](https://docs.python.org/3/c-api/sys.html)
  * | 
  * Theme  Auto Light Dark |


© [ Copyright ](https://docs.python.org/3/copyright.html) 2001-2025, Python Software Foundation. This page is licensed under the Python Software Foundation License Version 2. Examples, recipes, and other code in the documentation are additionally licensed under the Zero Clause BSD License. See [History and License](https://docs.python.org/license.html) for more information. The Python Software Foundation is a non-profit corporation. [Please donate.](https://www.python.org/psf/donations/) Last updated on Apr 27, 2025 (05:38 UTC). [Found a bug](https://docs.python.org/bugs.html)? Created using [Sphinx](https://www.sphinx-doc.org/) 8.2.3.