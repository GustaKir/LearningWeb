Title: PyEval_EvalCodeEx Function
URL: https://docs.python.org/3/c-api/veryhigh.html
Summary: The PyEval_EvalCodeEx function evaluates a code object in the given global and local namespaces, allowing for optional arguments and keyword variables. It returns a new reference to the result of the evaluation.
---

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyEval_EvalCodeEx([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*co, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*globals, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*locals, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*const*args, intargcount, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*const*kws, intkwcount, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*const*defs, intdefcount, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*kwdefs, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*closure)[¶](https://docs.python.org/3/c-api/veryhigh.html#c.PyEval_EvalCodeEx "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Evaluate a precompiled code object, given a particular environment for its evaluation. This environment consists of a dictionary of global variables, a mapping object of local variables, arrays of arguments, keywords and defaults, a dictionary of default values for [keyword-only](https://docs.python.org/3/glossary.html#keyword-only-parameter) arguments and a closure tuple of cells. 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyEval_EvalFrame([PyFrameObject](https://docs.python.org/3/c-api/frame.html#c.PyFrameObject "PyFrameObject")*f)[¶](https://docs.python.org/3/c-api/veryhigh.html#c.PyEval_EvalFrame "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Evaluate an execution frame. This is a simplified interface to [`PyEval_EvalFrameEx()`](https://docs.python.org/3/c-api/veryhigh.html#c.PyEval_EvalFrameEx "PyEval_EvalFrameEx"), for backward compatibility. 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyEval_EvalFrameEx([PyFrameObject](https://docs.python.org/3/c-api/frame.html#c.PyFrameObject "PyFrameObject")*f, intthrowflag)[¶](https://docs.python.org/3/c-api/veryhigh.html#c.PyEval_EvalFrameEx "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
This is the main, unvarnished function of Python interpretation. The code object associated with the execution frame _f_ is executed, interpreting bytecode and executing calls as needed. The additional _throwflag_ parameter can mostly be ignored - if true, then it causes an exception to immediately be thrown; this is used for the [`throw()`](https://docs.python.org/3/reference/expressions.html#generator.throw "generator.throw") methods of generator objects.
Changed in version 3.4: This function now includes a debug assertion to help ensure that it does not silently discard an active exception. 

intPyEval_MergeCompilerFlags([PyCompilerFlags](https://docs.python.org/3/c-api/veryhigh.html#c.PyCompilerFlags "PyCompilerFlags")*cf)[¶](https://docs.python.org/3/c-api/veryhigh.html#c.PyEval_MergeCompilerFlags "Link to this definition")
    
This function changes the flags of the current evaluation frame, and returns true on success, false on failure. 

intPy_eval_input[¶](https://docs.python.org/3/c-api/veryhigh.html#c.Py_eval_input "Link to this definition")
    
The start symbol from the Python grammar for isolated expressions; for use with [`Py_CompileString()`](https://docs.python.org/3/c-api/veryhigh.html#c.Py_CompileString "Py_CompileString"). 

intPy_file_input[¶](https://docs.python.org/3/c-api/veryhigh.html#c.Py_file_input "Link to this definition")
    
The start symbol from the Python grammar for sequences of statements as read from a file or other source; for use with [`Py_CompileString()`](https://docs.python.org/3/c-api/veryhigh.html#c.Py_CompileString "Py_CompileString"). This is the symbol to use when compiling arbitrarily long Python source code. 

intPy_single_input[¶](https://docs.python.org/3/c-api/veryhigh.html#c.Py_single_input "Link to this definition")
    
The start symbol from the Python grammar for a single statement; for use with [`Py_CompileString()`](https://docs.python.org/3/c-api/veryhigh.html#c.Py_CompileString "Py_CompileString"). This is the symbol used for the interactive interpreter loop.