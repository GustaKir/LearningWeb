Title: Array Module Methods: frombytes and fromfile
URL: https://docs.python.org/3/library/array.html
Summary: The `frombytes(_buffer_)` method appends items from a bytes-like object to an array, interpreting the content as machine values. It was introduced in version 3.2, replacing `fromstring()`. The `fromfile(_f_, _n_)` method reads _n_ items from a file object _f_ and appends them to the array, raising an `EOFError` if fewer items are available.
---

frombytes(_buffer_)[¶](https://docs.python.org/3/library/array.html#array.array.frombytes "Link to this definition")
    
Appends items from the [bytes-like object](https://docs.python.org/3/glossary.html#term-bytes-like-object), interpreting its content as an array of machine values (as if it had been read from a file using the [`fromfile()`](https://docs.python.org/3/library/array.html#array.array.fromfile "array.array.fromfile") method).
Added in version 3.2: `fromstring()` is renamed to [`frombytes()`](https://docs.python.org/3/library/array.html#array.array.frombytes "array.array.frombytes") for clarity. 

fromfile(_f_ , _n_)[¶](https://docs.python.org/3/library/array.html#array.array.fromfile "Link to this definition")
    
Read _n_ items (as machine values) from the [file object](https://docs.python.org/3/glossary.html#term-file-object) _f_ and append them to the end of the array. If less than _n_ items are available, [`EOFError`](https://docs.python.org/3/library/exceptions.html#EOFError "EOFError") is raised, but the items that were available are still inserted into the array. 

fromlist(_list_)[¶](https://docs.python.org/3/library/array.html#array.array.fromlist "Link to this definition")
    
Append items from the list. This is equivalent to `for x in list: a.append(x)` except that if there is a type error, the array is unchanged. 

fromunicode(_s_)[¶](https://docs.python.org/3/library/array.html#array.array.fromunicode "Link to this definition")
    
Extends this array with data from the given Unicode string. The array must have type code `'u'` or `'w'`; otherwise a [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError "ValueError") is raised. Use `array.frombytes(unicodestring.encode(enc))` to append Unicode data to an array of some other type. 

index(_x_[, _start_[, _stop_]])[¶](https://docs.python.org/3/library/array.html#array.array.index "Link to this definition")
    
Return the smallest _i_ such that _i_ is the index of the first occurrence of _x_ in the array. The optional arguments _start_ and _stop_ can be specified to search for _x_ within a subsection of the array. Raise [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError "ValueError") if _x_ is not found.
Changed in version 3.10: Added optional _start_ and _stop_ parameters. 

insert(_i_ , _x_)[¶](https://docs.python.org/3/library/array.html#array.array.insert "Link to this definition")
    
Insert a new item with value _x_ in the array before position _i_. Negative values are treated as being relative to the end of the array. 

pop([_i_])[¶](https://docs.python.org/3/library/array.html#array.array.pop "Link to this definition")
    
Removes the item with the index _i_ from the array and returns it. The optional argument defaults to `-1`, so that by default the last item is removed and returned. 

remove(_x_)[¶](https://docs.python.org/3/library/array.html#array.array.remove "Link to this definition")
    
Remove the first occurrence of _x_ from the array. 

clear()[¶](https://docs.python.org/3/library/array.html#array.array.clear "Link to this definition")
    
Remove all elements from the array.
Added in version 3.13. 

reverse()[¶](https://docs.python.org/3/library/array.html#array.array.reverse "Link to this definition")
    
Reverse the order of the items in the array. 

tobytes()[¶](https://docs.python.org/3/library/array.html#array.array.tobytes "Link to this definition")
    
Convert the array to an array of machine values and return the bytes representation (the same sequence of bytes that would be written to a file by the [`tofile()`](https://docs.python.org/3/library/array.html#array.array.tofile "array.array.tofile") method.)
Added in version 3.2: `tostring()` is renamed to [`tobytes()`](https://docs.python.org/3/library/array.html#array.array.tobytes "array.array.tobytes") for clarity. 

tofile(_f_)[¶](https://docs.python.org/3/library/array.html#array.array.tofile "Link to this definition")
    
Write all items (as machine values) to the [file object](https://docs.python.org/3/glossary.html#term-file-object) _f_. 

tolist()[¶](https://docs.python.org/3/library/array.html#array.array.tolist "Link to this definition")
    
Convert the array to an ordinary list with the same items.