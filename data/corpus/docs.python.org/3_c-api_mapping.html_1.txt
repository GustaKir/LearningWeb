Title: PyMapping_GetOptionalItem – C API Reference
URL: https://docs.python.org/3/c-api/mapping.html
Summary: Introduces the `PyMapping_GetOptionalItem` function which is part of the Stable ABI since Python 3.13. This function retrieves an item from a mapping without raising a `KeyError` if the key is absent. It returns `1` and sets the result to a strong reference of the found value, or returns `0` and sets the result to `NULL` if the key is not found.
---

intPyMapping_GetOptionalItem([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*obj, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*key, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")**result)[¶](https://docs.python.org/3/c-api/mapping.html#c.PyMapping_GetOptionalItem "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable) since version 3.13._
Variant of [`PyObject_GetItem()`](https://docs.python.org/3/c-api/object.html#c.PyObject_GetItem "PyObject_GetItem") which doesn’t raise [`KeyError`](https://docs.python.org/3/library/exceptions.html#KeyError "KeyError") if the key is not found.
If the key is found, return `1` and set _*result_ to a new [strong reference](https://docs.python.org/3/glossary.html#term-strong-reference) to the corresponding value. If the key is not found, return `0` and set _*result_ to `NULL`; the [`KeyError`](https://docs.python.org/3/library/exceptions.html#KeyError "KeyError") is silenced. If an error other than [`KeyError`](https://docs.python.org/3/library/exceptions.html#KeyError "KeyError") is raised, return `-1` and set _*result_ to `NULL`.
Added in version 3.13. 

intPyMapping_GetOptionalItemString([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*obj, constchar*key, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")**result)[¶](https://docs.python.org/3/c-api/mapping.html#c.PyMapping_GetOptionalItemString "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable) since version 3.13._
This is the same as [`PyMapping_GetOptionalItem()`](https://docs.python.org/3/c-api/mapping.html#c.PyMapping_GetOptionalItem "PyMapping_GetOptionalItem"), but _key_ is specified as a constchar* UTF-8 encoded bytes string, rather than a [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*.
Added in version 3.13. 

intPyMapping_SetItemString([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*o, constchar*key, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*v)[¶](https://docs.python.org/3/c-api/mapping.html#c.PyMapping_SetItemString "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
This is the same as [`PyObject_SetItem()`](https://docs.python.org/3/c-api/object.html#c.PyObject_SetItem "PyObject_SetItem"), but _key_ is specified as a constchar* UTF-8 encoded bytes string, rather than a [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*. 

intPyMapping_DelItem([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*o, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*key)[¶](https://docs.python.org/3/c-api/mapping.html#c.PyMapping_DelItem "Link to this definition")
    
This is an alias of [`PyObject_DelItem()`](https://docs.python.org/3/c-api/object.html#c.PyObject_DelItem "PyObject_DelItem"). 

intPyMapping_DelItemString([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*o, constchar*key)[¶](https://docs.python.org/3/c-api/mapping.html#c.PyMapping_DelItemString "Link to this definition")
    
This is the same as [`PyObject_DelItem()`](https://docs.python.org/3/c-api/object.html#c.PyObject_DelItem "PyObject_DelItem"), but _key_ is specified as a constchar* UTF-8 encoded bytes string, rather than a [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*. 

intPyMapping_HasKeyWithError([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*o, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*key)[¶](https://docs.python.org/3/c-api/mapping.html#c.PyMapping_HasKeyWithError "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable) since version 3.13._
Return `1` if the mapping object has the key _key_ and `0` otherwise. This is equivalent to the Python expression `key in o`. On failure, return `-1`.
Added in version 3.13. 

intPyMapping_HasKeyStringWithError([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*o, constchar*key)[¶](https://docs.python.org/3/c-api/mapping.html#c.PyMapping_HasKeyStringWithError "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable) since version 3.13._
This is the same as [`PyMapping_HasKeyWithError()`](https://docs.python.org/3/c-api/mapping.html#c.PyMapping_HasKeyWithError "PyMapping_HasKeyWithError"), but _key_ is specified as a constchar* UTF-8 encoded bytes string, rather than a [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*.
Added in version 3.13.