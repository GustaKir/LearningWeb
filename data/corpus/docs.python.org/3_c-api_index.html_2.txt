Title: Python C API Overview
URL: https://docs.python.org/3/c-api/index.html
Summary: This document section introduces the components of the Python C API, including various object types, initialization and finalization processes, global configuration variables, thread management, and sub-interpreter support.
---

hon.org/3/c-api/concrete.html#function-objects)
    * [Other Objects](https://docs.python.org/3/c-api/concrete.html#other-objects)
  * [Initialization, Finalization, and Threads](https://docs.python.org/3/c-api/init.html)
    * [Before Python Initialization](https://docs.python.org/3/c-api/init.html#before-python-initialization)
    * [Global configuration variables](https://docs.python.org/3/c-api/init.html#global-configuration-variables)
    * [Initializing and finalizing the interpreter](https://docs.python.org/3/c-api/init.html#initializing-and-finalizing-the-interpreter)
    * [Process-wide parameters](https://docs.python.org/3/c-api/init.html#process-wide-parameters)
    * [Thread State and the Global Interpreter Lock](https://docs.python.org/3/c-api/init.html#thread-state-and-the-global-interpreter-lock)
    * [Sub-interpreter support](https://docs.python.org/3/c-api/init.html#sub-interpreter-support)
    * [Asynchronous Notifications](https://docs.python.org/3/c-api/init.html#asynchronous-notifications)
    * [Profiling and Tracing](https://docs.python.org/3/c-api/init.html#profiling-and-tracing)
    * [Reference tracing](https://docs.python.org/3/c-api/init.html#reference-tracing)
    * [Advanced Debugger Support](https://docs.python.org/3/c-api/init.html#advanced-debugger-support)
    * [Thread Local Storage Support](https://docs.python.org/3/c-api/init.html#thread-local-storage-support)
    * [Synchronization Primitives](https://docs.python.org/3/c-api/init.html#synchronization-primitives)
  * [Python Initialization Configuration](https://docs.python.org/3/c-api/init_config.html)
    * [Example](https://docs.python.org/3/c-api/init_config.html#example)
    * [PyWideStringList](https://docs.python.org/3/c-api/init_config.html#pywidestringlist)
    * [PyStatus](https://docs.python.org/3/c-api/init_config.html#pystatus)
    * [PyPreConfig](https://docs.python.org/3/c-api/init_config.html#pypreconfig)
    * [Preinitialize Python with PyPreConfig](https://docs.python.org/3/c-api/init_config.html#preinitialize-python-with-pypreconfig)
    * [PyConfig](https://docs.python.org/3/c-api/init_config.html#pyconfig)
    * [Initialization with PyConfig](https://docs.python.org/3/c-api/init_config.html#initialization-with-pyconfig)
    * [Isolated Configuration](https://docs.python.org/3/c-api/init_config.html#isolated-configuration)
    * [Python Configuration](https://docs.python.org/3/c-api/init_config.html#python-configuration)
    * [Python Path Configuration](https://docs.python.org/3/c-api/init_config.html#python-path-configuration)
    * [Py_GetArgcArgv()](https://docs.python.org/3/c-api/init_config.html#py-getargcargv)
    * [Multi-Phase Initialization Private Provisional API](https://docs.python.org/3/c-api/init_config.html#multi-phase-initialization-private-provisional-api)
  * [Memory Management](https://docs.python.org/3/c-api/memory.html)
    * [Overview](https://docs.python.org/3/c-api/memory.html#overview)
    * [Allocator Domains](https://docs.python.org/3/c-api/memory.html#allocator-domains)
    * [Raw Memory Interface](https://docs.python.org/3/c-api/memory.html#raw-memory-interface)
    * [Memory Interface](https://docs.python.org/3/c-api/memory.html#memory-interface)
    * [Object allocators](https://docs.python.org/3/c-api/memory.html#object-allocators)
    * [Default Memory Allocators](https://docs.python.org/3/c-api/memory.html#default-memory-allocators)
    * [Customize Memory Allocators](https://docs.python.org/3/c-api/memory.html#customize-memory-allocators)
    * [Debug hooks on the Python memory allocators](https://docs.python.org/3/c-api/memory.html#debug-hooks-on-the-python-memory-allocators)
    * [The pymalloc allocator](https://docs.python.org/3/c-api/memory.html#the-pymalloc-allocator)
    * [The mimalloc allocator](https://docs.python.org/3/c-api/memory.html#the-mimalloc-allocator)
    * [tracemalloc C API](https://docs.python.org/3/c-api/memory.html#tracemalloc-c-api)
    * [Examples](https://docs.python.org/3/c-api/memory.html#examples)
  * [Object Implementation Support](https://docs.python.org/3/c-api/objimpl.html)
    * [Allocating Objects on the Heap](https://docs.python.org/3/c-api/allocation.html)
    * [Common Object Structures](https://docs.python.org/3/c-api/structures.html)
    * [Type Object Structures](https://docs.python.org/3/c-api/typeobj.html)
    * [Supporting Cyclic Garbage Collection](https://docs.python.org/3/c-api/gcsupport.html)
  * [API and ABI Versioning](https://docs.python.org/3/c-api/apiabiversion.html)
  * [Monitoring C API](https://docs.python.org/3/c-api/monitoring.html)
  * [Generating Execution Events](https://docs.python.org/3/c-api/monitoring.html#generating-execution-events)
    * [Managing the Monitoring State](https://docs.python.org/3/c-api/monitoring.html#managing-the-monitoring-state)