Title: Treeview Methods in Tkinter
URL: https://docs.python.org/3/library/tkinter.ttk.html
Summary: This section describes various methods for the Treeview widget in Tkinter, including 'reattach' for moving items, 'see' for ensuring item visibility, and 'selection' for retrieving selected items. It notes changes in version 3.8, specifically regarding the 'selection()' method.
---

reattach(_item_ , _parent_ , _index_)[¶](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Treeview.reattach "Link to this definition")
    
An alias for [`Treeview.move()`](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Treeview.move "tkinter.ttk.Treeview.move"). 

see(_item_)[¶](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Treeview.see "Link to this definition")
    
Ensure that _item_ is visible.
Sets all of _item_ ’s ancestors open option to `True`, and scrolls the widget if necessary so that _item_ is within the visible portion of the tree. 

selection()[¶](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Treeview.selection "Link to this definition")
    
Returns a tuple of selected items.
Changed in version 3.8: `selection()` no longer takes arguments. For changing the selection state use the following selection methods. 

selection_set(_* items_)[¶](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Treeview.selection_set "Link to this definition")
    
_items_ becomes the new selection.
Changed in version 3.6: _items_ can be passed as separate arguments, not just as a single tuple. 

selection_add(_* items_)[¶](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Treeview.selection_add "Link to this definition")
    
Add _items_ to the selection.
Changed in version 3.6: _items_ can be passed as separate arguments, not just as a single tuple. 

selection_remove(_* items_)[¶](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Treeview.selection_remove "Link to this definition")
    
Remove _items_ from the selection.
Changed in version 3.6: _items_ can be passed as separate arguments, not just as a single tuple. 

selection_toggle(_* items_)[¶](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Treeview.selection_toggle "Link to this definition")
    
Toggle the selection state of each item in _items_.
Changed in version 3.6: _items_ can be passed as separate arguments, not just as a single tuple. 

set(_item_ , _column =None_, _value =None_)[¶](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Treeview.set "Link to this definition")
    
With one argument, returns a dictionary of column/value pairs for the specified _item_. With two arguments, returns the current value of the specified _column_. With three arguments, sets the value of given _column_ in given _item_ to the specified _value_. 

tag_bind(_tagname_ , _sequence =None_, _callback =None_)[¶](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Treeview.tag_bind "Link to this definition")
    
Bind a callback for the given event _sequence_ to the tag _tagname_. When an event is delivered to an item, the callbacks for each of the item’s tags option are called. 

tag_configure(_tagname_ , _option =None_, _** kw_)[¶](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Treeview.tag_configure "Link to this definition")
    
Query or modify the options for the specified _tagname_.
If _kw_ is not given, returns a dict of the option settings for _tagname_. If _option_ is specified, returns the value for that _option_ for the specified _tagname_. Otherwise, sets the options to the corresponding values for the given _tagname_. 

tag_has(_tagname_ , _item =None_)[¶](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Treeview.tag_has "Link to this definition")
    
If _item_ is specified, returns 1 or 0 depending on whether the specified _item_ has the given _tagname_. Otherwise, returns a list of all items that have the specified tag.
Availability: Tk 8.6 

xview(_* args_)[¶](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Treeview.xview "Link to this definition")
    
Query or modify horizontal position of the treeview. 

yview(_* args_)[¶](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Treeview.yview "Link to this definition")
    
Query or modify vertical position of the treeview.
## Ttk Styling[¶](https://docs.python.org/3/library/tkinter.ttk.html#ttk-styling "Link to this heading")
Each widget in `ttk` is assigned a style, which specifies the set of elements making up the widget and how they are arranged, along with dynamic and default settings for element options. By default the style name is the same as the widget’s class name, but it may be overridden by the widget’s style option. If you don’t know the class name of a widget, use the method `Misc.winfo_class()` (somewidget.winfo_class()).
See also 

[Tcl’2004 conference presentation](https://tktable.sourceforge.net/tile/tile-tcl2004.pdf)
    
This document explains how the theme engine works 

_class_ tkinter.ttk.Style[¶](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Style "Link to this definition")
    
This class is used to manipulate the style database.