Title: Python 2.7 New Features and Changes
URL: https://docs.python.org/3/whatsnew/2.7.html
Summary: This document highlights several updates in Python 2.7, including changes to the import statement for relative imports, enhancements allowing subclasses of the unicode type to override the __unicode__() method, and updates to the bytearray type's translate() method to accept None as its first argument. These changes aim to fix bugs and enhance functionality.
---

```

(Contributed by Fredrik Johansson and Victor Stinner; [bpo-3439](https://bugs.python.org/issue?@action=redirect&bpo=3439).)
  * The [`import`](https://docs.python.org/3/reference/simple_stmts.html#import) statement will no longer try an absolute import if a relative import (e.g. `from .os import sep`) fails. This fixes a bug, but could possibly break certain `import` statements that were only working by accident. (Fixed by Meador Inge; [bpo-7902](https://bugs.python.org/issue?@action=redirect&bpo=7902).)
  * It’s now possible for a subclass of the built-in `unicode` type to override the `__unicode__()` method. (Implemented by Victor Stinner; [bpo-1583863](https://bugs.python.org/issue?@action=redirect&bpo=1583863).)
  * The [`bytearray`](https://docs.python.org/3/library/stdtypes.html#bytearray "bytearray") type’s [`translate()`](https://docs.python.org/3/library/stdtypes.html#bytearray.translate "bytearray.translate") method now accepts `None` as its first argument. (Fixed by Georg Brandl; [bpo-4759](https://bugs.python.org/issue?@action=redirect&bpo=4759).)
  * When using [`@classmethod`](https://docs.python.org/3/library/functions.html#classmethod "classmethod") and [`@staticmethod`](https://docs.python.org/3/library/functions.html#staticmethod "staticmethod") to wrap methods as class or static methods, the wrapper object now exposes the wrapped function as their [`__func__`](https://docs.python.org/3/reference/datamodel.html#method.__func__ "method.__func__") attribute. (Contributed by Amaury Forgeot d’Arc, after a suggestion by George Sakkis; [bpo-5982](https://bugs.python.org/issue?@action=redirect&bpo=5982).)
  * When a restricted set of attributes were set using `__slots__`, deleting an unset attribute would not raise [`AttributeError`](https://docs.python.org/3/library/exceptions.html#AttributeError "AttributeError") as you would expect. Fixed by Benjamin Peterson; [bpo-7604](https://bugs.python.org/issue?@action=redirect&bpo=7604).)
  * Two new encodings are now supported: “cp720”, used primarily for Arabic text; and “cp858”, a variant of CP 850 that adds the euro symbol. (CP720 contributed by Alexander Belchenko and Amaury Forgeot d’Arc in [bpo-1616979](https://bugs.python.org/issue?@action=redirect&bpo=1616979); CP858 contributed by Tim Hatch in [bpo-8016](https://bugs.python.org/issue?@action=redirect&bpo=8016).)
  * The `file` object will now set the `filename` attribute on the [`IOError`](https://docs.python.org/3/library/exceptions.html#IOError "IOError") exception when trying to open a directory on POSIX platforms (noted by Jan Kaliszewski; [bpo-4764](https://bugs.python.org/issue?@action=redirect&bpo=4764)), and now explicitly checks for and forbids writing to read-only file objects instead of trusting the C library to catch and report the error (fixed by Stefan Krah; [bpo-5677](https://bugs.python.org/issue?@action=redirect&bpo=5677)).
  * The Python tokenizer now translates line endings itself, so the [`compile()`](https://docs.python.org/3/library/functions.html#compile "compile") built-in function now accepts code using any line-ending convention. Additionally, it no longer requires that the code end in a newline.
  * Extra parentheses in function definitions are illegal in Python 3.x, meaning that you get a syntax error from `def f((x)): pass`. In Python3-warning mode, Python 2.7 will now warn about this odd usage. (Noted by James Lingard; [bpo-7362](https://bugs.python.org/issue?@action=redirect&bpo=7362).)
  * It’s now possible to create weak references to old-style class objects. New-style classes were always weak-referenceable. (Fixed by Antoine Pitrou; [bpo-8268](https://bugs.python.org/issue?@action=redirect&bpo=8268).)
  * When a module object is garbage-collected, the module’s dictionary is now only cleared if no one else is holding a reference to the dictionary ([bpo-7140](https://bugs.python.org/issue?@action=redirect&bpo=7140)).


### Interpreter Changes[¶](https://docs.python.org/3/whatsnew/2.7.html#interpreter-changes "Link to this heading")
A new environment variable, [`PYTHONWARNINGS`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONWARNINGS), allows controlling warnings. It should be set to a string containing warning settings, equivalent to those used with the [`-W`](https://docs.python.org/3/using/cmdline.html#cmdoption-W) switch, separated by commas. (Contributed by Brian Curtin; [bpo-7301](https://bugs.python.org/issue?@action=redirect&bpo=7301).)
For example, the following setting will print warnings every time they occur, but turn warnings from the [`Cookie`](https://docs.python.org/3/library/http.cookies.html#module-http.cookies "http.cookies: Support for HTTP state management \(cookies\).") module into an error. (The exact syntax for setting an environment variable varies across operating systems and shells.)
```
export PYTHONWARNINGS=all,error:::Cookie:0