Title: reprlib Module in Python 3.12
URL: https://docs.python.org/3/library/reprlib.html
Summary: The reprlib module, introduced in Python version 3.12, provides an alternative to the built-in repr() function using instance-specific formatting. It includes repr.repr() for general representation and repr.repr1() for recursive formatting based on object types, allowing detailed customization of output.
---

```

Added in version 3.12. 

Repr.repr(_obj_)[¶](https://docs.python.org/3/library/reprlib.html#reprlib.Repr.repr "Link to this definition")
    
The equivalent to the built-in [`repr()`](https://docs.python.org/3/library/functions.html#repr "repr") that uses the formatting imposed by the instance. 

Repr.repr1(_obj_ , _level_)[¶](https://docs.python.org/3/library/reprlib.html#reprlib.Repr.repr1 "Link to this definition")
    
Recursive implementation used by [`repr()`](https://docs.python.org/3/library/reprlib.html#reprlib.Repr.repr "reprlib.Repr.repr"). This uses the type of _obj_ to determine which formatting method to call, passing it _obj_ and _level_. The type-specific methods should call [`repr1()`](https://docs.python.org/3/library/reprlib.html#reprlib.Repr.repr1 "reprlib.Repr.repr1") to perform recursive formatting, with `level - 1` for the value of _level_ in the recursive call. 

Repr.repr_TYPE(_obj_ , _level_)
    
Formatting methods for specific types are implemented as methods with a name based on the type name. In the method name, **TYPE** is replaced by `'_'.join(type(obj).__name__.split())`. Dispatch to these methods is handled by [`repr1()`](https://docs.python.org/3/library/reprlib.html#reprlib.Repr.repr1 "reprlib.Repr.repr1"). Type-specific methods which need to recursively format a value should call `self.repr1(subobj, level - 1)`.
## Subclassing Repr Objects[¶](https://docs.python.org/3/library/reprlib.html#subclassing-repr-objects "Link to this heading")
The use of dynamic dispatching by [`Repr.repr1()`](https://docs.python.org/3/library/reprlib.html#reprlib.Repr.repr1 "reprlib.Repr.repr1") allows subclasses of [`Repr`](https://docs.python.org/3/library/reprlib.html#reprlib.Repr "reprlib.Repr") to add support for additional built-in object types or to modify the handling of types already supported. This example shows how special support for file objects could be added:
```
importreprlib
importsys
classMyRepr(reprlib.Repr):
  defrepr_TextIOWrapper(self, obj, level):
    if obj.name in {'<stdin>', '<stdout>', '<stderr>'}:
      return obj.name
    return repr(obj)
aRepr = MyRepr()
print(aRepr.repr(sys.stdin))     # prints '<stdin>'

```

```
<stdin>

```

### [Table of Contents](https://docs.python.org/3/contents.html)
  * [`reprlib` — Alternate `repr()` implementation](https://docs.python.org/3/library/reprlib.html)
    * [Repr Objects](https://docs.python.org/3/library/reprlib.html#repr-objects)
    * [Subclassing Repr Objects](https://docs.python.org/3/library/reprlib.html#subclassing-repr-objects)


#### Previous topic
[`pprint` — Data pretty printer](https://docs.python.org/3/library/pprint.html "previous chapter")
#### Next topic
[`enum` — Support for enumerations](https://docs.python.org/3/library/enum.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/reprlib.rst)


«
### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/library/enum.html "enum — Support for enumerations") |
  * [previous](https://docs.python.org/3/library/pprint.html "pprint — Data pretty printer") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [The Python Standard Library](https://docs.python.org/3/library/index.html) »
  * [Data Types](https://docs.python.org/3/library/datatypes.html) »
  * [`reprlib` — Alternate `repr()` implementation](https://docs.python.org/3/library/reprlib.html)
  * | 
  * Theme  Auto Light Dark |


© [ Copyright ](https://docs.python.org/3/copyright.html) 2001-2025, Python Software Foundation. This page is licensed under the Python Software Foundation License Version 2. Examples, recipes, and other code in the documentation are additionally licensed under the Zero Clause BSD License. See [History and License](https://docs.python.org/license.html) for more information. The Python Software Foundation is a non-profit corporation. [Please donate.](https://www.python.org/psf/donations/) Last updated on Apr 27, 2025 (05:38 UTC). [Found a bug](https://docs.python.org/bugs.html)? Created using [Sphinx](https://www.sphinx-doc.org/) 8.2.3. 
  *[*]: Keyword-only parameters separator (PEP 3102)