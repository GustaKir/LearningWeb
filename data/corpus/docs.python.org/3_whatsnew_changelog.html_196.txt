Title: Python Library Changes and Fixes
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section outlines recent updates and bug fixes in the Python library, including improvements to Enum, pip upgrades, zlib error handling, an added parameter for asyncio, and a regression fix for FutureIter.
---

### Library[¶](https://docs.python.org/3/whatsnew/changelog.html#id172 "Link to this heading")
  * [gh-101541](https://github.com/python/cpython/issues/101541): [Enum] - fix psuedo-flag creation
  * [gh-101570](https://github.com/python/cpython/issues/101570): Upgrade pip wheel bundled with ensurepip (pip 23.0)
  * [gh-101323](https://github.com/python/cpython/issues/101323): Fix a bug where errors where not thrown by zlib._ZlibDecompressor if encountered during decompressing.
  * [gh-101317](https://github.com/python/cpython/issues/101317): Add _ssl_shutdown_timeout_ parameter for [`asyncio.StreamWriter.start_tls()`](https://docs.python.org/3/library/asyncio-stream.html#asyncio.StreamWriter.start_tls "asyncio.StreamWriter.start_tls").
  * [gh-101326](https://github.com/python/cpython/issues/101326): Fix regression when passing `None` as second or third argument to `FutureIter.throw`.
  * [gh-92123](https://github.com/python/cpython/issues/92123): Adapt the `_elementtree` extension module to multi-phase init ([**PEP 489**](https://peps.python.org/pep-0489/)). Patches by Erlend E. Aasland.
  * [gh-100795](https://github.com/python/cpython/issues/100795): Avoid potential unexpected `freeaddrinfo` call (double free) in [`socket`](https://docs.python.org/3/library/socket.html#module-socket "socket: Low-level networking interface.") when when a libc `getaddrinfo()` implementation leaves garbage in an output pointer when returning an error. Original patch by Sergey G. Brester.
  * [gh-101143](https://github.com/python/cpython/issues/101143): Remove unused references to [`TimerHandle`](https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.TimerHandle "asyncio.TimerHandle") in `asyncio.base_events.BaseEventLoop._add_callback`.
  * [gh-101144](https://github.com/python/cpython/issues/101144): Make [`zipfile.Path.open()`](https://docs.python.org/3/library/zipfile.html#zipfile.Path.open "zipfile.Path.open") and [`zipfile.Path.read_text()`](https://docs.python.org/3/library/zipfile.html#zipfile.Path.read_text "zipfile.Path.read_text") also accept `encoding` as a positional argument. This was the behavior in Python 3.9 and earlier. 3.10 introduced a regression where supplying it as a positional argument would lead to a [`TypeError`](https://docs.python.org/3/library/exceptions.html#TypeError "TypeError").
  * [gh-94518](https://github.com/python/cpython/issues/94518): Group-related variables of `_posixsubprocess` module are renamed to stress that supplementary group affinity is added to a fork, not replace the inherited ones. Patch by Oleg Iarygin.
  * [gh-101015](https://github.com/python/cpython/issues/101015): Fix [`typing.get_type_hints()`](https://docs.python.org/3/library/typing.html#typing.get_type_hints "typing.get_type_hints") on `'*tuple[...]'` and `*tuple[...]`. It must not drop the `Unpack` part.
  * [gh-101000](https://github.com/python/cpython/issues/101000): Add [`os.path.splitroot()`](https://docs.python.org/3/library/os.path.html#os.path.splitroot "os.path.splitroot"), which splits a path into a 3-item tuple `(drive, root, tail)`. This new function is used by [`pathlib`](https://docs.python.org/3/library/pathlib.html#module-pathlib "pathlib: Object-oriented filesystem paths") to improve the performance of path construction by up to a third.
  * [gh-100573](https://github.com/python/cpython/issues/100573): Fix a Windows [`asyncio`](https://docs.python.org/3/library/asyncio.html#module-asyncio "asyncio: Asynchronous I/O.") bug with named pipes where a client doing `os.stat()` on the pipe would cause an error in the server that disabled serving future requests.
  * [gh-39615](https://github.com/python/cpython/issues/39615): [`warnings.warn()`](https://docs.python.org/3/library/warnings.html#warnings.warn "warnings.warn") now has the ability to skip stack frames based on code filename prefix rather than only a numeric `stacklevel` via the new `skip_file_prefixes` keyword argument.
  * [gh-100750](https://github.com/python/cpython/issues/100750): pass encoding kwarg to subprocess in platform
  * [gh-100160](https://github.com/python/cpython/issues/100160): Emit a deprecation warning in `asyncio.DefaultEventLoopPolicy.get_event_loop()` if there is no current event loop set and it decides to create one.
  * [gh-96290](https://github.com/python/cpython/issues/96290): Fix handling of partial and invalid UNC drives in `ntpath.splitdrive()`, and in `ntpath.normpath()` on non-Windows systems. Paths such as ‘\server’ and ‘\’ are now considered by `splitdrive()` to contain only a drive, and consequently are not modified by `normpath()` on non-Windows systems. The behaviour of `normpath()` on Windows systems is unaffected, as native OS APIs are used. Patch by Eryk Sun, with contributions by Barney Gale.
  * [gh-99952](https://github.com/python/cpython/issues/99952): Fix a reference undercounting issue in [`ctypes.Structure`](https://docs.python.org/3/library/ctypes.html#ctypes.Structure "ctypes.Structure"