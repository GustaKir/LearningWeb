Title: Python Library Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: Recent library improvements include optimizations for `math.fsum()`, restoring functionality for `random.choice()` with NumPy arrays, the addition of `socket.IP_PKTINFO`, and performance enhancements for `email.message.Message.__contains__()`. Further, microoptimizations for `fractions.Fraction.__round__` were also introduced.
---

### Library[¶](https://docs.python.org/3/whatsnew/changelog.html#id178 "Link to this heading")
  * [gh-100833](https://github.com/python/cpython/issues/100833): Speed up [`math.fsum()`](https://docs.python.org/3/library/math.html#math.fsum "math.fsum") by removing defensive `volatile` qualifiers.
  * [gh-100805](https://github.com/python/cpython/issues/100805): Modify [`random.choice()`](https://docs.python.org/3/library/random.html#random.choice "random.choice") implementation to once again work with NumPy arrays.
  * [gh-100813](https://github.com/python/cpython/issues/100813): Add `socket.IP_PKTINFO` constant.
  * [gh-100792](https://github.com/python/cpython/issues/100792): Make [`email.message.Message.__contains__()`](https://docs.python.org/3/library/email.compat32-message.html#email.message.Message.__contains__ "email.message.Message.__contains__") twice as fast.
  * [gh-91851](https://github.com/python/cpython/issues/91851): Microoptimizations for [`fractions.Fraction.__round__()`](https://docs.python.org/3/library/fractions.html#fractions.Fraction.__round__ "fractions.Fraction.__round__"), [`fractions.Fraction.__ceil__()`](https://docs.python.org/3/library/fractions.html#fractions.Fraction.__ceil__ "fractions.Fraction.__ceil__") and [`fractions.Fraction.__floor__()`](https://docs.python.org/3/library/fractions.html#fractions.Fraction.__floor__ "fractions.Fraction.__floor__").
  * [gh-90104](https://github.com/python/cpython/issues/90104): Avoid RecursionError on `repr` if a dataclass field definition has a cyclic reference.
  * [gh-100689](https://github.com/python/cpython/issues/100689): Fix crash in `pyexpat` by statically allocating `PyExpat_CAPI` capsule.
  * [gh-100740](https://github.com/python/cpython/issues/100740): Fix `unittest.mock.Mock` not respecting the spec for attribute names prefixed with `assert`.
  * [gh-91219](https://github.com/python/cpython/issues/91219): Change `SimpleHTTPRequestHandler` to support subclassing to provide a different set of index file names instead of using `__init__` parameters.
  * [gh-100690](https://github.com/python/cpython/issues/100690): `Mock` objects which are not unsafe will now raise an `AttributeError` when accessing an attribute that matches the name of an assertion but without the prefix `assert_`, e.g. accessing `called_once` instead of `assert_called_once`. This is in addition to this already happening for accessing attributes with prefixes `assert`, `assret`, `asert`, `aseert`, and `assrt`.
  * [gh-89727](https://github.com/python/cpython/issues/89727): Simplify and optimize [`os.walk()`](https://docs.python.org/3/library/os.html#os.walk "os.walk") by using [`isinstance()`](https://docs.python.org/3/library/functions.html#isinstance "isinstance") checks to check the top of the stack.
  * [gh-100485](https://github.com/python/cpython/issues/100485): Add math.sumprod() to compute the sum of products.
  * [gh-86508](https://github.com/python/cpython/issues/86508): Fix [`asyncio.open_connection()`](https://docs.python.org/3/library/asyncio-stream.html#asyncio.open_connection "asyncio.open_connection") to skip binding to local addresses of different family. Patch by Kumar Aditya.
  * [gh-97930](https://github.com/python/cpython/issues/97930): `importlib.resources.files` now accepts a module as an anchor instead of only accepting packages. If a module is passed, resources are resolved adjacent to that module (in the same package or at the package root). The parameter was renamed from `package` to `anchor` with a compatibility shim for those passing by keyword. Additionally, the new `anchor` parameter is now optional and will default to the caller’s module.
  * [gh-100585](https://github.com/python/cpython/issues/100585): Fixed a bug where importlib.resources.as_file was leaving file pointers open
  * [gh-100562](https://github.com/python/cpython/issues/100562): Improve performance of [`pathlib.Path.absolute()`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.absolute "pathlib.Path.absolute") by nearly 2x. This comes at the cost of a performance regression in [`pathlib.Path.cwd()`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.cwd "pathlib.Path.cwd"), which is generally used less frequently in user code.
  * [gh-100519](https://github.com/python/cpython/issues/100519): Small simplification of `http.cookiejar.eff_request_host()` that improves readability and better matches the RFC wording.
  * [gh-100287](https://github.com/python/cpython/issues/100287): Fix the interaction of [`unittest.mock.seal()`](https://docs.python.org/3/library/unittest.mock.html#unittest.mock.seal "unittest.mock.seal") with [`unittest.mock.AsyncMock`](https://docs.python.org/3/library/unittest.mock.html#unittest.mock.AsyncMock "unittest.mock.AsyncMock").
  * [gh-100488](https://github.com/python/cpython/issues/100488): Add `Fraction.is_integer()` to check whether a [`fractions.Fraction`](https://docs.python.org/3/library/fractions.html#fractions.Fr