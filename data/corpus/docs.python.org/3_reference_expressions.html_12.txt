Title: Subscription and Indexing in Python
URL: https://docs.python.org/3/reference/expressions.html
Summary: This section explains how object subscripting works in Python, detailing the necessity for the primary to evaluate to a subscription-supporting object. It covers the role of methods like `__getitem__()` and `__class_getitem__()`, and clarifies the conditions under which each method is invoked. Additionally, it notes that if the expression list for subscripting contains commas or starred expressions, the result will be evaluated as a tuple.
---

```

When an object is subscripted, the interpreter will evaluate the primary and the expression list.
The primary must evaluate to an object that supports subscription. An object may support subscription through defining one or both of [`__getitem__()`](https://docs.python.org/3/reference/datamodel.html#object.__getitem__ "object.__getitem__") and [`__class_getitem__()`](https://docs.python.org/3/reference/datamodel.html#object.__class_getitem__ "object.__class_getitem__"). When the primary is subscripted, the evaluated result of the expression list will be passed to one of these methods. For more details on when `__class_getitem__` is called instead of `__getitem__`, see [__class_getitem__ versus __getitem__](https://docs.python.org/3/reference/datamodel.html#classgetitem-versus-getitem).
If the expression list contains at least one comma, or if any of the expressions are starred, the expression list will evaluate to a [`tuple`](https://docs.python.org/3/library/stdtypes.html#tuple "tuple") containing the items of the expression list. Otherwise, the expression list will evaluate to the value of the list’s sole member.
Changed in version 3.11: Expressions in an expression list may be starred. See [**PEP 646**](https://peps.python.org/pep-0646/).
For built-in objects, there are two types of objects that support subscription via [`__getitem__()`](https://docs.python.org/3/reference/datamodel.html#object.__getitem__ "object.__getitem__"):
  1. Mappings. If the primary is a [mapping](https://docs.python.org/3/glossary.html#term-mapping), the expression list must evaluate to an object whose value is one of the keys of the mapping, and the subscription selects the value in the mapping that corresponds to that key. An example of a builtin mapping class is the [`dict`](https://docs.python.org/3/library/stdtypes.html#dict "dict") class.
  2. Sequences. If the primary is a [sequence](https://docs.python.org/3/glossary.html#term-sequence), the expression list must evaluate to an [`int`](https://docs.python.org/3/library/functions.html#int "int") or a [`slice`](https://docs.python.org/3/library/functions.html#slice "slice") (as discussed in the following section). Examples of builtin sequence classes include the [`str`](https://docs.python.org/3/library/stdtypes.html#str "str"), [`list`](https://docs.python.org/3/library/stdtypes.html#list "list") and [`tuple`](https://docs.python.org/3/library/stdtypes.html#tuple "tuple") classes.


The formal syntax makes no special provision for negative indices in [sequences](https://docs.python.org/3/glossary.html#term-sequence). However, built-in sequences all provide a [`__getitem__()`](https://docs.python.org/3/reference/datamodel.html#object.__getitem__ "object.__getitem__") method that interprets negative indices by adding the length of the sequence to the index so that, for example, `x[-1]` selects the last item of `x`. The resulting value must be a nonnegative integer less than the number of items in the sequence, and the subscription selects the item whose index is that value (counting from zero). Since the support for negative indices and slicing occurs in the object’s [`__getitem__()`](https://docs.python.org/3/reference/datamodel.html#object.__getitem__ "object.__getitem__") method, subclasses overriding this method will need to explicitly add that support.
A [`string`](https://docs.python.org/3/library/stdtypes.html#str "str") is a special kind of sequence whose items are _characters_. A character is not a separate data type but a string of exactly one character.
### 6.3.3. Slicings[¶](https://docs.python.org/3/reference/expressions.html#slicings "Link to this heading")
A slicing selects a range of items in a sequence object (e.g., a string, tuple or list). Slicings may be used as expressions or as targets in assignment or [`del`](https://docs.python.org/3/reference/simple_stmts.html#del) statements. The syntax for a slicing: