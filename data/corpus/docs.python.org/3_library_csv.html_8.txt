Title: Advanced CSV Reader Usage in Python
URL: https://docs.python.org/3/library/csv.html
Summary: This section demonstrates advanced usage of Python's CSV reader by illustrating error handling during file reading and showcasing the ability to parse strings with the CSV reader. It emphasizes the importance of specifying 'newline=' for proper newline handling.
---

```

A slightly more advanced use of the reader — catching and reporting errors:
```
importcsv,sys
filename = 'some.csv'
with open(filename, newline='') as f:
  reader = csv.reader(f)
  try:
    for row in reader:
      print(row)
  except csv.Error as e:
    sys.exit('file {}, line {}: {}'.format(filename, reader.line_num, e))

```

And while the module doesn’t directly support parsing strings, it can easily be done:
```
importcsv
for row in csv.reader(['one,two,three']):
  print(row)

```

Footnotes
[1] ([1](https://docs.python.org/3/library/csv.html#id1),[2](https://docs.python.org/3/library/csv.html#id2))
If `newline=''` is not specified, newlines embedded inside quoted fields will not be interpreted correctly, and on platforms that use `\r\n` linendings on write an extra `\r` will be added. It should always be safe to specify `newline=''`, since the csv module does its own ([universal](https://docs.python.org/3/glossary.html#term-universal-newlines)) newline handling.
### [Table of Contents](https://docs.python.org/3/contents.html)
  * [`csv` — CSV File Reading and Writing](https://docs.python.org/3/library/csv.html)
    * [Module Contents](https://docs.python.org/3/library/csv.html#module-contents)
    * [Dialects and Formatting Parameters](https://docs.python.org/3/library/csv.html#dialects-and-formatting-parameters)
    * [Reader Objects](https://docs.python.org/3/library/csv.html#reader-objects)
    * [Writer Objects](https://docs.python.org/3/library/csv.html#writer-objects)
    * [Examples](https://docs.python.org/3/library/csv.html#examples)


#### Previous topic
[File Formats](https://docs.python.org/3/library/fileformats.html "previous chapter")
#### Next topic
[`configparser` — Configuration file parser](https://docs.python.org/3/library/configparser.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/csv.rst)


«
### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/library/configparser.html "configparser — Configuration file parser") |
  * [previous](https://docs.python.org/3/library/fileformats.html "File Formats") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [The Python Standard Library](https://docs.python.org/3/library/index.html) »
  * [File Formats](https://docs.python.org/3/library/fileformats.html) »
  * [`csv` — CSV File Reading and Writing](https://docs.python.org/3/library/csv.html)
  * | 
  * Theme  Auto Light Dark |


© [ Copyright ](https://docs.python.org/3/copyright.html) 2001-2025, Python Software Foundation. This page is licensed under the Python Software Foundation License Version 2. Examples, recipes, and other code in the documentation are additionally licensed under the Zero Clause BSD License. See [History and License](https://docs.python.org/license.html) for more information. The Python Software Foundation is a non-profit corporation. [Please donate.](https://www.python.org/psf/donations/) Last updated on Apr 27, 2025 (05:38 UTC). [Found a bug](https://docs.python.org/bugs.html)? Created using [Sphinx](https://www.sphinx-doc.org/) 8.2.3.