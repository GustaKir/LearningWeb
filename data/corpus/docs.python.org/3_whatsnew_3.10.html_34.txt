Title: Notable Security Feature in Python 3.10.7
URL: https://docs.python.org/3/whatsnew/3.10.html
Summary: Python 3.10.7 introduces a security feature that raises a ValueError when converting between int and str for bases other than 2, 4, 8, 16, or 32 if the digit count exceeds a specific limit. This change mitigates potential denial of service attacks related to algorithmic complexity, addressing CVE-2020-10735. The limit can be configured via environment variables, command line flags, or sys APIs.
---

## Notable security feature in 3.10.7[¶](https://docs.python.org/3/whatsnew/3.10.html#notable-security-feature-in-3-10-7 "Link to this heading")
Converting between [`int`](https://docs.python.org/3/library/functions.html#int "int") and [`str`](https://docs.python.org/3/library/stdtypes.html#str "str") in bases other than 2 (binary), 4, 8 (octal), 16 (hexadecimal), or 32 such as base 10 (decimal) now raises a [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError "ValueError") if the number of digits in string form is above a limit to avoid potential denial of service attacks due to the algorithmic complexity. This is a mitigation for [**CVE 2020-10735**](https://www.cve.org/CVERecord?id=CVE-2020-10735). This limit can be configured or disabled by environment variable, command line flag, or [`sys`](https://docs.python.org/3/library/sys.html#module-sys "sys: Access system-specific parameters and functions.") APIs. See the [integer string conversion length limitation](https://docs.python.org/3/library/stdtypes.html#int-max-str-digits) documentation. The default limit is 4300 digits in string form.
## Notable security feature in 3.10.8[¶](https://docs.python.org/3/whatsnew/3.10.html#notable-security-feature-in-3-10-8 "Link to this heading")
The deprecated `mailcap` module now refuses to inject unsafe text (filenames, MIME types, parameters) into shell commands. Instead of using such text, it will warn and act as if a match was not found (or for test commands, as if the test failed). (Contributed by Petr Viktorin in [gh-98966](https://github.com/python/cpython/issues/98966).)
## Notable changes in 3.10.12[¶](https://docs.python.org/3/whatsnew/3.10.html#notable-changes-in-3-10-12 "Link to this heading")
### tarfile[¶](https://docs.python.org/3/whatsnew/3.10.html#tarfile "Link to this heading")
  * The extraction methods in [`tarfile`](https://docs.python.org/3/library/tarfile.html#module-tarfile "tarfile: Read and write tar-format archive files."), and [`shutil.unpack_archive()`](https://docs.python.org/3/library/shutil.html#shutil.unpack_archive "shutil.unpack_archive"), have a new a _filter_ argument that allows limiting tar features than may be surprising or dangerous, such as creating files outside the destination directory. See [Extraction filters](https://docs.python.org/3/library/tarfile.html#tarfile-extraction-filter) for details. In Python 3.12, use without the _filter_ argument will show a [`DeprecationWarning`](https://docs.python.org/3/library/exceptions.html#DeprecationWarning "DeprecationWarning"). In Python 3.14, the default will switch to `'data'`. (Contributed by Petr Viktorin in [**PEP 706**](https://peps.python.org/pep-0706/).)