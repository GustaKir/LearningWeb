Title: Modulefinder - Find Modules Used by a Script
URL: https://docs.python.org/3/library/modulefinder.html
Summary: The `modulefinder` module in Python is designed to identify and locate modules that are used within a script. It assists developers in understanding module dependencies and structures.
---

[ ![Python logo](https://docs.python.org/3/_static/py.svg) ](https://www.python.org/) dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
Theme  Auto Light Dark
### [Table of Contents](https://docs.python.org/3/contents.html)
  * [`modulefinder` — Find modules used by a script](https://docs.python.org/3/library/modulefinder.html)
    * [Example usage of `ModuleFinder`](https://docs.python.org/3/library/modulefinder.html#example-usage-of-modulefinder)


#### Previous topic
[`pkgutil` — Package extension utility](https://docs.python.org/3/library/pkgutil.html "previous chapter")
#### Next topic
[`runpy` — Locating and executing Python modules](https://docs.python.org/3/library/runpy.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/modulefinder.rst)


### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/library/runpy.html "runpy — Locating and executing Python modules") |
  * [previous](https://docs.python.org/3/library/pkgutil.html "pkgutil — Package extension utility") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [The Python Standard Library](https://docs.python.org/3/library/index.html) »
  * [Importing Modules](https://docs.python.org/3/library/modules.html) »
  * [`modulefinder` — Find modules used by a script](https://docs.python.org/3/library/modulefinder.html)
  * | 
  * Theme  Auto Light Dark |


# `modulefinder` — Find modules used by a script[¶](https://docs.python.org/3/library/modulefinder.html#module-modulefinder "Link to this heading")
**Source code:** [Lib/modulefinder.py](https://github.com/python/cpython/tree/3.13/Lib/modulefinder.py)
This module provides a [`ModuleFinder`](https://docs.python.org/3/library/modulefinder.html#modulefinder.ModuleFinder "modulefinder.ModuleFinder") class that can be used to determine the set of modules imported by a script. `modulefinder.py` can also be run as a script, giving the filename of a Python script as its argument, after which a report of the imported modules will be printed. 

modulefinder.AddPackagePath(_pkg_name_ , _path_)[¶](https://docs.python.org/3/library/modulefinder.html#modulefinder.AddPackagePath "Link to this definition")
    
Record that the package named _pkg_name_ can be found in the specified _path_. 

modulefinder.ReplacePackage(_oldname_ , _newname_)[¶](https://docs.python.org/3/library/modulefinder.html#modulefinder.ReplacePackage "Link to this definition")
    
Allows specifying that the module named _oldname_ is in fact the package named _newname_. 

_class_ modulefinder.ModuleFinder(_path =None_, _debug =0_, _excludes =[]_, _replace_paths =[]_)[¶](https://docs.python.org/3/library/modulefinder.html#modulefinder.ModuleFinder "Link to this definition")
    
This class provides [`run_script()`](https://docs.python.org/3/library/modulefinder.html#modulefinder.ModuleFinder.run_script "modulefinder.ModuleFinder.run_script") and [`report()`](https://docs.python.org/3/library/modulefinder.html#modulefinder.ModuleFinder.report "modulefinder.ModuleFinder.report") methods to determine the set of modules imported by a script. _path_ can be a list of directories to search for modules; if not specified, `sys.path` is used. _debug_ sets the debugging level; higher values make the class print debugging messages about what it’s doing. _excludes_ is a list of module names to exclude from the analysis. _replace_paths_ is a list of `(oldpath, newpath)` tuples that will be replaced in module paths. 

report()[¶](https://docs.python.org/3/library/modulefinder.html#modulefinder.ModuleFinder.report "Link to this definition")
    
Print a report to standard output that lists the modules imported by the script and their paths, as well as modules that are missing or seem to be missing. 

run_script(_pathname_)[¶](https://docs.python.org/3/library/modulefinder.html#modulefinder.ModuleFinder.run_script "Link to this definition")
    
Analyze the contents of the _pathname_ file, which must contain Python code.