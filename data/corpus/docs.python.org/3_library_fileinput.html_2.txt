Title: File Input Module Updates and Key Functions
URL: https://docs.python.org/3/library/fileinput.html
Summary: This section covers recent changes to the fileinput module in Python, including context manager support and updated keyword parameters introduced in versions 3.2, 3.8, and 3.10. It also describes the functions fileinput.filename() and fileinput.fileno(), which retrieve the current file's name and file descriptor, respectively.
---

```

Changed in version 3.2: Can be used as a context manager.
Changed in version 3.8: The keyword parameters _mode_ and _openhook_ are now keyword-only.
Changed in version 3.10: The keyword-only parameter _encoding_ and _errors_ are added.
The following functions use the global state created by [`fileinput.input()`](https://docs.python.org/3/library/fileinput.html#fileinput.input "fileinput.input"); if there is no active state, [`RuntimeError`](https://docs.python.org/3/library/exceptions.html#RuntimeError "RuntimeError") is raised. 

fileinput.filename()[¶](https://docs.python.org/3/library/fileinput.html#fileinput.filename "Link to this definition")
    
Return the name of the file currently being read. Before the first line has been read, returns `None`. 

fileinput.fileno()[¶](https://docs.python.org/3/library/fileinput.html#fileinput.fileno "Link to this definition")
    
Return the integer “file descriptor” for the current file. When no file is opened (before the first line and between files), returns `-1`. 

fileinput.lineno()[¶](https://docs.python.org/3/library/fileinput.html#fileinput.lineno "Link to this definition")
    
Return the cumulative line number of the line that has just been read. Before the first line has been read, returns `0`. After the last line of the last file has been read, returns the line number of that line. 

fileinput.filelineno()[¶](https://docs.python.org/3/library/fileinput.html#fileinput.filelineno "Link to this definition")
    
Return the line number in the current file. Before the first line has been read, returns `0`. After the last line of the last file has been read, returns the line number of that line within the file. 

fileinput.isfirstline()[¶](https://docs.python.org/3/library/fileinput.html#fileinput.isfirstline "Link to this definition")
    
Return `True` if the line just read is the first line of its file, otherwise return `False`. 

fileinput.isstdin()[¶](https://docs.python.org/3/library/fileinput.html#fileinput.isstdin "Link to this definition")
    
Return `True` if the last line was read from `sys.stdin`, otherwise return `False`. 

fileinput.nextfile()[¶](https://docs.python.org/3/library/fileinput.html#fileinput.nextfile "Link to this definition")
    
Close the current file so that the next iteration will read the first line from the next file (if any); lines not read from the file will not count towards the cumulative line count. The filename is not changed until after the first line of the next file has been read. Before the first line has been read, this function has no effect; it cannot be used to skip the first file. After the last line of the last file has been read, this function has no effect. 

fileinput.close()[¶](https://docs.python.org/3/library/fileinput.html#fileinput.close "Link to this definition")
    
Close the sequence.
The class which implements the sequence behavior provided by the module is available for subclassing as well: