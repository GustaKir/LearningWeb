Title: Library Updates in Python 3.12
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section outlines new library features and deprecations in Python 3.12, including the introduction of a DeprecationWarning for improper usage of private typing functions and the addition of an optional second type parameter for typing.ContextManager and typing.AsyncContextManager.
---

### Library[¶](https://docs.python.org/3/whatsnew/changelog.html#id75 "Link to this heading")
  * [gh-118418](https://github.com/python/cpython/issues/118418): A [`DeprecationWarning`](https://docs.python.org/3/library/exceptions.html#DeprecationWarning "DeprecationWarning") is now emitted if you fail to pass a value to the new _type_params_ parameter of `typing._eval_type()` or `typing.ForwardRef._evaluate()`. (Using either of these private and undocumented functions is discouraged to begin with, but failing to pass a value to the `type_params` parameter may lead to incorrect behaviour on Python 3.12 or newer.)
  * [gh-118660](https://github.com/python/cpython/issues/118660): Add an optional second type parameter to [`typing.ContextManager`](https://docs.python.org/3/library/typing.html#typing.ContextManager "typing.ContextManager") and [`typing.AsyncContextManager`](https://docs.python.org/3/library/typing.html#typing.AsyncContextManager "typing.AsyncContextManager"), representing the return types of [`__exit__()`](https://docs.python.org/3/reference/datamodel.html#object.__exit__ "object.__exit__") and [`__aexit__()`](https://docs.python.org/3/reference/datamodel.html#object.__aexit__ "object.__aexit__") respectively. This parameter defaults to `bool | None`.
  * [gh-118650](https://github.com/python/cpython/issues/118650): The `enum` module allows method named `_repr_*` to be defined on `Enum` types.
  * [gh-118648](https://github.com/python/cpython/issues/118648): Add type parameter defaults to [`typing.Generator`](https://docs.python.org/3/library/typing.html#typing.Generator "typing.Generator") and [`typing.AsyncGenerator`](https://docs.python.org/3/library/typing.html#typing.AsyncGenerator "typing.AsyncGenerator").
  * [gh-101137](https://github.com/python/cpython/issues/101137): Mime type `text/x-rst` is now supported by [`mimetypes`](https://docs.python.org/3/library/mimetypes.html#module-mimetypes "mimetypes: Mapping of filename extensions to MIME types.").
  * [gh-118164](https://github.com/python/cpython/issues/118164): The Python implementation of the `decimal` module could appear to hang in relatively small power cases (like `2**117`) if context precision was set to a very high value. A different method to check for exactly representable results is used now that doesn’t rely on computing `10**precision` (which could be effectively too large to compute).
  * [gh-111744](https://github.com/python/cpython/issues/111744): `breakpoint()` and `pdb.set_trace()` now enter the debugger immediately after the call rather than before the next line is executed.
  * [gh-118500](https://github.com/python/cpython/issues/118500): Add [`pdb`](https://docs.python.org/3/library/pdb.html#module-pdb "pdb: The Python debugger for interactive interpreters.") support for zipapps
  * [gh-118406](https://github.com/python/cpython/issues/118406): Add signature for [`sqlite3.Connection`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection "sqlite3.Connection") objects.
  * [gh-101732](https://github.com/python/cpython/issues/101732): Use a Y2038 compatible openssl time function when available.
  * [gh-118404](https://github.com/python/cpython/issues/118404): Fix [`inspect.signature()`](https://docs.python.org/3/library/inspect.html#inspect.signature "inspect.signature") for non-comparable callables.
  * [gh-118402](https://github.com/python/cpython/issues/118402): Fix [`inspect.signature()`](https://docs.python.org/3/library/inspect.html#inspect.signature "inspect.signature") for the result of the [`functools.cmp_to_key()`](https://docs.python.org/3/library/functools.html#functools.cmp_to_key "functools.cmp_to_key") call.
  * [gh-116622](https://github.com/python/cpython/issues/116622): On Android, [`sysconfig.get_platform`](https://docs.python.org/3/library/sysconfig.html#sysconfig.get_platform "sysconfig.get_platform") now returns the format specified by [**PEP 738**](https://peps.python.org/pep-0738/).
  * [gh-118285](https://github.com/python/cpython/issues/118285): Allow to specify the signature of custom callable instances of extension type by the `__text_signature__` attribute. Specify signatures of [`operator.attrgetter`](https://docs.python.org/3/library/operator.html#operator.attrgetter "operator.attrgetter"), [`operator.itemgetter`](https://docs.python.org/3/library/operator.html#operator.itemgetter "operator.itemgetter"), and [`operator.methodcaller`](https://docs.python.org/3/library/operator.html#operator.methodcaller "operator.methodcaller") instances.
  * [gh-118314](https://github.com/python/cpython/issues/118314): Fix an edge case in [`binascii.a2b_base64()`](https://docs.python.org/3/library/binascii.html#binascii.a2b_base64 "binascii.a2b_base64") strict mode, where excessive padding is not detected when no padding is necessary.
  * [gh-118271](https://github.com/python/cpython/issues/118271): Add the `PhotoImage` methods `read()` to read an image from a file and `data()` to get the ima