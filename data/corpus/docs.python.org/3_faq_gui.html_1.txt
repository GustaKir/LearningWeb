Title: Introduction to Python GUI Toolkits
URL: https://docs.python.org/3/faq/gui.html
Summary: This section discusses available GUI toolkits for Python, highlighting tkinter as the standard library option included with most Python distributions. It notes tkinter's portability across macOS, Windows, and Unix, and hints at the existence of additional cross-platform alternatives.
---

## [General GUI Questions](https://docs.python.org/3/faq/gui.html#id2)[¶](https://docs.python.org/3/faq/gui.html#general-gui-questions "Link to this heading")
## [What GUI toolkits exist for Python?](https://docs.python.org/3/faq/gui.html#id3)[¶](https://docs.python.org/3/faq/gui.html#what-gui-toolkits-exist-for-python "Link to this heading")
Standard builds of Python include an object-oriented interface to the Tcl/Tk widget set, called [tkinter](https://docs.python.org/3/library/tk.html#tkinter). This is probably the easiest to install (since it comes included with most [binary distributions](https://www.python.org/downloads/) of Python) and use. For more info about Tk, including pointers to the source, see the [Tcl/Tk home page](https://www.tcl.tk). Tcl/Tk is fully portable to the macOS, Windows, and Unix platforms.
Depending on what platform(s) you are aiming at, there are also several alternatives. A [list of cross-platform](https://wiki.python.org/moin/GuiProgramming#Cross-Platform_Frameworks) and [platform-specific](https://wiki.python.org/moin/GuiProgramming#Platform-specific_Frameworks) GUI frameworks can be found on the python wiki.
## [Tkinter questions](https://docs.python.org/3/faq/gui.html#id4)[¶](https://docs.python.org/3/faq/gui.html#tkinter-questions "Link to this heading")
### [How do I freeze Tkinter applications?](https://docs.python.org/3/faq/gui.html#id5)[¶](https://docs.python.org/3/faq/gui.html#how-do-i-freeze-tkinter-applications "Link to this heading")
Freeze is a tool to create stand-alone applications. When freezing Tkinter applications, the applications will not be truly stand-alone, as the application will still need the Tcl and Tk libraries.
One solution is to ship the application with the Tcl and Tk libraries, and point to them at run-time using the `TCL_LIBRARY` and `TK_LIBRARY` environment variables.
Various third-party freeze libraries such as py2exe and cx_Freeze have handling for Tkinter applications built-in.
### [Can I have Tk events handled while waiting for I/O?](https://docs.python.org/3/faq/gui.html#id6)[¶](https://docs.python.org/3/faq/gui.html#can-i-have-tk-events-handled-while-waiting-for-i-o "Link to this heading")
On platforms other than Windows, yes, and you don’t even need threads! But you’ll have to restructure your I/O code a bit. Tk has the equivalent of Xt’s `XtAddInput()` call, which allows you to register a callback function which will be called from the Tk mainloop when I/O is possible on a file descriptor. See [File Handlers](https://docs.python.org/3/library/tkinter.html#tkinter-file-handlers).
### [I can’t get key bindings to work in Tkinter: why?](https://docs.python.org/3/faq/gui.html#id7)[¶](https://docs.python.org/3/faq/gui.html#i-can-t-get-key-bindings-to-work-in-tkinter-why "Link to this heading")
An often-heard complaint is that event handlers [bound](https://docs.python.org/3/library/tkinter.html#bindings-and-events) to events with the `bind()` method don’t get handled even when the appropriate key is pressed.
The most common cause is that the widget to which the binding applies doesn’t have “keyboard focus”. Check out the Tk documentation for the focus command. Usually a widget is given the keyboard focus by clicking in it (but not for labels; see the takefocus option).
### [Table of Contents](https://docs.python.org/3/contents.html)
  * [Graphic User Interface FAQ](https://docs.python.org/3/faq/gui.html)
    * [General GUI Questions](https://docs.python.org/3/faq/gui.html#general-gui-questions)
    * [What GUI toolkits exist for Python?](https://docs.python.org/3/faq/gui.html#what-gui-toolkits-exist-for-python)
    * [Tkinter questions](https://docs.python.org/3/faq/gui.html#tkinter-questions)


#### Previous topic
[Python on Windows FAQ](https://docs.python.org/3/faq/windows.html "previous chapter")
#### Next topic
[“Why is Python Installed on my Computer?” FAQ](https://docs.python.org/3/faq/installed.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/faq/gui.rst)