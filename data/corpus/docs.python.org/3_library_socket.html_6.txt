Title: Socket Module TCP Constants
URL: https://docs.python.org/3/library/socket.html
Summary: This section details various TCP-related constants defined in the Python socket module, often utilized with `setsockopt()` and `getsockopt()` methods. It notes updates in version changes, including the addition of constants like `SO_DOMAIN`, `TCP_USER_TIMEOUT`, and platform-specific constants on Windows.
---

TCP_*
    
Many constants of these forms, documented in the Unix documentation on sockets and/or the IP protocol, are also defined in the socket module. They are generally used in arguments to the [`setsockopt()`](https://docs.python.org/3/library/socket.html#socket.socket.setsockopt "socket.socket.setsockopt") and [`getsockopt()`](https://docs.python.org/3/library/socket.html#socket.socket.getsockopt "socket.socket.getsockopt") methods of socket objects. In most cases, only those symbols that are defined in the Unix header files are defined; for a few symbols, default values are provided.
Changed in version 3.6: `SO_DOMAIN`, `SO_PROTOCOL`, `SO_PEERSEC`, `SO_PASSSEC`, `TCP_USER_TIMEOUT`, `TCP_CONGESTION` were added.
Changed in version 3.6.5: On Windows, `TCP_FASTOPEN`, `TCP_KEEPCNT` appear if run-time Windows supports.
Changed in version 3.7: `TCP_NOTSENT_LOWAT` was added.
On Windows, `TCP_KEEPIDLE`, `TCP_KEEPINTVL` appear if run-time Windows supports.
Changed in version 3.10: `IP_RECVTOS` was added. Added `TCP_KEEPALIVE`. On MacOS this constant can be used in the same way that `TCP_KEEPIDLE` is used on Linux.
Changed in version 3.11: Added `TCP_CONNECTION_INFO`. On MacOS this constant can be used in the same way that `TCP_INFO` is used on Linux and BSD.
Changed in version 3.12: Added `SO_RTABLE` and `SO_USER_COOKIE`. On OpenBSD and FreeBSD respectively those constants can be used in the same way that `SO_MARK` is used on Linux. Also added missing TCP socket options from Linux: `TCP_MD5SIG`, `TCP_THIN_LINEAR_TIMEOUTS`, `TCP_THIN_DUPACK`, `TCP_REPAIR`, `TCP_REPAIR_QUEUE`, `TCP_QUEUE_SEQ`, `TCP_REPAIR_OPTIONS`, `TCP_TIMESTAMP`, `TCP_CC_INFO`, `TCP_SAVE_SYN`, `TCP_SAVED_SYN`, `TCP_REPAIR_WINDOW`, `TCP_FASTOPEN_CONNECT`, `TCP_ULP`, `TCP_MD5SIG_EXT`, `TCP_FASTOPEN_KEY`, `TCP_FASTOPEN_NO_COOKIE`, `TCP_ZEROCOPY_RECEIVE`, `TCP_INQ`, `TCP_TX_DELAY`. Added `IP_PKTINFO`, `IP_UNBLOCK_SOURCE`, `IP_BLOCK_SOURCE`, `IP_ADD_SOURCE_MEMBERSHIP`, `IP_DROP_SOURCE_MEMBERSHIP`.
Changed in version 3.13: Added `SO_BINDTOIFINDEX`. On Linux this constant can be used in the same way that `SO_BINDTODEVICE` is used, but with the index of a network interface instead of its name. 

socket.AF_CAN[¶](https://docs.python.org/3/library/socket.html#socket.AF_CAN "Link to this definition")


socket.PF_CAN[¶](https://docs.python.org/3/library/socket.html#socket.PF_CAN "Link to this definition")


SOL_CAN_*


CAN_*
    
Many constants of these forms, documented in the Linux documentation, are also defined in the socket module.
[Availability](https://docs.python.org/3/library/intro.html#availability): Linux >= 2.6.25, NetBSD >= 8.
Added in version 3.3.
Changed in version 3.11: NetBSD support was added.
Changed in version 3.13.3 (unreleased): Restored missing `CAN_RAW_ERR_FILTER` on Linux. 

socket.CAN_BCM[¶](https://docs.python.org/3/library/socket.html#socket.CAN_BCM "Link to this definition")


CAN_BCM_*
    
CAN_BCM, in the CAN protocol family, is the broadcast manager (BCM) protocol. Broadcast manager constants, documented in the Linux documentation, are also defined in the socket module.
[Availability](https://docs.python.org/3/library/intro.html#availability): Linux >= 2.6.25.
Note
The `CAN_BCM_CAN_FD_FRAME` flag is only available on Linux >= 4.8.
Added in version 3.4. 

socket.CAN_RAW_FD_FRAMES[¶](https://docs.python.org/3/library/socket.html#socket.CAN_RAW_FD_FRAMES "Link to this definition")
    
Enables CAN FD support in a CAN_RAW socket. This is disabled by default. This allows your application to send both CAN and CAN FD frames; however, you must accept both CAN and CAN FD frames when reading from the socket.
This constant is documented in the Linux documentation.
[Availability](https://docs.python.org/3/library/intro.html#availability): Linux >= 3.6.
Added in version 3.5. 

socket.CAN_RAW_JOIN_FILTERS[¶](https://docs.python.org/3/library/socket.html#socket.CAN_RAW_JOIN_FILTERS "Link to this definition")
    
Joins the applied CAN filters such that only CAN frames that match all given CAN filters are passed to user space.
This constant is documented in the Linux documentation.
[Availability](https://docs.python.org/3/library/intro.html#availability): Linux >= 4.1.
Added in version 3.9. 

socket.CAN_ISOTP[¶](https://docs.python.org/3/library/socket.html#socket.CAN_ISOTP "Link to this definition")
    
CAN_ISOTP, in the CAN protocol family, is the ISO-TP (ISO 15765-2) protocol. ISO-TP constants, documented in the Linux documentation.
[Availability](https://docs.python.org/3/library/intro.html#availability): Linux >= 2.6.25.
Added in version 3.7. 

socket.CAN_J1939[¶](https://docs.python.org/3/library/socket.html#socket.CAN_J1939 "Link to this definition")
    
CAN_J1939, in the CAN protocol family, is the SAE J1939 protocol. J1939 constants, documented in the Linux documentation.
[Availability](https://docs.python.org/3/library/intro.html#availability): Linux >= 5.4.
Added in version 3.9.