Title: Python 3 Changelog Highlights
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: Recent updates include a fix for a deadlock in `PyGILState_Ensure()`, enhancements to `PyType_Ready()` for better type configuration, and a mapping of WASI `ENOTCAPABLE` to `PermissionError`. These changes improve thread state allocation, type object integrity, and error handling.
---

Smith [Google] and Mark Shannon.
  * [gh-96071](https://github.com/python/cpython/issues/96071): Fix a deadlock in [`PyGILState_Ensure()`](https://docs.python.org/3/c-api/init.html#c.PyGILState_Ensure "PyGILState_Ensure") when allocating new thread state. Patch by Kumar Aditya.
  * [gh-96046](https://github.com/python/cpython/issues/96046): [`PyType_Ready()`](https://docs.python.org/3/c-api/type.html#c.PyType_Ready "PyType_Ready") now initializes `ht_cached_keys` and performs additional checks to ensure that type objects are properly configured. This avoids crashes in 3rd party packages that don’t use regular API to create new types.
  * [gh-96005](https://github.com/python/cpython/issues/96005): On WASI [`ENOTCAPABLE`](https://docs.python.org/3/library/errno.html#errno.ENOTCAPABLE "errno.ENOTCAPABLE") is now mapped to [`PermissionError`](https://docs.python.org/3/library/exceptions.html#PermissionError "PermissionError"). The [`errno`](https://docs.python.org/3/library/errno.html#module-errno "errno: Standard errno system symbols.") modules exposes the new error number. `getpath.py` now ignores [`PermissionError`](https://docs.python.org/3/library/exceptions.html#PermissionError "PermissionError") when it cannot open landmark files `pybuilddir.txt` and `pyenv.cfg`.
  * [gh-93678](https://github.com/python/cpython/issues/93678): Added test a harness for direct unit tests of the compiler’s optimization stage. The `_testinternalcapi.optimize_cfg()` function runs the optimiser on a sequence of instructions. The `CfgOptimizationTestCase` class in `test.support` has utilities for invoking the optimizer and checking the output.
  * [gh-95245](https://github.com/python/cpython/issues/95245): Reduces the size of a “simple” Python object from 8 to 6 words by moving the weakreflist pointer into the pre-header directly before the object’s dict/values pointer.
  * [gh-90997](https://github.com/python/cpython/issues/90997): Compile virtual [`try`](https://docs.python.org/3/reference/compound_stmts.html#try)/[`except`](https://docs.python.org/3/reference/compound_stmts.html#except) blocks to handle exceptions raised during [`close()`](https://docs.python.org/3/reference/expressions.html#generator.close "generator.close") or [`throw()`](https://docs.python.org/3/reference/expressions.html#generator.throw "generator.throw") calls through a suspended frame.
  * [gh-95977](https://github.com/python/cpython/issues/95977): Optimized calling [`__get__()`](https://docs.python.org/3/reference/datamodel.html#object.__get__ "object.__get__") with vectorcall. Patch by Kumar Aditya.
  * [gh-91210](https://github.com/python/cpython/issues/91210): Improve error message when a parameter without a default value follows one with a default value, and show the same message, even when the non-default/default sequence is preceded by positional-only parameters.
  * [gh-95922](https://github.com/python/cpython/issues/95922): Fixed bug where the compiler’s `eliminate_empty_basic_blocks` function ignores the last block of the code unit.
  * [gh-95818](https://github.com/python/cpython/issues/95818): Skip over incomplete frames in [`PyThreadState_GetFrame()`](https://docs.python.org/3/c-api/init.html#c.PyThreadState_GetFrame "PyThreadState_GetFrame").
  * [gh-95876](https://github.com/python/cpython/issues/95876): Fix format string in `_PyPegen_raise_error_known_location` that can lead to memory corruption on some 64bit systems. The function was building a tuple with `i` (int) instead of `n` (Py_ssize_t) for Py_ssize_t arguments.
  * [gh-95605](https://github.com/python/cpython/issues/95605): Fix misleading contents of error message when converting an all-whitespace string to [`float`](https://docs.python.org/3/library/functions.html#float "float").
  * [gh-95150](https://github.com/python/cpython/issues/95150): Update code object hashing and equality to consider all debugging and exception handling tables. This fixes an issue where certain non-identical code objects could be “deduplicated” during compilation.
  * [gh-91146](https://github.com/python/cpython/issues/91146): Reduce allocation size of [`list`](https://docs.python.org/3/library/stdtypes.html#list "list") from [`str.split()`](https://docs.python.org/3/library/stdtypes.html#str.split "str.split") and [`str.rsplit()`](https://docs.python.org/3/library/stdtypes.html#str.rsplit "str.rsplit"). Patch by Donghee Na and Inada Naoki.
  * [gh-87092](https://github.com/python/cpython/issues/87092): Create a ‘jump target label’ abstraction in the compiler so that the compiler’s codegen stage does not work directly with basic blocks. This prepares the code for changes to the underlying CFG generation mechanism.
  * [gh-95355](https://github.com/python/cpython/issues/95355): `_PyPegen_Parser_New` now properly detects token memory allocation errors. Patch by Honglin Zhu.
  * [gh-90081](https://github.com/python/cpython/issues/90081): Run Python code in tracer/profiler function at full speed.