Title: Core and Builtins Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section lists several bug fixes and improvements in Python's core and built-in functions, including fixes for issues with `syslog.openlog()`, f-string behavior, traceback for naked exceptions, and `anext()` handling.
---

### Core and Builtins[¶](https://docs.python.org/3/whatsnew/changelog.html#id14 "Link to this heading")
  * [gh-129345](https://github.com/python/cpython/issues/129345): Fix null pointer dereference in [`syslog.openlog()`](https://docs.python.org/3/library/syslog.html#syslog.openlog "syslog.openlog") when an audit hook raises an exception.
  * [gh-129093](https://github.com/python/cpython/issues/129093): Fix f-strings such as `f'{expr=}'` sometimes not displaying the full expression when the expression contains `!=`.
  * [gh-124363](https://github.com/python/cpython/issues/124363): Treat debug expressions in f-string as raw strings. Patch by Pablo Galindo
  * [gh-128799](https://github.com/python/cpython/issues/128799): Add frame of `except*` to traceback when it wraps a naked exception.
  * [gh-128078](https://github.com/python/cpython/issues/128078): Fix a [`SystemError`](https://docs.python.org/3/library/exceptions.html#SystemError "SystemError") when using [`anext()`](https://docs.python.org/3/library/functions.html#anext "anext") with a default tuple value. Patch by Bénédikt Tran.
  * [gh-128717](https://github.com/python/cpython/issues/128717): Fix a crash when setting the recursion limit while other threads are active on the [free threaded](https://docs.python.org/3/glossary.html#term-free-threading) build.
  * [gh-128330](https://github.com/python/cpython/issues/128330): Restore terminal control characters on REPL exit.
  * [gh-128079](https://github.com/python/cpython/issues/128079): Fix a bug where [`except*`](https://docs.python.org/3/reference/compound_stmts.html#except-star) does not properly check the return value of an [`ExceptionGroup`](https://docs.python.org/3/library/exceptions.html#ExceptionGroup "ExceptionGroup")’s [`split()`](https://docs.python.org/3/library/exceptions.html#BaseExceptionGroup.split "BaseExceptionGroup.split") function, leading to a crash in some cases. Now when [`split()`](https://docs.python.org/3/library/exceptions.html#BaseExceptionGroup.split "BaseExceptionGroup.split") returns an invalid object, [`except*`](https://docs.python.org/3/reference/compound_stmts.html#except-star) raises a [`TypeError`](https://docs.python.org/3/library/exceptions.html#TypeError "TypeError") with the original raised [`ExceptionGroup`](https://docs.python.org/3/library/exceptions.html#ExceptionGroup "ExceptionGroup") object chained to it.
  * [gh-128030](https://github.com/python/cpython/issues/128030): Avoid error from calling `PyModule_GetFilenameObject` on a non-module object when importing a non-existent symbol from a non-module object.
  * [gh-127903](https://github.com/python/cpython/issues/127903): `Objects/unicodeobject.c`: fix a crash on DEBUG builds in `_copy_characters` when there is nothing to copy.
  * [gh-127599](https://github.com/python/cpython/issues/127599): Fix statistics for increments of object reference counts (in particular, when a reference count was increased by more than 1 in a single operation).
  * [gh-127651](https://github.com/python/cpython/issues/127651): When raising [`ImportError`](https://docs.python.org/3/library/exceptions.html#ImportError "ImportError") for missing symbols in `from` imports, use `__file__` in the error message if `__spec__.origin` is not a location
  * [gh-127582](https://github.com/python/cpython/issues/127582): Fix non-thread-safe object resurrection when calling finalizers and watcher callbacks in the free threading build.
  * [gh-127434](https://github.com/python/cpython/issues/127434): The iOS compiler shims can now accept arguments with spaces.
  * [gh-127536](https://github.com/python/cpython/issues/127536): Add missing locks around some list assignment operations in the free threading build.
  * [gh-126862](https://github.com/python/cpython/issues/126862): Fix a possible overflow when a class inherits from an absurd number of super-classes. Reported by Valery Fedorenko. Patch by Bénédikt Tran.
  * [gh-127349](https://github.com/python/cpython/issues/127349): Fixed the error when resizing terminal in Python REPL. Patch by Semyon Moroz.
  * [gh-126076](https://github.com/python/cpython/issues/126076): Relocated objects such as `tuple`, `bytes` and `str` objects are properly tracked by [`tracemalloc`](https://docs.python.org/3/library/tracemalloc.html#module-tracemalloc "tracemalloc: Trace memory allocations.") and its associated hooks. Patch by Pablo Galindo.


### C API[¶](https://docs.python.org/3/whatsnew/changelog.html#id15 "Link to this heading")
  * [gh-127791](https://github.com/python/cpython/issues/127791): Fix loss of callbacks after more than one call to [`PyUnstable_AtExit()`](https://docs.python.org/3/c-api/init.html#c.PyUnstable_AtExit "PyUnstable_AtExit").