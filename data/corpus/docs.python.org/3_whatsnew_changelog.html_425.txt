Title: Python Documentation Updates and Fixes
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This document outlines recent updates to Python, including enhancements to the pydoc system for displaying documentation strings for all objects with a __doc__ attribute, the addition of new functionality in the statistics and random modules, and various bug fixes such as `SpooledTemporaryFile.seek()` and `random.getrandbits(0)`.
---

c "pydoc: Documentation generator and online help system.") the documentation string is now shown not only for class, function, method etc, but for any object that has its own `__doc__` attribute.
  * [bpo-40287](https://bugs.python.org/issue?@action=redirect&bpo=40287): Fixed `SpooledTemporaryFile.seek()` to return the position.
  * [bpo-40290](https://bugs.python.org/issue?@action=redirect&bpo=40290): Added zscore() to statistics.NormalDist().
  * [bpo-40282](https://bugs.python.org/issue?@action=redirect&bpo=40282): Allow `random.getrandbits(0)` to succeed and to return 0.
  * [bpo-40286](https://bugs.python.org/issue?@action=redirect&bpo=40286): Add [`random.randbytes()`](https://docs.python.org/3/library/random.html#random.randbytes "random.randbytes") function and `random.Random.randbytes()` method to generate random bytes.
  * [bpo-40277](https://bugs.python.org/issue?@action=redirect&bpo=40277): [`collections.namedtuple()`](https://docs.python.org/3/library/collections.html#collections.namedtuple "collections.namedtuple") now provides a human-readable repr for its field accessors.
  * [bpo-40270](https://bugs.python.org/issue?@action=redirect&bpo=40270): The included copy of sqlite3 on Windows is now compiled with the json extension. This allows the use of functions such as `json_object`.
  * [bpo-29255](https://bugs.python.org/issue?@action=redirect&bpo=29255): Wait in `KqueueSelector.select` when no fds are registered
  * [bpo-40260](https://bugs.python.org/issue?@action=redirect&bpo=40260): Ensure [`modulefinder`](https://docs.python.org/3/library/modulefinder.html#module-modulefinder "modulefinder: Find modules used by a script.") uses [`io.open_code()`](https://docs.python.org/3/library/io.html#io.open_code "io.open_code") and respects coding comments.
  * [bpo-40234](https://bugs.python.org/issue?@action=redirect&bpo=40234): Allow again to spawn daemon threads in subinterpreters (revert change which denied them).
  * [bpo-39207](https://bugs.python.org/issue?@action=redirect&bpo=39207): Workers in [`ProcessPoolExecutor`](https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.ProcessPoolExecutor "concurrent.futures.ProcessPoolExecutor") are now spawned on demand, only when there are no available idle workers to reuse. This optimizes startup overhead and reduces the amount of lost CPU time to idle workers. Patch by Kyle Stanley.
  * [bpo-40091](https://bugs.python.org/issue?@action=redirect&bpo=40091): Fix a hang at fork in the logging module: the new private _at_fork_reinit() method is now used to reinitialize locks at fork in the child process.
  * [bpo-40149](https://bugs.python.org/issue?@action=redirect&bpo=40149): Implement traverse and clear slots in _abc._abc_data type.
  * [bpo-40208](https://bugs.python.org/issue?@action=redirect&bpo=40208): Remove deprecated `symtable.SymbolTable.has_exec()`.
  * [bpo-40196](https://bugs.python.org/issue?@action=redirect&bpo=40196): Fix a bug in the [`symtable`](https://docs.python.org/3/library/symtable.html#module-symtable "symtable: Interface to the compiler's internal symbol tables.") module that was causing incorrectly report global variables as local. Patch by Pablo Galindo.
  * [bpo-40190](https://bugs.python.org/issue?@action=redirect&bpo=40190): Add support for `_SC_AIX_REALMEM` to `posix.sysconf()`.
  * [bpo-40182](https://bugs.python.org/issue?@action=redirect&bpo=40182): Removed the `_field_types` attribute of the [`typing.NamedTuple`](https://docs.python.org/3/library/typing.html#typing.NamedTuple "typing.NamedTuple") class.
  * [bpo-36517](https://bugs.python.org/issue?@action=redirect&bpo=36517): Multiple inheritance with [`typing.NamedTuple`](https://docs.python.org/3/library/typing.html#typing.NamedTuple "typing.NamedTuple") now raises an error instead of silently ignoring other types.
  * [bpo-40126](https://bugs.python.org/issue?@action=redirect&bpo=40126): Fixed reverting multiple patches in unittest.mock. Patcher’s `__exit__()` is now never called if its `__enter__()` is failed. Returning true from `__exit__()` silences now the exception.
  * [bpo-40094](https://bugs.python.org/issue?@action=redirect&bpo=40094): CGIHTTPRequestHandler of http.server now logs the CGI script exit code, rather than the CGI script exit status of os.waitpid(). For example, if the script is killed by signal 11, it now logs: “CGI script exit code -11.”
  * [bpo-40108](https://bugs.python.org/issue?@action=redirect&bpo=40108): Improve the error message when triying to import a module using [`runpy`](https://docs.python.org/3/library/runpy.html#module-runpy "runpy: Locate and run Python modules without importing them first.") and incorrectly using the “.py” extension at the end of the module name.