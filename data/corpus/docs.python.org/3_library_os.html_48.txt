Title: OS Module: Eventfd Functions
URL: https://docs.python.org/3/library/os.html
Summary: This chunk describes two functions in the OS module for handling event file descriptors in Python: `os.eventfd_read`, which reads a 64-bit unsigned integer from an eventfd descriptor, and `os.eventfd_write`, which writes a 64-bit unsigned integer to an eventfd descriptor. Both functions were added in Python 3.10 and have specific Linux version requirements.
---

```

[Availability](https://docs.python.org/3/library/intro.html#availability): Linux >= 2.6.27 with glibc >= 2.8
Added in version 3.10. 

os.eventfd_read(_fd_)[¶](https://docs.python.org/3/library/os.html#os.eventfd_read "Link to this definition")
    
Read value from an [`eventfd()`](https://docs.python.org/3/library/os.html#os.eventfd "os.eventfd") file descriptor and return a 64 bit unsigned int. The function does not verify that _fd_ is an [`eventfd()`](https://docs.python.org/3/library/os.html#os.eventfd "os.eventfd").
[Availability](https://docs.python.org/3/library/intro.html#availability): Linux >= 2.6.27
Added in version 3.10. 

os.eventfd_write(_fd_ , _value_)[¶](https://docs.python.org/3/library/os.html#os.eventfd_write "Link to this definition")
    
Add value to an [`eventfd()`](https://docs.python.org/3/library/os.html#os.eventfd "os.eventfd") file descriptor. _value_ must be a 64 bit unsigned int. The function does not verify that _fd_ is an [`eventfd()`](https://docs.python.org/3/library/os.html#os.eventfd "os.eventfd").
[Availability](https://docs.python.org/3/library/intro.html#availability): Linux >= 2.6.27
Added in version 3.10. 

os.EFD_CLOEXEC[¶](https://docs.python.org/3/library/os.html#os.EFD_CLOEXEC "Link to this definition")
    
Set close-on-exec flag for new [`eventfd()`](https://docs.python.org/3/library/os.html#os.eventfd "os.eventfd") file descriptor.
[Availability](https://docs.python.org/3/library/intro.html#availability): Linux >= 2.6.27
Added in version 3.10. 

os.EFD_NONBLOCK[¶](https://docs.python.org/3/library/os.html#os.EFD_NONBLOCK "Link to this definition")
    
Set [`O_NONBLOCK`](https://docs.python.org/3/library/os.html#os.O_NONBLOCK "os.O_NONBLOCK") status flag for new [`eventfd()`](https://docs.python.org/3/library/os.html#os.eventfd "os.eventfd") file descriptor.
[Availability](https://docs.python.org/3/library/intro.html#availability): Linux >= 2.6.27
Added in version 3.10. 

os.EFD_SEMAPHORE[¶](https://docs.python.org/3/library/os.html#os.EFD_SEMAPHORE "Link to this definition")
    
Provide semaphore-like semantics for reads from an [`eventfd()`](https://docs.python.org/3/library/os.html#os.eventfd "os.eventfd") file descriptor. On read the internal counter is decremented by one.
[Availability](https://docs.python.org/3/library/intro.html#availability): Linux >= 2.6.30
Added in version 3.10.
### Timer File Descriptors[¶](https://docs.python.org/3/library/os.html#timer-file-descriptors "Link to this heading")
Added in version 3.13.
These functions provide support for Linux’s _timer file descriptor_ API. Naturally, they are all only available on Linux. 

os.timerfd_create(_clockid_ , _/_ , _*_ , _flags =0_)[¶](https://docs.python.org/3/library/os.html#os.timerfd_create "Link to this definition")
    
Create and return a timer file descriptor (_timerfd_).
The file descriptor returned by [`timerfd_create()`](https://docs.python.org/3/library/os.html#os.timerfd_create "os.timerfd_create") supports:
  * [`read()`](https://docs.python.org/3/library/os.html#os.read "os.read")
  * [`select()`](https://docs.python.org/3/library/select.html#select.select "select.select")
  * [`poll()`](https://docs.python.org/3/library/select.html#select.poll "select.poll")


The file descriptor’s [`read()`](https://docs.python.org/3/library/os.html#os.read "os.read") method can be called with a buffer size of 8. If the timer has already expired one or more times, [`read()`](https://docs.python.org/3/library/os.html#os.read "os.read") returns the number of expirations with the host’s endianness, which may be converted to an [`int`](https://docs.python.org/3/library/functions.html#int "int") by `int.from_bytes(x, byteorder=sys.byteorder)`.
[`select()`](https://docs.python.org/3/library/select.html#select.select "select.select") and [`poll()`](https://docs.python.org/3/library/select.html#select.poll "select.poll") can be used to wait until timer expires and the file descriptor is readable.
_clockid_ must be a valid [clock ID](https://docs.python.org/3/library/time.html#time-clock-id-constants), as defined in the [`time`](https://docs.python.org/3/library/time.html#module-time "time: Time access and conversions.") module:
  * [`time.CLOCK_REALTIME`](https://docs.python.org/3/library/time.html#time.CLOCK_REALTIME "time.CLOCK_REALTIME")
  * [`time.CLOCK_MONOTONIC`](https://docs.python.org/3/library/time.html#time.CLOCK_MONOTONIC "time.CLOCK_MONOTONIC")
  * [`time.CLOCK_BOOTTIME`](https://docs.python.org/3/library/time.html#time.CLOCK_BOOTTIME "time.CLOCK_BOOTTIME") (Since Linux 3.15 for timerfd_create)