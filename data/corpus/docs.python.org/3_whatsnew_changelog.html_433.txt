Title: Python 3.9 Changelog: Multiprocessing and AST Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: In Python 3.9, the `multiprocessing` module now supports abstract socket addresses, enhancing the creation of Listener objects by avoiding large temporary-file-generated addresses. Additionally, the `ast.dump()` function has been updated to omit optional fields and attributes with default values, now reflecting these defaults as class attributes.
---

9850): [`multiprocessing`](https://docs.python.org/3/library/multiprocessing.html#module-multiprocessing "multiprocessing: Process-based parallelism.") now supports abstract socket addresses (if abstract sockets are supported in the running platform). When creating arbitrary addresses (like when default-constructing [`multiprocessing.connection.Listener`](https://docs.python.org/3/library/multiprocessing.html#multiprocessing.connection.Listener "multiprocessing.connection.Listener") objects) abstract sockets are preferred to avoid the case when the temporary-file-generated address is too large for an AF_UNIX socket address. Patch by Pablo Galindo.
  * [bpo-36287](https://bugs.python.org/issue?@action=redirect&bpo=36287): [`ast.dump()`](https://docs.python.org/3/library/ast.html#ast.dump "ast.dump") no longer outputs optional fields and attributes with default values. The default values for optional fields and attributes of AST nodes are now set as class attributes (e.g. `Constant.kind` is set to `None`).
  * [bpo-39889](https://bugs.python.org/issue?@action=redirect&bpo=39889): Fixed [`ast.unparse()`](https://docs.python.org/3/library/ast.html#ast.unparse "ast.unparse") for extended slices containing a single element (e.g. `a[i:j,]`). Remove redundant tuples when index with a tuple (e.g. `a[i, j]`).
  * [bpo-39828](https://bugs.python.org/issue?@action=redirect&bpo=39828): Fix [`json.tool`](https://docs.python.org/3/library/json.html#module-json.tool "json.tool: A command line to validate and pretty-print JSON.") to catch [`BrokenPipeError`](https://docs.python.org/3/library/exceptions.html#BrokenPipeError "BrokenPipeError"). Patch by Donghee Na.
  * [bpo-13487](https://bugs.python.org/issue?@action=redirect&bpo=13487): Avoid a possible _“RuntimeError: dictionary changed size during iteration”_ from [`inspect.getmodule()`](https://docs.python.org/3/library/inspect.html#inspect.getmodule "inspect.getmodule") when it tried to loop through [`sys.modules`](https://docs.python.org/3/library/sys.html#sys.modules "sys.modules").
  * [bpo-39674](https://bugs.python.org/issue?@action=redirect&bpo=39674): Revert “[bpo-37330](https://bugs.python.org/issue?@action=redirect&bpo=37330): open() no longer accept ‘U’ in file mode”. The “U” mode of open() is kept in Python 3.9 to ease transition from Python 2.7, but will be removed in Python 3.10.
  * [bpo-28577](https://bugs.python.org/issue?@action=redirect&bpo=28577): The hosts method on 32-bit prefix length IPv4Networks and 128-bit prefix IPv6Networks now returns a list containing the single Address instead of an empty list.
  * [bpo-39826](https://bugs.python.org/issue?@action=redirect&bpo=39826): Add getConnection method to logging HTTPHandler to enable custom connections.
  * [bpo-39763](https://bugs.python.org/issue?@action=redirect&bpo=39763): Reimplement `distutils.spawn.spawn` function with the [`subprocess`](https://docs.python.org/3/library/subprocess.html#module-subprocess "subprocess: Subprocess management.") module.
  * [bpo-39794](https://bugs.python.org/issue?@action=redirect&bpo=39794): Add –without-decimal-contextvar build option. This enables a thread-local rather than a coroutine local context.
  * [bpo-36144](https://bugs.python.org/issue?@action=redirect&bpo=36144): [`collections.defaultdict`](https://docs.python.org/3/library/collections.html#collections.defaultdict "collections.defaultdict") now implements `|` ([**PEP 584**](https://peps.python.org/pep-0584/)).
  * [bpo-39517](https://bugs.python.org/issue?@action=redirect&bpo=39517): Fix runpy.run_path() when using pathlike objects
  * [bpo-39775](https://bugs.python.org/issue?@action=redirect&bpo=39775): Change `inspect.Signature.parameters` back to `collections.OrderedDict`. This was changed to `dict` in Python 3.9.0a4.
  * [bpo-39678](https://bugs.python.org/issue?@action=redirect&bpo=39678): Refactor queue_manager in [`concurrent.futures.ProcessPoolExecutor`](https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.ProcessPoolExecutor "concurrent.futures.ProcessPoolExecutor") to make it easier to maintain.
  * [bpo-39764](https://bugs.python.org/issue?@action=redirect&bpo=39764): Fix AttributeError when calling get_stack on a PyAsyncGenObject Task
  * [bpo-39769](https://bugs.python.org/issue?@action=redirect&bpo=39769): The [`compileall.compile_dir()`](https://docs.python.org/3/library/compileall.html#compileall.compile_dir "compileall.compile_dir") function’s _ddir_ parameter and the compileall command line flag `-d` no longer write the wrong pathname to the generated pyc file for submodules beneath the root of the directory tree being compiled.