Title: BytesGenerator Class in email.generator Module
URL: https://docs.python.org/3/library/email.generator.html
Summary: The BytesGenerator class is designed to write email messages to a specified file-like object. It utilizes the flatten method for formatting messages and supports surrogateescape encoded text through the write method. The output file-like object must be able to handle binary data and can include an optional setting to mangle 'From' headers.
---

_class_ email.generator.BytesGenerator(_outfp_ , _mangle_from_ =None_, _maxheaderlen =None_, _*_ , _policy =None_)[Â¶](https://docs.python.org/3/library/email.generator.html#email.generator.BytesGenerator "Link to this definition")
    
Return a [`BytesGenerator`](https://docs.python.org/3/library/email.generator.html#email.generator.BytesGenerator "email.generator.BytesGenerator") object that will write any message provided to the [`flatten()`](https://docs.python.org/3/library/email.generator.html#email.generator.BytesGenerator.flatten "email.generator.BytesGenerator.flatten") method, or any surrogateescape encoded text provided to the [`write()`](https://docs.python.org/3/library/email.generator.html#email.generator.BytesGenerator.write "email.generator.BytesGenerator.write") method, to the [file-like object](https://docs.python.org/3/glossary.html#term-file-like-object) _outfp_. _outfp_ must support a `write` method that accepts binary data.
If optional _mangle_from__ is `True`, put a `>` character in front of any line in the body that starts with the exact string `"From "`, that is `From` followed by a space at the beginning of a line. _mangle_from__ defaults to the value of the [`mangle_from_`](https://docs.python.org/3/library/email.policy.html#email.policy.Policy.mangle_from_ "email.policy.Policy.mangle_from_") setting of the _policy_ (which is `True` for the [`compat32`](https://docs.python.org/3/library/email.policy.html#email.policy.compat32 "email.policy.compat32") policy and `False` for all others). _mangle_from__ is intended for use when messages are stored in Unix mbox format (see [`mailbox`](https://docs.python.org/3/library/mailbox.html#module-mailbox "mailbox: Manipulate mailboxes in various formats") and [WHY THE CONTENT-LENGTH FORMAT IS BAD](https://www.jwz.org/doc/content-length.html)).
If _maxheaderlen_ is not `None`, refold any header lines that are longer than _maxheaderlen_ , or if `0`, do not rewrap any headers. If _manheaderlen_ is `None` (the default), wrap headers and other message lines according to the _policy_ settings.
If _policy_ is specified, use that policy to control message generation. If _policy_ is `None` (the default), use the policy associated with the [`Message`](https://docs.python.org/3/library/email.compat32-message.html#email.message.Message "email.message.Message") or [`EmailMessage`](https://docs.python.org/3/library/email.message.html#email.message.EmailMessage "email.message.EmailMessage") object passed to `flatten` to control the message generation. See [`email.policy`](https://docs.python.org/3/library/email.policy.html#module-email.policy "email.policy: Controlling the parsing and generating of messages") for details on what _policy_ controls.
Added in version 3.2.
Changed in version 3.3: Added the _policy_ keyword.
Changed in version 3.6: The default behavior of the _mangle_from__ and _maxheaderlen_ parameters is to follow the policy.