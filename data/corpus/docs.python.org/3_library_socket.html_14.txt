Title: socket.getnameinfo Method
URL: https://docs.python.org/3/library/socket.html
Summary: The `socket.getnameinfo` function translates a socket address into a 2-tuple containing the host and port. The output format depends on the `_flags_`, which can affect whether the host is presented as a domain name or numeric address, and if the port is displayed as a string name or numeric value. For IPv6 addresses, the scope ID may be appended to the host. It raises an auditing event with the argument `sockaddr` and is not available in WASI.
---

socket.getnameinfo(_sockaddr_ , _flags_)[¶](https://docs.python.org/3/library/socket.html#socket.getnameinfo "Link to this definition")
    
Translate a socket address _sockaddr_ into a 2-tuple `(host, port)`. Depending on the settings of _flags_ , the result can contain a fully qualified domain name or numeric address representation in _host_. Similarly, _port_ can contain a string port name or a numeric port number.
For IPv6 addresses, `%scope_id` is appended to the host part if _sockaddr_ contains meaningful _scope_id_. Usually this happens for multicast addresses.
For more information about _flags_ you can consult _[getnameinfo(3)](https://manpages.debian.org/getnameinfo\(3\))_.
Raises an [auditing event](https://docs.python.org/3/library/sys.html#auditing) `socket.getnameinfo` with argument `sockaddr`.
[Availability](https://docs.python.org/3/library/intro.html#availability): not WASI. 

socket.getprotobyname(_protocolname_)[¶](https://docs.python.org/3/library/socket.html#socket.getprotobyname "Link to this definition")
    
Translate an internet protocol name (for example, `'icmp'`) to a constant suitable for passing as the (optional) third argument to the [`socket()`](https://docs.python.org/3/library/socket.html#socket.socket "socket.socket") function. This is usually only needed for sockets opened in “raw” mode ([`SOCK_RAW`](https://docs.python.org/3/library/socket.html#socket.SOCK_RAW "socket.SOCK_RAW")); for the normal socket modes, the correct protocol is chosen automatically if the protocol is omitted or zero.
[Availability](https://docs.python.org/3/library/intro.html#availability): not WASI. 

socket.getservbyname(_servicename_[, _protocolname_])[¶](https://docs.python.org/3/library/socket.html#socket.getservbyname "Link to this definition")
    
Translate an internet service name and protocol name to a port number for that service. The optional protocol name, if given, should be `'tcp'` or `'udp'`, otherwise any protocol will match.
Raises an [auditing event](https://docs.python.org/3/library/sys.html#auditing) `socket.getservbyname` with arguments `servicename`, `protocolname`.
[Availability](https://docs.python.org/3/library/intro.html#availability): not WASI. 

socket.getservbyport(_port_[, _protocolname_])[¶](https://docs.python.org/3/library/socket.html#socket.getservbyport "Link to this definition")
    
Translate an internet port number and protocol name to a service name for that service. The optional protocol name, if given, should be `'tcp'` or `'udp'`, otherwise any protocol will match.
Raises an [auditing event](https://docs.python.org/3/library/sys.html#auditing) `socket.getservbyport` with arguments `port`, `protocolname`.
[Availability](https://docs.python.org/3/library/intro.html#availability): not WASI. 

socket.ntohl(_x_)[¶](https://docs.python.org/3/library/socket.html#socket.ntohl "Link to this definition")
    
Convert 32-bit positive integers from network to host byte order. On machines where the host byte order is the same as network byte order, this is a no-op; otherwise, it performs a 4-byte swap operation. 

socket.ntohs(_x_)[¶](https://docs.python.org/3/library/socket.html#socket.ntohs "Link to this definition")
    
Convert 16-bit positive integers from network to host byte order. On machines where the host byte order is the same as network byte order, this is a no-op; otherwise, it performs a 2-byte swap operation.
Changed in version 3.10: Raises [`OverflowError`](https://docs.python.org/3/library/exceptions.html#OverflowError "OverflowError") if _x_ does not fit in a 16-bit unsigned integer. 

socket.htonl(_x_)[¶](https://docs.python.org/3/library/socket.html#socket.htonl "Link to this definition")
    
Convert 32-bit positive integers from host to network byte order. On machines where the host byte order is the same as network byte order, this is a no-op; otherwise, it performs a 4-byte swap operation. 

socket.htons(_x_)[¶](https://docs.python.org/3/library/socket.html#socket.htons "Link to this definition")
    
Convert 16-bit positive integers from host to network byte order. On machines where the host byte order is the same as network byte order, this is a no-op; otherwise, it performs a 2-byte swap operation.
Changed in version 3.10: Raises [`OverflowError`](https://docs.python.org/3/library/exceptions.html#OverflowError "OverflowError") if _x_ does not fit in a 16-bit unsigned integer.