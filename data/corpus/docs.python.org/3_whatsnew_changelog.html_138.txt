Title: Python 3 Library Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: Recent updates to Python's library include changes to the `sysconfig` module, which now ignores `BrokenPipeError` during CLI operations and has transitioned from a single-file module to a package. Additional optimizations have been made to improve performance in `BaseEventLoop._run_once()`.
---

### Library[¶](https://docs.python.org/3/whatsnew/changelog.html#id132 "Link to this heading")
  * [gh-110786](https://github.com/python/cpython/issues/110786): [`sysconfig`](https://docs.python.org/3/library/sysconfig.html#module-sysconfig "sysconfig: Python's configuration information")’s CLI now ignores [`BrokenPipeError`](https://docs.python.org/3/library/exceptions.html#BrokenPipeError "BrokenPipeError"), making it exit normally if its output is being piped and the pipe closes.
  * [gh-103480](https://github.com/python/cpython/issues/103480): The [`sysconfig`](https://docs.python.org/3/library/sysconfig.html#module-sysconfig "sysconfig: Python's configuration information") module is now a package, instead of a single-file module.
  * [gh-110733](https://github.com/python/cpython/issues/110733): Micro-optimization: Avoid calling `min()`, `max()` in `BaseEventLoop._run_once()`.
  * [gh-94597](https://github.com/python/cpython/issues/94597): Added [`asyncio.EventLoop`](https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.EventLoop "asyncio.EventLoop") for use with the [`asyncio.run()`](https://docs.python.org/3/library/asyncio-runner.html#asyncio.run "asyncio.run") _loop_factory_ kwarg to avoid calling the asyncio policy system.
  * [gh-110682](https://github.com/python/cpython/issues/110682): [`runtime-checkable protocols`](https://docs.python.org/3/library/typing.html#typing.runtime_checkable "typing.runtime_checkable") used to consider `__match_args__` a protocol member in `__instancecheck__` if it was present on the protocol. Now, this attribute is ignored if it is present.
  * [gh-110488](https://github.com/python/cpython/issues/110488): Fix a couple of issues in [`pathlib.PurePath.with_name()`](https://docs.python.org/3/library/pathlib.html#pathlib.PurePath.with_name "pathlib.PurePath.with_name"): a single dot was incorrectly considered a valid name, and in `PureWindowsPath`, a name with an NTFS alternate data stream, like `a:b`, was incorrectly considered invalid.
  * [gh-110590](https://github.com/python/cpython/issues/110590): Fix a bug in `_sre.compile()` where [`TypeError`](https://docs.python.org/3/library/exceptions.html#TypeError "TypeError") would be overwritten by [`OverflowError`](https://docs.python.org/3/library/exceptions.html#OverflowError "OverflowError") when the _code_ argument was a list of non-ints.
  * [gh-65052](https://github.com/python/cpython/issues/65052): Prevent [`pdb`](https://docs.python.org/3/library/pdb.html#module-pdb "pdb: The Python debugger for interactive interpreters.") from crashing when trying to display undisplayable objects
  * [gh-110519](https://github.com/python/cpython/issues/110519): Deprecation warning about non-integer number in [`gettext`](https://docs.python.org/3/library/gettext.html#module-gettext "gettext: Multilingual internationalization services.") now always refers to the line in the user code where gettext function or method is used. Previously it could refer to a line in `gettext` code.
  * [gh-89902](https://github.com/python/cpython/issues/89902): Deprecate non-standard format specifier “N” for [`decimal.Decimal`](https://docs.python.org/3/library/decimal.html#decimal.Decimal "decimal.Decimal"). It was not documented and only supported in the C implementation.
  * [gh-110378](https://github.com/python/cpython/issues/110378): [`contextmanager()`](https://docs.python.org/3/library/contextlib.html#contextlib.contextmanager "contextlib.contextmanager") and [`asynccontextmanager()`](https://docs.python.org/3/library/contextlib.html#contextlib.asynccontextmanager "contextlib.asynccontextmanager") context managers now close an invalid underlying generator object that yields more then one value.
  * [gh-106670](https://github.com/python/cpython/issues/106670): In [`pdb`](https://docs.python.org/3/library/pdb.html#module-pdb "pdb: The Python debugger for interactive interpreters."), set convenience variable `$_exception` for post mortem debugging.
  * [gh-110365](https://github.com/python/cpython/issues/110365): Fix [`termios.tcsetattr()`](https://docs.python.org/3/library/termios.html#termios.tcsetattr "termios.tcsetattr") bug that was overwriting existing errors during parsing integers from `term` list.
  * [gh-109653](https://github.com/python/cpython/issues/109653): Slightly improve the import time of several standard-library modules by deferring imports of [`warnings`](https://docs.python.org/3/library/warnings.html#module-warnings "warnings: Issue warning messages and control their disposition.") within those modules. Patch by Alex Waygood.
  * [gh-110273](https://github.com/python/cpython/issues/110273): [`dataclasses.replace()`](https://docs.python.org/3/library/dataclasses.html#dataclasses.replace "dataclasses.replace") now raises TypeError instead of ValueError if specify keyword argument for a field declared with init=False or miss keyword argument for required InitVar field.
  * [gh-110249](https://github.com/python/cpyth