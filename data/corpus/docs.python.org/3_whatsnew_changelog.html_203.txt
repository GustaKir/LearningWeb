Title: Python 3.x Changelog Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: Recent updates include enhancements to `os.walk()` to prevent `RecursionError` in deep directory structures by switching to an iterative implementation, and the addition of dataclass support for the representation method of the `Enum` class.
---

Now both include the representation of the value that could not be serialized.
  * [gh-89727](https://github.com/python/cpython/issues/89727): Fix issue with [`os.walk()`](https://docs.python.org/3/library/os.html#os.walk "os.walk") where a [`RecursionError`](https://docs.python.org/3/library/exceptions.html#RecursionError "RecursionError") would occur on deep directory structures by adjusting the implementation of [`os.walk()`](https://docs.python.org/3/library/os.html#os.walk "os.walk") to be iterative instead of recursive.
  * [gh-94943](https://github.com/python/cpython/issues/94943): Add [Dataclass support](https://docs.python.org/3/howto/enum.html#enum-dataclass-support) to the [`Enum`](https://docs.python.org/3/library/enum.html#enum.Enum "enum.Enum") [`__repr__()`](https://docs.python.org/3/library/enum.html#enum.Enum.__repr__ "enum.Enum.__repr__"). When inheriting from a [`dataclass`](https://docs.python.org/3/library/dataclasses.html#dataclasses.dataclass "dataclasses.dataclass"), only show the field names in the value section of the member [`repr()`](https://docs.python.org/3/library/functions.html#repr "repr"), and not the dataclass’ class name.
  * [gh-83035](https://github.com/python/cpython/issues/83035): Fix [`inspect.getsource()`](https://docs.python.org/3/library/inspect.html#inspect.getsource "inspect.getsource") handling of decorator calls with nested parentheses.
  * [gh-99576](https://github.com/python/cpython/issues/99576): Fix `.save()` method for `LWPCookieJar` and `MozillaCookieJar`: saved file was not truncated on repeated save.
  * [gh-94912](https://github.com/python/cpython/issues/94912): Add [`inspect.markcoroutinefunction()`](https://docs.python.org/3/library/inspect.html#inspect.markcoroutinefunction "inspect.markcoroutinefunction") decorator which manually marks a function as a coroutine for the benefit of `iscoroutinefunction()`.
  * [gh-99509](https://github.com/python/cpython/issues/99509): Add [**PEP 585**](https://peps.python.org/pep-0585/) support for `multiprocessing.queues.Queue`.
  * [gh-99482](https://github.com/python/cpython/issues/99482): Remove `Jython` partial compatibility code from several stdlib modules.
  * [gh-99433](https://github.com/python/cpython/issues/99433): Fix [`doctest`](https://docs.python.org/3/library/doctest.html#module-doctest "doctest: Test pieces of code within docstrings.") failure on [`types.MethodWrapperType`](https://docs.python.org/3/library/types.html#types.MethodWrapperType "types.MethodWrapperType") in modules.
  * [gh-85267](https://github.com/python/cpython/issues/85267): Several improvements to [`inspect.signature()`](https://docs.python.org/3/library/inspect.html#inspect.signature "inspect.signature")’s handling of `__text_signature`. - Fixes a case where [`inspect.signature()`](https://docs.python.org/3/library/inspect.html#inspect.signature "inspect.signature") dropped parameters - Fixes a case where [`inspect.signature()`](https://docs.python.org/3/library/inspect.html#inspect.signature "inspect.signature") raised [`tokenize.TokenError`](https://docs.python.org/3/library/tokenize.html#tokenize.TokenError "tokenize.TokenError") - Allows [`inspect.signature()`](https://docs.python.org/3/library/inspect.html#inspect.signature "inspect.signature") to understand defaults involving binary operations of constants - [`inspect.signature()`](https://docs.python.org/3/library/inspect.html#inspect.signature "inspect.signature") is documented as only raising [`TypeError`](https://docs.python.org/3/library/exceptions.html#TypeError "TypeError") or [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError "ValueError"), but sometimes raised [`RuntimeError`](https://docs.python.org/3/library/exceptions.html#RuntimeError "RuntimeError"). These cases now raise [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError "ValueError") - Removed a dead code path
  * [gh-91166](https://github.com/python/cpython/issues/91166): [`asyncio`](https://docs.python.org/3/library/asyncio.html#module-asyncio "asyncio: Asynchronous I/O.") is optimized to avoid excessive copying when writing to socket and use [`sendmsg()`](https://docs.python.org/3/library/socket.html#socket.socket.sendmsg "socket.socket.sendmsg") if the platform supports it.