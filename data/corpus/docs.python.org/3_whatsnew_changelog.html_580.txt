Title: Python Changelog: macOS and C API Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section details updates for macOS, including a modern installer for 64-bit systems and improvements to third-party libraries. It also covers fixes in the C API, addressing issues such as uninitialized variables in os.dup2 and enhancements for datetime access.
---

### macOS[¶](https://docs.python.org/3/whatsnew/changelog.html#id535 "Link to this heading")
  * [bpo-32726](https://bugs.python.org/issue?@action=redirect&bpo=32726): Provide an additional, more modern macOS installer variant that supports macOS 10.9+ systems in 64-bit mode only. Upgrade the supplied third-party libraries to OpenSSL 1.1.0g and to SQLite 3.22.0. The 10.9+ installer now links with and supplies its own copy of Tcl/Tk 8.6.
  * [bpo-28440](https://bugs.python.org/issue?@action=redirect&bpo=28440): No longer add /Library/Python/3.x/site-packages to sys.path for macOS framework builds to avoid future conflicts.


### C API[¶](https://docs.python.org/3/whatsnew/changelog.html#id536 "Link to this heading")
  * [bpo-32681](https://bugs.python.org/issue?@action=redirect&bpo=32681): Fix uninitialized variable ‘res’ in the C implementation of os.dup2. Patch by Stéphane Wirtel
  * [bpo-10381](https://bugs.python.org/issue?@action=redirect&bpo=10381): Add C API access to the `datetime.timezone` constructor and `datetime.timzone.UTC` singleton.


## Python 3.7.0 alpha 4[¶](https://docs.python.org/3/whatsnew/changelog.html#python-3-7-0-alpha-4 "Link to this heading")
_Release date: 2018-01-08_
### Core and Builtins[¶](https://docs.python.org/3/whatsnew/changelog.html#id537 "Link to this heading")
  * [bpo-31975](https://bugs.python.org/issue?@action=redirect&bpo=31975): The default warning filter list now starts with a “default::DeprecationWarning:__main__” entry, so deprecation warnings are once again shown by default in single-file scripts and at the interactive prompt.
  * [bpo-32226](https://bugs.python.org/issue?@action=redirect&bpo=32226): `__class_getitem__` is now an automatic class method.
  * [bpo-32399](https://bugs.python.org/issue?@action=redirect&bpo=32399): Add AIX uuid library support for RFC4122 using uuid_create() in libc.a
  * [bpo-32390](https://bugs.python.org/issue?@action=redirect&bpo=32390): Fix the compilation failure on AIX after the f_fsid field has been added to the object returned by os.statvfs() ([bpo-32143](https://bugs.python.org/issue?@action=redirect&bpo=32143)). Original patch by Michael Felt.
  * [bpo-32379](https://bugs.python.org/issue?@action=redirect&bpo=32379): Make MRO computation faster when a class inherits from a single base.
  * [bpo-32259](https://bugs.python.org/issue?@action=redirect&bpo=32259): The error message of a TypeError raised when unpack non-iterable is now more specific.
  * [bpo-27169](https://bugs.python.org/issue?@action=redirect&bpo=27169): The `__debug__` constant is now optimized out at compile time. This fixes also [bpo-22091](https://bugs.python.org/issue?@action=redirect&bpo=22091).
  * [bpo-32329](https://bugs.python.org/issue?@action=redirect&bpo=32329): The [`-R`](https://docs.python.org/3/using/cmdline.html#cmdoption-R) option now turns on hash randomization when the [`PYTHONHASHSEED`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONHASHSEED) environment variable is set to `0`. Previously, the option was ignored. Moreover, `sys.flags.hash_randomization` is now properly set to 0 when hash randomization is turned off by `PYTHONHASHSEED=0`.
  * [bpo-30416](https://bugs.python.org/issue?@action=redirect&bpo=30416): The optimizer is now protected from spending much time doing complex calculations and consuming much memory for creating large constants in constant folding. Increased limits for constants that can be produced in constant folding.
  * [bpo-32282](https://bugs.python.org/issue?@action=redirect&bpo=32282): Fix an unnecessary ifdef in the include of VersionHelpers.h in socketmodule on Windows.
  * [bpo-30579](https://bugs.python.org/issue?@action=redirect&bpo=30579): Implement TracebackType.__new__ to allow Python-level creation of traceback objects, and make TracebackType.tb_next mutable.
  * [bpo-32260](https://bugs.python.org/issue?@action=redirect&bpo=32260): Don’t byte swap the input keys to the SipHash algorithm on big-endian platforms. This should ensure siphash gives consistent results across platforms.
  * [bpo-31506](https://bugs.python.org/issue?@action=redirect&bpo=31506): Improve the error message logic for object.__new__ and object.__init__. Patch by Sanyam Khurana.
  * [bpo-20361](https://bugs.python.org/issue?@action=redirect&bpo=20361): `-b` and `-bb` now inject `'default::BytesWarning'` and `error::BytesWarning` entries into `sys.warnoptions`, ensuring that they take precedence over any other warning filters configured via the `-W` option or the `PYTHONWARNINGS` environment variable.
  * [bpo-32230](https://bugs.python.org/issue?@action=redirect&bpo=32230): `-X dev` now injects a `'default'` entry into sys.warnoptions, ensuring that it behaves identically to actually passing `-Wdefault` at the command line.
  * [bpo-29240](https://bugs.python.org/issue?@action=redirect&bpo=29240): Add a new UTF-8 mode: implementation of the [**PEP 540**](https://peps.python.org/pep-0540/).
  * [bpo-32226](https://bugs.