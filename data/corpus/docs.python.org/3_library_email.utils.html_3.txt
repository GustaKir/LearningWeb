Title: Email Utilities for Date Formatting
URL: https://docs.python.org/3/library/email.utils.html
Summary: This section describes optional parameters for formatting datetime in email utilities, including parameters for time value, local time interpretation, and GMT output formatting. It explains the behavior of these parameters in functions like `email.utils.format_datetime`.
---

```

Optional _timeval_ if given is a floating-point time value as accepted by [`time.gmtime()`](https://docs.python.org/3/library/time.html#time.gmtime "time.gmtime") and [`time.localtime()`](https://docs.python.org/3/library/time.html#time.localtime "time.localtime"), otherwise the current time is used.
Optional _localtime_ is a flag that when `True`, interprets _timeval_ , and returns a date relative to the local timezone instead of UTC, properly taking daylight savings time into account. The default is `False` meaning UTC is used.
Optional _usegmt_ is a flag that when `True`, outputs a date string with the timezone as an ascii string `GMT`, rather than a numeric `-0000`. This is needed for some protocols (such as HTTP). This only applies when _localtime_ is `False`. The default is `False`. 

email.utils.format_datetime(_dt_ , _usegmt =False_)[¶](https://docs.python.org/3/library/email.utils.html#email.utils.format_datetime "Link to this definition")
    
Like `formatdate`, but the input is a [`datetime`](https://docs.python.org/3/library/datetime.html#module-datetime "datetime: Basic date and time types.") instance. If it is a naive datetime, it is assumed to be “UTC with no information about the source timezone”, and the conventional `-0000` is used for the timezone. If it is an aware `datetime`, then the numeric timezone offset is used. If it is an aware timezone with offset zero, then _usegmt_ may be set to `True`, in which case the string `GMT` is used instead of the numeric timezone offset. This provides a way to generate standards conformant HTTP date headers.
Added in version 3.3. 

email.utils.decode_rfc2231(_s_)[¶](https://docs.python.org/3/library/email.utils.html#email.utils.decode_rfc2231 "Link to this definition")
    
Decode the string _s_ according to [**RFC 2231**](https://datatracker.ietf.org/doc/html/rfc2231.html). 

email.utils.encode_rfc2231(_s_ , _charset =None_, _language =None_)[¶](https://docs.python.org/3/library/email.utils.html#email.utils.encode_rfc2231 "Link to this definition")
    
Encode the string _s_ according to [**RFC 2231**](https://datatracker.ietf.org/doc/html/rfc2231.html). Optional _charset_ and _language_ , if given is the character set name and language name to use. If neither is given, _s_ is returned as-is. If _charset_ is given but _language_ is not, the string is encoded using the empty string for _language_. 

email.utils.collapse_rfc2231_value(_value_ , _errors ='replace'_, _fallback_charset ='us-ascii'_)[¶](https://docs.python.org/3/library/email.utils.html#email.utils.collapse_rfc2231_value "Link to this definition")
    
When a header parameter is encoded in [**RFC 2231**](https://datatracker.ietf.org/doc/html/rfc2231.html) format, [`Message.get_param`](https://docs.python.org/3/library/email.compat32-message.html#email.message.Message.get_param "email.message.Message.get_param") may return a 3-tuple containing the character set, language, and value. [`collapse_rfc2231_value()`](https://docs.python.org/3/library/email.utils.html#email.utils.collapse_rfc2231_value "email.utils.collapse_rfc2231_value") turns this into a unicode string. Optional _errors_ is passed to the _errors_ argument of [`str`](https://docs.python.org/3/library/stdtypes.html#str "str")’s [`encode()`](https://docs.python.org/3/library/stdtypes.html#str.encode "str.encode") method; it defaults to `'replace'`. Optional _fallback_charset_ specifies the character set to use if the one in the [**RFC 2231**](https://datatracker.ietf.org/doc/html/rfc2231.html) header is not known by Python; it defaults to `'us-ascii'`.
For convenience, if the _value_ passed to [`collapse_rfc2231_value()`](https://docs.python.org/3/library/email.utils.html#email.utils.collapse_rfc2231_value "email.utils.collapse_rfc2231_value") is not a tuple, it should be a string and it is returned unquoted. 

email.utils.decode_params(_params_)[¶](https://docs.python.org/3/library/email.utils.html#email.utils.decode_params "Link to this definition")
    
Decode parameters list according to [**RFC 2231**](https://datatracker.ietf.org/doc/html/rfc2231.html). _params_ is a sequence of 2-tuples containing elements of the form `(content-type, string-value)`.
Footnotes
[[1](https://docs.python.org/3/library/email.utils.html#id1)]
Note that the sign of the timezone offset is the opposite of the sign of the `time.timezone` variable for the same timezone; the latter variable follows the POSIX standard while this module follows [**RFC 2822**](https://datatracker.ietf.org/doc/html/rfc2822.html).
#### Previous topic
[`email.encoders`: Encoders](https://docs.python.org/3/library/email.encoders.html "previous chapter")
#### Next topic
[`email.iterators`: Iterators](https://docs.python.org/3/library/email.iterators.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/email.utils.rst)