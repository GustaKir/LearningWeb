Title: bytes Function
URL: https://docs.python.org/3/library/functions.html
Summary: The `bytes` function creates an immutable sequence of integers ranging from 0 to 255. It serves as an immutable version of the `bytearray`, sharing the same methods and indexing behavior. The constructor arguments are interpreted similarly to `bytearray()`, and bytes objects can also be created using literals.
---

_class_ bytes(_source_ , _encoding_ , _errors_)
    
Return a new “bytes” object which is an immutable sequence of integers in the range `0 <= x < 256`. [`bytes`](https://docs.python.org/3/library/stdtypes.html#bytes "bytes") is an immutable version of [`bytearray`](https://docs.python.org/3/library/stdtypes.html#bytearray "bytearray") – it has the same non-mutating methods and the same indexing and slicing behavior.
Accordingly, constructor arguments are interpreted as for [`bytearray()`](https://docs.python.org/3/library/stdtypes.html#bytearray "bytearray").
Bytes objects can also be created with literals, see [String and Bytes literals](https://docs.python.org/3/reference/lexical_analysis.html#strings).
See also [Binary Sequence Types — bytes, bytearray, memoryview](https://docs.python.org/3/library/stdtypes.html#binaryseq), [Bytes Objects](https://docs.python.org/3/library/stdtypes.html#typebytes), and [Bytes and Bytearray Operations](https://docs.python.org/3/library/stdtypes.html#bytes-methods). 

callable(_object_)[¶](https://docs.python.org/3/library/functions.html#callable "Link to this definition")
    
Return [`True`](https://docs.python.org/3/library/constants.html#True "True") if the _object_ argument appears callable, [`False`](https://docs.python.org/3/library/constants.html#False "False") if not. If this returns `True`, it is still possible that a call fails, but if it is `False`, calling _object_ will never succeed. Note that classes are callable (calling a class returns a new instance); instances are callable if their class has a [`__call__()`](https://docs.python.org/3/reference/datamodel.html#object.__call__ "object.__call__") method.
Added in version 3.2: This function was first removed in Python 3.0 and then brought back in Python 3.2. 

chr(_i_)[¶](https://docs.python.org/3/library/functions.html#chr "Link to this definition")
    
Return the string representing a character whose Unicode code point is the integer _i_. For example, `chr(97)` returns the string `'a'`, while `chr(8364)` returns the string `'€'`. This is the inverse of [`ord()`](https://docs.python.org/3/library/functions.html#ord "ord").
The valid range for the argument is from 0 through 1,114,111 (0x10FFFF in base 16). [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError "ValueError") will be raised if _i_ is outside that range. 

@classmethod[¶](https://docs.python.org/3/library/functions.html#classmethod "Link to this definition")
    
Transform a method into a class method.
A class method receives the class as an implicit first argument, just like an instance method receives the instance. To declare a class method, use this idiom:
```
classC:
  @classmethod
  deff(cls, arg1, arg2): ...