Title: Profiling Callers in Python
URL: https://docs.python.org/3/library/profile.html
Summary: The `print_callers` method from the `Stats` class prints a list of functions that called each function in the profile database. It mirrors the ordering of the `print_stats()` method and allows for restrictions on which callers to display. The output format varies based on whether the profiler used was `profile` or another.
---

```

would limit the list to all functions having file names `.*foo:`, and then proceed to only print the first 10% of them. 

print_callers(_* restrictions_)[¶](https://docs.python.org/3/library/profile.html#pstats.Stats.print_callers "Link to this definition")
    
This method for the [`Stats`](https://docs.python.org/3/library/profile.html#pstats.Stats "pstats.Stats") class prints a list of all functions that called each function in the profiled database. The ordering is identical to that provided by [`print_stats()`](https://docs.python.org/3/library/profile.html#pstats.Stats.print_stats "pstats.Stats.print_stats"), and the definition of the restricting argument is also identical. Each caller is reported on its own line. The format differs slightly depending on the profiler that produced the stats:
  * With [`profile`](https://docs.python.org/3/library/profile.html#module-profile "profile: Python source profiler."), a number is shown in parentheses after each caller to show how many times this specific call was made. For convenience, a second non-parenthesized number repeats the cumulative time spent in the function at the right.
  * With [`cProfile`](https://docs.python.org/3/library/profile.html#module-cProfile "cProfile"), each caller is preceded by three numbers: the number of times this specific call was made, and the total and cumulative times spent in the current function while it was invoked by this specific caller.



print_callees(_* restrictions_)[¶](https://docs.python.org/3/library/profile.html#pstats.Stats.print_callees "Link to this definition")
    
This method for the [`Stats`](https://docs.python.org/3/library/profile.html#pstats.Stats "pstats.Stats") class prints a list of all function that were called by the indicated function. Aside from this reversal of direction of calls (re: called vs was called by), the arguments and ordering are identical to the [`print_callers()`](https://docs.python.org/3/library/profile.html#pstats.Stats.print_callers "pstats.Stats.print_callers") method.