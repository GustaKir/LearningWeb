Title: Network/Internet Programming Tools in Python
URL: https://docs.python.org/3/faq/library.html
Summary: Python offers various modules for building server-side and client-side web systems, as detailed in the Library Reference Manual chapters on Internet Protocols and Internet Data Handling. For a comprehensive list of frameworks, refer to Paul Boddie's summary.
---

```

Or you can use the numeric constants 0, 1 and 2, respectively.
## [Network/Internet Programming](https://docs.python.org/3/faq/library.html#id26)[¶](https://docs.python.org/3/faq/library.html#network-internet-programming "Link to this heading")
### [What WWW tools are there for Python?](https://docs.python.org/3/faq/library.html#id27)[¶](https://docs.python.org/3/faq/library.html#what-www-tools-are-there-for-python "Link to this heading")
See the chapters titled [Internet Protocols and Support](https://docs.python.org/3/library/internet.html#internet) and [Internet Data Handling](https://docs.python.org/3/library/netdata.html#netdata) in the Library Reference Manual. Python has many modules that will help you build server-side and client-side web systems.
A summary of available frameworks is maintained by Paul Boddie at <https://wiki.python.org/moin/WebProgramming>.
### [What module should I use to help with generating HTML?](https://docs.python.org/3/faq/library.html#id28)[¶](https://docs.python.org/3/faq/library.html#what-module-should-i-use-to-help-with-generating-html "Link to this heading")
You can find a collection of useful links on the [Web Programming wiki page](https://wiki.python.org/moin/WebProgramming).
### [How do I send mail from a Python script?](https://docs.python.org/3/faq/library.html#id29)[¶](https://docs.python.org/3/faq/library.html#how-do-i-send-mail-from-a-python-script "Link to this heading")
Use the standard library module [`smtplib`](https://docs.python.org/3/library/smtplib.html#module-smtplib "smtplib: SMTP protocol client \(requires sockets\).").
Here’s a very simple interactive mail sender that uses it. This method will work on any host that supports an SMTP listener.
```
importsys,smtplib
fromaddr = input("From: ")
toaddrs = input("To: ").split(',')
print("Enter message, end with ^D:")
msg = ''
while True:
  line = sys.stdin.readline()
  if not line:
    break
  msg += line
# The actual mail send
server = smtplib.SMTP('localhost')
server.sendmail(fromaddr, toaddrs, msg)
server.quit()

```

A Unix-only alternative uses sendmail. The location of the sendmail program varies between systems; sometimes it is `/usr/lib/sendmail`, sometimes `/usr/sbin/sendmail`. The sendmail manual page will help you out. Here’s some sample code:
```
importos
SENDMAIL = "/usr/sbin/sendmail" # sendmail location
p = os.popen("%s -t -i" % SENDMAIL, "w")
p.write("To: receiver@example.com\n")
p.write("Subject: test\n")
p.write("\n") # blank line separating headers from body
p.write("Some text\n")
p.write("some more text\n")
sts = p.close()
if sts != 0:
  print("Sendmail exit status", sts)