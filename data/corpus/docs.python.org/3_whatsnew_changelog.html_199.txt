Title: Python 3.12.0 Alpha 4 Release Notes
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This document details the changes made in Python 3.12.0 alpha 4, released on January 10, 2023. Key updates include fixes to the default value in `input()`'s `__text_signature__`, removal and replacement of several operations with intrinsics, and the introduction of new instruction `CALL_INTRINSIC_1`.
---

## Python 3.12.0 alpha 4[¶](https://docs.python.org/3/whatsnew/changelog.html#python-3-12-0-alpha-4 "Link to this heading")
_Release date: 2023-01-10_
### Core and Builtins[¶](https://docs.python.org/3/whatsnew/changelog.html#id177 "Link to this heading")
  * [gh-100776](https://github.com/python/cpython/issues/100776): Fix misleading default value in [`input()`](https://docs.python.org/3/library/functions.html#input "input")’s `__text_signature__`.
  * [gh-99005](https://github.com/python/cpython/issues/99005): Remove `UNARY_POSITIVE`, `ASYNC_GEN_WRAP` and `LIST_TO_TUPLE`, replacing them with intrinsics.
  * [gh-99005](https://github.com/python/cpython/issues/99005): Add new [`CALL_INTRINSIC_1`](https://docs.python.org/3/library/dis.html#opcode-CALL_INTRINSIC_1) instruction. Remove `IMPORT_STAR`, `PRINT_EXPR` and `STOPITERATION_ERROR`, replacing them with the [`CALL_INTRINSIC_1`](https://docs.python.org/3/library/dis.html#opcode-CALL_INTRINSIC_1) instruction.
  * [gh-100288](https://github.com/python/cpython/issues/100288): Remove the LOAD_ATTR_METHOD_WITH_DICT specialized instruction. Stats show it is not useful.
  * [gh-100720](https://github.com/python/cpython/issues/100720): Added `_PyFrame_NumSlotsForCodeObject`, which returns the number of slots needed in a frame for a given code object.
  * [gh-100719](https://github.com/python/cpython/issues/100719): Removed the co_nplaincellvars field from the code object, as it is redundant.
  * [gh-100637](https://github.com/python/cpython/issues/100637): Fix `int.__sizeof__()` calculation to include the 1-element `ob_digit` array for `0` and `False`.
  * [gh-100649](https://github.com/python/cpython/issues/100649): Update the native_thread_id field of PyThreadState after fork.
  * [gh-100126](https://github.com/python/cpython/issues/100126): Fix an issue where “incomplete” frames could be briefly visible to C code while other frames are being torn down, possibly resulting in corruption or hard crashes of the interpreter while running finalizers.
  * [gh-87447](https://github.com/python/cpython/issues/87447): Fix [`SyntaxError`](https://docs.python.org/3/library/exceptions.html#SyntaxError "SyntaxError") on comprehension rebind checking with names that are not actually redefined.
Now reassigning `b` in `[(b := 1) for a, b.prop in some_iter]` is allowed. Reassigning `a` is still disallowed as per [**PEP 572**](https://peps.python.org/pep-0572/).
  * [gh-100268](https://github.com/python/cpython/issues/100268): Add [`int.is_integer()`](https://docs.python.org/3/library/stdtypes.html#int.is_integer "int.is_integer") to improve duck type compatibility between [`int`](https://docs.python.org/3/library/functions.html#int "int") and [`float`](https://docs.python.org/3/library/functions.html#float "float").
  * [gh-100425](https://github.com/python/cpython/issues/100425): Improve the accuracy of `sum()` with compensated summation.
  * [gh-100374](https://github.com/python/cpython/issues/100374): Fix incorrect result and delay in [`socket.getfqdn()`](https://docs.python.org/3/library/socket.html#socket.getfqdn "socket.getfqdn"). Patch by Dominic Socular.
  * [gh-100357](https://github.com/python/cpython/issues/100357): Convert `vars`, `dir`, `next`, `getattr`, and `iter` to argument clinic.
  * [gh-100117](https://github.com/python/cpython/issues/100117): Improve the output of [`codeobject.co_lines()`](https://docs.python.org/3/reference/datamodel.html#codeobject.co_lines "codeobject.co_lines") by emitting only one entry for each line range.
  * [gh-90043](https://github.com/python/cpython/issues/90043): Handle NaNs when specializing [`COMPARE_OP`](https://docs.python.org/3/library/dis.html#opcode-COMPARE_OP) for [`float`](https://docs.python.org/3/library/functions.html#float "float") values.
  * [gh-100222](https://github.com/python/cpython/issues/100222): Redefine the `_Py_CODEUNIT` typedef as a union to describe its layout to the C compiler, avoiding type punning and improving clarity.
  * [gh-99955](https://github.com/python/cpython/issues/99955): Internal compiler functions (in compile.c) now consistently return -1 on error and 0 on success.
  * [gh-100188](https://github.com/python/cpython/issues/100188): The `BINARY_SUBSCR_LIST_INT` and `BINARY_SUBSCR_TUPLE_INT` instructions are no longer used for negative integers because those instructions always miss when encountering negative integers.
  * [gh-99110](https://github.com/python/cpython/issues/99110): Initialize frame->previous in frameobject.c to fix a segmentation fault when accessing frames created by `PyFrame_New()`.
  * [gh-94155](https://github.com/python/cpython/issues/94155): Improved the hashing algorithm for code objects, mitigating some hash collisions.
  * [gh-99540](https://github.com/python/cpython/issues/99540): `None` now hashes to a constant value. This is not a requirements change.
  * [gh-100143](https://github.com/python/cpython/issues/100143): When built with `--enable-pystats`, stats coll