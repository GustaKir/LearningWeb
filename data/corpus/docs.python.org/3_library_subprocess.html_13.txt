Title: Subprocess Management in Python
URL: https://docs.python.org/3/library/subprocess.html
Summary: This document discusses methods for managing subprocesses in Python, focusing on sending signals and terminating processes. It notes that data is buffered in memory, which may pose issues with large data sizes. The changes introduced in version 3.3 include the addition of a timeout feature. The Popen class methods `send_signal` and `terminate` are explained, highlighting platform-specific behavior for handling processes.
---

```

Note
The data read is buffered in memory, so do not use this method if the data size is large or unlimited.
Changed in version 3.3: _timeout_ was added. 

Popen.send_signal(_signal_)[¶](https://docs.python.org/3/library/subprocess.html#subprocess.Popen.send_signal "Link to this definition")
    
Sends the signal _signal_ to the child.
Do nothing if the process completed.
Note
On Windows, SIGTERM is an alias for [`terminate()`](https://docs.python.org/3/library/subprocess.html#subprocess.Popen.terminate "subprocess.Popen.terminate"). CTRL_C_EVENT and CTRL_BREAK_EVENT can be sent to processes started with a _creationflags_ parameter which includes `CREATE_NEW_PROCESS_GROUP`. 

Popen.terminate()[¶](https://docs.python.org/3/library/subprocess.html#subprocess.Popen.terminate "Link to this definition")
    
Stop the child. On POSIX OSs the method sends [`SIGTERM`](https://docs.python.org/3/library/signal.html#signal.SIGTERM "signal.SIGTERM") to the child. On Windows the Win32 API function `TerminateProcess()` is called to stop the child. 

Popen.kill()[¶](https://docs.python.org/3/library/subprocess.html#subprocess.Popen.kill "Link to this definition")
    
Kills the child. On POSIX OSs the function sends SIGKILL to the child. On Windows [`kill()`](https://docs.python.org/3/library/subprocess.html#subprocess.Popen.kill "subprocess.Popen.kill") is an alias for [`terminate()`](https://docs.python.org/3/library/subprocess.html#subprocess.Popen.terminate "subprocess.Popen.terminate").
The following attributes are also set by the class for you to access. Reassigning them to new values is unsupported: 

Popen.args[¶](https://docs.python.org/3/library/subprocess.html#subprocess.Popen.args "Link to this definition")
    
The _args_ argument as it was passed to [`Popen`](https://docs.python.org/3/library/subprocess.html#subprocess.Popen "subprocess.Popen") – a sequence of program arguments or else a single string.
Added in version 3.3. 

Popen.stdin[¶](https://docs.python.org/3/library/subprocess.html#subprocess.Popen.stdin "Link to this definition")
    
If the _stdin_ argument was [`PIPE`](https://docs.python.org/3/library/subprocess.html#subprocess.PIPE "subprocess.PIPE"), this attribute is a writeable stream object as returned by [`open()`](https://docs.python.org/3/library/functions.html#open "open"). If the _encoding_ or _errors_ arguments were specified or the _text_ or _universal_newlines_ argument was `True`, the stream is a text stream, otherwise it is a byte stream. If the _stdin_ argument was not [`PIPE`](https://docs.python.org/3/library/subprocess.html#subprocess.PIPE "subprocess.PIPE"), this attribute is `None`. 

Popen.stdout[¶](https://docs.python.org/3/library/subprocess.html#subprocess.Popen.stdout "Link to this definition")
    
If the _stdout_ argument was [`PIPE`](https://docs.python.org/3/library/subprocess.html#subprocess.PIPE "subprocess.PIPE"), this attribute is a readable stream object as returned by [`open()`](https://docs.python.org/3/library/functions.html#open "open"). Reading from the stream provides output from the child process. If the _encoding_ or _errors_ arguments were specified or the _text_ or _universal_newlines_ argument was `True`, the stream is a text stream, otherwise it is a byte stream. If the _stdout_ argument was not [`PIPE`](https://docs.python.org/3/library/subprocess.html#subprocess.PIPE "subprocess.PIPE"), this attribute is `None`. 

Popen.stderr[¶](https://docs.python.org/3/library/subprocess.html#subprocess.Popen.stderr "Link to this definition")
    
If the _stderr_ argument was [`PIPE`](https://docs.python.org/3/library/subprocess.html#subprocess.PIPE "subprocess.PIPE"), this attribute is a readable stream object as returned by [`open()`](https://docs.python.org/3/library/functions.html#open "open"). Reading from the stream provides error output from the child process. If the _encoding_ or _errors_ arguments were specified or the _text_ or _universal_newlines_ argument was `True`, the stream is a text stream, otherwise it is a byte stream. If the _stderr_ argument was not [`PIPE`](https://docs.python.org/3/library/subprocess.html#subprocess.PIPE "subprocess.PIPE"), this attribute is `None`.
Warning
Use [`communicate()`](https://docs.python.org/3/library/subprocess.html#subprocess.Popen.communicate "subprocess.Popen.communicate") rather than [`.stdin.write`](https://docs.python.org/3/library/subprocess.html#subprocess.Popen.stdin "subprocess.Popen.stdin"), [`.stdout.read`](https://docs.python.org/3/library/subprocess.html#subprocess.Popen.stdout "subprocess.Popen.stdout") or [`.stderr.read`](https://docs.python.org/3/library/subprocess.html#subprocess.Popen.stderr "subprocess.Popen.stderr") to avoid deadlocks due to any of the other OS pipe buffers filling up and blocking the child process.