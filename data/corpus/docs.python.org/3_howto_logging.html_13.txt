Title: Useful Handlers in Python Logging
URL: https://docs.python.org/3/howto/logging.html
Summary: This section discusses various subclasses of the base Handler class in Python's logging module, including StreamHandler for sending messages to streams and FileHandler for writing messages to disk files, highlighting the utility of these handlers in managing logging output.
---

a chance that the logging output from such multiple libraries used together will be difficult for the using developer to control and/or interpret, because a given numeric value might mean different things for different libraries.
## Useful Handlers[¶](https://docs.python.org/3/howto/logging.html#useful-handlers "Link to this heading")
In addition to the base [`Handler`](https://docs.python.org/3/library/logging.html#logging.Handler "logging.Handler") class, many useful subclasses are provided:
  1. [`StreamHandler`](https://docs.python.org/3/library/logging.handlers.html#logging.StreamHandler "logging.StreamHandler") instances send messages to streams (file-like objects).
  2. [`FileHandler`](https://docs.python.org/3/library/logging.handlers.html#logging.FileHandler "logging.FileHandler") instances send messages to disk files.
  3. [`BaseRotatingHandler`](https://docs.python.org/3/library/logging.handlers.html#logging.handlers.BaseRotatingHandler "logging.handlers.BaseRotatingHandler") is the base class for handlers that rotate log files at a certain point. It is not meant to be instantiated directly. Instead, use [`RotatingFileHandler`](https://docs.python.org/3/library/logging.handlers.html#logging.handlers.RotatingFileHandler "logging.handlers.RotatingFileHandler") or [`TimedRotatingFileHandler`](https://docs.python.org/3/library/logging.handlers.html#logging.handlers.TimedRotatingFileHandler "logging.handlers.TimedRotatingFileHandler").
  4. [`RotatingFileHandler`](https://docs.python.org/3/library/logging.handlers.html#logging.handlers.RotatingFileHandler "logging.handlers.RotatingFileHandler") instances send messages to disk files, with support for maximum log file sizes and log file rotation.
  5. [`TimedRotatingFileHandler`](https://docs.python.org/3/library/logging.handlers.html#logging.handlers.TimedRotatingFileHandler "logging.handlers.TimedRotatingFileHandler") instances send messages to disk files, rotating the log file at certain timed intervals.
  6. [`SocketHandler`](https://docs.python.org/3/library/logging.handlers.html#logging.handlers.SocketHandler "logging.handlers.SocketHandler") instances send messages to TCP/IP sockets. Since 3.4, Unix domain sockets are also supported.
  7. [`DatagramHandler`](https://docs.python.org/3/library/logging.handlers.html#logging.handlers.DatagramHandler "logging.handlers.DatagramHandler") instances send messages to UDP sockets. Since 3.4, Unix domain sockets are also supported.
  8. [`SMTPHandler`](https://docs.python.org/3/library/logging.handlers.html#logging.handlers.SMTPHandler "logging.handlers.SMTPHandler") instances send messages to a designated email address.
  9. [`SysLogHandler`](https://docs.python.org/3/library/logging.handlers.html#logging.handlers.SysLogHandler "logging.handlers.SysLogHandler") instances send messages to a Unix syslog daemon, possibly on a remote machine.
  10. [`NTEventLogHandler`](https://docs.python.org/3/library/logging.handlers.html#logging.handlers.NTEventLogHandler "logging.handlers.NTEventLogHandler") instances send messages to a Windows NT/2000/XP event log.
  11. [`MemoryHandler`](https://docs.python.org/3/library/logging.handlers.html#logging.handlers.MemoryHandler "logging.handlers.MemoryHandler") instances send messages to a buffer in memory, which is flushed whenever specific criteria are met.
  12. [`HTTPHandler`](https://docs.python.org/3/library/logging.handlers.html#logging.handlers.HTTPHandler "logging.handlers.HTTPHandler") instances send messages to an HTTP server using either `GET` or `POST` semantics.
  13. [`WatchedFileHandler`](https://docs.python.org/3/library/logging.handlers.html#logging.handlers.WatchedFileHandler "logging.handlers.WatchedFileHandler") instances watch the file they are logging to. If the file changes, it is closed and reopened using the file name. This handler is only useful on Unix-like systems; Windows does not support the underlying mechanism used.
  14. [`QueueHandler`](https://docs.python.org/3/library/logging.handlers.html#logging.handlers.QueueHandler "logging.handlers.QueueHandler") instances send messages to a queue, such as those implemented in the [`queue`](https://docs.python.org/3/library/queue.html#module-queue "queue: A synchronized queue class.") or [`multiprocessing`](https://docs.python.org/3/library/multiprocessing.html#module-multiprocessing "multiprocessing: Process-based parallelism.") modules.
  15. [`NullHandler`](https://docs.python.org/3/library/logging.handlers.html#logging.NullHandler "logging.NullHandler") instances do nothing with error messages. They are used by library developers who want to use logging, but want to avoid the ‘No handlers could be found for logger _XXX_ ’ message which can be displayed if the library user has not configured logging. See [Configuring Logging for a Library](https://docs.python.org/3/howto/logging.html#library-config) for more information.