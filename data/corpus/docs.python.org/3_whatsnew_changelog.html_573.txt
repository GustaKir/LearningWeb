Title: Library Updates in Python
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section details recent changes in Python's standard library, including restrictions on dataclass inheritance, improvements to tarfile handling, the prohibition of direct instantiation of SSLSocket and SSLObject, and updates to the hash parameter in certain functions.
---

### Library[¶](https://docs.python.org/3/whatsnew/changelog.html#id521 "Link to this heading")
  * [bpo-32960](https://bugs.python.org/issue?@action=redirect&bpo=32960): For dataclasses, disallow inheriting frozen from non-frozen classes, and also disallow inheriting non-frozen from frozen classes. This restriction will be relaxed at a future date.
  * [bpo-32713](https://bugs.python.org/issue?@action=redirect&bpo=32713): Fixed tarfile.itn handling of out-of-bounds float values. Patch by Joffrey Fuhrer.
  * [bpo-32951](https://bugs.python.org/issue?@action=redirect&bpo=32951): Direct instantiation of SSLSocket and SSLObject objects is now prohibited. The constructors were never documented, tested, or designed as public constructors. Users were suppose to use ssl.wrap_socket() or SSLContext.
  * [bpo-32929](https://bugs.python.org/issue?@action=redirect&bpo=32929): Remove the tri-state parameter “hash”, and add the boolean “unsafe_hash”. If unsafe_hash is True, add a __hash__ function, but if a __hash__ exists, raise TypeError. If unsafe_hash is False, add a __hash__ based on the values of eq= and frozen=. The unsafe_hash=False behavior is the same as the old hash=None behavior. unsafe_hash=False is the default, just as hash=None used to be.
  * [bpo-32947](https://bugs.python.org/issue?@action=redirect&bpo=32947): Add OP_ENABLE_MIDDLEBOX_COMPAT and test workaround for TLSv1.3 for future compatibility with OpenSSL 1.1.1.
  * [bpo-30622](https://bugs.python.org/issue?@action=redirect&bpo=30622): The ssl module now detects missing NPN support in LibreSSL.
  * [bpo-32922](https://bugs.python.org/issue?@action=redirect&bpo=32922): dbm.open() now encodes filename with the filesystem encoding rather than default encoding.
  * [bpo-32859](https://bugs.python.org/issue?@action=redirect&bpo=32859): In `os.dup2`, don’t check every call whether the `dup3` syscall exists or not.
  * [bpo-32556](https://bugs.python.org/issue?@action=redirect&bpo=32556): nt._getfinalpathname, nt._getvolumepathname and nt._getdiskusage now correctly convert from bytes.
  * [bpo-25988](https://bugs.python.org/issue?@action=redirect&bpo=25988): Emit a [`DeprecationWarning`](https://docs.python.org/3/library/exceptions.html#DeprecationWarning "DeprecationWarning") when using or importing an ABC directly from [`collections`](https://docs.python.org/3/library/collections.html#module-collections "collections: Container datatypes") rather than from [`collections.abc`](https://docs.python.org/3/library/collections.abc.html#module-collections.abc "collections.abc: Abstract base classes for containers").
  * [bpo-21060](https://bugs.python.org/issue?@action=redirect&bpo=21060): Rewrite confusing message from setup.py upload from “No dist file created in earlier command” to the more helpful “Must create and upload files in one command”.
  * [bpo-32852](https://bugs.python.org/issue?@action=redirect&bpo=32852): Make sure sys.argv remains as a list when running trace.
  * [bpo-31333](https://bugs.python.org/issue?@action=redirect&bpo=31333): `_abc` module is added. It is a speedup module with C implementations for various functions and methods in `abc`. Creating an ABC subclass and calling `isinstance` or `issubclass` with an ABC subclass are up to 1.5x faster. In addition, this makes Python start-up up to 10% faster. Note that the new implementation hides internal registry and caches, previously accessible via private attributes `_abc_registry`, `_abc_cache`, and `_abc_negative_cache`. There are three debugging helper methods that can be used instead `_dump_registry`, `_abc_registry_clear`, and `_abc_caches_clear`.
  * [bpo-32841](https://bugs.python.org/issue?@action=redirect&bpo=32841): Fixed `asyncio.Condition` issue which silently ignored cancellation after notifying and cancelling a conditional lock. Patch by Bar Harel.
  * [bpo-32819](https://bugs.python.org/issue?@action=redirect&bpo=32819): ssl.match_hostname() has been simplified and no longer depends on re and ipaddress module for wildcard and IP addresses. Error reporting for invalid wildcards has been improved.
  * [bpo-32394](https://bugs.python.org/issue?@action=redirect&bpo=32394): socket: Remove TCP_FASTOPEN,TCP_KEEPCNT,TCP_KEEPIDLE,TCP_KEEPINTVL flags on older version Windows during run-time.
  * [bpo-31787](https://bugs.python.org/issue?@action=redirect&bpo=31787): Fixed refleaks of `__init__()` methods in various modules. (Contributed by Oren Milman)
  * [bpo-30157](https://bugs.python.org/issue?@action=redirect&bpo=30157): Fixed guessing quote and delimiter in csv.Sniffer.sniff() when only the last field is quoted. Patch by Jake Davis.
  * [bpo-32792](https://bugs.python.org/issue?@action=redirect&bpo=32792): collections.ChainMap() preserves the order of the underlying mappings.
  * [bpo-32775](https://bugs.python.org/issue?@action=redirect&bpo=32775): [`fnmatch.translate()`](https://docs.python.org/3/library/fnmatch.html#fnmatch.translate "fnmatch.translate") no longer produces