Title: HTTP Authentication Classes in urllib.request
URL: https://docs.python.org/3/library/urllib.request.html
Summary: This section details the HTTPPasswordMgrWithPriorAuth class, which extends HTTPPasswordMgrWithDefaultRealm by maintaining a uri-to-authentication mapping, allowing for immediate credential sending. It also introduces the AbstractBasicAuthHandler mixin class for facilitating authentication with remote hosts and proxies.
---

_class_ urllib.request.HTTPPasswordMgrWithPriorAuth[¶](https://docs.python.org/3/library/urllib.request.html#urllib.request.HTTPPasswordMgrWithPriorAuth "Link to this definition")
    
A variant of [`HTTPPasswordMgrWithDefaultRealm`](https://docs.python.org/3/library/urllib.request.html#urllib.request.HTTPPasswordMgrWithDefaultRealm "urllib.request.HTTPPasswordMgrWithDefaultRealm") that also has a database of `uri -> is_authenticated` mappings. Can be used by a BasicAuth handler to determine when to send authentication credentials immediately instead of waiting for a `401` response first.
Added in version 3.5. 

_class_ urllib.request.AbstractBasicAuthHandler(_password_mgr =None_)[¶](https://docs.python.org/3/library/urllib.request.html#urllib.request.AbstractBasicAuthHandler "Link to this definition")
    
This is a mixin class that helps with HTTP authentication, both to the remote host and to a proxy. _password_mgr_ , if given, should be something that is compatible with [`HTTPPasswordMgr`](https://docs.python.org/3/library/urllib.request.html#urllib.request.HTTPPasswordMgr "urllib.request.HTTPPasswordMgr"); refer to section [HTTPPasswordMgr Objects](https://docs.python.org/3/library/urllib.request.html#http-password-mgr) for information on the interface that must be supported. If _passwd_mgr_ also provides `is_authenticated` and `update_authenticated` methods (see [HTTPPasswordMgrWithPriorAuth Objects](https://docs.python.org/3/library/urllib.request.html#http-password-mgr-with-prior-auth)), then the handler will use the `is_authenticated` result for a given URI to determine whether or not to send authentication credentials with the request. If `is_authenticated` returns `True` for the URI, credentials are sent. If `is_authenticated` is `False`, credentials are not sent, and then if a `401` response is received the request is re-sent with the authentication credentials. If authentication succeeds, `update_authenticated` is called to set `is_authenticated` `True` for the URI, so that subsequent requests to the URI or any of its super-URIs will automatically include the authentication credentials.
Added in version 3.5: Added `is_authenticated` support. 

_class_ urllib.request.HTTPBasicAuthHandler(_password_mgr =None_)[¶](https://docs.python.org/3/library/urllib.request.html#urllib.request.HTTPBasicAuthHandler "Link to this definition")
    
Handle authentication with the remote host. _password_mgr_ , if given, should be something that is compatible with [`HTTPPasswordMgr`](https://docs.python.org/3/library/urllib.request.html#urllib.request.HTTPPasswordMgr "urllib.request.HTTPPasswordMgr"); refer to section [HTTPPasswordMgr Objects](https://docs.python.org/3/library/urllib.request.html#http-password-mgr) for information on the interface that must be supported. HTTPBasicAuthHandler will raise a [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError "ValueError") when presented with a wrong Authentication scheme. 

_class_ urllib.request.ProxyBasicAuthHandler(_password_mgr =None_)[¶](https://docs.python.org/3/library/urllib.request.html#urllib.request.ProxyBasicAuthHandler "Link to this definition")
    
Handle authentication with the proxy. _password_mgr_ , if given, should be something that is compatible with [`HTTPPasswordMgr`](https://docs.python.org/3/library/urllib.request.html#urllib.request.HTTPPasswordMgr "urllib.request.HTTPPasswordMgr"); refer to section [HTTPPasswordMgr Objects](https://docs.python.org/3/library/urllib.request.html#http-password-mgr) for information on the interface that must be supported. 

_class_ urllib.request.AbstractDigestAuthHandler(_password_mgr =None_)[¶](https://docs.python.org/3/library/urllib.request.html#urllib.request.AbstractDigestAuthHandler "Link to this definition")
    
This is a mixin class that helps with HTTP authentication, both to the remote host and to a proxy. _password_mgr_ , if given, should be something that is compatible with [`HTTPPasswordMgr`](https://docs.python.org/3/library/urllib.request.html#urllib.request.HTTPPasswordMgr "urllib.request.HTTPPasswordMgr"); refer to section [HTTPPasswordMgr Objects](https://docs.python.org/3/library/urllib.request.html#http-password-mgr) for information on the interface that must be supported.