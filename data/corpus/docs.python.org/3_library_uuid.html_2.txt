Title: UUID Variant and Version
URL: https://docs.python.org/3/library/uuid.html
Summary: This section describes the UUID variant, which defines the internal layout of a UUID, including constants such as RESERVED_NCS, RFC_4122, RESERVED_MICROSOFT, and RESERVED_FUTURE. It also covers the UUID version number (1 through 5), which is relevant only when the variant is RFC_4122.
---

UUID.variant[¶](https://docs.python.org/3/library/uuid.html#uuid.UUID.variant "Link to this definition")
    
The UUID variant, which determines the internal layout of the UUID. This will be one of the constants [`RESERVED_NCS`](https://docs.python.org/3/library/uuid.html#uuid.RESERVED_NCS "uuid.RESERVED_NCS"), [`RFC_4122`](https://docs.python.org/3/library/uuid.html#uuid.RFC_4122 "uuid.RFC_4122"), [`RESERVED_MICROSOFT`](https://docs.python.org/3/library/uuid.html#uuid.RESERVED_MICROSOFT "uuid.RESERVED_MICROSOFT"), or [`RESERVED_FUTURE`](https://docs.python.org/3/library/uuid.html#uuid.RESERVED_FUTURE "uuid.RESERVED_FUTURE"). 

UUID.version[¶](https://docs.python.org/3/library/uuid.html#uuid.UUID.version "Link to this definition")
    
The UUID version number (1 through 5, meaningful only when the variant is [`RFC_4122`](https://docs.python.org/3/library/uuid.html#uuid.RFC_4122 "uuid.RFC_4122")). 

UUID.is_safe[¶](https://docs.python.org/3/library/uuid.html#uuid.UUID.is_safe "Link to this definition")
    
An enumeration of [`SafeUUID`](https://docs.python.org/3/library/uuid.html#uuid.SafeUUID "uuid.SafeUUID") which indicates whether the platform generated the UUID in a multiprocessing-safe way.
Added in version 3.7.
The [`uuid`](https://docs.python.org/3/library/uuid.html#module-uuid "uuid: UUID objects \(universally unique identifiers\) according to RFC 4122") module defines the following functions: 

uuid.getnode()[¶](https://docs.python.org/3/library/uuid.html#uuid.getnode "Link to this definition")
    
Get the hardware address as a 48-bit positive integer. The first time this runs, it may launch a separate program, which could be quite slow. If all attempts to obtain the hardware address fail, we choose a random 48-bit number with the multicast bit (least significant bit of the first octet) set to 1 as recommended in [**RFC 4122**](https://datatracker.ietf.org/doc/html/rfc4122.html). “Hardware address” means the MAC address of a network interface. On a machine with multiple network interfaces, universally administered MAC addresses (i.e. where the second least significant bit of the first octet is _unset_) will be preferred over locally administered MAC addresses, but with no other ordering guarantees.
Changed in version 3.7: Universally administered MAC addresses are preferred over locally administered MAC addresses, since the former are guaranteed to be globally unique, while the latter are not. 

uuid.uuid1(_node =None_, _clock_seq =None_)[¶](https://docs.python.org/3/library/uuid.html#uuid.uuid1 "Link to this definition")
    
Generate a UUID from a host ID, sequence number, and the current time. If _node_ is not given, [`getnode()`](https://docs.python.org/3/library/uuid.html#uuid.getnode "uuid.getnode") is used to obtain the hardware address. If _clock_seq_ is given, it is used as the sequence number; otherwise a random 14-bit sequence number is chosen. 

uuid.uuid3(_namespace_ , _name_)[¶](https://docs.python.org/3/library/uuid.html#uuid.uuid3 "Link to this definition")
    
Generate a UUID based on the MD5 hash of a namespace identifier (which is a UUID) and a name (which is a [`bytes`](https://docs.python.org/3/library/stdtypes.html#bytes "bytes") object or a string that will be encoded using UTF-8). 

uuid.uuid4()[¶](https://docs.python.org/3/library/uuid.html#uuid.uuid4 "Link to this definition")
    
Generate a random UUID. 

uuid.uuid5(_namespace_ , _name_)[¶](https://docs.python.org/3/library/uuid.html#uuid.uuid5 "Link to this definition")
    
Generate a UUID based on the SHA-1 hash of a namespace identifier (which is a UUID) and a name (which is a [`bytes`](https://docs.python.org/3/library/stdtypes.html#bytes "bytes") object or a string that will be encoded using UTF-8).
The [`uuid`](https://docs.python.org/3/library/uuid.html#module-uuid "uuid: UUID objects \(universally unique identifiers\) according to RFC 4122") module defines the following namespace identifiers for use with [`uuid3()`](https://docs.python.org/3/library/uuid.html#uuid.uuid3 "uuid.uuid3") or [`uuid5()`](https://docs.python.org/3/library/uuid.html#uuid.uuid5 "uuid.uuid5"). 

uuid.NAMESPACE_DNS[¶](https://docs.python.org/3/library/uuid.html#uuid.NAMESPACE_DNS "Link to this definition")
    
When this namespace is specified, the _name_ string is a fully qualified domain name. 

uuid.NAMESPACE_URL[¶](https://docs.python.org/3/library/uuid.html#uuid.NAMESPACE_URL "Link to this definition")
    
When this namespace is specified, the _name_ string is a URL. 

uuid.NAMESPACE_OID[¶](https://docs.python.org/3/library/uuid.html#uuid.NAMESPACE_OID "Link to this definition")
    
When this namespace is specified, the _name_ string is an ISO OID.