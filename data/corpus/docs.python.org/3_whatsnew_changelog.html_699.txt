Title: Updates to Core and Builtins in Python
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section outlines key updates in the core and built-in features of Python, including improvements to relative imports, avoidance of blocking in thread locks, fixes for segmentation faults in dictionaries due to mutations, and enhancements to attribute handling in types.
---

### Core and Builtins[Â¶](https://docs.python.org/3/whatsnew/changelog.html#id708 "Link to this heading")
  * [bpo-30876](https://bugs.python.org/issue?@action=redirect&bpo=30876): Relative import from unloaded package now reimports the package instead of failing with SystemError. Relative import from non-package now fails with ImportError rather than SystemError.
  * [bpo-30765](https://bugs.python.org/issue?@action=redirect&bpo=30765): Avoid blocking in pthread_mutex_lock() when PyThread_acquire_lock() is asked not to block.
  * [bpo-27945](https://bugs.python.org/issue?@action=redirect&bpo=27945): Fixed various segfaults with dict when input collections are mutated during searching, inserting or comparing. Based on patches by Duane Griffin and Tim Mitchell.
  * [bpo-25794](https://bugs.python.org/issue?@action=redirect&bpo=25794): Fixed type.__setattr__() and type.__delattr__() for non-interned attribute names. Based on patch by Eryk Sun.
  * [bpo-29935](https://bugs.python.org/issue?@action=redirect&bpo=29935): Fixed error messages in the index() method of tuple, list and deque when pass indices of wrong type.
  * [bpo-28876](https://bugs.python.org/issue?@action=redirect&bpo=28876): `bool(range)` works even if `len(range)` raises [`OverflowError`](https://docs.python.org/3/library/exceptions.html#OverflowError "OverflowError").
  * [bpo-29600](https://bugs.python.org/issue?@action=redirect&bpo=29600): Fix wrapping coroutine return values in StopIteration.
  * [bpo-29537](https://bugs.python.org/issue?@action=redirect&bpo=29537): Restore runtime compatibility with bytecode files generated by CPython 3.5.0 to 3.5.2, and adjust the eval loop to avoid the problems that could be caused by the malformed variant of the BUILD_MAP_UNPACK_WITH_CALL opcode that they may contain. Patch by Petr Viktorin, Serhiy Storchaka, and Nick Coghlan.
  * [bpo-28598](https://bugs.python.org/issue?@action=redirect&bpo=28598): Support __rmod__ for subclasses of str being called before str.__mod__. Patch by Martijn Pieters.
  * [bpo-29602](https://bugs.python.org/issue?@action=redirect&bpo=29602): Fix incorrect handling of signed zeros in complex constructor for complex subclasses and for inputs having a __complex__ method. Patch by Serhiy Storchaka.
  * [bpo-29347](https://bugs.python.org/issue?@action=redirect&bpo=29347): Fixed possibly dereferencing undefined pointers when creating weakref objects.
  * [bpo-29438](https://bugs.python.org/issue?@action=redirect&bpo=29438): Fixed use-after-free problem in key sharing dict.
  * [bpo-29319](https://bugs.python.org/issue?@action=redirect&bpo=29319): Prevent RunMainFromImporter overwriting sys.path[0].
  * [bpo-29337](https://bugs.python.org/issue?@action=redirect&bpo=29337): Fixed possible BytesWarning when compare the code objects. Warnings could be emitted at compile time.
  * [bpo-29478](https://bugs.python.org/issue?@action=redirect&bpo=29478): If max_line_length=None is specified while using the Compat32 policy, it is no longer ignored. Patch by Mircea Cosbuc.