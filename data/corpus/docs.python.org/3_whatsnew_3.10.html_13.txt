Title: Python 3.10 Updates: Keyword-Only Parameters and Distutils Deprecation
URL: https://docs.python.org/3/whatsnew/3.10.html
Summary: In Python 3.10, `z` and `t` are introduced as keyword-only parameters, while `x` and `y` are not. Additionally, the `distutils` package is deprecated and scheduled for removal in Python 3.12, with its functionality superseded by third-party packages like `setuptools` and available APIs in the standard library.
---

```

Here, `z` and `t` are keyword-only parameters, while `x` and `y` are not. (Contributed by Eric V. Smith in [bpo-43532](https://bugs.python.org/issue?@action=redirect&bpo=43532).)
### distutils[¶](https://docs.python.org/3/whatsnew/3.10.html#distutils "Link to this heading")
The entire `distutils` package is deprecated, to be removed in Python 3.12. Its functionality for specifying package builds has already been completely replaced by third-party packages `setuptools` and `packaging`, and most other commonly used APIs are available elsewhere in the standard library (such as [`platform`](https://docs.python.org/3/library/platform.html#module-platform "platform: Retrieves as much platform identifying data as possible."), [`shutil`](https://docs.python.org/3/library/shutil.html#module-shutil "shutil: High-level file operations, including copying."), [`subprocess`](https://docs.python.org/3/library/subprocess.html#module-subprocess "subprocess: Subprocess management.") or [`sysconfig`](https://docs.python.org/3/library/sysconfig.html#module-sysconfig "sysconfig: Python's configuration information")). There are no plans to migrate any other functionality from `distutils`, and applications that are using other functions should plan to make private copies of the code. Refer to [**PEP 632**](https://peps.python.org/pep-0632/) for discussion.
The `bdist_wininst` command deprecated in Python 3.8 has been removed. The `bdist_wheel` command is now recommended to distribute binary packages on Windows. (Contributed by Victor Stinner in [bpo-42802](https://bugs.python.org/issue?@action=redirect&bpo=42802).)
### doctest[¶](https://docs.python.org/3/whatsnew/3.10.html#doctest "Link to this heading")
When a module does not define `__loader__`, fall back to `__spec__.loader`. (Contributed by Brett Cannon in [bpo-42133](https://bugs.python.org/issue?@action=redirect&bpo=42133).)
### encodings[¶](https://docs.python.org/3/whatsnew/3.10.html#encodings "Link to this heading")
`encodings.normalize_encoding()` now ignores non-ASCII characters. (Contributed by Hai Shi in [bpo-39337](https://bugs.python.org/issue?@action=redirect&bpo=39337).)
### enum[¶](https://docs.python.org/3/whatsnew/3.10.html#enum "Link to this heading")
[`Enum`](https://docs.python.org/3/library/enum.html#enum.Enum "enum.Enum") [`__repr__()`](https://docs.python.org/3/reference/datamodel.html#object.__repr__ "object.__repr__") now returns `enum_name.member_name` and [`__str__()`](https://docs.python.org/3/reference/datamodel.html#object.__str__ "object.__str__") now returns `member_name`. Stdlib enums available as module constants have a [`repr()`](https://docs.python.org/3/library/functions.html#repr "repr") of `module_name.member_name`. (Contributed by Ethan Furman in [bpo-40066](https://bugs.python.org/issue?@action=redirect&bpo=40066).)
Add [`enum.StrEnum`](https://docs.python.org/3/library/enum.html#enum.StrEnum "enum.StrEnum") for enums where all members are strings. (Contributed by Ethan Furman in [bpo-41816](https://bugs.python.org/issue?@action=redirect&bpo=41816).)
### fileinput[¶](https://docs.python.org/3/whatsnew/3.10.html#fileinput "Link to this heading")
Add _encoding_ and _errors_ parameters in [`fileinput.input()`](https://docs.python.org/3/library/fileinput.html#fileinput.input "fileinput.input") and [`fileinput.FileInput`](https://docs.python.org/3/library/fileinput.html#fileinput.FileInput "fileinput.FileInput"). (Contributed by Inada Naoki in [bpo-43712](https://bugs.python.org/issue?@action=redirect&bpo=43712).)
[`fileinput.hook_compressed()`](https://docs.python.org/3/library/fileinput.html#fileinput.hook_compressed "fileinput.hook_compressed") now returns [`TextIOWrapper`](https://docs.python.org/3/library/io.html#io.TextIOWrapper "io.TextIOWrapper") object when _mode_ is “r” and file is compressed, like uncompressed files. (Contributed by Inada Naoki in [bpo-5758](https://bugs.python.org/issue?@action=redirect&bpo=5758).)
### faulthandler[¶](https://docs.python.org/3/whatsnew/3.10.html#faulthandler "Link to this heading")
The [`faulthandler`](https://docs.python.org/3/library/faulthandler.html#module-faulthandler "faulthandler: Dump the Python traceback.") module now detects if a fatal error occurs during a garbage collector collection. (Contributed by Victor Stinner in [bpo-44466](https://bugs.python.org/issue?@action=redirect&bpo=44466).)
### gc[¶](https://docs.python.org/3/whatsnew/3.10.html#gc "Link to this heading")
Add audit hooks for [`gc.get_objects()`](https://docs.python.org/3/library/gc.html#gc.get_objects "gc.get_objects"), [`gc.get_referrers()`](https://docs.python.org/3/library/gc.html#gc.get_referrers "gc.get_referrers") and [`gc.get_referents()`](https://docs.python.org/3/library/gc.html#gc.get_referents "gc.get_referents"). (Contributed by Pablo Galindo in [bpo-43439](https://bugs.python.org/issue?@action=redirect&bpo=43439).)
### glob[¶](https://docs.python.org/3/whatsnew/3.10.html#glob "Link to this heading")
Ad