Title: Python 3.2 Release Notes
URL: https://docs.python.org/3/whatsnew/3.2.html
Summary: The Python 3.2 release includes an auxiliary pure Python implementation of the datetime module for improved readability, the removal of the unmaintained Demo directory with some demos integrated into documentation, and enhancements to IDLE, including a format menu option for cleaning source files and improved compatibility on Mac OS X.
---

atetime "datetime: Basic date and time types.") module now has an auxiliary implementation in pure Python. No functionality was changed. This just provides an easier-to-read alternate implementation.
(Contributed by Alexander Belopolsky in [bpo-9528](https://bugs.python.org/issue?@action=redirect&bpo=9528).)
  * The unmaintained `Demo` directory has been removed. Some demos were integrated into the documentation, some were moved to the `Tools/demo` directory, and others were removed altogether.
(Contributed by Georg Brandl in [bpo-7962](https://bugs.python.org/issue?@action=redirect&bpo=7962).)


## IDLE[¶](https://docs.python.org/3/whatsnew/3.2.html#idle "Link to this heading")
  * The format menu now has an option to clean source files by stripping trailing whitespace.
(Contributed by Raymond Hettinger; [bpo-5150](https://bugs.python.org/issue?@action=redirect&bpo=5150).)
  * IDLE on Mac OS X now works with both Carbon AquaTk and Cocoa AquaTk.
(Contributed by Kevin Walzer, Ned Deily, and Ronald Oussoren; [bpo-6075](https://bugs.python.org/issue?@action=redirect&bpo=6075).)


## Code Repository[¶](https://docs.python.org/3/whatsnew/3.2.html#code-repository "Link to this heading")
In addition to the existing Subversion code repository at <https://svn.python.org> there is now a [Mercurial](https://www.mercurial-scm.org/) repository at <https://hg.python.org/>.
After the 3.2 release, there are plans to switch to Mercurial as the primary repository. This distributed version control system should make it easier for members of the community to create and share external changesets. See [**PEP 385**](https://peps.python.org/pep-0385/) for details.
To learn to use the new version control system, see the [Quick Start](https://www.mercurial-scm.org/wiki/QuickStart) or the [Guide to Mercurial Workflows](https://www.mercurial-scm.org/guide).
## Build and C API Changes[¶](https://docs.python.org/3/whatsnew/3.2.html#build-and-c-api-changes "Link to this heading")
Changes to Python’s build process and to the C API include:
  * The _idle_ , _pydoc_ and _2to3_ scripts are now installed with a version-specific suffix on `make altinstall` ([bpo-10679](https://bugs.python.org/issue?@action=redirect&bpo=10679)).
  * The C functions that access the Unicode Database now accept and return characters from the full Unicode range, even on narrow unicode builds (Py_UNICODE_TOLOWER, Py_UNICODE_ISDECIMAL, and others). A visible difference in Python is that [`unicodedata.numeric()`](https://docs.python.org/3/library/unicodedata.html#unicodedata.numeric "unicodedata.numeric") now returns the correct value for large code points, and [`repr()`](https://docs.python.org/3/library/functions.html#repr "repr") may consider more characters as printable.
(Reported by Bupjoe Lee and fixed by Amaury Forgeot D’Arc; [bpo-5127](https://bugs.python.org/issue?@action=redirect&bpo=5127).)
  * Computed gotos are now enabled by default on supported compilers (which are detected by the configure script). They can still be disabled selectively by specifying `--without-computed-gotos`.
(Contributed by Antoine Pitrou; [bpo-9203](https://bugs.python.org/issue?@action=redirect&bpo=9203).)
  * The option `--with-wctype-functions` was removed. The built-in unicode database is now used for all functions.
(Contributed by Amaury Forgeot D’Arc; [bpo-9210](https://bugs.python.org/issue?@action=redirect&bpo=9210).)
  * Hash values are now values of a new type, [`Py_hash_t`](https://docs.python.org/3/c-api/hash.html#c.Py_hash_t "Py_hash_t"), which is defined to be the same size as a pointer. Previously they were of type long, which on some 64-bit operating systems is still only 32 bits long. As a result of this fix, [`set`](https://docs.python.org/3/library/stdtypes.html#set "set") and [`dict`](https://docs.python.org/3/library/stdtypes.html#dict "dict") can now hold more than `2**32` entries on builds with 64-bit pointers (previously, they could grow to that size but their performance degraded catastrophically).
(Suggested by Raymond Hettinger and implemented by Benjamin Peterson; [bpo-9778](https://bugs.python.org/issue?@action=redirect&bpo=9778).)
  * A new macro `Py_VA_COPY` copies the state of the variable argument list. It is equivalent to C99 _va_copy_ but available on all Python platforms ([bpo-2443](https://bugs.python.org/issue?@action=redirect&bpo=2443)).
  * A new C API function `PySys_SetArgvEx()` allows an embedded interpreter to set [`sys.argv`](https://docs.python.org/3/library/sys.html#sys.argv "sys.argv") without also modifying [`sys.path`](https://docs.python.org/3/library/sys.html#sys.path "sys.path") ([bpo-5753](https://bugs.python.org/issue?@action=redirect&bpo=5753)).
  * `PyEval_CallObject()` is now only available in macro form. The function declaration, which was kept for backwards compatibility reasons, is now removed – the macro was introduced in 1997 ([bpo-8276](https://bugs.python.org/issue?@action=redirect&bpo=8276)).
  * There is a new funct