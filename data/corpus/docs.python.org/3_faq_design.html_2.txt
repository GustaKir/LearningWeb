Title: Design and History FAQ
URL: https://docs.python.org/3/faq/design.html
Summary: This section of the Python documentation addresses common questions regarding the design choices and historical aspects of Python, including the use of indentation, issues with arithmetic operations, floating-point accuracy, string immutability, and the explicit requirement of 'self' in method definitions.
---

# [Design and History FAQ](https://docs.python.org/3/faq/design.html#id2)[¶](https://docs.python.org/3/faq/design.html#design-and-history-faq "Link to this heading")
Contents
  * [Design and History FAQ](https://docs.python.org/3/faq/design.html#design-and-history-faq)
    * [Why does Python use indentation for grouping of statements?](https://docs.python.org/3/faq/design.html#why-does-python-use-indentation-for-grouping-of-statements)
    * [Why am I getting strange results with simple arithmetic operations?](https://docs.python.org/3/faq/design.html#why-am-i-getting-strange-results-with-simple-arithmetic-operations)
    * [Why are floating-point calculations so inaccurate?](https://docs.python.org/3/faq/design.html#why-are-floating-point-calculations-so-inaccurate)
    * [Why are Python strings immutable?](https://docs.python.org/3/faq/design.html#why-are-python-strings-immutable)
    * [Why must ‘self’ be used explicitly in method definitions and calls?](https://docs.python.org/3/faq/design.html#why-must-self-be-used-explicitly-in-method-definitions-and-calls)
    * [Why can’t I use an assignment in an expression?](https://docs.python.org/3/faq/design.html#why-can-t-i-use-an-assignment-in-an-expression)
    * [Why does Python use methods for some functionality (e.g. list.index()) but functions for other (e.g. len(list))?](https://docs.python.org/3/faq/design.html#why-does-python-use-methods-for-some-functionality-e-g-list-index-but-functions-for-other-e-g-len-list)
    * [Why is join() a string method instead of a list or tuple method?](https://docs.python.org/3/faq/design.html#why-is-join-a-string-method-instead-of-a-list-or-tuple-method)
    * [How fast are exceptions?](https://docs.python.org/3/faq/design.html#how-fast-are-exceptions)
    * [Why isn’t there a switch or case statement in Python?](https://docs.python.org/3/faq/design.html#why-isn-t-there-a-switch-or-case-statement-in-python)
    * [Can’t you emulate threads in the interpreter instead of relying on an OS-specific thread implementation?](https://docs.python.org/3/faq/design.html#can-t-you-emulate-threads-in-the-interpreter-instead-of-relying-on-an-os-specific-thread-implementation)
    * [Why can’t lambda expressions contain statements?](https://docs.python.org/3/faq/design.html#why-can-t-lambda-expressions-contain-statements)
    * [Can Python be compiled to machine code, C or some other language?](https://docs.python.org/3/faq/design.html#can-python-be-compiled-to-machine-code-c-or-some-other-language)
    * [How does Python manage memory?](https://docs.python.org/3/faq/design.html#how-does-python-manage-memory)
    * [Why doesn’t CPython use a more traditional garbage collection scheme?](https://docs.python.org/3/faq/design.html#why-doesn-t-cpython-use-a-more-traditional-garbage-collection-scheme)
    * [Why isn’t all memory freed when CPython exits?](https://docs.python.org/3/faq/design.html#why-isn-t-all-memory-freed-when-cpython-exits)
    * [Why are there separate tuple and list data types?](https://docs.python.org/3/faq/design.html#why-are-there-separate-tuple-and-list-data-types)
    * [How are lists implemented in CPython?](https://docs.python.org/3/faq/design.html#how-are-lists-implemented-in-cpython)
    * [How are dictionaries implemented in CPython?](https://docs.python.org/3/faq/design.html#how-are-dictionaries-implemented-in-cpython)
    * [Why must dictionary keys be immutable?](https://docs.python.org/3/faq/design.html#why-must-dictionary-keys-be-immutable)
    * [Why doesn’t list.sort() return the sorted list?](https://docs.python.org/3/faq/design.html#why-doesn-t-list-sort-return-the-sorted-list)
    * [How do you specify and enforce an interface spec in Python?](https://docs.python.org/3/faq/design.html#how-do-you-specify-and-enforce-an-interface-spec-in-python)
    * [Why is there no goto?](https://docs.python.org/3/faq/design.html#why-is-there-no-goto)
    * [Why can’t raw strings (r-strings) end with a backslash?](https://docs.python.org/3/faq/design.html#why-can-t-raw-strings-r-strings-end-with-a-backslash)
    * [Why doesn’t Python have a “with” statement for attribute assignments?](https://docs.python.org/3/faq/design.html#why-doesn-t-python-have-a-with-statement-for-attribute-assignments)
    * [Why don’t generators support the with statement?](https://docs.python.org/3/faq/design.html#why-don-t-generators-support-the-with-statement)
    * [Why are colons required for the if/while/def/class statements?](https://docs.python.org/3/faq/design.html#why-are-colons-required-for-the-if-while-def-class-statements)
    * [Why does Python allow commas at the end of lists and tuples?](https://docs.python.org/3/faq/design.html#why-does-python-allow-commas-at-the-end-of-lists-and-tuples)