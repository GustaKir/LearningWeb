Title: ast — Abstract Syntax Trees
URL: https://docs.python.org/3/library/ast.html
Summary: The document provides an overview of the `ast` module in Python, which is used for manipulating Python's abstract syntax trees (AST). It includes sections on abstract grammar and various node classes, such as root nodes, literals, variables, and expressions.
---

[ ![Python logo](https://docs.python.org/3/_static/py.svg) ](https://www.python.org/) dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
Theme  Auto Light Dark
### [Table of Contents](https://docs.python.org/3/contents.html)
  * [`ast` — Abstract Syntax Trees](https://docs.python.org/3/library/ast.html)
    * [Abstract Grammar](https://docs.python.org/3/library/ast.html#abstract-grammar)
    * [Node classes](https://docs.python.org/3/library/ast.html#node-classes)
      * [Root nodes](https://docs.python.org/3/library/ast.html#root-nodes)
      * [Literals](https://docs.python.org/3/library/ast.html#literals)
      * [Variables](https://docs.python.org/3/library/ast.html#variables)
      * [Expressions](https://docs.python.org/3/library/ast.html#expressions)
        * [Subscripting](https://docs.python.org/3/library/ast.html#subscripting)
        * [Comprehensions](https://docs.python.org/3/library/ast.html#comprehensions)
      * [Statements](https://docs.python.org/3/library/ast.html#statements)
        * [Imports](https://docs.python.org/3/library/ast.html#imports)
      * [Control flow](https://docs.python.org/3/library/ast.html#control-flow)
      * [Pattern matching](https://docs.python.org/3/library/ast.html#pattern-matching)
      * [Type parameters](https://docs.python.org/3/library/ast.html#type-parameters)
      * [Function and class definitions](https://docs.python.org/3/library/ast.html#function-and-class-definitions)
      * [Async and await](https://docs.python.org/3/library/ast.html#async-and-await)
    * [`ast` Helpers](https://docs.python.org/3/library/ast.html#ast-helpers)
    * [Compiler Flags](https://docs.python.org/3/library/ast.html#compiler-flags)
    * [Command-Line Usage](https://docs.python.org/3/library/ast.html#command-line-usage)


#### Previous topic
[Python Language Services](https://docs.python.org/3/library/language.html "previous chapter")
#### Next topic
[`symtable` — Access to the compiler’s symbol tables](https://docs.python.org/3/library/symtable.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/ast.rst)


### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/library/symtable.html "symtable — Access to the compiler’s symbol tables") |
  * [previous](https://docs.python.org/3/library/language.html "Python Language Services") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [The Python Standard Library](https://docs.python.org/3/library/index.html) »
  * [Python Language Services](https://docs.python.org/3/library/language.html) »
  * [`ast` — Abstract Syntax Trees](https://docs.python.org/3/library/ast.html)
  * | 
  * Theme  Auto Light Dark |


# `ast` — Abstract Syntax Trees[¶](https://docs.python.org/3/library/ast.html#module-ast "Link to this heading")
**Source code:** [Lib/ast.py](https://github.com/python/cpython/tree/3.13/Lib/ast.py)
The [`ast`](https://docs.python.org/3/library/ast.html#module-ast "ast: Abstract Syntax Tree classes and manipulation.") module helps Python applications to process trees of the Python abstract syntax grammar. The abstract syntax itself might change with each Python release; this module helps to find out programmatically what the current grammar looks like.
An abstract syntax tree can be generated by passing [`ast.PyCF_ONLY_AST`](https://docs.python.org/3/library/ast.html#ast.PyCF_ONLY_AST "ast.PyCF_ONLY_AST") as a flag to the [`compile()`](https://docs.python.org/3/library/functions.html#compile "compile") built-in function, or using the [`parse()`](https://docs.python.org/3/library/ast.html#ast.parse "ast.parse") helper provided in this module. The result will be a tree of objects whose classes all inherit from [`ast.AST`](https://docs.python.org/3/library/ast.html#ast.AST "ast.AST"). An abstract syntax tree can be compiled into a Python code object using the built-in [`compile()`](https://docs.python.org/3/library/functions.html#compile "compile") function.
## Abstract Grammar[¶](https://docs.python.org/3/library/ast.html#abstract-grammar "Link to this heading")
The abstract grammar is currently defined as follows: