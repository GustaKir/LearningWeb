Title: Compiler Flags in Python's AST Module
URL: https://docs.python.org/3/library/ast.html
Summary: This section outlines the compiler flags that can be passed to the `compile()` function to modify program compilation. Key flags include `ast.PyCF_ALLOW_TOP_LEVEL_AWAIT`, which supports top-level async features; `ast.PyCF_ONLY_AST`, which returns an abstract syntax tree; and `ast.PyCF_OPTIMIZED_AST`, which provides an optimized AST based on the `optimize` argument.
---

```

## Compiler Flags[¶](https://docs.python.org/3/library/ast.html#compiler-flags "Link to this heading")
The following flags may be passed to [`compile()`](https://docs.python.org/3/library/functions.html#compile "compile") in order to change effects on the compilation of a program: 

ast.PyCF_ALLOW_TOP_LEVEL_AWAIT[¶](https://docs.python.org/3/library/ast.html#ast.PyCF_ALLOW_TOP_LEVEL_AWAIT "Link to this definition")
    
Enables support for top-level `await`, `async for`, `async with` and async comprehensions.
Added in version 3.8. 

ast.PyCF_ONLY_AST[¶](https://docs.python.org/3/library/ast.html#ast.PyCF_ONLY_AST "Link to this definition")
    
Generates and returns an abstract syntax tree instead of returning a compiled code object. 

ast.PyCF_OPTIMIZED_AST[¶](https://docs.python.org/3/library/ast.html#ast.PyCF_OPTIMIZED_AST "Link to this definition")
    
The returned AST is optimized according to the _optimize_ argument in [`compile()`](https://docs.python.org/3/library/functions.html#compile "compile") or [`ast.parse()`](https://docs.python.org/3/library/ast.html#ast.parse "ast.parse").
Added in version 3.13. 

ast.PyCF_TYPE_COMMENTS[¶](https://docs.python.org/3/library/ast.html#ast.PyCF_TYPE_COMMENTS "Link to this definition")
    
Enables support for [**PEP 484**](https://peps.python.org/pep-0484/) and [**PEP 526**](https://peps.python.org/pep-0526/) style type comments (`# type: <type>`, `# type: ignore <stuff>`).
Added in version 3.8.
## Command-Line Usage[¶](https://docs.python.org/3/library/ast.html#command-line-usage "Link to this heading")
Added in version 3.9.
The [`ast`](https://docs.python.org/3/library/ast.html#module-ast "ast: Abstract Syntax Tree classes and manipulation.") module can be executed as a script from the command line. It is as simple as:
```
python-mast[-m<mode>][-a][infile]