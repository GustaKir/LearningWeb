Title: Context Variables in Python
URL: https://docs.python.org/3/library/contextvars.html
Summary: This documentation section provides an overview of the `contextvars` module in Python, detailing context variables, manual context management, and support for asyncio. It serves as a guide for understanding and utilizing context management features within Python applications.
---

[ ![Python logo](https://docs.python.org/3/_static/py.svg) ](https://www.python.org/) dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
Theme  Auto Light Dark
### [Table of Contents](https://docs.python.org/3/contents.html)
  * [`contextvars` — Context Variables](https://docs.python.org/3/library/contextvars.html)
    * [Context Variables](https://docs.python.org/3/library/contextvars.html#context-variables)
    * [Manual Context Management](https://docs.python.org/3/library/contextvars.html#manual-context-management)
    * [asyncio support](https://docs.python.org/3/library/contextvars.html#asyncio-support)


#### Previous topic
[`queue` — A synchronized queue class](https://docs.python.org/3/library/queue.html "previous chapter")
#### Next topic
[`_thread` — Low-level threading API](https://docs.python.org/3/library/_thread.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/contextvars.rst)


### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/library/_thread.html "_thread — Low-level threading API") |
  * [previous](https://docs.python.org/3/library/queue.html "queue — A synchronized queue class") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [The Python Standard Library](https://docs.python.org/3/library/index.html) »
  * [Concurrent Execution](https://docs.python.org/3/library/concurrency.html) »
  * [`contextvars` — Context Variables](https://docs.python.org/3/library/contextvars.html)
  * | 
  * Theme  Auto Light Dark |


# `contextvars` — Context Variables[¶](https://docs.python.org/3/library/contextvars.html#module-contextvars "Link to this heading")
This module provides APIs to manage, store, and access context-local state. The [`ContextVar`](https://docs.python.org/3/library/contextvars.html#contextvars.ContextVar "contextvars.ContextVar") class is used to declare and work with _Context Variables_. The [`copy_context()`](https://docs.python.org/3/library/contextvars.html#contextvars.copy_context "contextvars.copy_context") function and the [`Context`](https://docs.python.org/3/library/contextvars.html#contextvars.Context "contextvars.Context") class should be used to manage the current context in asynchronous frameworks.
Context managers that have state should use Context Variables instead of [`threading.local()`](https://docs.python.org/3/library/threading.html#threading.local "threading.local") to prevent their state from bleeding to other code unexpectedly, when used in concurrent code.
See also [**PEP 567**](https://peps.python.org/pep-0567/) for additional details.
Added in version 3.7.
## Context Variables[¶](https://docs.python.org/3/library/contextvars.html#context-variables "Link to this heading") 

_class_ contextvars.ContextVar(_name_[, _*_ , _default_])[¶](https://docs.python.org/3/library/contextvars.html#contextvars.ContextVar "Link to this definition")
    
This class is used to declare a new Context Variable, e.g.:
```
var: ContextVar[int] = ContextVar('var', default=42)