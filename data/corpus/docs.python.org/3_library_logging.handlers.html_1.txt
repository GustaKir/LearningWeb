Title: Logging Handlers in Python
URL: https://docs.python.org/3/library/logging.handlers.html
Summary: This section outlines various logging handlers available in the Python logging package, emphasizing that StreamHandler, FileHandler, and NullHandler are defined in the core logging module. It specifically highlights the StreamHandler class.
---

The following useful handlers are provided in the package. Note that three of the handlers ([`StreamHandler`](https://docs.python.org/3/library/logging.handlers.html#logging.StreamHandler "logging.StreamHandler"), [`FileHandler`](https://docs.python.org/3/library/logging.handlers.html#logging.FileHandler "logging.FileHandler") and [`NullHandler`](https://docs.python.org/3/library/logging.handlers.html#logging.NullHandler "logging.NullHandler")) are actually defined in the [`logging`](https://docs.python.org/3/library/logging.html#module-logging "logging: Flexible event logging system for applications.") module itself, but have been documented here along with the other handlers.
## StreamHandler[¶](https://docs.python.org/3/library/logging.handlers.html#streamhandler "Link to this heading")
The [`StreamHandler`](https://docs.python.org/3/library/logging.handlers.html#logging.StreamHandler "logging.StreamHandler") class, located in the core [`logging`](https://docs.python.org/3/library/logging.html#module-logging "logging: Flexible event logging system for applications.") package, sends logging output to streams such as _sys.stdout_ , _sys.stderr_ or any file-like object (or, more precisely, any object which supports `write()` and `flush()` methods). 

_class_ logging.StreamHandler(_stream =None_)[¶](https://docs.python.org/3/library/logging.handlers.html#logging.StreamHandler "Link to this definition")
    
Returns a new instance of the [`StreamHandler`](https://docs.python.org/3/library/logging.handlers.html#logging.StreamHandler "logging.StreamHandler") class. If _stream_ is specified, the instance will use it for logging output; otherwise, _sys.stderr_ will be used. 

emit(_record_)[¶](https://docs.python.org/3/library/logging.handlers.html#logging.StreamHandler.emit "Link to this definition")
    
If a formatter is specified, it is used to format the record. The record is then written to the stream followed by [`terminator`](https://docs.python.org/3/library/logging.handlers.html#logging.StreamHandler.terminator "logging.StreamHandler.terminator"). If exception information is present, it is formatted using [`traceback.print_exception()`](https://docs.python.org/3/library/traceback.html#traceback.print_exception "traceback.print_exception") and appended to the stream. 

flush()[¶](https://docs.python.org/3/library/logging.handlers.html#logging.StreamHandler.flush "Link to this definition")
    
Flushes the stream by calling its [`flush()`](https://docs.python.org/3/library/logging.handlers.html#logging.StreamHandler.flush "logging.StreamHandler.flush") method. Note that the `close()` method is inherited from [`Handler`](https://docs.python.org/3/library/logging.html#logging.Handler "logging.Handler") and so does no output, so an explicit [`flush()`](https://docs.python.org/3/library/logging.handlers.html#logging.StreamHandler.flush "logging.StreamHandler.flush") call may be needed at times. 

setStream(_stream_)[¶](https://docs.python.org/3/library/logging.handlers.html#logging.StreamHandler.setStream "Link to this definition")
    
Sets the instance’s stream to the specified value, if it is different. The old stream is flushed before the new stream is set. 

Parameters:
    
**stream** – The stream that the handler should use. 

Returns:
    
the old stream, if the stream was changed, or `None` if it wasn’t.
Added in version 3.7. 

terminator[¶](https://docs.python.org/3/library/logging.handlers.html#logging.StreamHandler.terminator "Link to this definition")
    
String used as the terminator when writing a formatted record to a stream. Default value is `'\n'`.
If you don’t want a newline termination, you can set the handler instance’s `terminator` attribute to the empty string.
In earlier versions, the terminator was hardcoded as `'\n'`.
Added in version 3.2.
## FileHandler[¶](https://docs.python.org/3/library/logging.handlers.html#filehandler "Link to this heading")
The [`FileHandler`](https://docs.python.org/3/library/logging.handlers.html#logging.FileHandler "logging.FileHandler") class, located in the core [`logging`](https://docs.python.org/3/library/logging.html#module-logging "logging: Flexible event logging system for applications.") package, sends logging output to a disk file. It inherits the output functionality from [`StreamHandler`](https://docs.python.org/3/library/logging.handlers.html#logging.StreamHandler "logging.StreamHandler").