Title: Python 3 Changelog Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: Recent updates include new features such as asyncio.run_coroutine_threadsafe(), enhancements to CGIRequestHandler, and performance improvements to functools.lru_cache(). Various patches have been contributed to address these issues.
---

kets defaults to True if the O/S is ‘posix’ (except if the platform is Cygwin). Patch by Chris Laws.
  * [bpo-25304](https://bugs.python.org/issue?@action=redirect&bpo=25304): Add asyncio.run_coroutine_threadsafe(). This lets you submit a coroutine to a loop from another thread, returning a concurrent.futures.Future. By Vincent Michel.
  * [bpo-25232](https://bugs.python.org/issue?@action=redirect&bpo=25232): Fix CGIRequestHandler to split the query from the URL at the first question mark (?) rather than the last. Patch from Xiang Zhang.
  * [bpo-24657](https://bugs.python.org/issue?@action=redirect&bpo=24657): Prevent CGIRequestHandler from collapsing slashes in the query part of the URL as if it were a path. Patch from Xiang Zhang.
  * [bpo-24483](https://bugs.python.org/issue?@action=redirect&bpo=24483): C implementation of functools.lru_cache() now calculates key’s hash only once.
  * [bpo-22958](https://bugs.python.org/issue?@action=redirect&bpo=22958): Constructor and update method of weakref.WeakValueDictionary now accept the self and the dict keyword arguments.
  * [bpo-22609](https://bugs.python.org/issue?@action=redirect&bpo=22609): Constructor of collections.UserDict now accepts the self keyword argument.
  * [bpo-25111](https://bugs.python.org/issue?@action=redirect&bpo=25111): Fixed comparison of traceback.FrameSummary.
  * [bpo-25262](https://bugs.python.org/issue?@action=redirect&bpo=25262): Added support for BINBYTES8 opcode in Python implementation of unpickler. Highest 32 bits of 64-bit size for BINUNICODE8 and BINBYTES8 opcodes no longer silently ignored on 32-bit platforms in C implementation.
  * [bpo-25034](https://bugs.python.org/issue?@action=redirect&bpo=25034): Fix string.Formatter problem with auto-numbering and nested format_specs. Patch by Anthon van der Neut.
  * [bpo-25233](https://bugs.python.org/issue?@action=redirect&bpo=25233): Rewrite the guts of asyncio.Queue and asyncio.Semaphore to be more understandable and correct.
  * [bpo-25203](https://bugs.python.org/issue?@action=redirect&bpo=25203): Failed readline.set_completer_delims() no longer left the module in inconsistent state.
  * [bpo-23600](https://bugs.python.org/issue?@action=redirect&bpo=23600): Default implementation of tzinfo.fromutc() was returning wrong results in some cases.
  * [bpo-23329](https://bugs.python.org/issue?@action=redirect&bpo=23329): Allow the ssl module to be built with older versions of LibreSSL.
  * Prevent overflow in _Unpickler_Read.
  * [bpo-25047](https://bugs.python.org/issue?@action=redirect&bpo=25047): The XML encoding declaration written by Element Tree now respects the letter case given by the user. This restores the ability to write encoding names in uppercase like “UTF-8”, which worked in Python 2.
  * [bpo-25135](https://bugs.python.org/issue?@action=redirect&bpo=25135): Make deque_clear() safer by emptying the deque before clearing. This helps avoid possible reentrancy issues.
  * [bpo-19143](https://bugs.python.org/issue?@action=redirect&bpo=19143): platform module now reads Windows version from kernel32.dll to avoid compatibility shims.
  * [bpo-25092](https://bugs.python.org/issue?@action=redirect&bpo=25092): Fix datetime.strftime() failure when errno was already set to EINVAL.
  * [bpo-23517](https://bugs.python.org/issue?@action=redirect&bpo=23517): Fix rounding in fromtimestamp() and utcfromtimestamp() methods of datetime.datetime: microseconds are now rounded to nearest with ties going to nearest even integer (ROUND_HALF_EVEN), instead of being rounding towards minus infinity (ROUND_FLOOR). It’s important that these methods use the same rounding mode than datetime.timedelta to keep the property: (datetime(1970,1,1) + timedelta(seconds=t)) == datetime.utcfromtimestamp(t). It also the rounding mode used by round(float) for example.
  * [bpo-25155](https://bugs.python.org/issue?@action=redirect&bpo=25155): Fix datetime.datetime.now() and datetime.datetime.utcnow() on Windows to support date after year 2038. It was a regression introduced in Python 3.5.0.
  * [bpo-25108](https://bugs.python.org/issue?@action=redirect&bpo=25108): Omitted internal frames in traceback functions print_stack(), format_stack(), and extract_stack() called without arguments.
  * [bpo-25118](https://bugs.python.org/issue?@action=redirect&bpo=25118): Fix a regression of Python 3.5.0 in os.waitpid() on Windows.
  * [bpo-24684](https://bugs.python.org/issue?@action=redirect&bpo=24684): socket.socket.getaddrinfo() now calls PyUnicode_AsEncodedString() instead of calling the encode() method of the host, to handle correctly custom string with an encode() method which doesn’t return a byte string.