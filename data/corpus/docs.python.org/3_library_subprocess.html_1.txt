Title: Subprocess Management in Python
URL: https://docs.python.org/3/library/subprocess.html
Summary: The `subprocess` module in Python enables the spawning of new processes and interaction with their input/output/error pipes while obtaining their return codes. It serves as a replacement for older modules like `os.system` and `os.spawn*`. Additional information on its usage can be found in the corresponding sections of the documentation.
---

# `subprocess` — Subprocess management[¶](https://docs.python.org/3/library/subprocess.html#module-subprocess "Link to this heading")
**Source code:** [Lib/subprocess.py](https://github.com/python/cpython/tree/3.13/Lib/subprocess.py)
The [`subprocess`](https://docs.python.org/3/library/subprocess.html#module-subprocess "subprocess: Subprocess management.") module allows you to spawn new processes, connect to their input/output/error pipes, and obtain their return codes. This module intends to replace several older modules and functions:
```
os.system
os.spawn*

```

Information about how the [`subprocess`](https://docs.python.org/3/library/subprocess.html#module-subprocess "subprocess: Subprocess management.") module can be used to replace these modules and functions can be found in the following sections.
See also
[**PEP 324**](https://peps.python.org/pep-0324/) – PEP proposing the subprocess module
[Availability](https://docs.python.org/3/library/intro.html#availability): not Android, not iOS, not WASI.
This module is not supported on [mobile platforms](https://docs.python.org/3/library/intro.html#mobile-availability) or [WebAssembly platforms](https://docs.python.org/3/library/intro.html#wasm-availability).
## Using the [`subprocess`](https://docs.python.org/3/library/subprocess.html#module-subprocess "subprocess: Subprocess management.") Module[¶](https://docs.python.org/3/library/subprocess.html#using-the-subprocess-module "Link to this heading")
The recommended approach to invoking subprocesses is to use the [`run()`](https://docs.python.org/3/library/subprocess.html#subprocess.run "subprocess.run") function for all use cases it can handle. For more advanced use cases, the underlying [`Popen`](https://docs.python.org/3/library/subprocess.html#subprocess.Popen "subprocess.Popen") interface can be used directly.