Title: XML DOM Minidom Documentation
URL: https://docs.python.org/3/library/xml.dom.minidom.html
Summary: This section introduces the `xml.dom.minidom` module in Python, providing a minimal implementation of the Document Object Model (DOM). It includes links to various subsections such as DOM objects, examples, and the relationship between minidom and the DOM standard.
---

[ ![Python logo](https://docs.python.org/3/_static/py.svg) ](https://www.python.org/) dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
Theme  Auto Light Dark
### [Table of Contents](https://docs.python.org/3/contents.html)
  * [`xml.dom.minidom` — Minimal DOM implementation](https://docs.python.org/3/library/xml.dom.minidom.html)
    * [DOM Objects](https://docs.python.org/3/library/xml.dom.minidom.html#dom-objects)
    * [DOM Example](https://docs.python.org/3/library/xml.dom.minidom.html#dom-example)
    * [minidom and the DOM standard](https://docs.python.org/3/library/xml.dom.minidom.html#minidom-and-the-dom-standard)


#### Previous topic
[`xml.dom` — The Document Object Model API](https://docs.python.org/3/library/xml.dom.html "previous chapter")
#### Next topic
[`xml.dom.pulldom` — Support for building partial DOM trees](https://docs.python.org/3/library/xml.dom.pulldom.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/xml.dom.minidom.rst)


### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/library/xml.dom.pulldom.html "xml.dom.pulldom — Support for building partial DOM trees") |
  * [previous](https://docs.python.org/3/library/xml.dom.html "xml.dom — The Document Object Model API") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [The Python Standard Library](https://docs.python.org/3/library/index.html) »
  * [Structured Markup Processing Tools](https://docs.python.org/3/library/markup.html) »
  * [`xml.dom.minidom` — Minimal DOM implementation](https://docs.python.org/3/library/xml.dom.minidom.html)
  * | 
  * Theme  Auto Light Dark |


# `xml.dom.minidom` — Minimal DOM implementation[¶](https://docs.python.org/3/library/xml.dom.minidom.html#module-xml.dom.minidom "Link to this heading")
**Source code:** [Lib/xml/dom/minidom.py](https://github.com/python/cpython/tree/3.13/Lib/xml/dom/minidom.py)
[`xml.dom.minidom`](https://docs.python.org/3/library/xml.dom.minidom.html#module-xml.dom.minidom "xml.dom.minidom: Minimal Document Object Model \(DOM\) implementation.") is a minimal implementation of the Document Object Model interface, with an API similar to that in other languages. It is intended to be simpler than the full DOM and also significantly smaller. Users who are not already proficient with the DOM should consider using the [`xml.etree.ElementTree`](https://docs.python.org/3/library/xml.etree.elementtree.html#module-xml.etree.ElementTree "xml.etree.ElementTree: Implementation of the ElementTree API.") module for their XML processing instead.
Warning
The [`xml.dom.minidom`](https://docs.python.org/3/library/xml.dom.minidom.html#module-xml.dom.minidom "xml.dom.minidom: Minimal Document Object Model \(DOM\) implementation.") module is not secure against maliciously constructed data. If you need to parse untrusted or unauthenticated data see [XML vulnerabilities](https://docs.python.org/3/library/xml.html#xml-vulnerabilities).
DOM applications typically start by parsing some XML into a DOM. With [`xml.dom.minidom`](https://docs.python.org/3/library/xml.dom.minidom.html#module-xml.dom.minidom "xml.dom.minidom: Minimal Document Object Model \(DOM\) implementation."), this is done through the parse functions:
```
fromxml.dom.minidomimport parse, parseString
dom1 = parse('c:\\temp\\mydata.xml') # parse an XML file by name
datasource = open('c:\\temp\\mydata.xml')
dom2 = parse(datasource) # parse an open file
dom3 = parseString('<myxml>Some data<empty/> some more data</myxml>')