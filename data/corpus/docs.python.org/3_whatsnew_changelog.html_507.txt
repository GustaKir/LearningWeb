Title: Core and Builtins Changes in Python
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section highlights several bug fixes in Python's core and builtins, including resolving potential crashes in dictionary creation and `structseq_repr()`, and addressing memory management issues in `_ctypes.c` and `merge_consts_recursive()`. Additional improvements include enhancements to the parsermodule and an increase in the output limit for `repr(structseq)`.
---

### Core and Builtins[¶](https://docs.python.org/3/whatsnew/changelog.html#id458 "Link to this heading")
  * [bpo-36421](https://bugs.python.org/issue?@action=redirect&bpo=36421): Fix a possible double decref in _ctypes.c’s `PyCArrayType_new()`.
  * [bpo-36412](https://bugs.python.org/issue?@action=redirect&bpo=36412): Fix a possible crash when creating a new dictionary.
  * [bpo-36398](https://bugs.python.org/issue?@action=redirect&bpo=36398): Fix a possible crash in `structseq_repr()`.
  * [bpo-36256](https://bugs.python.org/issue?@action=redirect&bpo=36256): Fix bug in parsermodule when parsing a state in a DFA that has two or more arcs with labels of the same type. Patch by Pablo Galindo.
  * [bpo-36365](https://bugs.python.org/issue?@action=redirect&bpo=36365): repr(structseq) is no longer limited to 512 bytes.
  * [bpo-36374](https://bugs.python.org/issue?@action=redirect&bpo=36374): Fix a possible null pointer dereference in `merge_consts_recursive()`. Patch by Zackery Spytz.
  * [bpo-36236](https://bugs.python.org/issue?@action=redirect&bpo=36236): At Python initialization, the current directory is no longer prepended to [`sys.path`](https://docs.python.org/3/library/sys.html#sys.path "sys.path") if it has been removed.
  * [bpo-36352](https://bugs.python.org/issue?@action=redirect&bpo=36352): Python initialization now fails with an error, rather than silently truncating paths, if a path is too long.
  * [bpo-36301](https://bugs.python.org/issue?@action=redirect&bpo=36301): Python initialization now fails if decoding `pybuilddir.txt` configuration file fails at startup.
  * [bpo-36333](https://bugs.python.org/issue?@action=redirect&bpo=36333): Fix leak in _PyRuntimeState_Fini. Contributed by Stéphane Wirtel.
  * [bpo-36332](https://bugs.python.org/issue?@action=redirect&bpo=36332): The builtin [`compile()`](https://docs.python.org/3/library/functions.html#compile "compile") can now handle AST objects that contain assignment expressions. Patch by Pablo Galindo.
  * [bpo-36282](https://bugs.python.org/issue?@action=redirect&bpo=36282): Improved error message for too much positional arguments in some builtin functions.
  * [bpo-30040](https://bugs.python.org/issue?@action=redirect&bpo=30040): New empty dict uses fewer memory for now. It used more memory than empty dict created by `dict.clear()`. And empty dict creation and deletion is about 2x faster. Patch by Inada Naoki.
  * [bpo-36262](https://bugs.python.org/issue?@action=redirect&bpo=36262): Fix an unlikely memory leak on conversion from string to float in the function `_Py_dg_strtod()` used by `float(str)`, `complex(str)`, [`pickle.load()`](https://docs.python.org/3/library/pickle.html#pickle.load "pickle.load"), [`marshal.load()`](https://docs.python.org/3/library/marshal.html#marshal.load "marshal.load"), etc.
  * [bpo-36252](https://bugs.python.org/issue?@action=redirect&bpo=36252): Update Unicode databases to version 12.0.0.
  * [bpo-36218](https://bugs.python.org/issue?@action=redirect&bpo=36218): Fix a segfault occurring when sorting a list of heterogeneous values. Patch contributed by Rémi Lapeyre and Elliot Gorokhovsky.
  * [bpo-36188](https://bugs.python.org/issue?@action=redirect&bpo=36188): Cleaned up left-over vestiges of Python 2 unbound method handling in method objects and documentation. Patch by Martijn Pieters
  * [bpo-36124](https://bugs.python.org/issue?@action=redirect&bpo=36124): Add a new interpreter-specific dict and expose it in the C-API via PyInterpreterState_GetDict(). This parallels PyThreadState_GetDict(). However, extension modules should continue using PyModule_GetState() for their own internal per-interpreter state.
  * [bpo-35975](https://bugs.python.org/issue?@action=redirect&bpo=35975): Add a `feature_version` flag to `ast.parse()` (documented) and `compile()` (hidden) that allows tweaking the parser to support older versions of the grammar. In particular, if `feature_version` is 5 or 6, the hacks for the `async` and `await` keyword from PEP 492 are reinstated. (For 7 or higher, these are unconditionally treated as keywords, but they are still special tokens rather than `NAME` tokens that the parser driver recognizes.)
  * [bpo-31904](https://bugs.python.org/issue?@action=redirect&bpo=31904): Use UTF-8 as the system encoding on VxWorks.
  * [bpo-36048](https://bugs.python.org/issue?@action=redirect&bpo=36048): The [`__index__()`](https://docs.python.org/3/reference/datamodel.html#object.__index__ "object.__index__") special method will be used instead of [`__int__()`](https://docs.python.org/3/reference/datamodel.html#object.__int__ "object.__int__") for implicit conversion of Python numbers to C integers. Using the `__int__()` method in implicit conversions has been deprecated.
  * [bpo-35808](https://bugs.python.org/issue?@action=redirect&bpo=35808): Retire pgen and use a modified version of pgen2 to generate the parser. Patch by Pablo Galindo.