Title: String Preparation for Internationalization
URL: https://docs.python.org/3/library/stringprep.html
Summary: This documentation covers the string preparation process in Python, which is essential for internationalizing string data to ensure compatibility across different Unicode systems and standards.
---

[ ![Python logo](https://docs.python.org/3/_static/py.svg) ](https://www.python.org/) dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
Theme  Auto Light Dark
#### Previous topic
[`unicodedata` — Unicode Database](https://docs.python.org/3/library/unicodedata.html "previous chapter")
#### Next topic
[`readline` — GNU readline interface](https://docs.python.org/3/library/readline.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/stringprep.rst)


### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/library/readline.html "readline — GNU readline interface") |
  * [previous](https://docs.python.org/3/library/unicodedata.html "unicodedata — Unicode Database") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [The Python Standard Library](https://docs.python.org/3/library/index.html) »
  * [Text Processing Services](https://docs.python.org/3/library/text.html) »
  * [`stringprep` — Internet String Preparation](https://docs.python.org/3/library/stringprep.html)
  * | 
  * Theme  Auto Light Dark |


# `stringprep` — Internet String Preparation[¶](https://docs.python.org/3/library/stringprep.html#module-stringprep "Link to this heading")
**Source code:** [Lib/stringprep.py](https://github.com/python/cpython/tree/3.13/Lib/stringprep.py)
When identifying things (such as host names) in the internet, it is often necessary to compare such identifications for “equality”. Exactly how this comparison is executed may depend on the application domain, e.g. whether it should be case-insensitive or not. It may be also necessary to restrict the possible identifications, to allow only identifications consisting of “printable” characters.
[**RFC 3454**](https://datatracker.ietf.org/doc/html/rfc3454.html) defines a procedure for “preparing” Unicode strings in internet protocols. Before passing strings onto the wire, they are processed with the preparation procedure, after which they have a certain normalized form. The RFC defines a set of tables, which can be combined into profiles. Each profile must define which tables it uses, and what other optional parts of the `stringprep` procedure are part of the profile. One example of a `stringprep` profile is `nameprep`, which is used for internationalized domain names.
The module [`stringprep`](https://docs.python.org/3/library/stringprep.html#module-stringprep "stringprep: String preparation, as per RFC 3453") only exposes the tables from [**RFC 3454**](https://datatracker.ietf.org/doc/html/rfc3454.html). As these tables would be very large to represent as dictionaries or lists, the module uses the Unicode character database internally. The module source code itself was generated using the `mkstringprep.py` utility.
As a result, these tables are exposed as functions, not as data structures. There are two kinds of tables in the RFC: sets and mappings. For a set, [`stringprep`](https://docs.python.org/3/library/stringprep.html#module-stringprep "stringprep: String preparation, as per RFC 3453") provides the “characteristic function”, i.e. a function that returns `True` if the parameter is part of the set. For mappings, it provides the mapping function: given the key, it returns the associated value. Below is a list of all functions available in the module. 

stringprep.in_table_a1(_code_)[¶](https://docs.python.org/3/library/stringprep.html#stringprep.in_table_a1 "Link to this definition")
    
Determine whether _code_ is in tableA.1 (Unassigned code points in Unicode 3.2). 

stringprep.in_table_b1(_code_)[¶](https://docs.python.org/3/library/stringprep.html#stringprep.in_table_b1 "Link to this definition")
    
Determine whether _code_ is in tableB.1 (Commonly mapped to nothing). 

stringprep.map_table_b2(_code_)[¶](https://docs.python.org/3/library/stringprep.html#stringprep.map_table_b2 "Link to this definition")
    
Return the mapped value for _code_ according to tableB.2 (Mapping for case-folding used with NFKC).