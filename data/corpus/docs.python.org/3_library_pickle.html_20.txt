Title: Related Modules to Pickle in Python
URL: https://docs.python.org/3/library/pickle.html
Summary: This section provides links to related modules that enhance or complement the functionality of the pickle module in Python, including `copyreg` for constructor registration, `pickletools` for analyzing pickled data, `shelve` for persisting Python objects in indexed databases, and `copy` for shallow and deep object copying.
---

```

See also 

Module [`copyreg`](https://docs.python.org/3/library/copyreg.html#module-copyreg "copyreg: Register pickle support functions.")
    
Pickle interface constructor registration for extension types. 

Module [`pickletools`](https://docs.python.org/3/library/pickletools.html#module-pickletools "pickletools: Contains extensive comments about the pickle protocols and pickle-machine opcodes, as well as some useful functions.")
    
Tools for working with and analyzing pickled data. 

Module [`shelve`](https://docs.python.org/3/library/shelve.html#module-shelve "shelve: Python object persistence.")
    
Indexed databases of objects; uses [`pickle`](https://docs.python.org/3/library/pickle.html#module-pickle "pickle: Convert Python objects to streams of bytes and back."). 

Module [`copy`](https://docs.python.org/3/library/copy.html#module-copy "copy: Shallow and deep copy operations.")
    
Shallow and deep object copying. 

Module [`marshal`](https://docs.python.org/3/library/marshal.html#module-marshal "marshal: Convert Python objects to streams of bytes and back \(with different constraints\).")
    
High-performance serialization of built-in types.
Footnotes
[[1](https://docs.python.org/3/library/pickle.html#id1)]
Don’t confuse this with the [`marshal`](https://docs.python.org/3/library/marshal.html#module-marshal "marshal: Convert Python objects to streams of bytes and back \(with different constraints\).") module
[[2](https://docs.python.org/3/library/pickle.html#id3)]
This is why [`lambda`](https://docs.python.org/3/reference/expressions.html#lambda) functions cannot be pickled: all `lambda` functions share the same name: `<lambda>`.
[[3](https://docs.python.org/3/library/pickle.html#id4)]
The exception raised will likely be an [`ImportError`](https://docs.python.org/3/library/exceptions.html#ImportError "ImportError") or an [`AttributeError`](https://docs.python.org/3/library/exceptions.html#AttributeError "AttributeError") but it could be something else.
[[4](https://docs.python.org/3/library/pickle.html#id5)]
The [`copy`](https://docs.python.org/3/library/copy.html#module-copy "copy: Shallow and deep copy operations.") module uses this protocol for shallow and deep copying operations.
[[5](https://docs.python.org/3/library/pickle.html#id6)]
The limitation on alphanumeric characters is due to the fact that persistent IDs in protocol 0 are delimited by the newline character. Therefore if any kind of newline characters occurs in persistent IDs, the resulting pickled data will become unreadable.
### [Table of Contents](https://docs.python.org/3/contents.html)
  * [`pickle` — Python object serialization](https://docs.python.org/3/library/pickle.html)
    * [Relationship to other Python modules](https://docs.python.org/3/library/pickle.html#relationship-to-other-python-modules)
      * [Comparison with `marshal`](https://docs.python.org/3/library/pickle.html#comparison-with-marshal)
      * [Comparison with `json`](https://docs.python.org/3/library/pickle.html#comparison-with-json)
    * [Data stream format](https://docs.python.org/3/library/pickle.html#data-stream-format)
    * [Module Interface](https://docs.python.org/3/library/pickle.html#module-interface)
    * [What can be pickled and unpickled?](https://docs.python.org/3/library/pickle.html#what-can-be-pickled-and-unpickled)
    * [Pickling Class Instances](https://docs.python.org/3/library/pickle.html#pickling-class-instances)
      * [Persistence of External Objects](https://docs.python.org/3/library/pickle.html#persistence-of-external-objects)
      * [Dispatch Tables](https://docs.python.org/3/library/pickle.html#dispatch-tables)
      * [Handling Stateful Objects](https://docs.python.org/3/library/pickle.html#handling-stateful-objects)
    * [Custom Reduction for Types, Functions, and Other Objects](https://docs.python.org/3/library/pickle.html#custom-reduction-for-types-functions-and-other-objects)
    * [Out-of-band Buffers](https://docs.python.org/3/library/pickle.html#out-of-band-buffers)
      * [Provider API](https://docs.python.org/3/library/pickle.html#provider-api)
      * [Consumer API](https://docs.python.org/3/library/pickle.html#consumer-api)
      * [Example](https://docs.python.org/3/library/pickle.html#example)
    * [Restricting Globals](https://docs.python.org/3/library/pickle.html#restricting-globals)
    * [Performance](https://docs.python.org/3/library/pickle.html#performance)
    * [Examples](https://docs.python.org/3/library/pickle.html#examples)


#### Previous topic
[Data Persistence](https://docs.python.org/3/library/persistence.html "previous chapter")
#### Next topic
[`copyreg` — Register `pickle` support functions](https://docs.python.org/3/library/copyreg.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/pickle.rst)