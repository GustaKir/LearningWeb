Title: Pickler Dispatch Table
URL: https://docs.python.org/3/library/pickle.html
Summary: The dispatch table of a pickler object is a registry of reduction functions for classes, allowing customization of the pickling process. It maps classes to their corresponding reduction functions, which adhere to the interface of the __reduce__() method. By default, picklers do not have their own dispatch tables and rely on the global table from the copyreg module.
---

dispatch_table[¶](https://docs.python.org/3/library/pickle.html#pickle.Pickler.dispatch_table "Link to this definition")
    
A pickler object’s dispatch table is a registry of _reduction functions_ of the kind which can be declared using [`copyreg.pickle()`](https://docs.python.org/3/library/copyreg.html#copyreg.pickle "copyreg.pickle"). It is a mapping whose keys are classes and whose values are reduction functions. A reduction function takes a single argument of the associated class and should conform to the same interface as a [`__reduce__()`](https://docs.python.org/3/library/pickle.html#object.__reduce__ "object.__reduce__") method.
By default, a pickler object will not have a [`dispatch_table`](https://docs.python.org/3/library/pickle.html#pickle.Pickler.dispatch_table "pickle.Pickler.dispatch_table") attribute, and it will instead use the global dispatch table managed by the [`copyreg`](https://docs.python.org/3/library/copyreg.html#module-copyreg "copyreg: Register pickle support functions.") module. However, to customize the pickling for a specific pickler object one can set the [`dispatch_table`](https://docs.python.org/3/library/pickle.html#pickle.Pickler.dispatch_table "pickle.Pickler.dispatch_table") attribute to a dict-like object. Alternatively, if a subclass of [`Pickler`](https://docs.python.org/3/library/pickle.html#pickle.Pickler "pickle.Pickler") has a [`dispatch_table`](https://docs.python.org/3/library/pickle.html#pickle.Pickler.dispatch_table "pickle.Pickler.dispatch_table") attribute then this will be used as the default dispatch table for instances of that class.
See [Dispatch Tables](https://docs.python.org/3/library/pickle.html#pickle-dispatch) for usage examples.
Added in version 3.3. 

reducer_override(_obj_)[¶](https://docs.python.org/3/library/pickle.html#pickle.Pickler.reducer_override "Link to this definition")
    
Special reducer that can be defined in [`Pickler`](https://docs.python.org/3/library/pickle.html#pickle.Pickler "pickle.Pickler") subclasses. This method has priority over any reducer in the [`dispatch_table`](https://docs.python.org/3/library/pickle.html#pickle.Pickler.dispatch_table "pickle.Pickler.dispatch_table"). It should conform to the same interface as a [`__reduce__()`](https://docs.python.org/3/library/pickle.html#object.__reduce__ "object.__reduce__") method, and can optionally return [`NotImplemented`](https://docs.python.org/3/library/constants.html#NotImplemented "NotImplemented") to fallback on [`dispatch_table`](https://docs.python.org/3/library/pickle.html#pickle.Pickler.dispatch_table "pickle.Pickler.dispatch_table")-registered reducers to pickle `obj`.
For a detailed example, see [Custom Reduction for Types, Functions, and Other Objects](https://docs.python.org/3/library/pickle.html#reducer-override).
Added in version 3.8. 

fast[¶](https://docs.python.org/3/library/pickle.html#pickle.Pickler.fast "Link to this definition")
    
Deprecated. Enable fast mode if set to a true value. The fast mode disables the usage of memo, therefore speeding the pickling process by not generating superfluous PUT opcodes. It should not be used with self-referential objects, doing otherwise will cause [`Pickler`](https://docs.python.org/3/library/pickle.html#pickle.Pickler "pickle.Pickler") to recurse infinitely.
Use [`pickletools.optimize()`](https://docs.python.org/3/library/pickletools.html#pickletools.optimize "pickletools.optimize") if you need more compact pickles.