Title: Error Number Constants in Python's Errno Module
URL: https://docs.python.org/3/genindex-E.html
Summary: This chunk lists several error number constants defined in the Python errno module, including ENOPOLICY, ENOPROTOOPT, ENOSPC, ENOSR, ENOSTR, ENOSYS, ENOTACTIVE, ENOTBLK, ENOTCAPABLE, ENOTCONN, ENOTDIR, and ENOTEMPTY.
---

g/3/library/errno.html#errno.ENOPOLICY)
  * [ENOPROTOOPT (in module errno)](https://docs.python.org/3/library/errno.html#errno.ENOPROTOOPT)
  * [ENOSPC (in module errno)](https://docs.python.org/3/library/errno.html#errno.ENOSPC)
  * [ENOSR (in module errno)](https://docs.python.org/3/library/errno.html#errno.ENOSR)
  * [ENOSTR (in module errno)](https://docs.python.org/3/library/errno.html#errno.ENOSTR)
  * [ENOSYS (in module errno)](https://docs.python.org/3/library/errno.html#errno.ENOSYS)
  * [ENOTACTIVE (in module errno)](https://docs.python.org/3/library/errno.html#errno.ENOTACTIVE)
  * [ENOTBLK (in module errno)](https://docs.python.org/3/library/errno.html#errno.ENOTBLK)
  * [ENOTCAPABLE (in module errno)](https://docs.python.org/3/library/errno.html#errno.ENOTCAPABLE)
  * [ENOTCONN (in module errno)](https://docs.python.org/3/library/errno.html#errno.ENOTCONN)
  * [ENOTDIR (in module errno)](https://docs.python.org/3/library/errno.html#errno.ENOTDIR)
  * [ENOTEMPTY (in module errno)](https://docs.python.org/3/library/errno.html#errno.ENOTEMPTY)
  * [ENOTNAM (in module errno)](https://docs.python.org/3/library/errno.html#errno.ENOTNAM)
  * [ENOTRECOVERABLE (in module errno)](https://docs.python.org/3/library/errno.html#errno.ENOTRECOVERABLE)
  * [ENOTSOCK (in module errno)](https://docs.python.org/3/library/errno.html#errno.ENOTSOCK)
  * [ENOTSUP (in module errno)](https://docs.python.org/3/library/errno.html#errno.ENOTSUP)
  * [ENOTTY (in module errno)](https://docs.python.org/3/library/errno.html#errno.ENOTTY)
  * [ENOTUNIQ (in module errno)](https://docs.python.org/3/library/errno.html#errno.ENOTUNIQ)
  * [ENQ (in module curses.ascii)](https://docs.python.org/3/library/curses.ascii.html#curses.ascii.ENQ)
  * [enqueue() (logging.handlers.QueueHandler method)](https://docs.python.org/3/library/logging.handlers.html#logging.handlers.QueueHandler.enqueue)
  * [enqueue_sentinel() (logging.handlers.QueueListener method)](https://docs.python.org/3/library/logging.handlers.html#logging.handlers.QueueListener.enqueue_sentinel)
  * [ensure_directories() (venv.EnvBuilder method)](https://docs.python.org/3/library/venv.html#venv.EnvBuilder.ensure_directories)
  * [ensure_future() (in module asyncio)](https://docs.python.org/3/library/asyncio-future.html#asyncio.ensure_future)
  * ensurepip 
    * [module](https://docs.python.org/3/library/ensurepip.html#module-ensurepip)
  * ensurepip command line option 
    * [--altinstall](https://docs.python.org/3/library/ensurepip.html#cmdoption-ensurepip-altinstall)
    * [--default-pip](https://docs.python.org/3/library/ensurepip.html#cmdoption-ensurepip-default-pip)
    * [--root](https://docs.python.org/3/library/ensurepip.html#cmdoption-ensurepip-root)
    * [--user](https://docs.python.org/3/library/ensurepip.html#cmdoption-ensurepip-user)
  * [enter() (sched.scheduler method)](https://docs.python.org/3/library/sched.html#sched.scheduler.enter)
  * [enter_async_context() (contextlib.AsyncExitStack method)](https://docs.python.org/3/library/contextlib.html#contextlib.AsyncExitStack.enter_async_context)
  * [enter_context() (contextlib.ExitStack method)](https://docs.python.org/3/library/contextlib.html#contextlib.ExitStack.enter_context)
  * [enterabs() (sched.scheduler method)](https://docs.python.org/3/library/sched.html#sched.scheduler.enterabs)
  * [enterAsyncContext() (unittest.IsolatedAsyncioTestCase method)](https://docs.python.org/3/library/unittest.html#unittest.IsolatedAsyncioTestCase.enterAsyncContext)
  * [enterClassContext() (unittest.TestCase class method)](https://docs.python.org/3/library/unittest.html#unittest.TestCase.enterClassContext)
  * [enterContext() (unittest.TestCase method)](https://docs.python.org/3/library/unittest.html#unittest.TestCase.enterContext)
  * [enterModuleContext() (in module unittest)](https://docs.python.org/3/library/unittest.html#unittest.enterModuleContext)
  * [entities (xml.dom.DocumentType attribute)](https://docs.python.org/3/library/xml.dom.html#xml.dom.DocumentType.entities)
  * [EntityDeclHandler() (xml.parsers.expat.xmlparser method)](https://docs.python.org/3/library/pyexpat.html#xml.parsers.expat.xmlparser.EntityDeclHandler)
  * [entitydefs (in module html.entities)](https://docs.python.org/3/library/html.entities.html#html.entities.entitydefs)
  * [EntityResolver (class in xml.sax.handler)](https://docs.python.org/3/library/xml.sax.handler.html#xml.sax.handler.EntityResolver)
  * [entry_points() (in module importlib.metadata)](https://docs.python.org/3/library/importlib.metadata.html#importlib.metadata.entry_points)
  * [EntryPoint (class in importlib.metadata)](https://docs.python.org/3/library/importlib.metadata.html#importlib.metadata.EntryPoint)
  * [EntryPoints (class in importlib.metadata)](https://docs.python.org/3/library/importlib.metadata.html#importlib.metadata.EntryPoints)
  * enum 
    * [module](https://docs.python.org/3/library/enum.html#module-enum)
  * [Enum (class in enum)](https://docs.pyth