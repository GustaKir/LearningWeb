Title: Python 3.5 Release Notes - IDLE and imaplib Improvements
URL: https://docs.python.org/3/whatsnew/3.5.html
Summary: This section highlights improvements to the IDLE shell and editor through updates in the idlelib module, as well as the addition of context manager support in the IMAP4 class within the imaplib module, allowing for automatic logout in 'with' statements.
---

```

(Contributed by Martin Panter in [bpo-3566](https://bugs.python.org/issue?@action=redirect&bpo=3566).)
### idlelib and IDLE[¶](https://docs.python.org/3/whatsnew/3.5.html#idlelib-and-idle "Link to this heading")
Since idlelib implements the IDLE shell and editor and is not intended for import by other programs, it gets improvements with every release. See `Lib/idlelib/NEWS.txt` for a cumulative list of changes since 3.4.0, as well as changes made in future 3.5.x releases. This file is also available from the IDLE Help ‣ About IDLE dialog.
### imaplib[¶](https://docs.python.org/3/whatsnew/3.5.html#imaplib "Link to this heading")
The [`IMAP4`](https://docs.python.org/3/library/imaplib.html#imaplib.IMAP4 "imaplib.IMAP4") class now supports the [context manager](https://docs.python.org/3/glossary.html#term-context-manager) protocol. When used in a [`with`](https://docs.python.org/3/reference/compound_stmts.html#with) statement, the IMAP4 `LOGOUT` command will be called automatically at the end of the block. (Contributed by Tarek Ziadé and Serhiy Storchaka in [bpo-4972](https://bugs.python.org/issue?@action=redirect&bpo=4972).)
The [`imaplib`](https://docs.python.org/3/library/imaplib.html#module-imaplib "imaplib: IMAP4 protocol client \(requires sockets\).") module now supports [**RFC 5161**](https://datatracker.ietf.org/doc/html/rfc5161.html) (ENABLE Extension) and [**RFC 6855**](https://datatracker.ietf.org/doc/html/rfc6855.html) (UTF-8 Support) via the [`IMAP4.enable()`](https://docs.python.org/3/library/imaplib.html#imaplib.IMAP4.enable "imaplib.IMAP4.enable") method. A new [`IMAP4.utf8_enabled`](https://docs.python.org/3/library/imaplib.html#imaplib.IMAP4.utf8_enabled "imaplib.IMAP4.utf8_enabled") attribute tracks whether or not [**RFC 6855**](https://datatracker.ietf.org/doc/html/rfc6855.html) support is enabled. (Contributed by Milan Oberkirch, R. David Murray, and Maciej Szulik in [bpo-21800](https://bugs.python.org/issue?@action=redirect&bpo=21800).)
The [`imaplib`](https://docs.python.org/3/library/imaplib.html#module-imaplib "imaplib: IMAP4 protocol client \(requires sockets\).") module now automatically encodes non-ASCII string usernames and passwords using UTF-8, as recommended by the RFCs. (Contributed by Milan Oberkirch in [bpo-21800](https://bugs.python.org/issue?@action=redirect&bpo=21800).)
### imghdr[¶](https://docs.python.org/3/whatsnew/3.5.html#imghdr "Link to this heading")
The `what()` function now recognizes the [OpenEXR](https://www.openexr.com) format (contributed by Martin Vignali and Claudiu Popa in [bpo-20295](https://bugs.python.org/issue?@action=redirect&bpo=20295)), and the [WebP](https://en.wikipedia.org/wiki/WebP) format (contributed by Fabrice Aneche and Claudiu Popa in [bpo-20197](https://bugs.python.org/issue?@action=redirect&bpo=20197).)
### importlib[¶](https://docs.python.org/3/whatsnew/3.5.html#importlib "Link to this heading")
The [`util.LazyLoader`](https://docs.python.org/3/library/importlib.html#importlib.util.LazyLoader "importlib.util.LazyLoader") class allows for lazy loading of modules in applications where startup time is important. (Contributed by Brett Cannon in [bpo-17621](https://bugs.python.org/issue?@action=redirect&bpo=17621).)
The [`abc.InspectLoader.source_to_code()`](https://docs.python.org/3/library/importlib.html#importlib.abc.InspectLoader.source_to_code "importlib.abc.InspectLoader.source_to_code") method is now a static method. This makes it easier to initialize a module object with code compiled from a string by running `exec(code, module.__dict__)`. (Contributed by Brett Cannon in [bpo-21156](https://bugs.python.org/issue?@action=redirect&bpo=21156).)
The new [`util.module_from_spec()`](https://docs.python.org/3/library/importlib.html#importlib.util.module_from_spec "importlib.util.module_from_spec") function is now the preferred way to create a new module. As opposed to creating a [`types.ModuleType`](https://docs.python.org/3/library/types.html#types.ModuleType "types.ModuleType") instance directly, this new function will set the various import-controlled attributes based on the passed-in spec object. (Contributed by Brett Cannon in [bpo-20383](https://bugs.python.org/issue?@action=redirect&bpo=20383).)
### inspect[¶](https://docs.python.org/3/whatsnew/3.5.html#inspect "Link to this heading")
Both the [`Signature`](https://docs.python.org/3/library/inspect.html#inspect.Signature "inspect.Signature") and [`Parameter`](https://docs.python.org/3/library/inspect.html#inspect.Parameter "inspect.Parameter") classes are now picklable and hashable. (Contributed by Yury Selivanov in [bpo-20726](https://bugs.python.org/issue?@action=redirect&bpo=20726) and [bpo-20334](https://bugs.python.org/issue?@action=redirect&bpo=20334).)
A new [`BoundArguments.apply_defaults()`](https://docs.python.org/3/library/inspect.html#inspect.BoundArguments.apply_defaults "inspect.BoundArguments.apply_defaults") method provides a way to set default values for missing a