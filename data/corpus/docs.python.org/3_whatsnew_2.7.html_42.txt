Title: Python 2.7 C Extensions and Embedding Changes
URL: https://docs.python.org/3/whatsnew/2.7.html
Summary: Python 2.7 introduces changes for C extensions, including raising a TypeError for certain integer format codes instead of a DeprecationWarning, and the new PyOS_string_to_double() function for string to double conversion. Additionally, the PySys_SetArgvEx() function has been added for better security in applications embedding Python.
---

```

(Python 2.7 actually produces slightly different output, since it returns a named tuple instead of a standard tuple.)


For C extensions:
  * C extensions that use integer format codes with the `PyArg_Parse*` family of functions will now raise a [`TypeError`](https://docs.python.org/3/library/exceptions.html#TypeError "TypeError") exception instead of triggering a [`DeprecationWarning`](https://docs.python.org/3/library/exceptions.html#DeprecationWarning "DeprecationWarning") ([bpo-5080](https://bugs.python.org/issue?@action=redirect&bpo=5080)).
  * Use the new [`PyOS_string_to_double()`](https://docs.python.org/3/c-api/conversion.html#c.PyOS_string_to_double "PyOS_string_to_double") function instead of the old `PyOS_ascii_strtod()` and `PyOS_ascii_atof()` functions, which are now deprecated.


For applications that embed Python:
  * The `PySys_SetArgvEx()` function was added, letting applications close a security hole when the existing `PySys_SetArgv()` function was used. Check whether you’re calling `PySys_SetArgv()` and carefully consider whether the application should be using `PySys_SetArgvEx()` with _updatepath_ set to false.


## New Features Added to Python 2.7 Maintenance Releases[¶](https://docs.python.org/3/whatsnew/2.7.html#new-features-added-to-python-2-7-maintenance-releases "Link to this heading")
New features may be added to Python 2.7 maintenance releases when the situation genuinely calls for it. Any such additions must go through the Python Enhancement Proposal process, and make a compelling case for why they can’t be adequately addressed by either adding the new feature solely to Python 3, or else by publishing it on the Python Package Index.
In addition to the specific proposals listed below, there is a general exemption allowing new `-3` warnings to be added in any Python 2.7 maintenance release.
### Two new environment variables for debug mode[¶](https://docs.python.org/3/whatsnew/2.7.html#two-new-environment-variables-for-debug-mode "Link to this heading")
In debug mode, the `[xxx refs]` statistic is not written by default, the `PYTHONSHOWREFCOUNT` environment variable now must also be set. (Contributed by Victor Stinner; [bpo-31733](https://bugs.python.org/issue?@action=redirect&bpo=31733).)
When Python is compiled with `COUNT_ALLOC` defined, allocation counts are no longer dumped by default anymore: the `PYTHONSHOWALLOCCOUNT` environment variable must now also be set. Moreover, allocation counts are now dumped into stderr, rather than stdout. (Contributed by Victor Stinner; [bpo-31692](https://bugs.python.org/issue?@action=redirect&bpo=31692).)
Added in version 2.7.15.
### PEP 434: IDLE Enhancement Exception for All Branches[¶](https://docs.python.org/3/whatsnew/2.7.html#pep-434-idle-enhancement-exception-for-all-branches "Link to this heading")
[**PEP 434**](https://peps.python.org/pep-0434/) describes a general exemption for changes made to the IDLE development environment shipped along with Python. This exemption makes it possible for the IDLE developers to provide a more consistent user experience across all supported versions of Python 2 and 3.
For details of any IDLE changes, refer to the NEWS file for the specific release.
### PEP 466: Network Security Enhancements for Python 2.7[¶](https://docs.python.org/3/whatsnew/2.7.html#pep-466-network-security-enhancements-for-python-2-7 "Link to this heading")
[**PEP 466**](https://peps.python.org/pep-0466/) describes a number of network security enhancement proposals that have been approved for inclusion in Python 2.7 maintenance releases, with the first of those changes appearing in the Python 2.7.7 release.
[**PEP 466**](https://peps.python.org/pep-0466/) related features added in Python 2.7.7:
  * [`hmac.compare_digest()`](https://docs.python.org/3/library/hmac.html#hmac.compare_digest "hmac.compare_digest") was backported from Python 3 to make a timing attack resistant comparison operation available to Python 2 applications. (Contributed by Alex Gaynor; [bpo-21306](https://bugs.python.org/issue?@action=redirect&bpo=21306).)
  * OpenSSL 1.0.1g was upgraded in the official Windows installers published on python.org. (Contributed by Zachary Ware; [bpo-21462](https://bugs.python.org/issue?@action=redirect&bpo=21462).)


[**PEP 466**](https://peps.python.org/pep-0466/) related features added in Python 2.7.8:
  * [`hashlib.pbkdf2_hmac()`](https://docs.python.org/3/library/hashlib.html#hashlib.pbkdf2_hmac "hashlib.pbkdf2_hmac") was backported from Python 3 to make a hashing algorithm suitable for secure password storage broadly available to Python 2 applications. (Contributed by Alex Gaynor; [bpo-21304](https://bugs.python.org/issue?@action=redirect&bpo=21304).)
  * OpenSSL 1.0.1h was upgraded for the official Windows installers published on python.org. (Contributed by Zachary Ware in [bpo-21671](https://bugs.python.org/issue?@action=redirect&bpo=21671) for [**CVE 2014-0224**](https://www.cve.org/CVERecord?id=CVE-2014-0224).)