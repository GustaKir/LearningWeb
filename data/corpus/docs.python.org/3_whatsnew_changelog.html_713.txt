Title: Python 3.5.2 Release Candidate 1
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This release candidate, dated June 12, 2016, includes important security updates such as an expat library update to address a CVE vulnerability, a fix for a TLS stripping vulnerability in smtplib, and improvements to the os.urandom() function on Linux to enhance entropy pool management.
---

## Python 3.5.2 release candidate 1[¶](https://docs.python.org/3/whatsnew/changelog.html#python-3-5-2-release-candidate-1 "Link to this heading")
_Release date: 2016-06-12_
### Security[¶](https://docs.python.org/3/whatsnew/changelog.html#id728 "Link to this heading")
  * [bpo-26556](https://bugs.python.org/issue?@action=redirect&bpo=26556): Update expat to 2.1.1, fixes [**CVE 2015-1283**](https://www.cve.org/CVERecord?id=CVE-2015-1283).
  * Fix TLS stripping vulnerability in smtplib, [**CVE 2016-0772**](https://www.cve.org/CVERecord?id=CVE-2016-0772). Reported by Team Oststrom.
  * [bpo-26839](https://bugs.python.org/issue?@action=redirect&bpo=26839): On Linux, [`os.urandom()`](https://docs.python.org/3/library/os.html#os.urandom "os.urandom") now calls `getrandom()` with `GRND_NONBLOCK` to fall back on reading `/dev/urandom` if the urandom entropy pool is not initialized yet. Patch written by Colm Buckley.
  * [bpo-26657](https://bugs.python.org/issue?@action=redirect&bpo=26657): Fix directory traversal vulnerability with http.server on Windows. This fixes a regression that was introduced in 3.3.4rc1 and 3.4.0rc1. Based on patch by Philipp Hagemeister.
  * [bpo-26313](https://bugs.python.org/issue?@action=redirect&bpo=26313): ssl.py _load_windows_store_certs fails if windows cert store is empty. Patch by Baji.
  * [bpo-25939](https://bugs.python.org/issue?@action=redirect&bpo=25939): On Windows open the cert store readonly in ssl.enum_certificates.


### Core and Builtins[¶](https://docs.python.org/3/whatsnew/changelog.html#id729 "Link to this heading")
  * [bpo-27066](https://bugs.python.org/issue?@action=redirect&bpo=27066): Fixed SystemError if a custom opener (for open()) returns a negative number without setting an exception.
  * [bpo-20041](https://bugs.python.org/issue?@action=redirect&bpo=20041): Fixed TypeError when frame.f_trace is set to None. Patch by Xavier de Gaye.
  * [bpo-26168](https://bugs.python.org/issue?@action=redirect&bpo=26168): Fixed possible refleaks in failing Py_BuildValue() with the “N” format unit.
  * [bpo-26991](https://bugs.python.org/issue?@action=redirect&bpo=26991): Fix possible refleak when creating a function with annotations.
  * [bpo-27039](https://bugs.python.org/issue?@action=redirect&bpo=27039): Fixed bytearray.remove() for values greater than 127. Patch by Joe Jevnik.
  * [bpo-23640](https://bugs.python.org/issue?@action=redirect&bpo=23640): int.from_bytes() no longer bypasses constructors for subclasses.
  * [bpo-26811](https://bugs.python.org/issue?@action=redirect&bpo=26811): gc.get_objects() no longer contains a broken tuple with NULL pointer.
  * [bpo-20120](https://bugs.python.org/issue?@action=redirect&bpo=20120): Use RawConfigParser for .pypirc parsing, removing support for interpolation unintentionally added with move to Python 3. Behavior no longer does any interpolation in .pypirc files, matching behavior in Python 2.7 and Setuptools 19.0.
  * [bpo-26659](https://bugs.python.org/issue?@action=redirect&bpo=26659): Make the builtin slice type support cycle collection.
  * [bpo-26718](https://bugs.python.org/issue?@action=redirect&bpo=26718): super.__init__ no longer leaks memory if called multiple times. NOTE: A direct call of super.__init__ is not endorsed!
  * [bpo-25339](https://bugs.python.org/issue?@action=redirect&bpo=25339): PYTHONIOENCODING now has priority over locale in setting the error handler for stdin and stdout.
  * [bpo-26494](https://bugs.python.org/issue?@action=redirect&bpo=26494): Fixed crash on iterating exhausting iterators. Affected classes are generic sequence iterators, iterators of str, bytes, bytearray, list, tuple, set, frozenset, dict, OrderedDict, corresponding views and os.scandir() iterator.
  * [bpo-26581](https://bugs.python.org/issue?@action=redirect&bpo=26581): If coding cookie is specified multiple times on a line in Python source code file, only the first one is taken to account.
  * [bpo-26464](https://bugs.python.org/issue?@action=redirect&bpo=26464): Fix str.translate() when string is ASCII and first replacements removes character, but next replacement uses a non-ASCII character or a string longer than 1 character. Regression introduced in Python 3.5.0.
  * [bpo-22836](https://bugs.python.org/issue?@action=redirect&bpo=22836): Ensure exception reports from PyErr_Display() and PyErr_WriteUnraisable() are sensible even when formatting them produces secondary errors. This affects the reports produced by sys.__excepthook__() and when __del__() raises an exception.
  * [bpo-26302](https://bugs.python.org/issue?@action=redirect&bpo=26302): Correct behavior to reject comma as a legal character for cookie names.
  * [bpo-4806](https://bugs.python.org/issue?@action=redirect&bpo=4806): Avoid masking the original TypeError exception when using star (`*`) unpacking in function calls. Based on patch by Hagen Fürstenau and Daniel Urban.
  * [bpo-27138](https://bugs.python.org/issue?@action=redirect&bpo=27138): Fix the doc co