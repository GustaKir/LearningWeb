Title: socket.sendmsg Method
URL: https://docs.python.org/3/library/socket.html
Summary: The socket.sendmsg method sends both normal and ancillary data to a socket by combining non-ancillary data from multiple buffers into a single message. The method accepts an iterable of bytes-like objects for non-ancillary data and optional ancillary data as tuples containing control message details. There may be system-imposed limits on the number of buffers used.
---

socket.sendmsg(_buffers_[, _ancdata_[, _flags_[, _address_]]])[Â¶](https://docs.python.org/3/library/socket.html#socket.socket.sendmsg "Link to this definition")
    
Send normal and ancillary data to the socket, gathering the non-ancillary data from a series of buffers and concatenating it into a single message. The _buffers_ argument specifies the non-ancillary data as an iterable of [bytes-like objects](https://docs.python.org/3/glossary.html#term-bytes-like-object) (e.g. [`bytes`](https://docs.python.org/3/library/stdtypes.html#bytes "bytes") objects); the operating system may set a limit ([`sysconf()`](https://docs.python.org/3/library/os.html#os.sysconf "os.sysconf") value `SC_IOV_MAX`) on the number of buffers that can be used. The _ancdata_ argument specifies the ancillary data (control messages) as an iterable of zero or more tuples `(cmsg_level, cmsg_type, cmsg_data)`, where _cmsg_level_ and _cmsg_type_ are integers specifying the protocol level and protocol-specific type respectively, and _cmsg_data_ is a bytes-like object holding the associated data. Note that some systems (in particular, systems without [`CMSG_SPACE()`](https://docs.python.org/3/library/socket.html#socket.CMSG_SPACE "socket.CMSG_SPACE")) might support sending only one control message per call. The _flags_ argument defaults to 0 and has the same meaning as for [`send()`](https://docs.python.org/3/library/socket.html#socket.socket.send "socket.socket.send"). If _address_ is supplied and not `None`, it sets a destination address for the message. The return value is the number of bytes of non-ancillary data sent.
The following function sends the list of file descriptors _fds_ over an [`AF_UNIX`](https://docs.python.org/3/library/socket.html#socket.AF_UNIX "socket.AF_UNIX") socket, on systems which support the `SCM_RIGHTS` mechanism. See also [`recvmsg()`](https://docs.python.org/3/library/socket.html#socket.socket.recvmsg "socket.socket.recvmsg").
```
importsocket,array
defsend_fds(sock, msg, fds):
  return sock.sendmsg([msg], [(socket.SOL_SOCKET, socket.SCM_RIGHTS, array.array("i", fds))])