Title: Python 3.12 Updates: UUID CLI and Performance Optimizations
URL: https://docs.python.org/3/whatsnew/3.12.html
Summary: The Python 3.12 release introduces a command-line interface for UUIDs and implements optimizations to reduce object sizes in Unicode and enhance performance through experimental BOLT binary optimizer support.
---

```

(Contributed by Giampaolo Rodola in [gh-48330](https://github.com/python/cpython/issues/48330))
### uuid[¶](https://docs.python.org/3/whatsnew/3.12.html#uuid "Link to this heading")
  * Add a [command-line interface](https://docs.python.org/3/library/uuid.html#uuid-cli). (Contributed by Adam Chhina in [gh-88597](https://github.com/python/cpython/issues/88597).)


## Optimizations[¶](https://docs.python.org/3/whatsnew/3.12.html#optimizations "Link to this heading")
  * Remove `wstr` and `wstr_length` members from Unicode objects. It reduces object size by 8 or 16 bytes on 64bit platform. ([**PEP 623**](https://peps.python.org/pep-0623/)) (Contributed by Inada Naoki in [gh-92536](https://github.com/python/cpython/issues/92536).)
  * Add experimental support for using the BOLT binary optimizer in the build process, which improves performance by 1-5%. (Contributed by Kevin Modzelewski in [gh-90536](https://github.com/python/cpython/issues/90536) and tuned by Donghee Na in [gh-101525](https://github.com/python/cpython/issues/101525))
  * Speed up the regular expression substitution (functions [`re.sub()`](https://docs.python.org/3/library/re.html#re.sub "re.sub") and [`re.subn()`](https://docs.python.org/3/library/re.html#re.subn "re.subn") and corresponding `re.Pattern` methods) for replacement strings containing group references by 2–3 times. (Contributed by Serhiy Storchaka in [gh-91524](https://github.com/python/cpython/issues/91524).)
  * Speed up [`asyncio.Task`](https://docs.python.org/3/library/asyncio-task.html#asyncio.Task "asyncio.Task") creation by deferring expensive string formatting. (Contributed by Itamar Oren in [gh-103793](https://github.com/python/cpython/issues/103793).)
  * The [`tokenize.tokenize()`](https://docs.python.org/3/library/tokenize.html#tokenize.tokenize "tokenize.tokenize") and [`tokenize.generate_tokens()`](https://docs.python.org/3/library/tokenize.html#tokenize.generate_tokens "tokenize.generate_tokens") functions are up to 64% faster as a side effect of the changes required to cover [**PEP 701**](https://peps.python.org/pep-0701/) in the [`tokenize`](https://docs.python.org/3/library/tokenize.html#module-tokenize "tokenize: Lexical scanner for Python source code.") module. (Contributed by Marta Gómez Macías and Pablo Galindo in [gh-102856](https://github.com/python/cpython/issues/102856).)
  * Speed up [`super()`](https://docs.python.org/3/library/functions.html#super "super") method calls and attribute loads via the new [`LOAD_SUPER_ATTR`](https://docs.python.org/3/library/dis.html#opcode-LOAD_SUPER_ATTR) instruction. (Contributed by Carl Meyer and Vladimir Matveev in [gh-103497](https://github.com/python/cpython/issues/103497).)