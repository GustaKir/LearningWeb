Title: FTP Command Methods in ftplib
URL: https://docs.python.org/3/library/ftplib.html
Summary: This section describes methods in the ftplib module for sending commands to an FTP server. The method `sendcmd` sends a command string and returns the server's response. `voidcmd` also sends a command but raises an error if the response indicates failure. Additionally, `retrbinary` is mentioned for retrieving binary files.
---

sendcmd(_cmd_)[¶](https://docs.python.org/3/library/ftplib.html#ftplib.FTP.sendcmd "Link to this definition")
    
Send a simple command string to the server and return the response string.
Raises an [auditing event](https://docs.python.org/3/library/sys.html#auditing) `ftplib.sendcmd` with arguments `self`, `cmd`. 

voidcmd(_cmd_)[¶](https://docs.python.org/3/library/ftplib.html#ftplib.FTP.voidcmd "Link to this definition")
    
Send a simple command string to the server and handle the response. Return the response string if the response code corresponds to success (codes in the range 200–299). Raise [`error_reply`](https://docs.python.org/3/library/ftplib.html#ftplib.error_reply "ftplib.error_reply") otherwise.
Raises an [auditing event](https://docs.python.org/3/library/sys.html#auditing) `ftplib.sendcmd` with arguments `self`, `cmd`. 

retrbinary(_cmd_ , _callback_ , _blocksize =8192_, _rest =None_)[¶](https://docs.python.org/3/library/ftplib.html#ftplib.FTP.retrbinary "Link to this definition")
    
Retrieve a file in binary transfer mode. 

Parameters:
    
  * **cmd** ([_str_](https://docs.python.org/3/library/stdtypes.html#str "str")) – An appropriate `RETR` command: `"RETR _filename_"`.
  * **callback** ([callable](https://docs.python.org/3/glossary.html#term-callable)) – A single parameter callable that is called for each block of data received, with its single argument being the data as [`bytes`](https://docs.python.org/3/library/stdtypes.html#bytes "bytes").
  * **blocksize** ([_int_](https://docs.python.org/3/library/functions.html#int "int")) – The maximum chunk size to read on the low-level [`socket`](https://docs.python.org/3/library/socket.html#socket.socket "socket.socket") object created to do the actual transfer. This also corresponds to the largest size of data that will be passed to _callback_. Defaults to `8192`.
  * **rest** ([_int_](https://docs.python.org/3/library/functions.html#int "int")) – A `REST` command to be sent to the server. See the documentation for the _rest_ parameter of the [`transfercmd()`](https://docs.python.org/3/library/ftplib.html#ftplib.FTP.transfercmd "ftplib.FTP.transfercmd") method.



retrlines(_cmd_ , _callback =None_)[¶](https://docs.python.org/3/library/ftplib.html#ftplib.FTP.retrlines "Link to this definition")
    
Retrieve a file or directory listing in the encoding specified by the _encoding_ parameter at initialization. _cmd_ should be an appropriate `RETR` command (see [`retrbinary()`](https://docs.python.org/3/library/ftplib.html#ftplib.FTP.retrbinary "ftplib.FTP.retrbinary")) or a command such as `LIST` or `NLST` (usually just the string `'LIST'`). `LIST` retrieves a list of files and information about those files. `NLST` retrieves a list of file names. The _callback_ function is called for each line with a string argument containing the line with the trailing CRLF stripped. The default _callback_ prints the line to [`sys.stdout`](https://docs.python.org/3/library/sys.html#sys.stdout "sys.stdout"). 

set_pasv(_val_)[¶](https://docs.python.org/3/library/ftplib.html#ftplib.FTP.set_pasv "Link to this definition")
    
Enable “passive” mode if _val_ is true, otherwise disable passive mode. Passive mode is on by default. 

storbinary(_cmd_ , _fp_ , _blocksize =8192_, _callback =None_, _rest =None_)[¶](https://docs.python.org/3/library/ftplib.html#ftplib.FTP.storbinary "Link to this definition")
    
Store a file in binary transfer mode. 

Parameters:
    
  * **cmd** ([_str_](https://docs.python.org/3/library/stdtypes.html#str "str")) – An appropriate `STOR` command: `"STOR _filename_"`.
  * **fp** ([file object](https://docs.python.org/3/glossary.html#term-file-object)) – A file object (opened in binary mode) which is read until EOF, using its [`read()`](https://docs.python.org/3/library/io.html#io.RawIOBase.read "io.RawIOBase.read") method in blocks of size _blocksize_ to provide the data to be stored.
  * **blocksize** ([_int_](https://docs.python.org/3/library/functions.html#int "int")) – The read block size. Defaults to `8192`.
  * **callback** ([callable](https://docs.python.org/3/glossary.html#term-callable)) – A single parameter callable that is called for each block of data sent, with its single argument being the data as [`bytes`](https://docs.python.org/3/library/stdtypes.html#bytes "bytes").
  * **rest** ([_int_](https://docs.python.org/3/library/functions.html#int "int")) – A `REST` command to be sent to the server. See the documentation for the _rest_ parameter of the [`transfercmd()`](https://docs.python.org/3/library/ftplib.html#ftplib.FTP.transfercmd "ftplib.FTP.transfercmd") method.


Changed in version 3.2: The _rest_ parameter was added.