Title: FTP File Operations
URL: https://docs.python.org/3/library/ftplib.html
Summary: This section of the documentation outlines several FTP file operations, including renaming a file, deleting a file, setting the current directory, and creating a new directory on the server. It specifies the function signatures and describes the expected behaviors, such as permission error handling.
---

rename(_fromname_ , _toname_)[¶](https://docs.python.org/3/library/ftplib.html#ftplib.FTP.rename "Link to this definition")
    
Rename file _fromname_ on the server to _toname_. 

delete(_filename_)[¶](https://docs.python.org/3/library/ftplib.html#ftplib.FTP.delete "Link to this definition")
    
Remove the file named _filename_ from the server. If successful, returns the text of the response, otherwise raises [`error_perm`](https://docs.python.org/3/library/ftplib.html#ftplib.error_perm "ftplib.error_perm") on permission errors or [`error_reply`](https://docs.python.org/3/library/ftplib.html#ftplib.error_reply "ftplib.error_reply") on other errors. 

cwd(_pathname_)[¶](https://docs.python.org/3/library/ftplib.html#ftplib.FTP.cwd "Link to this definition")
    
Set the current directory on the server. 

mkd(_pathname_)[¶](https://docs.python.org/3/library/ftplib.html#ftplib.FTP.mkd "Link to this definition")
    
Create a new directory on the server. 

pwd()[¶](https://docs.python.org/3/library/ftplib.html#ftplib.FTP.pwd "Link to this definition")
    
Return the pathname of the current directory on the server. 

rmd(_dirname_)[¶](https://docs.python.org/3/library/ftplib.html#ftplib.FTP.rmd "Link to this definition")
    
Remove the directory named _dirname_ on the server. 

size(_filename_)[¶](https://docs.python.org/3/library/ftplib.html#ftplib.FTP.size "Link to this definition")
    
Request the size of the file named _filename_ on the server. On success, the size of the file is returned as an integer, otherwise `None` is returned. Note that the `SIZE` command is not standardized, but is supported by many common server implementations. 

quit()[¶](https://docs.python.org/3/library/ftplib.html#ftplib.FTP.quit "Link to this definition")
    
Send a `QUIT` command to the server and close the connection. This is the “polite” way to close a connection, but it may raise an exception if the server responds with an error to the `QUIT` command. This implies a call to the [`close()`](https://docs.python.org/3/library/ftplib.html#ftplib.FTP.close "ftplib.FTP.close") method which renders the [`FTP`](https://docs.python.org/3/library/ftplib.html#ftplib.FTP "ftplib.FTP") instance useless for subsequent calls (see below). 

close()[¶](https://docs.python.org/3/library/ftplib.html#ftplib.FTP.close "Link to this definition")
    
Close the connection unilaterally. This should not be applied to an already closed connection such as after a successful call to [`quit()`](https://docs.python.org/3/library/ftplib.html#ftplib.FTP.quit "ftplib.FTP.quit"). After this call the [`FTP`](https://docs.python.org/3/library/ftplib.html#ftplib.FTP "ftplib.FTP") instance should not be used any more (after a call to [`close()`](https://docs.python.org/3/library/ftplib.html#ftplib.FTP.close "ftplib.FTP.close") or [`quit()`](https://docs.python.org/3/library/ftplib.html#ftplib.FTP.quit "ftplib.FTP.quit") you cannot reopen the connection by issuing another [`login()`](https://docs.python.org/3/library/ftplib.html#ftplib.FTP.login "ftplib.FTP.login") method).
### FTP_TLS objects[¶](https://docs.python.org/3/library/ftplib.html#ftp-tls-objects "Link to this heading") 

_class_ ftplib.FTP_TLS(_host =''_, _user =''_, _passwd =''_, _acct =''_, _*_ , _context =None_, _timeout =None_, _source_address =None_, _encoding ='utf-8'_)[¶](https://docs.python.org/3/library/ftplib.html#ftplib.FTP_TLS "Link to this definition")
    
An [`FTP`](https://docs.python.org/3/library/ftplib.html#ftplib.FTP "ftplib.FTP") subclass which adds TLS support to FTP as described in [**RFC 4217**](https://datatracker.ietf.org/doc/html/rfc4217.html). Connect to port 21 implicitly securing the FTP control connection before authenticating.
Note
The user must explicitly secure the data connection by calling the [`prot_p()`](https://docs.python.org/3/library/ftplib.html#ftplib.FTP_TLS.prot_p "ftplib.FTP_TLS.prot_p") method.