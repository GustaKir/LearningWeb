Title: Python Changelog Highlights
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This chunk summarizes key updates in Python, including fixes for issues with frozen dataclasses, improvements to the `pdb` debugger's alias command, deprecation of the `dis.HAVE_ARGUMENT` field, and a fix for a race condition in `concurrent.futures`. It highlights enhancements that address past design limitations and improve functionality.
---

Its design is old and the web world has long since moved beyond CGI.
  * [gh-109409](https://github.com/python/cpython/issues/109409): Fix error when it was possible to inherit a frozen dataclass from multiple parents some of which were possibly not frozen.
  * [gh-109375](https://github.com/python/cpython/issues/109375): The [`pdb`](https://docs.python.org/3/library/pdb.html#module-pdb "pdb: The Python debugger for interactive interpreters.") `alias` command now prevents registering aliases without arguments.
  * [gh-109319](https://github.com/python/cpython/issues/109319): Deprecate the `dis.HAVE_ARGUMENT` field in favour of `dis.hasarg`.
  * [gh-107219](https://github.com/python/cpython/issues/107219): Fix a race condition in `concurrent.futures`. When a process in the process pool was terminated abruptly (while the future was running or pending), close the connection write end. If the call queue is blocked on sending bytes to a worker process, closing the connection write end interrupts the send, so the queue can be closed. Patch by Victor Stinner.
  * [gh-66143](https://github.com/python/cpython/issues/66143): The [`codecs.CodecInfo`](https://docs.python.org/3/library/codecs.html#codecs.CodecInfo "codecs.CodecInfo") object has been made copyable and pickleable. Patched by Robert Lehmann and Furkan Onder.
  * [gh-109187](https://github.com/python/cpython/issues/109187): [`pathlib.Path.resolve()`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.resolve "pathlib.Path.resolve") now treats symlink loops like other errors: in strict mode, [`OSError`](https://docs.python.org/3/library/exceptions.html#OSError "OSError") is raised, and in non-strict mode, no exception is raised.
  * [gh-50644](https://github.com/python/cpython/issues/50644): Attempts to pickle or create a shallow or deep copy of [`codecs`](https://docs.python.org/3/library/codecs.html#module-codecs "codecs: Encode and decode data and streams.") streams now raise a TypeError. Previously, copying failed with a RecursionError, while pickling produced wrong results that eventually caused unpickling to fail with a RecursionError.
  * [gh-109174](https://github.com/python/cpython/issues/109174): Add support of [`types.SimpleNamespace`](https://docs.python.org/3/library/types.html#types.SimpleNamespace "types.SimpleNamespace") in [`copy.replace()`](https://docs.python.org/3/library/copy.html#copy.replace "copy.replace").
  * [gh-109164](https://github.com/python/cpython/issues/109164): [`pdb`](https://docs.python.org/3/library/pdb.html#module-pdb "pdb: The Python debugger for interactive interpreters."): Replace [`getopt`](https://docs.python.org/3/library/getopt.html#module-getopt "getopt: Portable parser for command line options; support both short and long option names.") with [`argparse`](https://docs.python.org/3/library/argparse.html#module-argparse "argparse: Command-line option and argument parsing library.") for parsing command line arguments.
  * [gh-109151](https://github.com/python/cpython/issues/109151): Enable `readline` editing features in the [sqlite3 command-line interface](https://docs.python.org/3/library/sqlite3.html#sqlite3-cli) (`python -m sqlite3`).
  * [gh-108987](https://github.com/python/cpython/issues/108987): Fix [`_thread.start_new_thread()`](https://docs.python.org/3/library/_thread.html#thread.start_new_thread "_thread.start_new_thread") race condition. If a thread is created during Python finalization, the newly spawned thread now exits immediately instead of trying to access freed memory and lead to a crash. Patch by Victor Stinner.
  * [gh-108682](https://github.com/python/cpython/issues/108682): Enum: require `names=()` or `type=...` to create an empty enum using the functional syntax.
  * [gh-109033](https://github.com/python/cpython/issues/109033): Exceptions raised by os.utime builtin function now include the related filename
  * [gh-108843](https://github.com/python/cpython/issues/108843): Fix an issue in [`ast.unparse()`](https://docs.python.org/3/library/ast.html#ast.unparse "ast.unparse") when unparsing f-strings containing many quote types.
  * [gh-108469](https://github.com/python/cpython/issues/108469): [`ast.unparse()`](https://docs.python.org/3/library/ast.html#ast.unparse "ast.unparse") now supports new [f-string](https://docs.python.org/3/glossary.html#term-f-string) syntax introduced in Python 3.12. Note that the [f-string](https://docs.python.org/3/glossary.html#term-f-string) quotes are reselected for simplicity under the new syntax. (Patch by Steven Sun)
  * [gh-108751](https://github.com/python/cpython/issues/108751): Add [`copy.replace()`](https://docs.python.org/3/library/copy.html#copy.replace "copy.replace") function which allows to create a modified copy of an object.