Title: Enhancements to itertools in Python 2.7
URL: https://docs.python.org/3/whatsnew/2.7.html
Summary: The itertools module introduces the _step_ argument in the count() function for customizable increments, supports keyword arguments, and accepts non-integer values. Additionally, combinations() and product() have updated error handling behaviors.
---

```

Note that elements are treated as unique depending on their position in the input, not their actual values.
The [`itertools.count()`](https://docs.python.org/3/library/itertools.html#itertools.count "itertools.count") function now has a _step_ argument that allows incrementing by values other than 1. [`count()`](https://docs.python.org/3/library/itertools.html#itertools.count "itertools.count") also now allows keyword arguments, and using non-integer values such as floats or [`Decimal`](https://docs.python.org/3/library/decimal.html#decimal.Decimal "decimal.Decimal") instances. (Implemented by Raymond Hettinger; [bpo-5032](https://bugs.python.org/issue?@action=redirect&bpo=5032).)
[`itertools.combinations()`](https://docs.python.org/3/library/itertools.html#itertools.combinations "itertools.combinations") and [`itertools.product()`](https://docs.python.org/3/library/itertools.html#itertools.product "itertools.product") previously raised [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError "ValueError") for values of _r_ larger than the input iterable. This was deemed a specification error, so they now return an empty iterator. (Fixed by Raymond Hettinger; [bpo-4816](https://bugs.python.org/issue?@action=redirect&bpo=4816).)
  * Updated module: The [`json`](https://docs.python.org/3/library/json.html#module-json "json: Encode and decode the JSON format.") module was upgraded to version 2.0.9 of the simplejson package, which includes a C extension that makes encoding and decoding faster. (Contributed by Bob Ippolito; [bpo-4136](https://bugs.python.org/issue?@action=redirect&bpo=4136).)
To support the new [`collections.OrderedDict`](https://docs.python.org/3/library/collections.html#collections.OrderedDict "collections.OrderedDict") type, [`json.load()`](https://docs.python.org/3/library/json.html#json.load "json.load") now has an optional _object_pairs_hook_ parameter that will be called with any object literal that decodes to a list of pairs. (Contributed by Raymond Hettinger; [bpo-5381](https://bugs.python.org/issue?@action=redirect&bpo=5381).)
  * The [`mailbox`](https://docs.python.org/3/library/mailbox.html#module-mailbox "mailbox: Manipulate mailboxes in various formats") module’s [`Maildir`](https://docs.python.org/3/library/mailbox.html#mailbox.Maildir "mailbox.Maildir") class now records the timestamp on the directories it reads, and only re-reads them if the modification time has subsequently changed. This improves performance by avoiding unneeded directory scans. (Fixed by A.M. Kuchling and Antoine Pitrou; [bpo-1607951](https://bugs.python.org/issue?@action=redirect&bpo=1607951), [bpo-6896](https://bugs.python.org/issue?@action=redirect&bpo=6896).)
  * New functions: the [`math`](https://docs.python.org/3/library/math.html#module-math "math: Mathematical functions \(sin\(\) etc.\).") module gained [`erf()`](https://docs.python.org/3/library/math.html#math.erf "math.erf") and [`erfc()`](https://docs.python.org/3/library/math.html#math.erfc "math.erfc") for the error function and the complementary error function, [`expm1()`](https://docs.python.org/3/library/math.html#math.expm1 "math.expm1") which computes `e**x - 1` with more precision than using [`exp()`](https://docs.python.org/3/library/math.html#math.exp "math.exp") and subtracting 1, [`gamma()`](https://docs.python.org/3/library/math.html#math.gamma "math.gamma") for the Gamma function, and [`lgamma()`](https://docs.python.org/3/library/math.html#math.lgamma "math.lgamma") for the natural log of the Gamma function. (Contributed by Mark Dickinson and nirinA raseliarison; [bpo-3366](https://bugs.python.org/issue?@action=redirect&bpo=3366).)
  * The [`multiprocessing`](https://docs.python.org/3/library/multiprocessing.html#module-multiprocessing "multiprocessing: Process-based parallelism.") module’s `Manager*` classes can now be passed a callable that will be called whenever a subprocess is started, along with a set of arguments that will be passed to the callable. (Contributed by lekma; [bpo-5585](https://bugs.python.org/issue?@action=redirect&bpo=5585).)
The [`Pool`](https://docs.python.org/3/library/multiprocessing.html#multiprocessing.pool.Pool "multiprocessing.pool.Pool") class, which controls a pool of worker processes, now has an optional _maxtasksperchild_ parameter. Worker processes will perform the specified number of tasks and then exit, causing the `Pool` to start a new worker. This is useful if tasks may leak memory or other resources, or if some tasks will cause the worker to become very large. (Contributed by Charles Cazabon; [bpo-6963](https://bugs.python.org/issue?@action=redirect&bpo=6963).)
  * The `nntplib` module now supports IPv6 addresses. (Contributed by Derek Morr; [bpo-1664](https://bugs.python.org/issue?@action=redirect&bpo=1664).)
  * New functions: the [`os`](https://docs.python.org/3/library/os.html#module-os "os: Miscellaneous operating system interfaces.") module wraps the following POS