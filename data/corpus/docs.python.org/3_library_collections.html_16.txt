Title: UserList Class Data and Subclassing Requirements
URL: https://docs.python.org/3/library/collections.html
Summary: The 'data' attribute in the UserList class is a real list object that holds the contents of the list. UserList subclasses must provide a constructor that accepts either no arguments or one argument, ensuring compatibility with list operations that create new instances. Non-compliance requires overriding all special methods of the UserList class.
---

data[¶](https://docs.python.org/3/library/collections.html#collections.UserList.data "Link to this definition")
    
A real [`list`](https://docs.python.org/3/library/stdtypes.html#list "list") object used to store the contents of the [`UserList`](https://docs.python.org/3/library/collections.html#collections.UserList "collections.UserList") class.
**Subclassing requirements:** Subclasses of [`UserList`](https://docs.python.org/3/library/collections.html#collections.UserList "collections.UserList") are expected to offer a constructor which can be called with either no arguments or one argument. List operations which return a new sequence attempt to create an instance of the actual implementation class. To do so, it assumes that the constructor can be called with a single parameter, which is a sequence object used as a data source.
If a derived class does not wish to comply with this requirement, all of the special methods supported by this class will need to be overridden; please consult the sources for information about the methods which need to be provided in that case.
## [`UserString`](https://docs.python.org/3/library/collections.html#collections.UserString "collections.UserString") objects[¶](https://docs.python.org/3/library/collections.html#userstring-objects "Link to this heading")
The class, [`UserString`](https://docs.python.org/3/library/collections.html#collections.UserString "collections.UserString") acts as a wrapper around string objects. The need for this class has been partially supplanted by the ability to subclass directly from [`str`](https://docs.python.org/3/library/stdtypes.html#str "str"); however, this class can be easier to work with because the underlying string is accessible as an attribute. 

_class_ collections.UserString(_seq_)[¶](https://docs.python.org/3/library/collections.html#collections.UserString "Link to this definition")
    
Class that simulates a string object. The instance’s content is kept in a regular string object, which is accessible via the [`data`](https://docs.python.org/3/library/collections.html#collections.UserString.data "collections.UserString.data") attribute of [`UserString`](https://docs.python.org/3/library/collections.html#collections.UserString "collections.UserString") instances. The instance’s contents are initially set to a copy of _seq_. The _seq_ argument can be any object which can be converted into a string using the built-in [`str()`](https://docs.python.org/3/library/stdtypes.html#str "str") function.
In addition to supporting the methods and operations of strings, [`UserString`](https://docs.python.org/3/library/collections.html#collections.UserString "collections.UserString") instances provide the following attribute: 

data[¶](https://docs.python.org/3/library/collections.html#collections.UserString.data "Link to this definition")
    
A real [`str`](https://docs.python.org/3/library/stdtypes.html#str "str") object used to store the contents of the [`UserString`](https://docs.python.org/3/library/collections.html#collections.UserString "collections.UserString") class.
Changed in version 3.5: New methods `__getnewargs__`, `__rmod__`, `casefold`, `format_map`, `isprintable`, and `maketrans`.
### [Table of Contents](https://docs.python.org/3/contents.html)
  * [`collections` — Container datatypes](https://docs.python.org/3/library/collections.html)
    * [`ChainMap` objects](https://docs.python.org/3/library/collections.html#chainmap-objects)
      * [`ChainMap` Examples and Recipes](https://docs.python.org/3/library/collections.html#chainmap-examples-and-recipes)
    * [`Counter` objects](https://docs.python.org/3/library/collections.html#counter-objects)
    * [`deque` objects](https://docs.python.org/3/library/collections.html#deque-objects)
      * [`deque` Recipes](https://docs.python.org/3/library/collections.html#deque-recipes)
    * [`defaultdict` objects](https://docs.python.org/3/library/collections.html#defaultdict-objects)
      * [`defaultdict` Examples](https://docs.python.org/3/library/collections.html#defaultdict-examples)
    * [`namedtuple()` Factory Function for Tuples with Named Fields](https://docs.python.org/3/library/collections.html#namedtuple-factory-function-for-tuples-with-named-fields)
    * [`OrderedDict` objects](https://docs.python.org/3/library/collections.html#ordereddict-objects)
      * [`OrderedDict` Examples and Recipes](https://docs.python.org/3/library/collections.html#ordereddict-examples-and-recipes)
    * [`UserDict` objects](https://docs.python.org/3/library/collections.html#userdict-objects)
    * [`UserList` objects](https://docs.python.org/3/library/collections.html#userlist-objects)
    * [`UserString` objects](https://docs.python.org/3/library/collections.html#userstring-objects)