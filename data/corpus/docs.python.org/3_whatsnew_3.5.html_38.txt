Title: Notable Changes in Python 3.5.4
URL: https://docs.python.org/3/whatsnew/3.5.html
Summary: Python 3.5.4 introduces a new `make regen-all` build target to streamline cross-compilation and ensure reliable compilation without an existing Python version. This command allows users to regenerate necessary files selectively after an initial build.
---

## Notable changes in Python 3.5.4[¶](https://docs.python.org/3/whatsnew/3.5.html#notable-changes-in-python-3-5-4 "Link to this heading")
### New `make regen-all` build target[¶](https://docs.python.org/3/whatsnew/3.5.html#new-make-regen-all-build-target "Link to this heading")
To simplify cross-compilation, and to ensure that CPython can reliably be compiled without requiring an existing version of Python to already be available, the autotools-based build system no longer attempts to implicitly recompile generated files based on file modification times.
Instead, a new `make regen-all` command has been added to force regeneration of these files when desired (e.g. after an initial version of Python has already been built based on the pregenerated versions).
More selective regeneration targets are also defined - see [Makefile.pre.in](https://github.com/python/cpython/tree/3.13/Makefile.pre.in) for details.
(Contributed by Victor Stinner in [bpo-23404](https://bugs.python.org/issue?@action=redirect&bpo=23404).)
Added in version 3.5.4.
### Removal of `make touch` build target[¶](https://docs.python.org/3/whatsnew/3.5.html#removal-of-make-touch-build-target "Link to this heading")
The `make touch` build target previously used to request implicit regeneration of generated files by updating their modification times has been removed.
It has been replaced by the new `make regen-all` target.
(Contributed by Victor Stinner in [bpo-23404](https://bugs.python.org/issue?@action=redirect&bpo=23404).)
Changed in version 3.5.4.
### [Table of Contents](https://docs.python.org/3/contents.html)
  * [What’s New In Python 3.5](https://docs.python.org/3/whatsnew/3.5.html)
    * [Summary – Release highlights](https://docs.python.org/3/whatsnew/3.5.html#summary-release-highlights)
    * [New Features](https://docs.python.org/3/whatsnew/3.5.html#new-features)
      * [PEP 492 - Coroutines with async and await syntax](https://docs.python.org/3/whatsnew/3.5.html#pep-492-coroutines-with-async-and-await-syntax)
      * [PEP 465 - A dedicated infix operator for matrix multiplication](https://docs.python.org/3/whatsnew/3.5.html#pep-465-a-dedicated-infix-operator-for-matrix-multiplication)
      * [PEP 448 - Additional Unpacking Generalizations](https://docs.python.org/3/whatsnew/3.5.html#pep-448-additional-unpacking-generalizations)
      * [PEP 461 - percent formatting support for bytes and bytearray](https://docs.python.org/3/whatsnew/3.5.html#pep-461-percent-formatting-support-for-bytes-and-bytearray)
      * [PEP 484 - Type Hints](https://docs.python.org/3/whatsnew/3.5.html#pep-484-type-hints)
      * [PEP 471 - os.scandir() function – a better and faster directory iterator](https://docs.python.org/3/whatsnew/3.5.html#pep-471-os-scandir-function-a-better-and-faster-directory-iterator)
      * [PEP 475: Retry system calls failing with EINTR](https://docs.python.org/3/whatsnew/3.5.html#pep-475-retry-system-calls-failing-with-eintr)
      * [PEP 479: Change StopIteration handling inside generators](https://docs.python.org/3/whatsnew/3.5.html#pep-479-change-stopiteration-handling-inside-generators)
      * [PEP 485: A function for testing approximate equality](https://docs.python.org/3/whatsnew/3.5.html#pep-485-a-function-for-testing-approximate-equality)
      * [PEP 486: Make the Python Launcher aware of virtual environments](https://docs.python.org/3/whatsnew/3.5.html#pep-486-make-the-python-launcher-aware-of-virtual-environments)
      * [PEP 488: Elimination of PYO files](https://docs.python.org/3/whatsnew/3.5.html#pep-488-elimination-of-pyo-files)
      * [PEP 489: Multi-phase extension module initialization](https://docs.python.org/3/whatsnew/3.5.html#pep-489-multi-phase-extension-module-initialization)
    * [Other Language Changes](https://docs.python.org/3/whatsnew/3.5.html#other-language-changes)
    * [New Modules](https://docs.python.org/3/whatsnew/3.5.html#new-modules)
      * [typing](https://docs.python.org/3/whatsnew/3.5.html#typing)
      * [zipapp](https://docs.python.org/3/whatsnew/3.5.html#zipapp)
    * [Improved Modules](https://docs.python.org/3/whatsnew/3.5.html#improved-modules)
      * [argparse](https://docs.python.org/3/whatsnew/3.5.html#argparse)
      * [asyncio](https://docs.python.org/3/whatsnew/3.5.html#asyncio)
      * [bz2](https://docs.python.org/3/whatsnew/3.5.html#bz2)
      * [cgi](https://docs.python.org/3/whatsnew/3.5.html#cgi)
      * [cmath](https://docs.python.org/3/whatsnew/3.5.html#cmath)
      * [code](https://docs.python.org/3/whatsnew/3.5.html#code)
      * [collections](https://docs.python.org/3/whatsnew/3.5.html#collections)
      * [collections.abc](https://docs.python.org/3/whatsnew/3.5.html#collections-abc)
      * [compileall](https://docs.python.org/3/whatsnew/3.5.html#compileall)
      * [concurrent.futures](https://docs.python.org/3/whatsnew/3.5.html#concurrent-futures)
      * [configparser](https://docs.python.org/3/whatsnew/3.5.html#configparser)
      * [contextlib](https://d