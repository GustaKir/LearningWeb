Title: IPv6Network Class in ipaddress Module
URL: https://docs.python.org/3/library/ipaddress.html
Summary: The IPv6Network class constructs an IPv6 network definition, which can be initialized using a string with an IP address and optional prefix length, an integer fitting into 128 bits, or a packed integer in bytes. Notably, expanded netmasks are currently not supported, and the class has deprecated certain comparison and ordering algorithms since version 3.7.
---

```

Deprecated since version 3.7: It uses the same ordering and comparison algorithm as “<”, “==”, and “>” 

_class_ ipaddress.IPv6Network(_address_ , _strict =True_)[¶](https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv6Network "Link to this definition")
    
Construct an IPv6 network definition. _address_ can be one of the following:
  1. A string consisting of an IP address and an optional prefix length, separated by a slash (`/`). The IP address is the network address, and the prefix length must be a single number, the _prefix_. If no prefix length is provided, it’s considered to be `/128`.
Note that currently expanded netmasks are not supported. That means `2001:db00::0/24` is a valid argument while `2001:db00::0/ffff:ff00::` is not.
  2. An integer that fits into 128 bits. This is equivalent to a single-address network, with the network address being _address_ and the mask being `/128`.
  3. An integer packed into a [`bytes`](https://docs.python.org/3/library/stdtypes.html#bytes "bytes") object of length 16, big-endian. The interpretation is similar to an integer _address_.
  4. A two-tuple of an address description and a netmask, where the address description is either a string, a 128-bits integer, a 16-bytes packed integer, or an existing IPv6Address object; and the netmask is an integer representing the prefix length.


An [`AddressValueError`](https://docs.python.org/3/library/ipaddress.html#ipaddress.AddressValueError "ipaddress.AddressValueError") is raised if _address_ is not a valid IPv6 address. A [`NetmaskValueError`](https://docs.python.org/3/library/ipaddress.html#ipaddress.NetmaskValueError "ipaddress.NetmaskValueError") is raised if the mask is not valid for an IPv6 address.
If _strict_ is `True` and host bits are set in the supplied address, then [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError "ValueError") is raised. Otherwise, the host bits are masked out to determine the appropriate network address.
Changed in version 3.5: Added the two-tuple form for the _address_ constructor parameter. 

version[¶](https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv6Network.version "Link to this definition")


max_prefixlen[¶](https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv6Network.max_prefixlen "Link to this definition")


is_multicast[¶](https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv6Network.is_multicast "Link to this definition")


is_private[¶](https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv6Network.is_private "Link to this definition")


is_unspecified[¶](https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv6Network.is_unspecified "Link to this definition")


is_reserved[¶](https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv6Network.is_reserved "Link to this definition")


is_loopback[¶](https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv6Network.is_loopback "Link to this definition")


is_link_local[¶](https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv6Network.is_link_local "Link to this definition")


network_address[¶](https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv6Network.network_address "Link to this definition")


broadcast_address[¶](https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv6Network.broadcast_address "Link to this definition")


hostmask[¶](https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv6Network.hostmask "Link to this definition")


netmask[¶](https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv6Network.netmask "Link to this definition")


with_prefixlen[¶](https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv6Network.with_prefixlen "Link to this definition")


compressed[¶](https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv6Network.compressed "Link to this definition")


exploded[¶](https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv6Network.exploded "Link to this definition")


with_netmask[¶](https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv6Network.with_netmask "Link to this definition")


with_hostmask[¶](https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv6Network.with_hostmask "Link to this definition")


num_addresses[¶](https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv6Network.num_addresses "Link to this definition")


prefixlen[¶](https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv6Network.prefixlen "Link to this definition")


hosts()[¶](https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv6Network.hosts "Link to this definition")
    
Returns an iterator over the usable hosts in the network. The usable hosts are all the IP addresses that belong to the network, except the Subnet-Router anycast address. For networks with a mask length of 127, the Subnet-Router anycast address is also included in the result. Networks with a mask of 128 will return a list containing the single host address.