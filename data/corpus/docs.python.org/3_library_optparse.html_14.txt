Title: optparse.Values Class
URL: https://docs.python.org/3/library/optparse.html
Summary: The optparse.Values class holds parsed argument names and values as attributes. It is typically created by calling OptionParser.parse_args() and can be customized through a subclass. The class stores option arguments based on the destination attribute defined in the option.
---

_class_ optparse.Values[Â¶](https://docs.python.org/3/library/optparse.html#optparse.Values "Link to this definition")
    
An object holding parsed argument names and values as attributes. Normally created by calling when calling [`OptionParser.parse_args()`](https://docs.python.org/3/library/optparse.html#optparse.OptionParser.parse_args "optparse.OptionParser.parse_args"), and can be overridden by a custom subclass passed to the _values_ argument of [`OptionParser.parse_args()`](https://docs.python.org/3/library/optparse.html#optparse.OptionParser.parse_args "optparse.OptionParser.parse_args") (as described in [Parsing arguments](https://docs.python.org/3/library/optparse.html#optparse-parsing-arguments)).
Option arguments (and various other values) are stored as attributes of this object, according to the [`dest`](https://docs.python.org/3/library/optparse.html#optparse.Option.dest "optparse.Option.dest") (destination) option attribute.
For example, when you call
```
parser.parse_args()

```

one of the first things [`optparse`](https://docs.python.org/3/library/optparse.html#module-optparse "optparse: Command-line option parsing library.") does is create the `options` object:
```
options = Values()

```

If one of the options in this parser is defined with
```
parser.add_option("-f", "--file", action="store", type="string", dest="filename")

```

and the command-line being parsed includes any of the following:
```
-ffoo
-f foo
--file=foo
--file foo

```

then [`optparse`](https://docs.python.org/3/library/optparse.html#module-optparse "optparse: Command-line option parsing library."), on seeing this option, will do the equivalent of
```
options.filename = "foo"