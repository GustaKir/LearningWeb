Title: Python 3.7 Regular Expression Enhancements
URL: https://docs.python.org/3/whatsnew/3.7.html
Summary: In Python 3.7, the `re.LOCALE` flag for regular expressions no longer relies on locale settings at compile time; locale settings are only applied when the regex is used. Additionally, a `FutureWarning` is raised for regex constructs that may change semantically in the future. Furthermore, compiled regex and match objects can now be copied using `copy.copy()`.
---

(Contributed by Serhiy Storchaka in [bpo-25054](https://bugs.python.org/issue?@action=redirect&bpo=25054).)
Regular expressions compiled with the [`re.LOCALE`](https://docs.python.org/3/library/re.html#re.LOCALE "re.LOCALE") flag no longer depend on the locale at compile time. Locale settings are applied only when the compiled regular expression is used. (Contributed by Serhiy Storchaka in [bpo-30215](https://bugs.python.org/issue?@action=redirect&bpo=30215).)
[`FutureWarning`](https://docs.python.org/3/library/exceptions.html#FutureWarning "FutureWarning") is now emitted if a regular expression contains character set constructs that will change semantically in the future, such as nested sets and set operations. (Contributed by Serhiy Storchaka in [bpo-30349](https://bugs.python.org/issue?@action=redirect&bpo=30349).)
Compiled regular expression and match objects can now be copied using [`copy.copy()`](https://docs.python.org/3/library/copy.html#copy.copy "copy.copy") and [`copy.deepcopy()`](https://docs.python.org/3/library/copy.html#copy.deepcopy "copy.deepcopy"). (Contributed by Serhiy Storchaka in [bpo-10076](https://bugs.python.org/issue?@action=redirect&bpo=10076).)
### signal[¶](https://docs.python.org/3/whatsnew/3.7.html#signal "Link to this heading")
The new _warn_on_full_buffer_ argument to the [`signal.set_wakeup_fd()`](https://docs.python.org/3/library/signal.html#signal.set_wakeup_fd "signal.set_wakeup_fd") function makes it possible to specify whether Python prints a warning on stderr when the wakeup buffer overflows. (Contributed by Nathaniel J. Smith in [bpo-30050](https://bugs.python.org/issue?@action=redirect&bpo=30050).)
### socket[¶](https://docs.python.org/3/whatsnew/3.7.html#socket "Link to this heading")
The new [`socket.getblocking()`](https://docs.python.org/3/library/socket.html#socket.socket.getblocking "socket.socket.getblocking") method returns `True` if the socket is in blocking mode and `False` otherwise. (Contributed by Yury Selivanov in [bpo-32373](https://bugs.python.org/issue?@action=redirect&bpo=32373).)
The new [`socket.close()`](https://docs.python.org/3/library/socket.html#socket.close "socket.close") function closes the passed socket file descriptor. This function should be used instead of [`os.close()`](https://docs.python.org/3/library/os.html#os.close "os.close") for better compatibility across platforms. (Contributed by Christian Heimes in [bpo-32454](https://bugs.python.org/issue?@action=redirect&bpo=32454).)
The [`socket`](https://docs.python.org/3/library/socket.html#module-socket "socket: Low-level networking interface.") module now exposes the `socket.TCP_CONGESTION` (Linux 2.6.13), `socket.TCP_USER_TIMEOUT` (Linux 2.6.37), and `socket.TCP_NOTSENT_LOWAT` (Linux 3.12) constants. (Contributed by Omar Sandoval in [bpo-26273](https://bugs.python.org/issue?@action=redirect&bpo=26273) and Nathaniel J. Smith in [bpo-29728](https://bugs.python.org/issue?@action=redirect&bpo=29728).)
Support for [`socket.AF_VSOCK`](https://docs.python.org/3/library/socket.html#socket.AF_VSOCK "socket.AF_VSOCK") sockets has been added to allow communication between virtual machines and their hosts. (Contributed by Cathy Avery in [bpo-27584](https://bugs.python.org/issue?@action=redirect&bpo=27584).)
Sockets now auto-detect family, type and protocol from file descriptor by default. (Contributed by Christian Heimes in [bpo-28134](https://bugs.python.org/issue?@action=redirect&bpo=28134).)
### socketserver[¶](https://docs.python.org/3/whatsnew/3.7.html#socketserver "Link to this heading")
`socketserver.ThreadingMixIn.server_close()` now waits until all non-daemon threads complete. `socketserver.ForkingMixIn.server_close()` now waits until all child processes complete.
Add a new `socketserver.ForkingMixIn.block_on_close` class attribute to [`socketserver.ForkingMixIn`](https://docs.python.org/3/library/socketserver.html#socketserver.ForkingMixIn "socketserver.ForkingMixIn") and [`socketserver.ThreadingMixIn`](https://docs.python.org/3/library/socketserver.html#socketserver.ThreadingMixIn "socketserver.ThreadingMixIn") classes. Set the class attribute to `False` to get the pre-3.7 behaviour.
### sqlite3[¶](https://docs.python.org/3/whatsnew/3.7.html#sqlite3 "Link to this heading")
[`sqlite3.Connection`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection "sqlite3.Connection") now exposes the [`backup()`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.backup "sqlite3.Connection.backup") method when the underlying SQLite library is at version 3.6.11 or higher. (Contributed by Lele Gaifax in [bpo-27645](https://bugs.python.org/issue?@action=redirect&bpo=27645).)
The _database_ argument of [`sqlite3.connect()`](https://docs.python.org/3/library/sqlite3.html#sqlite3.connect "sqlite3.connect") now accepts any [path-like object](https://docs.python.org/3/glossary.html#term-path-like-object), instead of just a string.