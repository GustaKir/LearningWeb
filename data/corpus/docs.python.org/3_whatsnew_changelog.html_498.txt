Title: Python Core and Builtins Changes
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section details recent updates in Python's core and built-in functionalities, including improvements in debug import processes for C extensions, fixes for FreeBSD initialization, removal of outdated parser headers, and performance enhancement for `dict.pop()`.
---

### Core and Builtins[¶](https://docs.python.org/3/whatsnew/changelog.html#id447 "Link to this heading")
  * [bpo-36722](https://bugs.python.org/issue?@action=redirect&bpo=36722): In debug build, import now also looks for C extensions compiled in release mode and for C extensions compiled in the stable ABI.
  * [bpo-32849](https://bugs.python.org/issue?@action=redirect&bpo=32849): Fix Python Initialization code on FreeBSD to detect properly when stdin file descriptor (fd 0) is invalid.
  * [bpo-36623](https://bugs.python.org/issue?@action=redirect&bpo=36623): Remove parser headers and related function declarations that lack implementations after the removal of pgen.
  * [bpo-20180](https://bugs.python.org/issue?@action=redirect&bpo=20180): `dict.pop()` is now up to 33% faster thanks to Argument Clinic. Patch by Inada Naoki.
  * [bpo-36611](https://bugs.python.org/issue?@action=redirect&bpo=36611): Debug memory allocators: disable serialno field by default from debug hooks on Python memory allocators to reduce the memory footprint by 5%. Enable [`tracemalloc`](https://docs.python.org/3/library/tracemalloc.html#module-tracemalloc "tracemalloc: Trace memory allocations.") to get the traceback where a memory block has been allocated when a fatal memory error is logged to decide where to put a breakpoint. Compile Python with `PYMEM_DEBUG_SERIALNO` defined to get back the field.
  * [bpo-36588](https://bugs.python.org/issue?@action=redirect&bpo=36588): On AIX, [`sys.platform`](https://docs.python.org/3/library/sys.html#sys.platform "sys.platform") doesn’t contain the major version anymore. Always return `'aix'`, instead of `'aix3'` .. `'aix7'`. Since older Python versions include the version number, it is recommended to always use `sys.platform.startswith('aix')`. Contributed by M. Felt.
  * [bpo-36549](https://bugs.python.org/issue?@action=redirect&bpo=36549): Change str.capitalize to use titlecase for the first character instead of uppercase.
  * [bpo-36540](https://bugs.python.org/issue?@action=redirect&bpo=36540): Implement [**PEP 570**](https://peps.python.org/pep-0570/) (Python positional-only parameters). Patch by Pablo Galindo.
  * [bpo-36475](https://bugs.python.org/issue?@action=redirect&bpo=36475): `PyEval_AcquireLock()` and `PyEval_AcquireThread()` now terminate the current thread if called while the interpreter is finalizing, making them consistent with [`PyEval_RestoreThread()`](https://docs.python.org/3/c-api/init.html#c.PyEval_RestoreThread "PyEval_RestoreThread"), [`Py_END_ALLOW_THREADS()`](https://docs.python.org/3/c-api/init.html#c.Py_END_ALLOW_THREADS "Py_END_ALLOW_THREADS"), and [`PyGILState_Ensure()`](https://docs.python.org/3/c-api/init.html#c.PyGILState_Ensure "PyGILState_Ensure").
  * [bpo-36504](https://bugs.python.org/issue?@action=redirect&bpo=36504): Fix signed integer overflow in _ctypes.c’s `PyCArrayType_new()`.
  * [bpo-20844](https://bugs.python.org/issue?@action=redirect&bpo=20844): Fix running script with encoding cookie and LF line ending may fail on Windows.
  * [bpo-24214](https://bugs.python.org/issue?@action=redirect&bpo=24214): Fixed support of the surrogatepass error handler in the UTF-8 incremental decoder.
  * [bpo-36452](https://bugs.python.org/issue?@action=redirect&bpo=36452): Changing `dict` keys during iteration of the dict itself, `keys()`, `values()`, or `items()` will now be detected in certain corner cases where keys are deleted/added so that the number of keys isn’t changed. A `RuntimeError` will be raised after `len(dict)` iterations. Contributed by Thomas Perl.
  * [bpo-36459](https://bugs.python.org/issue?@action=redirect&bpo=36459): Fix a possible double `PyMem_FREE()` due to tokenizer.c’s `tok_nextc()`.
  * [bpo-36433](https://bugs.python.org/issue?@action=redirect&bpo=36433): Fixed TypeError message in classmethoddescr_call.
  * [bpo-36430](https://bugs.python.org/issue?@action=redirect&bpo=36430): Fix a possible reference leak in [`itertools.count()`](https://docs.python.org/3/library/itertools.html#itertools.count "itertools.count").
  * [bpo-36440](https://bugs.python.org/issue?@action=redirect&bpo=36440): Include node names in `ParserError` messages, instead of numeric IDs. Patch by A. Skrobov.
  * [bpo-36143](https://bugs.python.org/issue?@action=redirect&bpo=36143): Regenerate [`keyword`](https://docs.python.org/3/library/keyword.html#module-keyword "keyword: Test whether a string is a keyword in Python.") from the Grammar and Tokens file using pgen. Patch by Pablo Galindo.
  * [bpo-18372](https://bugs.python.org/issue?@action=redirect&bpo=18372): Add missing [`PyObject_GC_Track()`](https://docs.python.org/3/c-api/gcsupport.html#c.PyObject_GC_Track "PyObject_GC_Track") calls in the [`pickle`](https://docs.python.org/3/library/pickle.html#module-pickle "pickle: Convert Python objects to streams of bytes and back.") module. Patch by Zackery Spytz.