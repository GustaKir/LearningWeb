Title: Python 3.8.12 Updates: URL Parsing and Safety
URL: https://docs.python.org/3/whatsnew/3.8.html
Summary: Python 3.8.12 introduces updates to the URL parsing process in `urllib.parse`, which now strips ASCII newline and tab characters from URLs to prevent attacks, in line with the WHATWG specification. This behavior can be controlled using a new variable, `urllib.parse._UNSAFE_URL_BYTES_TO_REMOVE`.
---

wline or tab characters in parts of a URL allows for some forms of attacks. Following the WHATWG specification that updates [**RFC 3986**](https://datatracker.ietf.org/doc/html/rfc3986.html), ASCII newline `\n`, `\r` and tab `\t` characters are stripped from the URL by the parser in [`urllib.parse`](https://docs.python.org/3/library/urllib.parse.html#module-urllib.parse "urllib.parse: Parse URLs into or assemble them from components.") preventing such attacks. The removal characters are controlled by a new module level variable `urllib.parse._UNSAFE_URL_BYTES_TO_REMOVE`. (See [bpo-43882](https://bugs.python.org/issue?@action=redirect&bpo=43882))
## Notable changes in Python 3.8.12[¶](https://docs.python.org/3/whatsnew/3.8.html#notable-changes-in-python-3-8-12 "Link to this heading")
### Changes in the Python API[¶](https://docs.python.org/3/whatsnew/3.8.html#id2 "Link to this heading")
Starting with Python 3.8.12 the [`ipaddress`](https://docs.python.org/3/library/ipaddress.html#module-ipaddress "ipaddress: IPv4/IPv6 manipulation library.") module no longer accepts any leading zeros in IPv4 address strings. Leading zeros are ambiguous and interpreted as octal notation by some libraries. For example the legacy function [`socket.inet_aton()`](https://docs.python.org/3/library/socket.html#socket.inet_aton "socket.inet_aton") treats leading zeros as octal notation. glibc implementation of modern [`inet_pton()`](https://docs.python.org/3/library/socket.html#socket.inet_pton "socket.inet_pton") does not accept any leading zeros.
(Originally contributed by Christian Heimes in [bpo-36384](https://bugs.python.org/issue?@action=redirect&bpo=36384), and backported to 3.8 by Achraf Merzouki.)
## Notable security feature in 3.8.14[¶](https://docs.python.org/3/whatsnew/3.8.html#notable-security-feature-in-3-8-14 "Link to this heading")
Converting between [`int`](https://docs.python.org/3/library/functions.html#int "int") and [`str`](https://docs.python.org/3/library/stdtypes.html#str "str") in bases other than 2 (binary), 4, 8 (octal), 16 (hexadecimal), or 32 such as base 10 (decimal) now raises a [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError "ValueError") if the number of digits in string form is above a limit to avoid potential denial of service attacks due to the algorithmic complexity. This is a mitigation for [**CVE 2020-10735**](https://www.cve.org/CVERecord?id=CVE-2020-10735). This limit can be configured or disabled by environment variable, command line flag, or [`sys`](https://docs.python.org/3/library/sys.html#module-sys "sys: Access system-specific parameters and functions.") APIs. See the [integer string conversion length limitation](https://docs.python.org/3/library/stdtypes.html#int-max-str-digits) documentation. The default limit is 4300 digits in string form.
## Notable changes in 3.8.17[¶](https://docs.python.org/3/whatsnew/3.8.html#notable-changes-in-3-8-17 "Link to this heading")
### tarfile[¶](https://docs.python.org/3/whatsnew/3.8.html#id3 "Link to this heading")
  * The extraction methods in [`tarfile`](https://docs.python.org/3/library/tarfile.html#module-tarfile "tarfile: Read and write tar-format archive files."), and [`shutil.unpack_archive()`](https://docs.python.org/3/library/shutil.html#shutil.unpack_archive "shutil.unpack_archive"), have a new a _filter_ argument that allows limiting tar features than may be surprising or dangerous, such as creating files outside the destination directory. See [Extraction filters](https://docs.python.org/3/library/tarfile.html#tarfile-extraction-filter) for details. In Python 3.12, use without the _filter_ argument will show a [`DeprecationWarning`](https://docs.python.org/3/library/exceptions.html#DeprecationWarning "DeprecationWarning"). In Python 3.14, the default will switch to `'data'`. (Contributed by Petr Viktorin in [**PEP 706**](https://peps.python.org/pep-0706/).)