Title: os.confstr() Function
URL: https://docs.python.org/3/library/os.html
Summary: The os.confstr() function retrieves string-valued system configuration values based on a specified name, which can be a string from defined standards or an integer. It returns None if the value is not defined and raises a ValueError for unknown string names, as well as an OSError for unsupported values by the host system.
---

os.confstr(_name_ , _/_)[¶](https://docs.python.org/3/library/os.html#os.confstr "Link to this definition")
    
Return string-valued system configuration values. _name_ specifies the configuration value to retrieve; it may be a string which is the name of a defined system value; these names are specified in a number of standards (POSIX, Unix 95, Unix 98, and others). Some platforms define additional names as well. The names known to the host operating system are given as the keys of the `confstr_names` dictionary. For configuration variables not included in that mapping, passing an integer for _name_ is also accepted.
If the configuration value specified by _name_ isn’t defined, `None` is returned.
If _name_ is a string and is not known, [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError "ValueError") is raised. If a specific value for _name_ is not supported by the host system, even if it is included in `confstr_names`, an [`OSError`](https://docs.python.org/3/library/exceptions.html#OSError "OSError") is raised with [`errno.EINVAL`](https://docs.python.org/3/library/errno.html#errno.EINVAL "errno.EINVAL") for the error number.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix. 

os.confstr_names[¶](https://docs.python.org/3/library/os.html#os.confstr_names "Link to this definition")
    
Dictionary mapping names accepted by [`confstr()`](https://docs.python.org/3/library/os.html#os.confstr "os.confstr") to the integer values defined for those names by the host operating system. This can be used to determine the set of names known to the system.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix. 

os.cpu_count()[¶](https://docs.python.org/3/library/os.html#os.cpu_count "Link to this definition")
    
Return the number of logical CPUs in the **system**. Returns `None` if undetermined.
The [`process_cpu_count()`](https://docs.python.org/3/library/os.html#os.process_cpu_count "os.process_cpu_count") function can be used to get the number of logical CPUs usable by the calling thread of the **current process**.
Added in version 3.4.
Changed in version 3.13: If [`-X cpu_count`](https://docs.python.org/3/using/cmdline.html#cmdoption-X) is given or [`PYTHON_CPU_COUNT`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHON_CPU_COUNT) is set, [`cpu_count()`](https://docs.python.org/3/library/os.html#os.cpu_count "os.cpu_count") returns the overridden value _n_. 

os.getloadavg()[¶](https://docs.python.org/3/library/os.html#os.getloadavg "Link to this definition")
    
Return the number of processes in the system run queue averaged over the last 1, 5, and 15 minutes or raises [`OSError`](https://docs.python.org/3/library/exceptions.html#OSError "OSError") if the load average was unobtainable.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix. 

os.process_cpu_count()[¶](https://docs.python.org/3/library/os.html#os.process_cpu_count "Link to this definition")
    
Get the number of logical CPUs usable by the calling thread of the **current process**. Returns `None` if undetermined. It can be less than [`cpu_count()`](https://docs.python.org/3/library/os.html#os.cpu_count "os.cpu_count") depending on the CPU affinity.
The [`cpu_count()`](https://docs.python.org/3/library/os.html#os.cpu_count "os.cpu_count") function can be used to get the number of logical CPUs in the **system**.
If [`-X cpu_count`](https://docs.python.org/3/using/cmdline.html#cmdoption-X) is given or [`PYTHON_CPU_COUNT`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHON_CPU_COUNT) is set, [`process_cpu_count()`](https://docs.python.org/3/library/os.html#os.process_cpu_count "os.process_cpu_count") returns the overridden value _n_.
See also the [`sched_getaffinity()`](https://docs.python.org/3/library/os.html#os.sched_getaffinity "os.sched_getaffinity") function.
Added in version 3.13. 

os.sysconf(_name_ , _/_)[¶](https://docs.python.org/3/library/os.html#os.sysconf "Link to this definition")
    
Return integer-valued system configuration values. If the configuration value specified by _name_ isn’t defined, `-1` is returned. The comments regarding the _name_ parameter for [`confstr()`](https://docs.python.org/3/library/os.html#os.confstr "os.confstr") apply here as well; the dictionary that provides information on the known names is given by `sysconf_names`.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix.