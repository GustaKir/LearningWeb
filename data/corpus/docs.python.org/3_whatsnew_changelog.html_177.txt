Title: Python 3 Changelog - Recent Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section highlights key updates in Python, including setting the default Flag boundary to `STRICT`, fixing a potential `ResourceWarning` in `http.client.HTTPConnection`, and addressing issues with `writelines()` in `asyncio` for large payloads.
---

Aasland.
  * [gh-103365](https://github.com/python/cpython/issues/103365): Set default Flag boundary to `STRICT` and fix bitwise operations.
  * [gh-103472](https://github.com/python/cpython/issues/103472): Avoid a potential [`ResourceWarning`](https://docs.python.org/3/library/exceptions.html#ResourceWarning "ResourceWarning") in [`http.client.HTTPConnection`](https://docs.python.org/3/library/http.client.html#http.client.HTTPConnection "http.client.HTTPConnection") by closing the proxy / tunnel’s CONNECT response explicitly.
  * [gh-103462](https://github.com/python/cpython/issues/103462): Fixed an issue with using [`writelines()`](https://docs.python.org/3/library/asyncio-protocol.html#asyncio.WriteTransport.writelines "asyncio.WriteTransport.writelines") in [`asyncio`](https://docs.python.org/3/library/asyncio.html#module-asyncio "asyncio: Asynchronous I/O.") to send very large payloads that exceed the amount of data that can be written in one call to [`socket.socket.send()`](https://docs.python.org/3/library/socket.html#socket.socket.send "socket.socket.send") or [`socket.socket.sendmsg()`](https://docs.python.org/3/library/socket.html#socket.socket.sendmsg "socket.socket.sendmsg"), resulting in the remaining buffer being left unwritten.
  * [gh-103449](https://github.com/python/cpython/issues/103449): Fix a bug in doc string generation in [`dataclasses.dataclass()`](https://docs.python.org/3/library/dataclasses.html#dataclasses.dataclass "dataclasses.dataclass").
  * [gh-103092](https://github.com/python/cpython/issues/103092): Isolate `_collections` (apply [**PEP 687**](https://peps.python.org/pep-0687/)). Patch by Erlend E. Aasland.
  * [gh-103357](https://github.com/python/cpython/issues/103357): Added support for [`logging.Formatter`](https://docs.python.org/3/library/logging.html#logging.Formatter "logging.Formatter") `defaults` parameter to [`logging.config.dictConfig()`](https://docs.python.org/3/library/logging.config.html#logging.config.dictConfig "logging.config.dictConfig") and [`logging.config.fileConfig()`](https://docs.python.org/3/library/logging.config.html#logging.config.fileConfig "logging.config.fileConfig"). Patch by Bar Harel.
  * [gh-103092](https://github.com/python/cpython/issues/103092): Adapt the [`winreg`](https://docs.python.org/3/library/winreg.html#module-winreg "winreg: Routines and objects for manipulating the Windows registry. \(Windows\)") extension module to [**PEP 687**](https://peps.python.org/pep-0687/).
  * [gh-74690](https://github.com/python/cpython/issues/74690): The performance of [`isinstance()`](https://docs.python.org/3/library/functions.html#isinstance "isinstance") checks against [`runtime-checkable protocols`](https://docs.python.org/3/library/typing.html#typing.runtime_checkable "typing.runtime_checkable") has been considerably improved for protocols that only have a few members. To achieve this improvement, several internal implementation details of the [`typing`](https://docs.python.org/3/library/typing.html#module-typing "typing: Support for type hints \(see :pep:`484`\).") module have been refactored, including `typing._ProtocolMeta.__instancecheck__`, `typing._is_callable_members_only`, and `typing._get_protocol_attrs`. Patches by Alex Waygood.
  * [gh-74690](https://github.com/python/cpython/issues/74690): The members of a runtime-checkable protocol are now considered “frozen” at runtime as soon as the class has been created. See [“What’s new in Python 3.12”](https://docs.python.org/3/whatsnew/3.12.html#whatsnew-typing-py312) for more details.
  * [gh-103256](https://github.com/python/cpython/issues/103256): Fixed a bug that caused [`hmac`](https://docs.python.org/3/library/hmac.html#module-hmac "hmac: Keyed-Hashing for Message Authentication \(HMAC\) implementation") to raise an exception when the requested hash algorithm was not available in OpenSSL despite being available separately as part of `hashlib` itself. It now falls back properly to the built-in.