Title: Python 3.7.0 Beta 3 Release Notes
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: The Python 3.7.0 beta 3 release, dated March 29, 2018, includes several security enhancements such as hardening the ssl module against vulnerabilities and fixing potential buffer overrun issues in os.symlink on Windows. Additionally, regex vulnerabilities in difflib and poplib were addressed to prevent catastrophic backtracking and potential denial-of-service attacks.
---

## Python 3.7.0 beta 3[¶](https://docs.python.org/3/whatsnew/changelog.html#python-3-7-0-beta-3 "Link to this heading")
_Release date: 2018-03-29_
### Security[¶](https://docs.python.org/3/whatsnew/changelog.html#id508 "Link to this heading")
  * [bpo-33136](https://bugs.python.org/issue?@action=redirect&bpo=33136): Harden ssl module against LibreSSL [**CVE 2018-8970**](https://www.cve.org/CVERecord?id=CVE-2018-8970). X509_VERIFY_PARAM_set1_host() is called with an explicit namelen. A new test ensures that NULL bytes are not allowed.
  * [bpo-33001](https://bugs.python.org/issue?@action=redirect&bpo=33001): Minimal fix to prevent buffer overrun in os.symlink on Windows
  * [bpo-32981](https://bugs.python.org/issue?@action=redirect&bpo=32981): Regexes in difflib and poplib were vulnerable to catastrophic backtracking. These regexes formed potential DOS vectors (REDOS). They have been refactored. This resolves [**CVE 2018-1060**](https://www.cve.org/CVERecord?id=CVE-2018-1060) and [**CVE 2018-1061**](https://www.cve.org/CVERecord?id=CVE-2018-1061). Patch by Jamie Davis.


### Core and Builtins[¶](https://docs.python.org/3/whatsnew/changelog.html#id509 "Link to this heading")
  * [bpo-33053](https://bugs.python.org/issue?@action=redirect&bpo=33053): When using the -m switch, sys.path[0] is now explicitly expanded as the _starting_ working directory, rather than being left as the empty path (which allows imports from the current working directory at the time of the import)
  * [bpo-33018](https://bugs.python.org/issue?@action=redirect&bpo=33018): Improve consistency of errors raised by `issubclass()` when called with a non-class and an abstract base class as the first and second arguments, respectively. Patch by Josh Bronson.
  * [bpo-33041](https://bugs.python.org/issue?@action=redirect&bpo=33041): Fixed jumping when the function contains an `async for` loop.
  * [bpo-33026](https://bugs.python.org/issue?@action=redirect&bpo=33026): Fixed jumping out of “with” block by setting f_lineno.
  * [bpo-33005](https://bugs.python.org/issue?@action=redirect&bpo=33005): Fix a crash on fork when using a custom memory allocator (ex: using PYTHONMALLOC env var). _PyGILState_Reinit() and _PyInterpreterState_Enable() now use the default RAW memory allocator to allocate a new interpreters mutex on fork.
  * [bpo-17288](https://bugs.python.org/issue?@action=redirect&bpo=17288): Prevent jumps from ‘return’ and ‘exception’ trace events.
  * [bpo-32836](https://bugs.python.org/issue?@action=redirect&bpo=32836): Don’t use temporary variables in cases of list/dict/set comprehensions