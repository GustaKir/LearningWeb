Title: Enhancements to sys Module in Python 3.5
URL: https://docs.python.org/3/whatsnew/3.5.html
Summary: The sys module introduces two new functions: `set_coroutine_wrapper()` for setting a global hook for newly created coroutine objects and `get_coroutine_wrapper()` to retrieve the current wrapper. Both are provisional and mainly for debugging. Additionally, the new `is_finalizing()` function checks if the Python interpreter is shutting down.
---

```

### sys[¶](https://docs.python.org/3/whatsnew/3.5.html#sys "Link to this heading")
A new `set_coroutine_wrapper()` function allows setting a global hook that will be called whenever a [coroutine object](https://docs.python.org/3/glossary.html#term-coroutine) is created by an [`async def`](https://docs.python.org/3/reference/compound_stmts.html#async-def) function. A corresponding `get_coroutine_wrapper()` can be used to obtain a currently set wrapper. Both functions are [provisional](https://docs.python.org/3/glossary.html#term-provisional-API), and are intended for debugging purposes only. (Contributed by Yury Selivanov in [bpo-24017](https://bugs.python.org/issue?@action=redirect&bpo=24017).)
A new [`is_finalizing()`](https://docs.python.org/3/library/sys.html#sys.is_finalizing "sys.is_finalizing") function can be used to check if the Python interpreter is [shutting down](https://docs.python.org/3/glossary.html#term-interpreter-shutdown). (Contributed by Antoine Pitrou in [bpo-22696](https://bugs.python.org/issue?@action=redirect&bpo=22696).)
### sysconfig[¶](https://docs.python.org/3/whatsnew/3.5.html#sysconfig "Link to this heading")
The name of the user scripts directory on Windows now includes the first two components of the Python version. (Contributed by Paul Moore in [bpo-23437](https://bugs.python.org/issue?@action=redirect&bpo=23437).)
### tarfile[¶](https://docs.python.org/3/whatsnew/3.5.html#tarfile "Link to this heading")
The _mode_ argument of the [`open()`](https://docs.python.org/3/library/tarfile.html#tarfile.open "tarfile.open") function now accepts `"x"` to request exclusive creation. (Contributed by Berker Peksag in [bpo-21717](https://bugs.python.org/issue?@action=redirect&bpo=21717).)
The [`TarFile.extractall()`](https://docs.python.org/3/library/tarfile.html#tarfile.TarFile.extractall "tarfile.TarFile.extractall") and [`TarFile.extract()`](https://docs.python.org/3/library/tarfile.html#tarfile.TarFile.extract "tarfile.TarFile.extract") methods now take a keyword argument _numeric_owner_. If set to `True`, the extracted files and directories will be owned by the numeric `uid` and `gid` from the tarfile. If set to `False` (the default, and the behavior in versions prior to 3.5), they will be owned by the named user and group in the tarfile. (Contributed by Michael Vogt and Eric Smith in [bpo-23193](https://bugs.python.org/issue?@action=redirect&bpo=23193).)
The [`TarFile.list()`](https://docs.python.org/3/library/tarfile.html#tarfile.TarFile.list "tarfile.TarFile.list") now accepts an optional _members_ keyword argument that can be set to a subset of the list returned by [`TarFile.getmembers()`](https://docs.python.org/3/library/tarfile.html#tarfile.TarFile.getmembers "tarfile.TarFile.getmembers"). (Contributed by Serhiy Storchaka in [bpo-21549](https://bugs.python.org/issue?@action=redirect&bpo=21549).)
### threading[¶](https://docs.python.org/3/whatsnew/3.5.html#threading "Link to this heading")
Both the [`Lock.acquire()`](https://docs.python.org/3/library/threading.html#threading.Lock.acquire "threading.Lock.acquire") and [`RLock.acquire()`](https://docs.python.org/3/library/threading.html#threading.RLock.acquire "threading.RLock.acquire") methods now use a monotonic clock for timeout management. (Contributed by Victor Stinner in [bpo-22043](https://bugs.python.org/issue?@action=redirect&bpo=22043).)
### time[¶](https://docs.python.org/3/whatsnew/3.5.html#time "Link to this heading")
The [`monotonic()`](https://docs.python.org/3/library/time.html#time.monotonic "time.monotonic") function is now always available. (Contributed by Victor Stinner in [bpo-22043](https://bugs.python.org/issue?@action=redirect&bpo=22043).)
### timeit[¶](https://docs.python.org/3/whatsnew/3.5.html#timeit "Link to this heading")
A new command line option `-u` or `--unit=_U_`can be used to specify the time unit for the timer output. Supported options are`usec` , `msec`, or `sec`. (Contributed by Julian Gindi in [bpo-18983](https://bugs.python.org/issue?@action=redirect&bpo=18983).)
The [`timeit()`](https://docs.python.org/3/library/timeit.html#timeit.timeit "timeit.timeit") function has a new _globals_ parameter for specifying the namespace in which the code will be running. (Contributed by Ben Roberts in [bpo-2527](https://bugs.python.org/issue?@action=redirect&bpo=2527).)
### tkinter[¶](https://docs.python.org/3/whatsnew/3.5.html#tkinter "Link to this heading")
The `tkinter._fix` module used for setting up the Tcl/Tk environment on Windows has been replaced by a private function in the `_tkinter` module which makes no permanent changes to environment variables. (Contributed by Zachary Ware in [bpo-20035](https://bugs.python.org/issue?@action=redirect&bpo=20035).)
### traceback[¶](https://docs.python.org/3/whatsnew/3.5.html#traceback "Link to this heading")
New [`walk_stack()`](https://docs.python.org/3/library/traceback.html#traceback.walk_stack "traceback.walk_stack") and [`walk_tb()`](https://docs.py