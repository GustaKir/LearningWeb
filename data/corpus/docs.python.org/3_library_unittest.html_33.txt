Title: unittest Module: Signal Handling and Result Registration
URL: https://docs.python.org/3/library/unittest.html
Summary: This section covers the installation of a control-c handler for the unittest module, enabling graceful shutdown of test executions upon receiving a SIGINT signal. It also explains how to register a TestResult object for handling control-c events, ensuring the result can be garbage collected.
---

unittest.installHandler()[¶](https://docs.python.org/3/library/unittest.html#unittest.installHandler "Link to this definition")
    
Install the control-c handler. When a [`signal.SIGINT`](https://docs.python.org/3/library/signal.html#signal.SIGINT "signal.SIGINT") is received (usually in response to the user pressing control-c) all registered results have [`stop()`](https://docs.python.org/3/library/unittest.html#unittest.TestResult.stop "unittest.TestResult.stop") called. 

unittest.registerResult(_result_)[¶](https://docs.python.org/3/library/unittest.html#unittest.registerResult "Link to this definition")
    
Register a [`TestResult`](https://docs.python.org/3/library/unittest.html#unittest.TestResult "unittest.TestResult") object for control-c handling. Registering a result stores a weak reference to it, so it doesn’t prevent the result from being garbage collected.
Registering a [`TestResult`](https://docs.python.org/3/library/unittest.html#unittest.TestResult "unittest.TestResult") object has no side-effects if control-c handling is not enabled, so test frameworks can unconditionally register all results they create independently of whether or not handling is enabled. 

unittest.removeResult(_result_)[¶](https://docs.python.org/3/library/unittest.html#unittest.removeResult "Link to this definition")
    
Remove a registered result. Once a result has been removed then [`stop()`](https://docs.python.org/3/library/unittest.html#unittest.TestResult.stop "unittest.TestResult.stop") will no longer be called on that result object in response to a control-c. 

unittest.removeHandler(_function =None_)[¶](https://docs.python.org/3/library/unittest.html#unittest.removeHandler "Link to this definition")
    
When called without arguments this function removes the control-c handler if it has been installed. This function can also be used as a test decorator to temporarily remove the handler while the test is being executed:
```
@unittest.removeHandler
deftest_signal_handling(self):
  ...