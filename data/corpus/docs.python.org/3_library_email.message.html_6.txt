Title: set_param Method in EmailMessage
URL: https://docs.python.org/3/library/email.message.html
Summary: The `set_param` method sets a parameter in the 'Content-Type' header of an EmailMessage object, replacing the value if the parameter already exists. If 'Content-Type' is absent, it adds it with a default value of 'text/plain'. The method allows specifying a charset and language for non-ASCII characters, defaulting to 'utf8' and an empty string, respectively.
---

set_param(_param_ , _value_ , _header ='Content-Type'_, _requote =True_, _charset =None_, _language =''_, _replace =False_)[¶](https://docs.python.org/3/library/email.message.html#email.message.EmailMessage.set_param "Link to this definition")
    
Set a parameter in the _Content-Type_ header. If the parameter already exists in the header, replace its value with _value_. When _header_ is `Content-Type` (the default) and the header does not yet exist in the message, add it, set its value to _text/plain_ , and append the new parameter value. Optional _header_ specifies an alternative header to _Content-Type_.
If the value contains non-ASCII characters, the charset and language may be explicitly specified using the optional _charset_ and _language_ parameters. Optional _language_ specifies the [**RFC 2231**](https://datatracker.ietf.org/doc/html/rfc2231.html) language, defaulting to the empty string. Both _charset_ and _language_ should be strings. The default is to use the `utf8` _charset_ and `None` for the _language_.
If _replace_ is `False` (the default) the header is moved to the end of the list of headers. If _replace_ is `True`, the header will be updated in place.
Use of the _requote_ parameter with [`EmailMessage`](https://docs.python.org/3/library/email.message.html#email.message.EmailMessage "email.message.EmailMessage") objects is deprecated.
Note that existing parameter values of headers may be accessed through the [`params`](https://docs.python.org/3/library/email.headerregistry.html#email.headerregistry.ParameterizedMIMEHeader.params "email.headerregistry.ParameterizedMIMEHeader.params") attribute of the header value (for example, `msg['Content-Type'].params['charset']`).
Changed in version 3.4: `replace` keyword was added. 

del_param(_param_ , _header ='content-type'_, _requote =True_)[¶](https://docs.python.org/3/library/email.message.html#email.message.EmailMessage.del_param "Link to this definition")
    
Remove the given parameter completely from the _Content-Type_ header. The header will be re-written in place without the parameter or its value. Optional _header_ specifies an alternative to _Content-Type_.
Use of the _requote_ parameter with [`EmailMessage`](https://docs.python.org/3/library/email.message.html#email.message.EmailMessage "email.message.EmailMessage") objects is deprecated. 

get_filename(_failobj =None_)[¶](https://docs.python.org/3/library/email.message.html#email.message.EmailMessage.get_filename "Link to this definition")
    
Return the value of the `filename` parameter of the _Content-Disposition_ header of the message. If the header does not have a `filename` parameter, this method falls back to looking for the `name` parameter on the _Content-Type_ header. If neither is found, or the header is missing, then _failobj_ is returned. The returned string will always be unquoted as per [`email.utils.unquote()`](https://docs.python.org/3/library/email.utils.html#email.utils.unquote "email.utils.unquote"). 

get_boundary(_failobj =None_)[¶](https://docs.python.org/3/library/email.message.html#email.message.EmailMessage.get_boundary "Link to this definition")
    
Return the value of the `boundary` parameter of the _Content-Type_ header of the message, or _failobj_ if either the header is missing, or has no `boundary` parameter. The returned string will always be unquoted as per [`email.utils.unquote()`](https://docs.python.org/3/library/email.utils.html#email.utils.unquote "email.utils.unquote"). 

set_boundary(_boundary_)[¶](https://docs.python.org/3/library/email.message.html#email.message.EmailMessage.set_boundary "Link to this definition")
    
Set the `boundary` parameter of the _Content-Type_ header to _boundary_. [`set_boundary()`](https://docs.python.org/3/library/email.message.html#email.message.EmailMessage.set_boundary "email.message.EmailMessage.set_boundary") will always quote _boundary_ if necessary. A [`HeaderParseError`](https://docs.python.org/3/library/email.errors.html#email.errors.HeaderParseError "email.errors.HeaderParseError") is raised if the message object has no _Content-Type_ header.
Note that using this method is subtly different from deleting the old _Content-Type_ header and adding a new one with the new boundary via [`add_header()`](https://docs.python.org/3/library/email.message.html#email.message.EmailMessage.add_header "email.message.EmailMessage.add_header"), because [`set_boundary()`](https://docs.python.org/3/library/email.message.html#email.message.EmailMessage.set_boundary "email.message.EmailMessage.set_boundary") preserves the order of the _Content-Type_ header in the list of headers.