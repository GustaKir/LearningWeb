Title: Python Documentation Changelog: Recent Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section outlines recent changes including updates to the Path Configuration to incorporate PyConfig.platlibdir, the removal of the old parser and related support code, and fixes to tokenizer behavior regarding blank lines and NEWLINE tokens.
---

Patch by Donghee Na.
  * [bpo-40947](https://bugs.python.org/issue?@action=redirect&bpo=40947): The Python [Path Configuration](https://docs.python.org/3/c-api/init_config.html#init-path-config) now takes [`PyConfig.platlibdir`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.platlibdir "PyConfig.platlibdir") in account.
  * [bpo-40939](https://bugs.python.org/issue?@action=redirect&bpo=40939): Remove the old parser, the `parser` module and all associated support code, command-line options and environment variables. Patch by Pablo Galindo.
  * [bpo-40847](https://bugs.python.org/issue?@action=redirect&bpo=40847): Fix a bug where a line with only a line continuation character is not considered a blank line at tokenizer level. In such cases, more than a single `NEWLINE` token was emitted. The old parser was working around the issue, but the new parser threw a [`SyntaxError`](https://docs.python.org/3/library/exceptions.html#SyntaxError "SyntaxError") for valid input due to this. For example, an empty line following a line continuation character was interpreted as a [`SyntaxError`](https://docs.python.org/3/library/exceptions.html#SyntaxError "SyntaxError").
  * [bpo-40890](https://bugs.python.org/issue?@action=redirect&bpo=40890): Each dictionary view now has a `mapping` attribute that provides a [`types.MappingProxyType`](https://docs.python.org/3/library/types.html#types.MappingProxyType "types.MappingProxyType") wrapping the original dictionary. Patch contributed by Dennis Sweeney.
  * [bpo-40889](https://bugs.python.org/issue?@action=redirect&bpo=40889): Improved the performance of symmetric difference operations on dictionary item views. Patch by Dennis Sweeney.
  * [bpo-40904](https://bugs.python.org/issue?@action=redirect&bpo=40904): Fix possible segfault in the new PEG parser when parsing f-string containing yield statements with no value (`f"{yield}"`). Patch by Pablo Galindo
  * [bpo-40903](https://bugs.python.org/issue?@action=redirect&bpo=40903): Fixed a possible segfault in the new PEG parser when producing error messages for invalid assignments of the form `p=p=`. Patch by Pablo Galindo
  * [bpo-40880](https://bugs.python.org/issue?@action=redirect&bpo=40880): Fix invalid memory read in the new parser when checking newlines in string literals. Patch by Pablo Galindo.
  * [bpo-40883](https://bugs.python.org/issue?@action=redirect&bpo=40883): Fix memory leak in when parsing f-strings in the new parser. Patch by Pablo Galindo
  * [bpo-40870](https://bugs.python.org/issue?@action=redirect&bpo=40870): Raise [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError "ValueError") when validating custom AST’s where the constants `True`, `False` and `None` are used within a [`ast.Name`](https://docs.python.org/3/library/ast.html#ast.Name "ast.Name") node.
  * [bpo-40854](https://bugs.python.org/issue?@action=redirect&bpo=40854): Allow overriding [`sys.platlibdir`](https://docs.python.org/3/library/sys.html#sys.platlibdir "sys.platlibdir") via a new [`PYTHONPLATLIBDIR`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONPLATLIBDIR) environment variable.
  * [bpo-40826](https://bugs.python.org/issue?@action=redirect&bpo=40826): Fix GIL usage in `PyOS_Readline()`: lock the GIL to set an exception and pass the Python thread state when checking if there is a pending signal.
  * [bpo-1635741](https://bugs.python.org/issue?@action=redirect&bpo=1635741): Port [`fcntl`](https://docs.python.org/3/library/fcntl.html#module-fcntl "fcntl: The fcntl\(\) and ioctl\(\) system calls. \(Unix\)") to multiphase initialization.
  * [bpo-19468](https://bugs.python.org/issue?@action=redirect&bpo=19468): Delete unnecessary instance check in importlib.reload(). Patch by Furkan Önder.
  * [bpo-40824](https://bugs.python.org/issue?@action=redirect&bpo=40824): Unexpected errors in calling the `__iter__` method are no longer masked by `TypeError` in the [`in`](https://docs.python.org/3/reference/expressions.html#in) operator and functions [`contains()`](https://docs.python.org/3/library/operator.html#operator.contains "operator.contains"), [`indexOf()`](https://docs.python.org/3/library/operator.html#operator.indexOf "operator.indexOf") and [`countOf()`](https://docs.python.org/3/library/operator.html#operator.countOf "operator.countOf") of the [`operator`](https://docs.python.org/3/library/operator.html#module-operator "operator: Functions corresponding to the standard operators.") module.
  * [bpo-40792](https://bugs.python.org/issue?@action=redirect&bpo=40792): Attributes `start`, `stop` and `step` of the [`range`](https://docs.python.org/3/library/stdtypes.html#range "range") object now always has exact type [`int`](https://docs.python.org/3/library/functions.html#int "int").