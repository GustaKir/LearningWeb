Title: Mocking Techniques in Python's unittest.mock
URL: https://docs.python.org/3/contents.html
Summary: This section outlines various mocking techniques available in Python's unittest.mock library, including setting return values and attributes, raising exceptions, using side effects, and mocking asynchronous constructs.
---

Return Values and Attributes](https://docs.python.org/3/library/unittest.mock-examples.html#setting-return-values-and-attributes)
          * [Raising exceptions with mocks](https://docs.python.org/3/library/unittest.mock-examples.html#raising-exceptions-with-mocks)
          * [Side effect functions and iterables](https://docs.python.org/3/library/unittest.mock-examples.html#side-effect-functions-and-iterables)
          * [Mocking asynchronous iterators](https://docs.python.org/3/library/unittest.mock-examples.html#mocking-asynchronous-iterators)
          * [Mocking asynchronous context manager](https://docs.python.org/3/library/unittest.mock-examples.html#mocking-asynchronous-context-manager)
          * [Creating a Mock from an Existing Object](https://docs.python.org/3/library/unittest.mock-examples.html#creating-a-mock-from-an-existing-object)
          * [Using side_effect to return per file content](https://docs.python.org/3/library/unittest.mock-examples.html#using-side-effect-to-return-per-file-content)
        * [Patch Decorators](https://docs.python.org/3/library/unittest.mock-examples.html#patch-decorators)
        * [Further Examples](https://docs.python.org/3/library/unittest.mock-examples.html#further-examples)
          * [Mocking chained calls](https://docs.python.org/3/library/unittest.mock-examples.html#mocking-chained-calls)
          * [Partial mocking](https://docs.python.org/3/library/unittest.mock-examples.html#partial-mocking)
          * [Mocking a Generator Method](https://docs.python.org/3/library/unittest.mock-examples.html#mocking-a-generator-method)
          * [Applying the same patch to every test method](https://docs.python.org/3/library/unittest.mock-examples.html#applying-the-same-patch-to-every-test-method)
          * [Mocking Unbound Methods](https://docs.python.org/3/library/unittest.mock-examples.html#mocking-unbound-methods)
          * [Checking multiple calls with mock](https://docs.python.org/3/library/unittest.mock-examples.html#checking-multiple-calls-with-mock)
          * [Coping with mutable arguments](https://docs.python.org/3/library/unittest.mock-examples.html#coping-with-mutable-arguments)
          * [Nesting Patches](https://docs.python.org/3/library/unittest.mock-examples.html#nesting-patches)
          * [Mocking a dictionary with MagicMock](https://docs.python.org/3/library/unittest.mock-examples.html#mocking-a-dictionary-with-magicmock)
          * [Mock subclasses and their attributes](https://docs.python.org/3/library/unittest.mock-examples.html#mock-subclasses-and-their-attributes)
          * [Mocking imports with patch.dict](https://docs.python.org/3/library/unittest.mock-examples.html#mocking-imports-with-patch-dict)
          * [Tracking order of calls and less verbose call assertions](https://docs.python.org/3/library/unittest.mock-examples.html#tracking-order-of-calls-and-less-verbose-call-assertions)
          * [More complex argument matching](https://docs.python.org/3/library/unittest.mock-examples.html#more-complex-argument-matching)
      * [`test` — Regression tests package for Python](https://docs.python.org/3/library/test.html)
        * [Writing Unit Tests for the `test` package](https://docs.python.org/3/library/test.html#writing-unit-tests-for-the-test-package)
        * [Running tests using the command-line interface](https://docs.python.org/3/library/test.html#module-test.regrtest)
      * [`test.support` — Utilities for the Python test suite](https://docs.python.org/3/library/test.html#module-test.support)
      * [`test.support.socket_helper` — Utilities for socket tests](https://docs.python.org/3/library/test.html#module-test.support.socket_helper)
      * [`test.support.script_helper` — Utilities for the Python execution tests](https://docs.python.org/3/library/test.html#module-test.support.script_helper)
      * [`test.support.bytecode_helper` — Support tools for testing correct bytecode generation](https://docs.python.org/3/library/test.html#module-test.support.bytecode_helper)
      * [`test.support.threading_helper` — Utilities for threading tests](https://docs.python.org/3/library/test.html#module-test.support.threading_helper)
      * [`test.support.os_helper` — Utilities for os tests](https://docs.python.org/3/library/test.html#module-test.support.os_helper)
      * [`test.support.import_helper` — Utilities for import tests](https://docs.python.org/3/library/test.html#module-test.support.import_helper)
      * [`test.support.warnings_helper` — Utilities for warnings tests](https://docs.python.org/3/library/test.html#module-test.support.warnings_helper)
    * [Debugging and Profiling](https://docs.python.org/3/library/debug.html)
      * [Audit events table](https://docs.python.org/3/library/audit_events.html)
      * [`bdb` — Debugger framework](https://docs.python.org/3/library/bdb.html)
      * [`faulthandler` — Dump the Python traceback](https://docs.python.org/3/library/faulthandler.html)
        * [Dumping th