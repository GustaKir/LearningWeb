Title: Python Standard Library Overview
URL: https://docs.python.org/3/library/python.html
Summary: This section of the Python documentation contains links to various modules including warnings and dataclasses, providing information on testing warnings, updating code for new dependencies, and features related to data classes like post-init processing and frozen instances.
---

l#temporarily-suppressing-warnings)
    * [Testing Warnings](https://docs.python.org/3/library/warnings.html#testing-warnings)
    * [Updating Code For New Versions of Dependencies](https://docs.python.org/3/library/warnings.html#updating-code-for-new-versions-of-dependencies)
    * [Available Functions](https://docs.python.org/3/library/warnings.html#available-functions)
    * [Available Context Managers](https://docs.python.org/3/library/warnings.html#available-context-managers)
  * [`dataclasses` — Data Classes](https://docs.python.org/3/library/dataclasses.html)
    * [Module contents](https://docs.python.org/3/library/dataclasses.html#module-contents)
    * [Post-init processing](https://docs.python.org/3/library/dataclasses.html#post-init-processing)
    * [Class variables](https://docs.python.org/3/library/dataclasses.html#class-variables)
    * [Init-only variables](https://docs.python.org/3/library/dataclasses.html#init-only-variables)
    * [Frozen instances](https://docs.python.org/3/library/dataclasses.html#frozen-instances)
    * [Inheritance](https://docs.python.org/3/library/dataclasses.html#inheritance)
    * [Re-ordering of keyword-only parameters in `__init__()`](https://docs.python.org/3/library/dataclasses.html#re-ordering-of-keyword-only-parameters-in-init)
    * [Default factory functions](https://docs.python.org/3/library/dataclasses.html#default-factory-functions)
    * [Mutable default values](https://docs.python.org/3/library/dataclasses.html#mutable-default-values)
    * [Descriptor-typed fields](https://docs.python.org/3/library/dataclasses.html#descriptor-typed-fields)
  * [`contextlib` — Utilities for `with`-statement contexts](https://docs.python.org/3/library/contextlib.html)
    * [Utilities](https://docs.python.org/3/library/contextlib.html#utilities)
    * [Examples and Recipes](https://docs.python.org/3/library/contextlib.html#examples-and-recipes)
      * [Supporting a variable number of context managers](https://docs.python.org/3/library/contextlib.html#supporting-a-variable-number-of-context-managers)
      * [Catching exceptions from `__enter__` methods](https://docs.python.org/3/library/contextlib.html#catching-exceptions-from-enter-methods)
      * [Cleaning up in an `__enter__` implementation](https://docs.python.org/3/library/contextlib.html#cleaning-up-in-an-enter-implementation)
      * [Replacing any use of `try-finally` and flag variables](https://docs.python.org/3/library/contextlib.html#replacing-any-use-of-try-finally-and-flag-variables)
      * [Using a context manager as a function decorator](https://docs.python.org/3/library/contextlib.html#using-a-context-manager-as-a-function-decorator)
    * [Single use, reusable and reentrant context managers](https://docs.python.org/3/library/contextlib.html#single-use-reusable-and-reentrant-context-managers)
      * [Reentrant context managers](https://docs.python.org/3/library/contextlib.html#reentrant-context-managers)
      * [Reusable context managers](https://docs.python.org/3/library/contextlib.html#reusable-context-managers)
  * [`abc` — Abstract Base Classes](https://docs.python.org/3/library/abc.html)
  * [`atexit` — Exit handlers](https://docs.python.org/3/library/atexit.html)
    * [`atexit` Example](https://docs.python.org/3/library/atexit.html#atexit-example)
  * [`traceback` — Print or retrieve a stack traceback](https://docs.python.org/3/library/traceback.html)
    * [Module-Level Functions](https://docs.python.org/3/library/traceback.html#module-level-functions)
    * [`TracebackException` Objects](https://docs.python.org/3/library/traceback.html#tracebackexception-objects)
    * [`StackSummary` Objects](https://docs.python.org/3/library/traceback.html#stacksummary-objects)
    * [`FrameSummary` Objects](https://docs.python.org/3/library/traceback.html#framesummary-objects)
    * [Examples of Using the Module-Level Functions](https://docs.python.org/3/library/traceback.html#examples-of-using-the-module-level-functions)
    * [Examples of Using `TracebackException`](https://docs.python.org/3/library/traceback.html#examples-of-using-tracebackexception)
  * [`__future__` — Future statement definitions](https://docs.python.org/3/library/__future__.html)
    * [Module Contents](https://docs.python.org/3/library/__future__.html#module-contents)
  * [`gc` — Garbage Collector interface](https://docs.python.org/3/library/gc.html)
  * [`inspect` — Inspect live objects](https://docs.python.org/3/library/inspect.html)
    * [Types and members](https://docs.python.org/3/library/inspect.html#types-and-members)
    * [Retrieving source code](https://docs.python.org/3/library/inspect.html#retrieving-source-code)
    * [Introspecting callables with the Signature object](https://docs.python.org/3/library/inspect.html#introspecting-callables-with-the-signature-object)
    * [Classes and functions](https://docs.python.org/3/library/inspect.html#classes-and-functions)
    * [The interpreter stack](https://docs.python.or