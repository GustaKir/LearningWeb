Title: Python Library Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section details recent updates to Python's standard library, including fixes for logging with multiprocessing, support for importing `ctypes` in subinterpreters, resolution of `_pyrepl` crashes, and improvements to the `_datetime` module for use in multiple interpreters.
---

### Library[¶](https://docs.python.org/3/whatsnew/changelog.html#id68 "Link to this heading")
  * [gh-119819](https://github.com/python/cpython/issues/119819): Fix regression to allow logging configuration with multiprocessing queue types.
  * [gh-117142](https://github.com/python/cpython/issues/117142): The [`ctypes`](https://docs.python.org/3/library/ctypes.html#module-ctypes "ctypes: A foreign function library for Python.") module may now be imported in all subinterpreters, including those that have their own GIL.
  * [gh-118835](https://github.com/python/cpython/issues/118835): Fix _pyrepl crash when using custom prompt with ANSI escape codes.
  * [gh-117398](https://github.com/python/cpython/issues/117398): The `_datetime` module (C implementation for [`datetime`](https://docs.python.org/3/library/datetime.html#module-datetime "datetime: Basic date and time types.")) now supports being imported in multiple interpreters.
  * [gh-89727](https://github.com/python/cpython/issues/89727): Fix issue with [`shutil.rmtree()`](https://docs.python.org/3/library/shutil.html#shutil.rmtree "shutil.rmtree") where a [`RecursionError`](https://docs.python.org/3/library/exceptions.html#RecursionError "RecursionError") is raised on deep directory trees.
  * [gh-89727](https://github.com/python/cpython/issues/89727): Partially fix issue with [`shutil.rmtree()`](https://docs.python.org/3/library/shutil.html#shutil.rmtree "shutil.rmtree") where a [`RecursionError`](https://docs.python.org/3/library/exceptions.html#RecursionError "RecursionError") is raised on deep directory trees. A recursion error is no longer raised when `rmtree.avoids_symlink_attacks` is false.
  * [gh-119118](https://github.com/python/cpython/issues/119118): Fix performance regression in the [`tokenize`](https://docs.python.org/3/library/tokenize.html#module-tokenize "tokenize: Lexical scanner for Python source code.") module by caching the `line` token attribute and calculating the column offset more efficiently.
  * [gh-89727](https://github.com/python/cpython/issues/89727): Fix issue with [`os.fwalk()`](https://docs.python.org/3/library/os.html#os.fwalk "os.fwalk") where a [`RecursionError`](https://docs.python.org/3/library/exceptions.html#RecursionError "RecursionError") was raised on deep directory trees by adjusting the implementation to be iterative instead of recursive.
  * [gh-119588](https://github.com/python/cpython/issues/119588): `zipfile.Path.is_symlink` now assesses if the given path is a symlink.
  * [gh-119555](https://github.com/python/cpython/issues/119555): Catch [`SyntaxError`](https://docs.python.org/3/library/exceptions.html#SyntaxError "SyntaxError") from [`compile()`](https://docs.python.org/3/library/functions.html#compile "compile") in the runsource() method of the InteractiveColoredConsole. Patch by Sergey B Kirpichev.
  * [gh-113892](https://github.com/python/cpython/issues/113892): Now, the method `sock_connect` of [`asyncio.ProactorEventLoop`](https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.ProactorEventLoop "asyncio.ProactorEventLoop") raises a [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError "ValueError") if given socket is not in non-blocking mode, as well as in other loop implementations.
  * [gh-119443](https://github.com/python/cpython/issues/119443): The interactive REPL no longer runs with `from __future__ import annotations` enabled. Patch by Jelle Zijlstra.
  * [gh-117398](https://github.com/python/cpython/issues/117398): Objects in the datetime C-API are now all statically allocated, which means better memory safety, especially when the module is reloaded. This should be transparent to users.
  * [gh-118894](https://github.com/python/cpython/issues/118894): [`asyncio`](https://docs.python.org/3/library/asyncio.html#module-asyncio "asyncio: Asynchronous I/O.") REPL now has the same capabilities as PyREPL.
  * [gh-118911](https://github.com/python/cpython/issues/118911): In PyREPL, updated `maybe-accept`’s logic so that if the user hits `Enter` twice, they are able to terminate the block even if there’s trailing whitespace. Also, now when the user hits arrow up, the cursor is on the last functional line. This matches IPython’s behavior. Patch by Aya Elsayed.
  * [gh-111201](https://github.com/python/cpython/issues/111201): Remove dependency to [`readline`](https://docs.python.org/3/library/readline.html#module-readline "readline: GNU readline support for Python. \(Unix\)") from the new Python REPL.
  * [gh-119174](https://github.com/python/cpython/issues/119174): Fix high DPI causes turtledemo(turtle-graphics examples) windows blurry Patch by Wulian233 and Terry Jan Reedy
  * [gh-119121](https://github.com/python/cpython/issues/119121): Fix a NameError happening in `asyncio.staggered.staggered_race`. This function is now tested.
  * [gh-119113](https://github.com/python/cpython/issues/119113): Fix issue where [`pathlib.PurePath.with_suffix()`](https://docs.python.org/