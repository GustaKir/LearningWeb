Title: Python 3.8: Deprecation of Keyword Arguments
URL: https://docs.python.org/3/whatsnew/3.8.html
Summary: In Python 3.8, several functions have deprecated the practice of passing specific arguments as keyword arguments. This includes functions from the functools, weakref, profile, bdb, trace, and curses modules.
---

(Contributed by Serhiy Storchaka in [bpo-36048](https://bugs.python.org/issue?@action=redirect&bpo=36048).)
  * Deprecated passing the following arguments as keyword arguments:
    * _func_ in [`functools.partialmethod()`](https://docs.python.org/3/library/functools.html#functools.partialmethod "functools.partialmethod"), [`weakref.finalize()`](https://docs.python.org/3/library/weakref.html#weakref.finalize "weakref.finalize"), [`profile.Profile.runcall()`](https://docs.python.org/3/library/profile.html#profile.Profile.runcall "profile.Profile.runcall"), `cProfile.Profile.runcall()`, [`bdb.Bdb.runcall()`](https://docs.python.org/3/library/bdb.html#bdb.Bdb.runcall "bdb.Bdb.runcall"), [`trace.Trace.runfunc()`](https://docs.python.org/3/library/trace.html#trace.Trace.runfunc "trace.Trace.runfunc") and [`curses.wrapper()`](https://docs.python.org/3/library/curses.html#curses.wrapper "curses.wrapper").
    * _function_ in [`unittest.TestCase.addCleanup()`](https://docs.python.org/3/library/unittest.html#unittest.TestCase.addCleanup "unittest.TestCase.addCleanup").
    * _fn_ in the [`submit()`](https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Executor.submit "concurrent.futures.Executor.submit") method of [`concurrent.futures.ThreadPoolExecutor`](https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.ThreadPoolExecutor "concurrent.futures.ThreadPoolExecutor") and [`concurrent.futures.ProcessPoolExecutor`](https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.ProcessPoolExecutor "concurrent.futures.ProcessPoolExecutor").
    * _callback_ in [`contextlib.ExitStack.callback()`](https://docs.python.org/3/library/contextlib.html#contextlib.ExitStack.callback "contextlib.ExitStack.callback"), `contextlib.AsyncExitStack.callback()` and [`contextlib.AsyncExitStack.push_async_callback()`](https://docs.python.org/3/library/contextlib.html#contextlib.AsyncExitStack.push_async_callback "contextlib.AsyncExitStack.push_async_callback").
    * _c_ and _typeid_ in the `create()` method of `multiprocessing.managers.Server` and `multiprocessing.managers.SharedMemoryServer`.
    * _obj_ in [`weakref.finalize()`](https://docs.python.org/3/library/weakref.html#weakref.finalize "weakref.finalize").
In future releases of Python, they will be [positional-only](https://docs.python.org/3/glossary.html#positional-only-parameter). (Contributed by Serhiy Storchaka in [bpo-36492](https://bugs.python.org/issue?@action=redirect&bpo=36492).)