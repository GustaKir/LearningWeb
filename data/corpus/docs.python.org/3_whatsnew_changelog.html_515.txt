Title: Core and Builtins Changes in Python
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section details several updates to Python's core and built-in features, including optional parentheses for named expressions, changes to annotated assignments, and improvements in the AST module for parsing type comments. Additionally, it mentions the reorganization of Python initialization for better handling of exceptions.
---

### Core and Builtins[¶](https://docs.python.org/3/whatsnew/changelog.html#id474 "Link to this heading")
  * [bpo-35877](https://bugs.python.org/issue?@action=redirect&bpo=35877): Make parenthesis optional for named expressions in while statement. Patch by Karthikeyan Singaravelan.
  * [bpo-35814](https://bugs.python.org/issue?@action=redirect&bpo=35814): Allow same right hand side expressions in annotated assignments as in normal ones. In particular, `x: Tuple[int, int] = 1, 2` (without parentheses on the right) is now allowed.
  * [bpo-35766](https://bugs.python.org/issue?@action=redirect&bpo=35766): Add the option to parse PEP 484 type comments in the ast module. (Off by default.) This is merging the key functionality of the third party fork thereof, [typed_ast](<https://github.com/python/typed_ast>).
  * [bpo-35713](https://bugs.python.org/issue?@action=redirect&bpo=35713): Reorganize Python initialization to get working exceptions and sys.stderr earlier.
  * [bpo-33416](https://bugs.python.org/issue?@action=redirect&bpo=33416): Add end line and end column position information to the Python AST nodes. This is a C-level backwards incompatible change.
  * [bpo-35720](https://bugs.python.org/issue?@action=redirect&bpo=35720): Fixed a minor memory leak in pymain_parse_cmdline_impl function in Modules/main.c
  * [bpo-35634](https://bugs.python.org/issue?@action=redirect&bpo=35634): `func(**kwargs)` will now raise an error when `kwargs` is a mapping containing multiple entries with the same key. An error was already raised when other keyword arguments are passed before `**kwargs` since Python 3.6.
  * [bpo-35623](https://bugs.python.org/issue?@action=redirect&bpo=35623): Fix a crash when sorting very long lists. Patch by Stephan Hohe.
  * [bpo-35214](https://bugs.python.org/issue?@action=redirect&bpo=35214): clang Memory Sanitizer build instrumentation was added to work around false positives from posix, socket, time, test_io, and test_faulthandler.
  * [bpo-35560](https://bugs.python.org/issue?@action=redirect&bpo=35560): Fix an assertion error in [`format()`](https://docs.python.org/3/library/functions.html#format "format") in debug build for floating-point formatting with “n” format, zero padding and small width. Release build is not impacted. Patch by Karthikeyan Singaravelan.
  * [bpo-35552](https://bugs.python.org/issue?@action=redirect&bpo=35552): Format characters `%s` and `%V` in [`PyUnicode_FromFormat()`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_FromFormat "PyUnicode_FromFormat") and `%s` in [`PyBytes_FromFormat()`](https://docs.python.org/3/c-api/bytes.html#c.PyBytes_FromFormat "PyBytes_FromFormat") no longer read memory past the limit if _precision_ is specified.
  * [bpo-35504](https://bugs.python.org/issue?@action=redirect&bpo=35504): Fix segfaults and [`SystemError`](https://docs.python.org/3/library/exceptions.html#SystemError "SystemError")s when deleting certain attributes. Patch by Zackery Spytz.
  * [bpo-35504](https://bugs.python.org/issue?@action=redirect&bpo=35504): Fixed a SystemError when delete the characters_written attribute of an OSError.
  * [bpo-35494](https://bugs.python.org/issue?@action=redirect&bpo=35494): Improved syntax error messages for unbalanced parentheses in f-string.
  * [bpo-35444](https://bugs.python.org/issue?@action=redirect&bpo=35444): Fixed error handling in pickling methods when fail to look up builtin “getattr”. Sped up pickling iterators.
  * [bpo-35436](https://bugs.python.org/issue?@action=redirect&bpo=35436): Fix various issues with memory allocation error handling. Patch by Zackery Spytz.
  * [bpo-35423](https://bugs.python.org/issue?@action=redirect&bpo=35423): Separate the signal handling trigger in the eval loop from the “pending calls” machinery. There is no semantic change and the difference in performance is insignificant.
  * [bpo-35357](https://bugs.python.org/issue?@action=redirect&bpo=35357): Internal attributes’ names of unittest.mock._Call and unittest.mock.MagicProxy (name, parent & from_kall) are now prefixed with _mock_ in order to prevent clashes with widely used object attributes. Fixed minor typo in test function name.
  * [bpo-35372](https://bugs.python.org/issue?@action=redirect&bpo=35372): Fixed the code page decoder for input longer than 2 GiB containing undecodable bytes.
  * [bpo-35336](https://bugs.python.org/issue?@action=redirect&bpo=35336): Fix PYTHONCOERCECLOCALE=1 environment variable: only coerce the C locale if the LC_CTYPE locale is “C”.
  * [bpo-31241](https://bugs.python.org/issue?@action=redirect&bpo=31241): The _lineno_ and _col_offset_ attributes of AST nodes for list comprehensions, generator expressions and tuples are now point to the opening parenthesis or square brace. For tuples without parenthesis they point to the position of the first item.
  * [bpo-33954](https://bugs.python.org/issue?@action=redirect&bpo=33954): For [`str.format()`](https://docs.python.org/3/library/stdtypes.html#str.form