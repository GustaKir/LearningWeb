Title: mimetypes.guess_type() Function
URL: https://docs.python.org/3/library/mimetypes.html
Summary: The `mimetypes.guess_type()` function guesses the MIME type of a file based on its filename, path, or URL. It returns a tuple containing the MIME type and encoding. If the type cannot be determined, it returns `None`. The function supports both case-sensitive and case-insensitive suffix matching, with an optional strict mode to control behavior.
---

mimetypes.guess_type(_url_ , _strict =True_)[¶](https://docs.python.org/3/library/mimetypes.html#mimetypes.guess_type "Link to this definition")
    
Guess the type of a file based on its filename, path or URL, given by _url_. URL can be a string or a [path-like object](https://docs.python.org/3/glossary.html#term-path-like-object).
The return value is a tuple `(type, encoding)` where _type_ is `None` if the type can’t be guessed (missing or unknown suffix) or a string of the form `'type/subtype'`, usable for a MIME _content-type_ header.
_encoding_ is `None` for no encoding or the name of the program used to encode (e.g. **compress** or **gzip**). The encoding is suitable for use as a _Content-Encoding_ header, **not** as a _Content-Transfer-Encoding_ header. The mappings are table driven. Encoding suffixes are case sensitive; type suffixes are first tried case sensitively, then case insensitively.
The optional _strict_ argument is a flag specifying whether the list of known MIME types is limited to only the official types [registered with IANA](https://www.iana.org/assignments/media-types/media-types.xhtml). When _strict_ is `True` (the default), only the IANA types are supported; when _strict_ is `False`, some additional non-standard but commonly used MIME types are also recognized.
Changed in version 3.8: Added support for _url_ being a [path-like object](https://docs.python.org/3/glossary.html#term-path-like-object).
Deprecated since version 3.13: Passing a file path instead of URL is [soft deprecated](https://docs.python.org/3/glossary.html#term-soft-deprecated). Use [`guess_file_type()`](https://docs.python.org/3/library/mimetypes.html#mimetypes.guess_file_type "mimetypes.guess_file_type") for this. 

mimetypes.guess_file_type(_path_ , _*_ , _strict =True_)[¶](https://docs.python.org/3/library/mimetypes.html#mimetypes.guess_file_type "Link to this definition")
    
Guess the type of a file based on its path, given by _path_. Similar to the [`guess_type()`](https://docs.python.org/3/library/mimetypes.html#mimetypes.guess_type "mimetypes.guess_type") function, but accepts a path instead of URL. Path can be a string, a bytes object or a [path-like object](https://docs.python.org/3/glossary.html#term-path-like-object).
Added in version 3.13. 

mimetypes.guess_all_extensions(_type_ , _strict =True_)[¶](https://docs.python.org/3/library/mimetypes.html#mimetypes.guess_all_extensions "Link to this definition")
    
Guess the extensions for a file based on its MIME type, given by _type_. The return value is a list of strings giving all possible filename extensions, including the leading dot (`'.'`). The extensions are not guaranteed to have been associated with any particular data stream, but would be mapped to the MIME type _type_ by [`guess_type()`](https://docs.python.org/3/library/mimetypes.html#mimetypes.guess_type "mimetypes.guess_type") and [`guess_file_type()`](https://docs.python.org/3/library/mimetypes.html#mimetypes.guess_file_type "mimetypes.guess_file_type").
The optional _strict_ argument has the same meaning as with the [`guess_type()`](https://docs.python.org/3/library/mimetypes.html#mimetypes.guess_type "mimetypes.guess_type") function. 

mimetypes.guess_extension(_type_ , _strict =True_)[¶](https://docs.python.org/3/library/mimetypes.html#mimetypes.guess_extension "Link to this definition")
    
Guess the extension for a file based on its MIME type, given by _type_. The return value is a string giving a filename extension, including the leading dot (`'.'`). The extension is not guaranteed to have been associated with any particular data stream, but would be mapped to the MIME type _type_ by [`guess_type()`](https://docs.python.org/3/library/mimetypes.html#mimetypes.guess_type "mimetypes.guess_type") and [`guess_file_type()`](https://docs.python.org/3/library/mimetypes.html#mimetypes.guess_file_type "mimetypes.guess_file_type"). If no extension can be guessed for _type_ , `None` is returned.
The optional _strict_ argument has the same meaning as with the [`guess_type()`](https://docs.python.org/3/library/mimetypes.html#mimetypes.guess_type "mimetypes.guess_type") function.
Some additional functions and data items are available for controlling the behavior of the module.