Title: Python 3.5.0 Beta 1 Release Notes
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This document outlines the release notes for Python 3.5.0 beta 1, including core and built-in improvements. Key fixes include optimizations for property descriptor getters, introduction of multi-phase extension module initialization, and updates on environment configuration for Windows. Several bug fixes are also noted, addressing issues like integer overflow and errors in type comparisons.
---

## Python 3.5.0 beta 1[¶](https://docs.python.org/3/whatsnew/changelog.html#python-3-5-0-beta-1 "Link to this heading")
_Release date: 2015-05-24_
### Core and Builtins[¶](https://docs.python.org/3/whatsnew/changelog.html#id769 "Link to this heading")
  * [bpo-24276](https://bugs.python.org/issue?@action=redirect&bpo=24276): Fixed optimization of property descriptor getter.
  * [bpo-24268](https://bugs.python.org/issue?@action=redirect&bpo=24268): PEP 489: Multi-phase extension module initialization. Patch by Petr Viktorin.
  * [bpo-23955](https://bugs.python.org/issue?@action=redirect&bpo=23955): Add pyvenv.cfg option to suppress registry/environment lookup for generating sys.path on Windows.
  * [bpo-24257](https://bugs.python.org/issue?@action=redirect&bpo=24257): Fixed system error in the comparison of faked types.SimpleNamespace.
  * [bpo-22939](https://bugs.python.org/issue?@action=redirect&bpo=22939): Fixed integer overflow in iterator object. Patch by Clement Rouault.
  * [bpo-23985](https://bugs.python.org/issue?@action=redirect&bpo=23985): Fix a possible buffer overrun when deleting a slice from the front of a bytearray and then appending some other bytes data.
  * [bpo-24102](https://bugs.python.org/issue?@action=redirect&bpo=24102): Fixed exception type checking in standard error handlers.
  * [bpo-15027](https://bugs.python.org/issue?@action=redirect&bpo=15027): The UTF-32 encoder is now 3x to 7x faster.
  * [bpo-23290](https://bugs.python.org/issue?@action=redirect&bpo=23290): Optimize set_merge() for cases where the target is empty. (Contributed by Serhiy Storchaka.)
  * [bpo-2292](https://bugs.python.org/issue?@action=redirect&bpo=2292): PEP 448: Additional Unpacking Generalizations.
  * [bpo-24096](https://bugs.python.org/issue?@action=redirect&bpo=24096): Make warnings.warn_explicit more robust against mutation of the warnings.filters list.
  * [bpo-23996](https://bugs.python.org/issue?@action=redirect&bpo=23996): Avoid a crash when a delegated generator raises an unnormalized StopIteration exception. Patch by Stefan Behnel.
  * [bpo-23910](https://bugs.python.org/issue?@action=redirect&bpo=23910): Optimize property() getter calls. Patch by Joe Jevnik.
  * [bpo-23911](https://bugs.python.org/issue?@action=redirect&bpo=23911): Move path-based importlib bootstrap code to a separate frozen module.
  * [bpo-24192](https://bugs.python.org/issue?@action=redirect&bpo=24192): Fix namespace package imports.
  * [bpo-24022](https://bugs.python.org/issue?@action=redirect&bpo=24022): Fix tokenizer crash when processing undecodable source code.
  * [bpo-9951](https://bugs.python.org/issue?@action=redirect&bpo=9951): Added a hex() method to bytes, bytearray, and memoryview.
  * [bpo-22906](https://bugs.python.org/issue?@action=redirect&bpo=22906): PEP 479: Change StopIteration handling inside generators.
  * [bpo-24017](https://bugs.python.org/issue?@action=redirect&bpo=24017): PEP 492: Coroutines with async and await syntax.