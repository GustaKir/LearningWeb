Title: Android Platform Information in Python
URL: https://docs.python.org/3/library/platform.html
Summary: Introduced in version 3.10, the `platform.android_ver()` function retrieves Android device information, returning a `namedtuple` that includes attributes such as `release`, `api_level`, `manufacturer`, and others. Default values are provided for attributes that cannot be determined.
---

```

Added in version 3.10.
## Android Platform[¶](https://docs.python.org/3/library/platform.html#android-platform "Link to this heading") 

platform.android_ver(_release =''_, _api_level =0_, _manufacturer =''_, _model =''_, _device =''_, _is_emulator =False_)[¶](https://docs.python.org/3/library/platform.html#platform.android_ver "Link to this definition")
    
Get Android device information. Returns a [`namedtuple()`](https://docs.python.org/3/library/collections.html#collections.namedtuple "collections.namedtuple") with the following attributes. Values which cannot be determined are set to the defaults given as parameters.
  * `release` - Android version, as a string (e.g. `"14"`).
  * `api_level` - API level of the running device, as an integer (e.g. `34` for Android 14). To get the API level which Python was built against, see [`sys.getandroidapilevel()`](https://docs.python.org/3/library/sys.html#sys.getandroidapilevel "sys.getandroidapilevel").
  * `manufacturer` - [Manufacturer name](https://developer.android.com/reference/android/os/Build#MANUFACTURER).
  * `model` - [Model name](https://developer.android.com/reference/android/os/Build#MODEL) – typically the marketing name or model number.
  * `device` - [Device name](https://developer.android.com/reference/android/os/Build#DEVICE) – typically the model number or a codename.
  * `is_emulator` - `True` if the device is an emulator; `False` if it’s a physical device.


Google maintains a [list of known model and device names](https://storage.googleapis.com/play_public/supported_devices.html).
Added in version 3.13.
### [Table of Contents](https://docs.python.org/3/contents.html)
  * [`platform` — Access to underlying platform’s identifying data](https://docs.python.org/3/library/platform.html)
    * [Cross Platform](https://docs.python.org/3/library/platform.html#cross-platform)
    * [Java Platform](https://docs.python.org/3/library/platform.html#java-platform)
    * [Windows Platform](https://docs.python.org/3/library/platform.html#windows-platform)
    * [macOS Platform](https://docs.python.org/3/library/platform.html#macos-platform)
    * [iOS Platform](https://docs.python.org/3/library/platform.html#ios-platform)
    * [Unix Platforms](https://docs.python.org/3/library/platform.html#unix-platforms)
    * [Linux Platforms](https://docs.python.org/3/library/platform.html#linux-platforms)
    * [Android Platform](https://docs.python.org/3/library/platform.html#android-platform)


#### Previous topic
[`logging.handlers` — Logging handlers](https://docs.python.org/3/library/logging.handlers.html "previous chapter")
#### Next topic
[`errno` — Standard errno system symbols](https://docs.python.org/3/library/errno.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/platform.rst)


«
### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/library/errno.html "errno — Standard errno system symbols") |
  * [previous](https://docs.python.org/3/library/logging.handlers.html "logging.handlers — Logging handlers") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [The Python Standard Library](https://docs.python.org/3/library/index.html) »
  * [Generic Operating System Services](https://docs.python.org/3/library/allos.html) »
  * [`platform` — Access to underlying platform’s identifying data](https://docs.python.org/3/library/platform.html)
  * | 
  * Theme  Auto Light Dark |


© [ Copyright ](https://docs.python.org/3/copyright.html) 2001-2025, Python Software Foundation. This page is licensed under the Python Software Foundation License Version 2. Examples, recipes, and other code in the documentation are additionally licensed under the Zero Clause BSD License. See [History and License](https://docs.python.org/license.html) for more information. The Python Software Foundation is a non-profit corporation. [Please donate.](https://www.python.org/psf/donations/) Last updated on Apr 27, 2025 (05:38 UTC). [Found a bug](https://docs.python.org/bugs.html)? Created using [Sphinx](https://www.sphinx-doc.org/) 8.2.3.