Title: poll.poll() Method in Python's select Module
URL: https://docs.python.org/3/library/select.html
Summary: The poll.poll() method in the select module polls registered file descriptors, returning a list of (fd, event) tuples for descriptors with reported events or errors. It can timeout based on the specified milliseconds, blocking if no timeout is set. This method was updated in version 3.5 to retry with a recomputed timeout in certain situations.
---

poll.poll([_timeout_])[¶](https://docs.python.org/3/library/select.html#select.poll.poll "Link to this definition")
    
Polls the set of registered file descriptors, and returns a possibly empty list containing `(fd, event)` 2-tuples for the descriptors that have events or errors to report. _fd_ is the file descriptor, and _event_ is a bitmask with bits set for the reported events for that descriptor — `POLLIN` for waiting input, `POLLOUT` to indicate that the descriptor can be written to, and so forth. An empty list indicates that the call timed out and no file descriptors had any events to report. If _timeout_ is given, it specifies the length of time in milliseconds which the system will wait for events before returning. If _timeout_ is omitted, negative, or [`None`](https://docs.python.org/3/library/constants.html#None "None"), the call will block until there is an event for this poll object.
Changed in version 3.5: The function is now retried with a recomputed timeout when interrupted by a signal, except if the signal handler raises an exception (see [**PEP 475**](https://peps.python.org/pep-0475/) for the rationale), instead of raising [`InterruptedError`](https://docs.python.org/3/library/exceptions.html#InterruptedError "InterruptedError").
## Kqueue Objects[¶](https://docs.python.org/3/library/select.html#kqueue-objects "Link to this heading") 

kqueue.close()[¶](https://docs.python.org/3/library/select.html#select.kqueue.close "Link to this definition")
    
Close the control file descriptor of the kqueue object. 

kqueue.closed[¶](https://docs.python.org/3/library/select.html#select.kqueue.closed "Link to this definition")
    
`True` if the kqueue object is closed. 

kqueue.fileno()[¶](https://docs.python.org/3/library/select.html#select.kqueue.fileno "Link to this definition")
    
Return the file descriptor number of the control fd. 

kqueue.fromfd(_fd_)[¶](https://docs.python.org/3/library/select.html#select.kqueue.fromfd "Link to this definition")
    
Create a kqueue object from a given file descriptor. 

kqueue.control(_changelist_ , _max_events_[, _timeout_]) → eventlist[¶](https://docs.python.org/3/library/select.html#select.kqueue.control "Link to this definition")
    
Low level interface to kevent
  * changelist must be an iterable of kevent objects or `None`
  * max_events must be 0 or a positive integer
  * timeout in seconds (floats possible); the default is `None`, to wait forever


Changed in version 3.5: The function is now retried with a recomputed timeout when interrupted by a signal, except if the signal handler raises an exception (see [**PEP 475**](https://peps.python.org/pep-0475/) for the rationale), instead of raising [`InterruptedError`](https://docs.python.org/3/library/exceptions.html#InterruptedError "InterruptedError").
## Kevent Objects[¶](https://docs.python.org/3/library/select.html#kevent-objects "Link to this heading")
[https://man.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2](https://man.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2) 

kevent.ident[¶](https://docs.python.org/3/library/select.html#select.kevent.ident "Link to this definition")
    
Value used to identify the event. The interpretation depends on the filter but it’s usually the file descriptor. In the constructor ident can either be an int or an object with a [`fileno()`](https://docs.python.org/3/library/io.html#io.IOBase.fileno "io.IOBase.fileno") method. kevent stores the integer internally. 

kevent.filter[¶](https://docs.python.org/3/library/select.html#select.kevent.filter "Link to this definition")
    
Name of the kernel filter.
Constant | Meaning  
---|---  
`KQ_FILTER_READ` | Takes a descriptor and returns whenever there is data available to read  
`KQ_FILTER_WRITE` | Takes a descriptor and returns whenever there is data available to write  
`KQ_FILTER_AIO` | AIO requests  
`KQ_FILTER_VNODE` | Returns when one or more of the requested events watched in _fflag_ occurs  
`KQ_FILTER_PROC` | Watch for events on a process id  
`KQ_FILTER_NETDEV` | Watch for events on a network device [not available on macOS]  
`KQ_FILTER_SIGNAL` | Returns whenever the watched signal is delivered to the process  
`KQ_FILTER_TIMER` | Establishes an arbitrary timer 

kevent.flags[¶](https://docs.python.org/3/library/select.html#select.kevent.flags "Link to this definition")
      
Filter action.
Constant | Meaning  
---|---  
`KQ_EV_ADD` | Adds or modifies an event  
`KQ_EV_DELETE` | Removes an event from the queue  
`KQ_EV_ENABLE` | Permitscontrol() to returns the event  
`KQ_EV_DISABLE` | Disablesevent  
`KQ_EV_ONESHOT` | Removes event after first occurrence  
`KQ_EV_CLEAR` | Reset the state after an event is retrieved  
`KQ_EV_SYSFLAGS` | internal event  
`KQ_EV_FLAG1` | internal event  
`KQ_EV_EOF` | Filter specific EOF condition  
`KQ_EV_ERROR` | See return values