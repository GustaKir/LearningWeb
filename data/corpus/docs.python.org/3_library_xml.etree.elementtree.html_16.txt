Title: QName and TreeBuilder Objects in ElementTree
URL: https://docs.python.org/3/library/xml.etree.elementtree.html
Summary: This section describes the QName class used for proper namespace handling of QName attribute values in the xml.etree.ElementTree module. It explains the constructor parameters and their usage for creating QName instances, as well as introduces TreeBuilder objects, which are used for building XML trees.
---

```

### QName Objects[¶](https://docs.python.org/3/library/xml.etree.elementtree.html#qname-objects "Link to this heading") 

_class_ xml.etree.ElementTree.QName(_text_or_uri_ , _tag =None_)[¶](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.QName "Link to this definition")
    
QName wrapper. This can be used to wrap a QName attribute value, in order to get proper namespace handling on output. _text_or_uri_ is a string containing the QName value, in the form {uri}local, or, if the tag argument is given, the URI part of a QName. If _tag_ is given, the first argument is interpreted as a URI, and this argument is interpreted as a local name. [`QName`](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.QName "xml.etree.ElementTree.QName") instances are opaque.
### TreeBuilder Objects[¶](https://docs.python.org/3/library/xml.etree.elementtree.html#treebuilder-objects "Link to this heading") 

_class_ xml.etree.ElementTree.TreeBuilder(_element_factory =None_, _*_ , _comment_factory =None_, _pi_factory =None_, _insert_comments =False_, _insert_pis =False_)[¶](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.TreeBuilder "Link to this definition")
    
Generic element structure builder. This builder converts a sequence of start, data, end, comment and pi method calls to a well-formed element structure. You can use this class to build an element structure using a custom XML parser, or a parser for some other XML-like format.
_element_factory_ , when given, must be a callable accepting two positional arguments: a tag and a dict of attributes. It is expected to return a new element instance.
The _comment_factory_ and _pi_factory_ functions, when given, should behave like the [`Comment()`](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.Comment "xml.etree.ElementTree.Comment") and [`ProcessingInstruction()`](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.ProcessingInstruction "xml.etree.ElementTree.ProcessingInstruction") functions to create comments and processing instructions. When not given, the default factories will be used. When _insert_comments_ and/or _insert_pis_ is true, comments/pis will be inserted into the tree if they appear within the root element (but not outside of it). 

close()[¶](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.TreeBuilder.close "Link to this definition")
    
Flushes the builder buffers, and returns the toplevel document element. Returns an [`Element`](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element "xml.etree.ElementTree.Element") instance. 

data(_data_)[¶](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.TreeBuilder.data "Link to this definition")
    
Adds text to the current element. _data_ is a string. This should be either a bytestring, or a Unicode string. 

end(_tag_)[¶](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.TreeBuilder.end "Link to this definition")
    
Closes the current element. _tag_ is the element name. Returns the closed element. 

start(_tag_ , _attrs_)[¶](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.TreeBuilder.start "Link to this definition")
    
Opens a new element. _tag_ is the element name. _attrs_ is a dictionary containing element attributes. Returns the opened element. 

comment(_text_)[¶](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.TreeBuilder.comment "Link to this definition")
    
Creates a comment with the given _text_. If `insert_comments` is true, this will also add it to the tree.
Added in version 3.8. 

pi(_target_ , _text_)[¶](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.TreeBuilder.pi "Link to this definition")
    
Creates a process instruction with the given _target_ name and _text_. If `insert_pis` is true, this will also add it to the tree.
Added in version 3.8.
In addition, a custom [`TreeBuilder`](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.TreeBuilder "xml.etree.ElementTree.TreeBuilder") object can provide the following methods: 

doctype(_name_ , _pubid_ , _system_)[¶](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.TreeBuilder.doctype "Link to this definition")
    
Handles a doctype declaration. _name_ is the doctype name. _pubid_ is the public identifier. _system_ is the system identifier. This method does not exist on the default [`TreeBuilder`](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.TreeBuilder "xml.etree.ElementTree.TreeBuilder") class.
Added in version 3.2.