Title: Python 3 Changelog: Notable Changes and Fixes
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This document notes several changes in Python 3, including the removal of the `CALL_PROFILE` special build in favor of `sys.setprofile()`, allowing more than 255 arguments in functions, and fixing a bug related to the `yield from` implementation. It also addresses an error in the unicode error handling in ASCII and Latin1 encoders.
---

Remove the `CALL_PROFILE` special build: use the [`sys.setprofile()`](https://docs.python.org/3/library/sys.html#sys.setprofile "sys.setprofile") function, [`cProfile`](https://docs.python.org/3/library/profile.html#module-cProfile "cProfile") or [`profile`](https://docs.python.org/3/library/profile.html#module-profile "profile: Python source profiler.") to profile function calls.
  * [bpo-12844](https://bugs.python.org/issue?@action=redirect&bpo=12844): More than 255 arguments can now be passed to a function.
  * [bpo-28782](https://bugs.python.org/issue?@action=redirect&bpo=28782): Fix a bug in the implementation `yield from` when checking if the next instruction is YIELD_FROM. Regression introduced by WORDCODE ([bpo-26647](https://bugs.python.org/issue?@action=redirect&bpo=26647)).
  * [bpo-28774](https://bugs.python.org/issue?@action=redirect&bpo=28774): Fix error position of the unicode error in ASCII and Latin1 encoders when a string returned by the error handler contains multiple non-encodable characters (non-ASCII for the ASCII codec, characters out of the U+0000-U+00FF range for Latin1).
  * [bpo-28731](https://bugs.python.org/issue?@action=redirect&bpo=28731): Optimize _PyDict_NewPresized() to create correct size dict. Improve speed of dict literal with constant keys up to 30%.
  * [bpo-28532](https://bugs.python.org/issue?@action=redirect&bpo=28532): Show sys.version when -V option is supplied twice.
  * [bpo-27100](https://bugs.python.org/issue?@action=redirect&bpo=27100): The with-statement now checks for __enter__ before it checks for __exit__. This gives less confusing error messages when both methods are missing. Patch by Jonathan Ellington.
  * [bpo-28746](https://bugs.python.org/issue?@action=redirect&bpo=28746): Fix the set_inheritable() file descriptor method on platforms that do not have the ioctl FIOCLEX and FIONCLEX commands.
  * [bpo-26920](https://bugs.python.org/issue?@action=redirect&bpo=26920): Fix not getting the locale’s charset upon initializing the interpreter, on platforms that do not have langinfo.
  * [bpo-28648](https://bugs.python.org/issue?@action=redirect&bpo=28648): Fixed crash in Py_DecodeLocale() in debug build on Mac OS X when decode astral characters. Patch by Xiang Zhang.
  * [bpo-28665](https://bugs.python.org/issue?@action=redirect&bpo=28665): Improve speed of the STORE_DEREF opcode by 40%.
  * [bpo-19398](https://bugs.python.org/issue?@action=redirect&bpo=19398): Extra slash no longer added to sys.path components in case of empty compile-time PYTHONPATH components.
  * [bpo-28621](https://bugs.python.org/issue?@action=redirect&bpo=28621): Sped up converting int to float by reusing faster bits counting implementation. Patch by Adrian Wielgosik.
  * [bpo-28580](https://bugs.python.org/issue?@action=redirect&bpo=28580): Optimize iterating split table values. Patch by Xiang Zhang.
  * [bpo-28583](https://bugs.python.org/issue?@action=redirect&bpo=28583): PyDict_SetDefault didn’t combine split table when needed. Patch by Xiang Zhang.
  * [bpo-28128](https://bugs.python.org/issue?@action=redirect&bpo=28128): Deprecation warning for invalid str and byte escape sequences now prints better information about where the error occurs. Patch by Serhiy Storchaka and Eric Smith.
  * [bpo-28509](https://bugs.python.org/issue?@action=redirect&bpo=28509): dict.update() no longer allocate unnecessary large memory.
  * [bpo-28426](https://bugs.python.org/issue?@action=redirect&bpo=28426): Fixed potential crash in PyUnicode_AsDecodedObject() in debug build.
  * [bpo-28517](https://bugs.python.org/issue?@action=redirect&bpo=28517): Fixed of-by-one error in the peephole optimizer that caused keeping unreachable code.
  * [bpo-28214](https://bugs.python.org/issue?@action=redirect&bpo=28214): Improved exception reporting for problematic __set_name__ attributes.
  * [bpo-23782](https://bugs.python.org/issue?@action=redirect&bpo=23782): Fixed possible memory leak in _PyTraceback_Add() and exception loss in PyTraceBack_Here().
  * [bpo-28183](https://bugs.python.org/issue?@action=redirect&bpo=28183): Optimize and cleanup dict iteration.
  * [bpo-26081](https://bugs.python.org/issue?@action=redirect&bpo=26081): Added C implementation of asyncio.Future. Original patch by Yury Selivanov.
  * [bpo-28379](https://bugs.python.org/issue?@action=redirect&bpo=28379): Added sanity checks and tests for PyUnicode_CopyCharacters(). Patch by Xiang Zhang.
  * [bpo-28376](https://bugs.python.org/issue?@action=redirect&bpo=28376): The type of long range iterator is now registered as Iterator. Patch by Oren Milman.
  * [bpo-28376](https://bugs.python.org/issue?@action=redirect&bpo=28376): Creating instances of range_iterator by calling range_iterator type now is disallowed. Calling iter() on range instance is the only way.