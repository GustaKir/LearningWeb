Title: Python FAQs on Design Decisions
URL: https://docs.python.org/3/contents.html
Summary: This section addresses various design-related questions about Python, including the rationale behind certain method and function choices, performance of exceptions, the absence of a switch statement, thread implementation, and limitations of lambda expressions.
---

len(list))?](https://docs.python.org/3/faq/design.html#why-does-python-use-methods-for-some-functionality-e-g-list-index-but-functions-for-other-e-g-len-list)
      * [Why is join() a string method instead of a list or tuple method?](https://docs.python.org/3/faq/design.html#why-is-join-a-string-method-instead-of-a-list-or-tuple-method)
      * [How fast are exceptions?](https://docs.python.org/3/faq/design.html#how-fast-are-exceptions)
      * [Why isn’t there a switch or case statement in Python?](https://docs.python.org/3/faq/design.html#why-isn-t-there-a-switch-or-case-statement-in-python)
      * [Can’t you emulate threads in the interpreter instead of relying on an OS-specific thread implementation?](https://docs.python.org/3/faq/design.html#can-t-you-emulate-threads-in-the-interpreter-instead-of-relying-on-an-os-specific-thread-implementation)
      * [Why can’t lambda expressions contain statements?](https://docs.python.org/3/faq/design.html#why-can-t-lambda-expressions-contain-statements)
      * [Can Python be compiled to machine code, C or some other language?](https://docs.python.org/3/faq/design.html#can-python-be-compiled-to-machine-code-c-or-some-other-language)
      * [How does Python manage memory?](https://docs.python.org/3/faq/design.html#how-does-python-manage-memory)
      * [Why doesn’t CPython use a more traditional garbage collection scheme?](https://docs.python.org/3/faq/design.html#why-doesn-t-cpython-use-a-more-traditional-garbage-collection-scheme)
      * [Why isn’t all memory freed when CPython exits?](https://docs.python.org/3/faq/design.html#why-isn-t-all-memory-freed-when-cpython-exits)
      * [Why are there separate tuple and list data types?](https://docs.python.org/3/faq/design.html#why-are-there-separate-tuple-and-list-data-types)
      * [How are lists implemented in CPython?](https://docs.python.org/3/faq/design.html#how-are-lists-implemented-in-cpython)
      * [How are dictionaries implemented in CPython?](https://docs.python.org/3/faq/design.html#how-are-dictionaries-implemented-in-cpython)
      * [Why must dictionary keys be immutable?](https://docs.python.org/3/faq/design.html#why-must-dictionary-keys-be-immutable)
      * [Why doesn’t list.sort() return the sorted list?](https://docs.python.org/3/faq/design.html#why-doesn-t-list-sort-return-the-sorted-list)
      * [How do you specify and enforce an interface spec in Python?](https://docs.python.org/3/faq/design.html#how-do-you-specify-and-enforce-an-interface-spec-in-python)
      * [Why is there no goto?](https://docs.python.org/3/faq/design.html#why-is-there-no-goto)
      * [Why can’t raw strings (r-strings) end with a backslash?](https://docs.python.org/3/faq/design.html#why-can-t-raw-strings-r-strings-end-with-a-backslash)
      * [Why doesn’t Python have a “with” statement for attribute assignments?](https://docs.python.org/3/faq/design.html#why-doesn-t-python-have-a-with-statement-for-attribute-assignments)
      * [Why don’t generators support the with statement?](https://docs.python.org/3/faq/design.html#why-don-t-generators-support-the-with-statement)
      * [Why are colons required for the if/while/def/class statements?](https://docs.python.org/3/faq/design.html#why-are-colons-required-for-the-if-while-def-class-statements)
      * [Why does Python allow commas at the end of lists and tuples?](https://docs.python.org/3/faq/design.html#why-does-python-allow-commas-at-the-end-of-lists-and-tuples)
    * [Library and Extension FAQ](https://docs.python.org/3/faq/library.html)
      * [General Library Questions](https://docs.python.org/3/faq/library.html#general-library-questions)
      * [Common tasks](https://docs.python.org/3/faq/library.html#common-tasks)
      * [Threads](https://docs.python.org/3/faq/library.html#threads)
      * [Input and Output](https://docs.python.org/3/faq/library.html#input-and-output)
      * [Network/Internet Programming](https://docs.python.org/3/faq/library.html#network-internet-programming)
      * [Databases](https://docs.python.org/3/faq/library.html#databases)
      * [Mathematics and Numerics](https://docs.python.org/3/faq/library.html#mathematics-and-numerics)
    * [Extending/Embedding FAQ](https://docs.python.org/3/faq/extending.html)
      * [Can I create my own functions in C?](https://docs.python.org/3/faq/extending.html#can-i-create-my-own-functions-in-c)
      * [Can I create my own functions in C++?](https://docs.python.org/3/faq/extending.html#id1)
      * [Writing C is hard; are there any alternatives?](https://docs.python.org/3/faq/extending.html#writing-c-is-hard-are-there-any-alternatives)
      * [How can I execute arbitrary Python statements from C?](https://docs.python.org/3/faq/extending.html#how-can-i-execute-arbitrary-python-statements-from-c)
      * [How can I evaluate an arbitrary Python expression from C?](https://docs.python.org/3/faq/extending.html#how-can-i-evaluate-an-arbitrary-python-expression-from-c)
      * [How do I extract C values