Title: PyUnicode_InternFromString - Python C API
URL: https://docs.python.org/3/c-api/unicode.html
Summary: The `PyUnicode_InternFromString` function returns a new reference to an interned Unicode string object created from a statically allocated C string. It combines the functionality of `PyUnicode_FromString()` and `PyUnicode_InternInPlace()`, ensuring that Python may hold a reference to the result or mark it as immortal to prevent garbage collection.
---

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyUnicode_InternFromString(constchar*str)[¶](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_InternFromString "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
A combination of [`PyUnicode_FromString()`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_FromString "PyUnicode_FromString") and [`PyUnicode_InternInPlace()`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_InternInPlace "PyUnicode_InternInPlace"), meant for statically allocated strings.
Return a new (“owned”) reference to either a new Unicode string object that has been interned, or an earlier interned string object with the same value.
Python may keep a reference to the result, or make it [immortal](https://docs.python.org/3/glossary.html#term-immortal), preventing it from being garbage-collected promptly. For interning an unbounded number of different strings, such as ones coming from user input, prefer calling [`PyUnicode_FromString()`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_FromString "PyUnicode_FromString") and [`PyUnicode_InternInPlace()`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_InternInPlace "PyUnicode_InternInPlace") directly.
**CPython implementation detail:** Strings interned this way are made [immortal](https://docs.python.org/3/glossary.html#term-immortal).
### [Table of Contents](https://docs.python.org/3/contents.html)
  * [Unicode Objects and Codecs](https://docs.python.org/3/c-api/unicode.html)
    * [Unicode Objects](https://docs.python.org/3/c-api/unicode.html#unicode-objects)
      * [Unicode Type](https://docs.python.org/3/c-api/unicode.html#unicode-type)
      * [Unicode Character Properties](https://docs.python.org/3/c-api/unicode.html#unicode-character-properties)
      * [Creating and accessing Unicode strings](https://docs.python.org/3/c-api/unicode.html#creating-and-accessing-unicode-strings)
      * [Locale Encoding](https://docs.python.org/3/c-api/unicode.html#locale-encoding)
      * [File System Encoding](https://docs.python.org/3/c-api/unicode.html#file-system-encoding)
      * [wchar_t Support](https://docs.python.org/3/c-api/unicode.html#wchar-t-support)
    * [Built-in Codecs](https://docs.python.org/3/c-api/unicode.html#built-in-codecs)
      * [Generic Codecs](https://docs.python.org/3/c-api/unicode.html#generic-codecs)
      * [UTF-8 Codecs](https://docs.python.org/3/c-api/unicode.html#utf-8-codecs)
      * [UTF-32 Codecs](https://docs.python.org/3/c-api/unicode.html#utf-32-codecs)
      * [UTF-16 Codecs](https://docs.python.org/3/c-api/unicode.html#utf-16-codecs)
      * [UTF-7 Codecs](https://docs.python.org/3/c-api/unicode.html#utf-7-codecs)
      * [Unicode-Escape Codecs](https://docs.python.org/3/c-api/unicode.html#unicode-escape-codecs)
      * [Raw-Unicode-Escape Codecs](https://docs.python.org/3/c-api/unicode.html#raw-unicode-escape-codecs)
      * [Latin-1 Codecs](https://docs.python.org/3/c-api/unicode.html#latin-1-codecs)
      * [ASCII Codecs](https://docs.python.org/3/c-api/unicode.html#ascii-codecs)
      * [Character Map Codecs](https://docs.python.org/3/c-api/unicode.html#character-map-codecs)
      * [MBCS codecs for Windows](https://docs.python.org/3/c-api/unicode.html#mbcs-codecs-for-windows)
      * [Methods & Slots](https://docs.python.org/3/c-api/unicode.html#methods-slots)
    * [Methods and Slot Functions](https://docs.python.org/3/c-api/unicode.html#methods-and-slot-functions)


#### Previous topic
[Byte Array Objects](https://docs.python.org/3/c-api/bytearray.html "previous chapter")
#### Next topic
[Tuple Objects](https://docs.python.org/3/c-api/tuple.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/c-api/unicode.rst)