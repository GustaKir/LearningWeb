Title: HTTP Digest Authentication in urllib
URL: https://docs.python.org/3/library/urllib.request.html
Summary: This section describes the `http_error_auth_reqed` method in `AbstractDigestAuthHandler`, which handles authentication requests for HTTP Digest authentication. It includes parameters for authentication realm, host, and request headers. It also summarizes the `http_error_401` method in `HTTPDigestAuthHandler`, which is used to retry a request with authentication information.
---

AbstractDigestAuthHandler.http_error_auth_reqed(_authreq_ , _host_ , _req_ , _headers_)[¶](https://docs.python.org/3/library/urllib.request.html#urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed "Link to this definition")
    
_authreq_ should be the name of the header where the information about the realm is included in the request, _host_ should be the host to authenticate to, _req_ should be the (failed) [`Request`](https://docs.python.org/3/library/urllib.request.html#urllib.request.Request "urllib.request.Request") object, and _headers_ should be the error headers.
## HTTPDigestAuthHandler Objects[¶](https://docs.python.org/3/library/urllib.request.html#httpdigestauthhandler-objects "Link to this heading") 

HTTPDigestAuthHandler.http_error_401(_req_ , _fp_ , _code_ , _msg_ , _hdrs_)[¶](https://docs.python.org/3/library/urllib.request.html#urllib.request.HTTPDigestAuthHandler.http_error_401 "Link to this definition")
    
Retry the request with authentication information, if available.
## ProxyDigestAuthHandler Objects[¶](https://docs.python.org/3/library/urllib.request.html#proxydigestauthhandler-objects "Link to this heading") 

ProxyDigestAuthHandler.http_error_407(_req_ , _fp_ , _code_ , _msg_ , _hdrs_)[¶](https://docs.python.org/3/library/urllib.request.html#urllib.request.ProxyDigestAuthHandler.http_error_407 "Link to this definition")
    
Retry the request with authentication information, if available.
## HTTPHandler Objects[¶](https://docs.python.org/3/library/urllib.request.html#httphandler-objects "Link to this heading") 

HTTPHandler.http_open(_req_)[¶](https://docs.python.org/3/library/urllib.request.html#urllib.request.HTTPHandler.http_open "Link to this definition")
    
Send an HTTP request, which can be either GET or POST, depending on `req.has_data()`.
## HTTPSHandler Objects[¶](https://docs.python.org/3/library/urllib.request.html#httpshandler-objects "Link to this heading") 

HTTPSHandler.https_open(_req_)[¶](https://docs.python.org/3/library/urllib.request.html#urllib.request.HTTPSHandler.https_open "Link to this definition")
    
Send an HTTPS request, which can be either GET or POST, depending on `req.has_data()`.
## FileHandler Objects[¶](https://docs.python.org/3/library/urllib.request.html#filehandler-objects "Link to this heading") 

FileHandler.file_open(_req_)[¶](https://docs.python.org/3/library/urllib.request.html#urllib.request.FileHandler.file_open "Link to this definition")
    
Open the file locally, if there is no host name, or the host name is `'localhost'`.
Changed in version 3.2: This method is applicable only for local hostnames. When a remote hostname is given, a [`URLError`](https://docs.python.org/3/library/urllib.error.html#urllib.error.URLError "urllib.error.URLError") is raised.
## DataHandler Objects[¶](https://docs.python.org/3/library/urllib.request.html#datahandler-objects "Link to this heading") 

DataHandler.data_open(_req_)[¶](https://docs.python.org/3/library/urllib.request.html#urllib.request.DataHandler.data_open "Link to this definition")
    
Read a data URL. This kind of URL contains the content encoded in the URL itself. The data URL syntax is specified in [**RFC 2397**](https://datatracker.ietf.org/doc/html/rfc2397.html). This implementation ignores white spaces in base64 encoded data URLs so the URL may be wrapped in whatever source file it comes from. But even though some browsers don’t mind about a missing padding at the end of a base64 encoded data URL, this implementation will raise a [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError "ValueError") in that case.
## FTPHandler Objects[¶](https://docs.python.org/3/library/urllib.request.html#ftphandler-objects "Link to this heading") 

FTPHandler.ftp_open(_req_)[¶](https://docs.python.org/3/library/urllib.request.html#urllib.request.FTPHandler.ftp_open "Link to this definition")
    
Open the FTP file indicated by _req_. The login is always done with empty username and password.
## CacheFTPHandler Objects[¶](https://docs.python.org/3/library/urllib.request.html#cacheftphandler-objects "Link to this heading")
[`CacheFTPHandler`](https://docs.python.org/3/library/urllib.request.html#urllib.request.CacheFTPHandler "urllib.request.CacheFTPHandler") objects are [`FTPHandler`](https://docs.python.org/3/library/urllib.request.html#urllib.request.FTPHandler "urllib.request.FTPHandler") objects with the following additional methods: 

CacheFTPHandler.setTimeout(_t_)[¶](https://docs.python.org/3/library/urllib.request.html#urllib.request.CacheFTPHandler.setTimeout "Link to this definition")
    
Set timeout of connections to _t_ seconds.