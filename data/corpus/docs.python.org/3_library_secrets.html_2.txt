Title: Using the secrets Module for Secure Random Generation
URL: https://docs.python.org/3/library/secrets.html
Summary: This section explains how to generate an XKCD-style passphrase using a word list on Linux and how to create a hard-to-guess temporary URL with a security token for password recovery applications using the secrets module in Python.
---

```

Generate an [XKCD-style passphrase](https://xkcd.com/936/):
```
importsecrets
# On standard Linux systems, use a convenient dictionary file.
# Other platforms may need to provide their own word-list.
with open('/usr/share/dict/words') as f:
  words = [word.strip() for word in f]
  password = ' '.join(secrets.choice(words) for i in range(4))

```

Generate a hard-to-guess temporary URL containing a security token suitable for password recovery applications:
```
importsecrets
url = 'https://example.com/reset=' + secrets.token_urlsafe()

```

### [Table of Contents](https://docs.python.org/3/contents.html)
  * [`secrets` — Generate secure random numbers for managing secrets](https://docs.python.org/3/library/secrets.html)
    * [Random numbers](https://docs.python.org/3/library/secrets.html#random-numbers)
    * [Generating tokens](https://docs.python.org/3/library/secrets.html#generating-tokens)
      * [How many bytes should tokens use?](https://docs.python.org/3/library/secrets.html#how-many-bytes-should-tokens-use)
    * [Other functions](https://docs.python.org/3/library/secrets.html#other-functions)
    * [Recipes and best practices](https://docs.python.org/3/library/secrets.html#recipes-and-best-practices)


#### Previous topic
[`hmac` — Keyed-Hashing for Message Authentication](https://docs.python.org/3/library/hmac.html "previous chapter")
#### Next topic
[Generic Operating System Services](https://docs.python.org/3/library/allos.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/secrets.rst)


«
### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/library/allos.html "Generic Operating System Services") |
  * [previous](https://docs.python.org/3/library/hmac.html "hmac — Keyed-Hashing for Message Authentication") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [The Python Standard Library](https://docs.python.org/3/library/index.html) »
  * [Cryptographic Services](https://docs.python.org/3/library/crypto.html) »
  * [`secrets` — Generate secure random numbers for managing secrets](https://docs.python.org/3/library/secrets.html)
  * | 
  * Theme  Auto Light Dark |


© [ Copyright ](https://docs.python.org/3/copyright.html) 2001-2025, Python Software Foundation. This page is licensed under the Python Software Foundation License Version 2. Examples, recipes, and other code in the documentation are additionally licensed under the Zero Clause BSD License. See [History and License](https://docs.python.org/license.html) for more information. The Python Software Foundation is a non-profit corporation. [Please donate.](https://www.python.org/psf/donations/) Last updated on Apr 27, 2025 (05:38 UTC). [Found a bug](https://docs.python.org/bugs.html)? Created using [Sphinx](https://www.sphinx-doc.org/) 8.2.3.