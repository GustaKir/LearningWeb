Title: Fileinput Library Updates and In-Place Filtering
URL: https://docs.python.org/3/library/fileinput.html
Summary: This section outlines recent changes to the Python fileinput library, including the introduction of context manager support in version 3.2, changes to keyword parameters in versions 3.8 and 3.10, and the removal of certain modes in version 3.11. It also explains how to use optional in-place filtering to rewrite input files directly, with details on backup file handling.
---

```

Changed in version 3.2: Can be used as a context manager.
Changed in version 3.8: The keyword parameter _mode_ and _openhook_ are now keyword-only.
Changed in version 3.10: The keyword-only parameter _encoding_ and _errors_ are added.
Changed in version 3.11: The `'rU'` and `'U'` modes and the `__getitem__()` method have been removed.
**Optional in-place filtering:** if the keyword argument `inplace=True` is passed to [`fileinput.input()`](https://docs.python.org/3/library/fileinput.html#fileinput.input "fileinput.input") or to the [`FileInput`](https://docs.python.org/3/library/fileinput.html#fileinput.FileInput "fileinput.FileInput") constructor, the file is moved to a backup file and standard output is directed to the input file (if a file of the same name as the backup file already exists, it will be replaced silently). This makes it possible to write a filter that rewrites its input file in place. If the _backup_ parameter is given (typically as `backup='.<some extension>'`), it specifies the extension for the backup file, and the backup file remains around; by default, the extension is `'.bak'` and it is deleted when the output file is closed. In-place filtering is disabled when standard input is read.
The two following opening hooks are provided by this module: 

fileinput.hook_compressed(_filename_ , _mode_ , _*_ , _encoding =None_, _errors =None_)[¶](https://docs.python.org/3/library/fileinput.html#fileinput.hook_compressed "Link to this definition")
    
Transparently opens files compressed with gzip and bzip2 (recognized by the extensions `'.gz'` and `'.bz2'`) using the [`gzip`](https://docs.python.org/3/library/gzip.html#module-gzip "gzip: Interfaces for gzip compression and decompression using file objects.") and [`bz2`](https://docs.python.org/3/library/bz2.html#module-bz2 "bz2: Interfaces for bzip2 compression and decompression.") modules. If the filename extension is not `'.gz'` or `'.bz2'`, the file is opened normally (ie, using [`open()`](https://docs.python.org/3/library/functions.html#open "open") without any decompression).
The _encoding_ and _errors_ values are passed to [`io.TextIOWrapper`](https://docs.python.org/3/library/io.html#io.TextIOWrapper "io.TextIOWrapper") for compressed files and open for normal files.
Usage example: `fi = fileinput.FileInput(openhook=fileinput.hook_compressed, encoding="utf-8")`
Changed in version 3.10: The keyword-only parameter _encoding_ and _errors_ are added. 

fileinput.hook_encoded(_encoding_ , _errors =None_)[¶](https://docs.python.org/3/library/fileinput.html#fileinput.hook_encoded "Link to this definition")
    
Returns a hook which opens each file with [`open()`](https://docs.python.org/3/library/functions.html#open "open"), using the given _encoding_ and _errors_ to read the file.
Usage example: `fi = fileinput.FileInput(openhook=fileinput.hook_encoded("utf-8", "surrogateescape"))`
Changed in version 3.6: Added the optional _errors_ parameter.
Deprecated since version 3.10: This function is deprecated since [`fileinput.input()`](https://docs.python.org/3/library/fileinput.html#fileinput.input "fileinput.input") and [`FileInput`](https://docs.python.org/3/library/fileinput.html#fileinput.FileInput "fileinput.FileInput") now have _encoding_ and _errors_ parameters.
#### Previous topic
[`getpass` — Portable password input](https://docs.python.org/3/library/getpass.html "previous chapter")
#### Next topic
[`curses` — Terminal handling for character-cell displays](https://docs.python.org/3/library/curses.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/fileinput.rst)


«
### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/library/curses.html "curses — Terminal handling for character-cell displays") |
  * [previous](https://docs.python.org/3/library/getpass.html "getpass — Portable password input") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [The Python Standard Library](https://docs.python.org/3/library/index.html) »
  * [Command Line Interface Libraries](https://docs.python.org/3/library/cmdlinelibs.html) »
  * [`fileinput` — Iterate over lines from multiple input streams](https://docs.python.org/3/library/fileinput.html)
  * | 
  * Theme  Auto Light Dark |