Title: Python 3.10 Changelog Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This document details recent changes in Python 3.10, including improvements to module loading within exec_module(), implementation of PEP 654 with new ExceptionGroup and BaseExceptionGroup classes, and modifications to split dictionaries for class attribute handling. These changes mainly affect internal behaviors without observable impacts on users.
---

(), we now preserve the information needed in exec_module() to load the module. This change mostly impacts internal details, rather than changing the importerâ€™s behavior.
  * [bpo-45292](https://bugs.python.org/issue?@action=redirect&bpo=45292): Implement [**PEP 654**](https://peps.python.org/pep-0654/). Add [`ExceptionGroup`](https://docs.python.org/3/library/exceptions.html#ExceptionGroup "ExceptionGroup") and [`BaseExceptionGroup`](https://docs.python.org/3/library/exceptions.html#BaseExceptionGroup "BaseExceptionGroup"). Update traceback display code.
  * [bpo-40116](https://bugs.python.org/issue?@action=redirect&bpo=40116): Change to the implementation of split dictionaries. Classes where the instances differ either in the exact set of attributes, or in the order in which those attributes are set, can still share keys. This should have no observable effect on users of Python or the C-API. Patch by Mark Shannon.
  * [bpo-44050](https://bugs.python.org/issue?@action=redirect&bpo=44050): Extensions that indicate they use global state (by setting `m_size` to -1) can again be used in multiple interpreters. This reverts to behavior of Python 3.8.
  * [bpo-44525](https://bugs.python.org/issue?@action=redirect&bpo=44525): Setup initial specialization infrastructure for the `CALL_FUNCTION` opcode. Implemented initial specializations for C function calls:
    * `CALL_FUNCTION_BUILTIN_O` for `METH_O` flag.
    * `CALL_FUNCTION_BUILTIN_FAST` for `METH_FASTCALL` flag without keywords.
    * `CALL_FUNCTION_LEN` for `len(o)`.
    * `CALL_FUNCTION_ISINSTANCE` for `isinstance(o, t)`.
  * [bpo-44511](https://bugs.python.org/issue?@action=redirect&bpo=44511): Improve the generated bytecode for class and mapping patterns.
  * [bpo-43706](https://bugs.python.org/issue?@action=redirect&bpo=43706): Speed up calls to `enumerate()` by using the [**PEP 590**](https://peps.python.org/pep-0590/) `vectorcall` calling convention. Patch by Donghee Na.