Title: Removed Features in Python 3.11
URL: https://docs.python.org/3/whatsnew/3.11.html
Summary: This section outlines the Python APIs removed in Python 3.11, including the removal of the `@asyncio.coroutine()` decorator for legacy generator-based coroutines, which was deprecated since Python 3.8. The section also notes the removal of `asyncio.coroutines.CoroWrapper` and references a separate list for removed C APIs.
---

## Removed[Â¶](https://docs.python.org/3/whatsnew/3.11.html#removed "Link to this heading")
This section lists Python APIs that have been removed in Python 3.11.
Removed C APIs are [listed separately](https://docs.python.org/3/whatsnew/3.11.html#whatsnew311-c-api-removed).
  * Removed the `@asyncio.coroutine()` [decorator](https://docs.python.org/3/glossary.html#term-decorator) enabling legacy generator-based coroutines to be compatible with [`async`](https://docs.python.org/3/reference/compound_stmts.html#async) / [`await`](https://docs.python.org/3/reference/expressions.html#await) code. The function has been deprecated since Python 3.8 and the removal was initially scheduled for Python 3.10. Use [`async def`](https://docs.python.org/3/reference/compound_stmts.html#async-def) instead. (Contributed by Illia Volochii in [bpo-43216](https://bugs.python.org/issue?@action=redirect&bpo=43216).)
  * Removed `asyncio.coroutines.CoroWrapper` used for wrapping legacy generator-based coroutine objects in the debug mode. (Contributed by Illia Volochii in [bpo-43216](https://bugs.python.org/issue?@action=redirect&bpo=43216).)
  * Due to significant security concerns, the _reuse_address_ parameter of [`asyncio.loop.create_datagram_endpoint()`](https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.loop.create_datagram_endpoint "asyncio.loop.create_datagram_endpoint"), disabled in Python 3.9, is now entirely removed. This is because of the behavior of the socket option `SO_REUSEADDR` in UDP. (Contributed by Hugo van Kemenade in [bpo-45129](https://bugs.python.org/issue?@action=redirect&bpo=45129).)
  * Removed the `binhex` module, deprecated in Python 3.9. Also removed the related, similarly-deprecated [`binascii`](https://docs.python.org/3/library/binascii.html#module-binascii "binascii: Tools for converting between binary and various ASCII-encoded binary representations.") functions:
    * `binascii.a2b_hqx()`
    * `binascii.b2a_hqx()`
    * `binascii.rlecode_hqx()`
    * `binascii.rldecode_hqx()`
The [`binascii.crc_hqx()`](https://docs.python.org/3/library/binascii.html#binascii.crc_hqx "binascii.crc_hqx") function remains available.
(Contributed by Victor Stinner in [bpo-45085](https://bugs.python.org/issue?@action=redirect&bpo=45085).)
  * Removed the `distutils` `bdist_msi` command deprecated in Python 3.9. Use `bdist_wheel` (wheel packages) instead. (Contributed by Hugo van Kemenade in [bpo-45124](https://bugs.python.org/issue?@action=redirect&bpo=45124).)
  * Removed the [`__getitem__()`](https://docs.python.org/3/reference/datamodel.html#object.__getitem__ "object.__getitem__") methods of [`xml.dom.pulldom.DOMEventStream`](https://docs.python.org/3/library/xml.dom.pulldom.html#xml.dom.pulldom.DOMEventStream "xml.dom.pulldom.DOMEventStream"), [`wsgiref.util.FileWrapper`](https://docs.python.org/3/library/wsgiref.html#wsgiref.util.FileWrapper "wsgiref.util.FileWrapper") and [`fileinput.FileInput`](https://docs.python.org/3/library/fileinput.html#fileinput.FileInput "fileinput.FileInput"), deprecated since Python 3.9. (Contributed by Hugo van Kemenade in [bpo-45132](https://bugs.python.org/issue?@action=redirect&bpo=45132).)
  * Removed the deprecated [`gettext`](https://docs.python.org/3/library/gettext.html#module-gettext "gettext: Multilingual internationalization services.") functions `lgettext()`, `ldgettext()`, `lngettext()` and `ldngettext()`. Also removed the `bind_textdomain_codeset()` function, the `NullTranslations.output_charset()` and `NullTranslations.set_output_charset()` methods, and the _codeset_ parameter of `translation()` and `install()`, since they are only used for the `l*gettext()` functions. (Contributed by Donghee Na and Serhiy Storchaka in [bpo-44235](https://bugs.python.org/issue?@action=redirect&bpo=44235).)
  * Removed from the [`inspect`](https://docs.python.org/3/library/inspect.html#module-inspect "inspect: Extract information and source code from live objects.") module:
    * The `getargspec()` function, deprecated since Python 3.0; use [`inspect.signature()`](https://docs.python.org/3/library/inspect.html#inspect.signature "inspect.signature") or [`inspect.getfullargspec()`](https://docs.python.org/3/library/inspect.html#inspect.getfullargspec "inspect.getfullargspec") instead.
    * The `formatargspec()` function, deprecated since Python 3.5; use the [`inspect.signature()`](https://docs.python.org/3/library/inspect.html#inspect.signature "inspect.signature") function or the [`inspect.Signature`](https://docs.python.org/3/library/inspect.html#inspect.Signature "inspect.Signature") object directly.
    * The undocumented `Signature.from_builtin()` and `Signature.from_function()` methods, deprecated since Python 3.5; use the [`Signature.from_callable()`](https://docs.python.org/3/library/inspect.html#inspect.Signature.from_callable "inspect.Signature.from_callable") method instead.
(Contributed by Hugo van Kemenade in [bpo-45320](https://bugs.python.org/issue?@action=red