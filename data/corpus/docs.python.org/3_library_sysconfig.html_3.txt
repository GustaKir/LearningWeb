Title: Installation Path Functions in sysconfig
URL: https://docs.python.org/3/library/sysconfig.html
Summary: The `sysconfig` module provides functions to retrieve installation path information in Python. Key functions include `get_scheme_names()` for listing supported schemes and `get_default_scheme()` which returns the default scheme for the current platform, introduced in Python 3.10.
---

ude`  
_platinclude_ | `_prefix_\Include`  
_scripts_ | `_prefix_\Scripts`  
_data_ | `_prefix_`  
## Installation path functions[¶](https://docs.python.org/3/library/sysconfig.html#installation-path-functions "Link to this heading")
[`sysconfig`](https://docs.python.org/3/library/sysconfig.html#module-sysconfig "sysconfig: Python's configuration information") provides some functions to determine these installation paths. 

sysconfig.get_scheme_names()[¶](https://docs.python.org/3/library/sysconfig.html#sysconfig.get_scheme_names "Link to this definition")
    
Return a tuple containing all schemes currently supported in [`sysconfig`](https://docs.python.org/3/library/sysconfig.html#module-sysconfig "sysconfig: Python's configuration information"). 

sysconfig.get_default_scheme()[¶](https://docs.python.org/3/library/sysconfig.html#sysconfig.get_default_scheme "Link to this definition")
    
Return the default scheme name for the current platform.
Added in version 3.10: This function was previously named `_get_default_scheme()` and considered an implementation detail.
Changed in version 3.11: When Python runs from a virtual environment, the _venv_ scheme is returned. 

sysconfig.get_preferred_scheme(_key_)[¶](https://docs.python.org/3/library/sysconfig.html#sysconfig.get_preferred_scheme "Link to this definition")
    
Return a preferred scheme name for an installation layout specified by _key_.
_key_ must be either `"prefix"`, `"home"`, or `"user"`.
The return value is a scheme name listed in [`get_scheme_names()`](https://docs.python.org/3/library/sysconfig.html#sysconfig.get_scheme_names "sysconfig.get_scheme_names"). It can be passed to [`sysconfig`](https://docs.python.org/3/library/sysconfig.html#module-sysconfig "sysconfig: Python's configuration information") functions that take a _scheme_ argument, such as [`get_paths()`](https://docs.python.org/3/library/sysconfig.html#sysconfig.get_paths "sysconfig.get_paths").
Added in version 3.10.
Changed in version 3.11: When Python runs from a virtual environment and `key="prefix"`, the _venv_ scheme is returned. 

sysconfig._get_preferred_schemes()[¶](https://docs.python.org/3/library/sysconfig.html#sysconfig._get_preferred_schemes "Link to this definition")
    
Return a dict containing preferred scheme names on the current platform. Python implementers and redistributors may add their preferred schemes to the `_INSTALL_SCHEMES` module-level global value, and modify this function to return those scheme names, to e.g. provide different schemes for system and language package managers to use, so packages installed by either do not mix with those by the other.
End users should not use this function, but [`get_default_scheme()`](https://docs.python.org/3/library/sysconfig.html#sysconfig.get_default_scheme "sysconfig.get_default_scheme") and [`get_preferred_scheme()`](https://docs.python.org/3/library/sysconfig.html#sysconfig.get_preferred_scheme "sysconfig.get_preferred_scheme") instead.
Added in version 3.10. 

sysconfig.get_path_names()[¶](https://docs.python.org/3/library/sysconfig.html#sysconfig.get_path_names "Link to this definition")
    
Return a tuple containing all path names currently supported in [`sysconfig`](https://docs.python.org/3/library/sysconfig.html#module-sysconfig "sysconfig: Python's configuration information").