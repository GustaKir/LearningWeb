Title: Pretty Print Module Functions: isrecursive and saferepr
URL: https://docs.python.org/3/library/pprint.html
Summary: This section describes two functions from the pprint module: `isrecursive`, which checks if an object requires a recursive representation and may raise a RecursionError, and `saferepr`, which provides a string representation of an object while preventing recursion issues in common data structures like dicts, lists, and tuples.
---

```


pprint.isrecursive(_object_)[¶](https://docs.python.org/3/library/pprint.html#pprint.isrecursive "Link to this definition")
    
Determine if _object_ requires a recursive representation. This function is subject to the same limitations as noted in [`saferepr()`](https://docs.python.org/3/library/pprint.html#pprint.saferepr "pprint.saferepr") below and may raise an [`RecursionError`](https://docs.python.org/3/library/exceptions.html#RecursionError "RecursionError") if it fails to detect a recursive object. 

pprint.saferepr(_object_)[¶](https://docs.python.org/3/library/pprint.html#pprint.saferepr "Link to this definition")
    
Return a string representation of _object_ , protected against recursion in some common data structures, namely instances of [`dict`](https://docs.python.org/3/library/stdtypes.html#dict "dict"), [`list`](https://docs.python.org/3/library/stdtypes.html#list "list") and [`tuple`](https://docs.python.org/3/library/stdtypes.html#tuple "tuple") or subclasses whose `__repr__` has not been overridden. If the representation of object exposes a recursive entry, the recursive reference will be represented as `<Recursion on typename with id=number>`. The representation is not otherwise formatted.
>>>```
>>> pprint.saferepr(stuff)
"[<Recursion on list with id=...>, 'spam', 'eggs', 'lumberjack', 'knights', 'ni']"

```

## PrettyPrinter Objects[¶](https://docs.python.org/3/library/pprint.html#prettyprinter-objects "Link to this heading") 

_class_ pprint.PrettyPrinter(_indent =1_, _width =80_, _depth =None_, _stream =None_, _*_ , _compact =False_, _sort_dicts =True_, _underscore_numbers =False_)[¶](https://docs.python.org/3/library/pprint.html#pprint.PrettyPrinter "Link to this definition")
    
Construct a [`PrettyPrinter`](https://docs.python.org/3/library/pprint.html#pprint.PrettyPrinter "pprint.PrettyPrinter") instance.
Arguments have the same meaning as for [`pp()`](https://docs.python.org/3/library/pprint.html#pprint.pp "pprint.pp"). Note that they are in a different order, and that _sort_dicts_ defaults to `True`.
>>>```
>>> importpprint
>>> stuff = ['spam', 'eggs', 'lumberjack', 'knights', 'ni']
>>> stuff.insert(0, stuff[:])
>>> pp = pprint.PrettyPrinter(indent=4)
>>> pp.pprint(stuff)
[  ['spam', 'eggs', 'lumberjack', 'knights', 'ni'],
  'spam',
  'eggs',
  'lumberjack',
  'knights',
  'ni']
>>> pp = pprint.PrettyPrinter(width=41, compact=True)
>>> pp.pprint(stuff)
[['spam', 'eggs', 'lumberjack',
 'knights', 'ni'],
 'spam', 'eggs', 'lumberjack', 'knights',
 'ni']
>>> tup = ('spam', ('eggs', ('lumberjack', ('knights', ('ni', ('dead',
... ('parrot', ('fresh fruit',))))))))
>>> pp = pprint.PrettyPrinter(depth=6)
>>> pp.pprint(tup)
('spam', ('eggs', ('lumberjack', ('knights', ('ni', ('dead', (...)))))))