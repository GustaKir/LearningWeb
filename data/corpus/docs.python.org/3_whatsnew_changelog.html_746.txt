Title: Python 3.5.0 Alpha 1 Release Notes
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section details the key updates and bug fixes in the Python 3.5.0 alpha 1 release, including improvements in core functionalities and built-in modules, such as handling EINTR, fixes for custom MRO implementations, and adjustments to AST line numbers.
---

## Python 3.5.0 alpha 1[¶](https://docs.python.org/3/whatsnew/changelog.html#python-3-5-0-alpha-1 "Link to this heading")
_Release date: 2015-02-08_
### Core and Builtins[¶](https://docs.python.org/3/whatsnew/changelog.html#id791 "Link to this heading")
  * [bpo-23285](https://bugs.python.org/issue?@action=redirect&bpo=23285): PEP 475 - EINTR handling.
  * [bpo-22735](https://bugs.python.org/issue?@action=redirect&bpo=22735): Fix many edge cases (including crashes) involving custom mro() implementations.
  * [bpo-22896](https://bugs.python.org/issue?@action=redirect&bpo=22896): Avoid using PyObject_AsCharBuffer(), PyObject_AsReadBuffer() and PyObject_AsWriteBuffer().
  * [bpo-21295](https://bugs.python.org/issue?@action=redirect&bpo=21295): Revert some changes ([bpo-16795](https://bugs.python.org/issue?@action=redirect&bpo=16795)) to AST line numbers and column offsets that constituted a regression.
  * [bpo-22986](https://bugs.python.org/issue?@action=redirect&bpo=22986): Allow changing an object’s __class__ between a dynamic type and static type in some cases.
  * [bpo-15859](https://bugs.python.org/issue?@action=redirect&bpo=15859): PyUnicode_EncodeFSDefault(), PyUnicode_EncodeMBCS() and PyUnicode_EncodeCodePage() now raise an exception if the object is not a Unicode object. For PyUnicode_EncodeFSDefault(), it was already the case on platforms other than Windows. Patch written by Campbell Barton.
  * [bpo-21408](https://bugs.python.org/issue?@action=redirect&bpo=21408): The default __ne__() now returns NotImplemented if __eq__() returned NotImplemented. Original patch by Martin Panter.
  * [bpo-23321](https://bugs.python.org/issue?@action=redirect&bpo=23321): Fixed a crash in str.decode() when error handler returned replacement string longer than malformed input data.
  * [bpo-22286](https://bugs.python.org/issue?@action=redirect&bpo=22286): The “backslashreplace” error handlers now works with decoding and translating.
  * [bpo-23253](https://bugs.python.org/issue?@action=redirect&bpo=23253): Delay-load ShellExecute[AW] in os.startfile for reduced startup overhead on Windows.
  * [bpo-22038](https://bugs.python.org/issue?@action=redirect&bpo=22038): pyatomic.h now uses stdatomic.h or GCC built-in functions for atomic memory access if available. Patch written by Vitor de Lima and Gustavo Temple.
  * [bpo-20284](https://bugs.python.org/issue?@action=redirect&bpo=20284): %-interpolation (aka printf) formatting added for bytes and bytearray.
  * [bpo-23048](https://bugs.python.org/issue?@action=redirect&bpo=23048): Fix jumping out of an infinite while loop in the pdb.
  * [bpo-20335](https://bugs.python.org/issue?@action=redirect&bpo=20335): bytes constructor now raises TypeError when encoding or errors is specified with non-string argument. Based on patch by Renaud Blanch.
  * [bpo-22834](https://bugs.python.org/issue?@action=redirect&bpo=22834): If the current working directory ends up being set to a non-existent directory then import will no longer raise FileNotFoundError.
  * [bpo-22869](https://bugs.python.org/issue?@action=redirect&bpo=22869): Move the interpreter startup & shutdown code to a new dedicated pylifecycle.c module
  * [bpo-22847](https://bugs.python.org/issue?@action=redirect&bpo=22847): Improve method cache efficiency.
  * [bpo-22335](https://bugs.python.org/issue?@action=redirect&bpo=22335): Fix crash when trying to enlarge a bytearray to 0x7fffffff bytes on a 32-bit platform.
  * [bpo-22653](https://bugs.python.org/issue?@action=redirect&bpo=22653): Fix an assertion failure in debug mode when doing a reentrant dict insertion in debug mode.
  * [bpo-22643](https://bugs.python.org/issue?@action=redirect&bpo=22643): Fix integer overflow in Unicode case operations (upper, lower, title, swapcase, casefold).
  * [bpo-17636](https://bugs.python.org/issue?@action=redirect&bpo=17636): Circular imports involving relative imports are now supported.
  * [bpo-22604](https://bugs.python.org/issue?@action=redirect&bpo=22604): Fix assertion error in debug mode when dividing a complex number by (nan+0j).
  * [bpo-21052](https://bugs.python.org/issue?@action=redirect&bpo=21052): Do not raise ImportWarning when sys.path_hooks or sys.meta_path are set to None.
  * [bpo-16518](https://bugs.python.org/issue?@action=redirect&bpo=16518): Use ‘bytes-like object required’ in error messages that previously used the far more cryptic “‘x’ does not support the buffer protocol.
  * [bpo-22470](https://bugs.python.org/issue?@action=redirect&bpo=22470): Fixed integer overflow issues in “backslashreplace”, “xmlcharrefreplace”, and “surrogatepass” error handlers.
  * [bpo-22540](https://bugs.python.org/issue?@action=redirect&bpo=22540): speed up `PyObject_IsInstance` and `PyObject_IsSubclass` in the common case that the second argument has metaclass `type`.
  * [bpo-18711](https://bugs.python.org/issue?@action=redirect&bpo=18711): Add a new `PyErr_FormatV` function, similar to `PyErr_Format` but accepting a `va_list` a