Title: Python 2.7 Release Notes
URL: https://docs.python.org/3/whatsnew/2.7.html
Summary: Python 2.7 introduces the `WeakSet` class for weak references and updates to the `xml.etree.ElementTree` library to prevent escaping of certain characters in XML processing instructions and comments.
---

```

  * New class: the [`WeakSet`](https://docs.python.org/3/library/weakref.html#weakref.WeakSet "weakref.WeakSet") class in the [`weakref`](https://docs.python.org/3/library/weakref.html#module-weakref "weakref: Support for weak references and weak dictionaries.") module is a set that only holds weak references to its elements; elements will be removed once there are no references pointing to them. (Originally implemented in Python 3.x by Raymond Hettinger, and backported to 2.7 by Michael Foord.)
  * The [`xml.etree.ElementTree`](https://docs.python.org/3/library/xml.etree.elementtree.html#module-xml.etree.ElementTree "xml.etree.ElementTree: Implementation of the ElementTree API.") library, no longer escapes ampersands and angle brackets when outputting an XML processing instruction (which looks like `<?xml-stylesheet href="#style1"?>`) or comment (which looks like `<!-- comment -->`). (Patch by Neil Muller; [bpo-2746](https://bugs.python.org/issue?@action=redirect&bpo=2746).)
  * The XML-RPC client and server, provided by the [`xmlrpclib`](https://docs.python.org/3/library/xmlrpc.client.html#module-xmlrpc.client "xmlrpc.client: XML-RPC client access.") and [`SimpleXMLRPCServer`](https://docs.python.org/3/library/xmlrpc.server.html#module-xmlrpc.server "xmlrpc.server: Basic XML-RPC server implementations.") modules, have improved performance by supporting HTTP/1.1 keep-alive and by optionally using gzip encoding to compress the XML being exchanged. The gzip compression is controlled by the `encode_threshold` attribute of [`SimpleXMLRPCRequestHandler`](https://docs.python.org/3/library/xmlrpc.server.html#xmlrpc.server.SimpleXMLRPCRequestHandler "xmlrpc.server.SimpleXMLRPCRequestHandler"), which contains a size in bytes; responses larger than this will be compressed. (Contributed by Kristján Valur Jónsson; [bpo-6267](https://bugs.python.org/issue?@action=redirect&bpo=6267).)
  * The [`zipfile`](https://docs.python.org/3/library/zipfile.html#module-zipfile "zipfile: Read and write ZIP-format archive files.") module’s [`ZipFile`](https://docs.python.org/3/library/zipfile.html#zipfile.ZipFile "zipfile.ZipFile") now supports the context management protocol, so you can write `with zipfile.ZipFile(...) as f:`. (Contributed by Brian Curtin; [bpo-5511](https://bugs.python.org/issue?@action=redirect&bpo=5511).)
[`zipfile`](https://docs.python.org/3/library/zipfile.html#module-zipfile "zipfile: Read and write ZIP-format archive files.") now also supports archiving empty directories and extracts them correctly. (Fixed by Kuba Wieczorek; [bpo-4710](https://bugs.python.org/issue?@action=redirect&bpo=4710).) Reading files out of an archive is faster, and interleaving [`read()`](https://docs.python.org/3/library/io.html#io.BufferedIOBase.read "io.BufferedIOBase.read") and [`readline()`](https://docs.python.org/3/library/io.html#io.IOBase.readline "io.IOBase.readline") now works correctly. (Contributed by Nir Aides; [bpo-7610](https://bugs.python.org/issue?@action=redirect&bpo=7610).)
The [`is_zipfile()`](https://docs.python.org/3/library/zipfile.html#zipfile.is_zipfile "zipfile.is_zipfile") function now accepts a file object, in addition to the path names accepted in earlier versions. (Contributed by Gabriel Genellina; [bpo-4756](https://bugs.python.org/issue?@action=redirect&bpo=4756).)
The [`writestr()`](https://docs.python.org/3/library/zipfile.html#zipfile.ZipFile.writestr "zipfile.ZipFile.writestr") method now has an optional _compress_type_ parameter that lets you override the default compression method specified in the [`ZipFile`](https://docs.python.org/3/library/zipfile.html#zipfile.ZipFile "zipfile.ZipFile") constructor. (Contributed by Ronald Oussoren; [bpo-6003](https://bugs.python.org/issue?@action=redirect&bpo=6003).)