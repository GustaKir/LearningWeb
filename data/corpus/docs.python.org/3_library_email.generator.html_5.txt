Title: Email Generator Methods in Python
URL: https://docs.python.org/3/library/email.generator.html
Summary: This section discusses two methods of the `Generator` class in Python's email library: `clone`, which creates an independent clone of the current instance with the same options, and `write`, which allows writing to a specified file-like object using a simple API.
---

clone(_fp_)[¶](https://docs.python.org/3/library/email.generator.html#email.generator.Generator.clone "Link to this definition")
    
Return an independent clone of this [`Generator`](https://docs.python.org/3/library/email.generator.html#email.generator.Generator "email.generator.Generator") instance with the exact same options, and _fp_ as the new _outfp_. 

write(_s_)[¶](https://docs.python.org/3/library/email.generator.html#email.generator.Generator.write "Link to this definition")
    
Write _s_ to the _write_ method of the _outfp_ passed to the [`Generator`](https://docs.python.org/3/library/email.generator.html#email.generator.Generator "email.generator.Generator")’s constructor. This provides just enough file-like API for [`Generator`](https://docs.python.org/3/library/email.generator.html#email.generator.Generator "email.generator.Generator") instances to be used in the [`print()`](https://docs.python.org/3/library/functions.html#print "print") function.
As a convenience, [`EmailMessage`](https://docs.python.org/3/library/email.message.html#email.message.EmailMessage "email.message.EmailMessage") provides the methods [`as_string()`](https://docs.python.org/3/library/email.message.html#email.message.EmailMessage.as_string "email.message.EmailMessage.as_string") and `str(aMessage)` (a.k.a. [`__str__()`](https://docs.python.org/3/library/email.message.html#email.message.EmailMessage.__str__ "email.message.EmailMessage.__str__")), which simplify the generation of a formatted string representation of a message object. For more detail, see [`email.message`](https://docs.python.org/3/library/email.message.html#module-email.message "email.message: The base class representing email messages.").
The [`email.generator`](https://docs.python.org/3/library/email.generator.html#module-email.generator "email.generator: Generate flat text email messages from a message structure.") module also provides a derived class, [`DecodedGenerator`](https://docs.python.org/3/library/email.generator.html#email.generator.DecodedGenerator "email.generator.DecodedGenerator"), which is like the [`Generator`](https://docs.python.org/3/library/email.generator.html#email.generator.Generator "email.generator.Generator") base class, except that non-_text_ parts are not serialized, but are instead represented in the output stream by a string derived from a template filled in with information about the part. 

_class_ email.generator.DecodedGenerator(_outfp_ , _mangle_from_ =None_, _maxheaderlen =None_, _fmt =None_, _*_ , _policy =None_)[¶](https://docs.python.org/3/library/email.generator.html#email.generator.DecodedGenerator "Link to this definition")
    
Act like [`Generator`](https://docs.python.org/3/library/email.generator.html#email.generator.Generator "email.generator.Generator"), except that for any subpart of the message passed to [`Generator.flatten()`](https://docs.python.org/3/library/email.generator.html#email.generator.Generator.flatten "email.generator.Generator.flatten"), if the subpart is of main type _text_ , print the decoded payload of the subpart, and if the main type is not _text_ , instead of printing it fill in the string _fmt_ using information from the part and print the resulting filled-in string.
To fill in _fmt_ , execute `fmt % part_info`, where `part_info` is a dictionary composed of the following keys and values:
  * `type` – Full MIME type of the non-_text_ part
  * `maintype` – Main MIME type of the non-_text_ part
  * `subtype` – Sub-MIME type of the non-_text_ part
  * `filename` – Filename of the non-_text_ part
  * `description` – Description associated with the non-_text_ part
  * `encoding` – Content transfer encoding of the non-_text_ part