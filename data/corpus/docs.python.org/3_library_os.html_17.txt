Title: Pipe Creation in Python's os Module
URL: https://docs.python.org/3/library/os.html
Summary: The `os.pipe()` function creates a pipe and returns a pair of non-inheritable file descriptors for reading and writing. The `os.pipe2()` function creates a pipe with specified flags set atomically, allowing for additional configurations like non-blocking and close-on-exec options.
---

os.pipe()[¶](https://docs.python.org/3/library/os.html#os.pipe "Link to this definition")
    
Create a pipe. Return a pair of file descriptors `(r, w)` usable for reading and writing, respectively. The new file descriptor is [non-inheritable](https://docs.python.org/3/library/os.html#fd-inheritance).
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix, Windows.
Changed in version 3.4: The new file descriptors are now non-inheritable. 

os.pipe2(_flags_ , _/_)[¶](https://docs.python.org/3/library/os.html#os.pipe2 "Link to this definition")
    
Create a pipe with _flags_ set atomically. _flags_ can be constructed by ORing together one or more of these values: [`O_NONBLOCK`](https://docs.python.org/3/library/os.html#os.O_NONBLOCK "os.O_NONBLOCK"), [`O_CLOEXEC`](https://docs.python.org/3/library/os.html#os.O_CLOEXEC "os.O_CLOEXEC"). Return a pair of file descriptors `(r, w)` usable for reading and writing, respectively.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix, not WASI.
Added in version 3.3. 

os.posix_fallocate(_fd_ , _offset_ , _len_ , _/_)[¶](https://docs.python.org/3/library/os.html#os.posix_fallocate "Link to this definition")
    
Ensures that enough disk space is allocated for the file specified by _fd_ starting from _offset_ and continuing for _len_ bytes.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix.
Added in version 3.3. 

os.posix_fadvise(_fd_ , _offset_ , _len_ , _advice_ , _/_)[¶](https://docs.python.org/3/library/os.html#os.posix_fadvise "Link to this definition")
    
Announces an intention to access data in a specific pattern thus allowing the kernel to make optimizations. The advice applies to the region of the file specified by _fd_ starting at _offset_ and continuing for _len_ bytes. _advice_ is one of [`POSIX_FADV_NORMAL`](https://docs.python.org/3/library/os.html#os.POSIX_FADV_NORMAL "os.POSIX_FADV_NORMAL"), [`POSIX_FADV_SEQUENTIAL`](https://docs.python.org/3/library/os.html#os.POSIX_FADV_SEQUENTIAL "os.POSIX_FADV_SEQUENTIAL"), [`POSIX_FADV_RANDOM`](https://docs.python.org/3/library/os.html#os.POSIX_FADV_RANDOM "os.POSIX_FADV_RANDOM"), [`POSIX_FADV_NOREUSE`](https://docs.python.org/3/library/os.html#os.POSIX_FADV_NOREUSE "os.POSIX_FADV_NOREUSE"), [`POSIX_FADV_WILLNEED`](https://docs.python.org/3/library/os.html#os.POSIX_FADV_WILLNEED "os.POSIX_FADV_WILLNEED") or [`POSIX_FADV_DONTNEED`](https://docs.python.org/3/library/os.html#os.POSIX_FADV_DONTNEED "os.POSIX_FADV_DONTNEED").
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix.
Added in version 3.3. 

os.POSIX_FADV_NORMAL[¶](https://docs.python.org/3/library/os.html#os.POSIX_FADV_NORMAL "Link to this definition")


os.POSIX_FADV_SEQUENTIAL[¶](https://docs.python.org/3/library/os.html#os.POSIX_FADV_SEQUENTIAL "Link to this definition")


os.POSIX_FADV_RANDOM[¶](https://docs.python.org/3/library/os.html#os.POSIX_FADV_RANDOM "Link to this definition")


os.POSIX_FADV_NOREUSE[¶](https://docs.python.org/3/library/os.html#os.POSIX_FADV_NOREUSE "Link to this definition")


os.POSIX_FADV_WILLNEED[¶](https://docs.python.org/3/library/os.html#os.POSIX_FADV_WILLNEED "Link to this definition")


os.POSIX_FADV_DONTNEED[¶](https://docs.python.org/3/library/os.html#os.POSIX_FADV_DONTNEED "Link to this definition")
    
Flags that can be used in _advice_ in [`posix_fadvise()`](https://docs.python.org/3/library/os.html#os.posix_fadvise "os.posix_fadvise") that specify the access pattern that is likely to be used.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix.
Added in version 3.3. 

os.pread(_fd_ , _n_ , _offset_ , _/_)[¶](https://docs.python.org/3/library/os.html#os.pread "Link to this definition")
    
Read at most _n_ bytes from file descriptor _fd_ at a position of _offset_ , leaving the file offset unchanged.
Return a bytestring containing the bytes read. If the end of the file referred to by _fd_ has been reached, an empty bytes object is returned.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix.
Added in version 3.3. 

os.posix_openpt(_oflag_ , _/_)[¶](https://docs.python.org/3/library/os.html#os.posix_openpt "Link to this definition")
    
Open and return a file descriptor for a master pseudo-terminal device.
Calls the C standard library function `posix_openpt()`. The _oflag_ argument is used to set file status flags and file access modes as specified in the manual page of `posix_openpt()` of your system.
The returned file descriptor is [non-inheritable](https://docs.python.org/3/library/os.html#fd-inheritance). If the value [`O_CLOEXEC`](https://docs.python.org/3/library/os.html#os.O_CLOEXEC "os.O_CLOEXEC") is available on the system, it is added to _oflag_.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix, not WASI.
Added in version 3.13.