Title: Python 3.5 Release Notes
URL: https://docs.python.org/3/whatsnew/3.5.html
Summary: Python 3.5 introduces changes such as correct handling of generator expressions requiring parentheses, and updates to the API including PEP 475 that allows system calls to be retried upon interruption by a signal. Additionally, the `datetime.time` object's behavior regarding falsiness at midnight UTC has been modified for clarity.
---

```

Python 3.5 now correctly raises a [`SyntaxError`](https://docs.python.org/3/library/exceptions.html#SyntaxError "SyntaxError"), as generator expressions must be put in parentheses if not a sole argument to a function.


### Changes in the Python API[¶](https://docs.python.org/3/whatsnew/3.5.html#changes-in-the-python-api "Link to this heading")
  * [**PEP 475**](https://peps.python.org/pep-0475/): System calls are now retried when interrupted by a signal instead of raising [`InterruptedError`](https://docs.python.org/3/library/exceptions.html#InterruptedError "InterruptedError") if the Python signal handler does not raise an exception.
  * Before Python 3.5, a [`datetime.time`](https://docs.python.org/3/library/datetime.html#datetime.time "datetime.time") object was considered to be false if it represented midnight in UTC. This behavior was considered obscure and error-prone and has been removed in Python 3.5. See [bpo-13936](https://bugs.python.org/issue?@action=redirect&bpo=13936) for full details.
  * The `ssl.SSLSocket.send()` method now raises either [`ssl.SSLWantReadError`](https://docs.python.org/3/library/ssl.html#ssl.SSLWantReadError "ssl.SSLWantReadError") or [`ssl.SSLWantWriteError`](https://docs.python.org/3/library/ssl.html#ssl.SSLWantWriteError "ssl.SSLWantWriteError") on a non-blocking socket if the operation would block. Previously, it would return `0`. (Contributed by Nikolaus Rath in [bpo-20951](https://bugs.python.org/issue?@action=redirect&bpo=20951).)
  * The `__name__` attribute of generators is now set from the function name, instead of being set from the code name. Use `gen.gi_code.co_name` to retrieve the code name. Generators also have a new `__qualname__` attribute, the qualified name, which is now used for the representation of a generator (`repr(gen)`). (Contributed by Victor Stinner in [bpo-21205](https://bugs.python.org/issue?@action=redirect&bpo=21205).)
  * The deprecated “strict” mode and argument of [`HTMLParser`](https://docs.python.org/3/library/html.parser.html#html.parser.HTMLParser "html.parser.HTMLParser"), `HTMLParser.error()`, and the `HTMLParserError` exception have been removed. (Contributed by Ezio Melotti in [bpo-15114](https://bugs.python.org/issue?@action=redirect&bpo=15114).) The _convert_charrefs_ argument of [`HTMLParser`](https://docs.python.org/3/library/html.parser.html#html.parser.HTMLParser "html.parser.HTMLParser") is now `True` by default. (Contributed by Berker Peksag in [bpo-21047](https://bugs.python.org/issue?@action=redirect&bpo=21047).)
  * Although it is not formally part of the API, it is worth noting for porting purposes (ie: fixing tests) that error messages that were previously of the form “‘sometype’ does not support the buffer protocol” are now of the form “a [bytes-like object](https://docs.python.org/3/glossary.html#term-bytes-like-object) is required, not ‘sometype’”. (Contributed by Ezio Melotti in [bpo-16518](https://bugs.python.org/issue?@action=redirect&bpo=16518).)
  * If the current directory is set to a directory that no longer exists then [`FileNotFoundError`](https://docs.python.org/3/library/exceptions.html#FileNotFoundError "FileNotFoundError") will no longer be raised and instead [`find_spec()`](https://docs.python.org/3/library/importlib.html#importlib.machinery.FileFinder.find_spec "importlib.machinery.FileFinder.find_spec") will return `None` **without** caching `None` in [`sys.path_importer_cache`](https://docs.python.org/3/library/sys.html#sys.path_importer_cache "sys.path_importer_cache"), which is different than the typical case ([bpo-22834](https://bugs.python.org/issue?@action=redirect&bpo=22834)).
  * HTTP status code and messages from [`http.client`](https://docs.python.org/3/library/http.client.html#module-http.client "http.client: HTTP and HTTPS protocol client \(requires sockets\).") and [`http.server`](https://docs.python.org/3/library/http.server.html#module-http.server "http.server: HTTP server and request handlers.") were refactored into a common [`HTTPStatus`](https://docs.python.org/3/library/http.html#http.HTTPStatus "http.HTTPStatus") enum. The values in [`http.client`](https://docs.python.org/3/library/http.client.html#module-http.client "http.client: HTTP and HTTPS protocol client \(requires sockets\).") and [`http.server`](https://docs.python.org/3/library/http.server.html#module-http.server "http.server: HTTP server and request handlers.") remain available for backwards compatibility. (Contributed by Demian Brecht in [bpo-21793](https://bugs.python.org/issue?@action=redirect&bpo=21793).)
  * When an import loader defines `importlib.machinery.Loader.exec_module()` it is now expected to also define `create_module()` (raises a [`DeprecationWarning`](https://docs.python.org/3/library/exceptions.html#DeprecationWarning "DeprecationWarning") now, will be an error in Python 3.6). If the loader inherits from [`importlib.abc.Loader`](https://docs.python.org/3/library/importlib.html#importlib.abc.Load