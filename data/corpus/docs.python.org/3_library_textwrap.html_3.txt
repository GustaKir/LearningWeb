Title: TextWrapper Object Usage in Python's Textwrap Module
URL: https://docs.python.org/3/library/textwrap.html
Summary: The `TextWrapper` class in the textwrap module allows for multiple reuse and modification of instance attributes such as `width`, which sets the maximum line length for wrapped text. It ensures that output lines do not exceed the specified width given there are no individual words longer than this limit.
---

```

You can reuse the same [`TextWrapper`](https://docs.python.org/3/library/textwrap.html#textwrap.TextWrapper "textwrap.TextWrapper") object many times, and you can change any of its options through direct assignment to instance attributes between uses.
The [`TextWrapper`](https://docs.python.org/3/library/textwrap.html#textwrap.TextWrapper "textwrap.TextWrapper") instance attributes (and keyword arguments to the constructor) are as follows: 

width[¶](https://docs.python.org/3/library/textwrap.html#textwrap.TextWrapper.width "Link to this definition")
    
(default: `70`) The maximum length of wrapped lines. As long as there are no individual words in the input text longer than [`width`](https://docs.python.org/3/library/textwrap.html#textwrap.TextWrapper.width "textwrap.TextWrapper.width"), [`TextWrapper`](https://docs.python.org/3/library/textwrap.html#textwrap.TextWrapper "textwrap.TextWrapper") guarantees that no output line will be longer than [`width`](https://docs.python.org/3/library/textwrap.html#textwrap.TextWrapper.width "textwrap.TextWrapper.width") characters. 

expand_tabs[¶](https://docs.python.org/3/library/textwrap.html#textwrap.TextWrapper.expand_tabs "Link to this definition")
    
(default: `True`) If true, then all tab characters in _text_ will be expanded to spaces using the [`expandtabs()`](https://docs.python.org/3/library/stdtypes.html#str.expandtabs "str.expandtabs") method of _text_. 

tabsize[¶](https://docs.python.org/3/library/textwrap.html#textwrap.TextWrapper.tabsize "Link to this definition")
    
(default: `8`) If [`expand_tabs`](https://docs.python.org/3/library/textwrap.html#textwrap.TextWrapper.expand_tabs "textwrap.TextWrapper.expand_tabs") is true, then all tab characters in _text_ will be expanded to zero or more spaces, depending on the current column and the given tab size.
Added in version 3.3. 

replace_whitespace[¶](https://docs.python.org/3/library/textwrap.html#textwrap.TextWrapper.replace_whitespace "Link to this definition")
    
(default: `True`) If true, after tab expansion but before wrapping, the [`wrap()`](https://docs.python.org/3/library/textwrap.html#textwrap.wrap "textwrap.wrap") method will replace each whitespace character with a single space. The whitespace characters replaced are as follows: tab, newline, vertical tab, formfeed, and carriage return (`'\t\n\v\f\r'`).
Note
If [`expand_tabs`](https://docs.python.org/3/library/textwrap.html#textwrap.TextWrapper.expand_tabs "textwrap.TextWrapper.expand_tabs") is false and [`replace_whitespace`](https://docs.python.org/3/library/textwrap.html#textwrap.TextWrapper.replace_whitespace "textwrap.TextWrapper.replace_whitespace") is true, each tab character will be replaced by a single space, which is _not_ the same as tab expansion.
Note
If [`replace_whitespace`](https://docs.python.org/3/library/textwrap.html#textwrap.TextWrapper.replace_whitespace "textwrap.TextWrapper.replace_whitespace") is false, newlines may appear in the middle of a line and cause strange output. For this reason, text should be split into paragraphs (using [`str.splitlines()`](https://docs.python.org/3/library/stdtypes.html#str.splitlines "str.splitlines") or similar) which are wrapped separately. 

drop_whitespace[¶](https://docs.python.org/3/library/textwrap.html#textwrap.TextWrapper.drop_whitespace "Link to this definition")
    
(default: `True`) If true, whitespace at the beginning and ending of every line (after wrapping but before indenting) is dropped. Whitespace at the beginning of the paragraph, however, is not dropped if non-whitespace follows it. If whitespace being dropped takes up an entire line, the whole line is dropped. 

initial_indent[¶](https://docs.python.org/3/library/textwrap.html#textwrap.TextWrapper.initial_indent "Link to this definition")
    
(default: `''`) String that will be prepended to the first line of wrapped output. Counts towards the length of the first line. The empty string is not indented. 

subsequent_indent[¶](https://docs.python.org/3/library/textwrap.html#textwrap.TextWrapper.subsequent_indent "Link to this definition")
    
(default: `''`) String that will be prepended to all lines of wrapped output except the first. Counts towards the length of each line except the first.