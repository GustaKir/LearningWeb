Title: Python 3.5 What's New - unittest.mock and urllib Updates
URL: https://docs.python.org/3/whatsnew/3.5.html
Summary: The `MagicMock` class in unittest.mock now supports additional operators: `__truediv__()`, `__divmod__()`, and `__matmul__()`. Furthermore, the `patch()` function no longer requires `create=True` for patching built-in names. Additionally, a new component, `request.HTTPPasswordMgrWithPriorAuth`, has been introduced to the urllib module.
---

The [`MagicMock`](https://docs.python.org/3/library/unittest.mock.html#unittest.mock.MagicMock "unittest.mock.MagicMock") class now supports `__truediv__()`, `__divmod__()` and `__matmul__()` operators. (Contributed by Johannes Baiter in [bpo-20968](https://bugs.python.org/issue?@action=redirect&bpo=20968), and Håkan Lövdahl in [bpo-23581](https://bugs.python.org/issue?@action=redirect&bpo=23581) and [bpo-23568](https://bugs.python.org/issue?@action=redirect&bpo=23568).)
It is no longer necessary to explicitly pass `create=True` to the [`patch()`](https://docs.python.org/3/library/unittest.mock.html#unittest.mock.patch "unittest.mock.patch") function when patching builtin names. (Contributed by Kushal Das in [bpo-17660](https://bugs.python.org/issue?@action=redirect&bpo=17660).)
### urllib[¶](https://docs.python.org/3/whatsnew/3.5.html#urllib "Link to this heading")
A new [`request.HTTPPasswordMgrWithPriorAuth`](https://docs.python.org/3/library/urllib.request.html#urllib.request.HTTPPasswordMgrWithPriorAuth "urllib.request.HTTPPasswordMgrWithPriorAuth") class allows HTTP Basic Authentication credentials to be managed so as to eliminate unnecessary `401` response handling, or to unconditionally send credentials on the first request in order to communicate with servers that return a `404` response instead of a `401` if the `Authorization` header is not sent. (Contributed by Matej Cepl in [bpo-19494](https://bugs.python.org/issue?@action=redirect&bpo=19494) and Akshit Khurana in [bpo-7159](https://bugs.python.org/issue?@action=redirect&bpo=7159).)
A new _quote_via_ argument for the [`parse.urlencode()`](https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urlencode "urllib.parse.urlencode") function provides a way to control the encoding of query parts if needed. (Contributed by Samwyse and Arnon Yaari in [bpo-13866](https://bugs.python.org/issue?@action=redirect&bpo=13866).)
The [`request.urlopen()`](https://docs.python.org/3/library/urllib.request.html#urllib.request.urlopen "urllib.request.urlopen") function accepts an [`ssl.SSLContext`](https://docs.python.org/3/library/ssl.html#ssl.SSLContext "ssl.SSLContext") object as a _context_ argument, which will be used for the HTTPS connection. (Contributed by Alex Gaynor in [bpo-22366](https://bugs.python.org/issue?@action=redirect&bpo=22366).)
The [`parse.urljoin()`](https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urljoin "urllib.parse.urljoin") was updated to use the [**RFC 3986**](https://datatracker.ietf.org/doc/html/rfc3986.html) semantics for the resolution of relative URLs, rather than [**RFC 1808**](https://datatracker.ietf.org/doc/html/rfc1808.html) and [**RFC 2396**](https://datatracker.ietf.org/doc/html/rfc2396.html). (Contributed by Demian Brecht and Senthil Kumaran in [bpo-22118](https://bugs.python.org/issue?@action=redirect&bpo=22118).)
### wsgiref[¶](https://docs.python.org/3/whatsnew/3.5.html#wsgiref "Link to this heading")
The _headers_ argument of the [`headers.Headers`](https://docs.python.org/3/library/wsgiref.html#wsgiref.headers.Headers "wsgiref.headers.Headers") class constructor is now optional. (Contributed by Pablo Torres Navarrete and SilentGhost in [bpo-5800](https://bugs.python.org/issue?@action=redirect&bpo=5800).)
### xmlrpc[¶](https://docs.python.org/3/whatsnew/3.5.html#xmlrpc "Link to this heading")
The [`client.ServerProxy`](https://docs.python.org/3/library/xmlrpc.client.html#xmlrpc.client.ServerProxy "xmlrpc.client.ServerProxy") class now supports the [context manager](https://docs.python.org/3/glossary.html#term-context-manager) protocol. (Contributed by Claudiu Popa in [bpo-20627](https://bugs.python.org/issue?@action=redirect&bpo=20627).)
The [`client.ServerProxy`](https://docs.python.org/3/library/xmlrpc.client.html#xmlrpc.client.ServerProxy "xmlrpc.client.ServerProxy") constructor now accepts an optional [`ssl.SSLContext`](https://docs.python.org/3/library/ssl.html#ssl.SSLContext "ssl.SSLContext") instance. (Contributed by Alex Gaynor in [bpo-22960](https://bugs.python.org/issue?@action=redirect&bpo=22960).)
### xml.sax[¶](https://docs.python.org/3/whatsnew/3.5.html#xml-sax "Link to this heading")
SAX parsers now support a character stream of the [`xmlreader.InputSource`](https://docs.python.org/3/library/xml.sax.reader.html#xml.sax.xmlreader.InputSource "xml.sax.xmlreader.InputSource") object. (Contributed by Serhiy Storchaka in [bpo-2175](https://bugs.python.org/issue?@action=redirect&bpo=2175).)
[`parseString()`](https://docs.python.org/3/library/xml.sax.html#xml.sax.parseString "xml.sax.parseString") now accepts a [`str`](https://docs.python.org/3/library/stdtypes.html#str "str") instance. (Contributed by Serhiy Storchaka in [bpo-10590](https://bugs.python.org/issue?@action=redirect&bpo=10590).)
### zipfile[¶](https://docs.python.org/3/whatsnew/3.5.html#zipfile "Link to this heading")
ZIP output can now be written to unseekable streams. (Contributed by Serhiy Storchaka in [bpo-23252](ht