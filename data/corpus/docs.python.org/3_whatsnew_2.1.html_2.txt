Title: Python 2.1: Nested Scopes and Compatibility
URL: https://docs.python.org/3/whatsnew/2.1.html
Summary: This section discusses the syntax error associated with the `exec` statement in Python 2.1, highlighting that it creates a new local variable. It notes that nested scopes are not enabled by default but can be activated using a future statement as per PEP 236. It also mentions that from Python 2.2, nested scopes will be the default setting, giving users time to adapt before the change.
---

```

Line 4 containing the `exec` statement is a syntax error, since `exec` would define a new local variable named `x` whose value should be accessed by `g()`.
This shouldn’t be much of a limitation, since `exec` is rarely used in most Python code (and when it is used, it’s often a sign of a poor design anyway).
Compatibility concerns have led to nested scopes being introduced gradually; in Python 2.1, they aren’t enabled by default, but can be turned on within a module by using a future statement as described in [**PEP 236**](https://peps.python.org/pep-0236/). (See the following section for further discussion of [**PEP 236**](https://peps.python.org/pep-0236/).) In Python 2.2, nested scopes will become the default and there will be no way to turn them off, but users will have had all of 2.1’s lifetime to fix any breakage resulting from their introduction.
See also 

[**PEP 227**](https://peps.python.org/pep-0227/) - Statically Nested Scopes
    
Written and implemented by Jeremy Hylton.
## PEP 236: __future__ Directives[¶](https://docs.python.org/3/whatsnew/2.1.html#pep-236-future-directives "Link to this heading")
The reaction to nested scopes was widespread concern about the dangers of breaking code with the 2.1 release, and it was strong enough to make the Pythoneers take a more conservative approach. This approach consists of introducing a convention for enabling optional functionality in release N that will become compulsory in release N+1.
The syntax uses a `from...import` statement using the reserved module name [`__future__`](https://docs.python.org/3/library/__future__.html#module-__future__ "__future__: Future statement definitions"). Nested scopes can be enabled by the following statement:
```
from__future__import nested_scopes