Title: Real Valued Distributions in Python's Random Module
URL: https://docs.python.org/3/library/random.html
Summary: This section explains the use of real valued distributions in Python's random module. It illustrates the generation of random numbers using the FullRandom class and provides a conceptual overview of how numbers are chosen in the specified range. It also references a paper by Allen B. Downey on generating finer-grained floating-point values.
---

```

All [real valued distributions](https://docs.python.org/3/library/random.html#real-valued-distributions) in the class will use the new method:
>>>```
>>> fr = FullRandom()
>>> fr.random()
0.05954861408025609
>>> fr.expovariate(0.25)
8.87925541791544

```

The recipe is conceptually equivalent to an algorithm that chooses from all the multiples of 2⁻¹⁰⁷⁴ in the range _0.0 ≤ x < 1.0_. All such numbers are evenly spaced, but most have to be rounded down to the nearest representable Python float. (The value 2⁻¹⁰⁷⁴ is the smallest positive unnormalized float and is equal to `math.ulp(0.0)`.)
See also
[Generating Pseudo-random Floating-Point Values](https://allendowney.com/research/rand/downey07randfloat.pdf) a paper by Allen B. Downey describing ways to generate more fine-grained floats than normally generated by [`random()`](https://docs.python.org/3/library/random.html#random.random "random.random").
## Command-line usage[¶](https://docs.python.org/3/library/random.html#command-line-usage "Link to this heading")
Added in version 3.13.
The `random` module can be executed from the command line.
```
python-mrandom[-h][-cCHOICE[CHOICE...]|-iN|-fN][input...]

```

The following options are accepted: 

-h, --help[¶](https://docs.python.org/3/library/random.html#cmdoption-random-h "Link to this definition")
    
Show the help message and exit. 

-c CHOICE [CHOICE ...][¶](https://docs.python.org/3/library/random.html#cmdoption-random-c "Link to this definition")


--choice CHOICE [CHOICE ...][¶](https://docs.python.org/3/library/random.html#cmdoption-random-choice "Link to this definition")
    
Print a random choice, using [`choice()`](https://docs.python.org/3/library/random.html#random.choice "random.choice"). 

-i <N>[¶](https://docs.python.org/3/library/random.html#cmdoption-random-i "Link to this definition")


--integer <N>[¶](https://docs.python.org/3/library/random.html#cmdoption-random-integer "Link to this definition")
    
Print a random integer between 1 and N inclusive, using [`randint()`](https://docs.python.org/3/library/random.html#random.randint "random.randint"). 

-f <N>[¶](https://docs.python.org/3/library/random.html#cmdoption-random-f "Link to this definition")


--float <N>[¶](https://docs.python.org/3/library/random.html#cmdoption-random-float "Link to this definition")
    
Print a random floating-point number between 0 and N inclusive, using [`uniform()`](https://docs.python.org/3/library/random.html#random.uniform "random.uniform").
If no options are given, the output depends on the input:
  * String or multiple: same as [`--choice`](https://docs.python.org/3/library/random.html#cmdoption-random-choice).
  * Integer: same as [`--integer`](https://docs.python.org/3/library/random.html#cmdoption-random-integer).
  * Float: same as [`--float`](https://docs.python.org/3/library/random.html#cmdoption-random-float).


## Command-line example[¶](https://docs.python.org/3/library/random.html#command-line-example "Link to this heading")
Here are some examples of the `random` command-line interface:
```
$ # Choose one at random
$ python-mrandomeggbaconsausagespam"Lobster Thermidor aux crevettes with a Mornay sauce"
Lobster Thermidor aux crevettes with a Mornay sauce
$ # Random integer
$ python-mrandom6
6
$ # Random floating-point number
$ python-mrandom1.8
1.7080016272295635
$ # With explicit arguments
$ python-mrandom--choiceeggbaconsausagespam"Lobster Thermidor aux crevettes with a Mornay sauce"
egg
$ python-mrandom--integer6
3
$ python-mrandom--float1.8
1.5666339105010318
$ python-mrandom--integer6
5
$ python-mrandom--float6
3.1942323316565915