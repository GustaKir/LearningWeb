Title: Python 3.10 Release Notes
URL: https://docs.python.org/3/whatsnew/3.10.html
Summary: Python 3.10 introduces a new verify flag, `VERIFY_X509_PARTIAL_CHAIN`, and adds audit events for various functions in the sqlite3 module, including `connect/handle()`, `enable_load_extension()`, and `load_extension()`.
---

(Contributed by Christian Heimes in [bpo-42333](https://bugs.python.org/issue?@action=redirect&bpo=42333).)
A new verify flag [`VERIFY_X509_PARTIAL_CHAIN`](https://docs.python.org/3/library/ssl.html#ssl.VERIFY_X509_PARTIAL_CHAIN "ssl.VERIFY_X509_PARTIAL_CHAIN") has been added. (Contributed by l0x in [bpo-40849](https://bugs.python.org/issue?@action=redirect&bpo=40849).)
### sqlite3[¶](https://docs.python.org/3/whatsnew/3.10.html#sqlite3 "Link to this heading")
Add audit events for `connect/handle()`, [`enable_load_extension()`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.enable_load_extension "sqlite3.Connection.enable_load_extension"), and [`load_extension()`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.load_extension "sqlite3.Connection.load_extension"). (Contributed by Erlend E. Aasland in [bpo-43762](https://bugs.python.org/issue?@action=redirect&bpo=43762).)
### sys[¶](https://docs.python.org/3/whatsnew/3.10.html#sys "Link to this heading")
Add [`sys.orig_argv`](https://docs.python.org/3/library/sys.html#sys.orig_argv "sys.orig_argv") attribute: the list of the original command line arguments passed to the Python executable. (Contributed by Victor Stinner in [bpo-23427](https://bugs.python.org/issue?@action=redirect&bpo=23427).)
Add [`sys.stdlib_module_names`](https://docs.python.org/3/library/sys.html#sys.stdlib_module_names "sys.stdlib_module_names"), containing the list of the standard library module names. (Contributed by Victor Stinner in [bpo-42955](https://bugs.python.org/issue?@action=redirect&bpo=42955).)
### _thread[¶](https://docs.python.org/3/whatsnew/3.10.html#thread "Link to this heading")
[`_thread.interrupt_main()`](https://docs.python.org/3/library/_thread.html#thread.interrupt_main "_thread.interrupt_main") now takes an optional signal number to simulate (the default is still [`signal.SIGINT`](https://docs.python.org/3/library/signal.html#signal.SIGINT "signal.SIGINT")). (Contributed by Antoine Pitrou in [bpo-43356](https://bugs.python.org/issue?@action=redirect&bpo=43356).)
### threading[¶](https://docs.python.org/3/whatsnew/3.10.html#threading "Link to this heading")
Add [`threading.gettrace()`](https://docs.python.org/3/library/threading.html#threading.gettrace "threading.gettrace") and [`threading.getprofile()`](https://docs.python.org/3/library/threading.html#threading.getprofile "threading.getprofile") to retrieve the functions set by [`threading.settrace()`](https://docs.python.org/3/library/threading.html#threading.settrace "threading.settrace") and [`threading.setprofile()`](https://docs.python.org/3/library/threading.html#threading.setprofile "threading.setprofile") respectively. (Contributed by Mario Corchero in [bpo-42251](https://bugs.python.org/issue?@action=redirect&bpo=42251).)
Add [`threading.__excepthook__`](https://docs.python.org/3/library/threading.html#threading.__excepthook__ "threading.__excepthook__") to allow retrieving the original value of [`threading.excepthook()`](https://docs.python.org/3/library/threading.html#threading.excepthook "threading.excepthook") in case it is set to a broken or a different value. (Contributed by Mario Corchero in [bpo-42308](https://bugs.python.org/issue?@action=redirect&bpo=42308).)
### traceback[¶](https://docs.python.org/3/whatsnew/3.10.html#traceback "Link to this heading")
The [`format_exception()`](https://docs.python.org/3/library/traceback.html#traceback.format_exception "traceback.format_exception"), [`format_exception_only()`](https://docs.python.org/3/library/traceback.html#traceback.format_exception_only "traceback.format_exception_only"), and [`print_exception()`](https://docs.python.org/3/library/traceback.html#traceback.print_exception "traceback.print_exception") functions can now take an exception object as a positional-only argument. (Contributed by Zackery Spytz and Matthias Bussonnier in [bpo-26389](https://bugs.python.org/issue?@action=redirect&bpo=26389).)
### types[¶](https://docs.python.org/3/whatsnew/3.10.html#types "Link to this heading")
Reintroduce the [`types.EllipsisType`](https://docs.python.org/3/library/types.html#types.EllipsisType "types.EllipsisType"), [`types.NoneType`](https://docs.python.org/3/library/types.html#types.NoneType "types.NoneType") and [`types.NotImplementedType`](https://docs.python.org/3/library/types.html#types.NotImplementedType "types.NotImplementedType") classes, providing a new set of types readily interpretable by type checkers.