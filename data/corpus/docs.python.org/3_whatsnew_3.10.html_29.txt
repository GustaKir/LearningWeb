Title: C API Changes in Python 3.10
URL: https://docs.python.org/3/whatsnew/3.10.html
Summary: Python 3.10 introduces a defined Stable ABI for extension modules and embedding, detailed in PEP 652. Additionally, the result of PyNumber_Index() now consistently returns an exact 'int' type.
---

## C API Changes[¶](https://docs.python.org/3/whatsnew/3.10.html#c-api-changes "Link to this heading")
### PEP 652: Maintaining the Stable ABI[¶](https://docs.python.org/3/whatsnew/3.10.html#pep-652-maintaining-the-stable-abi "Link to this heading")
The Stable ABI (Application Binary Interface) for extension modules or embedding Python is now explicitly defined. [C API Stability](https://docs.python.org/3/c-api/stable.html#stable) describes C API and ABI stability guarantees along with best practices for using the Stable ABI.
(Contributed by Petr Viktorin in [**PEP 652**](https://peps.python.org/pep-0652/) and [bpo-43795](https://bugs.python.org/issue?@action=redirect&bpo=43795).)
### New Features[¶](https://docs.python.org/3/whatsnew/3.10.html#id1 "Link to this heading")
  * The result of [`PyNumber_Index()`](https://docs.python.org/3/c-api/number.html#c.PyNumber_Index "PyNumber_Index") now always has exact type [`int`](https://docs.python.org/3/library/functions.html#int "int"). Previously, the result could have been an instance of a subclass of `int`. (Contributed by Serhiy Storchaka in [bpo-40792](https://bugs.python.org/issue?@action=redirect&bpo=40792).)
  * Add a new [`orig_argv`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.orig_argv "PyConfig.orig_argv") member to the [`PyConfig`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig "PyConfig") structure: the list of the original command line arguments passed to the Python executable. (Contributed by Victor Stinner in [bpo-23427](https://bugs.python.org/issue?@action=redirect&bpo=23427).)
  * The [`PyDateTime_DATE_GET_TZINFO()`](https://docs.python.org/3/c-api/datetime.html#c.PyDateTime_DATE_GET_TZINFO "PyDateTime_DATE_GET_TZINFO") and [`PyDateTime_TIME_GET_TZINFO()`](https://docs.python.org/3/c-api/datetime.html#c.PyDateTime_TIME_GET_TZINFO "PyDateTime_TIME_GET_TZINFO") macros have been added for accessing the `tzinfo` attributes of [`datetime.datetime`](https://docs.python.org/3/library/datetime.html#datetime.datetime "datetime.datetime") and [`datetime.time`](https://docs.python.org/3/library/datetime.html#datetime.time "datetime.time") objects. (Contributed by Zackery Spytz in [bpo-30155](https://bugs.python.org/issue?@action=redirect&bpo=30155).)
  * Add a [`PyCodec_Unregister()`](https://docs.python.org/3/c-api/codec.html#c.PyCodec_Unregister "PyCodec_Unregister") function to unregister a codec search function. (Contributed by Hai Shi in [bpo-41842](https://bugs.python.org/issue?@action=redirect&bpo=41842).)
  * The [`PyIter_Send()`](https://docs.python.org/3/c-api/iter.html#c.PyIter_Send "PyIter_Send") function was added to allow sending value into iterator without raising `StopIteration` exception. (Contributed by Vladimir Matveev in [bpo-41756](https://bugs.python.org/issue?@action=redirect&bpo=41756).)
  * Add [`PyUnicode_AsUTF8AndSize()`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_AsUTF8AndSize "PyUnicode_AsUTF8AndSize") to the limited C API. (Contributed by Alex Gaynor in [bpo-41784](https://bugs.python.org/issue?@action=redirect&bpo=41784).)
  * Add [`PyModule_AddObjectRef()`](https://docs.python.org/3/c-api/module.html#c.PyModule_AddObjectRef "PyModule_AddObjectRef") function: similar to [`PyModule_AddObject()`](https://docs.python.org/3/c-api/module.html#c.PyModule_AddObject "PyModule_AddObject") but don’t steal a reference to the value on success. (Contributed by Victor Stinner in [bpo-1635741](https://bugs.python.org/issue?@action=redirect&bpo=1635741).)
  * Add [`Py_NewRef()`](https://docs.python.org/3/c-api/refcounting.html#c.Py_NewRef "Py_NewRef") and [`Py_XNewRef()`](https://docs.python.org/3/c-api/refcounting.html#c.Py_XNewRef "Py_XNewRef") functions to increment the reference count of an object and return the object. (Contributed by Victor Stinner in [bpo-42262](https://bugs.python.org/issue?@action=redirect&bpo=42262).)
  * The [`PyType_FromSpecWithBases()`](https://docs.python.org/3/c-api/type.html#c.PyType_FromSpecWithBases "PyType_FromSpecWithBases") and [`PyType_FromModuleAndSpec()`](https://docs.python.org/3/c-api/type.html#c.PyType_FromModuleAndSpec "PyType_FromModuleAndSpec") functions now accept a single class as the _bases_ argument. (Contributed by Serhiy Storchaka in [bpo-42423](https://bugs.python.org/issue?@action=redirect&bpo=42423).)
  * The [`PyType_FromModuleAndSpec()`](https://docs.python.org/3/c-api/type.html#c.PyType_FromModuleAndSpec "PyType_FromModuleAndSpec") function now accepts NULL `tp_doc` slot. (Contributed by Hai Shi in [bpo-41832](https://bugs.python.org/issue?@action=redirect&bpo=41832).)
  * The [`PyType_GetSlot()`](https://docs.python.org/3/c-api/type.html#c.PyType_GetSlot "PyType_GetSlot") function can accept [static types](https://docs.python.org/3/c-api/typeobj.html#static-types). (Contributed by Hai Shi and Petr Viktorin in [bpo-41073](https://bugs.python.org/issue?@action=redirect&bpo=41073).)
  * Add a new [`PySet_CheckExact()`](https://docs.python.