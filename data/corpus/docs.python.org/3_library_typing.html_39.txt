Title: Typing Module: Awaitable Class
URL: https://docs.python.org/3/library/typing.html
Summary: The `typing.Awaitable` is a deprecated alias for `collections.abc.Awaitable`, added in version 3.5.2 and deprecated since version 3.9 due to the latter supporting subscripting. This change is related to enhancements outlined in PEP 585.
---

_class_ typing.Awaitable(_Generic[T_co]_)[¶](https://docs.python.org/3/library/typing.html#typing.Awaitable "Link to this definition")
    
Deprecated alias to [`collections.abc.Awaitable`](https://docs.python.org/3/library/collections.abc.html#collections.abc.Awaitable "collections.abc.Awaitable").
Added in version 3.5.2.
Deprecated since version 3.9: [`collections.abc.Awaitable`](https://docs.python.org/3/library/collections.abc.html#collections.abc.Awaitable "collections.abc.Awaitable") now supports subscripting (`[]`). See [**PEP 585**](https://peps.python.org/pep-0585/) and [Generic Alias Type](https://docs.python.org/3/library/stdtypes.html#types-genericalias).
#### Aliases to other ABCs in [`collections.abc`](https://docs.python.org/3/library/collections.abc.html#module-collections.abc "collections.abc: Abstract base classes for containers")[¶](https://docs.python.org/3/library/typing.html#aliases-to-other-abcs-in-collections-abc "Link to this heading") 

_class_ typing.Iterable(_Generic[T_co]_)[¶](https://docs.python.org/3/library/typing.html#typing.Iterable "Link to this definition")
    
Deprecated alias to [`collections.abc.Iterable`](https://docs.python.org/3/library/collections.abc.html#collections.abc.Iterable "collections.abc.Iterable").
Deprecated since version 3.9: [`collections.abc.Iterable`](https://docs.python.org/3/library/collections.abc.html#collections.abc.Iterable "collections.abc.Iterable") now supports subscripting (`[]`). See [**PEP 585**](https://peps.python.org/pep-0585/) and [Generic Alias Type](https://docs.python.org/3/library/stdtypes.html#types-genericalias). 

_class_ typing.Iterator(_Iterable[T_co]_)[¶](https://docs.python.org/3/library/typing.html#typing.Iterator "Link to this definition")
    
Deprecated alias to [`collections.abc.Iterator`](https://docs.python.org/3/library/collections.abc.html#collections.abc.Iterator "collections.abc.Iterator").
Deprecated since version 3.9: [`collections.abc.Iterator`](https://docs.python.org/3/library/collections.abc.html#collections.abc.Iterator "collections.abc.Iterator") now supports subscripting (`[]`). See [**PEP 585**](https://peps.python.org/pep-0585/) and [Generic Alias Type](https://docs.python.org/3/library/stdtypes.html#types-genericalias). 

typing.Callable[¶](https://docs.python.org/3/library/typing.html#typing.Callable "Link to this definition")
    
Deprecated alias to [`collections.abc.Callable`](https://docs.python.org/3/library/collections.abc.html#collections.abc.Callable "collections.abc.Callable").
See [Annotating callable objects](https://docs.python.org/3/library/typing.html#annotating-callables) for details on how to use [`collections.abc.Callable`](https://docs.python.org/3/library/collections.abc.html#collections.abc.Callable "collections.abc.Callable") and `typing.Callable` in type annotations.
Deprecated since version 3.9: [`collections.abc.Callable`](https://docs.python.org/3/library/collections.abc.html#collections.abc.Callable "collections.abc.Callable") now supports subscripting (`[]`). See [**PEP 585**](https://peps.python.org/pep-0585/) and [Generic Alias Type](https://docs.python.org/3/library/stdtypes.html#types-genericalias).
Changed in version 3.10: `Callable` now supports [`ParamSpec`](https://docs.python.org/3/library/typing.html#typing.ParamSpec "typing.ParamSpec") and [`Concatenate`](https://docs.python.org/3/library/typing.html#typing.Concatenate "typing.Concatenate"). See [**PEP 612**](https://peps.python.org/pep-0612/) for more details. 

_class_ typing.Generator(_Iterator[YieldType], Generic[YieldType, SendType, ReturnType]_)[¶](https://docs.python.org/3/library/typing.html#typing.Generator "Link to this definition")
    
Deprecated alias to [`collections.abc.Generator`](https://docs.python.org/3/library/collections.abc.html#collections.abc.Generator "collections.abc.Generator").
See [Annotating generators and coroutines](https://docs.python.org/3/library/typing.html#annotating-generators-and-coroutines) for details on using [`collections.abc.Generator`](https://docs.python.org/3/library/collections.abc.html#collections.abc.Generator "collections.abc.Generator") and `typing.Generator` in type annotations.
Deprecated since version 3.9: [`collections.abc.Generator`](https://docs.python.org/3/library/collections.abc.html#collections.abc.Generator "collections.abc.Generator") now supports subscripting (`[]`). See [**PEP 585**](https://peps.python.org/pep-0585/) and [Generic Alias Type](https://docs.python.org/3/library/stdtypes.html#types-genericalias).
Changed in version 3.13: Default values for the send and return types were added.