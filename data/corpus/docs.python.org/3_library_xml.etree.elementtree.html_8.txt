Title: ElementTree Namespace and SubElement Functions
URL: https://docs.python.org/3/library/xml.etree.elementtree.html
Summary: This section covers two functions of the xml.etree.ElementTree module in Python: `register_namespace`, which registers a global namespace prefix and URI, and `SubElement`, which creates and appends a new element to a specified parent element. Added in version 3.2, these functions enable easier manipulation and serialization of XML elements.
---

xml.etree.ElementTree.register_namespace(_prefix_ , _uri_)[¶](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.register_namespace "Link to this definition")
    
Registers a namespace prefix. The registry is global, and any existing mapping for either the given prefix or the namespace URI will be removed. _prefix_ is a namespace prefix. _uri_ is a namespace uri. Tags and attributes in this namespace will be serialized with the given prefix, if at all possible.
Added in version 3.2. 

xml.etree.ElementTree.SubElement(_parent_ , _tag_ , _attrib ={}_, _** extra_)[¶](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.SubElement "Link to this definition")
    
Subelement factory. This function creates an element instance, and appends it to an existing element.
The element name, attribute names, and attribute values can be either bytestrings or Unicode strings. _parent_ is the parent element. _tag_ is the subelement name. _attrib_ is an optional dictionary, containing element attributes. _extra_ contains additional attributes, given as keyword arguments. Returns an element instance. 

xml.etree.ElementTree.tostring(_element_ , _encoding ='us-ascii'_, _method ='xml'_, _*_ , _xml_declaration =None_, _default_namespace =None_, _short_empty_elements =True_)[¶](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.tostring "Link to this definition")
    
Generates a string representation of an XML element, including all subelements. _element_ is an [`Element`](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element "xml.etree.ElementTree.Element") instance. _encoding_ [[1]](https://docs.python.org/3/library/xml.etree.elementtree.html#id9) is the output encoding (default is US-ASCII). Use `encoding="unicode"` to generate a Unicode string (otherwise, a bytestring is generated). _method_ is either `"xml"`, `"html"` or `"text"` (default is `"xml"`). _xml_declaration_ , _default_namespace_ and _short_empty_elements_ has the same meaning as in [`ElementTree.write()`](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.ElementTree.write "xml.etree.ElementTree.ElementTree.write"). Returns an (optionally) encoded string containing the XML data.
Changed in version 3.4: Added the _short_empty_elements_ parameter.
Changed in version 3.8: Added the _xml_declaration_ and _default_namespace_ parameters.
Changed in version 3.8: The [`tostring()`](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.tostring "xml.etree.ElementTree.tostring") function now preserves the attribute order specified by the user. 

xml.etree.ElementTree.tostringlist(_element_ , _encoding ='us-ascii'_, _method ='xml'_, _*_ , _xml_declaration =None_, _default_namespace =None_, _short_empty_elements =True_)[¶](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.tostringlist "Link to this definition")
    
Generates a string representation of an XML element, including all subelements. _element_ is an [`Element`](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element "xml.etree.ElementTree.Element") instance. _encoding_ [[1]](https://docs.python.org/3/library/xml.etree.elementtree.html#id9) is the output encoding (default is US-ASCII). Use `encoding="unicode"` to generate a Unicode string (otherwise, a bytestring is generated). _method_ is either `"xml"`, `"html"` or `"text"` (default is `"xml"`). _xml_declaration_ , _default_namespace_ and _short_empty_elements_ has the same meaning as in [`ElementTree.write()`](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.ElementTree.write "xml.etree.ElementTree.ElementTree.write"). Returns a list of (optionally) encoded strings containing the XML data. It does not guarantee any specific sequence, except that `b"".join(tostringlist(element)) == tostring(element)`.
Added in version 3.2.
Changed in version 3.4: Added the _short_empty_elements_ parameter.
Changed in version 3.8: Added the _xml_declaration_ and _default_namespace_ parameters.
Changed in version 3.8: The [`tostringlist()`](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.tostringlist "xml.etree.ElementTree.tostringlist") function now preserves the attribute order specified by the user.