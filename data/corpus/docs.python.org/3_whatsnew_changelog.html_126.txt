Title: Python Build System Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: Recent updates to the Python build system include improvements for out-of-tree builds, introduction of a new script for Ubuntu container regeneration, export of memory for wasi-threads to enhance compatibility with wasm runtimes, and specific changes for AIX 32-bit builds, among other enhancements.
---

### Build[¶](https://docs.python.org/3/whatsnew/changelog.html#id124 "Link to this heading")
  * [gh-96954](https://github.com/python/cpython/issues/96954): Make `make regen-unicodedata` work for out-of-tree builds of CPython.
  * [gh-112088](https://github.com/python/cpython/issues/112088): Add `Tools/build/regen-configure.sh` script to regenerate the `configure` with an Ubuntu container image. The `quay.io/tiran/cpython_autoconf:271` container image ([tiran/cpython_autoconf](https://github.com/tiran/cpython_autoconf)) is no longer used. Patch by Victor Stinner.
  * [gh-111046](https://github.com/python/cpython/issues/111046): For wasi-threads, memory is now exported to fix compatibility issues with some wasm runtimes.
  * [gh-110828](https://github.com/python/cpython/issues/110828): AIX 32bit needs `-latomic` to build the `_testcapi` extension module.
  * [gh-85283](https://github.com/python/cpython/issues/85283): The `errno`, `md5`, `resource`, `winsound`, `_ctypes_test`, `_multiprocessing.posixshmem`, `_scproxy`, `_stat`, `_testimportmultiple` and `_uuid` C extensions are now built with the [limited C API](https://docs.python.org/3/c-api/stable.html#limited-c-api). Patch by Victor Stinner.


### Windows[¶](https://docs.python.org/3/whatsnew/changelog.html#id125 "Link to this heading")
  * [gh-111856](https://github.com/python/cpython/issues/111856): Fixes [`fstat()`](https://docs.python.org/3/library/os.html#os.fstat "os.fstat") on file systems that do not support file ID requests. This includes FAT32 and exFAT.
  * [gh-111293](https://github.com/python/cpython/issues/111293): Fix [`os.DirEntry.inode`](https://docs.python.org/3/library/os.html#os.DirEntry.inode "os.DirEntry.inode") dropping higher 64 bits of a file id on some filesystems on Windows.
  * [gh-110913](https://github.com/python/cpython/issues/110913): WindowsConsoleIO now correctly chunks large buffers without splitting up UTF-8 sequences.


### macOS[¶](https://docs.python.org/3/whatsnew/changelog.html#id126 "Link to this heading")
  * [gh-59703](https://github.com/python/cpython/issues/59703): For macOS framework builds, in `getpath.c` use the system `dladdr` function to find the path to the shared library rather than depending on deprecated macOS APIs.
  * [gh-110950](https://github.com/python/cpython/issues/110950): Update macOS installer to include an upstream Tcl/Tk fix for the `Secure coding is not enabled for restorable state!` warning encountered in Tkinter on macOS 14 Sonoma.
  * [gh-111015](https://github.com/python/cpython/issues/111015): Ensure that IDLE.app and Python Launcher.app are installed with appropriate permissions on macOS builds.
  * [gh-71383](https://github.com/python/cpython/issues/71383): Update macOS installer to include an upstream Tcl/Tk fix for the `ttk::ThemeChanged` error encountered in Tkinter.
  * [gh-92603](https://github.com/python/cpython/issues/92603): Update macOS installer to include a fix accepted by upstream Tcl/Tk for a crash encountered after the first [`tkinter.Tk()`](https://docs.python.org/3/library/tkinter.html#tkinter.Tk "tkinter.Tk") instance is destroyed.


### IDLE[¶](https://docs.python.org/3/whatsnew/changelog.html#id127 "Link to this heading")
  * [bpo-35668](https://bugs.python.org/issue?@action=redirect&bpo=35668): Add docstrings to the IDLE debugger module. Fix two bugs: initialize `Idb.botframe` (should be in Bdb); in `Idb.in_rpc_code`, check whether `prev_frame` is `None` before trying to use it. Greatly expand test_debugger.


### Tools/Demos[¶](https://docs.python.org/3/whatsnew/changelog.html#id128 "Link to this heading")
  * [gh-111903](https://github.com/python/cpython/issues/111903): Argument Clinic now supports the `@critical_section` directive that instructs Argument Clinic to generate a critical section around the function call, which locks the `self` object in `--disable-gil` builds. Patch by Sam Gross.