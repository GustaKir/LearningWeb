Title: Python 3.11.0 Alpha 6 Release Notes
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This chunk summarizes the changes made in Python 3.11.0 Alpha 6, released on March 7, 2022, including improvements to core functionalities and built-in types, such as better error messaging for subscripting non-generic types, support for vectorcall in `super()`, and fixes related to `AttributeError` and inline cache entries.
---

## Python 3.11.0 alpha 6[¶](https://docs.python.org/3/whatsnew/changelog.html#python-3-11-0-alpha-6 "Link to this heading")
_Release date: 2022-03-07_
### Core and Builtins[¶](https://docs.python.org/3/whatsnew/changelog.html#id236 "Link to this heading")
  * [bpo-46940](https://bugs.python.org/issue?@action=redirect&bpo=46940): Avoid overriding [`AttributeError`](https://docs.python.org/3/library/exceptions.html#AttributeError "AttributeError") metadata information for nested attribute access calls. Patch by Pablo Galindo.
  * [bpo-46927](https://bugs.python.org/issue?@action=redirect&bpo=46927): Include the type’s name in the error message for subscripting non-generic types.
  * [bpo-46921](https://bugs.python.org/issue?@action=redirect&bpo=46921): Support vectorcall for `super()`. Patch by Ken Jin.
  * [bpo-46841](https://bugs.python.org/issue?@action=redirect&bpo=46841): Fix incorrect handling of inline cache entries when specializing [`BINARY_OP`](https://docs.python.org/3/library/dis.html#opcode-BINARY_OP).
  * [bpo-46841](https://bugs.python.org/issue?@action=redirect&bpo=46841): Use an oparg to simplify the construction of helpful error messages in [`GET_AWAITABLE`](https://docs.python.org/3/library/dis.html#opcode-GET_AWAITABLE).
  * [bpo-46903](https://bugs.python.org/issue?@action=redirect&bpo=46903): Make sure that str subclasses can be used as attribute names for instances with virtual dictionaries. Fixes regression in 3.11alpha
  * [bpo-46841](https://bugs.python.org/issue?@action=redirect&bpo=46841): Add more detailed specialization failure stats for [`COMPARE_OP`](https://docs.python.org/3/library/dis.html#opcode-COMPARE_OP) followed by [`EXTENDED_ARG`](https://docs.python.org/3/library/dis.html#opcode-EXTENDED_ARG).
  * [bpo-46891](https://bugs.python.org/issue?@action=redirect&bpo=46891): Fix bug introduced during 3.11alpha where subclasses of `types.ModuleType` with `__slots__` were not initialized correctly, resulting in an interpreter crash.
  * [bpo-46841](https://bugs.python.org/issue?@action=redirect&bpo=46841): Use inline caching for [`LOAD_ATTR`](https://docs.python.org/3/library/dis.html#opcode-LOAD_ATTR), [`LOAD_METHOD`](https://docs.python.org/3/library/dis.html#opcode-LOAD_METHOD), and [`STORE_ATTR`](https://docs.python.org/3/library/dis.html#opcode-STORE_ATTR).
  * [bpo-46841](https://bugs.python.org/issue?@action=redirect&bpo=46841): Use inline cache for [`BINARY_SUBSCR`](https://docs.python.org/3/library/dis.html#opcode-BINARY_SUBSCR).
  * [bpo-46841](https://bugs.python.org/issue?@action=redirect&bpo=46841): Use inline caching for [`COMPARE_OP`](https://docs.python.org/3/library/dis.html#opcode-COMPARE_OP).
  * [bpo-46864](https://bugs.python.org/issue?@action=redirect&bpo=46864): Deprecate `PyBytesObject.ob_shash`. It will be removed in Python 3.13.
  * [bpo-46841](https://bugs.python.org/issue?@action=redirect&bpo=46841): Use inline caching for [`UNPACK_SEQUENCE`](https://docs.python.org/3/library/dis.html#opcode-UNPACK_SEQUENCE).
  * [bpo-46845](https://bugs.python.org/issue?@action=redirect&bpo=46845): Reduces dict size by removing hash value from hash table when all inserted keys are Unicode. For example, `sys.getsizeof(dict.fromkeys("abcdefg"))` becomes 272 bytes from 352 bytes on 64bit platform.
  * [bpo-46841](https://bugs.python.org/issue?@action=redirect&bpo=46841): Use inline cache for [`LOAD_GLOBAL`](https://docs.python.org/3/library/dis.html#opcode-LOAD_GLOBAL).
  * [bpo-46852](https://bugs.python.org/issue?@action=redirect&bpo=46852): Rename the private undocumented `float.__set_format__()` method to `float.__setformat__()` to fix a typo introduced in Python 3.7. The method is only used by test_float. Patch by Victor Stinner.
  * [bpo-46852](https://bugs.python.org/issue?@action=redirect&bpo=46852): Remove the undocumented private `float.__set_format__()` method, previously known as `float.__setformat__()` in Python 3.7. Its docstring said: “You probably don’t want to use this function. It exists mainly to be used in Python’s test suite.” Patch by Victor Stinner.
  * [bpo-40116](https://bugs.python.org/issue?@action=redirect&bpo=40116): Fix regression that dict.update(other) may don’t respect iterate order of other when other is key sharing dict.
  * [bpo-46712](https://bugs.python.org/issue?@action=redirect&bpo=46712): Share global string identifiers in deep-frozen modules.
  * [bpo-46430](https://bugs.python.org/issue?@action=redirect&bpo=46430): Fix memory leak in interned strings of deep-frozen modules.
  * [bpo-46841](https://bugs.python.org/issue?@action=redirect&bpo=46841): Store [`BINARY_OP`](https://docs.python.org/3/library/dis.html#opcode-BINARY_OP) caches inline using a new [`CACHE`](https://docs.python.org/3/library/dis.html#opcode-CACHE) instruction.
  * [bpo-45107](https://bugs.python.org/issue?@action=redirect&bpo=45107): Specialize `LOAD_METHOD` for instances with a dict.
  * [bpo-44337](https://bugs.python.org/issue?@action=redirect&bpo=443