Title: Python Changelog Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This document outlines various updates and bug fixes in Python, including changes to import behavior, exception handling for wrapper descriptors, parameter ordering in AST nodes, and optimizations for pymalloc in non-PGO builds.
---

The collection’s item is now always at the left and the needle is on the right of `==`.
  * [bpo-37444](https://bugs.python.org/issue?@action=redirect&bpo=37444): Update differing exception between `builtins.__import__()` and [`importlib.__import__()`](https://docs.python.org/3/library/importlib.html#importlib.__import__ "importlib.__import__").
  * [bpo-37619](https://bugs.python.org/issue?@action=redirect&bpo=37619): When adding a wrapper descriptor from one class to a different class (for example, setting `__add__ = str.__add__` on an `int` subclass), an exception is correctly raised when the operator is called.
  * [bpo-37593](https://bugs.python.org/issue?@action=redirect&bpo=37593): Swap the positions of the _posonlyargs_ and _args_ parameters in the constructor of `ast.parameters` nodes.
  * [bpo-37543](https://bugs.python.org/issue?@action=redirect&bpo=37543): Optimized pymalloc for non PGO build.
  * [bpo-37537](https://bugs.python.org/issue?@action=redirect&bpo=37537): Compute allocated pymalloc blocks inside _Py_GetAllocatedBlocks(). This slows down _Py_GetAllocatedBlocks() but gives a small speedup to _PyObject_Malloc() and _PyObject_Free().
  * [bpo-37467](https://bugs.python.org/issue?@action=redirect&bpo=37467): Fix [`sys.excepthook()`](https://docs.python.org/3/library/sys.html#sys.excepthook "sys.excepthook") and `PyErr_Display()` if a filename is a bytes string. For example, for a SyntaxError exception where the filename attribute is a bytes string.
  * [bpo-37433](https://bugs.python.org/issue?@action=redirect&bpo=37433): Fix `SyntaxError` indicator printing too many spaces for multi-line strings - by Anthony Sottile.
  * [bpo-37417](https://bugs.python.org/issue?@action=redirect&bpo=37417): `bytearray.extend()` now correctly handles errors that arise during iteration. Patch by Brandt Bucher.
  * [bpo-37414](https://bugs.python.org/issue?@action=redirect&bpo=37414): The undocumented `sys.callstats()` function has been removed. Since Python 3.7, it was deprecated and always returned `None`. It required a special build option `CALL_PROFILE` which was already removed in Python 3.7.
  * [bpo-37392](https://bugs.python.org/issue?@action=redirect&bpo=37392): Remove `sys.getcheckinterval()` and `sys.setcheckinterval()` functions. They were deprecated since Python 3.2. Use [`sys.getswitchinterval()`](https://docs.python.org/3/library/sys.html#sys.getswitchinterval "sys.getswitchinterval") and [`sys.setswitchinterval()`](https://docs.python.org/3/library/sys.html#sys.setswitchinterval "sys.setswitchinterval") instead. Remove also `check_interval` field of the `PyInterpreterState` structure.
  * [bpo-37388](https://bugs.python.org/issue?@action=redirect&bpo=37388): In development mode and in debug build, _encoding_ and _errors_ arguments are now checked on string encoding and decoding operations. Examples: [`open()`](https://docs.python.org/3/library/functions.html#open "open"), [`str.encode()`](https://docs.python.org/3/library/stdtypes.html#str.encode "str.encode") and [`bytes.decode()`](https://docs.python.org/3/library/stdtypes.html#bytes.decode "bytes.decode").
By default, for best performances, the _errors_ argument is only checked at the first encoding/decoding error, and the _encoding_ argument is sometimes ignored for empty strings.
  * [bpo-37348](https://bugs.python.org/issue?@action=redirect&bpo=37348): Optimized decoding short ASCII string with UTF-8 and ascii codecs. `b"foo".decode()` is about 15% faster. Patch by Inada Naoki.
  * [bpo-24214](https://bugs.python.org/issue?@action=redirect&bpo=24214): Improved support of the surrogatepass error handler in the UTF-8 and UTF-16 incremental decoders.
  * [bpo-37330](https://bugs.python.org/issue?@action=redirect&bpo=37330): [`open()`](https://docs.python.org/3/library/functions.html#open "open"), [`io.open()`](https://docs.python.org/3/library/io.html#io.open "io.open"), [`codecs.open()`](https://docs.python.org/3/library/codecs.html#codecs.open "codecs.open") and [`fileinput.FileInput`](https://docs.python.org/3/library/fileinput.html#fileinput.FileInput "fileinput.FileInput") no longer accept `'U'` (“universal newline”) in the file mode. This flag was deprecated since Python 3.3.
  * [bpo-35224](https://bugs.python.org/issue?@action=redirect&bpo=35224): Reverse evaluation order of key: value in dict comprehensions as proposed in PEP 572. I.e.