Title: CookiePolicy.hide_cookie2
URL: https://docs.python.org/3/library/http.cookiejar.html
Summary: The 'hide_cookie2' method prevents the addition of the _Cookie2_ header in requests, indicating that the server is aware of RFC 2965 cookies. To define a custom CookiePolicy, subclass 'DefaultCookiePolicy' and override its methods. The base 'CookiePolicy' can be utilized as a null policy, though this is rarely practical.
---

CookiePolicy.hide_cookie2[¶](https://docs.python.org/3/library/http.cookiejar.html#http.cookiejar.CookiePolicy.hide_cookie2 "Link to this definition")
    
Don’t add _Cookie2_ header to requests (the presence of this header indicates to the server that we understand [**RFC 2965**](https://datatracker.ietf.org/doc/html/rfc2965.html) cookies).
The most useful way to define a [`CookiePolicy`](https://docs.python.org/3/library/http.cookiejar.html#http.cookiejar.CookiePolicy "http.cookiejar.CookiePolicy") class is by subclassing from [`DefaultCookiePolicy`](https://docs.python.org/3/library/http.cookiejar.html#http.cookiejar.DefaultCookiePolicy "http.cookiejar.DefaultCookiePolicy") and overriding some or all of the methods above. [`CookiePolicy`](https://docs.python.org/3/library/http.cookiejar.html#http.cookiejar.CookiePolicy "http.cookiejar.CookiePolicy") itself may be used as a ‘null policy’ to allow setting and receiving any and all cookies (this is unlikely to be useful).
## DefaultCookiePolicy Objects[¶](https://docs.python.org/3/library/http.cookiejar.html#defaultcookiepolicy-objects "Link to this heading")
Implements the standard rules for accepting and returning cookies.
Both [**RFC 2965**](https://datatracker.ietf.org/doc/html/rfc2965.html) and Netscape cookies are covered. RFC 2965 handling is switched off by default.
The easiest way to provide your own policy is to override this class and call its methods in your overridden implementations before adding your own additional checks:
```
importhttp.cookiejar
classMyCookiePolicy(http.cookiejar.DefaultCookiePolicy):
  defset_ok(self, cookie, request):
    if not http.cookiejar.DefaultCookiePolicy.set_ok(self, cookie, request):
      return False
    if i_dont_want_to_store_this_cookie(cookie):
      return False
    return True