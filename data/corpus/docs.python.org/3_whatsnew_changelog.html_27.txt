Title: Python 3 Changelog Updates by Victor Stinner
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This document outlines several updates to Python, including fixes for interleaved seeks and reads in zip files, improved detection of Windows Server 2025 in the platform module, the ability for macOS and iOS apps to redirect stdout and stderr to the system log, and the inclusion of `<sys/pidfd.h>` for the `os.PIDFD_NONBLOCK` constant.
---

Patch by Victor Stinner.
  * [gh-127847](https://github.com/python/cpython/issues/127847): Fix the position when doing interleaved seeks and reads in uncompressed, unencrypted zip files returned by [`zipfile.ZipFile.open()`](https://docs.python.org/3/library/zipfile.html#zipfile.ZipFile.open "zipfile.ZipFile.open").
  * [gh-127732](https://github.com/python/cpython/issues/127732): The [`platform`](https://docs.python.org/3/library/platform.html#module-platform "platform: Retrieves as much platform identifying data as possible.") module now correctly detects Windows Server 2025.
  * [gh-126821](https://github.com/python/cpython/issues/126821): macOS and iOS apps can now choose to redirect stdout and stderr to the system log during interpreter configuration.
  * [gh-93312](https://github.com/python/cpython/issues/93312): Include `<sys/pidfd.h>` to get `os.PIDFD_NONBLOCK` constant. Patch by Victor Stinner.
  * [gh-83662](https://github.com/python/cpython/issues/83662): Add missing `__class_getitem__` method to the Python implementation of [`functools.partial()`](https://docs.python.org/3/library/functools.html#functools.partial "functools.partial"), to make it compatible with the C version. This is mainly relevant for alternative Python implementations like PyPy and GraalPy, because CPython will usually use the C-implementation of that function.
  * [gh-127586](https://github.com/python/cpython/issues/127586): [`multiprocessing.pool.Pool`](https://docs.python.org/3/library/multiprocessing.html#multiprocessing.pool.Pool "multiprocessing.pool.Pool") now properly restores blocked signal handlers of the parent thread when creating processes via either _spawn_ or _forkserver_.
  * [gh-98188](https://github.com/python/cpython/issues/98188): Fix an issue in [`email.message.Message.get_payload()`](https://docs.python.org/3/library/email.compat32-message.html#email.message.Message.get_payload "email.message.Message.get_payload") where data cannot be decoded if the Content Transfer Encoding mechanism contains trailing whitespaces or additional junk text. Patch by Hui Liu.
  * [gh-127257](https://github.com/python/cpython/issues/127257): In [`ssl`](https://docs.python.org/3/library/ssl.html#module-ssl "ssl: TLS/SSL wrapper for socket objects"), system call failures that OpenSSL reports using `ERR_LIB_SYS` are now raised as [`OSError`](https://docs.python.org/3/library/exceptions.html#OSError "OSError").
  * [gh-127096](https://github.com/python/cpython/issues/127096): Do not recreate unnamed section on every read in [`configparser.ConfigParser`](https://docs.python.org/3/library/configparser.html#configparser.ConfigParser "configparser.ConfigParser"). Patch by Andrey Efremov.
  * [gh-127196](https://github.com/python/cpython/issues/127196): Fix crash when dict with keys in invalid encoding were passed to several functions in `_interpreters` module.
  * [gh-126775](https://github.com/python/cpython/issues/126775): Make [`linecache.checkcache()`](https://docs.python.org/3/library/linecache.html#linecache.checkcache "linecache.checkcache") thread safe and GC re-entrancy safe.
  * [gh-126332](https://github.com/python/cpython/issues/126332): Fix _pyrepl crash when entering a double CTRL-Z on an overflowing line.
  * [gh-126225](https://github.com/python/cpython/issues/126225): [`getopt`](https://docs.python.org/3/library/getopt.html#module-getopt "getopt: Portable parser for command line options; support both short and long option names.") and [`optparse`](https://docs.python.org/3/library/optparse.html#module-optparse "optparse: Command-line option parsing library.") are no longer marked as deprecated. There are legitimate reasons to use one of these modules in preference to [`argparse`](https://docs.python.org/3/library/argparse.html#module-argparse "argparse: Command-line option and argument parsing library."), and none of these modules are at risk of being removed from the standard library.