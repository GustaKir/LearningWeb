Title: Security and Performance of Python's Pickle Module
URL: https://docs.python.org/3/library/pickle.html
Summary: The section emphasizes the need for caution when unpickling data due to security concerns and suggests alternatives like the XML-RPC marshalling API. It also highlights recent enhancements in pickle's performance, including efficient binary encodings and an optimizer implemented in C.
---

```

As our examples shows, you have to be careful with what you allow to be unpickled. Therefore if security is a concern, you may want to consider alternatives such as the marshalling API in [`xmlrpc.client`](https://docs.python.org/3/library/xmlrpc.client.html#module-xmlrpc.client "xmlrpc.client: XML-RPC client access.") or third-party solutions.
## Performance[¶](https://docs.python.org/3/library/pickle.html#performance "Link to this heading")
Recent versions of the pickle protocol (from protocol 2 and upwards) feature efficient binary encodings for several common features and built-in types. Also, the [`pickle`](https://docs.python.org/3/library/pickle.html#module-pickle "pickle: Convert Python objects to streams of bytes and back.") module has a transparent optimizer written in C.
## Examples[¶](https://docs.python.org/3/library/pickle.html#examples "Link to this heading")
For the simplest code, use the [`dump()`](https://docs.python.org/3/library/pickle.html#pickle.dump "pickle.dump") and [`load()`](https://docs.python.org/3/library/pickle.html#pickle.load "pickle.load") functions.
```
importpickle
# An arbitrary collection of objects supported by pickle.
data = {
  'a': [1, 2.0, 3+4j],
  'b': ("character string", b"byte string"),
  'c': {None, True, False}
}
with open('data.pickle', 'wb') as f:
  # Pickle the 'data' dictionary using the highest protocol available.
  pickle.dump(data, f, pickle.HIGHEST_PROTOCOL)

```

The following example reads the resulting pickled data.
```
importpickle
with open('data.pickle', 'rb') as f:
  # The protocol version used is detected automatically, so we do not
  # have to specify it.
  data = pickle.load(f)