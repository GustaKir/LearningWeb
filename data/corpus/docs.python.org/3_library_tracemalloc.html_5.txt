Title: tracemalloc Module Functions
URL: https://docs.python.org/3/library/tracemalloc.html
Summary: This section describes the functions of the `tracemalloc` module, including `is_tracing()`, which indicates if memory tracing is active, and `start()`, which begins tracing memory allocations while limiting collected tracebacks to a specified number of frames.
---

tracemalloc.is_tracing()[¶](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.is_tracing "Link to this definition")
    
`True` if the [`tracemalloc`](https://docs.python.org/3/library/tracemalloc.html#module-tracemalloc "tracemalloc: Trace memory allocations.") module is tracing Python memory allocations, `False` otherwise.
See also [`start()`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.start "tracemalloc.start") and [`stop()`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.stop "tracemalloc.stop") functions. 

tracemalloc.start(_nframe :[int](https://docs.python.org/3/library/functions.html#int "int")=1_)[¶](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.start "Link to this definition")
    
Start tracing Python memory allocations: install hooks on Python memory allocators. Collected tracebacks of traces will be limited to _nframe_ frames. By default, a trace of a memory block only stores the most recent frame: the limit is `1`. _nframe_ must be greater or equal to `1`.
You can still read the original number of total frames that composed the traceback by looking at the [`Traceback.total_nframe`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.Traceback.total_nframe "tracemalloc.Traceback.total_nframe") attribute.
Storing more than `1` frame is only useful to compute statistics grouped by `'traceback'` or to compute cumulative statistics: see the [`Snapshot.compare_to()`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.Snapshot.compare_to "tracemalloc.Snapshot.compare_to") and [`Snapshot.statistics()`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.Snapshot.statistics "tracemalloc.Snapshot.statistics") methods.
Storing more frames increases the memory and CPU overhead of the [`tracemalloc`](https://docs.python.org/3/library/tracemalloc.html#module-tracemalloc "tracemalloc: Trace memory allocations.") module. Use the [`get_tracemalloc_memory()`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.get_tracemalloc_memory "tracemalloc.get_tracemalloc_memory") function to measure how much memory is used by the [`tracemalloc`](https://docs.python.org/3/library/tracemalloc.html#module-tracemalloc "tracemalloc: Trace memory allocations.") module.
The [`PYTHONTRACEMALLOC`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONTRACEMALLOC) environment variable (`PYTHONTRACEMALLOC=NFRAME`) and the [`-X`](https://docs.python.org/3/using/cmdline.html#cmdoption-X) `tracemalloc=NFRAME` command line option can be used to start tracing at startup.
See also [`stop()`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.stop "tracemalloc.stop"), [`is_tracing()`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.is_tracing "tracemalloc.is_tracing") and [`get_traceback_limit()`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.get_traceback_limit "tracemalloc.get_traceback_limit") functions. 

tracemalloc.stop()[¶](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.stop "Link to this definition")
    
Stop tracing Python memory allocations: uninstall hooks on Python memory allocators. Also clears all previously collected traces of memory blocks allocated by Python.
Call [`take_snapshot()`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.take_snapshot "tracemalloc.take_snapshot") function to take a snapshot of traces before clearing them.
See also [`start()`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.start "tracemalloc.start"), [`is_tracing()`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.is_tracing "tracemalloc.is_tracing") and [`clear_traces()`](https://docs.python.org/3/library/tracemalloc.html#tracemalloc.clear_traces "tracemalloc.clear_traces") functions.