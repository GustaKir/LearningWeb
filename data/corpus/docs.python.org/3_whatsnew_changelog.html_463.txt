Title: Python 3 Changelog: Recent Fixes and Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section highlights several bug fixes in Python, including improvements to Tcl string conversions, correct handling of closed asyncio pipes, and child mocks detection for synchronous and asynchronous types. Additionally, adjustments to the `http.client` library allow sending invalid HTTP requests, resolving issues caused by previous fixes.
---

Converting strings from Tcl to Python and back now never fails (except MemoryError).
  * [bpo-38019](https://bugs.python.org/issue?@action=redirect&bpo=38019): Correctly handle pause/resume reading of closed asyncio unix pipe.
  * [bpo-38163](https://bugs.python.org/issue?@action=redirect&bpo=38163): Child mocks will now detect their type as either synchronous or asynchronous, asynchronous child mocks will be AsyncMocks and synchronous child mocks will be either MagicMock or Mock (depending on their parent type).
  * [bpo-38161](https://bugs.python.org/issue?@action=redirect&bpo=38161): Removes _AwaitEvent from AsyncMock.
  * [bpo-38216](https://bugs.python.org/issue?@action=redirect&bpo=38216): Allow the rare code that wants to send invalid http requests from the `http.client` library a way to do so. The fixes for [bpo-30458](https://bugs.python.org/issue?@action=redirect&bpo=30458) led to breakage for some projects that were relying on this ability to test their own behavior in the face of bad requests.
  * [bpo-28286](https://bugs.python.org/issue?@action=redirect&bpo=28286): Deprecate opening [`GzipFile`](https://docs.python.org/3/library/gzip.html#gzip.GzipFile "gzip.GzipFile") for writing implicitly. Always specify the _mode_ argument for writing.
  * [bpo-38108](https://bugs.python.org/issue?@action=redirect&bpo=38108): Any synchronous magic methods on an AsyncMock now return a MagicMock. Any asynchronous magic methods on a MagicMock now return an AsyncMock.
  * [bpo-38265](https://bugs.python.org/issue?@action=redirect&bpo=38265): Update the _length_ parameter of [`os.pread()`](https://docs.python.org/3/library/os.html#os.pread "os.pread") to accept [`Py_ssize_t`](https://docs.python.org/3/c-api/intro.html#c.Py_ssize_t "Py_ssize_t") instead of int.
  * [bpo-38112](https://bugs.python.org/issue?@action=redirect&bpo=38112): [`compileall`](https://docs.python.org/3/library/compileall.html#module-compileall "compileall: Tools for byte-compiling all Python source files in a directory tree.") has a higher default recursion limit and new command-line arguments for path manipulation, symlinks handling, and multiple optimization levels.
  * [bpo-38248](https://bugs.python.org/issue?@action=redirect&bpo=38248): asyncio: Fix inconsistent immediate Task cancellation
  * [bpo-38237](https://bugs.python.org/issue?@action=redirect&bpo=38237): The arguments for the builtin pow function are more descriptive. They can now also be passed in as keywords.
  * [bpo-34002](https://bugs.python.org/issue?@action=redirect&bpo=34002): Improve efficiency in parts of email package by changing while-pop to a for loop, using isdisjoint instead of set intersections.
  * [bpo-38191](https://bugs.python.org/issue?@action=redirect&bpo=38191): Constructors of [`NamedTuple`](https://docs.python.org/3/library/typing.html#typing.NamedTuple "typing.NamedTuple") and [`TypedDict`](https://docs.python.org/3/library/typing.html#typing.TypedDict "typing.TypedDict") types now accept arbitrary keyword argument names, including “cls”, “self”, “typename”, “_typename”, “fields” and “_fields”.
  * [bpo-38155](https://bugs.python.org/issue?@action=redirect&bpo=38155): Add `__all__` to [`datetime`](https://docs.python.org/3/library/datetime.html#module-datetime "datetime: Basic date and time types."). Patch by Tahia Khan.
  * [bpo-38185](https://bugs.python.org/issue?@action=redirect&bpo=38185): Fixed case-insensitive string comparison in [`sqlite3.Row`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Row "sqlite3.Row") indexing.
  * [bpo-38136](https://bugs.python.org/issue?@action=redirect&bpo=38136): Changes AsyncMock call count and await count to be two different counters. Now await count only counts when a coroutine has been awaited, not when it has been called, and vice-versa. Update the documentation around this.
  * [bpo-37828](https://bugs.python.org/issue?@action=redirect&bpo=37828): Fix default mock name in [`unittest.mock.Mock.assert_called()`](https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock.assert_called "unittest.mock.Mock.assert_called") exceptions. Patch by Abraham Toriz Cruz.
  * [bpo-38175](https://bugs.python.org/issue?@action=redirect&bpo=38175): Fix a memory leak in comparison of [`sqlite3.Row`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Row "sqlite3.Row") objects.
  * [bpo-33936](https://bugs.python.org/issue?@action=redirect&bpo=33936): _hashlib no longer calls obsolete OpenSSL initialization function with OpenSSL 1.1.0+.
  * [bpo-34706](https://bugs.python.org/issue?@action=redirect&bpo=34706): Preserve subclassing in inspect.Signature.from_callable.
  * [bpo-38153](https://bugs.python.org/issue?@action=redirect&bpo=38153): Names of hashing algorithms from OpenSSL are now normalized to follow Python’s naming conventions.