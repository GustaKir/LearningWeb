Title: File Object Types Returned by `open()`
URL: https://docs.python.org/3/library/functions.html
Summary: The type of file object returned by the `open()` function in Python depends on the mode used. In text modes, it returns a subclass of `io.TextIOBase`, specifically `io.TextIOWrapper`. In binary modes, it returns a subclass of `io.BufferedIOBase`, with different classes such as `io.BufferedReader` for read mode and other classes for write and append modes.
---

```

The type of [file object](https://docs.python.org/3/glossary.html#term-file-object) returned by the [`open()`](https://docs.python.org/3/library/functions.html#open "open") function depends on the mode. When [`open()`](https://docs.python.org/3/library/functions.html#open "open") is used to open a file in a text mode (`'w'`, `'r'`, `'wt'`, `'rt'`, etc.), it returns a subclass of [`io.TextIOBase`](https://docs.python.org/3/library/io.html#io.TextIOBase "io.TextIOBase") (specifically [`io.TextIOWrapper`](https://docs.python.org/3/library/io.html#io.TextIOWrapper "io.TextIOWrapper")). When used to open a file in a binary mode with buffering, the returned class is a subclass of [`io.BufferedIOBase`](https://docs.python.org/3/library/io.html#io.BufferedIOBase "io.BufferedIOBase"). The exact class varies: in read binary mode, it returns an [`io.BufferedReader`](https://docs.python.org/3/library/io.html#io.BufferedReader "io.BufferedReader"); in write binary and append binary modes, it returns an [`io.BufferedWriter`](https://docs.python.org/3/library/io.html#io.BufferedWriter "io.BufferedWriter"), and in read/write mode, it returns an [`io.BufferedRandom`](https://docs.python.org/3/library/io.html#io.BufferedRandom "io.BufferedRandom"). When buffering is disabled, the raw stream, a subclass of [`io.RawIOBase`](https://docs.python.org/3/library/io.html#io.RawIOBase "io.RawIOBase"), [`io.FileIO`](https://docs.python.org/3/library/io.html#io.FileIO "io.FileIO"), is returned.
See also the file handling modules, such as [`fileinput`](https://docs.python.org/3/library/fileinput.html#module-fileinput "fileinput: Loop over standard input or a list of files."), [`io`](https://docs.python.org/3/library/io.html#module-io "io: Core tools for working with streams.") (where [`open()`](https://docs.python.org/3/library/functions.html#open "open") is declared), [`os`](https://docs.python.org/3/library/os.html#module-os "os: Miscellaneous operating system interfaces."), [`os.path`](https://docs.python.org/3/library/os.path.html#module-os.path "os.path: Operations on pathnames."), [`tempfile`](https://docs.python.org/3/library/tempfile.html#module-tempfile "tempfile: Generate temporary files and directories."), and [`shutil`](https://docs.python.org/3/library/shutil.html#module-shutil "shutil: High-level file operations, including copying.").
Raises an [auditing event](https://docs.python.org/3/library/sys.html#auditing) `open` with arguments `path`, `mode`, `flags`.
The `mode` and `flags` arguments may have been modified or inferred from the original call.
Changed in version 3.3: 
  * The _opener_ parameter was added.
  * The `'x'` mode was added.
  * [`IOError`](https://docs.python.org/3/library/exceptions.html#IOError "IOError") used to be raised, it is now an alias of [`OSError`](https://docs.python.org/3/library/exceptions.html#OSError "OSError").
  * [`FileExistsError`](https://docs.python.org/3/library/exceptions.html#FileExistsError "FileExistsError") is now raised if the file opened in exclusive creation mode (`'x'`) already exists.


Changed in version 3.4: 
  * The file is now non-inheritable.


Changed in version 3.5: 
  * If the system call is interrupted and the signal handler does not raise an exception, the function now retries the system call instead of raising an [`InterruptedError`](https://docs.python.org/3/library/exceptions.html#InterruptedError "InterruptedError") exception (see [**PEP 475**](https://peps.python.org/pep-0475/) for the rationale).
  * The `'namereplace'` error handler was added.


Changed in version 3.6: 
  * Support added to accept objects implementing [`os.PathLike`](https://docs.python.org/3/library/os.html#os.PathLike "os.PathLike").
  * On Windows, opening a console buffer may return a subclass of [`io.RawIOBase`](https://docs.python.org/3/library/io.html#io.RawIOBase "io.RawIOBase") other than [`io.FileIO`](https://docs.python.org/3/library/io.html#io.FileIO "io.FileIO").


Changed in version 3.11: The `'U'` mode has been removed. 

ord(_c_)[¶](https://docs.python.org/3/library/functions.html#ord "Link to this definition")
    
Given a string representing one Unicode character, return an integer representing the Unicode code point of that character. For example, `ord('a')` returns the integer `97` and `ord('€')` (Euro sign) returns `8364`. This is the inverse of [`chr()`](https://docs.python.org/3/library/functions.html#chr "chr").