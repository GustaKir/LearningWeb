Title: Python 3.13 Release Notes
URL: https://docs.python.org/3/whatsnew/3.13.html
Summary: Python 3.13 introduces several changes including the redistribution of the `xdrlib` library from PyPI, removal of the deprecated `2to3` program and `lib2to3` module, and the elimination of support for chained `classmethod` descriptors.
---

g/project/standard-xdrlib/): Use the redistribution of `xdrlib` library from PyPI.


(Contributed by Victor Stinner and Zachary Ware in [gh-104773](https://github.com/python/cpython/issues/104773) and [gh-104780](https://github.com/python/cpython/issues/104780).)
### 2to3[¶](https://docs.python.org/3/whatsnew/3.13.html#to3 "Link to this heading")
  * Remove the **2to3** program and the `lib2to3` module, previously deprecated in Python 3.11. (Contributed by Victor Stinner in [gh-104780](https://github.com/python/cpython/issues/104780).)


### builtins[¶](https://docs.python.org/3/whatsnew/3.13.html#builtins "Link to this heading")
  * Remove support for chained [`classmethod`](https://docs.python.org/3/library/functions.html#classmethod "classmethod") descriptors (introduced in [gh-63272](https://github.com/python/cpython/issues/63272)). These can no longer be used to wrap other descriptors, such as [`property`](https://docs.python.org/3/library/functions.html#property "property"). The core design of this feature was flawed and led to several problems. To “pass-through” a [`classmethod`](https://docs.python.org/3/library/functions.html#classmethod "classmethod"), consider using the `__wrapped__` attribute that was added in Python 3.10. (Contributed by Raymond Hettinger in [gh-89519](https://github.com/python/cpython/issues/89519).)
  * Raise a [`RuntimeError`](https://docs.python.org/3/library/exceptions.html#RuntimeError "RuntimeError") when calling [`frame.clear()`](https://docs.python.org/3/reference/datamodel.html#frame.clear "frame.clear") on a suspended frame (as has always been the case for an executing frame). (Contributed by Irit Katriel in [gh-79932](https://github.com/python/cpython/issues/79932).)


### configparser[¶](https://docs.python.org/3/whatsnew/3.13.html#id3 "Link to this heading")
  * Remove the undocumented `LegacyInterpolation` class, deprecated in the docstring since Python 3.2, and at runtime since Python 3.11. (Contributed by Hugo van Kemenade in [gh-104886](https://github.com/python/cpython/issues/104886).)


### importlib.metadata[¶](https://docs.python.org/3/whatsnew/3.13.html#importlib-metadata "Link to this heading")
  * Remove deprecated subscript ([`__getitem__()`](https://docs.python.org/3/reference/datamodel.html#object.__getitem__ "object.__getitem__")) access for [EntryPoint](https://docs.python.org/3/library/importlib.metadata.html#entry-points) objects. (Contributed by Jason R. Coombs in [gh-113175](https://github.com/python/cpython/issues/113175).)


### locale[¶](https://docs.python.org/3/whatsnew/3.13.html#locale "Link to this heading")
  * Remove the `locale.resetlocale()` function, deprecated in Python 3.11. Use `locale.setlocale(locale.LC_ALL, "")` instead. (Contributed by Victor Stinner in [gh-104783](https://github.com/python/cpython/issues/104783).)


### opcode[¶](https://docs.python.org/3/whatsnew/3.13.html#opcode "Link to this heading")
  * Move `opcode.ENABLE_SPECIALIZATION` to `_opcode.ENABLE_SPECIALIZATION`. This field was added in 3.12, it was never documented, and is not intended for external use. (Contributed by Irit Katriel in [gh-105481](https://github.com/python/cpython/issues/105481).)
  * Remove `opcode.is_pseudo()`, `opcode.MIN_PSEUDO_OPCODE`, and `opcode.MAX_PSEUDO_OPCODE`, which were added in Python 3.12, but were neither documented nor exposed through [`dis`](https://docs.python.org/3/library/dis.html#module-dis "dis: Disassembler for Python bytecode."), and were not intended to be used externally. (Contributed by Irit Katriel in [gh-105481](https://github.com/python/cpython/issues/105481).)


### optparse[¶](https://docs.python.org/3/whatsnew/3.13.html#optparse "Link to this heading")
  * This module is no longer considered [soft deprecated](https://docs.python.org/3/glossary.html#term-soft-deprecated). While [`argparse`](https://docs.python.org/3/library/argparse.html#module-argparse "argparse: Command-line option and argument parsing library.") remains preferred for new projects that aren’t using a third party command line argument processing library, there are aspects of the way `argparse` works that mean the lower level `optparse` module may provide a better foundation for _writing_ argument processing libraries, and for implementing command line applications which adhere more strictly than `argparse` does to various Unix command line processing conventions that originate in the behaviour of the C `getopt()` function . (Contributed by Alyssa Coghlan and Serhiy Storchaka in [gh-126180](https://github.com/python/cpython/issues/126180).)


### pathlib[¶](https://docs.python.org/3/whatsnew/3.13.html#id4 "Link to this heading")
  * Remove the ability to use [`Path`](https://docs.python.org/3/library/pathlib.html#pathlib.Path "pathlib.Path") objects as context managers. This functionality was deprecated and has had no effect since Python 3.9. (Contributed by Barney Gale in [gh-83863](https://github.com/python/cpython/issues/83863).)