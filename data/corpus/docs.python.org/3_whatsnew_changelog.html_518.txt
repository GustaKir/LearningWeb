Title: Changes to LC_CTYPE Locale and Standard Streams Error Handling
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: The default LC_CTYPE locale at Python startup has been updated, and standard streams like sys.stdout now utilize the 'surrogateescape' error handler instead of 'strict' for the POSIX locale. Additionally, the handling of PYTHONIOENCODING has been altered to ignore ':' and improvements have been made in the initialization of standard stream encodings.
---

Previously, the LC_CTYPE locale was “C” at startup, but changed when calling setlocale(LC_CTYPE, “”) or setlocale(LC_ALL, “”).
  * [bpo-34485](https://bugs.python.org/issue?@action=redirect&bpo=34485): Standard streams like sys.stdout now use the “surrogateescape” error handler, instead of “strict”, on the POSIX locale (when the C locale is not coerced and the UTF-8 Mode is disabled).
  * [bpo-34485](https://bugs.python.org/issue?@action=redirect&bpo=34485): Fix the error handler of standard streams like sys.stdout: PYTHONIOENCODING=”:” is now ignored instead of setting the error handler to “strict”.
  * [bpo-34485](https://bugs.python.org/issue?@action=redirect&bpo=34485): Python now gets the locale encoding with C code to initialize the encoding of standard streams like sys.stdout. Moreover, the encoding is now initialized to the Python codec name to get a normalized encoding name and to ensure that the codec is loaded. The change avoids importing _bootlocale and _locale modules at startup by default.
  * [bpo-34527](https://bugs.python.org/issue?@action=redirect&bpo=34527): On FreeBSD, Py_DecodeLocale() and Py_EncodeLocale() now also forces the ASCII encoding if the LC_CTYPE locale is “POSIX”, not only if the LC_CTYPE locale is “C”.
  * [bpo-34527](https://bugs.python.org/issue?@action=redirect&bpo=34527): The UTF-8 Mode is now also enabled by the “POSIX” locale, not only by the “C” locale.
  * [bpo-34403](https://bugs.python.org/issue?@action=redirect&bpo=34403): On HP-UX with C or POSIX locale, sys.getfilesystemencoding() now returns “ascii” instead of “roman8” (when the UTF-8 Mode is disabled and the C locale is not coerced).
  * [bpo-34523](https://bugs.python.org/issue?@action=redirect&bpo=34523): The Python filesystem encoding is now read earlier during the Python initialization.
  * [bpo-12458](https://bugs.python.org/issue?@action=redirect&bpo=12458): Tracebacks show now correct line number for subexpressions in multiline expressions. Tracebacks show now the line number of the first line for multiline expressions instead of the line number of the last subexpression.
  * [bpo-34408](https://bugs.python.org/issue?@action=redirect&bpo=34408): Prevent a null pointer dereference and resource leakage in `PyInterpreterState_New()`.
  * [bpo-34400](https://bugs.python.org/issue?@action=redirect&bpo=34400): Fix undefined behavior in parsetok.c. Patch by Zackery Spytz.
  * [bpo-33073](https://bugs.python.org/issue?@action=redirect&bpo=33073): Added as_integer_ratio to ints to make them more interoperable with floats.
  * [bpo-34377](https://bugs.python.org/issue?@action=redirect&bpo=34377): Update valgrind suppression list to use `_PyObject_Free`/`_PyObject_Realloc` instead of `PyObject_Free`/`PyObject_Realloc`.
  * [bpo-34353](https://bugs.python.org/issue?@action=redirect&bpo=34353): Added the “socket” option in the `stat.filemode()` Python implementation to match the C implementation.
  * [bpo-34320](https://bugs.python.org/issue?@action=redirect&bpo=34320): Fix `dict(od)` didn’t copy iteration order of OrderedDict.
  * [bpo-34113](https://bugs.python.org/issue?@action=redirect&bpo=34113): Fixed crash on debug builds when opcode stack was adjusted with negative numbers. Patch by Constantin Petrisor.
  * [bpo-34100](https://bugs.python.org/issue?@action=redirect&bpo=34100): Compiler now merges constants in tuples and frozensets recursively. Code attributes like `co_names` are merged too.
  * [bpo-34151](https://bugs.python.org/issue?@action=redirect&bpo=34151): Performance of list concatenation, repetition and slicing operations is slightly improved. Patch by Sergey Fedoseev.
  * [bpo-34170](https://bugs.python.org/issue?@action=redirect&bpo=34170): -X dev: it is now possible to override the memory allocator using PYTHONMALLOC even if the developer mode is enabled.
  * [bpo-33237](https://bugs.python.org/issue?@action=redirect&bpo=33237): Improved [`AttributeError`](https://docs.python.org/3/library/exceptions.html#AttributeError "AttributeError") message for partially initialized module.
  * [bpo-34149](https://bugs.python.org/issue?@action=redirect&bpo=34149): Fix min and max functions to get default behavior when key is None.
  * [bpo-34125](https://bugs.python.org/issue?@action=redirect&bpo=34125): Profiling of unbound built-in methods now works when `**kwargs` is given.
  * [bpo-34141](https://bugs.python.org/issue?@action=redirect&bpo=34141): Optimized pickling atomic types (None, bool, int, float, bytes, str).
  * [bpo-34126](https://bugs.python.org/issue?@action=redirect&bpo=34126): Fix crashes when profiling certain invalid calls of unbound methods.