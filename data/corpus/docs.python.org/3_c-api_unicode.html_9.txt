Title: PyUnicode_AsUCS4 Function
URL: https://docs.python.org/3/c-api/unicode.html
Summary: The `PyUnicode_AsUCS4` function copies a Unicode string into a UCS4 buffer, with an option to include a null character. It returns NULL and raises a `SystemError` if the provided buffer size is smaller than the string length. This function has been part of the Stable ABI since version 3.7 and was added in version 3.3.
---

[Py_UCS4](https://docs.python.org/3/c-api/unicode.html#c.Py_UCS4 "Py_UCS4")*PyUnicode_AsUCS4([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*unicode, [Py_UCS4](https://docs.python.org/3/c-api/unicode.html#c.Py_UCS4 "Py_UCS4")*buffer, [Py_ssize_t](https://docs.python.org/3/c-api/intro.html#c.Py_ssize_t "Py_ssize_t")buflen, intcopy_null)[¶](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_AsUCS4 "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable) since version 3.7._
Copy the string _unicode_ into a UCS4 buffer, including a null character, if _copy_null_ is set. Returns `NULL` and sets an exception on error (in particular, a [`SystemError`](https://docs.python.org/3/library/exceptions.html#SystemError "SystemError") if _buflen_ is smaller than the length of _unicode_). _buffer_ is returned on success.
Added in version 3.3. 

[Py_UCS4](https://docs.python.org/3/c-api/unicode.html#c.Py_UCS4 "Py_UCS4")*PyUnicode_AsUCS4Copy([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*unicode)[¶](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_AsUCS4Copy "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable) since version 3.7._
Copy the string _unicode_ into a new UCS4 buffer that is allocated using [`PyMem_Malloc()`](https://docs.python.org/3/c-api/memory.html#c.PyMem_Malloc "PyMem_Malloc"). If this fails, `NULL` is returned with a [`MemoryError`](https://docs.python.org/3/library/exceptions.html#MemoryError "MemoryError") set. The returned buffer always has an extra null code point appended.
Added in version 3.3.
### Locale Encoding[¶](https://docs.python.org/3/c-api/unicode.html#locale-encoding "Link to this heading")
The current locale encoding can be used to decode text from the operating system. 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyUnicode_DecodeLocaleAndSize(constchar*str, [Py_ssize_t](https://docs.python.org/3/c-api/intro.html#c.Py_ssize_t "Py_ssize_t")length, constchar*errors)[¶](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_DecodeLocaleAndSize "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable) since version 3.7._
Decode a string from UTF-8 on Android and VxWorks, or from the current locale encoding on other platforms. The supported error handlers are `"strict"` and `"surrogateescape"` ([**PEP 383**](https://peps.python.org/pep-0383/)). The decoder uses `"strict"` error handler if _errors_ is `NULL`. _str_ must end with a null character but cannot contain embedded null characters.
Use [`PyUnicode_DecodeFSDefaultAndSize()`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_DecodeFSDefaultAndSize "PyUnicode_DecodeFSDefaultAndSize") to decode a string from the [filesystem encoding and error handler](https://docs.python.org/3/glossary.html#term-filesystem-encoding-and-error-handler).
This function ignores the [Python UTF-8 Mode](https://docs.python.org/3/library/os.html#utf8-mode).
See also
The [`Py_DecodeLocale()`](https://docs.python.org/3/c-api/sys.html#c.Py_DecodeLocale "Py_DecodeLocale") function.
Added in version 3.3.
Changed in version 3.7: The function now also uses the current locale encoding for the `surrogateescape` error handler, except on Android. Previously, [`Py_DecodeLocale()`](https://docs.python.org/3/c-api/sys.html#c.Py_DecodeLocale "Py_DecodeLocale") was used for the `surrogateescape`, and the current locale encoding was used for `strict`. 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyUnicode_DecodeLocale(constchar*str, constchar*errors)[¶](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_DecodeLocale "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable) since version 3.7._
Similar to [`PyUnicode_DecodeLocaleAndSize()`](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_DecodeLocaleAndSize "PyUnicode_DecodeLocaleAndSize"), but compute the string length using `strlen()`.
Added in version 3.3.