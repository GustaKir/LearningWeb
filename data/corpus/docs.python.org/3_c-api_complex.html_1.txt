Title: Complex Number C API Functions in Python
URL: https://docs.python.org/3/c-api/complex.html
Summary: This document describes the C API functions for handling complex numbers in Python, specifically the `Py_c_sum` for summing two complex numbers using the `Py_complex` representation and `Py_c_diff` for finding the difference between two complex numbers.
---

```


[Py_complex](https://docs.python.org/3/c-api/complex.html#c.Py_complex "Py_complex")_Py_c_sum([Py_complex](https://docs.python.org/3/c-api/complex.html#c.Py_complex "Py_complex")left, [Py_complex](https://docs.python.org/3/c-api/complex.html#c.Py_complex "Py_complex")right)[¶](https://docs.python.org/3/c-api/complex.html#c._Py_c_sum "Link to this definition")
    
Return the sum of two complex numbers, using the C [`Py_complex`](https://docs.python.org/3/c-api/complex.html#c.Py_complex "Py_complex") representation. 

[Py_complex](https://docs.python.org/3/c-api/complex.html#c.Py_complex "Py_complex")_Py_c_diff([Py_complex](https://docs.python.org/3/c-api/complex.html#c.Py_complex "Py_complex")left, [Py_complex](https://docs.python.org/3/c-api/complex.html#c.Py_complex "Py_complex")right)[¶](https://docs.python.org/3/c-api/complex.html#c._Py_c_diff "Link to this definition")
    
Return the difference between two complex numbers, using the C [`Py_complex`](https://docs.python.org/3/c-api/complex.html#c.Py_complex "Py_complex") representation. 

[Py_complex](https://docs.python.org/3/c-api/complex.html#c.Py_complex "Py_complex")_Py_c_neg([Py_complex](https://docs.python.org/3/c-api/complex.html#c.Py_complex "Py_complex")num)[¶](https://docs.python.org/3/c-api/complex.html#c._Py_c_neg "Link to this definition")
    
Return the negation of the complex number _num_ , using the C [`Py_complex`](https://docs.python.org/3/c-api/complex.html#c.Py_complex "Py_complex") representation. 

[Py_complex](https://docs.python.org/3/c-api/complex.html#c.Py_complex "Py_complex")_Py_c_prod([Py_complex](https://docs.python.org/3/c-api/complex.html#c.Py_complex "Py_complex")left, [Py_complex](https://docs.python.org/3/c-api/complex.html#c.Py_complex "Py_complex")right)[¶](https://docs.python.org/3/c-api/complex.html#c._Py_c_prod "Link to this definition")
    
Return the product of two complex numbers, using the C [`Py_complex`](https://docs.python.org/3/c-api/complex.html#c.Py_complex "Py_complex") representation. 

[Py_complex](https://docs.python.org/3/c-api/complex.html#c.Py_complex "Py_complex")_Py_c_quot([Py_complex](https://docs.python.org/3/c-api/complex.html#c.Py_complex "Py_complex")dividend, [Py_complex](https://docs.python.org/3/c-api/complex.html#c.Py_complex "Py_complex")divisor)[¶](https://docs.python.org/3/c-api/complex.html#c._Py_c_quot "Link to this definition")
    
Return the quotient of two complex numbers, using the C [`Py_complex`](https://docs.python.org/3/c-api/complex.html#c.Py_complex "Py_complex") representation.
If _divisor_ is null, this method returns zero and sets `errno` to `EDOM`. 

[Py_complex](https://docs.python.org/3/c-api/complex.html#c.Py_complex "Py_complex")_Py_c_pow([Py_complex](https://docs.python.org/3/c-api/complex.html#c.Py_complex "Py_complex")num, [Py_complex](https://docs.python.org/3/c-api/complex.html#c.Py_complex "Py_complex")exp)[¶](https://docs.python.org/3/c-api/complex.html#c._Py_c_pow "Link to this definition")
    
Return the exponentiation of _num_ by _exp_ , using the C [`Py_complex`](https://docs.python.org/3/c-api/complex.html#c.Py_complex "Py_complex") representation.
If _num_ is null and _exp_ is not a positive real number, this method returns zero and sets `errno` to `EDOM`.
## Complex Numbers as Python Objects[¶](https://docs.python.org/3/c-api/complex.html#complex-numbers-as-python-objects "Link to this heading") 

typePyComplexObject[¶](https://docs.python.org/3/c-api/complex.html#c.PyComplexObject "Link to this definition")
    
This subtype of [`PyObject`](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject") represents a Python complex number object. 

[PyTypeObject](https://docs.python.org/3/c-api/type.html#c.PyTypeObject "PyTypeObject")PyComplex_Type[¶](https://docs.python.org/3/c-api/complex.html#c.PyComplex_Type "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
This instance of [`PyTypeObject`](https://docs.python.org/3/c-api/type.html#c.PyTypeObject "PyTypeObject") represents the Python complex number type. It is the same object as [`complex`](https://docs.python.org/3/library/functions.html#complex "complex") in the Python layer. 

intPyComplex_Check([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*p)[¶](https://docs.python.org/3/c-api/complex.html#c.PyComplex_Check "Link to this definition")
    
Return true if its argument is a [`PyComplexObject`](https://docs.python.org/3/c-api/complex.html#c.PyComplexObject "PyComplexObject") or a subtype of [`PyComplexObject`](https://docs.python.org/3/c-api/complex.html#c.PyComplexObject "PyComplexObject"). This function always succeeds.