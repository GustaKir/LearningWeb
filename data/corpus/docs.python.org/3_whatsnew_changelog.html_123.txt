Title: Python 3.12.0 Changelog Summary
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This chunk highlights updates in Python 3.12.0, including fixes for blocking behavior in certain functions, optimizations for `pathlib`'s recursive wildcards, and various error-checking improvements in the `time`, `_socket`, and `_blake2` modules.
---

(This means that in some cases where in 3.12.0 this function would _incorrectly_ have returned immediately, it will now block; in particular, when there are no active connections but the server hasnâ€™t been closed yet.)
  * [gh-111259](https://github.com/python/cpython/issues/111259): Optimize recursive wildcards in [`pathlib`](https://docs.python.org/3/library/pathlib.html#module-pathlib "pathlib: Object-oriented filesystem paths").
  * [gh-111295](https://github.com/python/cpython/issues/111295): Fix [`time`](https://docs.python.org/3/library/time.html#module-time "time: Time access and conversions.") not checking for errors when initializing.
  * [gh-111253](https://github.com/python/cpython/issues/111253): Add error checking during `_socket` module init.
  * [gh-111251](https://github.com/python/cpython/issues/111251): Fix `_blake2` not checking for errors when initializing.
  * [gh-111233](https://github.com/python/cpython/issues/111233): Fix [`select`](https://docs.python.org/3/library/select.html#module-select "select: Wait for I/O completion on multiple streams.") not checking for errors when initializing.
  * [gh-111230](https://github.com/python/cpython/issues/111230): Fix [`ssl`](https://docs.python.org/3/library/ssl.html#module-ssl "ssl: TLS/SSL wrapper for socket objects") not checking for errors when initializing.
  * [gh-111174](https://github.com/python/cpython/issues/111174): Fix crash in [`io.BytesIO.getbuffer()`](https://docs.python.org/3/library/io.html#io.BytesIO.getbuffer "io.BytesIO.getbuffer") called repeatedly for empty BytesIO.
  * [gh-111187](https://github.com/python/cpython/issues/111187): Postpone removal version for locale.getdefaultlocale() to Python 3.15.
  * [gh-111159](https://github.com/python/cpython/issues/111159): Fix [`doctest`](https://docs.python.org/3/library/doctest.html#module-doctest "doctest: Test pieces of code within docstrings.") output comparison for exceptions with notes.
  * [gh-110910](https://github.com/python/cpython/issues/110910): Fix invalid state handling in [`asyncio.TaskGroup`](https://docs.python.org/3/library/asyncio-task.html#asyncio.TaskGroup "asyncio.TaskGroup") and [`asyncio.Timeout`](https://docs.python.org/3/library/asyncio-task.html#asyncio.Timeout "asyncio.Timeout"). They now raise proper RuntimeError if they are improperly used and are left in consistent state after this.
  * [gh-111092](https://github.com/python/cpython/issues/111092): Make turtledemo run without default root enabled.
  * [gh-110944](https://github.com/python/cpython/issues/110944): Support alias and convenience vars for [`pdb`](https://docs.python.org/3/library/pdb.html#module-pdb "pdb: The Python debugger for interactive interpreters.") completion
  * [gh-110745](https://github.com/python/cpython/issues/110745): Added _newline_ parameter to [`pathlib.Path.read_text()`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.read_text "pathlib.Path.read_text"). Patch by Junya Okabe.
  * [gh-84583](https://github.com/python/cpython/issues/84583): Make [`pdb`](https://docs.python.org/3/library/pdb.html#module-pdb "pdb: The Python debugger for interactive interpreters.") enter post-mortem mode even for [`SyntaxError`](https://docs.python.org/3/library/exceptions.html#SyntaxError "SyntaxError")
  * [gh-80675](https://github.com/python/cpython/issues/80675): Set `f_trace_lines = True` on all frames upon [`pdb.set_trace()`](https://docs.python.org/3/library/pdb.html#pdb.set_trace "pdb.set_trace")
  * [gh-110771](https://github.com/python/cpython/issues/110771): Expose the setup and cleanup portions of `asyncio.run_forever()` as the standalone methods `asyncio.run_forever_setup()` and `asyncio.run_forever_cleanup()`. This allows for tighter integration with GUI event loops.
  * [gh-110774](https://github.com/python/cpython/issues/110774): Support setting the [`asyncio.Runner`](https://docs.python.org/3/library/asyncio-runner.html#asyncio.Runner "asyncio.Runner") loop_factory kwarg in [`unittest.IsolatedAsyncioTestCase`](https://docs.python.org/3/library/unittest.html#unittest.IsolatedAsyncioTestCase "unittest.IsolatedAsyncioTestCase")
  * [gh-110392](https://github.com/python/cpython/issues/110392): Fix [`tty.setraw()`](https://docs.python.org/3/library/tty.html#tty.setraw "tty.setraw") and [`tty.setcbreak()`](https://docs.python.org/3/library/tty.html#tty.setcbreak "tty.setcbreak"): previously they returned partially modified list of the original tty attributes.