Title: NodeList Length and Python Sequence Support
URL: https://docs.python.org/3/library/xml.dom.html
Summary: This section discusses the `length` property of `NodeList`, which indicates the number of nodes. It highlights the requirement for `NodeList` implementations to support Python sequence methods like `__len__()` and `__getitem__()`, enabling iteration and the use of the `len()` function. Additionally, it notes that if a DOM implementation allows document modification, `__setitem__()` must also be supported.
---

NodeList.length[¶](https://docs.python.org/3/library/xml.dom.html#xml.dom.NodeList.length "Link to this definition")
    
The number of nodes in the sequence.
In addition, the Python DOM interface requires that some additional support is provided to allow `NodeList` objects to be used as Python sequences. All `NodeList` implementations must include support for [`__len__()`](https://docs.python.org/3/reference/datamodel.html#object.__len__ "object.__len__") and [`__getitem__()`](https://docs.python.org/3/reference/datamodel.html#object.__getitem__ "object.__getitem__"); this allows iteration over the `NodeList` in [`for`](https://docs.python.org/3/reference/compound_stmts.html#for) statements and proper support for the [`len()`](https://docs.python.org/3/library/functions.html#len "len") built-in function.
If a DOM implementation supports modification of the document, the `NodeList` implementation must also support the [`__setitem__()`](https://docs.python.org/3/reference/datamodel.html#object.__setitem__ "object.__setitem__") and [`__delitem__()`](https://docs.python.org/3/reference/datamodel.html#object.__delitem__ "object.__delitem__") methods.
### DocumentType Objects[¶](https://docs.python.org/3/library/xml.dom.html#documenttype-objects "Link to this heading")
Information about the notations and entities declared by a document (including the external subset if the parser uses it and can provide the information) is available from a `DocumentType` object. The `DocumentType` for a document is available from the `Document` object’s `doctype` attribute; if there is no `DOCTYPE` declaration for the document, the document’s `doctype` attribute will be set to `None` instead of an instance of this interface.
`DocumentType` is a specialization of `Node`, and adds the following attributes: 

DocumentType.publicId[¶](https://docs.python.org/3/library/xml.dom.html#xml.dom.DocumentType.publicId "Link to this definition")
    
The public identifier for the external subset of the document type definition. This will be a string or `None`. 

DocumentType.systemId[¶](https://docs.python.org/3/library/xml.dom.html#xml.dom.DocumentType.systemId "Link to this definition")
    
The system identifier for the external subset of the document type definition. This will be a URI as a string, or `None`. 

DocumentType.internalSubset[¶](https://docs.python.org/3/library/xml.dom.html#xml.dom.DocumentType.internalSubset "Link to this definition")
    
A string giving the complete internal subset from the document. This does not include the brackets which enclose the subset. If the document has no internal subset, this should be `None`. 

DocumentType.name[¶](https://docs.python.org/3/library/xml.dom.html#xml.dom.DocumentType.name "Link to this definition")
    
The name of the root element as given in the `DOCTYPE` declaration, if present. 

DocumentType.entities[¶](https://docs.python.org/3/library/xml.dom.html#xml.dom.DocumentType.entities "Link to this definition")
    
This is a `NamedNodeMap` giving the definitions of external entities. For entity names defined more than once, only the first definition is provided (others are ignored as required by the XML recommendation). This may be `None` if the information is not provided by the parser, or if no entities are defined. 

DocumentType.notations[¶](https://docs.python.org/3/library/xml.dom.html#xml.dom.DocumentType.notations "Link to this definition")
    
This is a `NamedNodeMap` giving the definitions of notations. For notation names defined more than once, only the first definition is provided (others are ignored as required by the XML recommendation). This may be `None` if the information is not provided by the parser, or if no notations are defined.
### Document Objects[¶](https://docs.python.org/3/library/xml.dom.html#document-objects "Link to this heading")
A `Document` represents an entire XML document, including its constituent elements, attributes, processing instructions, comments etc. Remember that it inherits properties from `Node`. 

Document.documentElement[¶](https://docs.python.org/3/library/xml.dom.html#xml.dom.Document.documentElement "Link to this definition")
    
The one and only root element of the document. 

Document.createElement(_tagName_)[¶](https://docs.python.org/3/library/xml.dom.html#xml.dom.Document.createElement "Link to this definition")
    
Create and return a new element node. The element is not inserted into the document when it is created. You need to explicitly insert it with one of the other methods such as `insertBefore()` or `appendChild()`.