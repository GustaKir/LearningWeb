Title: Glossary of Python Terms
URL: https://docs.python.org/3/glossary.html
Summary: This section defines two key Python concepts: 'package', which is a module that can contain submodules or subpackages, and 'parameter', which is a named entity in a function definition that specifies arguments the function can accept, detailing the five types of parameters.
---

package[¶](https://docs.python.org/3/glossary.html#term-package "Link to this term")
    
A Python [module](https://docs.python.org/3/glossary.html#term-module) which can contain submodules or recursively, subpackages. Technically, a package is a Python module with a `__path__` attribute.
See also [regular package](https://docs.python.org/3/glossary.html#term-regular-package) and [namespace package](https://docs.python.org/3/glossary.html#term-namespace-package). 

parameter[¶](https://docs.python.org/3/glossary.html#term-parameter "Link to this term")
    
A named entity in a [function](https://docs.python.org/3/glossary.html#term-function) (or method) definition that specifies an [argument](https://docs.python.org/3/glossary.html#term-argument) (or in some cases, arguments) that the function can accept. There are five kinds of parameter:
  * _positional-or-keyword_ : specifies an argument that can be passed either [positionally](https://docs.python.org/3/glossary.html#term-argument) or as a [keyword argument](https://docs.python.org/3/glossary.html#term-argument). This is the default kind of parameter, for example _foo_ and _bar_ in the following:
```
deffunc(foo, bar=None): ...

```



  * _positional-only_ : specifies an argument that can be supplied only by position. Positional-only parameters can be defined by including a `/` character in the parameter list of the function definition after them, for example _posonly1_ and _posonly2_ in the following:
```
deffunc(posonly1, posonly2, /, positional_or_keyword): ...

```



  * _keyword-only_ : specifies an argument that can be supplied only by keyword. Keyword-only parameters can be defined by including a single var-positional parameter or bare `*` in the parameter list of the function definition before them, for example _kw_only1_ and _kw_only2_ in the following:
```
deffunc(arg, *, kw_only1, kw_only2): ...

```

  * _var-positional_ : specifies that an arbitrary sequence of positional arguments can be provided (in addition to any positional arguments already accepted by other parameters). Such a parameter can be defined by prepending the parameter name with `*`, for example _args_ in the following:
```
deffunc(*args, **kwargs): ...