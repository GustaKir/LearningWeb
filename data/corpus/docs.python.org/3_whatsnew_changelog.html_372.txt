Title: Core and Builtins Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This document section details updates to Python's core and built-in functionalities, including the refactoring of `PyEval_` functions, the addition of a new simplifying function, and improvements to error messaging and exception handling.
---

### Core and Builtins[¶](https://docs.python.org/3/whatsnew/changelog.html#id319 "Link to this heading")
  * [bpo-42990](https://bugs.python.org/issue?@action=redirect&bpo=42990): Refactor the `PyEval_` family of functions.
    * An new function `_PyEval_Vector` is added to simplify calls to Python from C.
    * `_PyEval_EvalCodeWithName` is removed
    * `PyEval_EvalCodeEx` is retained as part of the API, but is not used internally
  * [bpo-38631](https://bugs.python.org/issue?@action=redirect&bpo=38631): Replace [`Py_FatalError()`](https://docs.python.org/3/c-api/sys.html#c.Py_FatalError "Py_FatalError") calls in the compiler with regular [`SystemError`](https://docs.python.org/3/library/exceptions.html#SystemError "SystemError") exceptions. Patch by Victor Stinner.
  * [bpo-42997](https://bugs.python.org/issue?@action=redirect&bpo=42997): Improve error message for missing “:” before blocks. Patch by Pablo Galindo.
  * [bpo-43017](https://bugs.python.org/issue?@action=redirect&bpo=43017): Improve error message in the parser when using un-parenthesised tuples in comprehensions. Patch by Pablo Galindo.
  * [bpo-42986](https://bugs.python.org/issue?@action=redirect&bpo=42986): Fix parser crash when reporting syntax errors in f-string with newlines. Patch by Pablo Galindo.
  * [bpo-40176](https://bugs.python.org/issue?@action=redirect&bpo=40176): Syntax errors for unterminated string literals now point to the start of the string instead of reporting EOF/EOL.
  * [bpo-42927](https://bugs.python.org/issue?@action=redirect&bpo=42927): The inline cache for `LOAD_ATTR` now also optimizes access to attributes defined by `__slots__`. This makes reading such attribute up to 30% faster.
  * [bpo-42864](https://bugs.python.org/issue?@action=redirect&bpo=42864): Improve error messages in the parser when parentheses are not closed. Patch by Pablo Galindo.
  * [bpo-42924](https://bugs.python.org/issue?@action=redirect&bpo=42924): Fix `bytearray` repetition incorrectly copying data from the start of the buffer, even if the data is offset within the buffer (e.g. after reassigning a slice at the start of the `bytearray` to a shorter byte string).
  * [bpo-42882](https://bugs.python.org/issue?@action=redirect&bpo=42882): Fix the `_PyUnicode_FromId()` function (_Py_IDENTIFIER(var) API) when [`Py_Initialize()`](https://docs.python.org/3/c-api/init.html#c.Py_Initialize "Py_Initialize") / [`Py_Finalize()`](https://docs.python.org/3/c-api/init.html#c.Py_Finalize "Py_Finalize") is called multiple times: preserve `_PyRuntime.unicode_ids.next_index` value.
  * [bpo-42827](https://bugs.python.org/issue?@action=redirect&bpo=42827): Fix a crash when working out the error line of a [`SyntaxError`](https://docs.python.org/3/library/exceptions.html#SyntaxError "SyntaxError") in some multi-line expressions.
  * [bpo-42823](https://bugs.python.org/issue?@action=redirect&bpo=42823): frame.f_lineno is correct even if frame.f_trace is set to True
  * [bpo-37324](https://bugs.python.org/issue?@action=redirect&bpo=37324): Remove deprecated aliases to [Collections Abstract Base Classes](https://docs.python.org/3/library/collections.abc.html#collections-abstract-base-classes) from the [`collections`](https://docs.python.org/3/library/collections.html#module-collections "collections: Container datatypes") module.
  * [bpo-41994](https://bugs.python.org/issue?@action=redirect&bpo=41994): Fixed possible leak in `import` when `sys.modules` is not a `dict`.
  * [bpo-27772](https://bugs.python.org/issue?@action=redirect&bpo=27772): In string formatting, preceding the _width_ field by `'0'` no longer affects the default alignment for strings.