Title: Python 3.6.5 Release Candidate 1
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: Released on March 13, 2018, Python 3.6.5 Release Candidate 1 includes crucial security fixes for buffer overrun in os.symlink on Windows and refactors regexes in difflib and poplib to prevent DOS vulnerabilities (CVE-2018-1060 and CVE-2018-1061).
---

## Python 3.6.5 release candidate 1[¶](https://docs.python.org/3/whatsnew/changelog.html#python-3-6-5-release-candidate-1 "Link to this heading")
_Release date: 2018-03-13_
### Security[¶](https://docs.python.org/3/whatsnew/changelog.html#id582 "Link to this heading")
  * [bpo-33001](https://bugs.python.org/issue?@action=redirect&bpo=33001): Minimal fix to prevent buffer overrun in os.symlink on Windows
  * [bpo-32981](https://bugs.python.org/issue?@action=redirect&bpo=32981): Regexes in difflib and poplib were vulnerable to catastrophic backtracking. These regexes formed potential DOS vectors (REDOS). They have been refactored. This resolves [**CVE 2018-1060**](https://www.cve.org/CVERecord?id=CVE-2018-1060) and [**CVE 2018-1061**](https://www.cve.org/CVERecord?id=CVE-2018-1061). Patch by Jamie Davis.


### Core and Builtins[¶](https://docs.python.org/3/whatsnew/changelog.html#id583 "Link to this heading")
  * [bpo-33026](https://bugs.python.org/issue?@action=redirect&bpo=33026): Fixed jumping out of “with” block by setting f_lineno.
  * [bpo-17288](https://bugs.python.org/issue?@action=redirect&bpo=17288): Prevent jumps from ‘return’ and ‘exception’ trace events.
  * [bpo-32889](https://bugs.python.org/issue?@action=redirect&bpo=32889): Update Valgrind suppression list to account for the rename of `Py_ADDRESS_IN_RANG` to `address_in_range`.
  * [bpo-32650](https://bugs.python.org/issue?@action=redirect&bpo=32650): Pdb and other debuggers dependent on bdb.py will correctly step over (next command) native coroutines. Patch by Pablo Galindo.
  * [bpo-32685](https://bugs.python.org/issue?@action=redirect&bpo=32685): Improve suggestion when the Python 2 form of print statement is either present on the same line as the header of a compound statement or else terminated by a semi-colon instead of a newline. Patch by Nitish Chandra.
  * [bpo-32583](https://bugs.python.org/issue?@action=redirect&bpo=32583): Fix possible crashing in builtin Unicode decoders caused by write out-of-bound errors when using customized decode error handlers.
  * [bpo-26163](https://bugs.python.org/issue?@action=redirect&bpo=26163): Improved frozenset() hash to create more distinct hash values when faced with datasets containing many similar values.
  * [bpo-27169](https://bugs.python.org/issue?@action=redirect&bpo=27169): The `__debug__` constant is now optimized out at compile time. This fixes also [bpo-22091](https://bugs.python.org/issue?@action=redirect&bpo=22091).
  * [bpo-32329](https://bugs.python.org/issue?@action=redirect&bpo=32329): `sys.flags.hash_randomization` is now properly set to 0 when hash randomization is turned off by `PYTHONHASHSEED=0`.
  * [bpo-30416](https://bugs.python.org/issue?@action=redirect&bpo=30416): The optimizer is now protected from spending much time doing complex calculations and consuming much memory for creating large constants in constant folding.
  * [bpo-18533](https://bugs.python.org/issue?@action=redirect&bpo=18533): `repr()` on a dict containing its own `values()` or `items()` no longer raises `RecursionError`; OrderedDict similarly. Instead, use `...`, as for other recursive structures. Patch by Ben North.
  * [bpo-32028](https://bugs.python.org/issue?@action=redirect&bpo=32028): Leading whitespace is now correctly ignored when generating suggestions for converting Py2 print statements to Py3 builtin print function calls. Patch by Sanyam Khurana.
  * [bpo-32137](https://bugs.python.org/issue?@action=redirect&bpo=32137): The repr of deeply nested dict now raises a RecursionError instead of crashing due to a stack overflow.