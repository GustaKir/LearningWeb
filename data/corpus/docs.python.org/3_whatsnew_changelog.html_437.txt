Title: Python 3 Change Log Highlights
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section includes recent updates in Python 3, such as the replacement of the `Py_FatalError()` function with a macro for better logging, and changes to the handling of extension module functions like `m_traverse`, `m_clear`, and `m_free` to prevent unnecessary calls when module state is unavailable.
---

/library/exceptions.html#SystemError "SystemError") instead of crashing when called with invalid base.
  * [bpo-39882](https://bugs.python.org/issue?@action=redirect&bpo=39882): The [`Py_FatalError()`](https://docs.python.org/3/c-api/sys.html#c.Py_FatalError "Py_FatalError") function is replaced with a macro which logs automatically the name of the current function, unless the `Py_LIMITED_API` macro is defined.
  * [bpo-39824](https://bugs.python.org/issue?@action=redirect&bpo=39824): Extension modules: [`m_traverse`](https://docs.python.org/3/c-api/module.html#c.PyModuleDef.m_traverse "PyModuleDef.m_traverse"), [`m_clear`](https://docs.python.org/3/c-api/module.html#c.PyModuleDef.m_clear "PyModuleDef.m_clear") and [`m_free`](https://docs.python.org/3/c-api/module.html#c.PyModuleDef.m_free "PyModuleDef.m_free") functions of [`PyModuleDef`](https://docs.python.org/3/c-api/module.html#c.PyModuleDef "PyModuleDef") are no longer called if the module state was requested but is not allocated yet. This is the case immediately after the module is created and before the module is executed ([`Py_mod_exec`](https://docs.python.org/3/c-api/module.html#c.Py_mod_exec "Py_mod_exec") function). More precisely, these functions are not called if [`m_size`](https://docs.python.org/3/c-api/module.html#c.PyModuleDef.m_size "PyModuleDef.m_size") is greater than 0 and the module state (as returned by [`PyModule_GetState()`](https://docs.python.org/3/c-api/module.html#c.PyModule_GetState "PyModule_GetState")) is `NULL`.
Extension modules without module state (`m_size <= 0`) are not affected.
  * [bpo-38913](https://bugs.python.org/issue?@action=redirect&bpo=38913): Fixed segfault in `Py_BuildValue()` called with a format containing “#” and undefined PY_SSIZE_T_CLEAN whwn an exception is set.
  * [bpo-38500](https://bugs.python.org/issue?@action=redirect&bpo=38500): Add a private API to get and set the frame evaluation function: add [`_PyInterpreterState_GetEvalFrameFunc()`](https://docs.python.org/3/c-api/init.html#c._PyInterpreterState_GetEvalFrameFunc "_PyInterpreterState_GetEvalFrameFunc") and [`_PyInterpreterState_SetEvalFrameFunc()`](https://docs.python.org/3/c-api/init.html#c._PyInterpreterState_SetEvalFrameFunc "_PyInterpreterState_SetEvalFrameFunc") C functions. The [`_PyFrameEvalFunction`](https://docs.python.org/3/c-api/init.html#c._PyFrameEvalFunction "_PyFrameEvalFunction") function type now takes a _tstate_ parameter.


## Python 3.9.0 alpha 4[¶](https://docs.python.org/3/whatsnew/changelog.html#python-3-9-0-alpha-4 "Link to this heading")
_Release date: 2020-02-25_
### Security[¶](https://docs.python.org/3/whatsnew/changelog.html#id399 "Link to this heading")
  * [bpo-39184](https://bugs.python.org/issue?@action=redirect&bpo=39184): Add audit events to functions in `fcntl`, `msvcrt`, `os`, `resource`, `shutil`, `signal` and `syslog`.
  * [bpo-39401](https://bugs.python.org/issue?@action=redirect&bpo=39401): Avoid unsafe DLL load at startup on Windows 7 and earlier.
  * [bpo-39184](https://bugs.python.org/issue?@action=redirect&bpo=39184): Add audit events to command execution functions in os and pty modules.