Title: Enhancements to Email Utilities and Command Module
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This update introduces tests and documentation improvements. Notably, the `email.utils.getaddresses()` and `email.utils.parseaddr()` functions now return `('', '')` tuples for more invalid email formats, introducing a new optional `_strict` parameter for behavior control. Additionally, the `cmd.Cmd.do_help()` method received updates. These changes also address vulnerabilities, specifically improving the fix for **CVE 2023-27043**.
---

Add tests and improve docs.
  * [gh-102988](https://github.com/python/cpython/issues/102988): [`email.utils.getaddresses()`](https://docs.python.org/3/library/email.utils.html#email.utils.getaddresses "email.utils.getaddresses") and [`email.utils.parseaddr()`](https://docs.python.org/3/library/email.utils.html#email.utils.parseaddr "email.utils.parseaddr") now return `('', '')` 2-tuples in more situations where invalid email addresses are encountered instead of potentially inaccurate values. Add optional _strict_ parameter to these two functions: use `strict=False` to get the old behavior, accept malformed inputs. `getattr(email.utils, 'supports_strict_parsing', False)` can be use to check if the _strict_ parameter is available. Patch by Thomas Dwyer and Victor Stinner to improve the [**CVE 2023-27043**](https://www.cve.org/CVERecord?id=CVE-2023-27043) fix.
  * [gh-52161](https://github.com/python/cpython/issues/52161): [`cmd.Cmd.do_help()`](https://docs.python.org/3/library/cmd.html#cmd.Cmd.do_help "cmd.Cmd.do_help") now cleans docstrings with [`inspect.cleandoc()`](https://docs.python.org/3/library/inspect.html#inspect.cleandoc "inspect.cleandoc") before writing them. Patch by Filip Łapkiewicz.
  * [gh-82300](https://github.com/python/cpython/issues/82300): Add `track` parameter to [`multiprocessing.shared_memory.SharedMemory`](https://docs.python.org/3/library/multiprocessing.shared_memory.html#multiprocessing.shared_memory.SharedMemory "multiprocessing.shared_memory.SharedMemory") that allows using shared memory blocks without having to register with the POSIX resource tracker that automatically releases them upon process exit.
  * [gh-110109](https://github.com/python/cpython/issues/110109): Add private `pathlib._PurePathBase` class: a base class for [`pathlib.PurePath`](https://docs.python.org/3/library/pathlib.html#pathlib.PurePath "pathlib.PurePath") that omits certain magic methods. It may be made public (along with `_PathBase`) in future.
  * [gh-109858](https://github.com/python/cpython/issues/109858): Protect [`zipfile`](https://docs.python.org/3/library/zipfile.html#module-zipfile "zipfile: Read and write ZIP-format archive files.") from “quoted-overlap” zipbomb. It now raises BadZipFile when try to read an entry that overlaps with other entry or central directory.
  * [gh-109786](https://github.com/python/cpython/issues/109786): Fix possible reference leaks and crash when re-enter the `__next__()` method of [`itertools.pairwise`](https://docs.python.org/3/library/itertools.html#itertools.pairwise "itertools.pairwise").
  * [gh-91539](https://github.com/python/cpython/issues/91539): Small (10 - 20%) and trivial performance improvement of `urllib.request.getproxies_environment()`, typically useful when there are many environment variables to go over.
  * [gh-103363](https://github.com/python/cpython/issues/103363): Add _follow_symlinks_ keyword-only argument to [`pathlib.Path.owner()`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.owner "pathlib.Path.owner") and [`group()`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.group "pathlib.Path.group"), defaulting to `True`.
  * [gh-102130](https://github.com/python/cpython/issues/102130): Support tab completion in [`cmd`](https://docs.python.org/3/library/cmd.html#module-cmd "cmd: Build line-oriented command interpreters.") for `editline`.
  * [gh-99437](https://github.com/python/cpython/issues/99437): [`runpy.run_path()`](https://docs.python.org/3/library/runpy.html#runpy.run_path "runpy.run_path") now decodes path-like objects, making sure __file__ and sys.argv[0] of the module being run are always strings.
  * [gh-104003](https://github.com/python/cpython/issues/104003): Add [`warnings.deprecated()`](https://docs.python.org/3/library/warnings.html#warnings.deprecated "warnings.deprecated"), a decorator to mark deprecated functions to static type checkers and to warn on usage of deprecated classes and functions. See [**PEP 702**](https://peps.python.org/pep-0702/). Patch by Jelle Zijlstra.
  * [gh-103708](https://github.com/python/cpython/issues/103708): Make hardcoded python name, a configurable parameter so that different implementations of python can override it instead of making huge diffs in sysconfig.py
  * [gh-66515](https://github.com/python/cpython/issues/66515): [`mailbox.MH`](https://docs.python.org/3/library/mailbox.html#mailbox.MH "mailbox.MH") now supports folders that do not contain a `.mh_sequences` file (e.g. Claws Mail IMAP-cache folders). Patch by Serhiy Storchaka.
  * [gh-83162](https://github.com/python/cpython/issues/83162): Renamed `re.error` to `PatternError` for clarity, and kept `re.error` for backward compatibility.