Title: Python Standard Library Overview
URL: https://docs.python.org/3/contents.html
Summary: This section covers various container data types in the Python standard library, including `ChainMap`, `Counter`, `deque`, and `defaultdict`, along with their commands and examples.
---

unctions](https://docs.python.org/3/library/calendar.html)
        * [Command-Line Usage](https://docs.python.org/3/library/calendar.html#command-line-usage)
      * [`collections` — Container datatypes](https://docs.python.org/3/library/collections.html)
        * [`ChainMap` objects](https://docs.python.org/3/library/collections.html#chainmap-objects)
          * [`ChainMap` Examples and Recipes](https://docs.python.org/3/library/collections.html#chainmap-examples-and-recipes)
        * [`Counter` objects](https://docs.python.org/3/library/collections.html#counter-objects)
        * [`deque` objects](https://docs.python.org/3/library/collections.html#deque-objects)
          * [`deque` Recipes](https://docs.python.org/3/library/collections.html#deque-recipes)
        * [`defaultdict` objects](https://docs.python.org/3/library/collections.html#defaultdict-objects)
          * [`defaultdict` Examples](https://docs.python.org/3/library/collections.html#defaultdict-examples)
        * [`namedtuple()` Factory Function for Tuples with Named Fields](https://docs.python.org/3/library/collections.html#namedtuple-factory-function-for-tuples-with-named-fields)
        * [`OrderedDict` objects](https://docs.python.org/3/library/collections.html#ordereddict-objects)
          * [`OrderedDict` Examples and Recipes](https://docs.python.org/3/library/collections.html#ordereddict-examples-and-recipes)
        * [`UserDict` objects](https://docs.python.org/3/library/collections.html#userdict-objects)
        * [`UserList` objects](https://docs.python.org/3/library/collections.html#userlist-objects)
        * [`UserString` objects](https://docs.python.org/3/library/collections.html#userstring-objects)
      * [`collections.abc` — Abstract Base Classes for Containers](https://docs.python.org/3/library/collections.abc.html)
        * [Collections Abstract Base Classes](https://docs.python.org/3/library/collections.abc.html#collections-abstract-base-classes)
        * [Collections Abstract Base Classes – Detailed Descriptions](https://docs.python.org/3/library/collections.abc.html#collections-abstract-base-classes-detailed-descriptions)
        * [Examples and Recipes](https://docs.python.org/3/library/collections.abc.html#examples-and-recipes)
      * [`heapq` — Heap queue algorithm](https://docs.python.org/3/library/heapq.html)
        * [Basic Examples](https://docs.python.org/3/library/heapq.html#basic-examples)
        * [Priority Queue Implementation Notes](https://docs.python.org/3/library/heapq.html#priority-queue-implementation-notes)
        * [Theory](https://docs.python.org/3/library/heapq.html#theory)
      * [`bisect` — Array bisection algorithm](https://docs.python.org/3/library/bisect.html)
        * [Performance Notes](https://docs.python.org/3/library/bisect.html#performance-notes)
        * [Searching Sorted Lists](https://docs.python.org/3/library/bisect.html#searching-sorted-lists)
        * [Examples](https://docs.python.org/3/library/bisect.html#examples)
      * [`array` — Efficient arrays of numeric values](https://docs.python.org/3/library/array.html)
      * [`weakref` — Weak references](https://docs.python.org/3/library/weakref.html)
        * [Weak Reference Objects](https://docs.python.org/3/library/weakref.html#weak-reference-objects)
        * [Example](https://docs.python.org/3/library/weakref.html#example)
        * [Finalizer Objects](https://docs.python.org/3/library/weakref.html#finalizer-objects)
        * [Comparing finalizers with `__del__()` methods](https://docs.python.org/3/library/weakref.html#comparing-finalizers-with-del-methods)
      * [`types` — Dynamic type creation and names for built-in types](https://docs.python.org/3/library/types.html)
        * [Dynamic Type Creation](https://docs.python.org/3/library/types.html#dynamic-type-creation)
        * [Standard Interpreter Types](https://docs.python.org/3/library/types.html#standard-interpreter-types)
        * [Additional Utility Classes and Functions](https://docs.python.org/3/library/types.html#additional-utility-classes-and-functions)
        * [Coroutine Utility Functions](https://docs.python.org/3/library/types.html#coroutine-utility-functions)
      * [`copy` — Shallow and deep copy operations](https://docs.python.org/3/library/copy.html)
      * [`pprint` — Data pretty printer](https://docs.python.org/3/library/pprint.html)
        * [Functions](https://docs.python.org/3/library/pprint.html#functions)
        * [PrettyPrinter Objects](https://docs.python.org/3/library/pprint.html#prettyprinter-objects)
        * [Example](https://docs.python.org/3/library/pprint.html#example)
      * [`reprlib` — Alternate `repr()` implementation](https://docs.python.org/3/library/reprlib.html)
        * [Repr Objects](https://docs.python.org/3/library/reprlib.html#repr-objects)
        * [Subclassing Repr Objects](https://docs.python.org/3/library/reprlib.html#subclassing-repr-objects)
      * [`enum` — Support for enumerations](https:/