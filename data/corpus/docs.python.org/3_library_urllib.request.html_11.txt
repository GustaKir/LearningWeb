Title: BaseHandler.default_open Method
URL: https://docs.python.org/3/library/urllib.request.html
Summary: The `default_open` method in `BaseHandler` is designed for subclasses to define if they want to handle all URLs. If implemented, it should return a file-like object or `None`, and will be invoked by the `OpenerDirector`.
---

BaseHandler.default_open(_req_)[¶](https://docs.python.org/3/library/urllib.request.html#urllib.request.BaseHandler.default_open "Link to this definition")
    
This method is _not_ defined in [`BaseHandler`](https://docs.python.org/3/library/urllib.request.html#urllib.request.BaseHandler "urllib.request.BaseHandler"), but subclasses should define it if they want to catch all URLs.
This method, if implemented, will be called by the parent [`OpenerDirector`](https://docs.python.org/3/library/urllib.request.html#urllib.request.OpenerDirector "urllib.request.OpenerDirector"). It should return a file-like object as described in the return value of the [`open()`](https://docs.python.org/3/library/urllib.request.html#urllib.request.OpenerDirector.open "urllib.request.OpenerDirector.open") method of [`OpenerDirector`](https://docs.python.org/3/library/urllib.request.html#urllib.request.OpenerDirector "urllib.request.OpenerDirector"), or `None`. It should raise [`URLError`](https://docs.python.org/3/library/urllib.error.html#urllib.error.URLError "urllib.error.URLError"), unless a truly exceptional thing happens (for example, [`MemoryError`](https://docs.python.org/3/library/exceptions.html#MemoryError "MemoryError") should not be mapped to [`URLError`](https://docs.python.org/3/library/urllib.error.html#urllib.error.URLError "urllib.error.URLError")).
This method will be called before any protocol-specific open method. 

BaseHandler.<protocol>_open(req)
    
This method is _not_ defined in [`BaseHandler`](https://docs.python.org/3/library/urllib.request.html#urllib.request.BaseHandler "urllib.request.BaseHandler"), but subclasses should define it if they want to handle URLs with the given protocol.
This method, if defined, will be called by the parent [`OpenerDirector`](https://docs.python.org/3/library/urllib.request.html#urllib.request.OpenerDirector "urllib.request.OpenerDirector"). Return values should be the same as for [`default_open()`](https://docs.python.org/3/library/urllib.request.html#urllib.request.BaseHandler.default_open "urllib.request.BaseHandler.default_open"). 

BaseHandler.unknown_open(_req_)[¶](https://docs.python.org/3/library/urllib.request.html#urllib.request.BaseHandler.unknown_open "Link to this definition")
    
This method is _not_ defined in [`BaseHandler`](https://docs.python.org/3/library/urllib.request.html#urllib.request.BaseHandler "urllib.request.BaseHandler"), but subclasses should define it if they want to catch all URLs with no specific registered handler to open it.
This method, if implemented, will be called by the [`parent`](https://docs.python.org/3/library/urllib.request.html#urllib.request.BaseHandler.parent "urllib.request.BaseHandler.parent") [`OpenerDirector`](https://docs.python.org/3/library/urllib.request.html#urllib.request.OpenerDirector "urllib.request.OpenerDirector"). Return values should be the same as for [`default_open()`](https://docs.python.org/3/library/urllib.request.html#urllib.request.BaseHandler.default_open "urllib.request.BaseHandler.default_open"). 

BaseHandler.http_error_default(_req_ , _fp_ , _code_ , _msg_ , _hdrs_)[¶](https://docs.python.org/3/library/urllib.request.html#urllib.request.BaseHandler.http_error_default "Link to this definition")
    
This method is _not_ defined in [`BaseHandler`](https://docs.python.org/3/library/urllib.request.html#urllib.request.BaseHandler "urllib.request.BaseHandler"), but subclasses should override it if they intend to provide a catch-all for otherwise unhandled HTTP errors. It will be called automatically by the [`OpenerDirector`](https://docs.python.org/3/library/urllib.request.html#urllib.request.OpenerDirector "urllib.request.OpenerDirector") getting the error, and should not normally be called in other circumstances.
_req_ will be a [`Request`](https://docs.python.org/3/library/urllib.request.html#urllib.request.Request "urllib.request.Request") object, _fp_ will be a file-like object with the HTTP error body, _code_ will be the three-digit code of the error, _msg_ will be the user-visible explanation of the code and _hdrs_ will be a mapping object with the headers of the error.
Return values and exceptions raised should be the same as those of [`urlopen()`](https://docs.python.org/3/library/urllib.request.html#urllib.request.urlopen "urllib.request.urlopen").