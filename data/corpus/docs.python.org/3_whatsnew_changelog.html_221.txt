Title: Python Core and Builtins Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section details various updates to Python's core and builtins, including the suppression of ImportError for invalid help() queries, fixes to bytecode source locations for comprehensions and assertions, and the addition of a unicode check in the _imp.create_builtin() function.
---

### Core and Builtins[¶](https://docs.python.org/3/whatsnew/changelog.html#id206 "Link to this heading")
  * [gh-98374](https://github.com/python/cpython/issues/98374): Suppress ImportError for invalid query for help() command. Patch by Donghee Na.
  * [gh-98461](https://github.com/python/cpython/issues/98461): Fix source location in bytecode for list, set and dict comprehensions as well as generator expressions.
  * [gh-98354](https://github.com/python/cpython/issues/98354): Added unicode check for `name` attribute of `spec` argument passed in `_imp.create_builtin()` function.
  * [gh-98398](https://github.com/python/cpython/issues/98398): Fix source location of ‘assert’ bytecodes.
  * [gh-98390](https://github.com/python/cpython/issues/98390): Fix location of sub-expressions of boolean expressions, by reducing their scope to that of the sub-expression.
  * [gh-98254](https://github.com/python/cpython/issues/98254): Modules from the standard library are now potentially suggested as part of the error messages displayed by the interpreter when an [`NameError`](https://docs.python.org/3/library/exceptions.html#NameError "NameError") is raised to the top level. Patch by Pablo Galindo
  * [gh-97997](https://github.com/python/cpython/issues/97997): Add running column offset to the tokenizer state to avoid calculating AST column information with pointer arithmetic.
  * [gh-97973](https://github.com/python/cpython/issues/97973): Modify the tokenizer to return all necessary information the parser needs to set location information in the AST nodes, so that the parser does not have to calculate those doing pointer arithmetic.
  * [gh-96078](https://github.com/python/cpython/issues/96078): [`os.sched_yield()`](https://docs.python.org/3/library/os.html#os.sched_yield "os.sched_yield") now release the GIL while calling sched_yield(2). Patch by Donghee Na.
  * [gh-97955](https://github.com/python/cpython/issues/97955): Migrate [`zoneinfo`](https://docs.python.org/3/library/zoneinfo.html#module-zoneinfo "zoneinfo: IANA time zone support") to Argument Clinic.
  * [gh-97912](https://github.com/python/cpython/issues/97912): The compiler now avoids quadratic behavior when finding which instructions should use the [`LOAD_FAST_CHECK`](https://docs.python.org/3/library/dis.html#opcode-LOAD_FAST_CHECK) opcode.
  * [gh-97002](https://github.com/python/cpython/issues/97002): Fix an issue where several frame objects could be backed by the same interpreter frame, possibly leading to corrupted memory and hard crashes of the interpreter.
  * [gh-97943](https://github.com/python/cpython/issues/97943): Bugfix: [`PyFunction_GetAnnotations()`](https://docs.python.org/3/c-api/function.html#c.PyFunction_GetAnnotations "PyFunction_GetAnnotations") should return a borrowed reference. It was returning a new reference.
  * [gh-97922](https://github.com/python/cpython/issues/97922): The Garbage Collector now runs only on the eval breaker mechanism of the Python bytecode evaluation loop instead on object allocations. The GC can also run when [`PyErr_CheckSignals()`](https://docs.python.org/3/c-api/exceptions.html#c.PyErr_CheckSignals "PyErr_CheckSignals") is called so C extensions that need to run for a long time without executing any Python code also have a chance to execute the GC periodically.
  * [gh-65961](https://github.com/python/cpython/issues/65961): When `__package__` is different than `__spec__.parent`, raise a `DeprecationWarning` instead of `ImportWarning`.
Also remove `importlib.util.set_package()` which was scheduled for removal.
  * [gh-97850](https://github.com/python/cpython/issues/97850): Long deprecated, `module_repr()` should now be completely eradicated.
  * [gh-86298](https://github.com/python/cpython/issues/86298): In cases where `warnings.warn_explicit()` consults the module’s loader, an `DeprecationWarning` is issued when `m.__loader__` differs from `m.__spec__.loader`.
  * [gh-97779](https://github.com/python/cpython/issues/97779): Ensure that all Python frame objects are backed by “complete” frames.
  * [gh-91052](https://github.com/python/cpython/issues/91052): Add API for subscribing to modification events on selected dictionaries.
  * [gh-97752](https://github.com/python/cpython/issues/97752): Fix possible data corruption or crashes when accessing the `f_back` member of newly-created generator or coroutine frames.
  * [gh-97591](https://github.com/python/cpython/issues/97591): Fixed a missing incref/decref pair in `Exception.__setstate__()`. Patch by Ofey Chan.
  * [gh-97670](https://github.com/python/cpython/issues/97670): Remove the `sys.getdxp()` function and the `Tools/scripts/analyze_dxp.py` script. DXP stands for “dynamic execution pairs”. They were related to `DYNAMIC_EXECUTION_PROFILE` and `DXPAIRS` macros which have been removed in Python 3.11. Python can now be built with [`./configure --enable-pystats`](https://docs.python.org/3/using/configure.html#cmdoption-enable-pystats) to gather statistics on Pytho