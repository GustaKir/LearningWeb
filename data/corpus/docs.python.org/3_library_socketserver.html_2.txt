Title: SocketServer Overview: UnixDatagramServer and Mix-ins
URL: https://docs.python.org/3/library/socketserver.html
Summary: This section discusses the hierarchy of server types in the Python `socketserver` module, specifically noting that `UnixDatagramServer` derives from `UDPServer`. It highlights the use of mix-in classes, `ForkingMixIn` and `ThreadingMixIn`, to create forking and threading versions of each server type.
---

```

Note that [`UnixDatagramServer`](https://docs.python.org/3/library/socketserver.html#socketserver.UnixDatagramServer "socketserver.UnixDatagramServer") derives from [`UDPServer`](https://docs.python.org/3/library/socketserver.html#socketserver.UDPServer "socketserver.UDPServer"), not from [`UnixStreamServer`](https://docs.python.org/3/library/socketserver.html#socketserver.UnixStreamServer "socketserver.UnixStreamServer") — the only difference between an IP and a Unix server is the address family. 

_class_ socketserver.ForkingMixIn[¶](https://docs.python.org/3/library/socketserver.html#socketserver.ForkingMixIn "Link to this definition")


_class_ socketserver.ThreadingMixIn[¶](https://docs.python.org/3/library/socketserver.html#socketserver.ThreadingMixIn "Link to this definition")
    
Forking and threading versions of each type of server can be created using these mix-in classes. For instance, [`ThreadingUDPServer`](https://docs.python.org/3/library/socketserver.html#socketserver.ThreadingUDPServer "socketserver.ThreadingUDPServer") is created as follows:
```
classThreadingUDPServer(ThreadingMixIn, UDPServer):
  pass

```

The mix-in class comes first, since it overrides a method defined in [`UDPServer`](https://docs.python.org/3/library/socketserver.html#socketserver.UDPServer "socketserver.UDPServer"). Setting the various attributes also changes the behavior of the underlying server mechanism.
[`ForkingMixIn`](https://docs.python.org/3/library/socketserver.html#socketserver.ForkingMixIn "socketserver.ForkingMixIn") and the Forking classes mentioned below are only available on POSIX platforms that support [`fork()`](https://docs.python.org/3/library/os.html#os.fork "os.fork"). 

block_on_close[¶](https://docs.python.org/3/library/socketserver.html#socketserver.ThreadingMixIn.block_on_close "Link to this definition")
    
[`ForkingMixIn.server_close`](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer.server_close "socketserver.BaseServer.server_close") waits until all child processes complete, except if [`block_on_close`](https://docs.python.org/3/library/socketserver.html#socketserver.ThreadingMixIn.block_on_close "socketserver.ThreadingMixIn.block_on_close") attribute is `False`.
[`ThreadingMixIn.server_close`](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer.server_close "socketserver.BaseServer.server_close") waits until all non-daemon threads complete, except if [`block_on_close`](https://docs.python.org/3/library/socketserver.html#socketserver.ThreadingMixIn.block_on_close "socketserver.ThreadingMixIn.block_on_close") attribute is `False`. 

daemon_threads[¶](https://docs.python.org/3/library/socketserver.html#socketserver.ThreadingMixIn.daemon_threads "Link to this definition")
    
For [`ThreadingMixIn`](https://docs.python.org/3/library/socketserver.html#socketserver.ThreadingMixIn "socketserver.ThreadingMixIn") use daemonic threads by setting [`ThreadingMixIn.daemon_threads`](https://docs.python.org/3/library/socketserver.html#socketserver.ThreadingMixIn.daemon_threads "socketserver.ThreadingMixIn.daemon_threads") to `True` to not wait until threads complete.
Changed in version 3.7: [`ForkingMixIn.server_close`](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer.server_close "socketserver.BaseServer.server_close") and [`ThreadingMixIn.server_close`](https://docs.python.org/3/library/socketserver.html#socketserver.BaseServer.server_close "socketserver.BaseServer.server_close") now waits until all child processes and non-daemonic threads complete. Add a new [`ForkingMixIn.block_on_close`](https://docs.python.org/3/library/socketserver.html#socketserver.ThreadingMixIn.block_on_close "socketserver.ThreadingMixIn.block_on_close") class attribute to opt-in for the pre-3.7 behaviour. 

_class_ socketserver.ForkingTCPServer[¶](https://docs.python.org/3/library/socketserver.html#socketserver.ForkingTCPServer "Link to this definition")


_class_ socketserver.ForkingUDPServer[¶](https://docs.python.org/3/library/socketserver.html#socketserver.ForkingUDPServer "Link to this definition")


_class_ socketserver.ThreadingTCPServer[¶](https://docs.python.org/3/library/socketserver.html#socketserver.ThreadingTCPServer "Link to this definition")


_class_ socketserver.ThreadingUDPServer[¶](https://docs.python.org/3/library/socketserver.html#socketserver.ThreadingUDPServer "Link to this definition")


_class_ socketserver.ForkingUnixStreamServer[¶](https://docs.python.org/3/library/socketserver.html#socketserver.ForkingUnixStreamServer "Link to this definition")


_class_ socketserver.ForkingUnixDatagramServer[¶](https://docs.python.org/3/library/socketserver.html#socketserver.ForkingUnixDatagramServer "Link to this definition")


_class_ socketserver.ThreadingUnixStreamServer[¶](https://docs.python.org/3/library/socketserver.html#socketserver.ThreadingUnixStreamServer "Link to this definition")