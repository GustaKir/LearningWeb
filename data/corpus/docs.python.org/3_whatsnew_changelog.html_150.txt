Title: Python 3 Change Log Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section includes updates on creating `NamedTuple` classes, removal of deprecated attributes, fixes for flag inversion in members, changes to `typing.Annotated`, and bug fixes in the `pickle` module.
---

To create a `NamedTuple` class with 0 fields, either use `class NT(NamedTuple): pass` or `NT = NamedTuple("NT", [])`.
  * [gh-105545](https://github.com/python/cpython/issues/105545): Remove deprecated in 3.11 `webbrowser.MacOSXOSAScript._name` attribute.
  * [gh-105497](https://github.com/python/cpython/issues/105497): Fix flag inversion when alias/mask members exist.
  * [gh-105509](https://github.com/python/cpython/issues/105509): [`typing.Annotated`](https://docs.python.org/3/library/typing.html#typing.Annotated "typing.Annotated") is now implemented as an instance of `typing._SpecialForm` rather than a class. This should have no user-facing impact for users of the [`typing`](https://docs.python.org/3/library/typing.html#module-typing "typing: Support for type hints \(see :pep:`484`\).") module public API.
  * [gh-105375](https://github.com/python/cpython/issues/105375): Fix bugs in [`pickle`](https://docs.python.org/3/library/pickle.html#module-pickle "pickle: Convert Python objects to streams of bytes and back.") where exceptions could be overwritten.
  * [gh-70303](https://github.com/python/cpython/issues/70303): Emit [`FutureWarning`](https://docs.python.org/3/library/exceptions.html#FutureWarning "FutureWarning") from [`pathlib.Path.glob()`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.glob "pathlib.Path.glob") and [`rglob()`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.rglob "pathlib.Path.rglob") if the given pattern ends with “`**`”. In a future Python release, patterns with this ending will match both files and directories. Add a trailing slash to only match directories.
  * [gh-105375](https://github.com/python/cpython/issues/105375): Fix a bug in [`sqlite3`](https://docs.python.org/3/library/sqlite3.html#module-sqlite3 "sqlite3: A DB-API 2.0 implementation using SQLite 3.x.") where an exception could be overwritten in the [`collation`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.create_collation "sqlite3.Connection.create_collation") callback.
  * [gh-105382](https://github.com/python/cpython/issues/105382): Remove _cafile_ , _capath_ and _cadefault_ parameters of the [`urllib.request.urlopen()`](https://docs.python.org/3/library/urllib.request.html#urllib.request.urlopen "urllib.request.urlopen") function, deprecated in Python 3.6. Patch by Victor Stinner.
  * [gh-105376](https://github.com/python/cpython/issues/105376): [`logging`](https://docs.python.org/3/library/logging.html#module-logging "logging: Flexible event logging system for applications."): Remove undocumented and untested `Logger.warn()` and `LoggerAdapter.warn()` methods and `logging.warn()` function. Deprecated since Python 3.3, they were aliases to the [`logging.Logger.warning()`](https://docs.python.org/3/library/logging.html#logging.Logger.warning "logging.Logger.warning") method, `logging.LoggerAdapter.warning()` method and [`logging.warning()`](https://docs.python.org/3/library/logging.html#logging.warning "logging.warning") function. Patch by Victor Stinner.
  * [gh-105332](https://github.com/python/cpython/issues/105332): Revert pickling method from by-name back to by-value.
  * [gh-104554](https://github.com/python/cpython/issues/104554): Add RTSPS scheme support in urllib.parse
  * [gh-105292](https://github.com/python/cpython/issues/105292): Add option to [`traceback.format_exception_only()`](https://docs.python.org/3/library/traceback.html#traceback.format_exception_only "traceback.format_exception_only") to recurse into the nested exception of a [`BaseExceptionGroup`](https://docs.python.org/3/library/exceptions.html#BaseExceptionGroup "BaseExceptionGroup").
  * [gh-105280](https://github.com/python/cpython/issues/105280): Fix bug where `isinstance([], collections.abc.Mapping)` could evaluate to `True` if garbage collection happened at the wrong time. The bug was caused by changes to the implementation of [`typing.Protocol`](https://docs.python.org/3/library/typing.html#typing.Protocol "typing.Protocol") in Python 3.12.
  * [gh-80480](https://github.com/python/cpython/issues/80480): [`array`](https://docs.python.org/3/library/array.html#module-array "array: Space efficient arrays of uniformly typed numeric values."): Add `'w'` typecode that represents `Py_UCS4`.
  * [gh-105239](https://github.com/python/cpython/issues/105239): Fix longstanding bug where `issubclass(object, typing.Protocol)` would evaluate to `True` in some edge cases. Patch by Alex Waygood.
  * [gh-104310](https://github.com/python/cpython/issues/104310): In the beta 1 release we added a utility function for extension module authors, to use when testing their module for support in multiple interpreters or under a per-interpreter GIL. The name of that function has changed from `allowing_all_extensions` to `_incompatible_extension_module_restrictions`.