Title: Changelog - Python Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This document outlines several bug fixes and enhancements in Python, including the addition of the _include_hidden_ parameter for glob() and iglob() functions to handle hidden files, improvements in concurrent.futures.wait() to prevent indefinite blocking on duplicate Futures, and updates in requirement spec generation for EntryPoint objects.
---

lated functionality to a package.
  * [bpo-37578](https://bugs.python.org/issue?@action=redirect&bpo=37578): Add _include_hidden_ parameter to [`glob()`](https://docs.python.org/3/library/glob.html#glob.glob "glob.glob") and [`iglob()`](https://docs.python.org/3/library/glob.html#glob.iglob "glob.iglob") to match hidden files and directories when using special characters like `*`, `**`, `?` and `[]`.
  * [bpo-20369](https://bugs.python.org/issue?@action=redirect&bpo=20369): [`concurrent.futures.wait()`](https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.wait "concurrent.futures.wait") no longer blocks forever when given duplicate Futures. Patch by Kumar Aditya.
  * [bpo-46105](https://bugs.python.org/issue?@action=redirect&bpo=46105): Honor spec when generating requirement specs with urls and extras (importlib_metadata 4.8.3).
  * [bpo-44893](https://bugs.python.org/issue?@action=redirect&bpo=44893): EntryPoint objects are no longer tuples. Recommended means to access is by attribute (‘.name’, ‘.group’) or accessor (‘.load()’). Access by index is deprecated and will raise deprecation warning.
  * [bpo-22815](https://bugs.python.org/issue?@action=redirect&bpo=22815): Print unexpected successes together with failures and errors in summary in [`unittest.TextTestResult`](https://docs.python.org/3/library/unittest.html#unittest.TextTestResult "unittest.TextTestResult").
  * [bpo-22047](https://bugs.python.org/issue?@action=redirect&bpo=22047): Calling `add_argument_group()` on an argument group is deprecated. Calling `add_argument_group()` or `add_mutually_exclusive_group()` on a mutually exclusive group is deprecated.
These features were never supported and do not always work correctly. The functions exist on the API by accident through inheritance and will be removed in the future.
  * [bpo-26952](https://bugs.python.org/issue?@action=redirect&bpo=26952): [`argparse`](https://docs.python.org/3/library/argparse.html#module-argparse "argparse: Command-line option and argument parsing library.") raises [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError "ValueError") with clear message when trying to render usage for an empty mutually exclusive group. Previously it raised a cryptic [`IndexError`](https://docs.python.org/3/library/exceptions.html#IndexError "IndexError").
  * [bpo-45615](https://bugs.python.org/issue?@action=redirect&bpo=45615): Functions in the [`traceback`](https://docs.python.org/3/library/traceback.html#module-traceback "traceback: Print or retrieve a stack traceback.") module raise [`TypeError`](https://docs.python.org/3/library/exceptions.html#TypeError "TypeError") rather than [`AttributeError`](https://docs.python.org/3/library/exceptions.html#AttributeError "AttributeError") when an exception argument is not of type [`BaseException`](https://docs.python.org/3/library/exceptions.html#BaseException "BaseException").
  * [bpo-16594](https://bugs.python.org/issue?@action=redirect&bpo=16594): Add allow allow_reuse_port flag in socketserver.
  * [bpo-27718](https://bugs.python.org/issue?@action=redirect&bpo=27718): Fix help for the [`signal`](https://docs.python.org/3/library/signal.html#module-signal "signal: Set handlers for asynchronous events.") module. Some functions (e.g. `signal()` and `getsignal()`) were omitted.
  * [bpo-46032](https://bugs.python.org/issue?@action=redirect&bpo=46032): The `registry()` method of [`functools.singledispatch()`](https://docs.python.org/3/library/functools.html#functools.singledispatch "functools.singledispatch") functions checks now the first argument or the first parameter annotation and raises a TypeError if it is not supported. Previously unsupported “types” were ignored (e.g. `typing.List[int]`) or caused an error at calling time (e.g. `list[int]`).
  * [bpo-46014](https://bugs.python.org/issue?@action=redirect&bpo=46014): Add ability to use `typing.Union` and `types.UnionType` as dispatch argument to `functools.singledispatch`. Patch provided by Yurii Karabas.
  * [bpo-27062](https://bugs.python.org/issue?@action=redirect&bpo=27062): Add `__all__` to [`inspect`](https://docs.python.org/3/library/inspect.html#module-inspect "inspect: Extract information and source code from live objects."), patch by Kumar Aditya.
  * [bpo-46018](https://bugs.python.org/issue?@action=redirect&bpo=46018): Ensure that [`math.expm1()`](https://docs.python.org/3/library/math.html#math.expm1 "math.expm1") does not raise on underflow.
  * [bpo-46016](https://bugs.python.org/issue?@action=redirect&bpo=46016): Adding `F_DUP2FD` and `F_DUP2FD_CLOEXEC` constants from FreeBSD into the [`fcntl`](https://docs.python.org/3/library/fcntl.html#module-fcntl "fcntl: The fcntl\(\) and ioctl\(\) system calls.