Title: Windows Updates in Python 3 Changelog
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section highlights key updates and improvements for Windows in Python 3, including the alignment of `DirEntry.stat().st_ctime` with `os.stat()`, performance enhancements for `os.getppid()`, and improvements to `time.monotonic()`.
---

### Windows[Â¶](https://docs.python.org/3/whatsnew/changelog.html#id87 "Link to this heading")
  * [gh-117267](https://github.com/python/cpython/issues/117267): Ensure `DirEntry.stat().st_ctime` behaves consistently with [`os.stat()`](https://docs.python.org/3/library/os.html#os.stat "os.stat") during the deprecation period of `st_ctime` by containing the same value as `st_birthtime`. After the deprecation period, `st_ctime` will be the metadata change time (or unavailable through `DirEntry`), and only `st_birthtime` will contain the creation time.
  * [gh-116195](https://github.com/python/cpython/issues/116195): Improves performance of [`os.getppid()`](https://docs.python.org/3/library/os.html#os.getppid "os.getppid") by using an alternate system API when available. Contributed by vxiiduu.
  * [gh-88494](https://github.com/python/cpython/issues/88494): On Windows, [`time.monotonic()`](https://docs.python.org/3/library/time.html#time.monotonic "time.monotonic") now uses the `QueryPerformanceCounter()` clock to have a resolution better than 1 us, instead of the `GetTickCount64()` clock which has a resolution of 15.6 ms. Patch by Victor Stinner.
  * [gh-116773](https://github.com/python/cpython/issues/116773): Fix instances of `<_overlapped.Overlapped object at 0xXXX> still has pending operation at deallocation, the process may crash`.
  * [gh-91227](https://github.com/python/cpython/issues/91227): Fix the asyncio ProactorEventLoop implementation so that sending a datagram to an address that is not listening does not prevent receiving any more datagrams.
  * [gh-115119](https://github.com/python/cpython/issues/115119): Switched from vendored `libmpdecimal` code to a separately-hosted external package in the `cpython-source-deps` repository when building the `_decimal` module.