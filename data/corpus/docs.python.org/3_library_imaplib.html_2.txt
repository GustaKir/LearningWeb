Title: imaplib.Time2Internaldate Function
URL: https://docs.python.org/3/library/imaplib.html
Summary: The imaplib.Time2Internaldate function converts various types of date_time inputs (such as epoch seconds, time tuples, datetime objects, or formatted strings) into an IMAP4 'INTERNALDATE' representation, formatted as 'DD-Mmm-YYYY HH:MM:SS +HHMM'.
---

imaplib.Time2Internaldate(_date_time_)[¶](https://docs.python.org/3/library/imaplib.html#imaplib.Time2Internaldate "Link to this definition")
    
Convert _date_time_ to an IMAP4 `INTERNALDATE` representation. The return value is a string in the form: `"DD-Mmm-YYYY HH:MM:SS +HHMM"` (including double-quotes). The _date_time_ argument can be a number (int or float) representing seconds since epoch (as returned by [`time.time()`](https://docs.python.org/3/library/time.html#time.time "time.time")), a 9-tuple representing local time an instance of [`time.struct_time`](https://docs.python.org/3/library/time.html#time.struct_time "time.struct_time") (as returned by [`time.localtime()`](https://docs.python.org/3/library/time.html#time.localtime "time.localtime")), an aware instance of [`datetime.datetime`](https://docs.python.org/3/library/datetime.html#datetime.datetime "datetime.datetime"), or a double-quoted string. In the last case, it is assumed to already be in the correct format.
Note that IMAP4 message numbers change as the mailbox changes; in particular, after an `EXPUNGE` command performs deletions the remaining messages are renumbered. So it is highly advisable to use UIDs instead, with the UID command.
At the end of the module, there is a test section that contains a more extensive example of usage.
See also
Documents describing the protocol, sources for servers implementing it, by the University of Washington’s IMAP Information Center can all be found at (**Source Code**) <https://github.com/uw-imap/imap> (**Not Maintained**).
## IMAP4 Objects[¶](https://docs.python.org/3/library/imaplib.html#imap4-objects "Link to this heading")
All IMAP4rev1 commands are represented by methods of the same name, either uppercase or lowercase.
All arguments to commands are converted to strings, except for `AUTHENTICATE`, and the last argument to `APPEND` which is passed as an IMAP4 literal. If necessary (the string contains IMAP4 protocol-sensitive characters and isn’t enclosed with either parentheses or double quotes) each string is quoted. However, the _password_ argument to the `LOGIN` command is always quoted. If you want to avoid having an argument string quoted (eg: the _flags_ argument to `STORE`) then enclose the string in parentheses (eg: `r'(\Deleted)'`).
Each command returns a tuple: `(type, [data, ...])` where _type_ is usually `'OK'` or `'NO'`, and _data_ is either the text from the command response, or mandated results from the command. Each _data_ is either a `bytes`, or a tuple. If a tuple, then the first part is the header of the response, and the second part contains the data (ie: ‘literal’ value).
The _message_set_ options to commands below is a string specifying one or more messages to be acted upon. It may be a simple message number (`'1'`), a range of message numbers (`'2:4'`), or a group of non-contiguous ranges separated by commas (`'1:3,6:9'`). A range can contain an asterisk to indicate an infinite upper bound (`'3:*'`).
An [`IMAP4`](https://docs.python.org/3/library/imaplib.html#imaplib.IMAP4 "imaplib.IMAP4") instance has the following methods: 

IMAP4.append(_mailbox_ , _flags_ , _date_time_ , _message_)[¶](https://docs.python.org/3/library/imaplib.html#imaplib.IMAP4.append "Link to this definition")
    
Append _message_ to named mailbox. 

IMAP4.authenticate(_mechanism_ , _authobject_)[¶](https://docs.python.org/3/library/imaplib.html#imaplib.IMAP4.authenticate "Link to this definition")
    
Authenticate command — requires response processing.
_mechanism_ specifies which authentication mechanism is to be used - it should appear in the instance variable `capabilities` in the form `AUTH=mechanism`.
_authobject_ must be a callable object:
```
data = authobject(response)