Title: C API Monitoring Functions
URL: https://docs.python.org/3/c-api/monitoring.html
Summary: This section describes the functions `PyMonitoring_FireCRaiseEvent` and `PyMonitoring_FireReraiseEvent`. The former triggers a `C_RAISE` event using the current exception, while the latter fires a `RERAISE` event with the current exception reinstated.
---

intPyMonitoring_FireCRaiseEvent([PyMonitoringState](https://docs.python.org/3/c-api/monitoring.html#c.PyMonitoringState "PyMonitoringState")*state, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*codelike, int32_toffset)[¶](https://docs.python.org/3/c-api/monitoring.html#c.PyMonitoring_FireCRaiseEvent "Link to this definition")
    
Fire a `C_RAISE` event with the current exception (as returned by [`PyErr_GetRaisedException()`](https://docs.python.org/3/c-api/exceptions.html#c.PyErr_GetRaisedException "PyErr_GetRaisedException")). 

intPyMonitoring_FireReraiseEvent([PyMonitoringState](https://docs.python.org/3/c-api/monitoring.html#c.PyMonitoringState "PyMonitoringState")*state, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*codelike, int32_toffset)[¶](https://docs.python.org/3/c-api/monitoring.html#c.PyMonitoring_FireReraiseEvent "Link to this definition")
    
Fire a `RERAISE` event with the current exception (as returned by [`PyErr_GetRaisedException()`](https://docs.python.org/3/c-api/exceptions.html#c.PyErr_GetRaisedException "PyErr_GetRaisedException")). 

intPyMonitoring_FireExceptionHandledEvent([PyMonitoringState](https://docs.python.org/3/c-api/monitoring.html#c.PyMonitoringState "PyMonitoringState")*state, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*codelike, int32_toffset)[¶](https://docs.python.org/3/c-api/monitoring.html#c.PyMonitoring_FireExceptionHandledEvent "Link to this definition")
    
Fire an `EXCEPTION_HANDLED` event with the current exception (as returned by [`PyErr_GetRaisedException()`](https://docs.python.org/3/c-api/exceptions.html#c.PyErr_GetRaisedException "PyErr_GetRaisedException")). 

intPyMonitoring_FirePyUnwindEvent([PyMonitoringState](https://docs.python.org/3/c-api/monitoring.html#c.PyMonitoringState "PyMonitoringState")*state, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*codelike, int32_toffset)[¶](https://docs.python.org/3/c-api/monitoring.html#c.PyMonitoring_FirePyUnwindEvent "Link to this definition")
    
Fire a `PY_UNWIND` event with the current exception (as returned by [`PyErr_GetRaisedException()`](https://docs.python.org/3/c-api/exceptions.html#c.PyErr_GetRaisedException "PyErr_GetRaisedException")). 

intPyMonitoring_FireStopIterationEvent([PyMonitoringState](https://docs.python.org/3/c-api/monitoring.html#c.PyMonitoringState "PyMonitoringState")*state, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*codelike, int32_toffset, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*value)[¶](https://docs.python.org/3/c-api/monitoring.html#c.PyMonitoring_FireStopIterationEvent "Link to this definition")
    
Fire a `STOP_ITERATION` event. If `value` is an instance of [`StopIteration`](https://docs.python.org/3/library/exceptions.html#StopIteration "StopIteration"), it is used. Otherwise, a new [`StopIteration`](https://docs.python.org/3/library/exceptions.html#StopIteration "StopIteration") instance is created with `value` as its argument.
## Managing the Monitoring State[¶](https://docs.python.org/3/c-api/monitoring.html#managing-the-monitoring-state "Link to this heading")
Monitoring states can be managed with the help of monitoring scopes. A scope would typically correspond to a python function.