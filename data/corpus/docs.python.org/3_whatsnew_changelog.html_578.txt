Title: Python 3.x Changelog Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section lists various updates and bug fixes in Python 3, including new features such as the `capture_output` argument for subprocess.run, improvements in the UUID module for FreeBSD/OpenBSD, and enhancements in the subprocess module's handling of KeyboardInterrupt.
---

ction=redirect&bpo=32102): New argument `capture_output` for subprocess.run
  * [bpo-32521](https://bugs.python.org/issue?@action=redirect&bpo=32521): glibc has removed Sun RPC. Use replacement libtirpc headers and library in nis module.
  * [bpo-32493](https://bugs.python.org/issue?@action=redirect&bpo=32493): UUID module fixes build for FreeBSD/OpenBSD
  * [bpo-32503](https://bugs.python.org/issue?@action=redirect&bpo=32503): Pickling with protocol 4 no longer creates too small frames.
  * [bpo-29237](https://bugs.python.org/issue?@action=redirect&bpo=29237): Create enum for pstats sorting options
  * [bpo-32454](https://bugs.python.org/issue?@action=redirect&bpo=32454): Add close(fd) function to the socket module.
  * [bpo-25942](https://bugs.python.org/issue?@action=redirect&bpo=25942): The subprocess module is now more graceful when handling a Ctrl-C KeyboardInterrupt during subprocess.call, subprocess.run, or a Popen context manager. It now waits a short amount of time for the child (presumed to have also gotten the SIGINT) to exit, before continuing the KeyboardInterrupt exception handling. This still includes a SIGKILL in the call() and run() APIs, but at least the child had a chance first.
  * [bpo-32433](https://bugs.python.org/issue?@action=redirect&bpo=32433): The hmac module now has hmac.digest(), which provides an optimized HMAC digest.
  * [bpo-28134](https://bugs.python.org/issue?@action=redirect&bpo=28134): Sockets now auto-detect family, type and protocol from file descriptor by default.
  * [bpo-32404](https://bugs.python.org/issue?@action=redirect&bpo=32404): Fix bug where [`datetime.datetime.fromtimestamp()`](https://docs.python.org/3/library/datetime.html#datetime.datetime.fromtimestamp "datetime.datetime.fromtimestamp") did not call __new__ in [`datetime.datetime`](https://docs.python.org/3/library/datetime.html#datetime.datetime "datetime.datetime") subclasses.
  * [bpo-32403](https://bugs.python.org/issue?@action=redirect&bpo=32403): Improved speed of [`datetime.date`](https://docs.python.org/3/library/datetime.html#datetime.date "datetime.date") and [`datetime.datetime`](https://docs.python.org/3/library/datetime.html#datetime.datetime "datetime.datetime") alternate constructors.
  * [bpo-32228](https://bugs.python.org/issue?@action=redirect&bpo=32228): Ensure that `truncate()` preserves the file position (as reported by `tell()`) after writes longer than the buffer size.
  * [bpo-32410](https://bugs.python.org/issue?@action=redirect&bpo=32410): Implement `loop.sock_sendfile` for asyncio event loop.
  * [bpo-22908](https://bugs.python.org/issue?@action=redirect&bpo=22908): Added seek and tell to the ZipExtFile class. This only works if the file object used to open the zipfile is seekable.
  * [bpo-32373](https://bugs.python.org/issue?@action=redirect&bpo=32373): Add socket.getblocking() method.
  * [bpo-32248](https://bugs.python.org/issue?@action=redirect&bpo=32248): Add [`importlib.resources`](https://docs.python.org/3/library/importlib.resources.html#module-importlib.resources "importlib.resources: Package resource reading, opening, and access") and [`importlib.abc.ResourceReader`](https://docs.python.org/3/library/importlib.html#importlib.abc.ResourceReader "importlib.abc.ResourceReader") as the unified API for reading resources contained within packages. Loaders wishing to support resource reading must implement the `get_resource_reader()` method. File-based and zipimport-based loaders both implement these APIs. [`importlib.abc.ResourceLoader`](https://docs.python.org/3/library/importlib.html#importlib.abc.ResourceLoader "importlib.abc.ResourceLoader") is deprecated in favor of these new APIs.
  * [bpo-32320](https://bugs.python.org/issue?@action=redirect&bpo=32320): collections.namedtuple() now supports default values.
  * [bpo-29302](https://bugs.python.org/issue?@action=redirect&bpo=29302): Add contextlib.AsyncExitStack. Patch by Alexander Mohr and Ilya Kulakov.
  * [bpo-31961](https://bugs.python.org/issue?@action=redirect&bpo=31961): _Removed in Python 3.7.0b2._ The _args_ argument of subprocess.Popen can now be a [path-like object](https://docs.python.org/3/glossary.html#term-path-like-object). If _args_ is given as a sequence, itâ€™s first element can now be a [path-like object](https://docs.python.org/3/glossary.html#term-path-like-object) as well.
  * [bpo-31900](https://bugs.python.org/issue?@action=redirect&bpo=31900): The [`locale.localeconv()`](https://docs.python.org/3/library/locale.html#locale.localeconv "locale.localeconv") function now sets temporarily the `LC_CTYPE` locale to the `LC_NUMERIC` locale to decode `decimal_point` and `thousands_sep` byte strings if they are non-ASCII or longer than 1 byte, and the `LC_NUMERIC` locale is different than the `LC_CTYPE` locale. This temporary change affects other threads.