Title: Python Development Changelog Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section highlights key updates in Python, including runtime initialization for PyDateTime_IsoCalendarDateType, pip and setuptools version updates, changes to the output type of operator.index(), and improvements in the webbrowser module for Wayland systems.
---

Patch by Sergey Fedoseev and Erlend E. Aasland.
  * [bpo-40777](https://bugs.python.org/issue?@action=redirect&bpo=40777): Initialize PyDateTime_IsoCalendarDateType.tp_base at run-time to avoid errors on some compilers.
  * [bpo-38488](https://bugs.python.org/issue?@action=redirect&bpo=38488): Update ensurepip to install pip 20.1.1 and setuptools 47.1.0.
  * [bpo-40792](https://bugs.python.org/issue?@action=redirect&bpo=40792): The result of [`operator.index()`](https://docs.python.org/3/library/operator.html#operator.index "operator.index") now always has exact type [`int`](https://docs.python.org/3/library/functions.html#int "int"). Previously, the result could have been an instance of a subclass of `int`.
  * [bpo-40767](https://bugs.python.org/issue?@action=redirect&bpo=40767): [`webbrowser`](https://docs.python.org/3/library/webbrowser.html#module-webbrowser "webbrowser: Easy-to-use controller for web browsers.") now properly finds the default browser in pure Wayland systems by checking the WAYLAND_DISPLAY environment variable. Patch contributed by Jérémy Attali.
  * [bpo-40791](https://bugs.python.org/issue?@action=redirect&bpo=40791): `hashlib.compare_digest()` uses OpenSSL’s `CRYPTO_memcmp()` function when OpenSSL is available.
  * [bpo-40795](https://bugs.python.org/issue?@action=redirect&bpo=40795): [`ctypes`](https://docs.python.org/3/library/ctypes.html#module-ctypes "ctypes: A foreign function library for Python.") module: If ctypes fails to convert the result of a callback or if a ctypes callback function raises an exception, sys.unraisablehook is now called with an exception set. Previously, the error was logged into stderr by [`PyErr_Print()`](https://docs.python.org/3/c-api/exceptions.html#c.PyErr_Print "PyErr_Print").
  * [bpo-16995](https://bugs.python.org/issue?@action=redirect&bpo=16995): Add [`base64.b32hexencode()`](https://docs.python.org/3/library/base64.html#base64.b32hexencode "base64.b32hexencode") and [`base64.b32hexdecode()`](https://docs.python.org/3/library/base64.html#base64.b32hexdecode "base64.b32hexdecode") to support the Base32 Encoding with Extended Hex Alphabet.
  * [bpo-30008](https://bugs.python.org/issue?@action=redirect&bpo=30008): Fix [`ssl`](https://docs.python.org/3/library/ssl.html#module-ssl "ssl: TLS/SSL wrapper for socket objects") code to be compatible with OpenSSL 1.1.x builds that use `no-deprecated` and `--api=1.1.0`.
  * [bpo-30064](https://bugs.python.org/issue?@action=redirect&bpo=30064): Fix asyncio `loop.sock_*` race condition issue
  * [bpo-40759](https://bugs.python.org/issue?@action=redirect&bpo=40759): Deprecate the `symbol` module.
  * [bpo-40756](https://bugs.python.org/issue?@action=redirect&bpo=40756): The second argument (extra) of `LoggerAdapter.__init__` now defaults to None.
  * [bpo-37129](https://bugs.python.org/issue?@action=redirect&bpo=37129): Add a new [`os.RWF_APPEND`](https://docs.python.org/3/library/os.html#os.RWF_APPEND "os.RWF_APPEND") flag for [`os.pwritev()`](https://docs.python.org/3/library/os.html#os.pwritev "os.pwritev").
  * [bpo-40737](https://bugs.python.org/issue?@action=redirect&bpo=40737): Fix possible reference leak for [`sqlite3`](https://docs.python.org/3/library/sqlite3.html#module-sqlite3 "sqlite3: A DB-API 2.0 implementation using SQLite 3.x.") initialization.
  * [bpo-40726](https://bugs.python.org/issue?@action=redirect&bpo=40726): Handle cases where the `end_lineno` is `None` on [`ast.increment_lineno()`](https://docs.python.org/3/library/ast.html#ast.increment_lineno "ast.increment_lineno").
  * [bpo-40698](https://bugs.python.org/issue?@action=redirect&bpo=40698): `distutils` upload creates SHA2-256 and Blake2b-256 digests. MD5 digests is skipped if platform blocks MD5.
  * [bpo-40695](https://bugs.python.org/issue?@action=redirect&bpo=40695): [`hashlib`](https://docs.python.org/3/library/hashlib.html#module-hashlib "hashlib: Secure hash and message digest algorithms.") no longer falls back to builtin hash implementations when OpenSSL provides a hash digest and the algorithm is blocked by security policy.
  * [bpo-9216](https://bugs.python.org/issue?@action=redirect&bpo=9216): [`hashlib.new()`](https://docs.python.org/3/library/hashlib.html#hashlib.new "hashlib.new") passed `usedforsecurity` to OpenSSL EVP constructor `_hashlib.new()`. test_hashlib and test_smtplib handle strict security policy better.
  * [bpo-40614](https://bugs.python.org/issue?@action=redirect&bpo=40614): [`ast.parse()`](https://docs.python.org/3/library/ast.html#ast.parse "ast.parse") will not parse self documenting expressions in f-strings when passed `feature_version` is less than `(3, 8)`.
  * [bpo-40626](https://bugs.python.org/issue?@action=redirect&bpo=40626): Add h5 file extension as MIME Type application/x-hdf5, as per HDF Group recommendation for HDF5 formatted data files.