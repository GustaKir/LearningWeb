Title: Python 3 Changelog Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section covers recent changes in Python, including the alteration of the `mode` attribute for `zipfile.ZipFile.open()` from 'r' to 'rb', improvements to `inspect.signature()` for handling parameter defaults, updates to the `atexit` module to honor all multiprocessing start methods, and enhancements to print colorized exceptions.
---

The value of the `mode` attribute of the readable file-like object returned by [`zipfile.ZipFile.open()`](https://docs.python.org/3/library/zipfile.html#zipfile.ZipFile.open "zipfile.ZipFile.open") was changed from `'r'` to `'rb'`.
  * [gh-82062](https://github.com/python/cpython/issues/82062): Fix [`inspect.signature()`](https://docs.python.org/3/library/inspect.html#inspect.signature "inspect.signature") to correctly handle parameter defaults on methods in extension modules that use names defined in the module namespace.
  * [gh-83856](https://github.com/python/cpython/issues/83856): Honor [`atexit`](https://docs.python.org/3/library/atexit.html#module-atexit "atexit: Register and execute cleanup functions.") for all [`multiprocessing`](https://docs.python.org/3/library/multiprocessing.html#module-multiprocessing "multiprocessing: Process-based parallelism.") start methods
  * [gh-113081](https://github.com/python/cpython/issues/113081): Print colorized exception just like built-in traceback in [`pdb`](https://docs.python.org/3/library/pdb.html#module-pdb "pdb: The Python debugger for interactive interpreters.")
  * [gh-112855](https://github.com/python/cpython/issues/112855): Speed up pickling of [`pathlib.PurePath`](https://docs.python.org/3/library/pathlib.html#pathlib.PurePath "pathlib.PurePath") objects. Patch by Barney Gale.
  * [gh-111744](https://github.com/python/cpython/issues/111744): Support opcode events in [`bdb`](https://docs.python.org/3/library/bdb.html#module-bdb "bdb: Debugger framework.")
  * [gh-109617](https://github.com/python/cpython/issues/109617): `ncurses`: fixed a crash that could occur on macOS 13 or earlier when Python was built with Apple Xcode 15â€™s SDK.
  * [gh-83151](https://github.com/python/cpython/issues/83151): Enabled arbitrary statements and evaluations in [`pdb`](https://docs.python.org/3/library/pdb.html#module-pdb "pdb: The Python debugger for interactive interpreters.") shell to access the local variables of the current frame, which made it possible for multi-scope code like generators or nested function to work.
  * [gh-110209](https://github.com/python/cpython/issues/110209): Add [`__class_getitem__()`](https://docs.python.org/3/reference/datamodel.html#object.__class_getitem__ "object.__class_getitem__") to [`types.GeneratorType`](https://docs.python.org/3/library/types.html#types.GeneratorType "types.GeneratorType") and [`types.CoroutineType`](https://docs.python.org/3/library/types.html#types.CoroutineType "types.CoroutineType") for type hinting purposes. Patch by James Hilton-Balfe.
  * [gh-108191](https://github.com/python/cpython/issues/108191): The [`types.SimpleNamespace`](https://docs.python.org/3/library/types.html#types.SimpleNamespace "types.SimpleNamespace") now accepts an optional positional argument which specifies initial values of attributes as a dict or an iterable of key-value pairs.
  * [gh-62090](https://github.com/python/cpython/issues/62090): Fix assertion errors caused by whitespace in metavars or `SUPPRESS`-ed groups in [`argparse`](https://docs.python.org/3/library/argparse.html#module-argparse "argparse: Command-line option and argument parsing library.") by simplifying usage formatting. Patch by Ali Hamdan.
  * [gh-102402](https://github.com/python/cpython/issues/102402): Adjust `logging.LogRecord` to use `time.time_ns()` and fix minor bug related to floating-point math.
  * [gh-100242](https://github.com/python/cpython/issues/100242): Bring pure Python implementation `functools.partial.__new__` more in line with the C-implementation by not just always checking for the presence of the attribute `'func'` on the first argument of `partial`. Instead, both the Python version and the C version perform an `isinstance(func, partial)` check on the first argument of `partial`.
  * [gh-99730](https://github.com/python/cpython/issues/99730): HEAD requests are no longer upgraded to GET request during redirects in urllib.
  * [gh-66410](https://github.com/python/cpython/issues/66410): Setting the `tkinter` module global `wantobjects` to `2` before creating the [`Tk`](https://docs.python.org/3/library/tkinter.html#tkinter.Tk "tkinter.Tk") object or call the `wantobjects()` method of the `Tk` object with argument `2` makes now arguments to callbacks registered in the [`tkinter`](https://docs.python.org/3/library/tkinter.html#module-tkinter "tkinter: Interface to Tcl/Tk for graphical user interfaces") module to be passed as various Python objects (`int`, `float`, `bytes`, `tuple`), depending on their internal representation in Tcl, instead of always `str`. `tkinter.wantobjects` is now set to `2` by default.
  * [bpo-40943](https://bugs.python.org/issue?@action=redirect&bpo=40943): Fix several IndexError when parse emails with truncated Message-ID, address, routes, etc, e.g.