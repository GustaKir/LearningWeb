Title: Element Attributes and Text Handling in ElementTree
URL: https://docs.python.org/3/library/xml.etree.elementtree.html
Summary: This section explains the handling of text and tail attributes within XML elements using ElementTree. It describes examples of element attributes, highlighting the use of the `itertext()` method for collecting inner text. Additionally, it details the `attrib` property, which is always a mutable dictionary containing the element's attributes, and notes potential internal representation variations by the ElementTree implementation.
---

```

the _a_ element has `None` for both _text_ and _tail_ attributes, the _b_ element has _text_ `"1"` and _tail_ `"4"`, the _c_ element has _text_ `"2"` and _tail_ `None`, and the _d_ element has _text_ `None` and _tail_ `"3"`.
To collect the inner text of an element, see [`itertext()`](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.itertext "xml.etree.ElementTree.Element.itertext"), for example `"".join(element.itertext())`.
Applications may store arbitrary objects in these attributes. 

attrib[¶](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.attrib "Link to this definition")
    
A dictionary containing the element’s attributes. Note that while the _attrib_ value is always a real mutable Python dictionary, an ElementTree implementation may choose to use another internal representation, and create the dictionary only if someone asks for it. To take advantage of such implementations, use the dictionary methods below whenever possible.
The following dictionary-like methods work on the element attributes. 

clear()[¶](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.clear "Link to this definition")
    
Resets an element. This function removes all subelements, clears all attributes, and sets the text and tail attributes to `None`. 

get(_key_ , _default =None_)[¶](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.get "Link to this definition")
    
Gets the element attribute named _key_.
Returns the attribute value, or _default_ if the attribute was not found. 

items()[¶](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.items "Link to this definition")
    
Returns the element attributes as a sequence of (name, value) pairs. The attributes are returned in an arbitrary order. 

keys()[¶](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.keys "Link to this definition")
    
Returns the elements attribute names as a list. The names are returned in an arbitrary order. 

set(_key_ , _value_)[¶](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.set "Link to this definition")
    
Set the attribute _key_ on the element to _value_.
The following methods work on the element’s children (subelements). 

append(_subelement_)[¶](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.append "Link to this definition")
    
Adds the element _subelement_ to the end of this element’s internal list of subelements. Raises [`TypeError`](https://docs.python.org/3/library/exceptions.html#TypeError "TypeError") if _subelement_ is not an [`Element`](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element "xml.etree.ElementTree.Element"). 

extend(_subelements_)[¶](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.extend "Link to this definition")
    
Appends _subelements_ from an iterable of elements. Raises [`TypeError`](https://docs.python.org/3/library/exceptions.html#TypeError "TypeError") if a subelement is not an [`Element`](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element "xml.etree.ElementTree.Element").
Added in version 3.2. 

find(_match_ , _namespaces =None_)[¶](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.find "Link to this definition")
    
Finds the first subelement matching _match_. _match_ may be a tag name or a [path](https://docs.python.org/3/library/xml.etree.elementtree.html#elementtree-xpath). Returns an element instance or `None`. _namespaces_ is an optional mapping from namespace prefix to full name. Pass `''` as prefix to move all unprefixed tag names in the expression into the given namespace. 

findall(_match_ , _namespaces =None_)[¶](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.findall "Link to this definition")
    
Finds all matching subelements, by tag name or [path](https://docs.python.org/3/library/xml.etree.elementtree.html#elementtree-xpath). Returns a list containing all matching elements in document order. _namespaces_ is an optional mapping from namespace prefix to full name. Pass `''` as prefix to move all unprefixed tag names in the expression into the given namespace.