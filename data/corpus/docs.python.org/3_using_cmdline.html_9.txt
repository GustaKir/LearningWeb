Title: Environment Variables PYTHONHOME and PYTHONPATH
URL: https://docs.python.org/3/using/cmdline.html
Summary: The document explains two environment variables: PYTHONHOME, which changes the location of the standard Python libraries by specifying directories for `_prefix_` and `_exec_prefix_`, and PYTHONPATH, which augments the search path for module files, similar to the shell's PATH format.
---

PYTHONHOME[¶](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONHOME "Link to this definition")
    
Change the location of the standard Python libraries. By default, the libraries are searched in `_prefix_/lib/python_version_`and` _exec_prefix_/lib/python_version_`, where` _prefix_`and` _exec_prefix_`are installation-dependent directories, both defaulting to`/usr/local`.
When [`PYTHONHOME`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONHOME) is set to a single directory, its value replaces both `_prefix_`and` _exec_prefix_`. To specify different values for these, set[`PYTHONHOME`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONHOME) to `_prefix_:_exec_prefix_`. 

PYTHONPATH[¶](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONPATH "Link to this definition")
    
Augment the default search path for module files. The format is the same as the shell’s `PATH`: one or more directory pathnames separated by [`os.pathsep`](https://docs.python.org/3/library/os.html#os.pathsep "os.pathsep") (e.g. colons on Unix or semicolons on Windows). Non-existent directories are silently ignored.
In addition to normal directories, individual [`PYTHONPATH`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONPATH) entries may refer to zipfiles containing pure Python modules (in either source or compiled form). Extension modules cannot be imported from zipfiles.
The default search path is installation dependent, but generally begins with `_prefix_/lib/python_version_`(see[`PYTHONHOME`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONHOME) above). It is _always_ appended to [`PYTHONPATH`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONPATH).
An additional directory will be inserted in the search path in front of [`PYTHONPATH`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONPATH) as described above under [Interface options](https://docs.python.org/3/using/cmdline.html#using-on-interface-options). The search path can be manipulated from within a Python program as the variable [`sys.path`](https://docs.python.org/3/library/sys.html#sys.path "sys.path"). 

PYTHONSAFEPATH[¶](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONSAFEPATH "Link to this definition")
    
If this is set to a non-empty string, don’t prepend a potentially unsafe path to [`sys.path`](https://docs.python.org/3/library/sys.html#sys.path "sys.path"): see the [`-P`](https://docs.python.org/3/using/cmdline.html#cmdoption-P) option for details.
Added in version 3.11. 

PYTHONPLATLIBDIR[¶](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONPLATLIBDIR "Link to this definition")
    
If this is set to a non-empty string, it overrides the [`sys.platlibdir`](https://docs.python.org/3/library/sys.html#sys.platlibdir "sys.platlibdir") value.
Added in version 3.9. 

PYTHONSTARTUP[¶](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONSTARTUP "Link to this definition")
    
If this is the name of a readable file, the Python commands in that file are executed before the first prompt is displayed in interactive mode. The file is executed in the same namespace where interactive commands are executed so that objects defined or imported in it can be used without qualification in the interactive session. You can also change the prompts [`sys.ps1`](https://docs.python.org/3/library/sys.html#sys.ps1 "sys.ps1") and [`sys.ps2`](https://docs.python.org/3/library/sys.html#sys.ps2 "sys.ps2") and the hook [`sys.__interactivehook__`](https://docs.python.org/3/library/sys.html#sys.__interactivehook__ "sys.__interactivehook__") in this file.
Raises an [auditing event](https://docs.python.org/3/library/sys.html#auditing) `cpython.run_startup` with the filename as the argument when called on startup. 

PYTHONOPTIMIZE[¶](https://docs.python.org/3/using/cmdline.html#envvar-PYTHONOPTIMIZE "Link to this definition")
    
If this is set to a non-empty string it is equivalent to specifying the [`-O`](https://docs.python.org/3/using/cmdline.html#cmdoption-O) option. If set to an integer, it is equivalent to specifying [`-O`](https://docs.python.org/3/using/cmdline.html#cmdoption-O) multiple times.