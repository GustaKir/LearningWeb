Title: EmailPolicy Class in Python's Email Library
URL: https://docs.python.org/3/library/email.policy.html
Summary: The `EmailPolicy` class adheres to current email RFCs, including RFC 5322 and RFC 2047. It introduces advanced header parsing and folding algorithms, utilizing `str` subclasses for headers with attributes based on field types. This ensures full compliance with email standards.
---

_class_ email.policy.EmailPolicy(_** kw_)[¶](https://docs.python.org/3/library/email.policy.html#email.policy.EmailPolicy "Link to this definition")
    
This concrete [`Policy`](https://docs.python.org/3/library/email.policy.html#email.policy.Policy "email.policy.Policy") provides behavior that is intended to be fully compliant with the current email RFCs. These include (but are not limited to) [**RFC 5322**](https://datatracker.ietf.org/doc/html/rfc5322.html), [**RFC 2047**](https://datatracker.ietf.org/doc/html/rfc2047.html), and the current MIME RFCs.
This policy adds new header parsing and folding algorithms. Instead of simple strings, headers are `str` subclasses with attributes that depend on the type of the field. The parsing and folding algorithm fully implement [**RFC 2047**](https://datatracker.ietf.org/doc/html/rfc2047.html) and [**RFC 5322**](https://datatracker.ietf.org/doc/html/rfc5322.html).
The default value for the [`message_factory`](https://docs.python.org/3/library/email.policy.html#email.policy.Policy.message_factory "email.policy.Policy.message_factory") attribute is [`EmailMessage`](https://docs.python.org/3/library/email.message.html#email.message.EmailMessage "email.message.EmailMessage").
In addition to the settable attributes listed above that apply to all policies, this policy adds the following additional attributes:
Added in version 3.6: [[1]](https://docs.python.org/3/library/email.policy.html#id2) 

utf8[¶](https://docs.python.org/3/library/email.policy.html#email.policy.EmailPolicy.utf8 "Link to this definition")
    
If `False`, follow [**RFC 5322**](https://datatracker.ietf.org/doc/html/rfc5322.html), supporting non-ASCII characters in headers by encoding them as “encoded words”. If `True`, follow [**RFC 6532**](https://datatracker.ietf.org/doc/html/rfc6532.html) and use `utf-8` encoding for headers. Messages formatted in this way may be passed to SMTP servers that support the `SMTPUTF8` extension ([**RFC 6531**](https://datatracker.ietf.org/doc/html/rfc6531.html)). 

refold_source[¶](https://docs.python.org/3/library/email.policy.html#email.policy.EmailPolicy.refold_source "Link to this definition")
    
If the value for a header in the `Message` object originated from a [`parser`](https://docs.python.org/3/library/email.parser.html#module-email.parser "email.parser: Parse flat text email messages to produce a message object structure.") (as opposed to being set by a program), this attribute indicates whether or not a generator should refold that value when transforming the message back into serialized form. The possible values are:
`none` | all source values use original folding  
---|---  
`long` | source values that have any line that is longer than `max_line_length` will be refolded  
`all` | all values are refolded.  
The default is `long`. 

header_factory[¶](https://docs.python.org/3/library/email.policy.html#email.policy.EmailPolicy.header_factory "Link to this definition")
    
A callable that takes two arguments, `name` and `value`, where `name` is a header field name and `value` is an unfolded header field value, and returns a string subclass that represents that header. A default `header_factory` (see [`headerregistry`](https://docs.python.org/3/library/email.headerregistry.html#module-email.headerregistry "email.headerregistry: Automatic Parsing of headers based on the field name")) is provided that supports custom parsing for the various address and date [**RFC 5322**](https://datatracker.ietf.org/doc/html/rfc5322.html) header field types, and the major MIME header field stypes. Support for additional custom parsing will be added in the future. 

content_manager[¶](https://docs.python.org/3/library/email.policy.html#email.policy.EmailPolicy.content_manager "Link to this definition")
    
An object with at least two methods: get_content and set_content. When the [`get_content()`](https://docs.python.org/3/library/email.message.html#email.message.EmailMessage.get_content "email.message.EmailMessage.get_content") or [`set_content()`](https://docs.python.org/3/library/email.message.html#email.message.EmailMessage.set_content "email.message.EmailMessage.set_content") method of an [`EmailMessage`](https://docs.python.org/3/library/email.message.html#email.message.EmailMessage "email.message.EmailMessage") object is called, it calls the corresponding method of this object, passing it the message object as its first argument, and any arguments or keywords that were passed to it as additional arguments. By default `content_manager` is set to [`raw_data_manager`](https://docs.python.org/3/library/email.contentmanager.html#email.contentmanager.raw_data_manager "email.contentmanager.raw_data_manager").
Added in version 3.4.
The class provides the following concrete implementations of the abstract methods of [`Policy`](https://docs.python.org/3/library/email.policy.html#email.policy.Policy "email.policy.Policy"):