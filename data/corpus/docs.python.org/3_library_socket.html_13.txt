Title: Socket Library - Fully Qualified Domain Name
URL: https://docs.python.org/3/library/socket.html
Summary: The `socket.getfqdn()` function returns a fully qualified domain name for a given name or the local host if none is provided. Changes in versions 3.2 and 3.7 include support for keyword arguments and adjustments for IPv6 multicast addresses.
---

```

Changed in version 3.2: parameters can now be passed using keyword arguments.
Changed in version 3.7: for IPv6 multicast addresses, string representing an address will not contain `%scope_id` part. 

socket.getfqdn([_name_])[¶](https://docs.python.org/3/library/socket.html#socket.getfqdn "Link to this definition")
    
Return a fully qualified domain name for _name_. If _name_ is omitted or empty, it is interpreted as the local host. To find the fully qualified name, the hostname returned by [`gethostbyaddr()`](https://docs.python.org/3/library/socket.html#socket.gethostbyaddr "socket.gethostbyaddr") is checked, followed by aliases for the host, if available. The first name which includes a period is selected. In case no fully qualified domain name is available and _name_ was provided, it is returned unchanged. If _name_ was empty or equal to `'0.0.0.0'`, the hostname from [`gethostname()`](https://docs.python.org/3/library/socket.html#socket.gethostname "socket.gethostname") is returned. 

socket.gethostbyname(_hostname_)[¶](https://docs.python.org/3/library/socket.html#socket.gethostbyname "Link to this definition")
    
Translate a host name to IPv4 address format. The IPv4 address is returned as a string, such as `'100.50.200.5'`. If the host name is an IPv4 address itself it is returned unchanged. See [`gethostbyname_ex()`](https://docs.python.org/3/library/socket.html#socket.gethostbyname_ex "socket.gethostbyname_ex") for a more complete interface. [`gethostbyname()`](https://docs.python.org/3/library/socket.html#socket.gethostbyname "socket.gethostbyname") does not support IPv6 name resolution, and [`getaddrinfo()`](https://docs.python.org/3/library/socket.html#socket.getaddrinfo "socket.getaddrinfo") should be used instead for IPv4/v6 dual stack support.
Raises an [auditing event](https://docs.python.org/3/library/sys.html#auditing) `socket.gethostbyname` with argument `hostname`.
[Availability](https://docs.python.org/3/library/intro.html#availability): not WASI. 

socket.gethostbyname_ex(_hostname_)[¶](https://docs.python.org/3/library/socket.html#socket.gethostbyname_ex "Link to this definition")
    
Translate a host name to IPv4 address format, extended interface. Return a 3-tuple `(hostname, aliaslist, ipaddrlist)` where _hostname_ is the host’s primary host name, _aliaslist_ is a (possibly empty) list of alternative host names for the same address, and _ipaddrlist_ is a list of IPv4 addresses for the same interface on the same host (often but not always a single address). [`gethostbyname_ex()`](https://docs.python.org/3/library/socket.html#socket.gethostbyname_ex "socket.gethostbyname_ex") does not support IPv6 name resolution, and [`getaddrinfo()`](https://docs.python.org/3/library/socket.html#socket.getaddrinfo "socket.getaddrinfo") should be used instead for IPv4/v6 dual stack support.
Raises an [auditing event](https://docs.python.org/3/library/sys.html#auditing) `socket.gethostbyname` with argument `hostname`.
[Availability](https://docs.python.org/3/library/intro.html#availability): not WASI. 

socket.gethostname()[¶](https://docs.python.org/3/library/socket.html#socket.gethostname "Link to this definition")
    
Return a string containing the hostname of the machine where the Python interpreter is currently executing.
Raises an [auditing event](https://docs.python.org/3/library/sys.html#auditing) `socket.gethostname` with no arguments.
Note: [`gethostname()`](https://docs.python.org/3/library/socket.html#socket.gethostname "socket.gethostname") doesn’t always return the fully qualified domain name; use [`getfqdn()`](https://docs.python.org/3/library/socket.html#socket.getfqdn "socket.getfqdn") for that.
[Availability](https://docs.python.org/3/library/intro.html#availability): not WASI. 

socket.gethostbyaddr(_ip_address_)[¶](https://docs.python.org/3/library/socket.html#socket.gethostbyaddr "Link to this definition")
    
Return a 3-tuple `(hostname, aliaslist, ipaddrlist)` where _hostname_ is the primary host name responding to the given _ip_address_ , _aliaslist_ is a (possibly empty) list of alternative host names for the same address, and _ipaddrlist_ is a list of IPv4/v6 addresses for the same interface on the same host (most likely containing only a single address). To find the fully qualified domain name, use the function [`getfqdn()`](https://docs.python.org/3/library/socket.html#socket.getfqdn "socket.getfqdn"). [`gethostbyaddr()`](https://docs.python.org/3/library/socket.html#socket.gethostbyaddr "socket.gethostbyaddr") supports both IPv4 and IPv6.
Raises an [auditing event](https://docs.python.org/3/library/sys.html#auditing) `socket.gethostbyaddr` with argument `ip_address`.
[Availability](https://docs.python.org/3/library/intro.html#availability): not WASI.