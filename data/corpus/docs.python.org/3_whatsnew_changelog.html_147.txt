Title: Python 3 Changelog Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This chunk summarizes recent patches and optimizations made in Python 3, including regex enhancements, selector overhead reductions, removal of reference cycles in error handling, the introduction of a new `pathmod` attribute in `pathlib`, and further improvements.
---

Patch by Egor Eliseev.
  * [gh-106566](https://github.com/python/cpython/issues/106566): Optimize `(?!)` (pattern which always fails) in regular expressions.
  * [gh-106554](https://github.com/python/cpython/issues/106554): [`selectors`](https://docs.python.org/3/library/selectors.html#module-selectors "selectors: High-level I/O multiplexing."): Reduce Selector overhead by using a `dict.get()` to lookup file descriptors.
  * [gh-106558](https://github.com/python/cpython/issues/106558): Remove ref cycle in callers of `convert_to_error()` by deleting `result` from scope in a `finally` block.
  * [gh-100502](https://github.com/python/cpython/issues/100502): Add `pathlib.PurePath.pathmod` class attribute that stores the implementation of [`os.path`](https://docs.python.org/3/library/os.path.html#module-os.path "os.path: Operations on pathnames.") used for low-level path operations: either `posixpath` or `ntpath`.
  * [gh-106527](https://github.com/python/cpython/issues/106527): Reduce overhead to add and remove [`asyncio`](https://docs.python.org/3/library/asyncio.html#module-asyncio "asyncio: Asynchronous I/O.") readers and writers.
  * [gh-106524](https://github.com/python/cpython/issues/106524): Fix crash in `_sre.template()` with templates containing invalid group indices.
  * [gh-106531](https://github.com/python/cpython/issues/106531): Removed `_legacy` and the names it provided from `importlib.resources`: `Resource`, `contents`, `is_resource`, `open_binary`, `open_text`, `path`, `read_binary`, and `read_text`.
  * [gh-106052](https://github.com/python/cpython/issues/106052): [`re`](https://docs.python.org/3/library/re.html#module-re "re: Regular expression operations.") module: fix the matching of possessive quantifiers in the case of a subpattern containing backtracking.
  * [gh-106510](https://github.com/python/cpython/issues/106510): Improve debug output for atomic groups in regular expressions.
  * [gh-106503](https://github.com/python/cpython/issues/106503): Fix ref cycle in `asyncio._SelectorSocketTransport` by removing `_write_ready` in `close`.
  * [gh-105497](https://github.com/python/cpython/issues/105497): Fix flag mask inversion when unnamed flags exist.
  * [gh-90876](https://github.com/python/cpython/issues/90876): Prevent `multiprocessing.spawn` from failing to _import_ in environments where `sys.executable` is `None`. This regressed in 3.11 with the addition of support for path-like objects in multiprocessing.
  * [gh-106403](https://github.com/python/cpython/issues/106403): Instances of [`typing.TypeVar`](https://docs.python.org/3/library/typing.html#typing.TypeVar "typing.TypeVar"), [`typing.ParamSpec`](https://docs.python.org/3/library/typing.html#typing.ParamSpec "typing.ParamSpec"), [`typing.ParamSpecArgs`](https://docs.python.org/3/library/typing.html#typing.ParamSpecArgs "typing.ParamSpecArgs"), [`typing.ParamSpecKwargs`](https://docs.python.org/3/library/typing.html#typing.ParamSpecKwargs "typing.ParamSpecKwargs"), and [`typing.TypeVarTuple`](https://docs.python.org/3/library/typing.html#typing.TypeVarTuple "typing.TypeVarTuple") once again support weak references, fixing a regression introduced in Python 3.12.0 beta 1. Patch by Jelle Zijlstra.
  * [gh-89812](https://github.com/python/cpython/issues/89812): Add private `pathlib._PathBase` class, which provides experimental support for virtual filesystems, and may be made public in a future version of Python.
  * [gh-106292](https://github.com/python/cpython/issues/106292): Check for an instance-dict cached value in the `__get__()` method of [`functools.cached_property()`](https://docs.python.org/3/library/functools.html#functools.cached_property "functools.cached_property"). This better matches the pre-3.12 behavior and improves compatibility for users subclassing [`functools.cached_property()`](https://docs.python.org/3/library/functools.html#functools.cached_property "functools.cached_property") and adding a `__set__()` method.
  * [gh-106350](https://github.com/python/cpython/issues/106350): Detect possible memory allocation failure in the libtommath function `mp_init()` used by the `_tkinter` module.
  * [gh-106330](https://github.com/python/cpython/issues/106330): Fix incorrect matching of empty paths in [`pathlib.PurePath.match()`](https://docs.python.org/3/library/pathlib.html#pathlib.PurePath.match "pathlib.PurePath.match"). This bug was introduced in Python 3.12.0 beta 1.
  * [gh-106309](https://github.com/python/cpython/issues/106309): Deprecate [`typing.no_type_check_decorator()`](https://docs.python.org/3/library/typing.html#typing.no_type_check_decorator "typing.no_type_check_decorator"). No major type checker ever added support for this decorator.