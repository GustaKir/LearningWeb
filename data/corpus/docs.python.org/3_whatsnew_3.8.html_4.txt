Title: Python 3.8 New Features
URL: https://docs.python.org/3/whatsnew/3.8.html
Summary: This section highlights new features in Python 3.8, including the `=` specifier for f-strings that displays full expressions, and introduces PEPs 578 and 587, which introduce runtime audit hooks and new initialization configurations for Python.
---

```

The `=` specifier will display the whole expression so that calculations can be shown:
>>>```
>>> print(f'{theta=}{cos(radians(theta))=:.3f}')
theta=30 cos(radians(theta))=0.866

```

(Contributed by Eric V. Smith and Larry Hastings in [bpo-36817](https://bugs.python.org/issue?@action=redirect&bpo=36817).)
### PEP 578: Python Runtime Audit Hooks[¶](https://docs.python.org/3/whatsnew/3.8.html#pep-578-python-runtime-audit-hooks "Link to this heading")
The PEP adds an Audit Hook and Verified Open Hook. Both are available from Python and native code, allowing applications and frameworks written in pure Python code to take advantage of extra notifications, while also allowing embedders or system administrators to deploy builds of Python where auditing is always enabled.
See [**PEP 578**](https://peps.python.org/pep-0578/) for full details.
### PEP 587: Python Initialization Configuration[¶](https://docs.python.org/3/whatsnew/3.8.html#pep-587-python-initialization-configuration "Link to this heading")
The [**PEP 587**](https://peps.python.org/pep-0587/) adds a new C API to configure the Python Initialization providing finer control on the whole configuration and better error reporting.
New structures:
  * [`PyConfig`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig "PyConfig")
  * [`PyPreConfig`](https://docs.python.org/3/c-api/init_config.html#c.PyPreConfig "PyPreConfig")
  * [`PyStatus`](https://docs.python.org/3/c-api/init_config.html#c.PyStatus "PyStatus")
  * [`PyWideStringList`](https://docs.python.org/3/c-api/init_config.html#c.PyWideStringList "PyWideStringList")


New functions:
  * [`PyConfig_Clear()`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig_Clear "PyConfig_Clear")
  * [`PyConfig_InitIsolatedConfig()`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig_InitIsolatedConfig "PyConfig_InitIsolatedConfig")
  * [`PyConfig_InitPythonConfig()`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig_InitPythonConfig "PyConfig_InitPythonConfig")
  * [`PyConfig_Read()`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig_Read "PyConfig_Read")
  * [`PyConfig_SetArgv()`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig_SetArgv "PyConfig_SetArgv")
  * [`PyConfig_SetBytesArgv()`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig_SetBytesArgv "PyConfig_SetBytesArgv")
  * [`PyConfig_SetBytesString()`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig_SetBytesString "PyConfig_SetBytesString")
  * [`PyConfig_SetString()`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig_SetString "PyConfig_SetString")
  * [`PyPreConfig_InitIsolatedConfig()`](https://docs.python.org/3/c-api/init_config.html#c.PyPreConfig_InitIsolatedConfig "PyPreConfig_InitIsolatedConfig")
  * [`PyPreConfig_InitPythonConfig()`](https://docs.python.org/3/c-api/init_config.html#c.PyPreConfig_InitPythonConfig "PyPreConfig_InitPythonConfig")
  * [`PyStatus_Error()`](https://docs.python.org/3/c-api/init_config.html#c.PyStatus_Error "PyStatus_Error")
  * [`PyStatus_Exception()`](https://docs.python.org/3/c-api/init_config.html#c.PyStatus_Exception "PyStatus_Exception")
  * [`PyStatus_Exit()`](https://docs.python.org/3/c-api/init_config.html#c.PyStatus_Exit "PyStatus_Exit")
  * [`PyStatus_IsError()`](https://docs.python.org/3/c-api/init_config.html#c.PyStatus_IsError "PyStatus_IsError")
  * [`PyStatus_IsExit()`](https://docs.python.org/3/c-api/init_config.html#c.PyStatus_IsExit "PyStatus_IsExit")
  * [`PyStatus_NoMemory()`](https://docs.python.org/3/c-api/init_config.html#c.PyStatus_NoMemory "PyStatus_NoMemory")
  * [`PyStatus_Ok()`](https://docs.python.org/3/c-api/init_config.html#c.PyStatus_Ok "PyStatus_Ok")
  * [`PyWideStringList_Append()`](https://docs.python.org/3/c-api/init_config.html#c.PyWideStringList_Append "PyWideStringList_Append")
  * [`PyWideStringList_Insert()`](https://docs.python.org/3/c-api/init_config.html#c.PyWideStringList_Insert "PyWideStringList_Insert")
  * [`Py_BytesMain()`](https://docs.python.org/3/c-api/init.html#c.Py_BytesMain "Py_BytesMain")
  * [`Py_ExitStatusException()`](https://docs.python.org/3/c-api/init_config.html#c.Py_ExitStatusException "Py_ExitStatusException")
  * [`Py_InitializeFromConfig()`](https://docs.python.org/3/c-api/init.html#c.Py_InitializeFromConfig "Py_InitializeFromConfig")
  * [`Py_PreInitialize()`](https://docs.python.org/3/c-api/init_config.html#c.Py_PreInitialize "Py_PreInitialize")
  * [`Py_PreInitializeFromArgs()`](https://docs.python.org/3/c-api/init_config.html#c.Py_PreInitializeFromArgs "Py_PreInitializeFromArgs")
  * [`Py_PreInitializeFromBytesArgs()`](https://docs.python.org/3/c-api/init_config.html#c.Py_PreInitializeFromBytesArgs "Py_PreInitializeFromBytesArgs")
  * [`Py_RunMain()`](https://docs.python.org/3/c-api/init.html#c.Py_RunMain "Py_RunMain")