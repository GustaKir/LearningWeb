Title: New Time Functions in Python 3
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This document introduces the implementation of PEP 564, which adds six new functions to the time module with nanosecond resolution: clock_gettime_ns(), clock_settime_ns(), monotonic_ns(), perf_counter_ns(), process_time_ns(), and time_ns().
---

Patch by Mario Corchero.
  * [bpo-31784](https://bugs.python.org/issue?@action=redirect&bpo=31784): Implement the [**PEP 564**](https://peps.python.org/pep-0564/), add new 6 new functions with nanosecond resolution to the [`time`](https://docs.python.org/3/library/time.html#module-time "time: Time access and conversions.") module: [`clock_gettime_ns()`](https://docs.python.org/3/library/time.html#time.clock_gettime_ns "time.clock_gettime_ns"), [`clock_settime_ns()`](https://docs.python.org/3/library/time.html#time.clock_settime_ns "time.clock_settime_ns"), [`monotonic_ns()`](https://docs.python.org/3/library/time.html#time.monotonic_ns "time.monotonic_ns"), [`perf_counter_ns()`](https://docs.python.org/3/library/time.html#time.perf_counter_ns "time.perf_counter_ns"), [`process_time_ns()`](https://docs.python.org/3/library/time.html#time.process_time_ns "time.process_time_ns"), [`time_ns()`](https://docs.python.org/3/library/time.html#time.time_ns "time.time_ns").
  * [bpo-30143](https://bugs.python.org/issue?@action=redirect&bpo=30143): 2to3 now generates a code that uses abstract collection classes from collections.abc rather than collections.
  * [bpo-31770](https://bugs.python.org/issue?@action=redirect&bpo=31770): Prevent a crash when calling the `__init__()` method of a `sqlite3.Cursor` object more than once. Patch by Oren Milman.
  * [bpo-31764](https://bugs.python.org/issue?@action=redirect&bpo=31764): Prevent a crash in `sqlite3.Cursor.close()` in case the `Cursor` object is uninitialized. Patch by Oren Milman.
  * [bpo-31752](https://bugs.python.org/issue?@action=redirect&bpo=31752): Fix possible crash in timedelta constructor called with custom integers.
  * [bpo-31620](https://bugs.python.org/issue?@action=redirect&bpo=31620): an empty asyncio.Queue now doesn’t leak memory when queue.get pollers timeout
  * [bpo-31690](https://bugs.python.org/issue?@action=redirect&bpo=31690): Allow the flags re.ASCII, re.LOCALE, and re.UNICODE to be used as group flags for regular expressions.
  * [bpo-30349](https://bugs.python.org/issue?@action=redirect&bpo=30349): FutureWarning is now emitted if a regular expression contains character set constructs that will change semantically in the future (nested sets and set operations).
  * [bpo-31664](https://bugs.python.org/issue?@action=redirect&bpo=31664): Added support for the Blowfish hashing in the crypt module.
  * [bpo-31632](https://bugs.python.org/issue?@action=redirect&bpo=31632): Fix method set_protocol() of class _SSLProtocolTransport in asyncio module. This method was previously modifying a wrong reference to the protocol.
  * [bpo-15037](https://bugs.python.org/issue?@action=redirect&bpo=15037): Added a workaround for getkey() in curses for ncurses 5.7 and earlier.
  * [bpo-31307](https://bugs.python.org/issue?@action=redirect&bpo=31307): Allow use of bytes objects for arguments to [`configparser.ConfigParser.read()`](https://docs.python.org/3/library/configparser.html#configparser.ConfigParser.read "configparser.ConfigParser.read"). Patch by Vincent Michel.
  * [bpo-31334](https://bugs.python.org/issue?@action=redirect&bpo=31334): Fix `poll.poll([timeout])` in the `select` module for arbitrary negative timeouts on all OSes where it can only be a non-negative integer or -1. Patch by Riccardo Coccioli.
  * [bpo-31310](https://bugs.python.org/issue?@action=redirect&bpo=31310): multiprocessing’s semaphore tracker should be launched again if crashed.
  * [bpo-31308](https://bugs.python.org/issue?@action=redirect&bpo=31308): Make multiprocessing’s forkserver process immune to Ctrl-C and other user interruptions. If it crashes, restart it when necessary.
  * [bpo-31245](https://bugs.python.org/issue?@action=redirect&bpo=31245): Added support for AF_UNIX socket in asyncio `create_datagram_endpoint`.
  * [bpo-30553](https://bugs.python.org/issue?@action=redirect&bpo=30553): Add HTTP/2 status code 421 (Misdirected Request) to [`http.HTTPStatus`](https://docs.python.org/3/library/http.html#http.HTTPStatus "http.HTTPStatus"). Patch by Vitor Pereira.


### Documentation[¶](https://docs.python.org/3/whatsnew/changelog.html#id546 "Link to this heading")
  * [bpo-32105](https://bugs.python.org/issue?@action=redirect&bpo=32105): Added asyncio.BaseEventLoop.connect_accepted_socket versionadded marker.