Title: sqlite3.Error Exception Class
URL: https://docs.python.org/3/library/sqlite3.html
Summary: The `sqlite3.Error` class is the base class for all exceptions in the sqlite3 module, designed to catch all database-related errors. It includes additional attributes for the numeric and symbolic error codes from the SQLite API, introduced in version 3.11.
---

_exception_ sqlite3.Error[¶](https://docs.python.org/3/library/sqlite3.html#sqlite3.Error "Link to this definition")
    
The base class of the other exceptions in this module. Use this to catch all errors with one single [`except`](https://docs.python.org/3/reference/compound_stmts.html#except) statement. `Error` is a subclass of [`Exception`](https://docs.python.org/3/library/exceptions.html#Exception "Exception").
If the exception originated from within the SQLite library, the following two attributes are added to the exception: 

sqlite_errorcode[¶](https://docs.python.org/3/library/sqlite3.html#sqlite3.Error.sqlite_errorcode "Link to this definition")
    
The numeric error code from the [SQLite API](https://sqlite.org/rescode.html)
Added in version 3.11. 

sqlite_errorname[¶](https://docs.python.org/3/library/sqlite3.html#sqlite3.Error.sqlite_errorname "Link to this definition")
    
The symbolic name of the numeric error code from the [SQLite API](https://sqlite.org/rescode.html)
Added in version 3.11. 

_exception_ sqlite3.InterfaceError[¶](https://docs.python.org/3/library/sqlite3.html#sqlite3.InterfaceError "Link to this definition")
    
Exception raised for misuse of the low-level SQLite C API. In other words, if this exception is raised, it probably indicates a bug in the `sqlite3` module. `InterfaceError` is a subclass of [`Error`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Error "sqlite3.Error"). 

_exception_ sqlite3.DatabaseError[¶](https://docs.python.org/3/library/sqlite3.html#sqlite3.DatabaseError "Link to this definition")
    
Exception raised for errors that are related to the database. This serves as the base exception for several types of database errors. It is only raised implicitly through the specialised subclasses. `DatabaseError` is a subclass of [`Error`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Error "sqlite3.Error"). 

_exception_ sqlite3.DataError[¶](https://docs.python.org/3/library/sqlite3.html#sqlite3.DataError "Link to this definition")
    
Exception raised for errors caused by problems with the processed data, like numeric values out of range, and strings which are too long. `DataError` is a subclass of [`DatabaseError`](https://docs.python.org/3/library/sqlite3.html#sqlite3.DatabaseError "sqlite3.DatabaseError"). 

_exception_ sqlite3.OperationalError[¶](https://docs.python.org/3/library/sqlite3.html#sqlite3.OperationalError "Link to this definition")
    
Exception raised for errors that are related to the database’s operation, and not necessarily under the control of the programmer. For example, the database path is not found, or a transaction could not be processed. `OperationalError` is a subclass of [`DatabaseError`](https://docs.python.org/3/library/sqlite3.html#sqlite3.DatabaseError "sqlite3.DatabaseError"). 

_exception_ sqlite3.IntegrityError[¶](https://docs.python.org/3/library/sqlite3.html#sqlite3.IntegrityError "Link to this definition")
    
Exception raised when the relational integrity of the database is affected, e.g. a foreign key check fails. It is a subclass of [`DatabaseError`](https://docs.python.org/3/library/sqlite3.html#sqlite3.DatabaseError "sqlite3.DatabaseError"). 

_exception_ sqlite3.InternalError[¶](https://docs.python.org/3/library/sqlite3.html#sqlite3.InternalError "Link to this definition")
    
Exception raised when SQLite encounters an internal error. If this is raised, it may indicate that there is a problem with the runtime SQLite library. `InternalError` is a subclass of [`DatabaseError`](https://docs.python.org/3/library/sqlite3.html#sqlite3.DatabaseError "sqlite3.DatabaseError"). 

_exception_ sqlite3.ProgrammingError[¶](https://docs.python.org/3/library/sqlite3.html#sqlite3.ProgrammingError "Link to this definition")
    
Exception raised for `sqlite3` API programming errors, for example supplying the wrong number of bindings to a query, or trying to operate on a closed [`Connection`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection "sqlite3.Connection"). `ProgrammingError` is a subclass of [`DatabaseError`](https://docs.python.org/3/library/sqlite3.html#sqlite3.DatabaseError "sqlite3.DatabaseError").