Title: http.cookies Module Overview
URL: https://docs.python.org/3/library/http.cookies.html
Summary: This document introduces the `http.cookies` module, highlighting the `BaseCookie` class, which acts as a dictionary-like object for handling cookies, and the `SimpleCookie` class that derives from it. The `BaseCookie` class converts values into `Morsel` instances and can load initial data when provided.
---

_class_ http.cookies.BaseCookie([_input_])[¶](https://docs.python.org/3/library/http.cookies.html#http.cookies.BaseCookie "Link to this definition")
    
This class is a dictionary-like object whose keys are strings and whose values are [`Morsel`](https://docs.python.org/3/library/http.cookies.html#http.cookies.Morsel "http.cookies.Morsel") instances. Note that upon setting a key to a value, the value is first converted to a [`Morsel`](https://docs.python.org/3/library/http.cookies.html#http.cookies.Morsel "http.cookies.Morsel") containing the key and the value.
If _input_ is given, it is passed to the [`load()`](https://docs.python.org/3/library/http.cookies.html#http.cookies.BaseCookie.load "http.cookies.BaseCookie.load") method. 

_class_ http.cookies.SimpleCookie([_input_])[¶](https://docs.python.org/3/library/http.cookies.html#http.cookies.SimpleCookie "Link to this definition")
    
This class derives from [`BaseCookie`](https://docs.python.org/3/library/http.cookies.html#http.cookies.BaseCookie "http.cookies.BaseCookie") and overrides [`value_decode()`](https://docs.python.org/3/library/http.cookies.html#http.cookies.BaseCookie.value_decode "http.cookies.BaseCookie.value_decode") and [`value_encode()`](https://docs.python.org/3/library/http.cookies.html#http.cookies.BaseCookie.value_encode "http.cookies.BaseCookie.value_encode"). `SimpleCookie` supports strings as cookie values. When setting the value, `SimpleCookie` calls the builtin [`str()`](https://docs.python.org/3/library/stdtypes.html#str "str") to convert the value to a string. Values received from HTTP are kept as strings.
See also 

Module [`http.cookiejar`](https://docs.python.org/3/library/http.cookiejar.html#module-http.cookiejar "http.cookiejar: Classes for automatic handling of HTTP cookies.")
    
HTTP cookie handling for web _clients_. The [`http.cookiejar`](https://docs.python.org/3/library/http.cookiejar.html#module-http.cookiejar "http.cookiejar: Classes for automatic handling of HTTP cookies.") and [`http.cookies`](https://docs.python.org/3/library/http.cookies.html#module-http.cookies "http.cookies: Support for HTTP state management \(cookies\).") modules do not depend on each other. 

[**RFC 2109**](https://datatracker.ietf.org/doc/html/rfc2109.html) - HTTP State Management Mechanism
    
This is the state management specification implemented by this module.
## Cookie Objects[¶](https://docs.python.org/3/library/http.cookies.html#cookie-objects "Link to this heading") 

BaseCookie.value_decode(_val_)[¶](https://docs.python.org/3/library/http.cookies.html#http.cookies.BaseCookie.value_decode "Link to this definition")
    
Return a tuple `(real_value, coded_value)` from a string representation. `real_value` can be any type. This method does no decoding in [`BaseCookie`](https://docs.python.org/3/library/http.cookies.html#http.cookies.BaseCookie "http.cookies.BaseCookie") — it exists so it can be overridden. 

BaseCookie.value_encode(_val_)[¶](https://docs.python.org/3/library/http.cookies.html#http.cookies.BaseCookie.value_encode "Link to this definition")
    
Return a tuple `(real_value, coded_value)`. _val_ can be any type, but `coded_value` will always be converted to a string. This method does no encoding in [`BaseCookie`](https://docs.python.org/3/library/http.cookies.html#http.cookies.BaseCookie "http.cookies.BaseCookie") — it exists so it can be overridden.
In general, it should be the case that [`value_encode()`](https://docs.python.org/3/library/http.cookies.html#http.cookies.BaseCookie.value_encode "http.cookies.BaseCookie.value_encode") and [`value_decode()`](https://docs.python.org/3/library/http.cookies.html#http.cookies.BaseCookie.value_decode "http.cookies.BaseCookie.value_decode") are inverses on the range of _value_decode_. 

BaseCookie.output(_attrs =None_, _header ='Set-Cookie:'_, _sep ='\r\n'_)[¶](https://docs.python.org/3/library/http.cookies.html#http.cookies.BaseCookie.output "Link to this definition")
    
Return a string representation suitable to be sent as HTTP headers. _attrs_ and _header_ are sent to each [`Morsel`](https://docs.python.org/3/library/http.cookies.html#http.cookies.Morsel "http.cookies.Morsel")’s [`output()`](https://docs.python.org/3/library/http.cookies.html#http.cookies.Morsel.output "http.cookies.Morsel.output") method. _sep_ is used to join the headers together, and is by default the combination `'\r\n'` (CRLF). 

BaseCookie.js_output(_attrs =None_)[¶](https://docs.python.org/3/library/http.cookies.html#http.cookies.BaseCookie.js_output "Link to this definition")
    
Return an embeddable JavaScript snippet, which, if run on a browser which supports JavaScript, will act the same as if the HTTP headers was sent.
The meaning for _attrs_ is the same as in [`output()`](https://docs.python.org/3/library/http.cookies.html#http.cookies.BaseCookie.output "http.cookies.BaseCookie.output").