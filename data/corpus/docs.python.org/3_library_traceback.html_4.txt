Title: Traceback Module Overview
URL: https://docs.python.org/3/library/traceback.html
Summary: The traceback module in Python includes functions like `walk_tb`, which traverses a traceback and yields frame and line number information for each frame. Additionally, `TracebackException` objects, introduced in version 3.5, are designed to encapsulate data from exceptions for easier management and printing, without retaining references to the original traceback or frame.
---

traceback.walk_tb(_tb_)[¶](https://docs.python.org/3/library/traceback.html#traceback.walk_tb "Link to this definition")
    
Walk a traceback following [`tb_next`](https://docs.python.org/3/reference/datamodel.html#traceback.tb_next "traceback.tb_next") yielding the frame and line number for each frame. This helper is used with [`StackSummary.extract()`](https://docs.python.org/3/library/traceback.html#traceback.StackSummary.extract "traceback.StackSummary.extract").
Added in version 3.5.
## `TracebackException` Objects[¶](https://docs.python.org/3/library/traceback.html#tracebackexception-objects "Link to this heading")
Added in version 3.5.
`TracebackException` objects are created from actual exceptions to capture data for later printing. They offer a more lightweight method of storing this information by avoiding holding references to [traceback](https://docs.python.org/3/reference/datamodel.html#traceback-objects) and [frame](https://docs.python.org/3/reference/datamodel.html#frame-objects) objects. In addition, they expose more options to configure the output compared to the module-level functions described above. 

_class_ traceback.TracebackException(_exc_type_ , _exc_value_ , _exc_traceback_ , _*_ , _limit =None_, _lookup_lines =True_, _capture_locals =False_, _compact =False_, _max_group_width =15_, _max_group_depth =10_)[¶](https://docs.python.org/3/library/traceback.html#traceback.TracebackException "Link to this definition")
    
Capture an exception for later rendering. The meaning of _limit_ , _lookup_lines_ and _capture_locals_ are as for the [`StackSummary`](https://docs.python.org/3/library/traceback.html#traceback.StackSummary "traceback.StackSummary") class.
If _compact_ is true, only data that is required by `TracebackException`’s [`format()`](https://docs.python.org/3/library/functions.html#format "format") method is saved in the class attributes. In particular, the [`__context__`](https://docs.python.org/3/library/traceback.html#traceback.TracebackException.__context__ "traceback.TracebackException.__context__") field is calculated only if [`__cause__`](https://docs.python.org/3/library/traceback.html#traceback.TracebackException.__cause__ "traceback.TracebackException.__cause__") is `None` and [`__suppress_context__`](https://docs.python.org/3/library/traceback.html#traceback.TracebackException.__suppress_context__ "traceback.TracebackException.__suppress_context__") is false.
Note that when locals are captured, they are also shown in the traceback.
_max_group_width_ and _max_group_depth_ control the formatting of exception groups (see [`BaseExceptionGroup`](https://docs.python.org/3/library/exceptions.html#BaseExceptionGroup "BaseExceptionGroup")). The depth refers to the nesting level of the group, and the width refers to the size of a single exception group’s exceptions array. The formatted output is truncated when either limit is exceeded.
Changed in version 3.10: Added the _compact_ parameter.
Changed in version 3.11: Added the _max_group_width_ and _max_group_depth_ parameters. 

__cause__[¶](https://docs.python.org/3/library/traceback.html#traceback.TracebackException.__cause__ "Link to this definition")
    
A `TracebackException` of the original [`__cause__`](https://docs.python.org/3/library/exceptions.html#BaseException.__cause__ "BaseException.__cause__"). 

__context__[¶](https://docs.python.org/3/library/traceback.html#traceback.TracebackException.__context__ "Link to this definition")
    
A `TracebackException` of the original [`__context__`](https://docs.python.org/3/library/exceptions.html#BaseException.__context__ "BaseException.__context__"). 

exceptions[¶](https://docs.python.org/3/library/traceback.html#traceback.TracebackException.exceptions "Link to this definition")
    
If `self` represents an [`ExceptionGroup`](https://docs.python.org/3/library/exceptions.html#ExceptionGroup "ExceptionGroup"), this field holds a list of `TracebackException` instances representing the nested exceptions. Otherwise it is `None`.
Added in version 3.11. 

__suppress_context__[¶](https://docs.python.org/3/library/traceback.html#traceback.TracebackException.__suppress_context__ "Link to this definition")
    
The [`__suppress_context__`](https://docs.python.org/3/library/exceptions.html#BaseException.__suppress_context__ "BaseException.__suppress_context__") value from the original exception. 

__notes__[¶](https://docs.python.org/3/library/traceback.html#traceback.TracebackException.__notes__ "Link to this definition")
    
The [`__notes__`](https://docs.python.org/3/library/exceptions.html#BaseException.__notes__ "BaseException.__notes__") value from the original exception, or `None` if the exception does not have any notes. If it is not `None` is it formatted in the traceback after the exception string.
Added in version 3.11.