Title: ssl.SSLObject Class Overview
URL: https://docs.python.org/3/library/ssl.html
Summary: The `ssl.SSLObject` class is a variant of `SSLSocket` that represents an SSL protocol instance without network IO methods. It is designed for use by framework authors implementing asynchronous SSL IO through memory buffers, using OpenSSL's low-level SSL object for state management.
---

_class_ ssl.SSLObject[¶](https://docs.python.org/3/library/ssl.html#ssl.SSLObject "Link to this definition")
    
A reduced-scope variant of [`SSLSocket`](https://docs.python.org/3/library/ssl.html#ssl.SSLSocket "ssl.SSLSocket") representing an SSL protocol instance that does not contain any network IO methods. This class is typically used by framework authors that want to implement asynchronous IO for SSL through memory buffers.
This class implements an interface on top of a low-level SSL object as implemented by OpenSSL. This object captures the state of an SSL connection but does not provide any network IO itself. IO needs to be performed through separate “BIO” objects which are OpenSSL’s IO abstraction layer.
This class has no public constructor. An [`SSLObject`](https://docs.python.org/3/library/ssl.html#ssl.SSLObject "ssl.SSLObject") instance must be created using the [`wrap_bio()`](https://docs.python.org/3/library/ssl.html#ssl.SSLContext.wrap_bio "ssl.SSLContext.wrap_bio") method. This method will create the [`SSLObject`](https://docs.python.org/3/library/ssl.html#ssl.SSLObject "ssl.SSLObject") instance and bind it to a pair of BIOs. The _incoming_ BIO is used to pass data from Python to the SSL protocol instance, while the _outgoing_ BIO is used to pass data the other way around.
The following methods are available:
  * [`context`](https://docs.python.org/3/library/ssl.html#ssl.SSLSocket.context "ssl.SSLSocket.context")
  * [`server_side`](https://docs.python.org/3/library/ssl.html#ssl.SSLSocket.server_side "ssl.SSLSocket.server_side")
  * [`server_hostname`](https://docs.python.org/3/library/ssl.html#ssl.SSLSocket.server_hostname "ssl.SSLSocket.server_hostname")
  * [`session`](https://docs.python.org/3/library/ssl.html#ssl.SSLSocket.session "ssl.SSLSocket.session")
  * [`session_reused`](https://docs.python.org/3/library/ssl.html#ssl.SSLSocket.session_reused "ssl.SSLSocket.session_reused")
  * [`read()`](https://docs.python.org/3/library/ssl.html#ssl.SSLSocket.read "ssl.SSLSocket.read")
  * [`write()`](https://docs.python.org/3/library/ssl.html#ssl.SSLSocket.write "ssl.SSLSocket.write")
  * [`getpeercert()`](https://docs.python.org/3/library/ssl.html#ssl.SSLSocket.getpeercert "ssl.SSLSocket.getpeercert")
  * [`get_verified_chain()`](https://docs.python.org/3/library/ssl.html#ssl.SSLSocket.get_verified_chain "ssl.SSLSocket.get_verified_chain")
  * [`get_unverified_chain()`](https://docs.python.org/3/library/ssl.html#ssl.SSLSocket.get_unverified_chain "ssl.SSLSocket.get_unverified_chain")
  * [`selected_alpn_protocol()`](https://docs.python.org/3/library/ssl.html#ssl.SSLSocket.selected_alpn_protocol "ssl.SSLSocket.selected_alpn_protocol")
  * [`selected_npn_protocol()`](https://docs.python.org/3/library/ssl.html#ssl.SSLSocket.selected_npn_protocol "ssl.SSLSocket.selected_npn_protocol")
  * [`cipher()`](https://docs.python.org/3/library/ssl.html#ssl.SSLSocket.cipher "ssl.SSLSocket.cipher")
  * [`shared_ciphers()`](https://docs.python.org/3/library/ssl.html#ssl.SSLSocket.shared_ciphers "ssl.SSLSocket.shared_ciphers")
  * [`compression()`](https://docs.python.org/3/library/ssl.html#ssl.SSLSocket.compression "ssl.SSLSocket.compression")
  * [`pending()`](https://docs.python.org/3/library/ssl.html#ssl.SSLSocket.pending "ssl.SSLSocket.pending")
  * [`do_handshake()`](https://docs.python.org/3/library/ssl.html#ssl.SSLSocket.do_handshake "ssl.SSLSocket.do_handshake")
  * [`verify_client_post_handshake()`](https://docs.python.org/3/library/ssl.html#ssl.SSLSocket.verify_client_post_handshake "ssl.SSLSocket.verify_client_post_handshake")
  * [`unwrap()`](https://docs.python.org/3/library/ssl.html#ssl.SSLSocket.unwrap "ssl.SSLSocket.unwrap")
  * [`get_channel_binding()`](https://docs.python.org/3/library/ssl.html#ssl.SSLSocket.get_channel_binding "ssl.SSLSocket.get_channel_binding")
  * [`version()`](https://docs.python.org/3/library/ssl.html#ssl.SSLSocket.version "ssl.SSLSocket.version")