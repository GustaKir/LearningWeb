Title: Comparison Methods in email.charset Charset
URL: https://docs.python.org/3/library/email.charset.html
Summary: This section describes the `__eq__` and `__ne__` methods for the `Charset` class, enabling equality and inequality comparisons between two `Charset` instances. It also mentions the `add_charset` function for adding new entries to the global character set, alias, and codec registries.
---

__eq__(_other_)[¶](https://docs.python.org/3/library/email.charset.html#email.charset.Charset.__eq__ "Link to this definition")
    
This method allows you to compare two [`Charset`](https://docs.python.org/3/library/email.charset.html#email.charset.Charset "email.charset.Charset") instances for equality. 

__ne__(_other_)[¶](https://docs.python.org/3/library/email.charset.html#email.charset.Charset.__ne__ "Link to this definition")
    
This method allows you to compare two [`Charset`](https://docs.python.org/3/library/email.charset.html#email.charset.Charset "email.charset.Charset") instances for inequality.
The [`email.charset`](https://docs.python.org/3/library/email.charset.html#module-email.charset "email.charset: Character Sets") module also provides the following functions for adding new entries to the global character set, alias, and codec registries: 

email.charset.add_charset(_charset_ , _header_enc =None_, _body_enc =None_, _output_charset =None_)[¶](https://docs.python.org/3/library/email.charset.html#email.charset.add_charset "Link to this definition")
    
Add character properties to the global registry.
_charset_ is the input character set, and must be the canonical name of a character set.
Optional _header_enc_ and _body_enc_ is either `charset.QP` for quoted-printable, `charset.BASE64` for base64 encoding, `charset.SHORTEST` for the shortest of quoted-printable or base64 encoding, or `None` for no encoding. `SHORTEST` is only valid for _header_enc_. The default is `None` for no encoding.
Optional _output_charset_ is the character set that the output should be in. Conversions will proceed from input charset, to Unicode, to the output charset when the method `Charset.convert()` is called. The default is to output in the same character set as the input.
Both _input_charset_ and _output_charset_ must have Unicode codec entries in the module’s character set-to-codec mapping; use [`add_codec()`](https://docs.python.org/3/library/email.charset.html#email.charset.add_codec "email.charset.add_codec") to add codecs the module does not know about. See the [`codecs`](https://docs.python.org/3/library/codecs.html#module-codecs "codecs: Encode and decode data and streams.") module’s documentation for more information.
The global character set registry is kept in the module global dictionary `CHARSETS`. 

email.charset.add_alias(_alias_ , _canonical_)[¶](https://docs.python.org/3/library/email.charset.html#email.charset.add_alias "Link to this definition")
    
Add a character set alias. _alias_ is the alias name, e.g. `latin-1`. _canonical_ is the character set’s canonical name, e.g. `iso-8859-1`.
The global charset alias registry is kept in the module global dictionary `ALIASES`. 

email.charset.add_codec(_charset_ , _codecname_)[¶](https://docs.python.org/3/library/email.charset.html#email.charset.add_codec "Link to this definition")
    
Add a codec that map characters in the given character set to and from Unicode.
_charset_ is the canonical name of a character set. _codecname_ is the name of a Python codec, as appropriate for the second argument to the [`str`](https://docs.python.org/3/library/stdtypes.html#str "str")’s [`encode()`](https://docs.python.org/3/library/stdtypes.html#str.encode "str.encode") method.
#### Previous topic
[`email.header`: Internationalized headers](https://docs.python.org/3/library/email.header.html "previous chapter")
#### Next topic
[`email.encoders`: Encoders](https://docs.python.org/3/library/email.encoders.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/email.charset.rst)


«
### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/library/email.encoders.html "email.encoders: Encoders") |
  * [previous](https://docs.python.org/3/library/email.header.html "email.header: Internationalized headers") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [The Python Standard Library](https://docs.python.org/3/library/index.html) »
  * [Internet Data Handling](https://docs.python.org/3/library/netdata.html) »
  * [`email` — An email and MIME handling package](https://docs.python.org/3/library/email.html) »
  * [`email.charset`: Representing character sets](https://docs.python.org/3/library/email.charset.html)
  * | 
  * Theme  Auto Light Dark |