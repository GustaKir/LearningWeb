Title: Python Changelog Updates - Notable Fixes and Improvements
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section details several updates in Python, including enhancements to lru_cache(), bug fixes in typing and asyncio, improvements in the C implementation of OrderedDict, better Unicode support in SMTPHandler, and the deprecation of the imp module.
---

Based on patch by Robert Li.
  * [bpo-25447](https://bugs.python.org/issue?@action=redirect&bpo=25447): The lru_cache() wrapper objects now can be copied and pickled (by returning the original object unchanged).
  * [bpo-25390](https://bugs.python.org/issue?@action=redirect&bpo=25390): typing: Don’t crash on Union[str, Pattern].
  * [bpo-25441](https://bugs.python.org/issue?@action=redirect&bpo=25441): asyncio: Raise error from drain() when socket is closed.
  * [bpo-25410](https://bugs.python.org/issue?@action=redirect&bpo=25410): Cleaned up and fixed minor bugs in C implementation of OrderedDict.
  * [bpo-25411](https://bugs.python.org/issue?@action=redirect&bpo=25411): Improved Unicode support in SMTPHandler through better use of the email package. Thanks to user simon04 for the patch.
  * Move the imp module from a PendingDeprecationWarning to DeprecationWarning.
  * [bpo-25407](https://bugs.python.org/issue?@action=redirect&bpo=25407): Remove mentions of the formatter module being removed in Python 3.6.
  * [bpo-25406](https://bugs.python.org/issue?@action=redirect&bpo=25406): Fixed a bug in C implementation of OrderedDict.move_to_end() that caused segmentation fault or hang in iterating after moving several items to the start of ordered dict.
  * [bpo-25382](https://bugs.python.org/issue?@action=redirect&bpo=25382): pickletools.dis() now outputs implicit memo index for the MEMOIZE opcode.
  * [bpo-25357](https://bugs.python.org/issue?@action=redirect&bpo=25357): Add an optional newline parameter to binascii.b2a_base64(). base64.b64encode() uses it to avoid a memory copy.
  * [bpo-24164](https://bugs.python.org/issue?@action=redirect&bpo=24164): Objects that need calling `__new__` with keyword arguments, can now be pickled using pickle protocols older than protocol version 4.
  * [bpo-25364](https://bugs.python.org/issue?@action=redirect&bpo=25364): zipfile now works in threads disabled builds.
  * [bpo-25328](https://bugs.python.org/issue?@action=redirect&bpo=25328): smtpd’s SMTPChannel now correctly raises a ValueError if both decode_data and enable_SMTPUTF8 are set to true.
  * [bpo-16099](https://bugs.python.org/issue?@action=redirect&bpo=16099): RobotFileParser now supports Crawl-delay and Request-rate extensions. Patch by Nikolay Bogoychev.
  * [bpo-25316](https://bugs.python.org/issue?@action=redirect&bpo=25316): distutils raises OSError instead of DistutilsPlatformError when MSVC is not installed.
  * [bpo-25380](https://bugs.python.org/issue?@action=redirect&bpo=25380): Fixed protocol for the STACK_GLOBAL opcode in pickletools.opcodes.
  * [bpo-23972](https://bugs.python.org/issue?@action=redirect&bpo=23972): Updates asyncio datagram create method allowing reuseport and reuseaddr socket options to be set prior to binding the socket. Mirroring the existing asyncio create_server method the reuseaddr option for datagram sockets defaults to True if the O/S is ‘posix’ (except if the platform is Cygwin). Patch by Chris Laws.
  * [bpo-25304](https://bugs.python.org/issue?@action=redirect&bpo=25304): Add asyncio.run_coroutine_threadsafe(). This lets you submit a coroutine to a loop from another thread, returning a concurrent.futures.Future. By Vincent Michel.
  * [bpo-25232](https://bugs.python.org/issue?@action=redirect&bpo=25232): Fix CGIRequestHandler to split the query from the URL at the first question mark (?) rather than the last. Patch from Xiang Zhang.
  * [bpo-24657](https://bugs.python.org/issue?@action=redirect&bpo=24657): Prevent CGIRequestHandler from collapsing slashes in the query part of the URL as if it were a path. Patch from Xiang Zhang.
  * [bpo-25287](https://bugs.python.org/issue?@action=redirect&bpo=25287): Don’t add crypt.METHOD_CRYPT to crypt.methods if it’s not supported.