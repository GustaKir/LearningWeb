Title: Monitoring C API in Python
URL: https://docs.python.org/3/c-api/monitoring.html
Summary: This section of the Python documentation covers the monitoring capabilities of the C API, including generating execution events and managing the monitoring state.
---

[ ![Python logo](https://docs.python.org/3/_static/py.svg) ](https://www.python.org/) dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
Theme  Auto Light Dark
### [Table of Contents](https://docs.python.org/3/contents.html)
  * [Monitoring C API](https://docs.python.org/3/c-api/monitoring.html)
  * [Generating Execution Events](https://docs.python.org/3/c-api/monitoring.html#generating-execution-events)
    * [Managing the Monitoring State](https://docs.python.org/3/c-api/monitoring.html#managing-the-monitoring-state)


#### Previous topic
[API and ABI Versioning](https://docs.python.org/3/c-api/apiabiversion.html "previous chapter")
#### Next topic
[Installing Python Modules](https://docs.python.org/3/installing/index.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/c-api/monitoring.rst)


### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/installing/index.html "Installing Python Modules") |
  * [previous](https://docs.python.org/3/c-api/apiabiversion.html "API and ABI Versioning") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [Python/C API Reference Manual](https://docs.python.org/3/c-api/index.html) »
  * [Monitoring C API](https://docs.python.org/3/c-api/monitoring.html)
  * | 
  * Theme  Auto Light Dark |


# Monitoring C API[¶](https://docs.python.org/3/c-api/monitoring.html#monitoring-c-api "Link to this heading")
Added in version 3.13.
An extension may need to interact with the event monitoring system. Subscribing to events and registering callbacks can be done via the Python API exposed in [`sys.monitoring`](https://docs.python.org/3/library/sys.monitoring.html#module-sys.monitoring "sys.monitoring: Access and control event monitoring").
# Generating Execution Events[¶](https://docs.python.org/3/c-api/monitoring.html#generating-execution-events "Link to this heading")
The functions below make it possible for an extension to fire monitoring events as it emulates the execution of Python code. Each of these functions accepts a `PyMonitoringState` struct which contains concise information about the activation state of events, as well as the event arguments, which include a `PyObject*` representing the code object, the instruction offset and sometimes additional, event-specific arguments (see [`sys.monitoring`](https://docs.python.org/3/library/sys.monitoring.html#module-sys.monitoring "sys.monitoring: Access and control event monitoring") for details about the signatures of the different event callbacks). The `codelike` argument should be an instance of [`types.CodeType`](https://docs.python.org/3/library/types.html#types.CodeType "types.CodeType") or of a type that emulates it.
The VM disables tracing when firing an event, so there is no need for user code to do that.
Monitoring functions should not be called with an exception set, except those listed below as working with the current exception. 

typePyMonitoringState[¶](https://docs.python.org/3/c-api/monitoring.html#c.PyMonitoringState "Link to this definition")
    
Representation of the state of an event type. It is allocated by the user while its contents are maintained by the monitoring API functions described below.
All of the functions below return 0 on success and -1 (with an exception set) on error.
See [`sys.monitoring`](https://docs.python.org/3/library/sys.monitoring.html#module-sys.monitoring "sys.monitoring: Access and control event monitoring") for descriptions of the events. 

intPyMonitoring_FirePyStartEvent([PyMonitoringState](https://docs.python.org/3/c-api/monitoring.html#c.PyMonitoringState "PyMonitoringState")*state, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*codelike, int32_toffset)[¶](https://docs.python.org/3/c-api/monitoring.html#c.PyMonitoring_FirePyStartEvent "Link to this definition")
    
Fire a `PY_START` event.