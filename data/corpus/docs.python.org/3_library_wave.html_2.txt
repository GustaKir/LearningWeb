Title: Wave_write Class in Python
URL: https://docs.python.org/3/library/wave.html
Summary: The `wave.Wave_write` class is used to write WAV files in Python. It automatically updates the wave header for seekable output streams and requires an accurate frame count (_nframes_) for unseekable streams. Users can set this frame count using `setnframes()` or `setparams()` before calling `close()`.
---

_class_ wave.Wave_write[¶](https://docs.python.org/3/library/wave.html#wave.Wave_write "Link to this definition")
    
Write a WAV file.
Wave_write objects, as returned by [`open()`](https://docs.python.org/3/library/wave.html#wave.open "wave.open").
For seekable output streams, the `wave` header will automatically be updated to reflect the number of frames actually written. For unseekable streams, the _nframes_ value must be accurate when the first frame data is written. An accurate _nframes_ value can be achieved either by calling [`setnframes()`](https://docs.python.org/3/library/wave.html#wave.Wave_write.setnframes "wave.Wave_write.setnframes") or [`setparams()`](https://docs.python.org/3/library/wave.html#wave.Wave_write.setparams "wave.Wave_write.setparams") with the number of frames that will be written before [`close()`](https://docs.python.org/3/library/wave.html#wave.Wave_write.close "wave.Wave_write.close") is called and then using [`writeframesraw()`](https://docs.python.org/3/library/wave.html#wave.Wave_write.writeframesraw "wave.Wave_write.writeframesraw") to write the frame data, or by calling [`writeframes()`](https://docs.python.org/3/library/wave.html#wave.Wave_write.writeframes "wave.Wave_write.writeframes") with all of the frame data to be written. In the latter case [`writeframes()`](https://docs.python.org/3/library/wave.html#wave.Wave_write.writeframes "wave.Wave_write.writeframes") will calculate the number of frames in the data and set _nframes_ accordingly before writing the frame data.
Changed in version 3.4: Added support for unseekable files.
Wave_write objects have the following methods: 

close()[¶](https://docs.python.org/3/library/wave.html#wave.Wave_write.close "Link to this definition")
    
Make sure _nframes_ is correct, and close the file if it was opened by [`wave`](https://docs.python.org/3/library/wave.html#module-wave "wave: Provide an interface to the WAV sound format."). This method is called upon object collection. It will raise an exception if the output stream is not seekable and _nframes_ does not match the number of frames actually written. 

setnchannels(_n_)[¶](https://docs.python.org/3/library/wave.html#wave.Wave_write.setnchannels "Link to this definition")
    
Set the number of channels. 

setsampwidth(_n_)[¶](https://docs.python.org/3/library/wave.html#wave.Wave_write.setsampwidth "Link to this definition")
    
Set the sample width to _n_ bytes. 

setframerate(_n_)[¶](https://docs.python.org/3/library/wave.html#wave.Wave_write.setframerate "Link to this definition")
    
Set the frame rate to _n_.
Changed in version 3.2: A non-integral input to this method is rounded to the nearest integer. 

setnframes(_n_)[¶](https://docs.python.org/3/library/wave.html#wave.Wave_write.setnframes "Link to this definition")
    
Set the number of frames to _n_. This will be changed later if the number of frames actually written is different (this update attempt will raise an error if the output stream is not seekable). 

setcomptype(_type_ , _name_)[¶](https://docs.python.org/3/library/wave.html#wave.Wave_write.setcomptype "Link to this definition")
    
Set the compression type and description. At the moment, only compression type `NONE` is supported, meaning no compression. 

setparams(_tuple_)[¶](https://docs.python.org/3/library/wave.html#wave.Wave_write.setparams "Link to this definition")
    
The _tuple_ should be `(nchannels, sampwidth, framerate, nframes, comptype, compname)`, with values valid for the `set*()` methods. Sets all parameters. 

tell()[¶](https://docs.python.org/3/library/wave.html#wave.Wave_write.tell "Link to this definition")
    
Return current position in the file, with the same disclaimer for the [`Wave_read.tell()`](https://docs.python.org/3/library/wave.html#wave.Wave_read.tell "wave.Wave_read.tell") and [`Wave_read.setpos()`](https://docs.python.org/3/library/wave.html#wave.Wave_read.setpos "wave.Wave_read.setpos") methods. 

writeframesraw(_data_)[¶](https://docs.python.org/3/library/wave.html#wave.Wave_write.writeframesraw "Link to this definition")
    
Write audio frames, without correcting _nframes_.
Changed in version 3.4: Any [bytes-like object](https://docs.python.org/3/glossary.html#term-bytes-like-object) is now accepted.