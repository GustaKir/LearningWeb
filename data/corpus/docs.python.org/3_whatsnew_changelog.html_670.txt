Title: Python 3 Library Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section outlines recent updates to the Python library, including the addition of PEP 519 support in the os and os.path modules, enhancements to collections.abc, and the implementation of 'anti-registration' for special methods in abstract base classes.
---

### Library[¶](https://docs.python.org/3/whatsnew/changelog.html#id669 "Link to this heading")
  * [bpo-26027](https://bugs.python.org/issue?@action=redirect&bpo=26027): Add [**PEP 519**](https://peps.python.org/pep-0519/)/__fspath__() support to the os and os.path modules. Includes code from Jelle Zijlstra. (See also: [bpo-27524](https://bugs.python.org/issue?@action=redirect&bpo=27524))
  * [bpo-27598](https://bugs.python.org/issue?@action=redirect&bpo=27598): Add Collections to collections.abc. Patch by Ivan Levkivskyi, docs by Neil Girdhar.
  * [bpo-25958](https://bugs.python.org/issue?@action=redirect&bpo=25958): Support “anti-registration” of special methods from various ABCs, like __hash__, __iter__ or __len__. All these (and several more) can be set to None in an implementation class and the behavior will be as if the method is not defined at all. (Previously, this mechanism existed only for __hash__, to make mutable classes unhashable.) Code contributed by Andrew Barnert and Ivan Levkivskyi.
  * [bpo-16764](https://bugs.python.org/issue?@action=redirect&bpo=16764): Support keyword arguments to zlib.decompress(). Patch by Xiang Zhang.
  * [bpo-27736](https://bugs.python.org/issue?@action=redirect&bpo=27736): Prevent segfault after interpreter re-initialization due to ref count problem introduced in code for [bpo-27038](https://bugs.python.org/issue?@action=redirect&bpo=27038) in 3.6.0a3. Patch by Xiang Zhang.
  * [bpo-25628](https://bugs.python.org/issue?@action=redirect&bpo=25628): The _verbose_ and _rename_ parameters for collections.namedtuple are now keyword-only.
  * [bpo-12345](https://bugs.python.org/issue?@action=redirect&bpo=12345): Add mathematical constant tau to math and cmath. See also [**PEP 628**](https://peps.python.org/pep-0628/).
  * [bpo-26823](https://bugs.python.org/issue?@action=redirect&bpo=26823): traceback.StackSummary.format now abbreviates large sections of repeated lines as “[Previous line repeated {count} more times]” (this change then further affects other traceback display operations in the module). Patch by Emanuel Barry.
  * [bpo-27664](https://bugs.python.org/issue?@action=redirect&bpo=27664): Add to concurrent.futures.thread.ThreadPoolExecutor() the ability to specify a thread name prefix.
  * [bpo-27181](https://bugs.python.org/issue?@action=redirect&bpo=27181): Add geometric_mean and harmonic_mean to statistics module.
  * [bpo-27573](https://bugs.python.org/issue?@action=redirect&bpo=27573): code.interact now prints an message when exiting.
  * [bpo-6422](https://bugs.python.org/issue?@action=redirect&bpo=6422): Add autorange method to timeit.Timer objects.
  * [bpo-27773](https://bugs.python.org/issue?@action=redirect&bpo=27773): Correct some memory management errors server_hostname in _ssl.wrap_socket().
  * [bpo-26750](https://bugs.python.org/issue?@action=redirect&bpo=26750): unittest.mock.create_autospec() now works properly for subclasses of property() and other data descriptors. Removes the never publicly used, never documented unittest.mock.DescriptorTypes tuple.
  * [bpo-26754](https://bugs.python.org/issue?@action=redirect&bpo=26754): Undocumented support of general bytes-like objects as path in compile() and similar functions is now deprecated.
  * [bpo-26800](https://bugs.python.org/issue?@action=redirect&bpo=26800): Undocumented support of general bytes-like objects as paths in os functions is now deprecated.
  * [bpo-26981](https://bugs.python.org/issue?@action=redirect&bpo=26981): Add _order_ compatibility shim to enum.Enum for Python 2/3 code bases.
  * [bpo-27661](https://bugs.python.org/issue?@action=redirect&bpo=27661): Added tzinfo keyword argument to datetime.combine.
  * In the curses module, raise an error if window.getstr() or window.instr() is passed a negative value.
  * [bpo-27783](https://bugs.python.org/issue?@action=redirect&bpo=27783): Fix possible usage of uninitialized memory in operator.methodcaller.
  * [bpo-27774](https://bugs.python.org/issue?@action=redirect&bpo=27774): Fix possible Py_DECREF on unowned object in _sre.
  * [bpo-27760](https://bugs.python.org/issue?@action=redirect&bpo=27760): Fix possible integer overflow in binascii.b2a_qp.
  * [bpo-27758](https://bugs.python.org/issue?@action=redirect&bpo=27758): Fix possible integer overflow in the _csv module for large record lengths.
  * [bpo-27568](https://bugs.python.org/issue?@action=redirect&bpo=27568): Prevent HTTPoxy attack ([**CVE 2016-1000110**](https://www.cve.org/CVERecord?id=CVE-2016-1000110)). Ignore the HTTP_PROXY variable when REQUEST_METHOD environment is set, which indicates that the script is in CGI mode.
  * [bpo-7063](https://bugs.python.org/issue?@action=redirect&bpo=7063): Remove dead code from the “array” module’s slice handling. Patch by Chuck.
  * [bpo-27656](https://bugs.python.org/issue?@action=redirect&bpo=27656): Do not assume sched.h defines any SCHED_* constants.
  * [bpo-27130](https://bugs.python.org/issue?@action=redirect&bpo=27130): I