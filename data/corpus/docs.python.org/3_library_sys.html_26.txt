Title: Python sys Module: C API and Version Information
URL: https://docs.python.org/3/library/sys.html
Summary: This section covers key attributes of the sys module, including 'api_version', which helps in debugging C API version conflicts, 'version_info', a tuple detailing the Python version components, and 'warnoptions', which is related to warning options.
---

sys.api_version[¶](https://docs.python.org/3/library/sys.html#sys.api_version "Link to this definition")
    
The C API version for this interpreter. Programmers may find this useful when debugging version conflicts between Python and extension modules. 

sys.version_info[¶](https://docs.python.org/3/library/sys.html#sys.version_info "Link to this definition")
    
A tuple containing the five components of the version number: _major_ , _minor_ , _micro_ , _releaselevel_ , and _serial_. All values except _releaselevel_ are integers; the release level is `'alpha'`, `'beta'`, `'candidate'`, or `'final'`. The `version_info` value corresponding to the Python version 2.0 is `(2, 0, 0, 'final', 0)`. The components can also be accessed by name, so `sys.version_info[0]` is equivalent to `sys.version_info.major` and so on.
Changed in version 3.1: Added named component attributes. 

sys.warnoptions[¶](https://docs.python.org/3/library/sys.html#sys.warnoptions "Link to this definition")
    
This is an implementation detail of the warnings framework; do not modify this value. Refer to the [`warnings`](https://docs.python.org/3/library/warnings.html#module-warnings "warnings: Issue warning messages and control their disposition.") module for more information on the warnings framework. 

sys.winver[¶](https://docs.python.org/3/library/sys.html#sys.winver "Link to this definition")
    
The version number used to form registry keys on Windows platforms. This is stored as string resource 1000 in the Python DLL. The value is normally the major and minor versions of the running Python interpreter. It is provided in the [`sys`](https://docs.python.org/3/library/sys.html#module-sys "sys: Access system-specific parameters and functions.") module for informational purposes; modifying this value has no effect on the registry keys used by Python.
[Availability](https://docs.python.org/3/library/intro.html#availability): Windows. 

sys.monitoring
    
Namespace containing functions and constants for register callbacks and controlling monitoring events. See [`sys.monitoring`](https://docs.python.org/3/library/sys.monitoring.html#module-sys.monitoring "sys.monitoring: Access and control event monitoring") for details. 

sys._xoptions[¶](https://docs.python.org/3/library/sys.html#sys._xoptions "Link to this definition")
    
A dictionary of the various implementation-specific flags passed through the [`-X`](https://docs.python.org/3/using/cmdline.html#cmdoption-X) command-line option. Option names are either mapped to their values, if given explicitly, or to [`True`](https://docs.python.org/3/library/constants.html#True "True"). Example:
```
$ ./python-Xa=b-Xc
Python 3.2a3+ (py3k, Oct 16 2010, 20:14:50)
[GCC 4.4.3] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> import sys
>>> sys._xoptions
{'a': 'b', 'c': True}