Title: Python 2.7 Release Notes
URL: https://docs.python.org/3/whatsnew/2.7.html
Summary: This section discusses updates in Python 2.7, including enhancements to the `sqlite3` module that now supports loading SQLite extensions from shared libraries via `enable_load_extension(True)` and `load_extension()`, and mentions the contributions made by various developers.
---

(Contributed by Kristján Valur Jónsson; [bpo-6192](https://bugs.python.org/issue?@action=redirect&bpo=6192) and [bpo-6267](https://bugs.python.org/issue?@action=redirect&bpo=6267).)
  * Updated module: the [`sqlite3`](https://docs.python.org/3/library/sqlite3.html#module-sqlite3 "sqlite3: A DB-API 2.0 implementation using SQLite 3.x.") module has been updated to version 2.6.0 of the [pysqlite package](https://github.com/ghaering/pysqlite). Version 2.6.0 includes a number of bugfixes, and adds the ability to load SQLite extensions from shared libraries. Call the `enable_load_extension(True)` method to enable extensions, and then call [`load_extension()`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.load_extension "sqlite3.Connection.load_extension") to load a particular shared library. (Updated by Gerhard Häring.)
  * The [`ssl`](https://docs.python.org/3/library/ssl.html#module-ssl "ssl: TLS/SSL wrapper for socket objects") module’s [`SSLSocket`](https://docs.python.org/3/library/ssl.html#ssl.SSLSocket "ssl.SSLSocket") objects now support the buffer API, which fixed a test suite failure (fix by Antoine Pitrou; [bpo-7133](https://bugs.python.org/issue?@action=redirect&bpo=7133)) and automatically set OpenSSL’s `SSL_MODE_AUTO_RETRY`, which will prevent an error code being returned from `recv()` operations that trigger an SSL renegotiation (fix by Antoine Pitrou; [bpo-8222](https://bugs.python.org/issue?@action=redirect&bpo=8222)).
The [`wrap_socket()`](https://docs.python.org/3/library/ssl.html#ssl.SSLContext.wrap_socket "ssl.SSLContext.wrap_socket") constructor function now takes a _ciphers_ argument that’s a string listing the encryption algorithms to be allowed; the format of the string is described [in the OpenSSL documentation](https://docs.openssl.org/1.0.2/man1/ciphers/). (Added by Antoine Pitrou; [bpo-8322](https://bugs.python.org/issue?@action=redirect&bpo=8322).)
Another change makes the extension load all of OpenSSL’s ciphers and digest algorithms so that they’re all available. Some SSL certificates couldn’t be verified, reporting an “unknown algorithm” error. (Reported by Beda Kosata, and fixed by Antoine Pitrou; [bpo-8484](https://bugs.python.org/issue?@action=redirect&bpo=8484).)
The version of OpenSSL being used is now available as the module attributes [`ssl.OPENSSL_VERSION`](https://docs.python.org/3/library/ssl.html#ssl.OPENSSL_VERSION "ssl.OPENSSL_VERSION") (a string), [`ssl.OPENSSL_VERSION_INFO`](https://docs.python.org/3/library/ssl.html#ssl.OPENSSL_VERSION_INFO "ssl.OPENSSL_VERSION_INFO") (a 5-tuple), and [`ssl.OPENSSL_VERSION_NUMBER`](https://docs.python.org/3/library/ssl.html#ssl.OPENSSL_VERSION_NUMBER "ssl.OPENSSL_VERSION_NUMBER") (an integer). (Added by Antoine Pitrou; [bpo-8321](https://bugs.python.org/issue?@action=redirect&bpo=8321).)
  * The [`struct`](https://docs.python.org/3/library/struct.html#module-struct "struct: Interpret bytes as packed binary data.") module will no longer silently ignore overflow errors when a value is too large for a particular integer format code (one of `bBhHiIlLqQ`); it now always raises a [`struct.error`](https://docs.python.org/3/library/struct.html#struct.error "struct.error") exception. (Changed by Mark Dickinson; [bpo-1523](https://bugs.python.org/issue?@action=redirect&bpo=1523).) The [`pack()`](https://docs.python.org/3/library/struct.html#struct.pack "struct.pack") function will also attempt to use [`__index__()`](https://docs.python.org/3/reference/datamodel.html#object.__index__ "object.__index__") to convert and pack non-integers before trying the [`__int__()`](https://docs.python.org/3/reference/datamodel.html#object.__int__ "object.__int__") method or reporting an error. (Changed by Mark Dickinson; [bpo-8300](https://bugs.python.org/issue?@action=redirect&bpo=8300).)
  * New function: the [`subprocess`](https://docs.python.org/3/library/subprocess.html#module-subprocess "subprocess: Subprocess management.") module’s [`check_output()`](https://docs.python.org/3/library/subprocess.html#subprocess.check_output "subprocess.check_output") runs a command with a specified set of arguments and returns the command’s output as a string when the command runs without error, or raises a [`CalledProcessError`](https://docs.python.org/3/library/subprocess.html#subprocess.CalledProcessError "subprocess.CalledProcessError") exception otherwise.
>>>```
>>> subprocess.check_output(['df', '-h', '.'])
'Filesystem   Size  Used Avail Capacity Mounted on\n
/dev/disk0s2  52G  49G  3.0G  94%  /\n'
>>> subprocess.check_output(['df', '-h', '/bogus'])
 ...
subprocess.CalledProcessError: Command '['df', '-h', '/bogus']' returned non-zero exit status 1