Title: Python 3 Updates on Issues and Improvements
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This document covers updates related to the Python signal module support on VxWorks, fixes to `pickle.whichmodule` that could affect object unpickling, and simplifications made to the `importlib` external bootstrap code which now allows for regular imports of built-in modules.
---

po-31904](https://bugs.python.org/issue?@action=redirect&bpo=31904): Support signal module on VxWorks.
  * [bpo-42406](https://bugs.python.org/issue?@action=redirect&bpo=42406): We fixed an issue in `pickle.whichmodule` in which importing `multiprocessing` could change the how pickle identifies which module an object belongs to, potentially breaking the unpickling of those objects.
  * [bpo-42403](https://bugs.python.org/issue?@action=redirect&bpo=42403): Simplify the [`importlib`](https://docs.python.org/3/library/importlib.html#module-importlib "importlib: The implementation of the import machinery.") external bootstrap code: `importlib._bootstrap_external` now uses regular imports to import builtin modules. When it is imported, the builtin [`__import__()`](https://docs.python.org/3/library/functions.html#import__ "__import__") function is already fully working and so can be used to import builtin modules like [`sys`](https://docs.python.org/3/library/sys.html#module-sys "sys: Access system-specific parameters and functions."). Patch by Victor Stinner.
  * [bpo-1635741](https://bugs.python.org/issue?@action=redirect&bpo=1635741): Convert _sre module types to heap types (PEP 384). Patch by Erlend E. Aasland.
  * [bpo-42375](https://bugs.python.org/issue?@action=redirect&bpo=42375): subprocess module update for DragonFlyBSD support.
  * [bpo-41713](https://bugs.python.org/issue?@action=redirect&bpo=41713): Port the `_signal` extension module to the multi-phase initialization API ([**PEP 489**](https://peps.python.org/pep-0489/)). Patch by Victor Stinner and Mohamed Koubaa.
  * [bpo-37205](https://bugs.python.org/issue?@action=redirect&bpo=37205): [`time.time()`](https://docs.python.org/3/library/time.html#time.time "time.time"), [`time.perf_counter()`](https://docs.python.org/3/library/time.html#time.perf_counter "time.perf_counter") and [`time.monotonic()`](https://docs.python.org/3/library/time.html#time.monotonic "time.monotonic") functions can no longer fail with a Python fatal error, instead raise a regular Python exception on failure.
  * [bpo-42328](https://bugs.python.org/issue?@action=redirect&bpo=42328): Fixed [`tkinter.ttk.Style.map()`](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Style.map "tkinter.ttk.Style.map"). The function accepts now the representation of the default state as empty sequence (as returned by `Style.map()`). The structure of the result is now the same on all platform and does not depend on the value of `wantobjects`.
  * [bpo-42345](https://bugs.python.org/issue?@action=redirect&bpo=42345): Fix various issues with `typing.Literal` parameter handling (flatten, deduplicate, use type to cache key). Patch provided by Yurii Karabas.
  * [bpo-37205](https://bugs.python.org/issue?@action=redirect&bpo=37205): [`time.perf_counter()`](https://docs.python.org/3/library/time.html#time.perf_counter "time.perf_counter") on Windows and [`time.monotonic()`](https://docs.python.org/3/library/time.html#time.monotonic "time.monotonic") on macOS are now system-wide. Previously, they used an offset computed at startup to reduce the precision loss caused by the float type. Use [`time.perf_counter_ns()`](https://docs.python.org/3/library/time.html#time.perf_counter_ns "time.perf_counter_ns") and [`time.monotonic_ns()`](https://docs.python.org/3/library/time.html#time.monotonic_ns "time.monotonic_ns") added in Python 3.7 to avoid this precision loss.
  * [bpo-42318](https://bugs.python.org/issue?@action=redirect&bpo=42318): Fixed support of non-BMP characters in [`tkinter`](https://docs.python.org/3/library/tkinter.html#module-tkinter "tkinter: Interface to Tcl/Tk for graphical user interfaces") on macOS.
  * [bpo-42350](https://bugs.python.org/issue?@action=redirect&bpo=42350): Fix the [`threading.Thread`](https://docs.python.org/3/library/threading.html#threading.Thread "threading.Thread") class at fork: do nothing if the thread is already stopped (ex: fork called at Python exit). Previously, an error was logged in the child process.
  * [bpo-42333](https://bugs.python.org/issue?@action=redirect&bpo=42333): Port _ssl extension module to heap types.
  * [bpo-42014](https://bugs.python.org/issue?@action=redirect&bpo=42014): The `onerror` callback from `shutil.rmtree` now receives correct function when `os.open` fails.
  * [bpo-42237](https://bugs.python.org/issue?@action=redirect&bpo=42237): Fix `os.sendfile()` on illumos.
  * [bpo-42308](https://bugs.python.org/issue?@action=redirect&bpo=42308): Add [`threading.__excepthook__`](https://docs.python.org/3/library/threading.html#threading.__excepthook__ "threading.__excepthook__") to allow retrieving the original value of [`threading.excepthook()`](https://docs.python.org/3/library/threading.html#threading.excepthook "threading.excepthook") in case it is set to a broken or a different value.