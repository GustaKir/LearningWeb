Title: Setting Socket Options with setsockopt
URL: https://docs.python.org/3/library/socket.html
Summary: The `setsockopt` function in the socket module allows users to set the value of a socket option. It accepts parameters for the option level, option name, and the value, which can be an integer, `None`, or a bytes-like object. Proper handling of the bytestring is required, with potential use of the `struct` module for encoding.
---

socket.setsockopt(_level_ , _optname_ , _value :[int](https://docs.python.org/3/library/functions.html#int "int")_)[¶](https://docs.python.org/3/library/socket.html#socket.socket.setsockopt "Link to this definition")


socket.setsockopt(_level_ , _optname_ , _value :buffer_)


socket.setsockopt(_level_ , _optname_ , _None_ , _optlen: int_)
    
Set the value of the given socket option (see the Unix manual page _[setsockopt(2)](https://manpages.debian.org/setsockopt\(2\))_). The needed symbolic constants are defined in this module (SO_* etc. <socket-unix-constants>). The value can be an integer, `None` or a [bytes-like object](https://docs.python.org/3/glossary.html#term-bytes-like-object) representing a buffer. In the later case it is up to the caller to ensure that the bytestring contains the proper bits (see the optional built-in module [`struct`](https://docs.python.org/3/library/struct.html#module-struct "struct: Interpret bytes as packed binary data.") for a way to encode C structures as bytestrings). When _value_ is set to `None`, _optlen_ argument is required. It’s equivalent to call `setsockopt()` C function with `optval=NULL` and `optlen=optlen`.
Changed in version 3.5: Writable [bytes-like object](https://docs.python.org/3/glossary.html#term-bytes-like-object) is now accepted.
Changed in version 3.6: setsockopt(level, optname, None, optlen: int) form added.
[Availability](https://docs.python.org/3/library/intro.html#availability): not WASI. 

socket.shutdown(_how_)[¶](https://docs.python.org/3/library/socket.html#socket.socket.shutdown "Link to this definition")
    
Shut down one or both halves of the connection. If _how_ is [`SHUT_RD`](https://docs.python.org/3/library/socket.html#socket.SHUT_RD "socket.SHUT_RD"), further receives are disallowed. If _how_ is [`SHUT_WR`](https://docs.python.org/3/library/socket.html#socket.SHUT_WR "socket.SHUT_WR"), further sends are disallowed. If _how_ is [`SHUT_RDWR`](https://docs.python.org/3/library/socket.html#socket.SHUT_RDWR "socket.SHUT_RDWR"), further sends and receives are disallowed.
[Availability](https://docs.python.org/3/library/intro.html#availability): not WASI. 

socket.share(_process_id_)[¶](https://docs.python.org/3/library/socket.html#socket.socket.share "Link to this definition")
    
Duplicate a socket and prepare it for sharing with a target process. The target process must be provided with _process_id_. The resulting bytes object can then be passed to the target process using some form of interprocess communication and the socket can be recreated there using [`fromshare()`](https://docs.python.org/3/library/socket.html#socket.fromshare "socket.fromshare"). Once this method has been called, it is safe to close the socket since the operating system has already duplicated it for the target process.
[Availability](https://docs.python.org/3/library/intro.html#availability): Windows.
Added in version 3.3.
Note that there are no methods `read()` or `write()`; use [`recv()`](https://docs.python.org/3/library/socket.html#socket.socket.recv "socket.socket.recv") and [`send()`](https://docs.python.org/3/library/socket.html#socket.socket.send "socket.socket.send") without _flags_ argument instead.
Socket objects also have these (read-only) attributes that correspond to the values given to the [`socket`](https://docs.python.org/3/library/socket.html#socket.socket "socket.socket") constructor. 

socket.family[¶](https://docs.python.org/3/library/socket.html#socket.socket.family "Link to this definition")
    
The socket family. 

socket.type[¶](https://docs.python.org/3/library/socket.html#socket.socket.type "Link to this definition")
    
The socket type.