Title: Type Objects in Python C API
URL: https://docs.python.org/3/c-api/type.html
Summary: This section of the Python documentation introduces type objects within the C API, detailing their creation and management. It provides links to related topics such as heap-allocated types, as well as navigation options for previous and next topics.
---

[ ![Python logo](https://docs.python.org/3/_static/py.svg) ](https://www.python.org/) dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
Theme  Auto Light Dark
### [Table of Contents](https://docs.python.org/3/contents.html)
  * [Type Objects](https://docs.python.org/3/c-api/type.html)
    * [Creating Heap-Allocated Types](https://docs.python.org/3/c-api/type.html#creating-heap-allocated-types)


#### Previous topic
[Concrete Objects Layer](https://docs.python.org/3/c-api/concrete.html "previous chapter")
#### Next topic
[The `None` Object](https://docs.python.org/3/c-api/none.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/c-api/type.rst)


### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/c-api/none.html "The None Object") |
  * [previous](https://docs.python.org/3/c-api/concrete.html "Concrete Objects Layer") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [Python/C API Reference Manual](https://docs.python.org/3/c-api/index.html) »
  * [Concrete Objects Layer](https://docs.python.org/3/c-api/concrete.html) »
  * [Type Objects](https://docs.python.org/3/c-api/type.html)
  * | 
  * Theme  Auto Light Dark |


# Type Objects[¶](https://docs.python.org/3/c-api/type.html#type-objects "Link to this heading") 

typePyTypeObject[¶](https://docs.python.org/3/c-api/type.html#c.PyTypeObject "Link to this definition")
    _Part of the[ Limited API](https://docs.python.org/3/c-api/stable.html#stable) (as an opaque struct)._
The C structure of the objects used to describe built-in types. 

[PyTypeObject](https://docs.python.org/3/c-api/type.html#c.PyTypeObject "PyTypeObject")PyType_Type[¶](https://docs.python.org/3/c-api/type.html#c.PyType_Type "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
This is the type object for type objects; it is the same object as [`type`](https://docs.python.org/3/library/functions.html#type "type") in the Python layer. 

intPyType_Check([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*o)[¶](https://docs.python.org/3/c-api/type.html#c.PyType_Check "Link to this definition")
    
Return non-zero if the object _o_ is a type object, including instances of types derived from the standard type object. Return 0 in all other cases. This function always succeeds. 

intPyType_CheckExact([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*o)[¶](https://docs.python.org/3/c-api/type.html#c.PyType_CheckExact "Link to this definition")
    
Return non-zero if the object _o_ is a type object, but not a subtype of the standard type object. Return 0 in all other cases. This function always succeeds. 

unsignedintPyType_ClearCache()[¶](https://docs.python.org/3/c-api/type.html#c.PyType_ClearCache "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Clear the internal lookup cache. Return the current version tag. 

unsignedlongPyType_GetFlags([PyTypeObject](https://docs.python.org/3/c-api/type.html#c.PyTypeObject "PyTypeObject")*type)[¶](https://docs.python.org/3/c-api/type.html#c.PyType_GetFlags "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Return the [`tp_flags`](https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_flags "PyTypeObject.tp_flags") member of _type_. This function is primarily meant for use with `Py_LIMITED_API`; the individual flag bits are guaranteed to be stable across Python releases, but access to [`tp_flags`](https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_flags "PyTypeObject.tp_flags") itself is not part of the [limited API](https://docs.python.org/3/c-api/stable.html#limited-c-api).
Added in version 3.2.
Changed in version 3.4: The return type is now `unsigned long` rather than `long`.