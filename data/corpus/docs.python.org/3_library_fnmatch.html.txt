Title: fnmatch — Unix filename pattern matching
URL: https://docs.python.org/3/library/fnmatch.html
Summary: The 'fnmatch' module in Python provides functions for comparing filenames against Unix shell-style wildcards. It permits matching filenames using patterns that include characters such as '*', '?', and brackets, facilitating file handling that adheres to Unix conventions.
---

[ ![Python logo](https://docs.python.org/3/_static/py.svg) ](https://www.python.org/) dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
Theme  Auto Light Dark
#### Previous topic
[`glob` — Unix style pathname pattern expansion](https://docs.python.org/3/library/glob.html "previous chapter")
#### Next topic
[`linecache` — Random access to text lines](https://docs.python.org/3/library/linecache.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/fnmatch.rst)


### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/library/linecache.html "linecache — Random access to text lines") |
  * [previous](https://docs.python.org/3/library/glob.html "glob — Unix style pathname pattern expansion") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [The Python Standard Library](https://docs.python.org/3/library/index.html) »
  * [File and Directory Access](https://docs.python.org/3/library/filesys.html) »
  * [`fnmatch` — Unix filename pattern matching](https://docs.python.org/3/library/fnmatch.html)
  * | 
  * Theme  Auto Light Dark |


# `fnmatch` — Unix filename pattern matching[¶](https://docs.python.org/3/library/fnmatch.html#module-fnmatch "Link to this heading")
**Source code:** [Lib/fnmatch.py](https://github.com/python/cpython/tree/3.13/Lib/fnmatch.py)
This module provides support for Unix shell-style wildcards, which are _not_ the same as regular expressions (which are documented in the [`re`](https://docs.python.org/3/library/re.html#module-re "re: Regular expression operations.") module). The special characters used in shell-style wildcards are:
Pattern | Meaning  
---|---  
`*` | matches everything  
`?` | matches any single character  
`[seq]` | matches any character in _seq_  
`[!seq]` | matches any character not in _seq_  
For a literal match, wrap the meta-characters in brackets. For example, `'[?]'` matches the character `'?'`.
Note that the filename separator (`'/'` on Unix) is _not_ special to this module. See module [`glob`](https://docs.python.org/3/library/glob.html#module-glob "glob: Unix shell style pathname pattern expansion.") for pathname expansion ([`glob`](https://docs.python.org/3/library/glob.html#module-glob "glob: Unix shell style pathname pattern expansion.") uses [`filter()`](https://docs.python.org/3/library/fnmatch.html#fnmatch.filter "fnmatch.filter") to match pathname segments). Similarly, filenames starting with a period are not special for this module, and are matched by the `*` and `?` patterns.
Unless stated otherwise, “filename string” and “pattern string” either refer to [`str`](https://docs.python.org/3/library/stdtypes.html#str "str") or `ISO-8859-1` encoded [`bytes`](https://docs.python.org/3/library/stdtypes.html#bytes "bytes") objects. Note that the functions documented below do not allow to mix a `bytes` pattern with a `str` filename, and vice-versa.
Finally, note that [`functools.lru_cache()`](https://docs.python.org/3/library/functools.html#functools.lru_cache "functools.lru_cache") with a _maxsize_ of 32768 is used to cache the (typed) compiled regex patterns in the following functions: [`fnmatch()`](https://docs.python.org/3/library/fnmatch.html#module-fnmatch "fnmatch: Unix shell style filename pattern matching."), [`fnmatchcase()`](https://docs.python.org/3/library/fnmatch.html#fnmatch.fnmatchcase "fnmatch.fnmatchcase"), [`filter()`](https://docs.python.org/3/library/fnmatch.html#fnmatch.filter "fnmatch.filter").