Title: Doctest Example Attributes
URL: https://docs.python.org/3/library/doctest.html
Summary: This section describes two attributes of the 'Example' class in Python's doctest module: 'exc_msg', which holds the exception message generated by the example if an exception is expected, and 'lineno', which indicates the zero-based line number where the example begins in the string.
---

exc_msg[¶](https://docs.python.org/3/library/doctest.html#doctest.Example.exc_msg "Link to this definition")
    
The exception message generated by the example, if the example is expected to generate an exception; or `None` if it is not expected to generate an exception. This exception message is compared against the return value of [`traceback.format_exception_only()`](https://docs.python.org/3/library/traceback.html#traceback.format_exception_only "traceback.format_exception_only"). [`exc_msg`](https://docs.python.org/3/library/doctest.html#doctest.Example.exc_msg "doctest.Example.exc_msg") ends with a newline unless it’s `None`. The constructor adds a newline if needed. 

lineno[¶](https://docs.python.org/3/library/doctest.html#doctest.Example.lineno "Link to this definition")
    
The line number within the string containing this example where the example begins. This line number is zero-based with respect to the beginning of the containing string. 

indent[¶](https://docs.python.org/3/library/doctest.html#doctest.Example.indent "Link to this definition")
    
The example’s indentation in the containing string, i.e., the number of space characters that precede the example’s first prompt. 

options[¶](https://docs.python.org/3/library/doctest.html#doctest.Example.options "Link to this definition")
    
A dictionary mapping from option flags to `True` or `False`, which is used to override default options for this example. Any option flags not contained in this dictionary are left at their default value (as specified by the [`DocTestRunner`](https://docs.python.org/3/library/doctest.html#doctest.DocTestRunner "doctest.DocTestRunner")’s [optionflags](https://docs.python.org/3/library/doctest.html#doctest-options)). By default, no options are set.
### DocTestFinder objects[¶](https://docs.python.org/3/library/doctest.html#doctestfinder-objects "Link to this heading") 

_class_ doctest.DocTestFinder(_verbose =False_, _parser =DocTestParser()_, _recurse =True_, _exclude_empty =True_)[¶](https://docs.python.org/3/library/doctest.html#doctest.DocTestFinder "Link to this definition")
    
A processing class used to extract the [`DocTest`](https://docs.python.org/3/library/doctest.html#doctest.DocTest "doctest.DocTest")s that are relevant to a given object, from its docstring and the docstrings of its contained objects. [`DocTest`](https://docs.python.org/3/library/doctest.html#doctest.DocTest "doctest.DocTest")s can be extracted from modules, classes, functions, methods, staticmethods, classmethods, and properties.
The optional argument _verbose_ can be used to display the objects searched by the finder. It defaults to `False` (no output).
The optional argument _parser_ specifies the [`DocTestParser`](https://docs.python.org/3/library/doctest.html#doctest.DocTestParser "doctest.DocTestParser") object (or a drop-in replacement) that is used to extract doctests from docstrings.
If the optional argument _recurse_ is false, then [`DocTestFinder.find()`](https://docs.python.org/3/library/doctest.html#doctest.DocTestFinder.find "doctest.DocTestFinder.find") will only examine the given object, and not any contained objects.
If the optional argument _exclude_empty_ is false, then [`DocTestFinder.find()`](https://docs.python.org/3/library/doctest.html#doctest.DocTestFinder.find "doctest.DocTestFinder.find") will include tests for objects with empty docstrings.
[`DocTestFinder`](https://docs.python.org/3/library/doctest.html#doctest.DocTestFinder "doctest.DocTestFinder") defines the following method: 

find(_obj[, name][, module][, globs][, extraglobs]_)[¶](https://docs.python.org/3/library/doctest.html#doctest.DocTestFinder.find "Link to this definition")
    
Return a list of the [`DocTest`](https://docs.python.org/3/library/doctest.html#doctest.DocTest "doctest.DocTest")s that are defined by _obj_ ’s docstring, or by any of its contained objects’ docstrings.
The optional argument _name_ specifies the object’s name; this name will be used to construct names for the returned [`DocTest`](https://docs.python.org/3/library/doctest.html#doctest.DocTest "doctest.DocTest")s. If _name_ is not specified, then `obj.__name__` is used.
The optional parameter _module_ is the module that contains the given object. If the module is not specified or is `None`, then the test finder will attempt to automatically determine the correct module. The object’s module is used:
  * As a default namespace, if _globs_ is not specified.
  * To prevent the DocTestFinder from extracting DocTests from objects that are imported from other modules. (Contained objects with modules other than _module_ are ignored.)
  * To find the name of the file containing the object.
  * To help find the line number of the object within its file.