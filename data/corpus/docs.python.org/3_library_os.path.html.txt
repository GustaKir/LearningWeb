Title: OS Path Module Documentation
URL: https://docs.python.org/3/library/os.path.html
Summary: This documentation covers the Python `os.path` module, which provides various functions for manipulating filesystem paths. It includes navigation links to related topics, such as `pathlib` and `stat`. The page also offers options for reporting bugs and accessing the source code.
---

[ ![Python logo](https://docs.python.org/3/_static/py.svg) ](https://www.python.org/) dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
Theme  Auto Light Dark
#### Previous topic
[`pathlib` — Object-oriented filesystem paths](https://docs.python.org/3/library/pathlib.html "previous chapter")
#### Next topic
[`stat` — Interpreting `stat()` results](https://docs.python.org/3/library/stat.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/os.path.rst)


### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/library/stat.html "stat — Interpreting stat\(\) results") |
  * [previous](https://docs.python.org/3/library/pathlib.html "pathlib — Object-oriented filesystem paths") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [The Python Standard Library](https://docs.python.org/3/library/index.html) »
  * [File and Directory Access](https://docs.python.org/3/library/filesys.html) »
  * [`os.path` — Common pathname manipulations](https://docs.python.org/3/library/os.path.html)
  * | 
  * Theme  Auto Light Dark |


# `os.path` — Common pathname manipulations[¶](https://docs.python.org/3/library/os.path.html#module-os.path "Link to this heading")
**Source code:** [Lib/genericpath.py](https://github.com/python/cpython/tree/3.13/Lib/genericpath.py), [Lib/posixpath.py](https://github.com/python/cpython/tree/3.13/Lib/posixpath.py) (for POSIX) and [Lib/ntpath.py](https://github.com/python/cpython/tree/3.13/Lib/ntpath.py) (for Windows).
This module implements some useful functions on pathnames. To read or write files see [`open()`](https://docs.python.org/3/library/functions.html#open "open"), and for accessing the filesystem see the [`os`](https://docs.python.org/3/library/os.html#module-os "os: Miscellaneous operating system interfaces.") module. The path parameters can be passed as strings, or bytes, or any object implementing the [`os.PathLike`](https://docs.python.org/3/library/os.html#os.PathLike "os.PathLike") protocol.
Unlike a Unix shell, Python does not do any _automatic_ path expansions. Functions such as [`expanduser()`](https://docs.python.org/3/library/os.path.html#os.path.expanduser "os.path.expanduser") and [`expandvars()`](https://docs.python.org/3/library/os.path.html#os.path.expandvars "os.path.expandvars") can be invoked explicitly when an application desires shell-like path expansion. (See also the [`glob`](https://docs.python.org/3/library/glob.html#module-glob "glob: Unix shell style pathname pattern expansion.") module.)
See also
The [`pathlib`](https://docs.python.org/3/library/pathlib.html#module-pathlib "pathlib: Object-oriented filesystem paths") module offers high-level path objects.
Note
All of these functions accept either only bytes or only string objects as their parameters. The result is an object of the same type, if a path or file name is returned.
Note
Since different operating systems have different path name conventions, there are several versions of this module in the standard library. The [`os.path`](https://docs.python.org/3/library/os.path.html#module-os.path "os.path: Operations on pathnames.") module is always the path module suitable for the operating system Python is running on, and therefore usable for local paths. However, you can also import and use the individual modules if you want to manipulate a path that is _always_ in one of the different formats. They all have the same interface:
  * `posixpath` for UNIX-style paths
  * `ntpath` for Windows paths