Title: Binary Data Services
URL: https://docs.python.org/3/library/binary.html
Summary: This chapter covers modules that provide basic operations for manipulating binary data, including references to relevant operations related to file formats and network protocols. It also mentions libraries from Text Processing Services that handle ASCII-compatible binary formats and discusses Python's built-in binary data types.
---

# Binary Data Services[¶](https://docs.python.org/3/library/binary.html#binary-data-services "Link to this heading")
The modules described in this chapter provide some basic services operations for manipulation of binary data. Other operations on binary data, specifically in relation to file formats and network protocols, are described in the relevant sections.
Some libraries described under [Text Processing Services](https://docs.python.org/3/library/text.html#textservices) also work with either ASCII-compatible binary formats (for example, [`re`](https://docs.python.org/3/library/re.html#module-re "re: Regular expression operations.")) or all binary data (for example, [`difflib`](https://docs.python.org/3/library/difflib.html#module-difflib "difflib: Helpers for computing differences between objects.")).
In addition, see the documentation for Python’s built-in binary data types in [Binary Sequence Types — bytes, bytearray, memoryview](https://docs.python.org/3/library/stdtypes.html#binaryseq).
  * [`struct` — Interpret bytes as packed binary data](https://docs.python.org/3/library/struct.html)
    * [Functions and Exceptions](https://docs.python.org/3/library/struct.html#functions-and-exceptions)
    * [Format Strings](https://docs.python.org/3/library/struct.html#format-strings)
      * [Byte Order, Size, and Alignment](https://docs.python.org/3/library/struct.html#byte-order-size-and-alignment)
      * [Format Characters](https://docs.python.org/3/library/struct.html#format-characters)
      * [Examples](https://docs.python.org/3/library/struct.html#examples)
    * [Applications](https://docs.python.org/3/library/struct.html#applications)
      * [Native Formats](https://docs.python.org/3/library/struct.html#native-formats)
      * [Standard Formats](https://docs.python.org/3/library/struct.html#standard-formats)
    * [Classes](https://docs.python.org/3/library/struct.html#classes)
  * [`codecs` — Codec registry and base classes](https://docs.python.org/3/library/codecs.html)
    * [Codec Base Classes](https://docs.python.org/3/library/codecs.html#codec-base-classes)
      * [Error Handlers](https://docs.python.org/3/library/codecs.html#error-handlers)
      * [Stateless Encoding and Decoding](https://docs.python.org/3/library/codecs.html#stateless-encoding-and-decoding)
      * [Incremental Encoding and Decoding](https://docs.python.org/3/library/codecs.html#incremental-encoding-and-decoding)
        * [IncrementalEncoder Objects](https://docs.python.org/3/library/codecs.html#incrementalencoder-objects)
        * [IncrementalDecoder Objects](https://docs.python.org/3/library/codecs.html#incrementaldecoder-objects)
      * [Stream Encoding and Decoding](https://docs.python.org/3/library/codecs.html#stream-encoding-and-decoding)
        * [StreamWriter Objects](https://docs.python.org/3/library/codecs.html#streamwriter-objects)
        * [StreamReader Objects](https://docs.python.org/3/library/codecs.html#streamreader-objects)
        * [StreamReaderWriter Objects](https://docs.python.org/3/library/codecs.html#streamreaderwriter-objects)
        * [StreamRecoder Objects](https://docs.python.org/3/library/codecs.html#streamrecoder-objects)
    * [Encodings and Unicode](https://docs.python.org/3/library/codecs.html#encodings-and-unicode)
    * [Standard Encodings](https://docs.python.org/3/library/codecs.html#standard-encodings)
    * [Python Specific Encodings](https://docs.python.org/3/library/codecs.html#python-specific-encodings)
      * [Text Encodings](https://docs.python.org/3/library/codecs.html#text-encodings)
      * [Binary Transforms](https://docs.python.org/3/library/codecs.html#binary-transforms)
      * [Text Transforms](https://docs.python.org/3/library/codecs.html#text-transforms)
    * [`encodings.idna` — Internationalized Domain Names in Applications](https://docs.python.org/3/library/codecs.html#module-encodings.idna)
    * [`encodings.mbcs` — Windows ANSI codepage](https://docs.python.org/3/library/codecs.html#module-encodings.mbcs)
    * [`encodings.utf_8_sig` — UTF-8 codec with BOM signature](https://docs.python.org/3/library/codecs.html#module-encodings.utf_8_sig)


#### Previous topic
[`rlcompleter` — Completion function for GNU readline](https://docs.python.org/3/library/rlcompleter.html "previous chapter")
#### Next topic
[`struct` — Interpret bytes as packed binary data](https://docs.python.org/3/library/struct.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/binary.rst)