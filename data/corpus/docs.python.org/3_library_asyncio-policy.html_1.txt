Title: asyncio Event Loop Policy
URL: https://docs.python.org/3/library/asyncio-policy.html
Summary: The 'asyncio.set_event_loop_policy' function sets the current process-wide event loop policy to a specified policy or restores the default if set to None. It includes an abstract base class, 'asyncio.AbstractEventLoopPolicy', which defines the structure for asyncio policies, along with a method 'get_event_loop()' to retrieve the event loop for the current context.
---

asyncio.set_event_loop_policy(_policy_)[¶](https://docs.python.org/3/library/asyncio-policy.html#asyncio.set_event_loop_policy "Link to this definition")
    
Set the current process-wide policy to _policy_.
If _policy_ is set to `None`, the default policy is restored.
## Policy Objects[¶](https://docs.python.org/3/library/asyncio-policy.html#policy-objects "Link to this heading")
The abstract event loop policy base class is defined as follows: 

_class_ asyncio.AbstractEventLoopPolicy[¶](https://docs.python.org/3/library/asyncio-policy.html#asyncio.AbstractEventLoopPolicy "Link to this definition")
    
An abstract base class for asyncio policies. 

get_event_loop()[¶](https://docs.python.org/3/library/asyncio-policy.html#asyncio.AbstractEventLoopPolicy.get_event_loop "Link to this definition")
    
Get the event loop for the current context.
Return an event loop object implementing the [`AbstractEventLoop`](https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.AbstractEventLoop "asyncio.AbstractEventLoop") interface.
This method should never return `None`.
Changed in version 3.6. 

set_event_loop(_loop_)[¶](https://docs.python.org/3/library/asyncio-policy.html#asyncio.AbstractEventLoopPolicy.set_event_loop "Link to this definition")
    
Set the event loop for the current context to _loop_. 

new_event_loop()[¶](https://docs.python.org/3/library/asyncio-policy.html#asyncio.AbstractEventLoopPolicy.new_event_loop "Link to this definition")
    
Create and return a new event loop object.
This method should never return `None`. 

get_child_watcher()[¶](https://docs.python.org/3/library/asyncio-policy.html#asyncio.AbstractEventLoopPolicy.get_child_watcher "Link to this definition")
    
Get a child process watcher object.
Return a watcher object implementing the [`AbstractChildWatcher`](https://docs.python.org/3/library/asyncio-policy.html#asyncio.AbstractChildWatcher "asyncio.AbstractChildWatcher") interface.
This function is Unix specific.
Deprecated since version 3.12. 

set_child_watcher(_watcher_)[¶](https://docs.python.org/3/library/asyncio-policy.html#asyncio.AbstractEventLoopPolicy.set_child_watcher "Link to this definition")
    
Set the current child process watcher to _watcher_.
This function is Unix specific.
Deprecated since version 3.12.
asyncio ships with the following built-in policies: 

_class_ asyncio.DefaultEventLoopPolicy[¶](https://docs.python.org/3/library/asyncio-policy.html#asyncio.DefaultEventLoopPolicy "Link to this definition")
    
The default asyncio policy. Uses [`SelectorEventLoop`](https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.SelectorEventLoop "asyncio.SelectorEventLoop") on Unix and [`ProactorEventLoop`](https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.ProactorEventLoop "asyncio.ProactorEventLoop") on Windows.
There is no need to install the default policy manually. asyncio is configured to use the default policy automatically.
Changed in version 3.8: On Windows, [`ProactorEventLoop`](https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.ProactorEventLoop "asyncio.ProactorEventLoop") is now used by default.
Deprecated since version 3.12: The [`get_event_loop()`](https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.get_event_loop "asyncio.get_event_loop") method of the default asyncio policy now emits a [`DeprecationWarning`](https://docs.python.org/3/library/exceptions.html#DeprecationWarning "DeprecationWarning") if there is no current event loop set and it decides to create one. In some future Python release this will become an error. 

_class_ asyncio.WindowsSelectorEventLoopPolicy[¶](https://docs.python.org/3/library/asyncio-policy.html#asyncio.WindowsSelectorEventLoopPolicy "Link to this definition")
    
An alternative event loop policy that uses the [`SelectorEventLoop`](https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.SelectorEventLoop "asyncio.SelectorEventLoop") event loop implementation.
[Availability](https://docs.python.org/3/library/intro.html#availability): Windows.