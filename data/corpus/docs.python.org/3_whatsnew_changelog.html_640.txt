Title: Python 3.9 Changelog: Core and Builtins Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section details various bug fixes related to the core and built-in functionalities of Python, including assertion failures in `subprocess.Popen()` and issues with error handling in `PyErr_WriteUnraisable()`. Notable patches by Oren Milman address problems stemming from bad attributes or incorrect handling of warnings.
---

### Core and Builtins[¶](https://docs.python.org/3/whatsnew/changelog.html#id606 "Link to this heading")
  * [bpo-31471](https://bugs.python.org/issue?@action=redirect&bpo=31471): Fix an assertion failure in `subprocess.Popen()` on Windows, in case the env argument has a bad `keys()` method. Patch by Oren Milman.
  * [bpo-31418](https://bugs.python.org/issue?@action=redirect&bpo=31418): Fix an assertion failure in `PyErr_WriteUnraisable()` in case of an exception with a bad `__module__` attribute. Patch by Oren Milman.
  * [bpo-31416](https://bugs.python.org/issue?@action=redirect&bpo=31416): Fix assertion failures in case of a bad warnings.filters or warnings.defaultaction. Patch by Oren Milman.
  * [bpo-31411](https://bugs.python.org/issue?@action=redirect&bpo=31411): Raise a TypeError instead of SystemError in case warnings.onceregistry is not a dictionary. Patch by Oren Milman.
  * [bpo-31373](https://bugs.python.org/issue?@action=redirect&bpo=31373): Fix several possible instances of undefined behavior due to floating-point demotions.
  * [bpo-30465](https://bugs.python.org/issue?@action=redirect&bpo=30465): Location information (`lineno` and `col_offset`) in f-strings is now (mostly) correct. This fixes tools like flake8 from showing warnings on the wrong line (typically the first line of the file).
  * [bpo-31343](https://bugs.python.org/issue?@action=redirect&bpo=31343): Include sys/sysmacros.h for major(), minor(), and makedev(). GNU C libray plans to remove the functions from sys/types.h.
  * [bpo-31291](https://bugs.python.org/issue?@action=redirect&bpo=31291): Fix an assertion failure in `zipimport.zipimporter.get_data` on Windows, when the return value of `pathname.replace('/','\\')` isn’t a string. Patch by Oren Milman.
  * [bpo-31271](https://bugs.python.org/issue?@action=redirect&bpo=31271): Fix an assertion failure in the `write()` method of `io.TextIOWrapper`, when the encoder doesn’t return a bytes object. Patch by Oren Milman.
  * [bpo-31243](https://bugs.python.org/issue?@action=redirect&bpo=31243): Fix a crash in some methods of `io.TextIOWrapper`, when the decoder’s state is invalid. Patch by Oren Milman.
  * [bpo-30721](https://bugs.python.org/issue?@action=redirect&bpo=30721): `print` now shows correct usage hint for using Python 2 redirection syntax. Patch by Sanyam Khurana.
  * [bpo-31070](https://bugs.python.org/issue?@action=redirect&bpo=31070): Fix a race condition in importlib _get_module_lock().
  * [bpo-31095](https://bugs.python.org/issue?@action=redirect&bpo=31095): Fix potential crash during GC caused by `tp_dealloc` which doesn’t call `PyObject_GC_UnTrack()`.
  * [bpo-31071](https://bugs.python.org/issue?@action=redirect&bpo=31071): Avoid masking original TypeError in call with * unpacking when other arguments are passed.
  * [bpo-30978](https://bugs.python.org/issue?@action=redirect&bpo=30978): str.format_map() now passes key lookup exceptions through. Previously any exception was replaced with a KeyError exception.
  * [bpo-30808](https://bugs.python.org/issue?@action=redirect&bpo=30808): Use _Py_atomic API for concurrency-sensitive signal state.
  * [bpo-30876](https://bugs.python.org/issue?@action=redirect&bpo=30876): Relative import from unloaded package now reimports the package instead of failing with SystemError. Relative import from non-package now fails with ImportError rather than SystemError.
  * [bpo-30703](https://bugs.python.org/issue?@action=redirect&bpo=30703): Improve signal delivery. Avoid using Py_AddPendingCall from signal handler, to avoid calling signal-unsafe functions. The tests I’m adding here fail without the rest of the patch, on Linux and OS X. This means our signal delivery logic had defects (some signals could be lost).
  * [bpo-30765](https://bugs.python.org/issue?@action=redirect&bpo=30765): Avoid blocking in pthread_mutex_lock() when PyThread_acquire_lock() is asked not to block.
  * [bpo-31161](https://bugs.python.org/issue?@action=redirect&bpo=31161): Make sure the ‘Missing parentheses’ syntax error message is only applied to SyntaxError, not to subclasses. Patch by Martijn Pieters.
  * [bpo-30814](https://bugs.python.org/issue?@action=redirect&bpo=30814): Fixed a race condition when import a submodule from a package.
  * [bpo-30597](https://bugs.python.org/issue?@action=redirect&bpo=30597): `print` now shows expected input in custom error message when used as a Python 2 statement. Patch by Sanyam Khurana.