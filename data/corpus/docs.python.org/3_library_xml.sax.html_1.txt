Title: xml.sax.parse Function
URL: https://docs.python.org/3/library/xml.sax.html
Summary: The xml.sax.parse function creates a SAX parser to parse an XML document provided as a filename or file object. It requires a ContentHandler and optionally an ErrorHandler. If an error occurs and no ErrorHandler is provided, a SAXParseException is raised. The function does not return a value, as all processing is handled by the provided ContentHandler.
---

xml.sax.parse(_filename_or_stream_ , _handler_ , _error_handler =handler.ErrorHandler()_)[¶](https://docs.python.org/3/library/xml.sax.html#xml.sax.parse "Link to this definition")
    
Create a SAX parser and use it to parse a document. The document, passed in as _filename_or_stream_ , can be a filename or a file object. The _handler_ parameter needs to be a SAX [`ContentHandler`](https://docs.python.org/3/library/xml.sax.handler.html#xml.sax.handler.ContentHandler "xml.sax.handler.ContentHandler") instance. If _error_handler_ is given, it must be a SAX [`ErrorHandler`](https://docs.python.org/3/library/xml.sax.handler.html#xml.sax.handler.ErrorHandler "xml.sax.handler.ErrorHandler") instance; if omitted, [`SAXParseException`](https://docs.python.org/3/library/xml.sax.html#xml.sax.SAXParseException "xml.sax.SAXParseException") will be raised on all errors. There is no return value; all work must be done by the _handler_ passed in. 

xml.sax.parseString(_string_ , _handler_ , _error_handler =handler.ErrorHandler()_)[¶](https://docs.python.org/3/library/xml.sax.html#xml.sax.parseString "Link to this definition")
    
Similar to [`parse()`](https://docs.python.org/3/library/xml.sax.html#xml.sax.parse "xml.sax.parse"), but parses from a buffer _string_ received as a parameter. _string_ must be a [`str`](https://docs.python.org/3/library/stdtypes.html#str "str") instance or a [bytes-like object](https://docs.python.org/3/glossary.html#term-bytes-like-object).
Changed in version 3.5: Added support of [`str`](https://docs.python.org/3/library/stdtypes.html#str "str") instances.
A typical SAX application uses three kinds of objects: readers, handlers and input sources. “Reader” in this context is another term for parser, i.e. some piece of code that reads the bytes or characters from the input source, and produces a sequence of events. The events then get distributed to the handler objects, i.e. the reader invokes a method on the handler. A SAX application must therefore obtain a reader object, create or open the input sources, create the handlers, and connect these objects all together. As the final step of preparation, the reader is called to parse the input. During parsing, methods on the handler objects are called based on structural and syntactic events from the input data.
For these objects, only the interfaces are relevant; they are normally not instantiated by the application itself. Since Python does not have an explicit notion of interface, they are formally introduced as classes, but applications may use implementations which do not inherit from the provided classes. The [`InputSource`](https://docs.python.org/3/library/xml.sax.reader.html#xml.sax.xmlreader.InputSource "xml.sax.xmlreader.InputSource"), [`Locator`](https://docs.python.org/3/library/xml.sax.reader.html#xml.sax.xmlreader.Locator "xml.sax.xmlreader.Locator"), `Attributes`, `AttributesNS`, and [`XMLReader`](https://docs.python.org/3/library/xml.sax.reader.html#xml.sax.xmlreader.XMLReader "xml.sax.xmlreader.XMLReader") interfaces are defined in the module [`xml.sax.xmlreader`](https://docs.python.org/3/library/xml.sax.reader.html#module-xml.sax.xmlreader "xml.sax.xmlreader: Interface which SAX-compliant XML parsers must implement."). The handler interfaces are defined in [`xml.sax.handler`](https://docs.python.org/3/library/xml.sax.handler.html#module-xml.sax.handler "xml.sax.handler: Base classes for SAX event handlers."). For convenience, [`InputSource`](https://docs.python.org/3/library/xml.sax.reader.html#xml.sax.xmlreader.InputSource "xml.sax.xmlreader.InputSource") (which is often instantiated directly) and the handler classes are also available from [`xml.sax`](https://docs.python.org/3/library/xml.sax.html#module-xml.sax "xml.sax: Package containing SAX2 base classes and convenience functions."). These interfaces are described below.
In addition to these classes, [`xml.sax`](https://docs.python.org/3/library/xml.sax.html#module-xml.sax "xml.sax: Package containing SAX2 base classes and convenience functions.") provides the following exception classes.