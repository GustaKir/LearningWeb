Title: CharacterDataHandler in PyExpat
URL: https://docs.python.org/3/library/pyexpat.html
Summary: The CharacterDataHandler is called for character data, including normal data, CDATA sections, and whitespace. Applications can differentiate these by using additional handlers like StartCdataSectionHandler, EndCdataSectionHandler, and ElementDeclHandler for comprehensive data collection.
---

xmlparser.CharacterDataHandler(_data_)[¶](https://docs.python.org/3/library/pyexpat.html#xml.parsers.expat.xmlparser.CharacterDataHandler "Link to this definition")
    
Called for character data. This will be called for normal character data, CDATA marked content, and ignorable whitespace. Applications which must distinguish these cases can use the [`StartCdataSectionHandler`](https://docs.python.org/3/library/pyexpat.html#xml.parsers.expat.xmlparser.StartCdataSectionHandler "xml.parsers.expat.xmlparser.StartCdataSectionHandler"), [`EndCdataSectionHandler`](https://docs.python.org/3/library/pyexpat.html#xml.parsers.expat.xmlparser.EndCdataSectionHandler "xml.parsers.expat.xmlparser.EndCdataSectionHandler"), and [`ElementDeclHandler`](https://docs.python.org/3/library/pyexpat.html#xml.parsers.expat.xmlparser.ElementDeclHandler "xml.parsers.expat.xmlparser.ElementDeclHandler") callbacks to collect the required information. Note that the character data may be chunked even if it is short and so you may receive more than one call to [`CharacterDataHandler()`](https://docs.python.org/3/library/pyexpat.html#xml.parsers.expat.xmlparser.CharacterDataHandler "xml.parsers.expat.xmlparser.CharacterDataHandler"). Set the [`buffer_text`](https://docs.python.org/3/library/pyexpat.html#xml.parsers.expat.xmlparser.buffer_text "xml.parsers.expat.xmlparser.buffer_text") instance attribute to `True` to avoid that. 

xmlparser.UnparsedEntityDeclHandler(_entityName_ , _base_ , _systemId_ , _publicId_ , _notationName_)[¶](https://docs.python.org/3/library/pyexpat.html#xml.parsers.expat.xmlparser.UnparsedEntityDeclHandler "Link to this definition")
    
Called for unparsed (NDATA) entity declarations. This is only present for version 1.2 of the Expat library; for more recent versions, use [`EntityDeclHandler`](https://docs.python.org/3/library/pyexpat.html#xml.parsers.expat.xmlparser.EntityDeclHandler "xml.parsers.expat.xmlparser.EntityDeclHandler") instead. (The underlying function in the Expat library has been declared obsolete.) 

xmlparser.EntityDeclHandler(_entityName_ , _is_parameter_entity_ , _value_ , _base_ , _systemId_ , _publicId_ , _notationName_)[¶](https://docs.python.org/3/library/pyexpat.html#xml.parsers.expat.xmlparser.EntityDeclHandler "Link to this definition")
    
Called for all entity declarations. For parameter and internal entities, _value_ will be a string giving the declared contents of the entity; this will be `None` for external entities. The _notationName_ parameter will be `None` for parsed entities, and the name of the notation for unparsed entities. _is_parameter_entity_ will be true if the entity is a parameter entity or false for general entities (most applications only need to be concerned with general entities). This is only available starting with version 1.95.0 of the Expat library. 

xmlparser.NotationDeclHandler(_notationName_ , _base_ , _systemId_ , _publicId_)[¶](https://docs.python.org/3/library/pyexpat.html#xml.parsers.expat.xmlparser.NotationDeclHandler "Link to this definition")
    
Called for notation declarations. _notationName_ , _base_ , and _systemId_ , and _publicId_ are strings if given. If the public identifier is omitted, _publicId_ will be `None`. 

xmlparser.StartNamespaceDeclHandler(_prefix_ , _uri_)[¶](https://docs.python.org/3/library/pyexpat.html#xml.parsers.expat.xmlparser.StartNamespaceDeclHandler "Link to this definition")
    
Called when an element contains a namespace declaration. Namespace declarations are processed before the [`StartElementHandler`](https://docs.python.org/3/library/pyexpat.html#xml.parsers.expat.xmlparser.StartElementHandler "xml.parsers.expat.xmlparser.StartElementHandler") is called for the element on which declarations are placed. 

xmlparser.EndNamespaceDeclHandler(_prefix_)[¶](https://docs.python.org/3/library/pyexpat.html#xml.parsers.expat.xmlparser.EndNamespaceDeclHandler "Link to this definition")
    
Called when the closing tag is reached for an element that contained a namespace declaration. This is called once for each namespace declaration on the element in the reverse of the order for which the [`StartNamespaceDeclHandler`](https://docs.python.org/3/library/pyexpat.html#xml.parsers.expat.xmlparser.StartNamespaceDeclHandler "xml.parsers.expat.xmlparser.StartNamespaceDeclHandler") was called to indicate the start of each namespace declaration’s scope. Calls to this handler are made after the corresponding [`EndElementHandler`](https://docs.python.org/3/library/pyexpat.html#xml.parsers.expat.xmlparser.EndElementHandler "xml.parsers.expat.xmlparser.EndElementHandler") for the end of the element. 

xmlparser.CommentHandler(_data_)[¶](https://docs.python.org/3/library/pyexpat.html#xml.parsers.expat.xmlparser.CommentHandler "Link to this definition")
    
Called for comments. _data_ is the text of the comment, excluding the leading `'<!-``-'` and trailing `'-``->'`.