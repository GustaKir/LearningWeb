Title: Core and Builtins Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section outlines recent fixes in Python's core and builtins, including resolution of undefined behavior during division by zero in complex number operations and a crash in free threading builds related to concurrent calls of specific code retrieval functions.
---

### Core and Builtins[¶](https://docs.python.org/3/whatsnew/changelog.html#id25 "Link to this heading")
  * [gh-113841](https://github.com/python/cpython/issues/113841): Fix possible undefined behavior division by zero in [`complex`](https://docs.python.org/3/library/functions.html#complex "complex")’s [`_Py_c_pow()`](https://docs.python.org/3/c-api/complex.html#c._Py_c_pow "_Py_c_pow").
  * [gh-127020](https://github.com/python/cpython/issues/127020): Fix a crash in the free threading build when [`PyCode_GetCode()`](https://docs.python.org/3/c-api/code.html#c.PyCode_GetCode "PyCode_GetCode"), [`PyCode_GetVarnames()`](https://docs.python.org/3/c-api/code.html#c.PyCode_GetVarnames "PyCode_GetVarnames"), [`PyCode_GetCellvars()`](https://docs.python.org/3/c-api/code.html#c.PyCode_GetCellvars "PyCode_GetCellvars"), or [`PyCode_GetFreevars()`](https://docs.python.org/3/c-api/code.html#c.PyCode_GetFreevars "PyCode_GetFreevars") were called from multiple threads at the same time.
  * [gh-126980](https://github.com/python/cpython/issues/126980): Fix [`__buffer__()`](https://docs.python.org/3/reference/datamodel.html#object.__buffer__ "object.__buffer__") of [`bytearray`](https://docs.python.org/3/library/stdtypes.html#bytearray "bytearray") crashing when [`READ`](https://docs.python.org/3/library/inspect.html#inspect.BufferFlags.READ "inspect.BufferFlags.READ") or [`WRITE`](https://docs.python.org/3/library/inspect.html#inspect.BufferFlags.WRITE "inspect.BufferFlags.WRITE") are passed as flags.
  * [gh-126881](https://github.com/python/cpython/issues/126881): Fix crash in finalization of dtoa state. Patch by Kumar Aditya.
  * [gh-126341](https://github.com/python/cpython/issues/126341): Now [`ValueError`](https://docs.python.org/3/library/exceptions.html#ValueError "ValueError") is raised instead of [`SystemError`](https://docs.python.org/3/library/exceptions.html#SystemError "SystemError") when trying to iterate over a released [`memoryview`](https://docs.python.org/3/library/stdtypes.html#memoryview "memoryview") object.
  * [gh-126688](https://github.com/python/cpython/issues/126688): Fix a crash when calling [`os.fork()`](https://docs.python.org/3/library/os.html#os.fork "os.fork") on some operating systems, including SerenityOS.
  * [gh-126066](https://github.com/python/cpython/issues/126066): Fix [`importlib`](https://docs.python.org/3/library/importlib.html#module-importlib "importlib: The implementation of the import machinery.") to not write an incomplete .pyc files when a ulimit or some other operating system mechanism is preventing the write to go through fully.
  * [gh-126312](https://github.com/python/cpython/issues/126312): Fix crash during garbage collection on an object frozen by [`gc.freeze()`](https://docs.python.org/3/library/gc.html#gc.freeze "gc.freeze") on the free-threaded build.
  * [gh-126139](https://github.com/python/cpython/issues/126139): Provide better error location when attempting to use a [future statement](https://docs.python.org/3/glossary.html#term-__future__) with an unknown future feature.
  * [gh-126018](https://github.com/python/cpython/issues/126018): Fix a crash in [`sys.audit()`](https://docs.python.org/3/library/sys.html#sys.audit "sys.audit") when passing a non-string as first argument and Python was compiled in debug mode.
  * [gh-125942](https://github.com/python/cpython/issues/125942): On Android, the `errors` setting of [`sys.stdout`](https://docs.python.org/3/library/sys.html#sys.stdout "sys.stdout") was changed from `surrogateescape` to `backslashreplace`.
  * [gh-125859](https://github.com/python/cpython/issues/125859): Fix a crash in the free threading build when [`gc.get_objects()`](https://docs.python.org/3/library/gc.html#gc.get_objects "gc.get_objects") or [`gc.get_referrers()`](https://docs.python.org/3/library/gc.html#gc.get_referrers "gc.get_referrers") is called during an in-progress garbage collection.
  * [gh-125703](https://github.com/python/cpython/issues/125703): Correctly honour [`tracemalloc`](https://docs.python.org/3/library/tracemalloc.html#module-tracemalloc "tracemalloc: Trace memory allocations.") hooks in specialized `Py_DECREF` paths. Patch by Pablo Galindo
  * [gh-125593](https://github.com/python/cpython/issues/125593): Use color to highlight error locations in traceback from exception group
  * [gh-125444](https://github.com/python/cpython/issues/125444): Fix illegal instruction for older Arm architectures. Patch by Diego Russo, testing by Ross Burton.
  * [gh-124375](https://github.com/python/cpython/issues/124375): Fix a crash in the free threading build when the GC runs concurrently with a new thread starting.
  * [gh-125221](https://github.com/python/cpython/issues/125221): Fix possible race condition when calling [`__reduce_ex__()`](https://docs.python.org/3/library/pickle.html#object.__reduce_ex__ "object.__reduce_ex__") for the first time in the free threading build.
  * [gh-125038](https://github.com/python/cpython/issues/12503