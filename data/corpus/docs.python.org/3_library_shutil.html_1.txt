Title: shutil Module - File Copy Functions
URL: https://docs.python.org/3/library/shutil.html
Summary: This documentation section covers the `shutil.copyfileobj` and `shutil.copyfile` functions. `copyfileobj` copies contents from one file-like object to another, allowing for a specified buffer size, while `copyfile` copies contents from one file to another without transferring metadata. The default behavior of `copyfileobj` reads data in chunks to optimize memory usage, and it only copies data from the current position if not at the start of the source object.
---

shutil.copyfileobj(_fsrc_ , _fdst_[, _length_])[¶](https://docs.python.org/3/library/shutil.html#shutil.copyfileobj "Link to this definition")
    
Copy the contents of the [file-like object](https://docs.python.org/3/glossary.html#term-file-object) _fsrc_ to the file-like object _fdst_. The integer _length_ , if given, is the buffer size. In particular, a negative _length_ value means to copy the data without looping over the source data in chunks; by default the data is read in chunks to avoid uncontrolled memory consumption. Note that if the current file position of the _fsrc_ object is not 0, only the contents from the current file position to the end of the file will be copied. 

shutil.copyfile(_src_ , _dst_ , _*_ , _follow_symlinks =True_)[¶](https://docs.python.org/3/library/shutil.html#shutil.copyfile "Link to this definition")
    
Copy the contents (no metadata) of the file named _src_ to a file named _dst_ and return _dst_ in the most efficient way possible. _src_ and _dst_ are [path-like objects](https://docs.python.org/3/glossary.html#term-path-like-object) or path names given as strings.
_dst_ must be the complete target file name; look at [`copy()`](https://docs.python.org/3/library/shutil.html#shutil.copy "shutil.copy") for a copy that accepts a target directory path. If _src_ and _dst_ specify the same file, [`SameFileError`](https://docs.python.org/3/library/shutil.html#shutil.SameFileError "shutil.SameFileError") is raised.
The destination location must be writable; otherwise, an [`OSError`](https://docs.python.org/3/library/exceptions.html#OSError "OSError") exception will be raised. If _dst_ already exists, it will be replaced. Special files such as character or block devices and pipes cannot be copied with this function.
If _follow_symlinks_ is false and _src_ is a symbolic link, a new symbolic link will be created instead of copying the file _src_ points to.
Raises an [auditing event](https://docs.python.org/3/library/sys.html#auditing) `shutil.copyfile` with arguments `src`, `dst`.
Changed in version 3.3: [`IOError`](https://docs.python.org/3/library/exceptions.html#IOError "IOError") used to be raised instead of [`OSError`](https://docs.python.org/3/library/exceptions.html#OSError "OSError"). Added _follow_symlinks_ argument. Now returns _dst_.
Changed in version 3.4: Raise [`SameFileError`](https://docs.python.org/3/library/shutil.html#shutil.SameFileError "shutil.SameFileError") instead of [`Error`](https://docs.python.org/3/library/shutil.html#shutil.Error "shutil.Error"). Since the former is a subclass of the latter, this change is backward compatible.
Changed in version 3.8: Platform-specific fast-copy syscalls may be used internally in order to copy the file more efficiently. See [Platform-dependent efficient copy operations](https://docs.python.org/3/library/shutil.html#shutil-platform-dependent-efficient-copy-operations) section. 

_exception_ shutil.SameFileError[¶](https://docs.python.org/3/library/shutil.html#shutil.SameFileError "Link to this definition")
    
This exception is raised if source and destination in [`copyfile()`](https://docs.python.org/3/library/shutil.html#shutil.copyfile "shutil.copyfile") are the same file.
Added in version 3.4. 

shutil.copymode(_src_ , _dst_ , _*_ , _follow_symlinks =True_)[¶](https://docs.python.org/3/library/shutil.html#shutil.copymode "Link to this definition")
    
Copy the permission bits from _src_ to _dst_. The file contents, owner, and group are unaffected. _src_ and _dst_ are [path-like objects](https://docs.python.org/3/glossary.html#term-path-like-object) or path names given as strings. If _follow_symlinks_ is false, and both _src_ and _dst_ are symbolic links, [`copymode()`](https://docs.python.org/3/library/shutil.html#shutil.copymode "shutil.copymode") will attempt to modify the mode of _dst_ itself (rather than the file it points to). This functionality is not available on every platform; please see [`copystat()`](https://docs.python.org/3/library/shutil.html#shutil.copystat "shutil.copystat") for more information. If [`copymode()`](https://docs.python.org/3/library/shutil.html#shutil.copymode "shutil.copymode") cannot modify symbolic links on the local platform, and it is asked to do so, it will do nothing and return.
Raises an [auditing event](https://docs.python.org/3/library/sys.html#auditing) `shutil.copymode` with arguments `src`, `dst`.
Changed in version 3.3: Added _follow_symlinks_ argument.