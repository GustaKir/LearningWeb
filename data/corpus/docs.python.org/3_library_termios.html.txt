Title: termios — POSIX Style TTY Control
URL: https://docs.python.org/3/library/termios.html
Summary: The `termios` module in Python provides an interface for controlling asynchronous communications ports in a POSIX compliant manner. It allows users to configure terminal attributes and perform input/output control operations.
---

[ ![Python logo](https://docs.python.org/3/_static/py.svg) ](https://www.python.org/) dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
Theme  Auto Light Dark
### [Table of Contents](https://docs.python.org/3/contents.html)
  * [`termios` — POSIX style tty control](https://docs.python.org/3/library/termios.html)
    * [Example](https://docs.python.org/3/library/termios.html#example)


#### Previous topic
[`grp` — The group database](https://docs.python.org/3/library/grp.html "previous chapter")
#### Next topic
[`tty` — Terminal control functions](https://docs.python.org/3/library/tty.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/termios.rst)


### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/library/tty.html "tty — Terminal control functions") |
  * [previous](https://docs.python.org/3/library/grp.html "grp — The group database") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [The Python Standard Library](https://docs.python.org/3/library/index.html) »
  * [Unix Specific Services](https://docs.python.org/3/library/unix.html) »
  * [`termios` — POSIX style tty control](https://docs.python.org/3/library/termios.html)
  * | 
  * Theme  Auto Light Dark |


# `termios` — POSIX style tty control[¶](https://docs.python.org/3/library/termios.html#module-termios "Link to this heading")
This module provides an interface to the POSIX calls for tty I/O control. For a complete description of these calls, see _[termios(3)](https://manpages.debian.org/termios\(3\))_ Unix manual page. It is only available for those Unix versions that support POSIX _termios_ style tty I/O control configured during installation.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix.
All functions in this module take a file descriptor _fd_ as their first argument. This can be an integer file descriptor, such as returned by `sys.stdin.fileno()`, or a [file object](https://docs.python.org/3/glossary.html#term-file-object), such as `sys.stdin` itself.
This module also defines all the constants needed to work with the functions provided here; these have the same name as their counterparts in C. Please refer to your system documentation for more information on using these terminal control interfaces.
The module defines the following functions: 

termios.tcgetattr(_fd_)[¶](https://docs.python.org/3/library/termios.html#termios.tcgetattr "Link to this definition")
    
Return a list containing the tty attributes for file descriptor _fd_ , as follows: `[iflag, oflag, cflag, lflag, ispeed, ospeed, cc]` where _cc_ is a list of the tty special characters (each a string of length 1, except the items with indices `VMIN` and `VTIME`, which are integers when these fields are defined). The interpretation of the flags and the speeds as well as the indexing in the _cc_ array must be done using the symbolic constants defined in the [`termios`](https://docs.python.org/3/library/termios.html#module-termios "termios: POSIX style tty control. \(Unix\)") module. 

termios.tcsetattr(_fd_ , _when_ , _attributes_)[¶](https://docs.python.org/3/library/termios.html#termios.tcsetattr "Link to this definition")
    
Set the tty attributes for file descriptor _fd_ from the _attributes_ , which is a list like the one returned by [`tcgetattr()`](https://docs.python.org/3/library/termios.html#termios.tcgetattr "termios.tcgetattr"). The _when_ argument determines when the attributes are changed: 

termios.TCSANOW[¶](https://docs.python.org/3/library/termios.html#termios.TCSANOW "Link to this definition")
    
Change attributes immediately. 

termios.TCSADRAIN[¶](https://docs.python.org/3/library/termios.html#termios.TCSADRAIN "Link to this definition")
    
Change attributes after transmitting all queued output. 

termios.TCSAFLUSH[¶](https://docs.python.org/3/library/termios.html#termios.TCSAFLUSH "Link to this definition")
    
Change attributes after transmitting all queued output and discarding all queued input.