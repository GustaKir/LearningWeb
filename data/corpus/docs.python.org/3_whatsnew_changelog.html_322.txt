Title: Python Changelog Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section details various patches and bug fixes contributed by Pablo Galindo, including the renaming of `types.Union` to `types.UnionType`, enhancements to error handling on circular imports, improvements in complex object exponentiation, and the addition of serialization capabilities for `types.Union`. It also notes the exposure of specialization stats through a new method and support for `typing` in parameter substitutions.
---

Patch by Pablo Galindo
  * [bpo-44732](https://bugs.python.org/issue?@action=redirect&bpo=44732): Rename `types.Union` to `types.UnionType`.
  * [bpo-44725](https://bugs.python.org/issue?@action=redirect&bpo=44725): Expose specialization stats in python via `_opcode.get_specialization_stats()`.
  * [bpo-44717](https://bugs.python.org/issue?@action=redirect&bpo=44717): Improve AttributeError on circular imports of submodules.
  * [bpo-44698](https://bugs.python.org/issue?@action=redirect&bpo=44698): Fix undefined behaviour in complex object exponentiation.
  * [bpo-44653](https://bugs.python.org/issue?@action=redirect&bpo=44653): Support [`typing`](https://docs.python.org/3/library/typing.html#module-typing "typing: Support for type hints \(see :pep:`484`\).") types in parameter substitution in the union type.
  * [bpo-44676](https://bugs.python.org/issue?@action=redirect&bpo=44676): Add ability to serialise `types.Union` objects. Patch provided by Yurii Karabas.
  * [bpo-44633](https://bugs.python.org/issue?@action=redirect&bpo=44633): Parameter substitution of the union type with wrong types now raises `TypeError` instead of returning [`NotImplemented`](https://docs.python.org/3/library/constants.html#NotImplemented "NotImplemented").
  * [bpo-44661](https://bugs.python.org/issue?@action=redirect&bpo=44661): Update `property_descr_set` to use vectorcall if possible. Patch by Donghee Na.
  * [bpo-44662](https://bugs.python.org/issue?@action=redirect&bpo=44662): Add `__module__` to `types.Union`. This also fixes `types.Union` issues with `typing.Annotated`. Patch provided by Yurii Karabas.
  * [bpo-44655](https://bugs.python.org/issue?@action=redirect&bpo=44655): Include the name of the type in unset __slots__ attribute errors. Patch by Pablo Galindo
  * [bpo-44655](https://bugs.python.org/issue?@action=redirect&bpo=44655): Donâ€™t include a missing attribute with the same name as the failing one when offering suggestions for missing attributes. Patch by Pablo Galindo
  * [bpo-44646](https://bugs.python.org/issue?@action=redirect&bpo=44646): Fix the hash of the union type: it no longer depends on the order of arguments.
  * [bpo-44636](https://bugs.python.org/issue?@action=redirect&bpo=44636): Collapse union of equal types. E.g. the result of `int | int` is now `int`. Fix comparison of the union type with non-hashable objects. E.g. `int | str == {}` no longer raises a TypeError.
  * [bpo-44611](https://bugs.python.org/issue?@action=redirect&bpo=44611): On Windows, [`os.urandom()`](https://docs.python.org/3/library/os.html#os.urandom "os.urandom"): uses BCryptGenRandom API instead of CryptGenRandom API which is deprecated from Microsoft Windows API. Patch by Donghee Na.
  * [bpo-44635](https://bugs.python.org/issue?@action=redirect&bpo=44635): Convert `None` to `type(None)` in the union type constructor.
  * [bpo-26280](https://bugs.python.org/issue?@action=redirect&bpo=26280): Implement adaptive specialization for BINARY_SUBSCR
Three specialized forms of BINARY_SUBSCR are added:
    * BINARY_SUBSCR_LIST_INT
    * BINARY_SUBSCR_TUPLE_INT
    * BINARY_SUBSCR_DICT
  * [bpo-44589](https://bugs.python.org/issue?@action=redirect&bpo=44589): Mapping patterns in `match` statements with two or more equal literal keys will now raise a [`SyntaxError`](https://docs.python.org/3/library/exceptions.html#SyntaxError "SyntaxError") at compile-time.
  * [bpo-44606](https://bugs.python.org/issue?@action=redirect&bpo=44606): Fix `__instancecheck__` and `__subclasscheck__` for the union type.
  * [bpo-42073](https://bugs.python.org/issue?@action=redirect&bpo=42073): The `@classmethod` decorator can now wrap other classmethod-like descriptors.
  * [bpo-41972](https://bugs.python.org/issue?@action=redirect&bpo=41972): Tuned the string-searching algorithm of fastsearch.h to have a shorter inner loop for most cases.
  * [bpo-44590](https://bugs.python.org/issue?@action=redirect&bpo=44590): All necessary data for executing a Python function (local variables, stack, etc) is now kept in a per-thread stack. Frame objects are lazily allocated on demand. This increases performance by about 7% on the standard benchmark suite. Introspection and debugging are unaffected as frame objects are always available when needed. Patch by Mark Shannon.
  * [bpo-44584](https://bugs.python.org/issue?@action=redirect&bpo=44584): The threading debug (`PYTHONTHREADDEBUG` environment variable) is deprecated in Python 3.10 and will be removed in Python 3.12. This feature requires a debug build of Python.