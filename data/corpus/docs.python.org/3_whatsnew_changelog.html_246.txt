Title: Python 3 Latest Updates and Bug Fixes
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This document outlines recent updates to Python 3, including a default timeout of 5 minutes for `asyncio.Runner` and `asyncio.run()`, enhancements to `sqlite3.Connection.iterdump()` for handling AUTOINCREMENT databases, support for reading extensible wave files in the `wave` module, and adjustable compression levels for `tarfile.open()`.
---

When called from [`asyncio.Runner`](https://docs.python.org/3/library/asyncio-runner.html#asyncio.Runner "asyncio.Runner") or [`asyncio.run()`](https://docs.python.org/3/library/asyncio-runner.html#asyncio.run "asyncio.run"), the default timeout is 5 minutes.
  * [bpo-34828](https://bugs.python.org/issue?@action=redirect&bpo=34828): [`sqlite3.Connection.iterdump()`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.iterdump "sqlite3.Connection.iterdump") now handles databases that use `AUTOINCREMENT` in one or more tables.
  * [bpo-32990](https://bugs.python.org/issue?@action=redirect&bpo=32990): Support reading wave files with the `WAVE_FORMAT_EXTENSIBLE` format in the [`wave`](https://docs.python.org/3/library/wave.html#module-wave "wave: Provide an interface to the WAV sound format.") module.
  * [bpo-26253](https://bugs.python.org/issue?@action=redirect&bpo=26253): Allow adjustable compression level for tarfile streams in [`tarfile.open()`](https://docs.python.org/3/library/tarfile.html#tarfile.open "tarfile.open").


### Documentation[¶](https://docs.python.org/3/whatsnew/changelog.html#id208 "Link to this heading")
  * [gh-85525](https://github.com/python/cpython/issues/85525): Remove extra row
  * [gh-86404](https://github.com/python/cpython/issues/86404): Deprecated tools `make suspicious` and `rstlint.py` are now removed. They have been replaced by [sphinx-lint](https://pypi.org/project/sphinx-lint/).
  * [gh-97741](https://github.com/python/cpython/issues/97741): Fix `!` in c domain ref target syntax via a `conf.py` patch, so it works as intended to disable ref target resolution.
  * [gh-96432](https://github.com/python/cpython/issues/96432): Fraction literals now support whitespace around the forward slash, `Fraction('2 / 3')`.
  * [gh-96098](https://github.com/python/cpython/issues/96098): Improve discoverability of the higher level concurrent.futures module by providing clearer links from the lower level threading and multiprocessing modules.
  * [gh-95957](https://github.com/python/cpython/issues/95957): What’s New 3.11 now has instructions for how to provide compiler and linker flags for Tcl/Tk and OpenSSL on RHEL 7 and CentOS 7.
  * [gh-95588](https://github.com/python/cpython/issues/95588): Clarified the conflicting advice given in the [`ast`](https://docs.python.org/3/library/ast.html#module-ast "ast: Abstract Syntax Tree classes and manipulation.") documentation about [`ast.literal_eval()`](https://docs.python.org/3/library/ast.html#ast.literal_eval "ast.literal_eval") being “safe” for use on untrusted input while at the same time warning that it can crash the process. The latter statement is true and is deemed unfixable without a large amount of work unsuitable for a bugfix. So we keep the warning and no longer claim that `literal_eval` is safe.
  * [gh-91207](https://github.com/python/cpython/issues/91207): Fix stylesheet not working in Windows CHM htmlhelp docs and add warning that they are deprecated. Contributed by C.A.M. Gerlach.
  * [gh-95454](https://github.com/python/cpython/issues/95454): Replaced incorrectly written true/false values in documentation. Patch by Robert O’Shea
  * [gh-95451](https://github.com/python/cpython/issues/95451): Update library documentation with [availability information](https://docs.python.org/3/library/intro.html#wasm-availability) on WebAssembly platforms `wasm32-emscripten` and `wasm32-wasi`.
  * [gh-95415](https://github.com/python/cpython/issues/95415): Use consistent syntax for platform availability. The directive now supports a content body and emits a warning when it encounters an unknown platform.
  * [gh-94321](https://github.com/python/cpython/issues/94321): Document the [**PEP 246**](https://peps.python.org/pep-0246/) style protocol type [`sqlite3.PrepareProtocol`](https://docs.python.org/3/library/sqlite3.html#sqlite3.PrepareProtocol "sqlite3.PrepareProtocol").
  * [gh-86128](https://github.com/python/cpython/issues/86128): Document a limitation in ThreadPoolExecutor where its exit handler is executed before any handlers in atexit.
  * [gh-61162](https://github.com/python/cpython/issues/61162): Clarify [`sqlite3`](https://docs.python.org/3/library/sqlite3.html#module-sqlite3 "sqlite3: A DB-API 2.0 implementation using SQLite 3.x.") behavior when [How to use the connection context manager](https://docs.python.org/3/library/sqlite3.html#sqlite3-connection-context-manager).
  * [gh-87260](https://github.com/python/cpython/issues/87260): Align [`sqlite3`](https://docs.python.org/3/library/sqlite3.html#module-sqlite3 "sqlite3: A DB-API 2.0 implementation using SQLite 3.x.") argument specs with the actual implementation.
  * [gh-86986](https://github.com/python/cpython/issues/86986): The minimum Sphinx version required to build the documentation is now 3.2.
  * [gh-88831](https://github.com/python/cpython/issues/88831): Augmented documentation of asyncio.create_task(). Clarified the need to keep strong references to tasks and a