Title: C API Changes in Python
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section details modifications to the C API, including a fix for `PyFunction_GetAnnotations()` which now returns a `dict` instead of a `tuple`, and updates to several buffer-related functions to accept buffer info as `const Py_buffer *`.
---

### C API[Â¶](https://docs.python.org/3/whatsnew/changelog.html#id260 "Link to this heading")
  * [bpo-46236](https://bugs.python.org/issue?@action=redirect&bpo=46236): Fix a bug in [`PyFunction_GetAnnotations()`](https://docs.python.org/3/c-api/function.html#c.PyFunction_GetAnnotations "PyFunction_GetAnnotations") that caused it to return a `tuple` instead of a `dict`.
  * [bpo-46140](https://bugs.python.org/issue?@action=redirect&bpo=46140): [`PyBuffer_GetPointer()`](https://docs.python.org/3/c-api/buffer.html#c.PyBuffer_GetPointer "PyBuffer_GetPointer"), [`PyBuffer_FromContiguous()`](https://docs.python.org/3/c-api/buffer.html#c.PyBuffer_FromContiguous "PyBuffer_FromContiguous"), [`PyBuffer_ToContiguous()`](https://docs.python.org/3/c-api/buffer.html#c.PyBuffer_ToContiguous "PyBuffer_ToContiguous") and [`PyMemoryView_FromBuffer()`](https://docs.python.org/3/c-api/memoryview.html#c.PyMemoryView_FromBuffer "PyMemoryView_FromBuffer") now take buffer info by `const Py_buffer *` instead of `Py_buffer *`, as they do not need mutability. [`PyBuffer_FromContiguous()`](https://docs.python.org/3/c-api/buffer.html#c.PyBuffer_FromContiguous "PyBuffer_FromContiguous") also now takes the source buffer as `const void *`, and similarly [`PyBuffer_GetPointer()`](https://docs.python.org/3/c-api/buffer.html#c.PyBuffer_GetPointer "PyBuffer_GetPointer") takes the strides as `const Py_ssize_t *`.
  * [bpo-45855](https://bugs.python.org/issue?@action=redirect&bpo=45855): Document that the _no_block_ argument to [`PyCapsule_Import()`](https://docs.python.org/3/c-api/capsule.html#c.PyCapsule_Import "PyCapsule_Import") is a no-op now.
  * [bpo-45855](https://bugs.python.org/issue?@action=redirect&bpo=45855): Replaced deprecated usage of [`PyImport_ImportModuleNoBlock()`](https://docs.python.org/3/c-api/import.html#c.PyImport_ImportModuleNoBlock "PyImport_ImportModuleNoBlock") with [`PyImport_ImportModule()`](https://docs.python.org/3/c-api/import.html#c.PyImport_ImportModule "PyImport_ImportModule") in stdlib modules. Patch by Kumar Aditya.
  * [bpo-46007](https://bugs.python.org/issue?@action=redirect&bpo=46007): The `PyUnicode_CHECK_INTERNED()` macro has been excluded from the limited C API. It was never usable there, because it used internal structures which are not available in the limited C API. Patch by Victor Stinner.