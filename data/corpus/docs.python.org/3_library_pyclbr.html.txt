Title: pyclbr — Python Module Browser Support
URL: https://docs.python.org/3/library/pyclbr.html
Summary: The 'pyclbr' module provides support for browsing Python modules, focusing on their classes and functions. This documentation includes references to related topics, such as 'Function Objects' and 'Class Objects', and links to previous and next modules.
---

[ ![Python logo](https://docs.python.org/3/_static/py.svg) ](https://www.python.org/) dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
Theme  Auto Light Dark
### [Table of Contents](https://docs.python.org/3/contents.html)
  * [`pyclbr` — Python module browser support](https://docs.python.org/3/library/pyclbr.html)
    * [Function Objects](https://docs.python.org/3/library/pyclbr.html#function-objects)
    * [Class Objects](https://docs.python.org/3/library/pyclbr.html#class-objects)


#### Previous topic
[`tabnanny` — Detection of ambiguous indentation](https://docs.python.org/3/library/tabnanny.html "previous chapter")
#### Next topic
[`py_compile` — Compile Python source files](https://docs.python.org/3/library/py_compile.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/pyclbr.rst)


### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/library/py_compile.html "py_compile — Compile Python source files") |
  * [previous](https://docs.python.org/3/library/tabnanny.html "tabnanny — Detection of ambiguous indentation") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [The Python Standard Library](https://docs.python.org/3/library/index.html) »
  * [Python Language Services](https://docs.python.org/3/library/language.html) »
  * [`pyclbr` — Python module browser support](https://docs.python.org/3/library/pyclbr.html)
  * | 
  * Theme  Auto Light Dark |


# `pyclbr` — Python module browser support[¶](https://docs.python.org/3/library/pyclbr.html#module-pyclbr "Link to this heading")
**Source code:** [Lib/pyclbr.py](https://github.com/python/cpython/tree/3.13/Lib/pyclbr.py)
The [`pyclbr`](https://docs.python.org/3/library/pyclbr.html#module-pyclbr "pyclbr: Supports information extraction for a Python module browser.") module provides limited information about the functions, classes, and methods defined in a Python-coded module. The information is sufficient to implement a module browser. The information is extracted from the Python source code rather than by importing the module, so this module is safe to use with untrusted code. This restriction makes it impossible to use this module with modules not implemented in Python, including all standard and optional extension modules. 

pyclbr.readmodule(_module_ , _path =None_)[¶](https://docs.python.org/3/library/pyclbr.html#pyclbr.readmodule "Link to this definition")
    
Return a dictionary mapping module-level class names to class descriptors. If possible, descriptors for imported base classes are included. Parameter _module_ is a string with the name of the module to read; it may be the name of a module within a package. If given, _path_ is a sequence of directory paths prepended to `sys.path`, which is used to locate the module source code.
This function is the original interface and is only kept for back compatibility. It returns a filtered version of the following. 

pyclbr.readmodule_ex(_module_ , _path =None_)[¶](https://docs.python.org/3/library/pyclbr.html#pyclbr.readmodule_ex "Link to this definition")
    
Return a dictionary-based tree containing a function or class descriptors for each function and class defined in the module with a `def` or `class` statement. The returned dictionary maps module-level function and class names to their descriptors. Nested objects are entered into the children dictionary of their parent. As with readmodule, _module_ names the module to be read and _path_ is prepended to sys.path. If the module being read is a package, the returned dictionary has a key `'__path__'` whose value is a list containing the package search path.
Added in version 3.7: Descriptors for nested definitions. They are accessed through the new children attribute. Each has a new parent attribute.
The descriptors returned by these functions are instances of Function and Class classes. Users are not expected to create instances of these classes.
## Function Objects[¶](https://docs.python.org/3/library/pyclbr.html#function-objects "Link to this heading")