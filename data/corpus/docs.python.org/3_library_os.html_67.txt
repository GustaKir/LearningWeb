Title: os.wait4() - Waiting for Process Completion
URL: https://docs.python.org/3/library/os.html
Summary: The `os.wait4()` function is similar to `waitpid()` but returns a 3-element tuple containing the child's process ID, exit status indication, and resource usage information. It accepts the same arguments as `waitpid()`. To convert exit status to an exit code, use `waitstatus_to_exitcode()`. Availability is limited to Unix systems.
---

os.wait4(_pid_ , _options_)[¶](https://docs.python.org/3/library/os.html#os.wait4 "Link to this definition")
    
Similar to [`waitpid()`](https://docs.python.org/3/library/os.html#os.waitpid "os.waitpid"), except a 3-element tuple, containing the child’s process id, exit status indication, and resource usage information is returned. Refer to [`resource.getrusage()`](https://docs.python.org/3/library/resource.html#resource.getrusage "resource.getrusage") for details on resource usage information. The arguments to [`wait4()`](https://docs.python.org/3/library/os.html#os.wait4 "os.wait4") are the same as those provided to [`waitpid()`](https://docs.python.org/3/library/os.html#os.waitpid "os.waitpid").
[`waitstatus_to_exitcode()`](https://docs.python.org/3/library/os.html#os.waitstatus_to_exitcode "os.waitstatus_to_exitcode") can be used to convert the exit status into an exitcode.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix, not WASI, not Android, not iOS. 

os.P_PID[¶](https://docs.python.org/3/library/os.html#os.P_PID "Link to this definition")


os.P_PGID[¶](https://docs.python.org/3/library/os.html#os.P_PGID "Link to this definition")


os.P_ALL[¶](https://docs.python.org/3/library/os.html#os.P_ALL "Link to this definition")


os.P_PIDFD[¶](https://docs.python.org/3/library/os.html#os.P_PIDFD "Link to this definition")
    
These are the possible values for _idtype_ in [`waitid()`](https://docs.python.org/3/library/os.html#os.waitid "os.waitid"). They affect how _id_ is interpreted:
  * `P_PID` - wait for the child whose PID is _id_.
  * `P_PGID` - wait for any child whose progress group ID is _id_.
  * `P_ALL` - wait for any child; _id_ is ignored.
  * `P_PIDFD` - wait for the child identified by the file descriptor _id_ (a process file descriptor created with [`pidfd_open()`](https://docs.python.org/3/library/os.html#os.pidfd_open "os.pidfd_open")).


[Availability](https://docs.python.org/3/library/intro.html#availability): Unix, not WASI, not Android, not iOS.
Note
`P_PIDFD` is only available on Linux >= 5.4.
Added in version 3.3.
Added in version 3.9: The `P_PIDFD` constant. 

os.WCONTINUED[¶](https://docs.python.org/3/library/os.html#os.WCONTINUED "Link to this definition")
    
This _options_ flag for [`waitpid()`](https://docs.python.org/3/library/os.html#os.waitpid "os.waitpid"), [`wait3()`](https://docs.python.org/3/library/os.html#os.wait3 "os.wait3"), [`wait4()`](https://docs.python.org/3/library/os.html#os.wait4 "os.wait4"), and [`waitid()`](https://docs.python.org/3/library/os.html#os.waitid "os.waitid") causes child processes to be reported if they have been continued from a job control stop since they were last reported.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix, not WASI, not Android, not iOS. 

os.WEXITED[¶](https://docs.python.org/3/library/os.html#os.WEXITED "Link to this definition")
    
This _options_ flag for [`waitid()`](https://docs.python.org/3/library/os.html#os.waitid "os.waitid") causes child processes that have terminated to be reported.
The other `wait*` functions always report children that have terminated, so this option is not available for them.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix, not WASI, not Android, not iOS.
Added in version 3.3. 

os.WSTOPPED[¶](https://docs.python.org/3/library/os.html#os.WSTOPPED "Link to this definition")
    
This _options_ flag for [`waitid()`](https://docs.python.org/3/library/os.html#os.waitid "os.waitid") causes child processes that have been stopped by the delivery of a signal to be reported.
This option is not available for the other `wait*` functions.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix, not WASI, not Android, not iOS.
Added in version 3.3. 

os.WUNTRACED[¶](https://docs.python.org/3/library/os.html#os.WUNTRACED "Link to this definition")
    
This _options_ flag for [`waitpid()`](https://docs.python.org/3/library/os.html#os.waitpid "os.waitpid"), [`wait3()`](https://docs.python.org/3/library/os.html#os.wait3 "os.wait3"), and [`wait4()`](https://docs.python.org/3/library/os.html#os.wait4 "os.wait4") causes child processes to also be reported if they have been stopped but their current state has not been reported since they were stopped.
This option is not available for [`waitid()`](https://docs.python.org/3/library/os.html#os.waitid "os.waitid").
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix, not WASI, not Android, not iOS.