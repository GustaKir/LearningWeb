Title: Python C API: Tuple Functions
URL: https://docs.python.org/3/c-api/tuple.html
Summary: This section covers key functions related to tuple objects in the Python C API, including `PyTuple_Size` which returns the size of a tuple, and `PyTuple_GET_SIZE` which performs the same function without error checking. Additionally, the `PyTuple_GetItem` function is mentioned for retrieving items from a tuple.
---

[Py_ssize_t](https://docs.python.org/3/c-api/intro.html#c.Py_ssize_t "Py_ssize_t")PyTuple_Size([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*p)[¶](https://docs.python.org/3/c-api/tuple.html#c.PyTuple_Size "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Take a pointer to a tuple object, and return the size of that tuple. On error, return `-1` and with an exception set. 

[Py_ssize_t](https://docs.python.org/3/c-api/intro.html#c.Py_ssize_t "Py_ssize_t")PyTuple_GET_SIZE([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*p)[¶](https://docs.python.org/3/c-api/tuple.html#c.PyTuple_GET_SIZE "Link to this definition")
    
Like [`PyTuple_Size()`](https://docs.python.org/3/c-api/tuple.html#c.PyTuple_Size "PyTuple_Size"), but without error checking. 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyTuple_GetItem([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*p, [Py_ssize_t](https://docs.python.org/3/c-api/intro.html#c.Py_ssize_t "Py_ssize_t")pos)[¶](https://docs.python.org/3/c-api/tuple.html#c.PyTuple_GetItem "Link to this definition")
    _Return value: Borrowed reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Return the object at position _pos_ in the tuple pointed to by _p_. If _pos_ is negative or out of bounds, return `NULL` and set an [`IndexError`](https://docs.python.org/3/library/exceptions.html#IndexError "IndexError") exception.
The returned reference is borrowed from the tuple _p_ (that is: it is only valid as long as you hold a reference to _p_). To get a [strong reference](https://docs.python.org/3/glossary.html#term-strong-reference), use [`Py_NewRef(PyTuple_GetItem(...))`](https://docs.python.org/3/c-api/refcounting.html#c.Py_NewRef "Py_NewRef") or [`PySequence_GetItem()`](https://docs.python.org/3/c-api/sequence.html#c.PySequence_GetItem "PySequence_GetItem"). 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyTuple_GET_ITEM([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*p, [Py_ssize_t](https://docs.python.org/3/c-api/intro.html#c.Py_ssize_t "Py_ssize_t")pos)[¶](https://docs.python.org/3/c-api/tuple.html#c.PyTuple_GET_ITEM "Link to this definition")
    _Return value: Borrowed reference._
Like [`PyTuple_GetItem()`](https://docs.python.org/3/c-api/tuple.html#c.PyTuple_GetItem "PyTuple_GetItem"), but does no checking of its arguments. 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyTuple_GetSlice([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*p, [Py_ssize_t](https://docs.python.org/3/c-api/intro.html#c.Py_ssize_t "Py_ssize_t")low, [Py_ssize_t](https://docs.python.org/3/c-api/intro.html#c.Py_ssize_t "Py_ssize_t")high)[¶](https://docs.python.org/3/c-api/tuple.html#c.PyTuple_GetSlice "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Return the slice of the tuple pointed to by _p_ between _low_ and _high_ , or `NULL` with an exception set on failure.
This is the equivalent of the Python expression `p[low:high]`. Indexing from the end of the tuple is not supported. 

intPyTuple_SetItem([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*p, [Py_ssize_t](https://docs.python.org/3/c-api/intro.html#c.Py_ssize_t "Py_ssize_t")pos, [PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*o)[¶](https://docs.python.org/3/c-api/tuple.html#c.PyTuple_SetItem "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Insert a reference to object _o_ at position _pos_ of the tuple pointed to by _p_. Return `0` on success. If _pos_ is out of bounds, return `-1` and set an [`IndexError`](https://docs.python.org/3/library/exceptions.html#IndexError "IndexError") exception.
Note
This function “steals” a reference to _o_ and discards a reference to an item already in the tuple at the affected position.