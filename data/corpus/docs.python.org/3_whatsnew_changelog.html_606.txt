Title: Python Changelog Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section details various updates in Python, including zlib version 1.2.11, changes to ftplib.FTP.putline() with new ValueError handling, improvements to os.listdir() and os.scandir() for bytes names, restrictions on environment variable names in os.putenv() and os.spawn*(), and enhancements to unittest subtest descriptions.
---

As in some special FIPS-140 build environments.
  * [bpo-29169](https://bugs.python.org/issue?@action=redirect&bpo=29169): Update zlib to 1.2.11.
  * [bpo-30119](https://bugs.python.org/issue?@action=redirect&bpo=30119): ftplib.FTP.putline() now throws ValueError on commands that contains CR or LF. Patch by Donghee Na.
  * [bpo-30879](https://bugs.python.org/issue?@action=redirect&bpo=30879): os.listdir() and os.scandir() now emit bytes names when called with bytes-like argument.
  * [bpo-30746](https://bugs.python.org/issue?@action=redirect&bpo=30746): Prohibited the ‘=’ character in environment variable names in `os.putenv()` and `os.spawn*()`.
  * [bpo-30664](https://bugs.python.org/issue?@action=redirect&bpo=30664): The description of a unittest subtest now preserves the order of keyword arguments of TestCase.subTest().
  * [bpo-21071](https://bugs.python.org/issue?@action=redirect&bpo=21071): struct.Struct.format type is now [`str`](https://docs.python.org/3/library/stdtypes.html#str "str") instead of [`bytes`](https://docs.python.org/3/library/stdtypes.html#bytes "bytes").
  * [bpo-29212](https://bugs.python.org/issue?@action=redirect&bpo=29212): Fix concurrent.futures.thread.ThreadPoolExecutor threads to have a non repr() based thread name by default when no thread_name_prefix is supplied. They will now identify themselves as “ThreadPoolExecutor-y_n”.
  * [bpo-29755](https://bugs.python.org/issue?@action=redirect&bpo=29755): Fixed the lgettext() family of functions in the gettext module. They now always return bytes.
  * [bpo-30616](https://bugs.python.org/issue?@action=redirect&bpo=30616): Functional API of enum allows to create empty enums. Patched by Donghee Na
  * [bpo-30038](https://bugs.python.org/issue?@action=redirect&bpo=30038): Fix race condition between signal delivery and wakeup file descriptor. Patch by Nathaniel Smith.
  * [bpo-23894](https://bugs.python.org/issue?@action=redirect&bpo=23894): lib2to3 now recognizes `rb'...'` and `f'...'` strings.
  * [bpo-24744](https://bugs.python.org/issue?@action=redirect&bpo=24744): pkgutil.walk_packages function now raises ValueError if _path_ is a string. Patch by Sanyam Khurana.
  * [bpo-24484](https://bugs.python.org/issue?@action=redirect&bpo=24484): Avoid race condition in multiprocessing cleanup.
  * [bpo-30589](https://bugs.python.org/issue?@action=redirect&bpo=30589): Fix multiprocessing.Process.exitcode to return the opposite of the signal number when the process is killed by a signal (instead of 255) when using the “forkserver” method.
  * [bpo-28994](https://bugs.python.org/issue?@action=redirect&bpo=28994): The traceback no longer displayed for SystemExit raised in a callback registered by atexit.
  * [bpo-30508](https://bugs.python.org/issue?@action=redirect&bpo=30508): Don’t log exceptions if Task/Future “cancel()” method was called.
  * [bpo-30645](https://bugs.python.org/issue?@action=redirect&bpo=30645): Fix path calculation in `imp.load_package()`, fixing it for cases when a package is only shipped with bytecodes. Patch by Alexandru Ardelean.
  * [bpo-11822](https://bugs.python.org/issue?@action=redirect&bpo=11822): The dis.dis() function now is able to disassemble nested code objects.
  * [bpo-30624](https://bugs.python.org/issue?@action=redirect&bpo=30624): selectors does not take KeyboardInterrupt and SystemExit into account, leaving a fd in a bad state in case of error. Patch by Giampaolo Rodola’.
  * [bpo-30595](https://bugs.python.org/issue?@action=redirect&bpo=30595): multiprocessing.Queue.get() with a timeout now polls its reader in non-blocking mode if it succeeded to acquire the lock but the acquire took longer than the timeout.
  * [bpo-28556](https://bugs.python.org/issue?@action=redirect&bpo=28556): Updates to typing module: Add generic AsyncContextManager, add support for ContextManager on all versions. Original PRs by Jelle Zijlstra and Ivan Levkivskyi
  * [bpo-30605](https://bugs.python.org/issue?@action=redirect&bpo=30605): re.compile() no longer raises a BytesWarning when compiling a bytes instance with misplaced inline modifier. Patch by Roy Williams.
  * [bpo-29870](https://bugs.python.org/issue?@action=redirect&bpo=29870): Fix ssl sockets leaks when connection is aborted in asyncio/ssl implementation. Patch by Michaël Sghaïer.
  * [bpo-29743](https://bugs.python.org/issue?@action=redirect&bpo=29743): Closing transport during handshake process leaks open socket. Patch by Nikolay Kim
  * [bpo-27585](https://bugs.python.org/issue?@action=redirect&bpo=27585): Fix waiter cancellation in asyncio.Lock. Patch by Mathieu Sornay.
  * [bpo-30014](https://bugs.python.org/issue?@action=redirect&bpo=30014): modify() method of poll(), epoll() and devpoll() based classes of selectors module is around 10% faster.