Title: ModuleFinder Documentation
URL: https://docs.python.org/3/library/modulefinder.html
Summary: This section describes the `modules` attribute of `ModuleFinder`, a dictionary that maps module names to their corresponding modules. It includes example usage of `ModuleFinder`, showing a script (`bacon.py`) that imports various modules and how to analyze it with `ModuleFinder` to output loaded modules.
---

modules[¶](https://docs.python.org/3/library/modulefinder.html#modulefinder.ModuleFinder.modules "Link to this definition")
    
A dictionary mapping module names to modules. See [Example usage of ModuleFinder](https://docs.python.org/3/library/modulefinder.html#modulefinder-example).
## Example usage of [`ModuleFinder`](https://docs.python.org/3/library/modulefinder.html#modulefinder.ModuleFinder "modulefinder.ModuleFinder")[¶](https://docs.python.org/3/library/modulefinder.html#example-usage-of-modulefinder "Link to this heading")
The script that is going to get analyzed later on (bacon.py):
```
importre,itertools
try:
  importbaconhameggs
except ImportError:
  pass
try:
  importguido.python.ham
except ImportError:
  pass

```

The script that will output the report of bacon.py:
```
frommodulefinderimport ModuleFinder
finder = ModuleFinder()
finder.run_script('bacon.py')
print('Loaded modules:')
for name, mod in finder.modules.items():
  print('%s: ' % name, end='')
  print(','.join(list(mod.globalnames.keys())[:3]))
print('-'*50)
print('Modules not imported:')
print('\n'.join(finder.badmodules.keys()))

```

Sample output (may vary depending on the architecture):
```
Loaded modules:
_types:
copyreg: _inverted_registry,_slotnames,__all__
re._compiler: isstring,_sre,_optimize_unicode
_sre:
re._constants: REPEAT_ONE,makedict,AT_END_LINE
sys:
re: __module__,finditer,_expand
itertools:
__main__: re,itertools,baconhameggs
re._parser: _PATTERNENDERS,SRE_FLAG_UNICODE
array:
types: __module__,IntType,TypeType
---------------------------------------------------
Modules not imported:
guido.python.ham
baconhameggs

```

### [Table of Contents](https://docs.python.org/3/contents.html)
  * [`modulefinder` — Find modules used by a script](https://docs.python.org/3/library/modulefinder.html)
    * [Example usage of `ModuleFinder`](https://docs.python.org/3/library/modulefinder.html#example-usage-of-modulefinder)


#### Previous topic
[`pkgutil` — Package extension utility](https://docs.python.org/3/library/pkgutil.html "previous chapter")
#### Next topic
[`runpy` — Locating and executing Python modules](https://docs.python.org/3/library/runpy.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/modulefinder.rst)


«
### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/library/runpy.html "runpy — Locating and executing Python modules") |
  * [previous](https://docs.python.org/3/library/pkgutil.html "pkgutil — Package extension utility") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [The Python Standard Library](https://docs.python.org/3/library/index.html) »
  * [Importing Modules](https://docs.python.org/3/library/modules.html) »
  * [`modulefinder` — Find modules used by a script](https://docs.python.org/3/library/modulefinder.html)
  * | 
  * Theme  Auto Light Dark |


© [ Copyright ](https://docs.python.org/3/copyright.html) 2001-2025, Python Software Foundation. This page is licensed under the Python Software Foundation License Version 2. Examples, recipes, and other code in the documentation are additionally licensed under the Zero Clause BSD License. See [History and License](https://docs.python.org/license.html) for more information. The Python Software Foundation is a non-profit corporation. [Please donate.](https://www.python.org/psf/donations/) Last updated on Apr 27, 2025 (05:38 UTC). [Found a bug](https://docs.python.org/bugs.html)? Created using [Sphinx](https://www.sphinx-doc.org/) 8.2.3.