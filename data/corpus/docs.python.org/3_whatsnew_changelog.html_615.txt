Title: Python Change Log Overview
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This document summarizes various patches and fixes made to Python, including memory leak prevention in win32_ver(), error handling improvements in os.stat(), enhancements to regular expression warnings, and updates to codecs and WebSocket support.
---

Initial patch by Peter Wirtz.
  * [bpo-27932](https://bugs.python.org/issue?@action=redirect&bpo=27932): Prevent memory leak in win32_ver().
  * Fix UnboundLocalError in socket._sendfile_use_sendfile.
  * [bpo-28075](https://bugs.python.org/issue?@action=redirect&bpo=28075): Check for ERROR_ACCESS_DENIED in Windows implementation of os.stat(). Patch by Eryk Sun.
  * [bpo-22493](https://bugs.python.org/issue?@action=redirect&bpo=22493): Warning message emitted by using inline flags in the middle of regular expression now contains a (truncated) regex pattern. Patch by Tim Graham.
  * [bpo-25270](https://bugs.python.org/issue?@action=redirect&bpo=25270): Prevent codecs.escape_encode() from raising SystemError when an empty bytestring is passed.
  * [bpo-28181](https://bugs.python.org/issue?@action=redirect&bpo=28181): Get antigravity over HTTPS. Patch by Kaartic Sivaraam.
  * [bpo-25895](https://bugs.python.org/issue?@action=redirect&bpo=25895): Enable WebSocket URL schemes in urllib.parse.urljoin. Patch by Gergely Imreh and Markus Holtermann.
  * [bpo-28114](https://bugs.python.org/issue?@action=redirect&bpo=28114): Fix a crash in parse_envlist() when env contains byte strings. Patch by Eryk Sun.
  * [bpo-27599](https://bugs.python.org/issue?@action=redirect&bpo=27599): Fixed buffer overrun in binascii.b2a_qp() and binascii.a2b_qp().
  * [bpo-27906](https://bugs.python.org/issue?@action=redirect&bpo=27906): Fix socket accept exhaustion during high TCP traffic. Patch by Kevin Conway.
  * [bpo-28174](https://bugs.python.org/issue?@action=redirect&bpo=28174): Handle when SO_REUSEPORT isn’t properly supported. Patch by Seth Michael Larson.
  * [bpo-26654](https://bugs.python.org/issue?@action=redirect&bpo=26654): Inspect functools.partial in asyncio.Handle.__repr__. Patch by iceboy.
  * [bpo-26909](https://bugs.python.org/issue?@action=redirect&bpo=26909): Fix slow pipes IO in asyncio. Patch by INADA Naoki.
  * [bpo-28176](https://bugs.python.org/issue?@action=redirect&bpo=28176): Fix callbacks race in asyncio.SelectorLoop.sock_connect.
  * [bpo-27759](https://bugs.python.org/issue?@action=redirect&bpo=27759): Fix selectors incorrectly retain invalid file descriptors. Patch by Mark Williams.
  * [bpo-28325](https://bugs.python.org/issue?@action=redirect&bpo=28325): Remove vestigial MacOS 9 macurl2path module and its tests.
  * [bpo-28368](https://bugs.python.org/issue?@action=redirect&bpo=28368): Refuse monitoring processes if the child watcher has no loop attached. Patch by Vincent Michel.
  * [bpo-28369](https://bugs.python.org/issue?@action=redirect&bpo=28369): Raise RuntimeError when transport’s FD is used with add_reader, add_writer, etc.
  * [bpo-28370](https://bugs.python.org/issue?@action=redirect&bpo=28370): Speedup asyncio.StreamReader.readexactly. Patch by Коренберг Марк.
  * [bpo-28371](https://bugs.python.org/issue?@action=redirect&bpo=28371): Deprecate passing asyncio.Handles to run_in_executor.
  * [bpo-28372](https://bugs.python.org/issue?@action=redirect&bpo=28372): Fix asyncio to support formatting of non-python coroutines.
  * [bpo-28399](https://bugs.python.org/issue?@action=redirect&bpo=28399): Remove UNIX socket from FS before binding. Patch by Коренберг Марк.
  * [bpo-27972](https://bugs.python.org/issue?@action=redirect&bpo=27972): Prohibit Tasks to await on themselves.
  * [bpo-24142](https://bugs.python.org/issue?@action=redirect&bpo=24142): Reading a corrupt config file left configparser in an invalid state. Original patch by Florian Höch.
  * [bpo-29581](https://bugs.python.org/issue?@action=redirect&bpo=29581): ABCMeta.__new__ now accepts `**kwargs`, allowing abstract base classes to use keyword parameters in __init_subclass__. Patch by Nate Soares.
  * [bpo-25532](https://bugs.python.org/issue?@action=redirect&bpo=25532): inspect.unwrap() will now only try to unwrap an object sys.getrecursionlimit() times, to protect against objects which create a new object on every attribute access.
  * [bpo-30177](https://bugs.python.org/issue?@action=redirect&bpo=30177): path.resolve(strict=False) no longer cuts the path after the first element not present in the filesystem. Patch by Antoine Pietri.