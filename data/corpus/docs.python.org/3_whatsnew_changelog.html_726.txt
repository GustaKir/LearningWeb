Title: Python 3 Changelog Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: Recent updates include direct calls to the IDNA codec encoder, bug fixes for various built-in functions, and improvements in error handling and data processing capabilities, such as ensuring HTMLParser returns all data and shutil.make_archive adding directory entries in ZIP files.
---

The encoder of the IDNA codec is now called directly instead of calling the encode() method of the string.
  * [bpo-25060](https://bugs.python.org/issue?@action=redirect&bpo=25060): Correctly compute stack usage of the BUILD_MAP opcode.
  * [bpo-24857](https://bugs.python.org/issue?@action=redirect&bpo=24857): Comparing call_args to a long sequence now correctly returns a boolean result instead of raising an exception. Patch by A Kaptur.
  * [bpo-23144](https://bugs.python.org/issue?@action=redirect&bpo=23144): Make sure that HTMLParser.feed() returns all the data, even when convert_charrefs is True.
  * [bpo-24982](https://bugs.python.org/issue?@action=redirect&bpo=24982): shutil.make_archive() with the “zip” format now adds entries for directories (including empty directories) in ZIP file.
  * [bpo-25019](https://bugs.python.org/issue?@action=redirect&bpo=25019): Fixed a crash caused by setting non-string key of expat parser. Based on patch by John Leitch.
  * [bpo-16180](https://bugs.python.org/issue?@action=redirect&bpo=16180): Exit pdb if file has syntax error, instead of trapping user in an infinite loop. Patch by Xavier de Gaye.
  * [bpo-24891](https://bugs.python.org/issue?@action=redirect&bpo=24891): Fix a race condition at Python startup if the file descriptor of stdin (0), stdout (1) or stderr (2) is closed while Python is creating sys.stdin, sys.stdout and sys.stderr objects. These attributes are now set to None if the creation of the object failed, instead of raising an OSError exception. Initial patch written by Marco Paolini.
  * [bpo-24992](https://bugs.python.org/issue?@action=redirect&bpo=24992): Fix error handling and a race condition (related to garbage collection) in collections.OrderedDict constructor.
  * [bpo-24881](https://bugs.python.org/issue?@action=redirect&bpo=24881): Fixed setting binary mode in Python implementation of FileIO on Windows and Cygwin. Patch from Akira Li.
  * [bpo-25578](https://bugs.python.org/issue?@action=redirect&bpo=25578): Fix (another) memory leak in SSLSocket.getpeercer().
  * [bpo-25530](https://bugs.python.org/issue?@action=redirect&bpo=25530): Disable the vulnerable SSLv3 protocol by default when creating ssl.SSLContext.
  * [bpo-25569](https://bugs.python.org/issue?@action=redirect&bpo=25569): Fix memory leak in SSLSocket.getpeercert().
  * [bpo-25471](https://bugs.python.org/issue?@action=redirect&bpo=25471): Sockets returned from accept() shouldn’t appear to be nonblocking.
  * [bpo-25319](https://bugs.python.org/issue?@action=redirect&bpo=25319): When threading.Event is reinitialized, the underlying condition should use a regular lock rather than a recursive lock.
  * [bpo-21112](https://bugs.python.org/issue?@action=redirect&bpo=21112): Fix regression in unittest.expectedFailure on subclasses. Patch from Berker Peksag.
  * [bpo-24764](https://bugs.python.org/issue?@action=redirect&bpo=24764): cgi.FieldStorage.read_multi() now ignores the Content-Length header in part headers. Patch written by Peter Landry and reviewed by Pierre Quentel.
  * [bpo-24913](https://bugs.python.org/issue?@action=redirect&bpo=24913): Fix overrun error in deque.index(). Found by John Leitch and Bryce Darling.
  * [bpo-24774](https://bugs.python.org/issue?@action=redirect&bpo=24774): Fix docstring in http.server.test. Patch from Chiu-Hsiang Hsu.
  * [bpo-21159](https://bugs.python.org/issue?@action=redirect&bpo=21159): Improve message in configparser.InterpolationMissingOptionError. Patch from Łukasz Langa.
  * [bpo-20362](https://bugs.python.org/issue?@action=redirect&bpo=20362): Honour TestCase.longMessage correctly in assertRegex. Patch from Ilia Kurenkov.
  * [bpo-23572](https://bugs.python.org/issue?@action=redirect&bpo=23572): Fixed functools.singledispatch on classes with false metaclasses. Patch by Ethan Furman.
  * asyncio: ensure_future() now accepts awaitable objects.