Title: Time Constants in Python
URL: https://docs.python.org/3/library/time.html
Summary: This section describes two constants from the time module: CLOCK_UPTIME_RAW_APPROX, which offers less accuracy due to value caching during context switches and is available in macOS 10.12 and later, and CLOCK_REALTIME, a system-wide real-time clock requiring appropriate privileges to set, available on Unix since version 3.3.
---

time.CLOCK_UPTIME_RAW_APPROX[¶](https://docs.python.org/3/library/time.html#time.CLOCK_UPTIME_RAW_APPROX "Link to this definition")
    
Like [`CLOCK_UPTIME_RAW`](https://docs.python.org/3/library/time.html#time.CLOCK_UPTIME_RAW "time.CLOCK_UPTIME_RAW"), but the value is cached by the system at context switches and therefore has less accuracy.
[Availability](https://docs.python.org/3/library/intro.html#availability): macOS >= 10.12.
Added in version 3.13.
The following constant is the only parameter that can be sent to [`clock_settime()`](https://docs.python.org/3/library/time.html#time.clock_settime "time.clock_settime"). 

time.CLOCK_REALTIME[¶](https://docs.python.org/3/library/time.html#time.CLOCK_REALTIME "Link to this definition")
    
System-wide real-time clock. Setting this clock requires appropriate privileges.
[Availability](https://docs.python.org/3/library/intro.html#availability): Unix.
Added in version 3.3.
## Timezone Constants[¶](https://docs.python.org/3/library/time.html#timezone-constants "Link to this heading") 

time.altzone[¶](https://docs.python.org/3/library/time.html#time.altzone "Link to this definition")
    
The offset of the local DST timezone, in seconds west of UTC, if one is defined. This is negative if the local DST timezone is east of UTC (as in Western Europe, including the UK). Only use this if `daylight` is nonzero. See note below. 

time.daylight[¶](https://docs.python.org/3/library/time.html#time.daylight "Link to this definition")
    
Nonzero if a DST timezone is defined. See note below. 

time.timezone[¶](https://docs.python.org/3/library/time.html#time.timezone "Link to this definition")
    
The offset of the local (non-DST) timezone, in seconds west of UTC (negative in most of Western Europe, positive in the US, zero in the UK). See note below. 

time.tzname[¶](https://docs.python.org/3/library/time.html#time.tzname "Link to this definition")
    
A tuple of two strings: the first is the name of the local non-DST timezone, the second is the name of the local DST timezone. If no DST timezone is defined, the second string should not be used. See note below.
Note
For the above Timezone constants ([`altzone`](https://docs.python.org/3/library/time.html#time.altzone "time.altzone"), [`daylight`](https://docs.python.org/3/library/time.html#time.daylight "time.daylight"), [`timezone`](https://docs.python.org/3/library/time.html#time.timezone "time.timezone"), and [`tzname`](https://docs.python.org/3/library/time.html#time.tzname "time.tzname")), the value is determined by the timezone rules in effect at module load time or the last time [`tzset()`](https://docs.python.org/3/library/time.html#time.tzset "time.tzset") is called and may be incorrect for times in the past. It is recommended to use the [`tm_gmtoff`](https://docs.python.org/3/library/time.html#time.struct_time.tm_gmtoff "time.struct_time.tm_gmtoff") and [`tm_zone`](https://docs.python.org/3/library/time.html#time.struct_time.tm_zone "time.struct_time.tm_zone") results from [`localtime()`](https://docs.python.org/3/library/time.html#time.localtime "time.localtime") to obtain timezone information.
See also 

Module [`datetime`](https://docs.python.org/3/library/datetime.html#module-datetime "datetime: Basic date and time types.")
    
More object-oriented interface to dates and times. 

Module [`locale`](https://docs.python.org/3/library/locale.html#module-locale "locale: Internationalization services.")
    
Internationalization services. The locale setting affects the interpretation of many format specifiers in [`strftime()`](https://docs.python.org/3/library/time.html#time.strftime "time.strftime") and [`strptime()`](https://docs.python.org/3/library/time.html#time.strptime "time.strptime").