Title: New Functions Added to the Limited API in Windows
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This documentation chunk highlights the addition of several functions, including PyModule_AddType() and PyType_FromModuleAndSpec(), to the limited API on Windows. It also mentions updates related to PyAsyncMethods, PyType_GetSlot functionality, and changes to PyList_SET_ITEM.
---

The functions [`PyModule_AddType()`](https://docs.python.org/3/c-api/module.html#c.PyModule_AddType "PyModule_AddType"), [`PyType_FromModuleAndSpec()`](https://docs.python.org/3/c-api/type.html#c.PyType_FromModuleAndSpec "PyType_FromModuleAndSpec"), [`PyType_GetModule()`](https://docs.python.org/3/c-api/type.html#c.PyType_GetModule "PyType_GetModule") and [`PyType_GetModuleState()`](https://docs.python.org/3/c-api/type.html#c.PyType_GetModuleState "PyType_GetModuleState") are added to the limited API on Windows.
  * [bpo-42085](https://bugs.python.org/issue?@action=redirect&bpo=42085): Add dedicated entry to PyAsyncMethods for sending values
  * [bpo-41073](https://bugs.python.org/issue?@action=redirect&bpo=41073): [`PyType_GetSlot()`](https://docs.python.org/3/c-api/type.html#c.PyType_GetSlot "PyType_GetSlot") can now accept static types.
  * [bpo-30459](https://bugs.python.org/issue?@action=redirect&bpo=30459): [`PyList_SET_ITEM()`](https://docs.python.org/3/c-api/list.html#c.PyList_SET_ITEM "PyList_SET_ITEM"), [`PyTuple_SET_ITEM()`](https://docs.python.org/3/c-api/tuple.html#c.PyTuple_SET_ITEM "PyTuple_SET_ITEM") and [`PyCell_SET()`](https://docs.python.org/3/c-api/cell.html#c.PyCell_SET "PyCell_SET") macros can no longer be used as l-value or r-value. For example, `x = PyList_SET_ITEM(a, b, c)` and `PyList_SET_ITEM(a, b, c) = x` now fail with a compiler error. It prevents bugs like `if (PyList_SET_ITEM (a, b, c) < 0) ...` test. Patch by Zackery Spytz and Victor Stinner.


## Python 3.10.0 alpha 2[¶](https://docs.python.org/3/whatsnew/changelog.html#python-3-10-0-alpha-2 "Link to this heading")
_Release date: 2020-11-03_
### Security[¶](https://docs.python.org/3/whatsnew/changelog.html#id347 "Link to this heading")
  * [bpo-42103](https://bugs.python.org/issue?@action=redirect&bpo=42103): Prevented potential DoS attack via CPU and RAM exhaustion when processing malformed Apple Property List files in binary format.
  * [bpo-42051](https://bugs.python.org/issue?@action=redirect&bpo=42051): The [`plistlib`](https://docs.python.org/3/library/plistlib.html#module-plistlib "plistlib: Generate and parse Apple plist files.") module no longer accepts entity declarations in XML plist files to avoid XML vulnerabilities. This should not affect users as entity declarations are not used in regular plist files.