Title: linecache — Random access to text lines
URL: https://docs.python.org/3/library/linecache.html
Summary: The linecache module provides functions to access specific lines from text files, with features such as caching and reading lines efficiently. It allows retrieval of lines from any file in a way that is optimized for performance.
---

[ ![Python logo](https://docs.python.org/3/_static/py.svg) ](https://www.python.org/) dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
Theme  Auto Light Dark
#### Previous topic
[`fnmatch` — Unix filename pattern matching](https://docs.python.org/3/library/fnmatch.html "previous chapter")
#### Next topic
[`shutil` — High-level file operations](https://docs.python.org/3/library/shutil.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/linecache.rst)


### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/library/shutil.html "shutil — High-level file operations") |
  * [previous](https://docs.python.org/3/library/fnmatch.html "fnmatch — Unix filename pattern matching") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [The Python Standard Library](https://docs.python.org/3/library/index.html) »
  * [File and Directory Access](https://docs.python.org/3/library/filesys.html) »
  * [`linecache` — Random access to text lines](https://docs.python.org/3/library/linecache.html)
  * | 
  * Theme  Auto Light Dark |


# `linecache` — Random access to text lines[¶](https://docs.python.org/3/library/linecache.html#module-linecache "Link to this heading")
**Source code:** [Lib/linecache.py](https://github.com/python/cpython/tree/3.13/Lib/linecache.py)
The [`linecache`](https://docs.python.org/3/library/linecache.html#module-linecache "linecache: Provides random access to individual lines from text files.") module allows one to get any line from a Python source file, while attempting to optimize internally, using a cache, the common case where many lines are read from a single file. This is used by the [`traceback`](https://docs.python.org/3/library/traceback.html#module-traceback "traceback: Print or retrieve a stack traceback.") module to retrieve source lines for inclusion in the formatted traceback.
The [`tokenize.open()`](https://docs.python.org/3/library/tokenize.html#tokenize.open "tokenize.open") function is used to open files. This function uses [`tokenize.detect_encoding()`](https://docs.python.org/3/library/tokenize.html#tokenize.detect_encoding "tokenize.detect_encoding") to get the encoding of the file; in the absence of an encoding token, the file encoding defaults to UTF-8.
The [`linecache`](https://docs.python.org/3/library/linecache.html#module-linecache "linecache: Provides random access to individual lines from text files.") module defines the following functions: 

linecache.getline(_filename_ , _lineno_ , _module_globals =None_)[¶](https://docs.python.org/3/library/linecache.html#linecache.getline "Link to this definition")
    
Get line _lineno_ from file named _filename_. This function will never raise an exception — it will return `''` on errors (the terminating newline character will be included for lines that are found).
If a file named _filename_ is not found, the function first checks for a [**PEP 302**](https://peps.python.org/pep-0302/) `__loader__` in _module_globals_. If there is such a loader and it defines a `get_source` method, then that determines the source lines (if `get_source()` returns `None`, then `''` is returned). Finally, if _filename_ is a relative filename, it is looked up relative to the entries in the module search path, `sys.path`. 

linecache.clearcache()[¶](https://docs.python.org/3/library/linecache.html#linecache.clearcache "Link to this definition")
    
Clear the cache. Use this function if you no longer need lines from files previously read using [`getline()`](https://docs.python.org/3/library/linecache.html#linecache.getline "linecache.getline"). 

linecache.checkcache(_filename =None_)[¶](https://docs.python.org/3/library/linecache.html#linecache.checkcache "Link to this definition")
    
Check the cache for validity. Use this function if files in the cache may have changed on disk, and you require the updated version. If _filename_ is omitted, it will check all the entries in the cache.