Title: Python Core and Builtins Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section details recent changes in Python's core and built-in functionalities, including the use of UTF-8 as filesystem encoding when `nl_langinfo(CODESET)` returns an empty string, bug fixes in the PEG parser to prevent crashes, and improvements in error handling during parsing.
---

### Core and Builtins[¶](https://docs.python.org/3/whatsnew/changelog.html#id348 "Link to this heading")
  * [bpo-42236](https://bugs.python.org/issue?@action=redirect&bpo=42236): If the `nl_langinfo(CODESET)` function returns an empty string, Python now uses UTF-8 as the filesystem encoding. Patch by Victor Stinner.
  * [bpo-42218](https://bugs.python.org/issue?@action=redirect&bpo=42218): Fixed a bug in the PEG parser that was causing crashes in debug mode. Now errors are checked in left-recursive rules to avoid cases where such errors do not get handled in time and appear as long-distance crashes in other places.
  * [bpo-42214](https://bugs.python.org/issue?@action=redirect&bpo=42214): Fixed a possible crash in the PEG parser when checking for the ‘!=’ token in the `barry_as_flufl` rule. Patch by Pablo Galindo.
  * [bpo-42206](https://bugs.python.org/issue?@action=redirect&bpo=42206): Propagate and raise the errors caused by `PyAST_Validate()` in the parser.
  * [bpo-41796](https://bugs.python.org/issue?@action=redirect&bpo=41796): The [`ast`](https://docs.python.org/3/library/ast.html#module-ast "ast: Abstract Syntax Tree classes and manipulation.") module internal state is now per interpreter. Patch by Victor Stinner.
  * [bpo-42143](https://bugs.python.org/issue?@action=redirect&bpo=42143): Fix handling of errors during creation of `PyFunctionObject`, which resulted in operations on uninitialized memory. Patch by Yonatan Goldschmidt.
  * [bpo-41659](https://bugs.python.org/issue?@action=redirect&bpo=41659): Fix a bug in the parser, where a curly brace following a `primary` didn’t fail immediately. This led to invalid expressions like `a {b}` to throw a [`SyntaxError`](https://docs.python.org/3/library/exceptions.html#SyntaxError "SyntaxError") with a wrong offset, or invalid expressions ending with a curly brace like `a {` to not fail immediately in the REPL.
  * [bpo-42150](https://bugs.python.org/issue?@action=redirect&bpo=42150): Fix possible buffer overflow in the new parser when checking for continuation lines. Patch by Pablo Galindo.
  * [bpo-42123](https://bugs.python.org/issue?@action=redirect&bpo=42123): Run the parser two times. On the first run, disable all the rules that only generate better error messages to gain performance. If there’s a parse failure, run the parser a second time with those enabled.
  * [bpo-42093](https://bugs.python.org/issue?@action=redirect&bpo=42093): The `LOAD_ATTR` instruction now uses new “per opcode cache” mechanism and it is about 36% faster now. Patch by Pablo Galindo and Yury Selivanov.
  * [bpo-42030](https://bugs.python.org/issue?@action=redirect&bpo=42030): Support for the legacy AIX-specific shared library loading support has been removed. All versions of AIX since 4.3 have supported and defaulted to using the common Unix mechanism instead.
  * [bpo-41984](https://bugs.python.org/issue?@action=redirect&bpo=41984): The garbage collector now tracks all user-defined classes. Patch by Brandt Bucher.
  * [bpo-41993](https://bugs.python.org/issue?@action=redirect&bpo=41993): Fixed potential issues with removing not completely initialized module from `sys.modules` when import fails.
  * [bpo-41979](https://bugs.python.org/issue?@action=redirect&bpo=41979): Star-unpacking is now allowed for with item’s targets in the PEG parser.
  * [bpo-41974](https://bugs.python.org/issue?@action=redirect&bpo=41974): Removed special methods `__int__`, `__float__`, `__floordiv__`, `__mod__`, `__divmod__`, `__rfloordiv__`, `__rmod__` and `__rdivmod__` of the [`complex`](https://docs.python.org/3/library/functions.html#complex "complex") class. They always raised a [`TypeError`](https://docs.python.org/3/library/exceptions.html#TypeError "TypeError").
  * [bpo-41902](https://bugs.python.org/issue?@action=redirect&bpo=41902): Micro optimization when compute [`sq_item`](https://docs.python.org/3/c-api/typeobj.html#c.PySequenceMethods.sq_item "PySequenceMethods.sq_item") and [`mp_subscript`](https://docs.python.org/3/c-api/typeobj.html#c.PyMappingMethods.mp_subscript "PyMappingMethods.mp_subscript") of [`range`](https://docs.python.org/3/library/stdtypes.html#range "range"). Patch by Donghee Na.
  * [bpo-41894](https://bugs.python.org/issue?@action=redirect&bpo=41894): When loading a native module and a load failure occurs, prevent a possible UnicodeDecodeError when not running in a UTF-8 locale by decoding the load error message using the current locale’s encoding.
  * [bpo-41902](https://bugs.python.org/issue?@action=redirect&bpo=41902): Micro optimization for range.index if step is 1. Patch by Donghee Na.
  * [bpo-41435](https://bugs.python.org/issue?@action=redirect&bpo=41435): Add `sys._current_exceptions()` function to retrieve a dictionary mapping each thread’s identifier to the topmost exception currently active in that thread at the time the function is called.
  * [bpo-38605](https://bugs.python.org/issue?@action=redirect&bpo=38605): Enable `from __future__ import annot