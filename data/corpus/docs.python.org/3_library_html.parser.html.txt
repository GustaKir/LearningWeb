Title: HTML Parser Documentation
URL: https://docs.python.org/3/library/html.parser.html
Summary: This section provides an overview of the `html.parser` module in Python, which is a simple parser for HTML and XHTML. It includes links to the module's methods, examples, and an example HTML parser application.
---

[ ![Python logo](https://docs.python.org/3/_static/py.svg) ](https://www.python.org/) dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
Theme  Auto Light Dark
### [Table of Contents](https://docs.python.org/3/contents.html)
  * [`html.parser` — Simple HTML and XHTML parser](https://docs.python.org/3/library/html.parser.html)
    * [Example HTML Parser Application](https://docs.python.org/3/library/html.parser.html#example-html-parser-application)
    * [`HTMLParser` Methods](https://docs.python.org/3/library/html.parser.html#htmlparser-methods)
    * [Examples](https://docs.python.org/3/library/html.parser.html#examples)


#### Previous topic
[`html` — HyperText Markup Language support](https://docs.python.org/3/library/html.html "previous chapter")
#### Next topic
[`html.entities` — Definitions of HTML general entities](https://docs.python.org/3/library/html.entities.html "next chapter")
### This Page
  * [Report a Bug](https://docs.python.org/3/bugs.html)
  * [Show Source ](https://github.com/python/cpython/blob/main/Doc/library/html.parser.rst)


### Navigation
  * [index](https://docs.python.org/3/genindex.html "General Index")
  * [modules](https://docs.python.org/3/py-modindex.html "Python Module Index") |
  * [next](https://docs.python.org/3/library/html.entities.html "html.entities — Definitions of HTML general entities") |
  * [previous](https://docs.python.org/3/library/html.html "html — HyperText Markup Language support") |
  * ![Python logo](https://docs.python.org/3/_static/py.svg)
  * [Python](https://www.python.org/) »
  * EnglishSpanish | españolFrench | françaisItalian | italianoJapanese | 日本語Korean | 한국어Polish | polskiBrazilian Portuguese | Português brasileiroTurkish | TürkçeSimplified Chinese | 简体中文Traditional Chinese | 繁體中文
dev (3.14)3.13.33.123.113.103.93.83.73.63.53.43.33.23.13.02.72.6
  * [3.13.3 Documentation](https://docs.python.org/3/index.html) » 
  * [The Python Standard Library](https://docs.python.org/3/library/index.html) »
  * [Structured Markup Processing Tools](https://docs.python.org/3/library/markup.html) »
  * [`html.parser` — Simple HTML and XHTML parser](https://docs.python.org/3/library/html.parser.html)
  * | 
  * Theme  Auto Light Dark |


# `html.parser` — Simple HTML and XHTML parser[¶](https://docs.python.org/3/library/html.parser.html#module-html.parser "Link to this heading")
**Source code:** [Lib/html/parser.py](https://github.com/python/cpython/tree/3.13/Lib/html/parser.py)
This module defines a class [`HTMLParser`](https://docs.python.org/3/library/html.parser.html#html.parser.HTMLParser "html.parser.HTMLParser") which serves as the basis for parsing text files formatted in HTML (HyperText Mark-up Language) and XHTML. 

_class_ html.parser.HTMLParser(_*_ , _convert_charrefs =True_)[¶](https://docs.python.org/3/library/html.parser.html#html.parser.HTMLParser "Link to this definition")
    
Create a parser instance able to parse invalid markup.
If _convert_charrefs_ is `True` (the default), all character references (except the ones in `script`/`style` elements) are automatically converted to the corresponding Unicode characters.
An [`HTMLParser`](https://docs.python.org/3/library/html.parser.html#html.parser.HTMLParser "html.parser.HTMLParser") instance is fed HTML data and calls handler methods when start tags, end tags, text, comments, and other markup elements are encountered. The user should subclass [`HTMLParser`](https://docs.python.org/3/library/html.parser.html#html.parser.HTMLParser "html.parser.HTMLParser") and override its methods to implement the desired behavior.
This parser does not check that end tags match start tags or call the end-tag handler for elements which are closed implicitly by closing an outer element.
Changed in version 3.4: _convert_charrefs_ keyword argument added.
Changed in version 3.5: The default value for argument _convert_charrefs_ is now `True`.
## Example HTML Parser Application[¶](https://docs.python.org/3/library/html.parser.html#example-html-parser-application "Link to this heading")
As a basic example, below is a simple HTML parser that uses the [`HTMLParser`](https://docs.python.org/3/library/html.parser.html#html.parser.HTMLParser "html.parser.HTMLParser") class to print out start tags, end tags, and data as they are encountered:
```
fromhtml.parserimport HTMLParser
classMyHTMLParser(HTMLParser):
  defhandle_starttag(self, tag, attrs):
    print("Encountered a start tag:", tag)
  defhandle_endtag(self, tag):
    print("Encountered an end tag :", tag)
  defhandle_data(self, data):
    print("Encountered some data :", data)
parser = MyHTMLParser()
parser.feed('<html><head><title>Test</title></head>'
      '<body><h1>Parse me!</h1></body></html>')

```

The output will then be: