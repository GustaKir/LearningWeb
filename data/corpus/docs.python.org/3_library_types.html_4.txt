Title: Summary of New Types in Python 3.9 and 3.10
URL: https://docs.python.org/3/library/types.html
Summary: This document outlines the introduction of `types.GenericAlias` in version 3.9, which can now be subclassed as of 3.9.2, and summarizes related documentation and PEP 585 regarding type hinting for generics. It also describes `types.UnionType`, added in 3.10, representing union type expressions, and `types.TracebackType`, which pertains to objects in traceback contexts.
---

```

Added in version 3.9.
Changed in version 3.9.2: This type can now be subclassed.
See also 

[Generic Alias Types](https://docs.python.org/3/library/stdtypes.html#types-genericalias)
    
In-depth documentation on instances of `types.GenericAlias` 

[**PEP 585**](https://peps.python.org/pep-0585/) - Type Hinting Generics In Standard Collections
    
Introducing the `types.GenericAlias` class 

_class_ types.UnionType[¶](https://docs.python.org/3/library/types.html#types.UnionType "Link to this definition")
    
The type of [union type expressions](https://docs.python.org/3/library/stdtypes.html#types-union).
Added in version 3.10. 

_class_ types.TracebackType(_tb_next_ , _tb_frame_ , _tb_lasti_ , _tb_lineno_)[¶](https://docs.python.org/3/library/types.html#types.TracebackType "Link to this definition")
    
The type of traceback objects such as found in `sys.exception().__traceback__`.
See [the language reference](https://docs.python.org/3/reference/datamodel.html#traceback-objects) for details of the available attributes and operations, and guidance on creating tracebacks dynamically. 

types.FrameType[¶](https://docs.python.org/3/library/types.html#types.FrameType "Link to this definition")
    
The type of [frame objects](https://docs.python.org/3/reference/datamodel.html#frame-objects) such as found in [`tb.tb_frame`](https://docs.python.org/3/reference/datamodel.html#traceback.tb_frame "traceback.tb_frame") if `tb` is a traceback object. 

types.GetSetDescriptorType[¶](https://docs.python.org/3/library/types.html#types.GetSetDescriptorType "Link to this definition")
    
The type of objects defined in extension modules with `PyGetSetDef`, such as [`FrameType.f_locals`](https://docs.python.org/3/reference/datamodel.html#frame.f_locals "frame.f_locals") or `array.array.typecode`. This type is used as descriptor for object attributes; it has the same purpose as the [`property`](https://docs.python.org/3/library/functions.html#property "property") type, but for classes defined in extension modules. 

types.MemberDescriptorType[¶](https://docs.python.org/3/library/types.html#types.MemberDescriptorType "Link to this definition")
    
The type of objects defined in extension modules with `PyMemberDef`, such as `datetime.timedelta.days`. This type is used as descriptor for simple C data members which use standard conversion functions; it has the same purpose as the [`property`](https://docs.python.org/3/library/functions.html#property "property") type, but for classes defined in extension modules.
In addition, when a class is defined with a [`__slots__`](https://docs.python.org/3/reference/datamodel.html#object.__slots__ "object.__slots__") attribute, then for each slot, an instance of `MemberDescriptorType` will be added as an attribute on the class. This allows the slot to appear in the class’s [`__dict__`](https://docs.python.org/3/reference/datamodel.html#type.__dict__ "type.__dict__").
**CPython implementation detail:** In other implementations of Python, this type may be identical to `GetSetDescriptorType`. 

_class_ types.MappingProxyType(_mapping_)[¶](https://docs.python.org/3/library/types.html#types.MappingProxyType "Link to this definition")
    
Read-only proxy of a mapping. It provides a dynamic view on the mapping’s entries, which means that when the mapping changes, the view reflects these changes.
Added in version 3.3.
Changed in version 3.9: Updated to support the new union (`|`) operator from [**PEP 584**](https://peps.python.org/pep-0584/), which simply delegates to the underlying mapping. 

key in proxy
    
Return `True` if the underlying mapping has a key _key_ , else `False`. 

proxy[key]
    
Return the item of the underlying mapping with key _key_. Raises a [`KeyError`](https://docs.python.org/3/library/exceptions.html#KeyError "KeyError") if _key_ is not in the underlying mapping. 

iter(proxy)
    
Return an iterator over the keys of the underlying mapping. This is a shortcut for `iter(proxy.keys())`. 

len(proxy)
    
Return the number of items in the underlying mapping. 

copy()[¶](https://docs.python.org/3/library/types.html#types.MappingProxyType.copy "Link to this definition")
    
Return a shallow copy of the underlying mapping. 

get(_key_[, _default_])[¶](https://docs.python.org/3/library/types.html#types.MappingProxyType.get "Link to this definition")
    
Return the value for _key_ if _key_ is in the underlying mapping, else _default_. If _default_ is not given, it defaults to `None`, so that this method never raises a [`KeyError`](https://docs.python.org/3/library/exceptions.html#KeyError "KeyError"). 

items()[¶](https://docs.python.org/3/library/types.html#types.MappingProxyType.items "Link to this definition")
    
Return a new view of the underlying mapping’s items (`(key, value)` pairs). 

keys()[¶](https://docs.python.org/3/library/types.html#types.MappingProxyType.keys "Link to this definition")
    
Return a new view of the underlying mapping’s keys.