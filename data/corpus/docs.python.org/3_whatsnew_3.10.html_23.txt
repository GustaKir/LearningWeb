Title: Python 3.10: Import System Changes
URL: https://docs.python.org/3/whatsnew/3.10.html
Summary: Python 3.10 introduces updates to the import system. The `importlib.abc.MetaPathFinder.find_spec()` and `importlib.abc.PathEntryFinder.find_spec()` are now preferred methods for importing. The use of `importlib.abc.PathEntryFinder.find_loader()` generates an `ImportWarning`, indicating a shift in best practices within the import framework.
---

ning "ImportWarning") as [`importlib.abc.MetaPathFinder.find_spec()`](https://docs.python.org/3/library/importlib.html#importlib.abc.MetaPathFinder.find_spec "importlib.abc.MetaPathFinder.find_spec") and [`importlib.abc.PathEntryFinder.find_spec()`](https://docs.python.org/3/library/importlib.html#importlib.abc.PathEntryFinder.find_spec "importlib.abc.PathEntryFinder.find_spec") are preferred, respectively. You can use [`importlib.util.spec_from_loader()`](https://docs.python.org/3/library/importlib.html#importlib.util.spec_from_loader "importlib.util.spec_from_loader") to help in porting. (Contributed by Brett Cannon in [bpo-42134](https://bugs.python.org/issue?@action=redirect&bpo=42134).)
  * The use of `importlib.abc.PathEntryFinder.find_loader()` by the import system now triggers an [`ImportWarning`](https://docs.python.org/3/library/exceptions.html#ImportWarning "ImportWarning") as [`importlib.abc.PathEntryFinder.find_spec()`](https://docs.python.org/3/library/importlib.html#importlib.abc.PathEntryFinder.find_spec "importlib.abc.PathEntryFinder.find_spec") is preferred. You can use [`importlib.util.spec_from_loader()`](https://docs.python.org/3/library/importlib.html#importlib.util.spec_from_loader "importlib.util.spec_from_loader") to help in porting. (Contributed by Brett Cannon in [bpo-43672](https://bugs.python.org/issue?@action=redirect&bpo=43672).)
  * The various implementations of `importlib.abc.MetaPathFinder.find_module()` ( `importlib.machinery.BuiltinImporter.find_module()`, `importlib.machinery.FrozenImporter.find_module()`, `importlib.machinery.WindowsRegistryFinder.find_module()`, `importlib.machinery.PathFinder.find_module()`, `importlib.abc.MetaPathFinder.find_module()` ), `importlib.abc.PathEntryFinder.find_module()` ( `importlib.machinery.FileFinder.find_module()` ), and `importlib.abc.PathEntryFinder.find_loader()` ( `importlib.machinery.FileFinder.find_loader()` ) now raise [`DeprecationWarning`](https://docs.python.org/3/library/exceptions.html#DeprecationWarning "DeprecationWarning") and are slated for removal in Python 3.12 (previously they were documented as deprecated in Python 3.4). (Contributed by Brett Cannon in [bpo-42135](https://bugs.python.org/issue?@action=redirect&bpo=42135).)
  * `importlib.abc.Finder` is deprecated (including its sole method, `find_module()`). Both [`importlib.abc.MetaPathFinder`](https://docs.python.org/3/library/importlib.html#importlib.abc.MetaPathFinder "importlib.abc.MetaPathFinder") and [`importlib.abc.PathEntryFinder`](https://docs.python.org/3/library/importlib.html#importlib.abc.PathEntryFinder "importlib.abc.PathEntryFinder") no longer inherit from the class. Users should inherit from one of these two classes as appropriate instead. (Contributed by Brett Cannon in [bpo-42135](https://bugs.python.org/issue?@action=redirect&bpo=42135).)
  * The deprecations of `imp`, `importlib.find_loader()`, `importlib.util.set_package_wrapper()`, `importlib.util.set_loader_wrapper()`, `importlib.util.module_for_loader()`, `pkgutil.ImpImporter`, and `pkgutil.ImpLoader` have all been updated to list Python 3.12 as the slated version of removal (they began raising [`DeprecationWarning`](https://docs.python.org/3/library/exceptions.html#DeprecationWarning "DeprecationWarning") in previous versions of Python). (Contributed by Brett Cannon in [bpo-43720](https://bugs.python.org/issue?@action=redirect&bpo=43720).)
  * The import system now uses the `__spec__` attribute on modules before falling back on `module_repr()` for a moduleâ€™s `__repr__()` method. Removal of the use of `module_repr()` is scheduled for Python 3.12. (Contributed by Brett Cannon in [bpo-42137](https://bugs.python.org/issue?@action=redirect&bpo=42137).)
  * `importlib.abc.Loader.module_repr()`, `importlib.machinery.FrozenLoader.module_repr()`, and `importlib.machinery.BuiltinLoader.module_repr()` are deprecated and slated for removal in Python 3.12. (Contributed by Brett Cannon in [bpo-42136](https://bugs.python.org/issue?@action=redirect&bpo=42136).)
  * `sqlite3.OptimizedUnicode` has been undocumented and obsolete since Python 3.3, when it was made an alias to [`str`](https://docs.python.org/3/library/stdtypes.html#str "str"). It is now deprecated, scheduled for removal in Python 3.12. (Contributed by Erlend E. Aasland in [bpo-42264](https://bugs.python.org/issue?@action=redirect&bpo=42264).)
  * The undocumented built-in function `sqlite3.enable_shared_cache` is now deprecated, scheduled for removal in Python 3.12. Its use is strongly discouraged by the SQLite3 documentation. See [the SQLite3 docs](https://sqlite.org/c3ref/enable_shared_cache.html) for more details. If a shared cache must be used, open the database in URI mode using the `cache=shared` query parameter. (Contributed by Erlend E.