Title: Python 3.3 Release Notes - Webbrowser and ElementTree Updates
URL: https://docs.python.org/3/whatsnew/3.3.html
Summary: The `webbrowser` module in Python 3.3 adds support for additional browsers, including various versions of Google Chrome and generic launchers like `xdg-open` and `gvfs-open`. Contributions to these updates were made by Arnaud Calmettes and Matthias Klose. Further enhancements are noted for the `xml.etree.ElementTree` module.
---

```

([bpo-1673007](https://bugs.python.org/issue?@action=redirect&bpo=1673007))
### webbrowser[¶](https://docs.python.org/3/whatsnew/3.3.html#webbrowser "Link to this heading")
The [`webbrowser`](https://docs.python.org/3/library/webbrowser.html#module-webbrowser "webbrowser: Easy-to-use controller for web browsers.") module supports more “browsers”: Google Chrome (named **chrome** , **chromium** , **chrome-browser** or **chromium-browser** depending on the version and operating system), and the generic launchers **xdg-open** , from the FreeDesktop.org project, and **gvfs-open** , which is the default URI handler for GNOME 3. (The former contributed by Arnaud Calmettes in [bpo-13620](https://bugs.python.org/issue?@action=redirect&bpo=13620), the latter by Matthias Klose in [bpo-14493](https://bugs.python.org/issue?@action=redirect&bpo=14493).)
### xml.etree.ElementTree[¶](https://docs.python.org/3/whatsnew/3.3.html#xml-etree-elementtree "Link to this heading")
The [`xml.etree.ElementTree`](https://docs.python.org/3/library/xml.etree.elementtree.html#module-xml.etree.ElementTree "xml.etree.ElementTree: Implementation of the ElementTree API.") module now imports its C accelerator by default; there is no longer a need to explicitly import `xml.etree.cElementTree` (this module stays for backwards compatibility, but is now deprecated). In addition, the `iter` family of methods of [`Element`](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element "xml.etree.ElementTree.Element") has been optimized (rewritten in C). The module’s documentation has also been greatly improved with added examples and a more detailed reference.
### zlib[¶](https://docs.python.org/3/whatsnew/3.3.html#zlib "Link to this heading")
New attribute [`zlib.Decompress.eof`](https://docs.python.org/3/library/zlib.html#zlib.Decompress.eof "zlib.Decompress.eof") makes it possible to distinguish between a properly formed compressed stream and an incomplete or truncated one. (Contributed by Nadeem Vawda in [bpo-12646](https://bugs.python.org/issue?@action=redirect&bpo=12646).)
New attribute [`zlib.ZLIB_RUNTIME_VERSION`](https://docs.python.org/3/library/zlib.html#zlib.ZLIB_RUNTIME_VERSION "zlib.ZLIB_RUNTIME_VERSION") reports the version string of the underlying `zlib` library that is loaded at runtime. (Contributed by Torsten Landschoff in [bpo-12306](https://bugs.python.org/issue?@action=redirect&bpo=12306).)
## Optimizations[¶](https://docs.python.org/3/whatsnew/3.3.html#optimizations "Link to this heading")
Major performance enhancements have been added:
  * Thanks to [**PEP 393**](https://peps.python.org/pep-0393/), some operations on Unicode strings have been optimized:
    * the memory footprint is divided by 2 to 4 depending on the text
    * encode an ASCII string to UTF-8 doesn’t need to encode characters anymore, the UTF-8 representation is shared with the ASCII representation
    * the UTF-8 encoder has been optimized
    * repeating a single ASCII letter and getting a substring of an ASCII string is 4 times faster
  * UTF-8 is now 2x to 4x faster. UTF-16 encoding is now up to 10x faster.
(Contributed by Serhiy Storchaka, [bpo-14624](https://bugs.python.org/issue?@action=redirect&bpo=14624), [bpo-14738](https://bugs.python.org/issue?@action=redirect&bpo=14738) and [bpo-15026](https://bugs.python.org/issue?@action=redirect&bpo=15026).)