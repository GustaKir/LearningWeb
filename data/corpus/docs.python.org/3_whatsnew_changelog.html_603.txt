Title: Library Updates in Python
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section outlines various improvements and bug fixes in the Python library, including enhancements to XML parsing, random number generation, and type hinting. Key changes include fixing a crash related to XML parsers, enabling `random.seed()` to accept bytes, improving `typing.get_type_hints`, and resolving exception handling issues in the ElementTree C accelerator module.
---

### Library[¶](https://docs.python.org/3/whatsnew/changelog.html#id562 "Link to this heading")
  * [bpo-31499](https://bugs.python.org/issue?@action=redirect&bpo=31499): xml.etree: Fix a crash when a parser is part of a reference cycle.
  * [bpo-31482](https://bugs.python.org/issue?@action=redirect&bpo=31482): `random.seed()` now works with bytes in version=1
  * [bpo-28556](https://bugs.python.org/issue?@action=redirect&bpo=28556): typing.get_type_hints now finds the right globalns for classes and modules by default (when no `globalns` was specified by the caller).
  * [bpo-28556](https://bugs.python.org/issue?@action=redirect&bpo=28556): Speed improvements to the `typing` module. Original PRs by Ivan Levkivskyi and Mitar.
  * [bpo-31544](https://bugs.python.org/issue?@action=redirect&bpo=31544): The C accelerator module of ElementTree ignored exceptions raised when looking up TreeBuilder target methods in XMLParser().
  * [bpo-31234](https://bugs.python.org/issue?@action=redirect&bpo=31234): socket.create_connection() now fixes manually a reference cycle: clear the variable storing the last exception on success.
  * [bpo-31457](https://bugs.python.org/issue?@action=redirect&bpo=31457): LoggerAdapter objects can now be nested.
  * [bpo-31431](https://bugs.python.org/issue?@action=redirect&bpo=31431): SSLContext.check_hostname now automatically sets SSLContext.verify_mode to ssl.CERT_REQUIRED instead of failing with a ValueError.
  * [bpo-31233](https://bugs.python.org/issue?@action=redirect&bpo=31233): socketserver.ThreadingMixIn now keeps a list of non-daemonic threads to wait until all these threads complete in server_close().
  * [bpo-28638](https://bugs.python.org/issue?@action=redirect&bpo=28638): Changed the implementation strategy for collections.namedtuple() to substantially reduce the use of exec() in favor of precomputed methods. As a result, the _verbose_ parameter and __source_ attribute are no longer supported. The benefits include 1) having a smaller memory footprint for applications using multiple named tuples, 2) faster creation of the named tuple class (approx 4x to 6x depending on how it is measured), and 3) minor speed-ups for instance creation using __new__, _make, and _replace. (The primary patch contributor is Jelle Zijlstra with further improvements by INADA Naoki, Serhiy Storchaka, and Raymond Hettinger.)
  * [bpo-31400](https://bugs.python.org/issue?@action=redirect&bpo=31400): Improves SSL error handling to avoid losing error numbers.
  * [bpo-27629](https://bugs.python.org/issue?@action=redirect&bpo=27629): Make return types of SSLContext.wrap_bio() and SSLContext.wrap_socket() customizable.
  * [bpo-28958](https://bugs.python.org/issue?@action=redirect&bpo=28958): ssl.SSLContext() now uses OpenSSL error information when a context cannot be instantiated.
  * [bpo-28182](https://bugs.python.org/issue?@action=redirect&bpo=28182): The SSL module now raises SSLCertVerificationError when OpenSSL fails to verify the peer’s certificate. The exception contains more information about the error.
  * [bpo-27340](https://bugs.python.org/issue?@action=redirect&bpo=27340): SSLSocket.sendall() now uses memoryview to create slices of data. This fixes support for all bytes-like object. It is also more efficient and avoids costly copies.
  * [bpo-14191](https://bugs.python.org/issue?@action=redirect&bpo=14191): A new function `argparse.ArgumentParser.parse_intermixed_args` provides the ability to parse command lines where there user intermixes options and positional arguments.
  * [bpo-31178](https://bugs.python.org/issue?@action=redirect&bpo=31178): Fix string concatenation bug in rare error path in the subprocess module
  * [bpo-31350](https://bugs.python.org/issue?@action=redirect&bpo=31350): Micro-optimize `asyncio._get_running_loop()` to become up to 10% faster.
  * [bpo-31170](https://bugs.python.org/issue?@action=redirect&bpo=31170): expat: Update libexpat from 2.2.3 to 2.2.4. Fix copying of partial characters for UTF-8 input (libexpat bug 115): <https://github.com/libexpat/libexpat/issues/115>
  * [bpo-29136](https://bugs.python.org/issue?@action=redirect&bpo=29136): Add TLS 1.3 cipher suites and OP_NO_TLSv1_3.
  * [bpo-1198569](https://bugs.python.org/issue?@action=redirect&bpo=1198569): `string.Template` subclasses can optionally define `braceidpattern` if they want to specify different placeholder patterns inside and outside the braces. If None (the default) it falls back to `idpattern`.
  * [bpo-31326](https://bugs.python.org/issue?@action=redirect&bpo=31326): concurrent.futures.ProcessPoolExecutor.shutdown() now explicitly closes the call queue. Moreover, shutdown(wait=True) now also join the call queue thread, to prevent leaking a dangling thread.
  * [bpo-27144](https://bugs.python.org/issue?@action=redirect&bpo=27144): The `map()` and `as_completed()` iterators in `concurrent.futures` now avoid keeping a reference to yielded objects.
  * [bpo-31281](https://bugs.python.org/issue?