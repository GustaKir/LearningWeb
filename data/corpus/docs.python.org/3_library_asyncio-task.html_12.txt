Title: Asyncio Task Introspection
URL: https://docs.python.org/3/library/asyncio-task.html
Summary: This section discusses asyncio's introspection functions, specifically `asyncio.current_task()` and `asyncio.all_tasks()`. It notes the requirement for an explicit `_loop_` argument, and references the version introductions of these functions. The `current_task` function returns the currently running Task instance or None if no task is active.
---

```

See the [concurrency and multithreading](https://docs.python.org/3/library/asyncio-dev.html#asyncio-multithreading) section of the documentation.
Unlike other asyncio functions this function requires the _loop_ argument to be passed explicitly.
Added in version 3.5.1.
## [Introspection](https://docs.python.org/3/library/asyncio-task.html#id15)[¶](https://docs.python.org/3/library/asyncio-task.html#introspection "Link to this heading") 

asyncio.current_task(_loop =None_)[¶](https://docs.python.org/3/library/asyncio-task.html#asyncio.current_task "Link to this definition")
    
Return the currently running [`Task`](https://docs.python.org/3/library/asyncio-task.html#asyncio.Task "asyncio.Task") instance, or `None` if no task is running.
If _loop_ is `None` [`get_running_loop()`](https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.get_running_loop "asyncio.get_running_loop") is used to get the current loop.
Added in version 3.7. 

asyncio.all_tasks(_loop =None_)[¶](https://docs.python.org/3/library/asyncio-task.html#asyncio.all_tasks "Link to this definition")
    
Return a set of not yet finished [`Task`](https://docs.python.org/3/library/asyncio-task.html#asyncio.Task "asyncio.Task") objects run by the loop.
If _loop_ is `None`, [`get_running_loop()`](https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.get_running_loop "asyncio.get_running_loop") is used for getting current loop.
Added in version 3.7. 

asyncio.iscoroutine(_obj_)[¶](https://docs.python.org/3/library/asyncio-task.html#asyncio.iscoroutine "Link to this definition")
    
Return `True` if _obj_ is a coroutine object.
Added in version 3.4.
## [Task Object](https://docs.python.org/3/library/asyncio-task.html#id16)[¶](https://docs.python.org/3/library/asyncio-task.html#task-object "Link to this heading")