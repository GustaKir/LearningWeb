Title: Changelog: Test Fixes and Improvements
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section lists improvements and fixes to Python tests, including the resolution of child process leaks in concurrent futures tests, stopping resource tracker processes upon test completion, and replacing hardcoded timeout constants with new constants from the test.support module.
---

### Tests[¶](https://docs.python.org/3/whatsnew/changelog.html#id418 "Link to this heading")
  * [bpo-38546](https://bugs.python.org/issue?@action=redirect&bpo=38546): Fix test_ressources_gced_in_workers() of test_concurrent_futures: explicitly stop the manager to prevent leaking a child process running in the background after the test completes.
  * [bpo-38546](https://bugs.python.org/issue?@action=redirect&bpo=38546): Multiprocessing and concurrent.futures tests now stop the resource tracker process when tests complete.
  * [bpo-38614](https://bugs.python.org/issue?@action=redirect&bpo=38614): Replace hardcoded timeout constants in tests with new [`test.support`](https://docs.python.org/3/library/test.html#module-test.support "test.support: Support for Python's regression test suite.") constants: [`LOOPBACK_TIMEOUT`](https://docs.python.org/3/library/test.html#test.support.LOOPBACK_TIMEOUT "test.support.LOOPBACK_TIMEOUT"), [`INTERNET_TIMEOUT`](https://docs.python.org/3/library/test.html#test.support.INTERNET_TIMEOUT "test.support.INTERNET_TIMEOUT"), [`SHORT_TIMEOUT`](https://docs.python.org/3/library/test.html#test.support.SHORT_TIMEOUT "test.support.SHORT_TIMEOUT") and [`LONG_TIMEOUT`](https://docs.python.org/3/library/test.html#test.support.LONG_TIMEOUT "test.support.LONG_TIMEOUT"). It becomes easier to adjust these four timeout constants for all tests at once, rather than having to adjust every single test file.
  * [bpo-38547](https://bugs.python.org/issue?@action=redirect&bpo=38547): Fix test_pty: if the process is the session leader, closing the master file descriptor raises a SIGHUP signal: simply ignore SIGHUP when running the tests.
  * [bpo-38992](https://bugs.python.org/issue?@action=redirect&bpo=38992): Fix a test for [`math.fsum()`](https://docs.python.org/3/library/math.html#math.fsum "math.fsum") that was failing due to constant folding.
  * [bpo-38991](https://bugs.python.org/issue?@action=redirect&bpo=38991): [`test.support`](https://docs.python.org/3/library/test.html#module-test.support "test.support: Support for Python's regression test suite."): `run_python_until_end()`, `assert_python_ok()` and `assert_python_failure()` functions no longer strip whitespaces from stderr. Remove `test.support.strip_python_stderr()` function.
  * [bpo-38965](https://bugs.python.org/issue?@action=redirect&bpo=38965): Fix test_faulthandler on GCC 10. Use the “volatile” keyword in `faulthandler._stack_overflow()` to prevent tail call optimization on any compiler, rather than relying on compiler specific pragma.
  * [bpo-38875](https://bugs.python.org/issue?@action=redirect&bpo=38875): test_capi: trashcan tests now require the test “cpu” resource.
  * [bpo-38841](https://bugs.python.org/issue?@action=redirect&bpo=38841): Skip asyncio test_create_datagram_endpoint_existing_sock_unix on platforms lacking a functional bind() for named unix domain sockets.
  * [bpo-38692](https://bugs.python.org/issue?@action=redirect&bpo=38692): Skip the test_posix.test_pidfd_open() test if `os.pidfd_open()` fails with a [`PermissionError`](https://docs.python.org/3/library/exceptions.html#PermissionError "PermissionError"). This situation can happen in a Linux sandbox using a syscall whitelist which doesn’t allow the `pidfd_open()` syscall yet.
  * [bpo-38839](https://bugs.python.org/issue?@action=redirect&bpo=38839): Fix some unused functions in tests. Patch by Adam Johnson.
  * [bpo-38669](https://bugs.python.org/issue?@action=redirect&bpo=38669): Raise [`TypeError`](https://docs.python.org/3/library/exceptions.html#TypeError "TypeError") when passing target as a string with [`unittest.mock.patch.object()`](https://docs.python.org/3/library/unittest.mock.html#unittest.mock.patch.object "unittest.mock.patch.object").
  * [bpo-37957](https://bugs.python.org/issue?@action=redirect&bpo=37957): test.regrtest now can receive a list of test patterns to ignore (using the -i/–ignore argument) or a file with a list of patterns to ignore (using the –ignore-file argument). Patch by Pablo Galindo.


### Build[¶](https://docs.python.org/3/whatsnew/changelog.html#id419 "Link to this heading")
  * [bpo-37404](https://bugs.python.org/issue?@action=redirect&bpo=37404): [`asyncio`](https://docs.python.org/3/library/asyncio.html#module-asyncio "asyncio: Asynchronous I/O.") now raises [`TypeError`](https://docs.python.org/3/library/exceptions.html#TypeError "TypeError") when calling incompatible methods with an [`ssl.SSLSocket`](https://docs.python.org/3/library/ssl.html#ssl.SSLSocket "ssl.SSLSocket") socket. Patch by Ido Michael.
  * [bpo-36500](https://bugs.python.org/issue?@action=redirect&bpo=36500): Added an optional “regen” project to the Visual Studio solution that will regenerate all grammar, tokens, and opcodes.