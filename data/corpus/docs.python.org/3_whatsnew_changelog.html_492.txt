Title: Python 3 Changelog: Notable Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This document highlights several changes in Python 3, including improvements related to shared memory tracking, updates to the sqlite3 module's Cache and Statement objects, adjustments in the 'shutil.copystat()' function for handling file attributes and permissions, and the introduction of the new 'sys.unraisablehook()' function for managing unraisable exceptions.
---

Other than semaphores, resource_tracker also tracks shared_memory segments.
  * [bpo-30262](https://bugs.python.org/issue?@action=redirect&bpo=30262): The `Cache` and `Statement` objects of the [`sqlite3`](https://docs.python.org/3/library/sqlite3.html#module-sqlite3 "sqlite3: A DB-API 2.0 implementation using SQLite 3.x.") module are not exposed to the user. Patch by Aviv Palivoda.
  * [bpo-24538](https://bugs.python.org/issue?@action=redirect&bpo=24538): In `shutil.copystat()`, first copy extended file attributes and then file permissions, since extended attributes can only be set on the destination while it is still writeable.
  * [bpo-36829](https://bugs.python.org/issue?@action=redirect&bpo=36829): Add new [`sys.unraisablehook()`](https://docs.python.org/3/library/sys.html#sys.unraisablehook "sys.unraisablehook") function which can be overridden to control how “unraisable exceptions” are handled. It is called when an exception has occurred but there is no way for Python to handle it. For example, when a destructor raises an exception or during garbage collection ([`gc.collect()`](https://docs.python.org/3/library/gc.html#gc.collect "gc.collect")).
  * [bpo-36832](https://bugs.python.org/issue?@action=redirect&bpo=36832): Introducing `zipfile.Path`, a pathlib-compatible wrapper for traversing zip files.
  * [bpo-36814](https://bugs.python.org/issue?@action=redirect&bpo=36814): Fix an issue where os.posix_spawnp() would incorrectly raise a TypeError when file_actions is None.
  * [bpo-33110](https://bugs.python.org/issue?@action=redirect&bpo=33110): Handle exceptions raised by functions added by concurrent.futures add_done_callback correctly when the Future has already completed.
  * [bpo-26903](https://bugs.python.org/issue?@action=redirect&bpo=26903): Limit `max_workers` in `ProcessPoolExecutor` to 61 to work around a WaitForMultipleObjects limitation.
  * [bpo-36813](https://bugs.python.org/issue?@action=redirect&bpo=36813): Fix [`QueueListener`](https://docs.python.org/3/library/logging.handlers.html#logging.handlers.QueueListener "logging.handlers.QueueListener") to call `queue.task_done()` upon stopping. Patch by Bar Harel.
  * [bpo-36806](https://bugs.python.org/issue?@action=redirect&bpo=36806): Forbid creation of asyncio stream objects like StreamReader, StreamWriter, Process, and their protocols outside of asyncio package.
  * [bpo-36802](https://bugs.python.org/issue?@action=redirect&bpo=36802): Provide both sync and async calls for StreamWriter.write() and StreamWriter.close()
  * [bpo-36801](https://bugs.python.org/issue?@action=redirect&bpo=36801): Properly handle SSL connection closing in asyncio StreamWriter.drain() call.
  * [bpo-36785](https://bugs.python.org/issue?@action=redirect&bpo=36785): Implement PEP 574 (pickle protocol 5 with out-of-band buffers).
  * [bpo-36772](https://bugs.python.org/issue?@action=redirect&bpo=36772): functools.lru_cache() can now be used as a straight decorator in addition to its existing usage as a function that returns a decorator.
  * [bpo-6584](https://bugs.python.org/issue?@action=redirect&bpo=6584): Add a [`BadGzipFile`](https://docs.python.org/3/library/gzip.html#gzip.BadGzipFile "gzip.BadGzipFile") exception to the [`gzip`](https://docs.python.org/3/library/gzip.html#module-gzip "gzip: Interfaces for gzip compression and decompression using file objects.") module.
  * [bpo-36748](https://bugs.python.org/issue?@action=redirect&bpo=36748): Optimized write buffering in C implementation of `TextIOWrapper`. Writing ASCII string to `TextIOWrapper` with ascii, latin1, or utf-8 encoding is about 20% faster. Patch by Inada Naoki.
  * [bpo-8138](https://bugs.python.org/issue?@action=redirect&bpo=8138): Don’t mark `wsgiref.simple_server.SimpleServer` as multi-threaded since `wsgiref.simple_server.WSGIServer` is single-threaded.
  * [bpo-22640](https://bugs.python.org/issue?@action=redirect&bpo=22640): [`py_compile.compile()`](https://docs.python.org/3/library/py_compile.html#py_compile.compile "py_compile.compile") now supports silent mode. Patch by Joannah Nanjekye
  * [bpo-29183](https://bugs.python.org/issue?@action=redirect&bpo=29183): Fix double exceptions in [`wsgiref.handlers.BaseHandler`](https://docs.python.org/3/library/wsgiref.html#wsgiref.handlers.BaseHandler "wsgiref.handlers.BaseHandler") by calling its `close()` method only when no exception is raised.
  * [bpo-36548](https://bugs.python.org/issue?@action=redirect&bpo=36548): Improved the repr of regular expression flags.
  * [bpo-36542](https://bugs.python.org/issue?@action=redirect&bpo=36542): The signature of Python functions can now be overridden by specifying the `__text_signature__` attribute.
  * [bpo-36533](https://bugs.python.org/issue?@action=redirect&bpo=36533): Reinitialize logging.Handler locks in forked child processes instead of attempting to acquire them all in the parent before forking only to be released in the child process.