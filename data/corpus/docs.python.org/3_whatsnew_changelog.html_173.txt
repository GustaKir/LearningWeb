Title: Python 3 Change Log Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section lists recent updates including enhancements to `pdb` allowing leading whitespace, improvements to `urllib.parse.unsplit()` for Apple service URLs, modified behavior of `socket.getnameinfo()` regarding the GIL, and the introduction of `importlib.util.allowing_all_extensions()` as a context manager.
---

lasses.asdict") for the common case where _dict_factory_ is `dict`. Patch by David C Ellis.
  * [gh-104301](https://github.com/python/cpython/issues/104301): Allow leading whitespace in disambiguated statements in [`pdb`](https://docs.python.org/3/library/pdb.html#module-pdb "pdb: The Python debugger for interactive interpreters.").
  * [gh-104139](https://github.com/python/cpython/issues/104139): Teach `urllib.parse.unsplit()` to retain the `"//"` when assembling `itms-services://?action=generate-bugs` style [Apple Platform Deployment](https://support.apple.com/en-gb/guide/deployment/depce7cefc4d/web) URLs.
  * [gh-104307](https://github.com/python/cpython/issues/104307): [`socket.getnameinfo()`](https://docs.python.org/3/library/socket.html#socket.getnameinfo "socket.getnameinfo") now releases the GIL while contacting the DNS server
  * [gh-104310](https://github.com/python/cpython/issues/104310): Users may now use `importlib.util.allowing_all_extensions()` (a context manager) to temporarily disable the strict compatibility checks for importing extension modules in subinterpreters.
  * [gh-87695](https://github.com/python/cpython/issues/87695): Fix issue where [`pathlib.Path.glob()`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.glob "pathlib.Path.glob") raised [`OSError`](https://docs.python.org/3/library/exceptions.html#OSError "OSError") when it encountered a symlink to an overly long path.
  * [gh-104265](https://github.com/python/cpython/issues/104265): Prevent possible crash by disallowing instantiation of the `_csv.Reader` and `_csv.Writer` types. The regression was introduced in 3.10.0a4 with PR 23224 ([bpo-14935](https://bugs.python.org/issue?@action=redirect&bpo=14935)). Patch by Radislav Chugunov.
  * [gh-102613](https://github.com/python/cpython/issues/102613): Improve performance of [`pathlib.Path.glob()`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.glob "pathlib.Path.glob") when expanding recursive wildcards (”`**`”) by merging adjacent wildcards and de-duplicating results only when necessary.
  * [gh-65772](https://github.com/python/cpython/issues/65772): Remove unneeded comments and code in turtle.py.
  * [gh-90208](https://github.com/python/cpython/issues/90208): Fixed issue where [`pathlib.Path.glob()`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.glob "pathlib.Path.glob") returned incomplete results when it encountered a [`PermissionError`](https://docs.python.org/3/library/exceptions.html#PermissionError "PermissionError"). This method now suppresses all [`OSError`](https://docs.python.org/3/library/exceptions.html#OSError "OSError") exceptions, except those raised from calling [`is_dir()`](https://docs.python.org/3/library/pathlib.html#pathlib.Path.is_dir "pathlib.Path.is_dir") on the top-level path.
  * [gh-104144](https://github.com/python/cpython/issues/104144): Optimize [`asyncio.TaskGroup`](https://docs.python.org/3/library/asyncio-task.html#asyncio.TaskGroup "asyncio.TaskGroup") when using [`asyncio.eager_task_factory()`](https://docs.python.org/3/library/asyncio-task.html#asyncio.eager_task_factory "asyncio.eager_task_factory"). Skip scheduling a done callback if a TaskGroup task completes eagerly.
  * [gh-104144](https://github.com/python/cpython/issues/104144): Optimize [`asyncio.gather()`](https://docs.python.org/3/library/asyncio-task.html#asyncio.gather "asyncio.gather") when using [`asyncio.eager_task_factory()`](https://docs.python.org/3/library/asyncio-task.html#asyncio.eager_task_factory "asyncio.eager_task_factory") to complete eagerly if all fututres completed eagerly.