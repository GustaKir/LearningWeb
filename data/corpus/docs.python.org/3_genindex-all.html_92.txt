Title: Python Standard Library Method and Error Index
URL: https://docs.python.org/3/genindex-all.html
Summary: This document provides an index of various methods, specifically from the `smtplib` module, and error constants from the `errno` module in Python. It lists methods like `ehlo` and `ehlo_or_helo_if_needed`, as well as error constants such as `EHOSTDOWN`, `EHOSTUNREACH`, and others.
---

o() (smtplib.SMTP method)](https://docs.python.org/3/library/smtplib.html#smtplib.SMTP.ehlo)
  * [ehlo_or_helo_if_needed() (smtplib.SMTP method)](https://docs.python.org/3/library/smtplib.html#smtplib.SMTP.ehlo_or_helo_if_needed)
  * [EHOSTDOWN (in module errno)](https://docs.python.org/3/library/errno.html#errno.EHOSTDOWN)
  * [EHOSTUNREACH (in module errno)](https://docs.python.org/3/library/errno.html#errno.EHOSTUNREACH)
  * [EIDRM (in module errno)](https://docs.python.org/3/library/errno.html#errno.EIDRM)
  * [EILSEQ (in module errno)](https://docs.python.org/3/library/errno.html#errno.EILSEQ)
  * [EINPROGRESS (in module errno)](https://docs.python.org/3/library/errno.html#errno.EINPROGRESS)
  * [EINTR (in module errno)](https://docs.python.org/3/library/errno.html#errno.EINTR)
  * [EINVAL (in module errno)](https://docs.python.org/3/library/errno.html#errno.EINVAL)
  * [EIO (in module errno)](https://docs.python.org/3/library/errno.html#errno.EIO)
  * [EISCONN (in module errno)](https://docs.python.org/3/library/errno.html#errno.EISCONN)
  * [EISDIR (in module errno)](https://docs.python.org/3/library/errno.html#errno.EISDIR)
  * [EISNAM (in module errno)](https://docs.python.org/3/library/errno.html#errno.EISNAM)
  * [EJECT (enum.FlagBoundary attribute)](https://docs.python.org/3/library/enum.html#enum.FlagBoundary.EJECT)
  * [EKEYEXPIRED (in module errno)](https://docs.python.org/3/library/errno.html#errno.EKEYEXPIRED)
  * [EKEYREJECTED (in module errno)](https://docs.python.org/3/library/errno.html#errno.EKEYREJECTED)
  * [EKEYREVOKED (in module errno)](https://docs.python.org/3/library/errno.html#errno.EKEYREVOKED)
  * [EL2HLT (in module errno)](https://docs.python.org/3/library/errno.html#errno.EL2HLT)
  * [EL2NSYNC (in module errno)](https://docs.python.org/3/library/errno.html#errno.EL2NSYNC)
  * [EL3HLT (in module errno)](https://docs.python.org/3/library/errno.html#errno.EL3HLT)
  * [EL3RST (in module errno)](https://docs.python.org/3/library/errno.html#errno.EL3RST)
  * [Element (class in xml.etree.ElementTree)](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element)
  * [element_create() (tkinter.ttk.Style method)](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Style.element_create)
  * [element_names() (tkinter.ttk.Style method)](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Style.element_names)
  * [element_options() (tkinter.ttk.Style method)](https://docs.python.org/3/library/tkinter.ttk.html#tkinter.ttk.Style.element_options)
  * [ElementDeclHandler() (xml.parsers.expat.xmlparser method)](https://docs.python.org/3/library/pyexpat.html#xml.parsers.expat.xmlparser.ElementDeclHandler)
  * [elements() (collections.Counter method)](https://docs.python.org/3/library/collections.html#collections.Counter.elements)
  * [ElementTree (class in xml.etree.ElementTree)](https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.ElementTree)
  * [ELIBACC (in module errno)](https://docs.python.org/3/library/errno.html#errno.ELIBACC)
  * [ELIBBAD (in module errno)](https://docs.python.org/3/library/errno.html#errno.ELIBBAD)
  * [ELIBEXEC (in module errno)](https://docs.python.org/3/library/errno.html#errno.ELIBEXEC)
  * [ELIBMAX (in module errno)](https://docs.python.org/3/library/errno.html#errno.ELIBMAX)
  * [ELIBSCN (in module errno)](https://docs.python.org/3/library/errno.html#errno.ELIBSCN)
  * elif 
    * [keyword](https://docs.python.org/3/reference/compound_stmts.html#index-3)
  * Ellipsis 
    * [object](https://docs.python.org/3/reference/datamodel.html#index-8)
  * [Ellipsis (built-in variable)](https://docs.python.org/3/library/constants.html#Ellipsis)
  * [ELLIPSIS (in module doctest)](https://docs.python.org/3/library/doctest.html#doctest.ELLIPSIS)
    * [(in module token)](https://docs.python.org/3/library/token.html#token.ELLIPSIS)
  * [EllipsisType (in module types)](https://docs.python.org/3/library/types.html#types.EllipsisType)
  * [ELNRNG (in module errno)](https://docs.python.org/3/library/errno.html#errno.ELNRNG)
  * [ELOCKUNMAPPED (in module errno)](https://docs.python.org/3/library/errno.html#errno.ELOCKUNMAPPED)
  * [ELOOP (in module errno)](https://docs.python.org/3/library/errno.html#errno.ELOOP)
  * else 
    * [conditional expression](https://docs.python.org/3/reference/expressions.html#index-89)
    * [dangling](https://docs.python.org/3/reference/compound_stmts.html#index-2)
    * [keyword](https://docs.python.org/3/reference/compound_stmts.html#index-13), [[1]](https://docs.python.org/3/reference/compound_stmts.html#index-3), [[2]](https://docs.python.org/3/reference/compound_stmts.html#index-4), [[3]](https://docs.python.org/3/reference/compound_stmts.html#index-6), [[4]](https://docs.python.org/3/reference/compound_stmts.html#index-9), [[5]](https://docs.python.org/3/reference/simple_stmts.html#index-31)
  * [EM (in module curses.ascii)](https://docs.python.org/3/library/curs