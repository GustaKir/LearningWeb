Title: PyModule_NewObject Function
URL: https://docs.python.org/3/c-api/module.html
Summary: The PyModule_NewObject function returns a new module object with the specified name, setting its __name__ attribute accordingly, while initializing __doc__, __package__, and __loader__ attributes to None. This function is part of the Stable ABI since version 3.7.
---

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyModule_NewObject([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*name)[¶](https://docs.python.org/3/c-api/module.html#c.PyModule_NewObject "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable) since version 3.7._
Return a new module object with [`module.__name__`](https://docs.python.org/3/reference/datamodel.html#module.__name__ "module.__name__") set to _name_. The module’s `__name__`, [`__doc__`](https://docs.python.org/3/reference/datamodel.html#module.__doc__ "module.__doc__"), [`__package__`](https://docs.python.org/3/reference/datamodel.html#module.__package__ "module.__package__") and [`__loader__`](https://docs.python.org/3/reference/datamodel.html#module.__loader__ "module.__loader__") attributes are filled in (all but `__name__` are set to `None`). The caller is responsible for setting a [`__file__`](https://docs.python.org/3/reference/datamodel.html#module.__file__ "module.__file__") attribute.
Return `NULL` with an exception set on error.
Added in version 3.3.
Changed in version 3.4: [`__package__`](https://docs.python.org/3/reference/datamodel.html#module.__package__ "module.__package__") and [`__loader__`](https://docs.python.org/3/reference/datamodel.html#module.__loader__ "module.__loader__") are now set to `None`. 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyModule_New(constchar*name)[¶](https://docs.python.org/3/c-api/module.html#c.PyModule_New "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Similar to [`PyModule_NewObject()`](https://docs.python.org/3/c-api/module.html#c.PyModule_NewObject "PyModule_NewObject"), but the name is a UTF-8 encoded string instead of a Unicode object. 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyModule_GetDict([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*module)[¶](https://docs.python.org/3/c-api/module.html#c.PyModule_GetDict "Link to this definition")
    _Return value: Borrowed reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Return the dictionary object that implements _module_ ’s namespace; this object is the same as the [`__dict__`](https://docs.python.org/3/reference/datamodel.html#object.__dict__ "object.__dict__") attribute of the module object. If _module_ is not a module object (or a subtype of a module object), [`SystemError`](https://docs.python.org/3/library/exceptions.html#SystemError "SystemError") is raised and `NULL` is returned.
It is recommended extensions use other `PyModule_*` and `PyObject_*` functions rather than directly manipulate a module’s [`__dict__`](https://docs.python.org/3/reference/datamodel.html#object.__dict__ "object.__dict__"). 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyModule_GetNameObject([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*module)[¶](https://docs.python.org/3/c-api/module.html#c.PyModule_GetNameObject "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable) since version 3.7._
Return _module_ ’s [`__name__`](https://docs.python.org/3/reference/datamodel.html#module.__name__ "module.__name__") value. If the module does not provide one, or if it is not a string, [`SystemError`](https://docs.python.org/3/library/exceptions.html#SystemError "SystemError") is raised and `NULL` is returned.
Added in version 3.3. 

constchar*PyModule_GetName([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*module)[¶](https://docs.python.org/3/c-api/module.html#c.PyModule_GetName "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Similar to [`PyModule_GetNameObject()`](https://docs.python.org/3/c-api/module.html#c.PyModule_GetNameObject "PyModule_GetNameObject") but return the name encoded to `'utf-8'`. 

void*PyModule_GetState([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*module)[¶](https://docs.python.org/3/c-api/module.html#c.PyModule_GetState "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Return the “state” of the module, that is, a pointer to the block of memory allocated at module creation time, or `NULL`. See [`PyModuleDef.m_size`](https://docs.python.org/3/c-api/module.html#c.PyModuleDef.m_size "PyModuleDef.m_size").