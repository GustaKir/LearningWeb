Title: gettext: Binding Locales and Setting Global Domains
URL: https://docs.python.org/3/library/gettext.html
Summary: This section explains the functions `gettext.bindtextdomain` and `gettext.textdomain`. The `bindtextdomain` function binds a specified domain to a locale directory, while `textdomain` changes or queries the current global domain. It outlines how the `.mo` files are located based on the given language and environment variables.
---

gettext.bindtextdomain(_domain_ , _localedir =None_)[¶](https://docs.python.org/3/library/gettext.html#gettext.bindtextdomain "Link to this definition")
    
Bind the _domain_ to the locale directory _localedir_. More concretely, [`gettext`](https://docs.python.org/3/library/gettext.html#module-gettext "gettext: Multilingual internationalization services.") will look for binary `.mo` files for the given domain using the path (on Unix): `_localedir_/_language_/LC_MESSAGES/_domain_.mo`, where _language_ is searched for in the environment variables `LANGUAGE`, `LC_ALL`, `LC_MESSAGES`, and `LANG` respectively.
If _localedir_ is omitted or `None`, then the current binding for _domain_ is returned. [[1]](https://docs.python.org/3/library/gettext.html#id3) 

gettext.textdomain(_domain =None_)[¶](https://docs.python.org/3/library/gettext.html#gettext.textdomain "Link to this definition")
    
Change or query the current global domain. If _domain_ is `None`, then the current global domain is returned, otherwise the global domain is set to _domain_ , which is returned. 

gettext.gettext(_message_)[¶](https://docs.python.org/3/library/gettext.html#gettext.gettext "Link to this definition")
    
Return the localized translation of _message_ , based on the current global domain, language, and locale directory. This function is usually aliased as `_()` in the local namespace (see examples below). 

gettext.dgettext(_domain_ , _message_)[¶](https://docs.python.org/3/library/gettext.html#gettext.dgettext "Link to this definition")
    
Like [`gettext()`](https://docs.python.org/3/library/gettext.html#gettext.gettext "gettext.gettext"), but look the message up in the specified _domain_. 

gettext.ngettext(_singular_ , _plural_ , _n_)[¶](https://docs.python.org/3/library/gettext.html#gettext.ngettext "Link to this definition")
    
Like [`gettext()`](https://docs.python.org/3/library/gettext.html#gettext.gettext "gettext.gettext"), but consider plural forms. If a translation is found, apply the plural formula to _n_ , and return the resulting message (some languages have more than two plural forms). If no translation is found, return _singular_ if _n_ is 1; return _plural_ otherwise.
The Plural formula is taken from the catalog header. It is a C or Python expression that has a free variable _n_ ; the expression evaluates to the index of the plural in the catalog. See [the GNU gettext documentation](https://www.gnu.org/software/gettext/manual/gettext.html) for the precise syntax to be used in `.po` files and the formulas for a variety of languages. 

gettext.dngettext(_domain_ , _singular_ , _plural_ , _n_)[¶](https://docs.python.org/3/library/gettext.html#gettext.dngettext "Link to this definition")
    
Like [`ngettext()`](https://docs.python.org/3/library/gettext.html#gettext.ngettext "gettext.ngettext"), but look the message up in the specified _domain_. 

gettext.pgettext(_context_ , _message_)[¶](https://docs.python.org/3/library/gettext.html#gettext.pgettext "Link to this definition")


gettext.dpgettext(_domain_ , _context_ , _message_)[¶](https://docs.python.org/3/library/gettext.html#gettext.dpgettext "Link to this definition")


gettext.npgettext(_context_ , _singular_ , _plural_ , _n_)[¶](https://docs.python.org/3/library/gettext.html#gettext.npgettext "Link to this definition")


gettext.dnpgettext(_domain_ , _context_ , _singular_ , _plural_ , _n_)[¶](https://docs.python.org/3/library/gettext.html#gettext.dnpgettext "Link to this definition")
    
Similar to the corresponding functions without the `p` in the prefix (that is, [`gettext()`](https://docs.python.org/3/library/gettext.html#module-gettext "gettext: Multilingual internationalization services."), [`dgettext()`](https://docs.python.org/3/library/gettext.html#gettext.dgettext "gettext.dgettext"), [`ngettext()`](https://docs.python.org/3/library/gettext.html#gettext.ngettext "gettext.ngettext"), [`dngettext()`](https://docs.python.org/3/library/gettext.html#gettext.dngettext "gettext.dngettext")), but the translation is restricted to the given message _context_.
Added in version 3.8.
Note that GNU **gettext** also defines a `dcgettext()` method, but this was deemed not useful and so it is currently unimplemented.
Here’s an example of typical usage for this API:
```
importgettext
gettext.bindtextdomain('myapplication', '/path/to/my/language/directory')
gettext.textdomain('myapplication')
_ = gettext.gettext
# ...
print(_('This is a translatable string.'))