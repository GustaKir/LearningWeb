Title: Pending Removal in Python 3.14
URL: https://docs.python.org/3/whatsnew/3.13.html
Summary: This section details features and functions scheduled for removal in Python 3.14, including the `ma_version_tag` field in `PyDictObject`, the ability to create immutable types with mutable bases, and deprecated initialization functions such as `PySys_SetArgvEx()`, `PySys_SetArgv()`, and `Py_SetProgramName()`.
---

#### Pending Removal in Python 3.14[¶](https://docs.python.org/3/whatsnew/3.13.html#id8 "Link to this heading")
  * The `ma_version_tag` field in [`PyDictObject`](https://docs.python.org/3/c-api/dict.html#c.PyDictObject "PyDictObject") for extension modules ([**PEP 699**](https://peps.python.org/pep-0699/); [gh-101193](https://github.com/python/cpython/issues/101193)).
  * Creating [`immutable types`](https://docs.python.org/3/c-api/typeobj.html#c.Py_TPFLAGS_IMMUTABLETYPE "Py_TPFLAGS_IMMUTABLETYPE") with mutable bases ([gh-95388](https://github.com/python/cpython/issues/95388)).
  * Functions to configure Python’s initialization, deprecated in Python 3.11:
    * `PySys_SetArgvEx()`: Set [`PyConfig.argv`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.argv "PyConfig.argv") instead.
    * `PySys_SetArgv()`: Set [`PyConfig.argv`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.argv "PyConfig.argv") instead.
    * `Py_SetProgramName()`: Set [`PyConfig.program_name`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.program_name "PyConfig.program_name") instead.
    * `Py_SetPythonHome()`: Set [`PyConfig.home`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.home "PyConfig.home") instead.
The [`Py_InitializeFromConfig()`](https://docs.python.org/3/c-api/init.html#c.Py_InitializeFromConfig "Py_InitializeFromConfig") API should be used with [`PyConfig`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig "PyConfig") instead.
  * Global configuration variables:
    * [`Py_DebugFlag`](https://docs.python.org/3/c-api/init.html#c.Py_DebugFlag "Py_DebugFlag"): Use [`PyConfig.parser_debug`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.parser_debug "PyConfig.parser_debug") instead.
    * [`Py_VerboseFlag`](https://docs.python.org/3/c-api/init.html#c.Py_VerboseFlag "Py_VerboseFlag"): Use [`PyConfig.verbose`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.verbose "PyConfig.verbose") instead.
    * [`Py_QuietFlag`](https://docs.python.org/3/c-api/init.html#c.Py_QuietFlag "Py_QuietFlag"): Use [`PyConfig.quiet`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.quiet "PyConfig.quiet") instead.
    * [`Py_InteractiveFlag`](https://docs.python.org/3/c-api/init.html#c.Py_InteractiveFlag "Py_InteractiveFlag"): Use [`PyConfig.interactive`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.interactive "PyConfig.interactive") instead.
    * [`Py_InspectFlag`](https://docs.python.org/3/c-api/init.html#c.Py_InspectFlag "Py_InspectFlag"): Use [`PyConfig.inspect`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.inspect "PyConfig.inspect") instead.
    * [`Py_OptimizeFlag`](https://docs.python.org/3/c-api/init.html#c.Py_OptimizeFlag "Py_OptimizeFlag"): Use [`PyConfig.optimization_level`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.optimization_level "PyConfig.optimization_level") instead.
    * [`Py_NoSiteFlag`](https://docs.python.org/3/c-api/init.html#c.Py_NoSiteFlag "Py_NoSiteFlag"): Use [`PyConfig.site_import`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.site_import "PyConfig.site_import") instead.
    * [`Py_BytesWarningFlag`](https://docs.python.org/3/c-api/init.html#c.Py_BytesWarningFlag "Py_BytesWarningFlag"): Use [`PyConfig.bytes_warning`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.bytes_warning "PyConfig.bytes_warning") instead.
    * [`Py_FrozenFlag`](https://docs.python.org/3/c-api/init.html#c.Py_FrozenFlag "Py_FrozenFlag"): Use [`PyConfig.pathconfig_warnings`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.pathconfig_warnings "PyConfig.pathconfig_warnings") instead.
    * [`Py_IgnoreEnvironmentFlag`](https://docs.python.org/3/c-api/init.html#c.Py_IgnoreEnvironmentFlag "Py_IgnoreEnvironmentFlag"): Use [`PyConfig.use_environment`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.use_environment "PyConfig.use_environment") instead.
    * [`Py_DontWriteBytecodeFlag`](https://docs.python.org/3/c-api/init.html#c.Py_DontWriteBytecodeFlag "Py_DontWriteBytecodeFlag"): Use [`PyConfig.write_bytecode`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.write_bytecode "PyConfig.write_bytecode") instead.
    * [`Py_NoUserSiteDirectory`](https://docs.python.org/3/c-api/init.html#c.Py_NoUserSiteDirectory "Py_NoUserSiteDirectory"): Use [`PyConfig.user_site_directory`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.user_site_directory "PyConfig.user_site_directory") instead.
    * [`Py_UnbufferedStdioFlag`](https://docs.python.org/3/c-api/init.html#c.Py_UnbufferedStdioFlag "Py_UnbufferedStdioFlag"): Use [`PyConfig.buffered_stdio`](https://docs.python.org/3/c-api/init_config.html#c.PyConfig.buffered_stdio "PyConfig.buffered_stdio") instead.
    * [`Py_HashRandomizationFlag`](https://docs.python.org/3/c-api/init.html#c.Py_HashRandomizationFlag "Py_HashRandomizationFlag"): Use [`PyConfig.use_hash_seed`](https://docs.python.org/3/c-api/in