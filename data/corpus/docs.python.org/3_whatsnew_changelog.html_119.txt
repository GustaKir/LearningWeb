Title: Changes to the Python Execution Model
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: The ED frame state is now divided into `SUSPENDED` and `SUSPENDED_YIELD_FROM`, improving the `_PyGen_yf` function. The bytecode and micro-ops interpreters are merged, leading to changes in environment variables for micro-ops. Additional updates include speeding up `Traceback` object creation, allowing type comments in parentheses for `with` statements, and enhancements for sharing floating-point numbers.
---

ED frame state is now split into `SUSPENDED` and `SUSPENDED_YIELD_FROM`. This simplifies the code in `_PyGen_yf`.
  * [gh-111520](https://github.com/python/cpython/issues/111520): Merge the Tier 1 (bytecode) and Tier 2 (micro-ops) interpreters together, moving the Tier 2 interpreter loop and switch into `_PyEval_EvalFrameDefault()` in `Python/ceval.c`. The `Python/executor.c` file is gone. Also the `TIER_ONE` and `TIER_TWO` macros are now handled by the code generator.
**Beware!** This changes the environment variables to enable micro-ops and their debugging to `PYTHON_UOPS` and `PYTHON_LLTRACE`.
  * [gh-109181](https://github.com/python/cpython/issues/109181): Speed up `Traceback` object creation by lazily compute the line number. Patch by Pablo Galindo
  * [gh-111420](https://github.com/python/cpython/issues/111420): Allow type comments in parenthesized `with` statements
  * [gh-111438](https://github.com/python/cpython/issues/111438): Add support for sharing floats between interpreters using the cross-interpreter API. Patch by Anthony Shaw.
  * [gh-111435](https://github.com/python/cpython/issues/111435): Add support for sharing of `True` and `False` between interpreters using the cross-interpreter API. Patch by Anthony Shaw.
  * [gh-102388](https://github.com/python/cpython/issues/102388): Fix a bug where `iso2022_jp_3` and `iso2022_jp_2004` codecs read out of bounds
  * [gh-111366](https://github.com/python/cpython/issues/111366): Fix an issue in the [`codeop`](https://docs.python.org/3/library/codeop.html#module-codeop "codeop: Compile \(possibly incomplete\) Python code.") that was causing [`SyntaxError`](https://docs.python.org/3/library/exceptions.html#SyntaxError "SyntaxError") exceptions raised in the presence of invalid syntax to not contain precise error messages. Patch by Pablo Galindo
  * [gh-111380](https://github.com/python/cpython/issues/111380): Fix a bug that was causing [`SyntaxWarning`](https://docs.python.org/3/library/exceptions.html#SyntaxWarning "SyntaxWarning") to appear twice when parsing if invalid syntax is encountered later. Patch by Pablo galindo
  * [gh-111374](https://github.com/python/cpython/issues/111374): Added a new environment variable [`PYTHON_FROZEN_MODULES`](https://docs.python.org/3/using/cmdline.html#envvar-PYTHON_FROZEN_MODULES). It determines whether or not frozen modules are ignored by the import machinery, equivalent of the [`-X frozen_modules`](https://docs.python.org/3/using/cmdline.html#cmdoption-X) command-line option.
  * [gh-111354](https://github.com/python/cpython/issues/111354): Remove `oparg` from [`YIELD_VALUE`](https://docs.python.org/3/library/dis.html#opcode-YIELD_VALUE). Change `oparg` of [`RESUME`](https://docs.python.org/3/library/dis.html#opcode-RESUME) to include information about the except-depth. These changes make it possible to simplify the code in generator close.
  * [gh-94438](https://github.com/python/cpython/issues/94438): Fix a regression that prevented jumping across `is None` and `is not None` when debugging. Patch by Savannah Ostrowski.
  * [gh-67224](https://github.com/python/cpython/issues/67224): Show source lines in tracebacks when using the `-c` option when running Python. Patch by Pablo Galindo
  * [gh-111123](https://github.com/python/cpython/issues/111123): Fix a bug where a [`global`](https://docs.python.org/3/reference/simple_stmts.html#global) declaration in an [`except`](https://docs.python.org/3/reference/compound_stmts.html#except) block is rejected when the global is used in the [`else`](https://docs.python.org/3/reference/compound_stmts.html#else) block.
  * [gh-110938](https://github.com/python/cpython/issues/110938): Fix error messages for indented blocks with functions and classes with generic type parameters. Patch by Pablo Galindo
  * [gh-109214](https://github.com/python/cpython/issues/109214): Remove unnecessary instruction pointer updates before returning from frames.
  * [gh-110912](https://github.com/python/cpython/issues/110912): Correctly display the traceback for [`MemoryError`](https://docs.python.org/3/library/exceptions.html#MemoryError "MemoryError") exceptions using the [`traceback`](https://docs.python.org/3/library/traceback.html#module-traceback "traceback: Print or retrieve a stack traceback.") module.