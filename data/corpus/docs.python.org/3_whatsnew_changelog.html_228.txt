Title: Python 3 Change Log
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section outlines various bug fixes and feature removals in Python 3, including the elimination of the `--experimental-isolated-subinterpreters` option and improvements to the `__lltrace__` debug feature, memory management simplifications, and accuracy in line number reporting for backward jumps after `async for` loops.
---

This also now occurs if the unconditional jump is artificial, i.e., if it has no associated line number.
  * [gh-84694](https://github.com/python/cpython/issues/84694): The `--experimental-isolated-subinterpreters` configure option and `EXPERIMENTAL_ISOLATED_SUBINTERPRETERS` macro have been removed.
  * [gh-91924](https://github.com/python/cpython/issues/91924): Fix `__lltrace__` debug feature if the stdout encoding is not UTF-8. Patch by Victor Stinner.
  * [gh-93040](https://github.com/python/cpython/issues/93040): Wraps unused parameters in `Objects/obmalloc.c` with `Py_UNUSED`.
  * [gh-93143](https://github.com/python/cpython/issues/93143): Avoid `NULL` checks for uninitialized local variables by determining at compile time which variables must be initialized.
  * [gh-93061](https://github.com/python/cpython/issues/93061): Backward jumps after `async for` loops are no longer given dubious line numbers.
  * [gh-93065](https://github.com/python/cpython/issues/93065): Fix contextvars HAMT implementation to handle iteration over deep trees.
The bug was discovered and fixed by Eli Libman. See [MagicStack/immutables#84](https://github.com/MagicStack/immutables/issues/84) for more details.
  * [gh-93012](https://github.com/python/cpython/issues/93012): Added the new function [`PyType_FromMetaclass()`](https://docs.python.org/3/c-api/type.html#c.PyType_FromMetaclass "PyType_FromMetaclass"), which generalizes the existing [`PyType_FromModuleAndSpec()`](https://docs.python.org/3/c-api/type.html#c.PyType_FromModuleAndSpec "PyType_FromModuleAndSpec") using an additional metaclass argument. This is useful for language binding tools, where it can be used to intercept type-related operations like subclassing or static attribute access by specifying a metaclass with custom slots.
Importantly, [`PyType_FromMetaclass()`](https://docs.python.org/3/c-api/type.html#c.PyType_FromMetaclass "PyType_FromMetaclass") is available in the Limited API, which provides a path towards migrating more binding tools onto the Stable ABI.
  * [gh-93021](https://github.com/python/cpython/issues/93021): Fix the `__text_signature__` for `__get__()` methods implemented in C. Patch by Jelle Zijlstra.
  * [gh-89914](https://github.com/python/cpython/issues/89914): The operand of the `YIELD_VALUE` instruction is set to the stack depth. This is done to help frame handling on `yield` and may assist debuggers.
  * [gh-92955](https://github.com/python/cpython/issues/92955): Fix memory leak in code object’s lines and positions iterators as they were not finalized at exit. Patch by Kumar Aditya.
  * [gh-92930](https://github.com/python/cpython/issues/92930): Fixed a crash in `_pickle.c` from mutating collections during `__reduce__` or `persistent_id`.
  * [gh-90690](https://github.com/python/cpython/issues/90690): The PRECALL instruction has been removed. It offered only a small advantage for specialization and is not needed in the vast majority of cases.
  * [gh-92914](https://github.com/python/cpython/issues/92914): Always round the allocated size for lists up to the nearest even number.
  * [gh-92858](https://github.com/python/cpython/issues/92858): Improve error message for some suites with syntax error before ‘:’
  * [gh-90473](https://github.com/python/cpython/issues/90473): Decrease default recursion limit on WASI to address limited call stack size.
  * [gh-92804](https://github.com/python/cpython/issues/92804): Fix memory leak in `memoryview` iterator as it was not finalized at exit. Patch by Kumar Aditya.
  * [gh-92777](https://github.com/python/cpython/issues/92777): Specialize `LOAD_METHOD` for objects with lazy dictionaries.