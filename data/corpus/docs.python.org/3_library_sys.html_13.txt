Title: sys.getobjects Function
URL: https://docs.python.org/3/library/sys.html
Summary: The `sys.getobjects` function, available only if Python is built with the `--with-trace-refs` option, is used for debugging garbage collection issues. It returns a list of up to a specified limit of dynamically allocated Python objects, optionally filtered by type. However, the returned objects are not safe to use.
---

sys.getobjects(_limit_[, _type_])[¶](https://docs.python.org/3/library/sys.html#sys.getobjects "Link to this definition")
    
This function only exists if CPython was built using the specialized configure option [`--with-trace-refs`](https://docs.python.org/3/using/configure.html#cmdoption-with-trace-refs). It is intended only for debugging garbage-collection issues.
Return a list of up to _limit_ dynamically allocated Python objects. If _type_ is given, only objects of that exact type (not subtypes) are included.
Objects from the list are not safe to use. Specifically, the result will include objects from all interpreters that share their object allocator state (that is, ones created with [`PyInterpreterConfig.use_main_obmalloc`](https://docs.python.org/3/c-api/init.html#c.PyInterpreterConfig.use_main_obmalloc "PyInterpreterConfig.use_main_obmalloc") set to 1 or using [`Py_NewInterpreter()`](https://docs.python.org/3/c-api/init.html#c.Py_NewInterpreter "Py_NewInterpreter"), and the [main interpreter](https://docs.python.org/3/c-api/init.html#sub-interpreter-support)). Mixing objects from different interpreters may lead to crashes or other unexpected behavior.
**CPython implementation detail:** This function should be used for specialized purposes only. It is not guaranteed to exist in all implementations of Python.
Changed in version 3.13.1: The result may include objects from other interpreters. 

sys.getprofile()[¶](https://docs.python.org/3/library/sys.html#sys.getprofile "Link to this definition")
    
Get the profiler function as set by [`setprofile()`](https://docs.python.org/3/library/sys.html#sys.setprofile "sys.setprofile"). 

sys.gettrace()[¶](https://docs.python.org/3/library/sys.html#sys.gettrace "Link to this definition")
    
Get the trace function as set by [`settrace()`](https://docs.python.org/3/library/sys.html#sys.settrace "sys.settrace").
**CPython implementation detail:** The [`gettrace()`](https://docs.python.org/3/library/sys.html#sys.gettrace "sys.gettrace") function is intended only for implementing debuggers, profilers, coverage tools and the like. Its behavior is part of the implementation platform, rather than part of the language definition, and thus may not be available in all Python implementations. 

sys.getwindowsversion()[¶](https://docs.python.org/3/library/sys.html#sys.getwindowsversion "Link to this definition")
    
Return a named tuple describing the Windows version currently running. The named elements are _major_ , _minor_ , _build_ , _platform_ , _service_pack_ , _service_pack_minor_ , _service_pack_major_ , _suite_mask_ , _product_type_ and _platform_version_. _service_pack_ contains a string, _platform_version_ a 3-tuple and all other values are integers. The components can also be accessed by name, so `sys.getwindowsversion()[0]` is equivalent to `sys.getwindowsversion().major`. For compatibility with prior versions, only the first 5 elements are retrievable by indexing.
_platform_ will be `2` (VER_PLATFORM_WIN32_NT).
_product_type_ may be one of the following values:
Constant | Meaning  
---|---  
`1` (VER_NT_WORKSTATION) | The system is a workstation.  
`2` (VER_NT_DOMAIN_CONTROLLER) | The system is a domain controller.  
`3` (VER_NT_SERVER) | The system is a server, but not a domain controller.  
This function wraps the Win32 `GetVersionEx()` function; see the Microsoft documentation on `OSVERSIONINFOEX()` for more information about these fields.
_platform_version_ returns the major version, minor version and build number of the current operating system, rather than the version that is being emulated for the process. It is intended for use in logging rather than for feature detection.
Note
_platform_version_ derives the version from kernel32.dll which can be of a different version than the OS version. Please use [`platform`](https://docs.python.org/3/library/platform.html#module-platform "platform: Retrieves as much platform identifying data as possible.") module for achieving accurate OS version.
[Availability](https://docs.python.org/3/library/intro.html#availability): Windows.
Changed in version 3.2: Changed to a named tuple and added _service_pack_minor_ , _service_pack_major_ , _suite_mask_ , and _product_type_.
Changed in version 3.6: Added _platform_version_