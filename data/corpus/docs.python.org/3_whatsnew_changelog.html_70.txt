Title: Python 3 Changelog - Recent Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section outlines significant updates and bug fixes in Python, including new parameters for the `PhotoImage` method `write()`, additions to the `copy_replace()` method, and a fix for the `sqlite3.Connection.iterdump()` method that addresses issues with custom row factories.
---

ge data. Add _background_ and _grayscale_ parameters to `PhotoImage` method `write()`.
  * [gh-118225](https://github.com/python/cpython/issues/118225): Add the `PhotoImage` method `copy_replace()` to copy a region from one image to other image, possibly with pixel zooming and/or subsampling. Add _from_coords_ parameter to `PhotoImage` methods `copy()`, `zoom()` and `subsample()`. Add _zoom_ and _subsample_ parameters to `PhotoImage` method `copy()`.
  * [gh-118221](https://github.com/python/cpython/issues/118221): Fix a bug where [`sqlite3.Connection.iterdump()`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.iterdump "sqlite3.Connection.iterdump") could fail if a custom [`row factory`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.row_factory "sqlite3.Connection.row_factory") was used. Patch by Erlend Aasland.
  * [gh-118013](https://github.com/python/cpython/issues/118013): Fix regression introduced in [gh-103193](https://github.com/python/cpython/issues/103193) that meant that calling [`inspect.getattr_static()`](https://docs.python.org/3/library/inspect.html#inspect.getattr_static "inspect.getattr_static") on an instance would cause a strong reference to that instance’s class to persist in an internal cache in the [`inspect`](https://docs.python.org/3/library/inspect.html#module-inspect "inspect: Extract information and source code from live objects.") module. This caused unexpected memory consumption if the class was dynamically created, the class held strong references to other objects which took up a significant amount of memory, and the cache contained the sole strong reference to the class. The fix for the regression leads to a slowdown in `getattr_static()`, but the function should still be significantly faster than it was in Python 3.11. Patch by Alex Waygood.
  * [gh-118218](https://github.com/python/cpython/issues/118218): Speed up [`itertools.pairwise()`](https://docs.python.org/3/library/itertools.html#itertools.pairwise "itertools.pairwise") in the common case by up to 1.8x.
  * [gh-117486](https://github.com/python/cpython/issues/117486): Improve the behavior of user-defined subclasses of [`ast.AST`](https://docs.python.org/3/library/ast.html#ast.AST "ast.AST"). Such classes will now require no changes in the usual case to conform with the behavior changes of the [`ast`](https://docs.python.org/3/library/ast.html#module-ast "ast: Abstract Syntax Tree classes and manipulation.") module in Python 3.13. Patch by Jelle Zijlstra.
  * [gh-90848](https://github.com/python/cpython/issues/90848): Fixed [`unittest.mock.create_autospec()`](https://docs.python.org/3/library/unittest.mock.html#unittest.mock.create_autospec "unittest.mock.create_autospec") to configure parent mock with keyword arguments.
  * [gh-118168](https://github.com/python/cpython/issues/118168): Fix incorrect argument substitution when [`typing.Unpack`](https://docs.python.org/3/library/typing.html#typing.Unpack "typing.Unpack") is used with the builtin [`tuple`](https://docs.python.org/3/library/stdtypes.html#tuple "tuple"). `typing.Unpack` now raises [`TypeError`](https://docs.python.org/3/library/exceptions.html#TypeError "TypeError") when used with certain invalid types. Patch by Jelle Zijlstra.
  * [gh-118131](https://github.com/python/cpython/issues/118131): Add command-line interface for the [`random`](https://docs.python.org/3/library/random.html#module-random "random: Generate pseudo-random numbers with various common distributions.") module. Patch by Hugo van Kemenade.
  * [gh-118107](https://github.com/python/cpython/issues/118107): Fix [`zipimport`](https://docs.python.org/3/library/zipimport.html#module-zipimport "zipimport: Support for importing Python modules from ZIP archives.") reading of ZIP64 files with file entries that are too big or offset too far.
  * [gh-102511](https://github.com/python/cpython/issues/102511): Fix [`os.path.normpath()`](https://docs.python.org/3/library/os.path.html#os.path.normpath "os.path.normpath") for UNC paths on Windows. Speed up [`os.path.splitroot()`](https://docs.python.org/3/library/os.path.html#os.path.splitroot "os.path.splitroot") with a native implementation.
  * [gh-117535](https://github.com/python/cpython/issues/117535): Change the unknown filename of [`warnings`](https://docs.python.org/3/library/warnings.html#module-warnings "warnings: Issue warning messages and control their disposition.") from `sys` to `<sys>` to clarify that it’s not a real filename.
  * [gh-114053](https://github.com/python/cpython/issues/114053): Fix erroneous [`NameError`](https://docs.python.org/3/library/exceptions.html#NameError "NameError") when calling [`typing.get_type_hints()`](https://docs.python.org/3/library/typing.html#typing.get_type_hints "typing.get_type_hints") on a class that made use of [**PEP 695**](https://peps.python.org/pep-0695/) type parameters in a module that had `from __future__ import annotations` at the top of the file.