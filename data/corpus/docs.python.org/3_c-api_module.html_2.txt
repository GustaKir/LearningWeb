Title: Python C API: Module Functions
URL: https://docs.python.org/3/c-api/module.html
Summary: This section discusses functions related to Python modules within the C API, specifically `PyModule_GetDef`, which retrieves the `PyModuleDef` structure of a module, and `PyModule_GetFilenameObject`, which obtains the filename object of a module.
---

[PyModuleDef](https://docs.python.org/3/c-api/module.html#c.PyModuleDef "PyModuleDef")*PyModule_GetDef([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*module)[¶](https://docs.python.org/3/c-api/module.html#c.PyModule_GetDef "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Return a pointer to the [`PyModuleDef`](https://docs.python.org/3/c-api/module.html#c.PyModuleDef "PyModuleDef") struct from which the module was created, or `NULL` if the module wasn’t created from a definition. 

[PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*PyModule_GetFilenameObject([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*module)[¶](https://docs.python.org/3/c-api/module.html#c.PyModule_GetFilenameObject "Link to this definition")
    _Return value: New reference.__Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Return the name of the file from which _module_ was loaded using _module_ ’s [`__file__`](https://docs.python.org/3/reference/datamodel.html#module.__file__ "module.__file__") attribute. If this is not defined, or if it is not a string, raise [`SystemError`](https://docs.python.org/3/library/exceptions.html#SystemError "SystemError") and return `NULL`; otherwise return a reference to a Unicode object.
Added in version 3.2. 

constchar*PyModule_GetFilename([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")*module)[¶](https://docs.python.org/3/c-api/module.html#c.PyModule_GetFilename "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Similar to [`PyModule_GetFilenameObject()`](https://docs.python.org/3/c-api/module.html#c.PyModule_GetFilenameObject "PyModule_GetFilenameObject") but return the filename encoded to ‘utf-8’.
Deprecated since version 3.2: [`PyModule_GetFilename()`](https://docs.python.org/3/c-api/module.html#c.PyModule_GetFilename "PyModule_GetFilename") raises [`UnicodeEncodeError`](https://docs.python.org/3/library/exceptions.html#UnicodeEncodeError "UnicodeEncodeError") on unencodable filenames, use [`PyModule_GetFilenameObject()`](https://docs.python.org/3/c-api/module.html#c.PyModule_GetFilenameObject "PyModule_GetFilenameObject") instead.
## Initializing C modules[¶](https://docs.python.org/3/c-api/module.html#initializing-c-modules "Link to this heading")
Modules objects are usually created from extension modules (shared libraries which export an initialization function), or compiled-in modules (where the initialization function is added using [`PyImport_AppendInittab()`](https://docs.python.org/3/c-api/import.html#c.PyImport_AppendInittab "PyImport_AppendInittab")). See [Building C and C++ Extensions](https://docs.python.org/3/extending/building.html#building) or [Extending Embedded Python](https://docs.python.org/3/extending/embedding.html#extending-with-embedding) for details.
The initialization function can either pass a module definition instance to [`PyModule_Create()`](https://docs.python.org/3/c-api/module.html#c.PyModule_Create "PyModule_Create"), and return the resulting module object, or request “multi-phase initialization” by returning the definition struct itself. 

typePyModuleDef[¶](https://docs.python.org/3/c-api/module.html#c.PyModuleDef "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable) (including all members)._
The module definition struct, which holds all information needed to create a module object. There is usually only one statically initialized variable of this type for each module. 

PyModuleDef_Basem_base[¶](https://docs.python.org/3/c-api/module.html#c.PyModuleDef.m_base "Link to this definition")
    
Always initialize this member to `PyModuleDef_HEAD_INIT`. 

constchar*m_name[¶](https://docs.python.org/3/c-api/module.html#c.PyModuleDef.m_name "Link to this definition")
    
Name for the new module. 

constchar*m_doc[¶](https://docs.python.org/3/c-api/module.html#c.PyModuleDef.m_doc "Link to this definition")
    
Docstring for the module; usually a docstring variable created with [`PyDoc_STRVAR`](https://docs.python.org/3/c-api/intro.html#c.PyDoc_STRVAR "PyDoc_STRVAR") is used.