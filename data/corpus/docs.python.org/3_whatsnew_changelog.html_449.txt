Title: Python 3 Changelog: Core and Builtins Updates
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section outlines recent improvements and fixes within the core and builtins of Python, including optimizations for keyword argument parsing, corrections in AST node handling, and consistency updates for 'elif' nodes in parsing.
---

### Core and Builtins[¶](https://docs.python.org/3/whatsnew/changelog.html#id415 "Link to this heading")
  * [bpo-39028](https://bugs.python.org/issue?@action=redirect&bpo=39028): Slightly improve the speed of keyword argument parsing with many kwargs by strengthening the assumption that kwargs are interned strings.
  * [bpo-39080](https://bugs.python.org/issue?@action=redirect&bpo=39080): Fix the value of _end_col_offset_ for Starred Expression AST nodes when they are among the elements in the _args_ attribute of Call AST nodes.
  * [bpo-39031](https://bugs.python.org/issue?@action=redirect&bpo=39031): When parsing an “elif” node, lineno and col_offset of the node now point to the “elif” keyword and not to its condition, making it consistent with the “if” node. Patch by Lysandros Nikolaou.
  * [bpo-20443](https://bugs.python.org/issue?@action=redirect&bpo=20443): In Python 3.9.0a1, sys.argv[0] was made an absolute path if a filename was specified on the command line. Revert this change, since most users expect sys.argv to be unmodified.
  * [bpo-39008](https://bugs.python.org/issue?@action=redirect&bpo=39008): [`PySys_Audit()`](https://docs.python.org/3/c-api/sys.html#c.PySys_Audit "PySys_Audit") now requires `Py_ssize_t` to be used for size arguments in the format string, regardless of whether `PY_SSIZE_T_CLEAN` was defined at include time.
  * [bpo-38673](https://bugs.python.org/issue?@action=redirect&bpo=38673): In REPL mode, don’t switch to PS2 if the line starts with comment or whitespace. Based on work by Batuhan Taşkaya.
  * [bpo-38922](https://bugs.python.org/issue?@action=redirect&bpo=38922): Calling `replace` on a code object now raises the `code.__new__` audit event.
  * [bpo-38920](https://bugs.python.org/issue?@action=redirect&bpo=38920): Add audit hooks for when [`sys.excepthook()`](https://docs.python.org/3/library/sys.html#sys.excepthook "sys.excepthook") and [`sys.unraisablehook()`](https://docs.python.org/3/library/sys.html#sys.unraisablehook "sys.unraisablehook") are invoked.
  * [bpo-38892](https://bugs.python.org/issue?@action=redirect&bpo=38892): Improve documentation for audit events table and functions.
  * [bpo-38852](https://bugs.python.org/issue?@action=redirect&bpo=38852): Set the thread stack size to 8 Mb for debug builds on android platforms.
  * [bpo-38858](https://bugs.python.org/issue?@action=redirect&bpo=38858): Each Python subinterpreter now has its own “small integer singletons”: numbers in [-5; 257] range. It is no longer possible to change the number of small integers at build time by overriding `NSMALLNEGINTS` and `NSMALLPOSINTS` macros: macros should now be modified manually in `pycore_pystate.h` header file.
  * [bpo-36854](https://bugs.python.org/issue?@action=redirect&bpo=36854): The garbage collector state becomes per interpreter (`PyInterpreterState.gc`), rather than being global (`_PyRuntimeState.gc`).
  * [bpo-38835](https://bugs.python.org/issue?@action=redirect&bpo=38835): The `PyFPE_START_PROTECT()` and `PyFPE_END_PROTECT()` macros are empty: they have been doing nothing for the last year, so stop using them.
  * [bpo-38328](https://bugs.python.org/issue?@action=redirect&bpo=38328): Sped up the creation time of constant [`list`](https://docs.python.org/3/library/stdtypes.html#list "list") and [`set`](https://docs.python.org/3/library/stdtypes.html#set "set") displays. Patch by Brandt Bucher.
  * [bpo-38707](https://bugs.python.org/issue?@action=redirect&bpo=38707): `MainThread.native_id` is now correctly reset in child processes spawned using [`multiprocessing.Process`](https://docs.python.org/3/library/multiprocessing.html#multiprocessing.Process "multiprocessing.Process"), instead of retaining the parent’s value.
  * [bpo-38629](https://bugs.python.org/issue?@action=redirect&bpo=38629): Added `__floor__` and `__ceil__` methods to float object. Patch by Batuhan Taşkaya.
  * [bpo-27145](https://bugs.python.org/issue?@action=redirect&bpo=27145): int + int and int - int operators can now return small integer singletons. Patch by hongweipeng.
  * [bpo-38021](https://bugs.python.org/issue?@action=redirect&bpo=38021): Provide a platform tag for AIX that is sufficient for PEP425 binary distribution identification. Patch by Michael Felt.
  * [bpo-35409](https://bugs.python.org/issue?@action=redirect&bpo=35409): Ignore GeneratorExit exceptions when throwing an exception into the aclose coroutine of an asynchronous generator.
  * [bpo-33387](https://bugs.python.org/issue?@action=redirect&bpo=33387): Removed WITH_CLEANUP_START, WITH_CLEANUP_FINISH, BEGIN_FINALLY, END_FINALLY, CALL_FINALLY and POP_FINALLY bytecodes. Replaced with RERAISE and WITH_EXCEPT_START bytecodes. The compiler now generates different code for exceptional and non-exceptional branches for ‘with’ and ‘try-except’ statements. For ‘try-finally’ statements the ‘finally’ block is replicated for each exit from the ‘try’ body.