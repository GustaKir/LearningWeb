Title: PyUnicode_InternInPlace Function
URL: https://docs.python.org/3/c-api/unicode.html
Summary: The PyUnicode_InternInPlace function interns a Python Unicode string in place by modifying the pointer variable. If an equivalent interned string already exists, it updates the pointer to this interned string, releasing the reference to the old string object.
---

voidPyUnicode_InternInPlace([PyObject](https://docs.python.org/3/c-api/structures.html#c.PyObject "PyObject")**p_unicode)[¶](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_InternInPlace "Link to this definition")
    _Part of the[ Stable ABI](https://docs.python.org/3/c-api/stable.html#stable)._
Intern the argument *[p_unicode](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_InternInPlace "p_unicode") in place. The argument must be the address of a pointer variable pointing to a Python Unicode string object. If there is an existing interned string that is the same as *[p_unicode](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_InternInPlace "p_unicode"), it sets *[p_unicode](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_InternInPlace "p_unicode") to it (releasing the reference to the old string object and creating a new [strong reference](https://docs.python.org/3/glossary.html#term-strong-reference) to the interned string object), otherwise it leaves *[p_unicode](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_InternInPlace "p_unicode") alone and interns it.
(Clarification: even though there is a lot of talk about references, think of this function as reference-neutral. You must own the object you pass in; after the call you no longer own the passed-in reference, but you newly own the result.)
This function never raises an exception. On error, it leaves its argument unchanged without interning it.
Instances of subclasses of [`str`](https://docs.python.org/3/library/stdtypes.html#str "str") may not be interned, that is, [PyUnicode_CheckExact](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_CheckExact "PyUnicode_CheckExact")(*[p_unicode](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_InternInPlace "p_unicode")) must be true. If it is not, then – as with any other error – the argument is left unchanged.
Note that interned strings are not “immortal”. You must keep a reference to the result to benefit from interning.