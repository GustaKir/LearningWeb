Title: Python Programming FAQs
URL: https://docs.python.org/3/faq/programming.html
Summary: This section provides a list of frequently asked questions related to Python programming, including topics on object deletion, class instances, identity testing, immutable instances control, and method call caching.
---

not called when I delete the object.](https://docs.python.org/3/faq/programming.html#my-class-defines-del-but-it-is-not-called-when-i-delete-the-object)
      * [How do I get a list of all instances of a given class?](https://docs.python.org/3/faq/programming.html#how-do-i-get-a-list-of-all-instances-of-a-given-class)
      * [Why does the result of `id()` appear to be not unique?](https://docs.python.org/3/faq/programming.html#why-does-the-result-of-id-appear-to-be-not-unique)
      * [When can I rely on identity tests with the _is_ operator?](https://docs.python.org/3/faq/programming.html#when-can-i-rely-on-identity-tests-with-the-is-operator)
      * [How can a subclass control what data is stored in an immutable instance?](https://docs.python.org/3/faq/programming.html#how-can-a-subclass-control-what-data-is-stored-in-an-immutable-instance)
      * [How do I cache method calls?](https://docs.python.org/3/faq/programming.html#how-do-i-cache-method-calls)
    * [Modules](https://docs.python.org/3/faq/programming.html#modules)
      * [How do I create a .pyc file?](https://docs.python.org/3/faq/programming.html#how-do-i-create-a-pyc-file)
      * [How do I find the current module name?](https://docs.python.org/3/faq/programming.html#how-do-i-find-the-current-module-name)
      * [How can I have modules that mutually import each other?](https://docs.python.org/3/faq/programming.html#how-can-i-have-modules-that-mutually-import-each-other)
      * [__import__(‘x.y.z’) returns <module ‘x’>; how do I get z?](https://docs.python.org/3/faq/programming.html#import-x-y-z-returns-module-x-how-do-i-get-z)
      * [When I edit an imported module and reimport it, the changes don’t show up. Why does this happen?](https://docs.python.org/3/faq/programming.html#when-i-edit-an-imported-module-and-reimport-it-the-changes-don-t-show-up-why-does-this-happen)


## [General Questions](https://docs.python.org/3/faq/programming.html#id3)[¶](https://docs.python.org/3/faq/programming.html#general-questions "Link to this heading")
### [Is there a source code level debugger with breakpoints, single-stepping, etc.?](https://docs.python.org/3/faq/programming.html#id4)[¶](https://docs.python.org/3/faq/programming.html#is-there-a-source-code-level-debugger-with-breakpoints-single-stepping-etc "Link to this heading")
Yes.
Several debuggers for Python are described below, and the built-in function [`breakpoint()`](https://docs.python.org/3/library/functions.html#breakpoint "breakpoint") allows you to drop into any of them.
The pdb module is a simple but adequate console-mode debugger for Python. It is part of the standard Python library, and is [`documented in the Library Reference Manual`](https://docs.python.org/3/library/pdb.html#module-pdb "pdb: The Python debugger for interactive interpreters."). You can also write your own debugger by using the code for pdb as an example.
The IDLE interactive development environment, which is part of the standard Python distribution (normally available as [Tools/scripts/idle3](https://github.com/python/cpython/blob/main/Tools/scripts/idle3)), includes a graphical debugger.
PythonWin is a Python IDE that includes a GUI debugger based on pdb. The PythonWin debugger colors breakpoints and has quite a few cool features such as debugging non-PythonWin programs. PythonWin is available as part of [pywin32](https://github.com/mhammond/pywin32) project and as a part of the [ActivePython](https://www.activestate.com/products/python/) distribution.
[Eric](https://eric-ide.python-projects.org/) is an IDE built on PyQt and the Scintilla editing component.
[trepan3k](https://github.com/rocky/python3-trepan/) is a gdb-like debugger.
[Visual Studio Code](https://code.visualstudio.com/) is an IDE with debugging tools that integrates with version-control software.
There are a number of commercial Python IDEs that include graphical debuggers. They include:
  * [Wing IDE](https://wingware.com/)
  * [Komodo IDE](https://www.activestate.com/products/komodo-ide/)
  * [PyCharm](https://www.jetbrains.com/pycharm/)