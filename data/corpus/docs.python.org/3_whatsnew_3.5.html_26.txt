Title: Python 3.5 Release Notes
URL: https://docs.python.org/3/whatsnew/3.5.html
Summary: Python 3.5 introduces enhancements to the `sqlite3` module with the `Row` class now supporting sequence protocols, including reversed iteration and slice indexing. Additionally, a new `run()` function is added to the `subprocess` module, allowing execution of specified commands and returning a `CompletedProcess` object.
---

(Contributed by Antoine Pitrou in [bpo-23239](https://bugs.python.org/issue?@action=redirect&bpo=23239).)
### sqlite3[¶](https://docs.python.org/3/whatsnew/3.5.html#sqlite3 "Link to this heading")
The [`Row`](https://docs.python.org/3/library/sqlite3.html#sqlite3.Row "sqlite3.Row") class now fully supports the sequence protocol, in particular [`reversed()`](https://docs.python.org/3/library/functions.html#reversed "reversed") iteration and slice indexing. (Contributed by Claudiu Popa in [bpo-10203](https://bugs.python.org/issue?@action=redirect&bpo=10203); by Lucas Sinclair, Jessica McKellar, and Serhiy Storchaka in [bpo-13583](https://bugs.python.org/issue?@action=redirect&bpo=13583).)
### subprocess[¶](https://docs.python.org/3/whatsnew/3.5.html#subprocess "Link to this heading")
The new [`run()`](https://docs.python.org/3/library/subprocess.html#subprocess.run "subprocess.run") function has been added. It runs the specified command and returns a [`CompletedProcess`](https://docs.python.org/3/library/subprocess.html#subprocess.CompletedProcess "subprocess.CompletedProcess") object, which describes a finished process. The new API is more consistent and is the recommended approach to invoking subprocesses in Python code that does not need to maintain compatibility with earlier Python versions. (Contributed by Thomas Kluyver in [bpo-23342](https://bugs.python.org/issue?@action=redirect&bpo=23342).)
Examples:
>>>```
>>> subprocess.run(["ls", "-l"]) # doesn't capture output
CompletedProcess(args=['ls', '-l'], returncode=0)
>>> subprocess.run("exit 1", shell=True, check=True)
Traceback (most recent call last):
...
subprocess.CalledProcessError: Command 'exit 1' returned non-zero exit status 1
>>> subprocess.run(["ls", "-l", "/dev/null"], stdout=subprocess.PIPE)
CompletedProcess(args=['ls', '-l', '/dev/null'], returncode=0,
stdout=b'crw-rw-rw- 1 root root 1, 3 Jan 23 16:23 /dev/null\n')