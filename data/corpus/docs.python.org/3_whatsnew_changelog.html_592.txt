Title: IDLE Improvements and Bug Fixes
URL: https://docs.python.org/3/whatsnew/changelog.html
Summary: This section outlines several updates to IDLE, including improved traceback management for tk event handling, deletion of unused code, and fixes for bugs in the path browser. Notable changes include standardizing traceback outputs and enhancing test coverage.
---

### IDLE[¶](https://docs.python.org/3/whatsnew/changelog.html#id551 "Link to this heading")
  * [bpo-32207](https://bugs.python.org/issue?@action=redirect&bpo=32207): Improve tk event exception tracebacks in IDLE. When tk event handling is driven by IDLE’s run loop, a confusing and distracting queue.EMPTY traceback context is no longer added to tk event exception tracebacks. The traceback is now the same as when event handling is driven by user code. Patch based on a suggestion by Serhiy Storchaka.
  * [bpo-32164](https://bugs.python.org/issue?@action=redirect&bpo=32164): Delete unused file idlelib/tabbedpages.py. Use of TabbedPageSet in configdialog was replaced by ttk.Notebook.
  * [bpo-32100](https://bugs.python.org/issue?@action=redirect&bpo=32100): IDLE: Fix old and new bugs in pathbrowser; improve tests. Patch mostly by Cheryl Sabella.
  * [bpo-31858](https://bugs.python.org/issue?@action=redirect&bpo=31858): IDLE – Restrict shell prompt manipulation to the shell. Editor and output windows only see an empty last prompt line. This simplifies the code and fixes a minor bug when newline is inserted. Sys.ps1, if present, is read on Shell start-up, but is not set or changed.
  * [bpo-31860](https://bugs.python.org/issue?@action=redirect&bpo=31860): The font sample in the IDLE configuration dialog is now editable. Changes persist while IDLE remains open
  * [bpo-31836](https://bugs.python.org/issue?@action=redirect&bpo=31836): Test_code_module now passes if run after test_idle, which sets ps1. The code module uses sys.ps1 if present or sets it to ‘>>> ‘ if not. Test_code_module now properly tests both behaviors. Ditto for ps2.
  * [bpo-28603](https://bugs.python.org/issue?@action=redirect&bpo=28603): Fix a TypeError that caused a shell restart when printing a traceback that includes an exception that is unhashable. Patch by Zane Bitter.
  * [bpo-13802](https://bugs.python.org/issue?@action=redirect&bpo=13802): Use non-Latin characters in the IDLE’s Font settings sample. Even if one selects a font that defines a limited subset of the unicode Basic Multilingual Plane, tcl/tk will use other fonts that define a character. The expanded example give users of non-Latin characters a better idea of what they might see in IDLE’s shell and editors. To make room for the expanded sample, frames on the Font tab are re-arranged. The Font/Tabs help explains a bit about the additions.


### Tools/Demos[¶](https://docs.python.org/3/whatsnew/changelog.html#id552 "Link to this heading")
  * [bpo-32159](https://bugs.python.org/issue?@action=redirect&bpo=32159): Remove CVS and Subversion tools: remove svneol.py and treesync.py scripts. CPython migrated from CVS to Subversion, to Mercurial, and then to Git. CVS and Subversion are no longer used to develop CPython.
  * [bpo-30722](https://bugs.python.org/issue?@action=redirect&bpo=30722): Make redemo work with Python 3.6 and newer versions. Also, remove the `LOCALE` option since it doesn’t work with string patterns in Python 3. Patch by Christoph Sarnowski.


### C API[¶](https://docs.python.org/3/whatsnew/changelog.html#id553 "Link to this heading")
  * [bpo-20891](https://bugs.python.org/issue?@action=redirect&bpo=20891): Fix PyGILState_Ensure(). When PyGILState_Ensure() is called in a non-Python thread before PyEval_InitThreads(), only call PyEval_InitThreads() after calling PyThreadState_New() to fix a crash.
  * [bpo-32125](https://bugs.python.org/issue?@action=redirect&bpo=32125): The `Py_UseClassExceptionsFlag` flag has been removed. It was deprecated and wasn’t used anymore since Python 2.0.
  * [bpo-25612](https://bugs.python.org/issue?@action=redirect&bpo=25612): Move the current exception state from the frame object to the co-routine. This simplifies the interpreter and fixes a couple of obscure bugs caused by having swap exception state when entering or exiting a generator.
  * [bpo-23699](https://bugs.python.org/issue?@action=redirect&bpo=23699): Add Py_RETURN_RICHCOMPARE macro to reduce boilerplate code in rich comparison functions.
  * [bpo-30697](https://bugs.python.org/issue?@action=redirect&bpo=30697): The `PyExc_RecursionErrorInst` singleton is removed and `PyErr_NormalizeException()` does not use it anymore. This singleton is persistent and its members being never cleared may cause a segfault during finalization of the interpreter. See also [bpo-22898](https://bugs.python.org/issue?@action=redirect&bpo=22898).