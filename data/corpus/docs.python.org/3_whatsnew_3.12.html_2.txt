Title: Python 3.12 Release Highlights
URL: https://docs.python.org/3/whatsnew/3.12.html
Summary: This document outlines the new features and changes in Python 3.12, released on October 2, 2023. Key updates include the removal of the `distutils` package, enhancements to usability and correctness, and improvements to filesystem support in the `os` and `pathlib` modules. For more details, refer to the changelog and related PEPs.
---

Editor:
    
Adam Turner
This article explains the new features in Python 3.12, compared to 3.11. Python 3.12 was released on October 2, 2023. For full details, see the [changelog](https://docs.python.org/3/whatsnew/changelog.html#changelog).
See also
[**PEP 693**](https://peps.python.org/pep-0693/) – Python 3.12 Release Schedule
## Summary – Release highlights[¶](https://docs.python.org/3/whatsnew/3.12.html#summary-release-highlights "Link to this heading")
Python 3.12 is a stable release of the Python programming language, with a mix of changes to the language and the standard library. The library changes focus on cleaning up deprecated APIs, usability, and correctness. Of note, the `distutils` package has been removed from the standard library. Filesystem support in [`os`](https://docs.python.org/3/library/os.html#module-os "os: Miscellaneous operating system interfaces.") and [`pathlib`](https://docs.python.org/3/library/pathlib.html#module-pathlib "pathlib: Object-oriented filesystem paths") has seen a number of improvements, and several modules have better performance.
The language changes focus on usability, as [f-strings](https://docs.python.org/3/glossary.html#term-f-string) have had many limitations removed and ‘Did you mean …’ suggestions continue to improve. The new [type parameter syntax](https://docs.python.org/3/whatsnew/3.12.html#whatsnew312-pep695) and [`type`](https://docs.python.org/3/reference/simple_stmts.html#type) statement improve ergonomics for using [generic types](https://docs.python.org/3/glossary.html#term-generic-type) and [type aliases](https://docs.python.org/3/glossary.html#term-type-alias) with static type checkers.
This article doesn’t attempt to provide a complete specification of all new features, but instead gives a convenient overview. For full details, you should refer to the documentation, such as the [Library Reference](https://docs.python.org/3/library/index.html#library-index) and [Language Reference](https://docs.python.org/3/reference/index.html#reference-index). If you want to understand the complete implementation and design rationale for a change, refer to the PEP for a particular new feature; but note that PEPs usually are not kept up-to-date once a feature has been fully implemented.
New syntax features:
  * [PEP 695](https://docs.python.org/3/whatsnew/3.12.html#whatsnew312-pep695), type parameter syntax and the [`type`](https://docs.python.org/3/reference/simple_stmts.html#type) statement


New grammar features:
  * [PEP 701](https://docs.python.org/3/whatsnew/3.12.html#whatsnew312-pep701), [f-strings](https://docs.python.org/3/glossary.html#term-f-string) in the grammar


Interpreter improvements:
  * [PEP 684](https://docs.python.org/3/whatsnew/3.12.html#whatsnew312-pep684), a unique per-interpreter [GIL](https://docs.python.org/3/glossary.html#term-global-interpreter-lock)
  * [PEP 669](https://docs.python.org/3/whatsnew/3.12.html#whatsnew312-pep669), low impact monitoring
  * [Improved ‘Did you mean …’ suggestions](https://docs.python.org/3/whatsnew/3.12.html#improved-error-messages) for [`NameError`](https://docs.python.org/3/library/exceptions.html#NameError "NameError"), [`ImportError`](https://docs.python.org/3/library/exceptions.html#ImportError "ImportError"), and [`SyntaxError`](https://docs.python.org/3/library/exceptions.html#SyntaxError "SyntaxError") exceptions


Python data model improvements:
  * [PEP 688](https://docs.python.org/3/whatsnew/3.12.html#whatsnew312-pep688), using the [buffer protocol](https://docs.python.org/3/c-api/buffer.html#bufferobjects) from Python