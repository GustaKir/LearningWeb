Title: EmailMessage.as_string Method
URL: https://docs.python.org/3/library/email.message.html
Summary: The as_string method returns the email message as a flattened string. It includes an optional UNIX from envelope header if _unixfrom is set to true. The method also accepts a _maxheaderlen parameter for backward compatibility, but it defaults to None, adhering to the line length specified by the message's policy. The _policy argument can be used to customize the formatting.
---

as_string(_unixfrom =False_, _maxheaderlen =None_, _policy =None_)[¶](https://docs.python.org/3/library/email.message.html#email.message.EmailMessage.as_string "Link to this definition")
    
Return the entire message flattened as a string. When optional _unixfrom_ is true, the envelope header is included in the returned string. _unixfrom_ defaults to `False`. For backward compatibility with the base [`Message`](https://docs.python.org/3/library/email.compat32-message.html#email.message.Message "email.message.Message") class _maxheaderlen_ is accepted, but defaults to `None`, which means that by default the line length is controlled by the [`max_line_length`](https://docs.python.org/3/library/email.policy.html#email.policy.Policy.max_line_length "email.policy.Policy.max_line_length") of the policy. The _policy_ argument may be used to override the default policy obtained from the message instance. This can be used to control some of the formatting produced by the method, since the specified _policy_ will be passed to the [`Generator`](https://docs.python.org/3/library/email.generator.html#email.generator.Generator "email.generator.Generator").
Flattening the message may trigger changes to the [`EmailMessage`](https://docs.python.org/3/library/email.message.html#email.message.EmailMessage "email.message.EmailMessage") if defaults need to be filled in to complete the transformation to a string (for example, MIME boundaries may be generated or modified).
Note that this method is provided as a convenience and may not be the most useful way to serialize messages in your application, especially if you are dealing with multiple messages. See [`email.generator.Generator`](https://docs.python.org/3/library/email.generator.html#email.generator.Generator "email.generator.Generator") for a more flexible API for serializing messages. Note also that this method is restricted to producing messages serialized as “7 bit clean” when [`utf8`](https://docs.python.org/3/library/email.policy.html#email.policy.EmailPolicy.utf8 "email.policy.EmailPolicy.utf8") is `False`, which is the default.
Changed in version 3.6: the default behavior when _maxheaderlen_ is not specified was changed from defaulting to 0 to defaulting to the value of _max_line_length_ from the policy. 

__str__()[¶](https://docs.python.org/3/library/email.message.html#email.message.EmailMessage.__str__ "Link to this definition")
    
Equivalent to `as_string(policy=self.policy.clone(utf8=True))`. Allows `str(msg)` to produce a string containing the serialized message in a readable format.
Changed in version 3.4: the method was changed to use `utf8=True`, thus producing an [**RFC 6531**](https://datatracker.ietf.org/doc/html/rfc6531.html)-like message representation, instead of being a direct alias for [`as_string()`](https://docs.python.org/3/library/email.message.html#email.message.EmailMessage.as_string "email.message.EmailMessage.as_string"). 

as_bytes(_unixfrom =False_, _policy =None_)[¶](https://docs.python.org/3/library/email.message.html#email.message.EmailMessage.as_bytes "Link to this definition")
    
Return the entire message flattened as a bytes object. When optional _unixfrom_ is true, the envelope header is included in the returned string. _unixfrom_ defaults to `False`. The _policy_ argument may be used to override the default policy obtained from the message instance. This can be used to control some of the formatting produced by the method, since the specified _policy_ will be passed to the [`BytesGenerator`](https://docs.python.org/3/library/email.generator.html#email.generator.BytesGenerator "email.generator.BytesGenerator").
Flattening the message may trigger changes to the [`EmailMessage`](https://docs.python.org/3/library/email.message.html#email.message.EmailMessage "email.message.EmailMessage") if defaults need to be filled in to complete the transformation to a string (for example, MIME boundaries may be generated or modified).
Note that this method is provided as a convenience and may not be the most useful way to serialize messages in your application, especially if you are dealing with multiple messages. See [`email.generator.BytesGenerator`](https://docs.python.org/3/library/email.generator.html#email.generator.BytesGenerator "email.generator.BytesGenerator") for a more flexible API for serializing messages. 

__bytes__()[¶](https://docs.python.org/3/library/email.message.html#email.message.EmailMessage.__bytes__ "Link to this definition")
    
Equivalent to [`as_bytes()`](https://docs.python.org/3/library/email.message.html#email.message.EmailMessage.as_bytes "email.message.EmailMessage.as_bytes"). Allows `bytes(msg)` to produce a bytes object containing the serialized message.