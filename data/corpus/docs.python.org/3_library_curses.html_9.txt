Title: Adding Strings to Curses Windows
URL: https://docs.python.org/3/library/curses.html
Summary: The `window.addstr(y, x, str[, attr])` method writes a character string at specified coordinates in a Curses window while possibly applying attributes. Writing outside the window can raise a `curses.error`. A noted bug in ncurses may cause SegFaults when resizing windows, which is fixed in newer versions. To avoid issues, do not use strings with embedded newlines in earlier versions of ncurses.
---

window.addstr(_y_ , _x_ , _str_[, _attr_])
    
Paint the character string _str_ at `(y, x)` with attributes _attr_ , overwriting anything previously on the display.
Note
  * Writing outside the window, subwindow, or pad raises [`curses.error`](https://docs.python.org/3/library/curses.html#curses.error "curses.error"). Attempting to write to the lower right corner of a window, subwindow, or pad will cause an exception to be raised after the string is printed.
  * A [bug in ncurses](https://bugs.python.org/issue35924), the backend for this Python module, can cause SegFaults when resizing windows. This is fixed in ncurses-6.1-20190511. If you are stuck with an earlier ncurses, you can avoid triggering this if you do not call [`addstr()`](https://docs.python.org/3/library/curses.html#curses.window.addstr "curses.window.addstr") with a _str_ that has embedded newlines. Instead, call [`addstr()`](https://docs.python.org/3/library/curses.html#curses.window.addstr "curses.window.addstr") separately for each line.



window.attroff(_attr_)[¶](https://docs.python.org/3/library/curses.html#curses.window.attroff "Link to this definition")
    
Remove attribute _attr_ from the “background” set applied to all writes to the current window. 

window.attron(_attr_)[¶](https://docs.python.org/3/library/curses.html#curses.window.attron "Link to this definition")
    
Add attribute _attr_ from the “background” set applied to all writes to the current window. 

window.attrset(_attr_)[¶](https://docs.python.org/3/library/curses.html#curses.window.attrset "Link to this definition")
    
Set the “background” set of attributes to _attr_. This set is initially `0` (no attributes). 

window.bkgd(_ch_[, _attr_])[¶](https://docs.python.org/3/library/curses.html#curses.window.bkgd "Link to this definition")
    
Set the background property of the window to the character _ch_ , with attributes _attr_. The change is then applied to every character position in that window:
  * The attribute of every character in the window is changed to the new background attribute.
  * Wherever the former background character appears, it is changed to the new background character.



window.bkgdset(_ch_[, _attr_])[¶](https://docs.python.org/3/library/curses.html#curses.window.bkgdset "Link to this definition")
    
Set the window’s background. A window’s background consists of a character and any combination of attributes. The attribute part of the background is combined (OR’ed) with all non-blank characters that are written into the window. Both the character and attribute parts of the background are combined with the blank characters. The background becomes a property of the character and moves with the character through any scrolling and insert/delete line/character operations. 

window.border([_ls_[, _rs_[, _ts_[, _bs_[, _tl_[, _tr_[, _bl_[, _br_]]]]]]]])[¶](https://docs.python.org/3/library/curses.html#curses.window.border "Link to this definition")
    
Draw a border around the edges of the window. Each parameter specifies the character to use for a specific part of the border; see the table below for more details.
Note
A `0` value for any parameter will cause the default character to be used for that parameter. Keyword parameters can _not_ be used. The defaults are listed in this table:
Parameter | Description | Default value  
---|---|---  
_ls_ | Left side | [`ACS_VLINE`](https://docs.python.org/3/library/curses.html#curses.ACS_VLINE "curses.ACS_VLINE")  
_rs_ | Right side | [`ACS_VLINE`](https://docs.python.org/3/library/curses.html#curses.ACS_VLINE "curses.ACS_VLINE")  
_ts_ | Top | [`ACS_HLINE`](https://docs.python.org/3/library/curses.html#curses.ACS_HLINE "curses.ACS_HLINE")  
_bs_ | Bottom | [`ACS_HLINE`](https://docs.python.org/3/library/curses.html#curses.ACS_HLINE "curses.ACS_HLINE")  
_tl_ | Upper-left corner | [`ACS_ULCORNER`](https://docs.python.org/3/library/curses.html#curses.ACS_ULCORNER "curses.ACS_ULCORNER")  
_tr_ | Upper-right corner | [`ACS_URCORNER`](https://docs.python.org/3/library/curses.html#curses.ACS_URCORNER "curses.ACS_URCORNER")  
_bl_ | Bottom-left corner | [`ACS_LLCORNER`](https://docs.python.org/3/library/curses.html#curses.ACS_LLCORNER "curses.ACS_LLCORNER")  
_br_ | Bottom-right corner | [`ACS_LRCORNER`](https://docs.python.org/3/library/curses.html#curses.ACS_LRCORNER "curses.ACS_LRCORNER") 

window.box([_vertch_ , _horch_])[¶](https://docs.python.org/3/library/curses.html#curses.window.box "Link to this definition")
      
Similar to [`border()`](https://docs.python.org/3/library/curses.html#curses.window.border "curses.window.border"), but both _ls_ and _rs_ are _vertch_ and both _ts_ and _bs_ are _horch_. The default corner characters are always used by this function. 

window.chgat(_attr_)[¶](https://docs.python.org/3/library/curses.html#curses.window.chgat "Link to this definition")


window.chgat(_num_ , _attr_)


window.chgat(_y_ , _x_ , _attr_)