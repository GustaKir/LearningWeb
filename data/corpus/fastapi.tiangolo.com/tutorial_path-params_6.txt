Title: Using Predefined Values with Path Parameters in FastAPI
URL: https://fastapi.tiangolo.com/tutorial/path-params/
Summary: This section explains how to use predefined values for path parameters in a FastAPI application by creating an Enum class that inherits from both `str` and `Enum`. This allows the API documentation to recognize the values as strings and render them correctly. The example shows how to define valid values as class attributes.
---

```

The first one will always be used since the path matches first.
## Predefined values[¶](https://fastapi.tiangolo.com/tutorial/path-params/#predefined-values "Permanent link")
If you have a _path operation_ that receives a _path parameter_ , but you want the possible valid _path parameter_ values to be predefined, you can use a standard Python `Enum`.
### Create an `Enum` class[¶](https://fastapi.tiangolo.com/tutorial/path-params/#create-an-enum-class "Permanent link")
Import `Enum` and create a sub-class that inherits from `str` and from `Enum`.
By inheriting from `str` the API docs will be able to know that the values must be of type `string` and will be able to render correctly.
Then create class attributes with fixed values, which will be the available valid values:
[Python 3.8+](https://fastapi.tiangolo.com/tutorial/path-params/#__tabbed_5_1)
```
fromenumimport Enum
fromfastapiimport FastAPI
classModelName(str, Enum):
  alexnet = "alexnet"
  resnet = "resnet"
  lenet = "lenet"
app = FastAPI()
@app.get("/models/{model_name}")
async defget_model(model_name: ModelName):
  if model_name is ModelName.alexnet:
    return {"model_name": model_name, "message": "Deep Learning FTW!"}
  if model_name.value == "lenet":
    return {"model_name": model_name, "message": "LeCNN all the images"}
  return {"model_name": model_name, "message": "Have some residuals"}

```

Info
[Enumerations (or enums) are available in Python](https://docs.python.org/3/library/enum.html) since version 3.4.
Tip
If you are wondering, "AlexNet", "ResNet", and "LeNet" are just names of Machine Learning models.
### Declare a _path parameter_[¶](https://fastapi.tiangolo.com/tutorial/path-params/#declare-a-path-parameter "Permanent link")
Then create a _path parameter_ with a type annotation using the enum class you created (`ModelName`):
[Python 3.8+](https://fastapi.tiangolo.com/tutorial/path-params/#__tabbed_6_1)
```
fromenumimport Enum
fromfastapiimport FastAPI
classModelName(str, Enum):
  alexnet = "alexnet"
  resnet = "resnet"
  lenet = "lenet"
app = FastAPI()
@app.get("/models/{model_name}")
async defget_model(model_name: ModelName):
  if model_name is ModelName.alexnet:
    return {"model_name": model_name, "message": "Deep Learning FTW!"}
  if model_name.value == "lenet":
    return {"model_name": model_name, "message": "LeCNN all the images"}
  return {"model_name": model_name, "message": "Have some residuals"}

```

### Check the docs[¶](https://fastapi.tiangolo.com/tutorial/path-params/#check-the-docs "Permanent link")
Because the available values for the _path parameter_ are predefined, the interactive docs can show them nicely:
![](https://fastapi.tiangolo.com/img/tutorial/path-params/image03.png)
### Working with Python _enumerations_[¶](https://fastapi.tiangolo.com/tutorial/path-params/#working-with-python-enumerations "Permanent link")
The value of the _path parameter_ will be an _enumeration member_.
#### Compare _enumeration members_[¶](https://fastapi.tiangolo.com/tutorial/path-params/#compare-enumeration-members "Permanent link")
You can compare it with the _enumeration member_ in your created enum `ModelName`:
[Python 3.8+](https://fastapi.tiangolo.com/tutorial/path-params/#__tabbed_7_1)
```
fromenumimport Enum
fromfastapiimport FastAPI
classModelName(str, Enum):
  alexnet = "alexnet"
  resnet = "resnet"
  lenet = "lenet"
app = FastAPI()
@app.get("/models/{model_name}")
async defget_model(model_name: ModelName):
  if model_name is ModelName.alexnet:
    return {"model_name": model_name, "message": "Deep Learning FTW!"}
  if model_name.value == "lenet":
    return {"model_name": model_name, "message": "LeCNN all the images"}
  return {"model_name": model_name, "message": "Have some residuals"}

```

#### Get the _enumeration value_[¶](https://fastapi.tiangolo.com/tutorial/path-params/#get-the-enumeration-value "Permanent link")
You can get the actual value (a `str` in this case) using `model_name.value`, or in general, `your_enum_member.value`:
[Python 3.8+](https://fastapi.tiangolo.com/tutorial/path-params/#__tabbed_8_1)
```
fromenumimport Enum
fromfastapiimport FastAPI
classModelName(str, Enum):
  alexnet = "alexnet"
  resnet = "resnet"
  lenet = "lenet"
app = FastAPI()
@app.get("/models/{model_name}")
async defget_model(model_name: ModelName):
  if model_name is ModelName.alexnet:
    return {"model_name": model_name, "message": "Deep Learning FTW!"}
  if model_name.value == "lenet":
    return {"model_name": model_name, "message": "LeCNN all the images"}
  return {"model_name": model_name, "message": "Have some residuals"}