Title: OAuth2 Security Initialization in FastAPI
URL: https://fastapi.tiangolo.com/reference/security/
Summary: This section outlines the `__init__` method for setting up OAuth2 security in FastAPI, detailing parameters such as `flows`, `scheme_name`, `description`, and `auto_error`. It emphasizes how these parameters influence the behavior and presentation of the security scheme in OpenAPI documentation.
---

```
def__init__(
  self,
  *,
  flows: Annotated[
    Union[OAuthFlowsModel, Dict[str, Dict[str, Any]]],
    Doc(
"""
      The dictionary of OAuth2 flows.
      """
    ),
  ] = OAuthFlowsModel(),
  scheme_name: Annotated[
    Optional[str],
    Doc(
"""
      Security scheme name.
      It will be included in the generated OpenAPI (e.g. visible at `/docs`).
      """
    ),
  ] = None,
  description: Annotated[
    Optional[str],
    Doc(
"""
      Security scheme description.
      It will be included in the generated OpenAPI (e.g. visible at `/docs`).
      """
    ),
  ] = None,
  auto_error: Annotated[
    bool,
    Doc(
"""
      By default, if no HTTP Authorization header is provided, required for
      OAuth2 authentication, it will automatically cancel the request and
      send the client an error.
      If `auto_error` is set to `False`, when the HTTP Authorization header
      is not available, instead of erroring out, the dependency result will
      be `None`.
      This is useful when you want to have optional authentication.
      It is also useful when you want to have authentication that can be
      provided in one of multiple optional ways (for example, with OAuth2
      or in a cookie).
      """
    ),
  ] = True,
):
  self.model = OAuth2Model(
    flows=cast(OAuthFlowsModel, flows), description=description
  )
  self.scheme_name = scheme_name or self.__class__.__name__
  self.auto_error = auto_error

```
  
---|---  
###  model `instance-attribute` [¶](https://fastapi.tiangolo.com/reference/security/#fastapi.security.OAuth2.model "Permanent link")
```
model = OAuth2[](https://fastapi.tiangolo.com/reference/openapi/models/#fastapi.openapi.models.OAuth2 "<code class="doc-symbol doc-symbol-heading doc-symbol-class"></code>      <span class="doc doc-object-name doc-class-name">OAuth2</span> \(<code>fastapi.openapi.models.OAuth2</code>\)")(
  flows=cast(OAuthFlows[](https://fastapi.tiangolo.com/reference/openapi/models/#fastapi.openapi.models.OAuthFlows "<code class="doc-symbol doc-symbol-heading doc-symbol-class"></code>      <span class="doc doc-object-name doc-class-name">OAuthFlows</span> \(<code>fastapi.openapi.models.OAuthFlows</code>\)"), flows), description=description
)

```

###  scheme_name `instance-attribute` [¶](https://fastapi.tiangolo.com/reference/security/#fastapi.security.OAuth2.scheme_name "Permanent link")
```
scheme_name = scheme_name or __name__

```

###  auto_error `instance-attribute` [¶](https://fastapi.tiangolo.com/reference/security/#fastapi.security.OAuth2.auto_error "Permanent link")
```
auto_error = auto_error

```

##  fastapi.security.OAuth2AuthorizationCodeBearer [¶](https://fastapi.tiangolo.com/reference/security/#fastapi.security.OAuth2AuthorizationCodeBearer "Permanent link")
```
OAuth2AuthorizationCodeBearer(
  authorizationUrl,
  tokenUrl,
  refreshUrl=None,
  scheme_name=None,
  scopes=None,
  description=None,
  auto_error=True,
)

```

Bases: `OAuth2[](https://fastapi.tiangolo.com/reference/security/#fastapi.security.OAuth2 "<code class="doc-symbol doc-symbol-heading doc-symbol-class"></code>      <span class="doc doc-object-name doc-class-name">fastapi.security.OAuth2</span> \(<code>fastapi.security.oauth2.OAuth2</code>\)")`
OAuth2 flow for authentication using a bearer token obtained with an OAuth2 code flow. An instance of it would be used as a dependency.
PARAMETER | DESCRIPTION  
---|---  
`authorizationUrl` |  **TYPE:** `str`  
`tokenUrl` |  The URL to obtain the OAuth2 token. **TYPE:** `str`  
`refreshUrl` |  The URL to refresh the token and obtain a new one. **TYPE:** `Optional[str]` **DEFAULT:** `None`  
`scheme_name` |  Security scheme name. It will be included in the generated OpenAPI (e.g. visible at `/docs`). **TYPE:** `Optional[str]` **DEFAULT:** `None`  
`scopes` |  The OAuth2 scopes that would be required by the _path operations_ that use this dependency. **TYPE:** `Optional[Dict[str, str]]` **DEFAULT:** `None`  
`description` |  Security scheme description. It will be included in the generated OpenAPI (e.g. visible at `/docs`). **TYPE:** `Optional[str]` **DEFAULT:** `None`  
`auto_error` |  By default, if no HTTP Authorization header is provided, required for OAuth2 authentication, it will automatically cancel the request and send the client an error. If `auto_error` is set to `False`, when the HTTP Authorization header is not available, instead of erroring out, the dependency result will be `None`. This is useful when you want to have optional authentication. It is also useful when you want to have authentication that can be provided in one of multiple optional ways (for example, with OAuth2 or in a cookie). **TYPE:** `bool` **DEFAULT:** `True`  
Source code in `fastapi/security/oauth2.py`