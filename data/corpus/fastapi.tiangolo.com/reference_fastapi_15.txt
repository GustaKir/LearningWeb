Title: FastAPI Reference for OpenAPI Configuration
URL: https://fastapi.tiangolo.com/reference/fastapi/
Summary: This section outlines the configuration options for FastAPI, including additional responses, callbacks for path operations, and links to more detailed documentation on these advanced features. It also highlights the integration of these settings into the generated OpenAPI specification visible in the `/docs` endpoint.
---

```
      """
    ),
  ] = True,
  responses: Annotated[
    Optional[Dict[Union[int, str], Dict[str, Any]]],
    Doc(
"""
      Additional responses to be shown in OpenAPI.
      It will be added to the generated OpenAPI (e.g. visible at `/docs`).
      Read more about it in the
      [FastAPI docs for Additional Responses in OpenAPI](https://fastapi.tiangolo.com/advanced/additional-responses/).
      And in the
      [FastAPI docs for Bigger Applications](https://fastapi.tiangolo.com/tutorial/bigger-applications/#include-an-apirouter-with-a-custom-prefix-tags-responses-and-dependencies).
      """
    ),
  ] = None,
  callbacks: Annotated[
    Optional[List[BaseRoute]],
    Doc(
"""
      OpenAPI callbacks that should apply to all *path operations*.
      It will be added to the generated OpenAPI (e.g. visible at `/docs`).
      Read more about it in the
      [FastAPI docs for OpenAPI Callbacks](https://fastapi.tiangolo.com/advanced/openapi-callbacks/).
      """
    ),
  ] = None,
  webhooks: Annotated[
    Optional[routing.APIRouter],
    Doc(
"""
      Add OpenAPI webhooks. This is similar to `callbacks` but it doesn't
      depend on specific *path operations*.
      It will be added to the generated OpenAPI (e.g. visible at `/docs`).
      **Note**: This is available since OpenAPI 3.1.0, FastAPI 0.99.0.
      Read more about it in the
      [FastAPI docs for OpenAPI Webhooks](https://fastapi.tiangolo.com/advanced/openapi-webhooks/).
      """
    ),
  ] = None,
  deprecated: Annotated[
    Optional[bool],
    Doc(
"""
      Mark all *path operations* as deprecated. You probably don't need it,
      but it's available.
      It will be added to the generated OpenAPI (e.g. visible at `/docs`).
      Read more about it in the
      [FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).
      """
    ),
  ] = None,
  include_in_schema: Annotated[
    bool,
    Doc(
"""
      To include (or not) all the *path operations* in the generated OpenAPI.
      You probably don't need it, but it's available.
      This affects the generated OpenAPI (e.g. visible at `/docs`).
      Read more about it in the
      [FastAPI docs for Query Parameters and String Validations](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#exclude-from-openapi).
      """
    ),
  ] = True,
  swagger_ui_parameters: Annotated[
    Optional[Dict[str, Any]],
    Doc(
"""
      Parameters to configure Swagger UI, the autogenerated interactive API
      documentation (by default at `/docs`).
      Read more about it in the
      [FastAPI docs about how to Configure Swagger UI](https://fastapi.tiangolo.com/how-to/configure-swagger-ui/).
      """
    ),
  ] = None,
  generate_unique_id_function: Annotated[
    Callable[[routing.APIRoute], str],
    Doc(
"""
      Customize the function used to generate unique IDs for the *path
      operations* shown in the generated OpenAPI.
      This is particularly useful when automatically generating clients or
      SDKs for your API.
      Read more about it in the
      [FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).
      """
    ),
  ] = Default(generate_unique_id),
  separate_input_output_schemas: Annotated[
    bool,
    Doc(
"""
      Whether to generate separate OpenAPI schemas for request body and
      response body when the results would be more precise.
      This is particularly useful when automatically generating clients.
      For example, if you have a model like:
  ```python
      from pydantic import BaseModel
      class Item(BaseModel):
        name: str
        tags: list[str] = []