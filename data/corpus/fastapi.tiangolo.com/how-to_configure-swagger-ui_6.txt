Title: Configuring Swagger UI in FastAPI
URL: https://fastapi.tiangolo.com/how-to/configure-swagger-ui/
Summary: This section covers generating an HTML response for loading ReDoc for API documentation in FastAPI. It includes options for customizing the API docs, such as setting the favicon and using Google Fonts. The content also references further documentation on custom static assets for API UIs.
---

It is normally shown in the browser tab.
      """
    ),
  ] = "https://fastapi.tiangolo.com/img/favicon.png",
  with_google_fonts: Annotated[
    bool,
    Doc(
"""
      Load and use Google Fonts.
      """
    ),
  ] = True,
) -> HTMLResponse:
"""
  Generate and return the HTML response that loads ReDoc for the alternative
  API docs (normally served at `/redoc`).
  You would only call this function yourself if you needed to override some parts,
  for example the URLs to use to load ReDoc's JavaScript and CSS.
  Read more about it in the
  [FastAPI docs for Custom Docs UI Static Assets (Self-Hosting)](https://fastapi.tiangolo.com/how-to/custom-docs-ui-assets/).
  """
  html = f"""
  <!DOCTYPE html>
  <html>
  <head>
  <title>{title}</title>
  <!-- needed for adaptive design -->
  <meta charset="utf-8"/>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  """
  if with_google_fonts:
    html += """
  <link href="https://fonts.googleapis.com/css?family=Montserrat:300,400,700|Roboto:300,400,700" rel="stylesheet">
  """
  html += f"""
  <link rel="shortcut icon" href="{redoc_favicon_url}">
  <!--
  ReDoc doesn't change outer page styles
  -->
  <style>
   body {{
    margin: 0;
    padding: 0;
}}
  </style>
  </head>
  <body>
  <noscript>
    ReDoc requires Javascript to function. Please enable it to browse the documentation.
  </noscript>
  <redoc spec-url="{openapi_url}"></redoc>
  <script src="{redoc_js_url}"> </script>
  </body>
  </html>
  """
  return HTMLResponse(html)
defget_swagger_ui_oauth2_redirect_html() -> HTMLResponse:
"""
  Generate the HTML response with the OAuth2 redirection for Swagger UI.
  You normally don't need to use or change this.
  """
  # copied from https://github.com/swagger-api/swagger-ui/blob/v4.14.0/dist/oauth2-redirect.html
  html = """
  <!doctype html>
  <html lang="en-US">
  <head>
    <title>Swagger UI: OAuth2 Redirect</title>
  </head>
  <body>
  <script>
    'use strict';
    function run () {
      var oauth2 = window.opener.swaggerUIRedirectOauth2;
      var sentState = oauth2.state;
      var redirectUrl = oauth2.redirectUrl;
      var isValid, qp, arr;
      if (/code|token|error/.test(window.location.hash)) {
        qp = window.location.hash.substring(1).replace('?', '&');
      } else {
        qp = location.search.substring(1);
      }
      arr = qp.split("&");
      arr.forEach(function (v,i,_arr) { _arr[i] = '"' + v.replace('=', '":"') + '"';});
      qp = qp ? JSON.parse('{' + arr.join() + '}',
          function (key, value) {
            return key === "" ? value : decodeURIComponent(value);
          }
      ) : {};
      isValid = qp.state === sentState;
      if ((
       oauth2.auth.schema.get("flow") === "accessCode" ||
       oauth2.auth.schema.get("flow") === "authorizationCode" ||
       oauth2.auth.schema.get("flow") === "authorization_code"
      ) && !oauth2.auth.code) {
        if (!isValid) {
          oauth2.errCb({
            authId: oauth2.auth.name,
            source: "auth",
            level: "warning",
            message: "Authorization may be unsafe, passed state was changed in server. The passed state wasn't returned from auth server."
          });
        }
        if (qp.code) {
          delete oauth2.state;
          oauth2.auth.code = qp.code;
          oauth2.callback({auth: oauth2.auth, redirectUrl: redirectUrl});
        } else {
          let oauthErrorMsg;
          if (qp.error) {
            oauthErrorMsg = "["+qp.error+"]: " +
              (qp.error_description ? qp.error_description+ ". " : "no accessCode received from the server. ") +
              (qp.error_uri ? "More info: "+qp.error_uri : "");
          }
          oauth2.errCb({
            authId: oauth2.auth.name,
            source: "auth",
            level: "error",
            message: oauthErrorMsg || "[Authorization failed]: no accessCode received from the server."
          });
        }
      } else {
        oauth2.callback({auth: oauth2.auth, token: qp, isValid: isValid, redirectUrl: redirectUrl});
      }
      window.close();
    }
    if (document.readyState !== 'loading') {
      run();
    } else {
      document.addEventListener('DOMContentLoaded', function () {
        run();
      });
    }
  </script>
  </body>
  </html>
    """
  return HTMLResponse(content=html)

```

You can override any of them by setting a different value in the argument `swagger_ui_parameters`.
For example, to disable `deepLinking` you could pass these settings to `swagger_ui_parameters`:
[Python 3.8+](https://fastapi.tiangolo.com/how-to/configure-swagger-ui/#__tabbed_5_1)
```
fromfastapiimport FastAPI
app = FastAPI(swagger_ui_parameters={"deepLinking": False})
@app.get("/users/{username}")
async defread_user(username: str):
  return {"message": f"Hello {username}"}