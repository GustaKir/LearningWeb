Title: OAuth2 Scopes and Specifications
URL: https://fastapi.tiangolo.com/reference/security/
Summary: This section discusses OAuth2 scopes, specifically the 'items:read' scope, and highlights that the OAuth2 specification mandates the use of the fixed string 'password' for authentication. It mentions the strict requirements for field names 'username' and 'password', describes the optional 'scope' parameter for multiple permissions, and notes the recommendation for 'client_id'.
---

```

Note that for OAuth2 the scope `items:read` is a single scope in an opaque string. You could have custom internal logic to separate it by colon characters (`:`) or similar, and get the two parts `items` and `read`. Many applications do that to group and organize permissions, you could do it as well in your application, just know that that it is application specific, it's not part of the specification.
the OAuth2 spec says it is required and MUST be the fixed string "password".
This dependency is strict about it. If you want to be permissive, use instead the OAuth2PasswordRequestForm dependency class.
username: username string. The OAuth2 spec requires the exact field name "username". password: password string. The OAuth2 spec requires the exact field name "password". scope: Optional string. Several scopes (each one a string) separated by spaces. E.g. "items:read items:write users:read profile openid" client_id: optional string. OAuth2 recommends sending the client_id and client_secret (if any) using HTTP Basic auth, as: client_id:client_secret client_secret: optional string. OAuth2 recommends sending the client_id and client_secret (if any) using HTTP Basic auth, as: client_id:client_secret
PARAMETER | DESCRIPTION  
---|---  
`grant_type` |  The OAuth2 spec says it is required and MUST be the fixed string "password". This dependency is strict about it. If you want to be permissive, use instead the `OAuth2PasswordRequestForm` dependency class. **TYPE:** `str`  
`username` |  `username` string. The OAuth2 spec requires the exact field name `username`. **TYPE:** `str`  
`password` |  `password` string. The OAuth2 spec requires the exact field name `password". **TYPE:** `str`  
`scope` |  A single string with actually several scopes separated by spaces. Each scope is also a string. For example, a single string with: ```python "items:read items:write users:read profile openid" ```` would represent the scopes:
  * `items:read`
  * `items:write`
  * `users:read`
  * `profile`
  * `openid`

**TYPE:** `str` **DEFAULT:** `''`  
`client_id` |  If there's a `client_id`, it can be sent as part of the form fields. But the OAuth2 specification recommends sending the `client_id` and `client_secret` (if any) using HTTP Basic auth. **TYPE:** `Union[str, None]` **DEFAULT:** `None`  
`client_secret` |  If there's a `client_password` (and a `client_id`), they can be sent as part of the form fields. But the OAuth2 specification recommends sending the `client_id` and `client_secret` (if any) using HTTP Basic auth. **TYPE:** `Union[str, None]` **DEFAULT:** `None`  
Source code in `fastapi/security/oauth2.py`
```
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
```
| ```
def__init__(
  self,
  grant_type: Annotated[
    str,
    Form(pattern="^password$"),
    Doc(
"""
      The OAuth2 spec says it is required and MUST be the fixed string
      "password". This dependency is strict about it. If you want to be
      permissive, use instead the `OAuth2PasswordRequestForm` dependency
      class.
      """
    ),
  ],
  username: Annotated[
    str,
    Form(),
    Doc(
"""
      `username` string. The OAuth2 spec requires the exact field name
      `username`.
      """
    ),
  ],
  password: Annotated[
    str,
    Form(),
    Doc(
"""
      `password` string. The OAuth2 spec requires the exact field name
      `password".
      """
    ),
  ],
  scope: Annotated[
    str,
    Form(),
    Doc(
"""
      A single string with actually several scopes separated by spaces. Each
      scope is also a string.
      For example, a single string with:
  ```python
      "items:read items:write users:read profile openid"
  ````
      would represent the scopes:
      * `items:read`
      * `items:write`
      * `users:read`
      * `profile`
      * `openid`
      """
    ),
  ] = "",
  client_id: Annotated[
    Union[str, None],
    Form(),
    Doc(
"""
      If there's a `client_id`, it can be sent as part of the form fields.
      But the OAuth2 specification recommends sending the `client_id` and
      `client_secret` (if any) using HTTP Basic auth.
      """
    ),
  ] = None,
  client_secret: Annotated[
    Union[str, None],
    Form(),
    Doc(
"""
      If there's a `client_password` (and a `client_id`), they can be sent
      as part of the form fields. But the OAuth2 specification recommends
      sending the `client_id` and `client_secret` (if any) using HTTP Basic
      auth.
      """
    ),
  ] = None,
):
  super().__init__(
    grant_type=grant_type,
    username=username,
    password=password,
    scope=scope,
    client_id=client_id,
    client_secret=client_secret,
  )