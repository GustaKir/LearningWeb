Title: FastAPI Query Parameter Validations
URL: https://fastapi.tiangolo.com/tutorial/query-params-str-validations/
Summary: This document illustrates how to define query parameters in FastAPI with validations, using examples that include the use of `Union` and `Annotated` to specify default values and constraints like minimum length for input.
---

```
fromtypingimport Union
fromfastapiimport FastAPI, Query
app = FastAPI()
@app.get("/items/")
async defread_items(
  q: Union[str, None] = Query(default=None, title="Query string", min_length=3),
):
  results = {"items": [{"item_id": "Foo"}, {"item_id": "Bar"}]}
  if q:
    results.update({"q": q})
  return results

```

And a `description`:
[Python 3.10+](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#__tabbed_32_1)
```
fromtypingimport Annotated
fromfastapiimport FastAPI, Query
app = FastAPI()
@app.get("/items/")
async defread_items(
  q: Annotated[
    str | None,
    Query(
      title="Query string",
      description="Query string for the items to search in the database that have a good match",
      min_length=3,
    ),
  ] = None,
):
  results = {"items": [{"item_id": "Foo"}, {"item_id": "Bar"}]}
  if q:
    results.update({"q": q})
  return results

```

ðŸ¤“ Other versions and variants
[Python 3.9+](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#__tabbed_33_1)[Python 3.8+](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#__tabbed_33_2)[Python 3.10+ - non-Annotated](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#__tabbed_33_3)[Python 3.8+ - non-Annotated](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#__tabbed_33_4)
```
fromtypingimport Annotated, Union
fromfastapiimport FastAPI, Query
app = FastAPI()
@app.get("/items/")
async defread_items(
  q: Annotated[
    Union[str, None],
    Query(
      title="Query string",
      description="Query string for the items to search in the database that have a good match",
      min_length=3,
    ),
  ] = None,
):
  results = {"items": [{"item_id": "Foo"}, {"item_id": "Bar"}]}
  if q:
    results.update({"q": q})
  return results

```

```
fromtypingimport Union
fromfastapiimport FastAPI, Query
fromtyping_extensionsimport Annotated
app = FastAPI()
@app.get("/items/")
async defread_items(
  q: Annotated[
    Union[str, None],
    Query(
      title="Query string",
      description="Query string for the items to search in the database that have a good match",
      min_length=3,
    ),
  ] = None,
):
  results = {"items": [{"item_id": "Foo"}, {"item_id": "Bar"}]}
  if q:
    results.update({"q": q})
  return results

```

Tip
Prefer to use the `Annotated` version if possible.
```
fromfastapiimport FastAPI, Query
app = FastAPI()
@app.get("/items/")
async defread_items(
  q: str | None = Query(
    default=None,
    title="Query string",
    description="Query string for the items to search in the database that have a good match",
    min_length=3,
  ),
):
  results = {"items": [{"item_id": "Foo"}, {"item_id": "Bar"}]}
  if q:
    results.update({"q": q})
  return results

```

Tip
Prefer to use the `Annotated` version if possible.
```
fromtypingimport Union
fromfastapiimport FastAPI, Query
app = FastAPI()
@app.get("/items/")
async defread_items(
  q: Union[str, None] = Query(
    default=None,
    title="Query string",
    description="Query string for the items to search in the database that have a good match",
    min_length=3,
  ),
):
  results = {"items": [{"item_id": "Foo"}, {"item_id": "Bar"}]}
  if q:
    results.update({"q": q})
  return results

```

## Alias parameters[Â¶](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#alias-parameters "Permanent link")
Imagine that you want the parameter to be `item-query`.
Like in:
```
http://127.0.0.1:8000/items/?item-query=foobaritems

```

But `item-query` is not a valid Python variable name.
The closest would be `item_query`.
But you still need it to be exactly `item-query`...
Then you can declare an `alias`, and that alias is what will be used to find the parameter value:
[Python 3.10+](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#__tabbed_34_1)
```
fromtypingimport Annotated
fromfastapiimport FastAPI, Query
app = FastAPI()
@app.get("/items/")
async defread_items(q: Annotated[str | None, Query(alias="item-query")] = None):
  results = {"items": [{"item_id": "Foo"}, {"item_id": "Bar"}]}
  if q:
    results.update({"q": q})
  return results

```

ðŸ¤“ Other versions and variants
[Python 3.9+](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#__tabbed_35_1)[Python 3.8+](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#__tabbed_35_2)[Python 3.10+ - non-Annotated](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#__tabbed_35_3)[Python 3.8+ - non-Annotated](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#__tabbed_35_4)
```
fromtypingimport Annotated, Union
fromfastapiimport FastAPI, Query
app = FastAPI()
@app.get("/items/")
async defread_items(q: Annotated[Union[str, None], Query(alias="item-query")] = None):
  results = {"items": [{"item_id": "Foo"}, {"item_id": "Bar"}]}
  if q:
    results.update({"q": q})
  return results

```