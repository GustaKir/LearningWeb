Title: Deployment Concepts
URL: https://fastapi.tiangolo.com/deployment/concepts/
Summary: This section outlines key concepts for deploying FastAPI applications, including running processes automatically on startup, handling restarts, and error management. It discusses tools useful for these tasks and provides guidelines on managing both small errors and crashes.
---

epts/#run-automatically-on-startup)
          * [ Separate Program  ](https://fastapi.tiangolo.com/deployment/concepts/#separate-program)
          * [ Example Tools to Run at Startup  ](https://fastapi.tiangolo.com/deployment/concepts/#example-tools-to-run-at-startup)
        * [ Restarts  ](https://fastapi.tiangolo.com/deployment/concepts/#restarts)
          * [ We Make Mistakes  ](https://fastapi.tiangolo.com/deployment/concepts/#we-make-mistakes)
          * [ Small Errors Automatically Handled  ](https://fastapi.tiangolo.com/deployment/concepts/#small-errors-automatically-handled)
          * [ Bigger Errors - Crashes  ](https://fastapi.tiangolo.com/deployment/concepts/#bigger-errors-crashes)
          * [ Restart After Crash  ](https://fastapi.tiangolo.com/deployment/concepts/#restart-after-crash)
          * [ Example Tools to Restart Automatically  ](https://fastapi.tiangolo.com/deployment/concepts/#example-tools-to-restart-automatically)
        * [ Replication - Processes and Memory  ](https://fastapi.tiangolo.com/deployment/concepts/#replication-processes-and-memory)
          * [ Multiple Processes - Workers  ](https://fastapi.tiangolo.com/deployment/concepts/#multiple-processes-workers)
          * [ Worker Processes and Ports  ](https://fastapi.tiangolo.com/deployment/concepts/#worker-processes-and-ports)
          * [ Memory per Process  ](https://fastapi.tiangolo.com/deployment/concepts/#memory-per-process)
          * [ Server Memory  ](https://fastapi.tiangolo.com/deployment/concepts/#server-memory)
          * [ Multiple Processes - An Example  ](https://fastapi.tiangolo.com/deployment/concepts/#multiple-processes-an-example)
          * [ Examples of Replication Tools and Strategies  ](https://fastapi.tiangolo.com/deployment/concepts/#examples-of-replication-tools-and-strategies)
        * [ Previous Steps Before Starting  ](https://fastapi.tiangolo.com/deployment/concepts/#previous-steps-before-starting)
          * [ Examples of Previous Steps Strategies  ](https://fastapi.tiangolo.com/deployment/concepts/#examples-of-previous-steps-strategies)
        * [ Resource Utilization  ](https://fastapi.tiangolo.com/deployment/concepts/#resource-utilization)
        * [ Recap  ](https://fastapi.tiangolo.com/deployment/concepts/#recap)
      * [ Deploy FastAPI on Cloud Providers  ](https://fastapi.tiangolo.com/deployment/cloud/)
      * [ Server Workers - Uvicorn with Workers  ](https://fastapi.tiangolo.com/deployment/server-workers/)
      * [ FastAPI in Containers - Docker  ](https://fastapi.tiangolo.com/deployment/docker/)
    * [ How To - Recipes  ](https://fastapi.tiangolo.com/how-to/)
How To - Recipes 
      * [ General - How To - Recipes  ](https://fastapi.tiangolo.com/how-to/general/)
      * [ GraphQL  ](https://fastapi.tiangolo.com/how-to/graphql/)
      * [ Custom Request and APIRoute class  ](https://fastapi.tiangolo.com/how-to/custom-request-and-route/)
      * [ Conditional OpenAPI  ](https://fastapi.tiangolo.com/how-to/conditional-openapi/)
      * [ Extending OpenAPI  ](https://fastapi.tiangolo.com/how-to/extending-openapi/)
      * [ Separate OpenAPI Schemas for Input and Output or Not  ](https://fastapi.tiangolo.com/how-to/separate-openapi-schemas/)
      * [ Custom Docs UI Static Assets (Self-Hosting)  ](https://fastapi.tiangolo.com/how-to/custom-docs-ui-assets/)
      * [ Configure Swagger UI  ](https://fastapi.tiangolo.com/how-to/configure-swagger-ui/)
      * [ Testing a Database  ](https://fastapi.tiangolo.com/how-to/testing-database/)
  * [ Reference  ](https://fastapi.tiangolo.com/reference/)
Reference 
    * [ `FastAPI` class  ](https://fastapi.tiangolo.com/reference/fastapi/)
    * [ Request Parameters  ](https://fastapi.tiangolo.com/reference/parameters/)
    * [ Status Codes  ](https://fastapi.tiangolo.com/reference/status/)
    * [ `UploadFile` class  ](https://fastapi.tiangolo.com/reference/uploadfile/)
    * [ Exceptions - `HTTPException` and `WebSocketException` ](https://fastapi.tiangolo.com/reference/exceptions/)
    * [ Dependencies - `Depends()` and `Security()` ](https://fastapi.tiangolo.com/reference/dependencies/)
    * [ `APIRouter` class  ](https://fastapi.tiangolo.com/reference/apirouter/)
    * [ Background Tasks - `BackgroundTasks` ](https://fastapi.tiangolo.com/reference/background/)
    * [ `Request` class  ](https://fastapi.tiangolo.com/reference/request/)
    * [ WebSockets  ](https://fastapi.tiangolo.com/reference/websockets/)
    * [ `HTTPConnection` class  ](https://fastapi.tiangolo.com/reference/httpconnection/)
    * [ `Response` class  ](https://fastapi.tiangolo.com/reference/response/)
    * [ Custom Response Classes - File, HTML, Redirect, Streaming, etc.