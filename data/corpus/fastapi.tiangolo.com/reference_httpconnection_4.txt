Title: FastAPI HTTP Connection Reference
URL: https://fastapi.tiangolo.com/reference/httpconnection/
Summary: This documentation chunk references various components of FastAPI, including middleware, OpenAPI documentation, security tools, JSON encoders, static file handling, templating with Jinja2, and the TestClient. It serves as a guide for developers looking to utilize these features effectively.
---

](https://fastapi.tiangolo.com/reference/responses/)
    * [ Middleware  ](https://fastapi.tiangolo.com/reference/middleware/)
    * [ OpenAPI  ](https://fastapi.tiangolo.com/reference/openapi/)
OpenAPI 
      * [ OpenAPI `docs` ](https://fastapi.tiangolo.com/reference/openapi/docs/)
      * [ OpenAPI `models` ](https://fastapi.tiangolo.com/reference/openapi/models/)
    * [ Security Tools  ](https://fastapi.tiangolo.com/reference/security/)
    * [ Encoders - `jsonable_encoder` ](https://fastapi.tiangolo.com/reference/encoders/)
    * [ Static Files - `StaticFiles` ](https://fastapi.tiangolo.com/reference/staticfiles/)
    * [ Templating - `Jinja2Templates` ](https://fastapi.tiangolo.com/reference/templating/)
    * [ Test Client - `TestClient` ](https://fastapi.tiangolo.com/reference/testclient/)
  * [ FastAPI People  ](https://fastapi.tiangolo.com/fastapi-people/)
  * [ Resources  ](https://fastapi.tiangolo.com/resources/)
Resources 
    * [ Help FastAPI - Get Help  ](https://fastapi.tiangolo.com/help-fastapi/)
    * [ Development - Contributing  ](https://fastapi.tiangolo.com/contributing/)
    * [ Full Stack FastAPI Template  ](https://fastapi.tiangolo.com/project-generation/)
    * [ External Links and Articles  ](https://fastapi.tiangolo.com/external-links/)
    * [ FastAPI and friends newsletter  ](https://fastapi.tiangolo.com/newsletter/)
    * [ Repository Management Tasks  ](https://fastapi.tiangolo.com/management-tasks/)
  * [ About  ](https://fastapi.tiangolo.com/about/)
About 
    * [ Alternatives, Inspiration and Comparisons  ](https://fastapi.tiangolo.com/alternatives/)
    * [ History, Design and Future  ](https://fastapi.tiangolo.com/history-design-future/)
    * [ Benchmarks  ](https://fastapi.tiangolo.com/benchmarks/)
    * [ Repository Management  ](https://fastapi.tiangolo.com/management/)
  * [ Release Notes  ](https://fastapi.tiangolo.com/release-notes/)


Table of contents 
  * [ HTTPConnection  ](https://fastapi.tiangolo.com/reference/httpconnection/#fastapi.requests.HTTPConnection)
    * [ scope  ](https://fastapi.tiangolo.com/reference/httpconnection/#fastapi.requests.HTTPConnection.scope)
    * [ app  ](https://fastapi.tiangolo.com/reference/httpconnection/#fastapi.requests.HTTPConnection.app)
    * [ url  ](https://fastapi.tiangolo.com/reference/httpconnection/#fastapi.requests.HTTPConnection.url)
    * [ base_url  ](https://fastapi.tiangolo.com/reference/httpconnection/#fastapi.requests.HTTPConnection.base_url)
    * [ headers  ](https://fastapi.tiangolo.com/reference/httpconnection/#fastapi.requests.HTTPConnection.headers)
    * [ query_params  ](https://fastapi.tiangolo.com/reference/httpconnection/#fastapi.requests.HTTPConnection.query_params)
    * [ path_params  ](https://fastapi.tiangolo.com/reference/httpconnection/#fastapi.requests.HTTPConnection.path_params)
    * [ cookies  ](https://fastapi.tiangolo.com/reference/httpconnection/#fastapi.requests.HTTPConnection.cookies)
    * [ client  ](https://fastapi.tiangolo.com/reference/httpconnection/#fastapi.requests.HTTPConnection.client)
    * [ session  ](https://fastapi.tiangolo.com/reference/httpconnection/#fastapi.requests.HTTPConnection.session)
    * [ auth  ](https://fastapi.tiangolo.com/reference/httpconnection/#fastapi.requests.HTTPConnection.auth)
    * [ user  ](https://fastapi.tiangolo.com/reference/httpconnection/#fastapi.requests.HTTPConnection.user)
    * [ state  ](https://fastapi.tiangolo.com/reference/httpconnection/#fastapi.requests.HTTPConnection.state)
    * [ url_for  ](https://fastapi.tiangolo.com/reference/httpconnection/#fastapi.requests.HTTPConnection.url_for)


  1. [ FastAPI  ](https://fastapi.tiangolo.com/)
  2. [ Reference  ](https://fastapi.tiangolo.com/reference/)


# `HTTPConnection` class[¶](https://fastapi.tiangolo.com/reference/httpconnection/#httpconnection-class "Permanent link")
When you want to define dependencies that should be compatible with both HTTP and WebSockets, you can define a parameter that takes an `HTTPConnection` instead of a `Request` or a `WebSocket`.
You can import it from `fastapi.requests`:
```
fromfastapi.requestsimport HTTPConnection

```

##  fastapi.requests.HTTPConnection [¶](https://fastapi.tiangolo.com/reference/httpconnection/#fastapi.requests.HTTPConnection "Permanent link")
```
HTTPConnection(scope, receive=None)

```

Bases: `Mapping[str, Any]`
A base class for incoming HTTP connections, that is used to provide any functionality that is common to both `Request` and `WebSocket`.
PARAMETER | DESCRIPTION  
---|---  
`scope` |  **TYPE:** `Scope`  
`receive` |  **TYPE:** `Receive | None` **DEFAULT:** `None`  
Source code in `starlette/requests.py`
```
76
77
78
```
| ```
def__init__(self, scope: Scope, receive: Receive | None = None) -> None:
  assert scope["type"] in ("http", "websocket")
  self.scope = scope