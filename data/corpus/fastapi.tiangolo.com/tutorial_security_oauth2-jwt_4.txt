Title: FastAPI Security: OAuth2 with JWT
URL: https://fastapi.tiangolo.com/tutorial/security/oauth2-jwt/
Summary: This section provides an overview of implementing security in FastAPI applications using OAuth2 and JWT (JSON Web Tokens). It covers the relevant tools and references necessary for setting up authentication, including middleware and response handling.
---

](https://fastapi.tiangolo.com/reference/responses/)
    * [ Middleware  ](https://fastapi.tiangolo.com/reference/middleware/)
    * [ OpenAPI  ](https://fastapi.tiangolo.com/reference/openapi/)
OpenAPI 
      * [ OpenAPI `docs` ](https://fastapi.tiangolo.com/reference/openapi/docs/)
      * [ OpenAPI `models` ](https://fastapi.tiangolo.com/reference/openapi/models/)
    * [ Security Tools  ](https://fastapi.tiangolo.com/reference/security/)
    * [ Encoders - `jsonable_encoder` ](https://fastapi.tiangolo.com/reference/encoders/)
    * [ Static Files - `StaticFiles` ](https://fastapi.tiangolo.com/reference/staticfiles/)
    * [ Templating - `Jinja2Templates` ](https://fastapi.tiangolo.com/reference/templating/)
    * [ Test Client - `TestClient` ](https://fastapi.tiangolo.com/reference/testclient/)
  * [ FastAPI People  ](https://fastapi.tiangolo.com/fastapi-people/)
  * [ Resources  ](https://fastapi.tiangolo.com/resources/)
Resources 
    * [ Help FastAPI - Get Help  ](https://fastapi.tiangolo.com/help-fastapi/)
    * [ Development - Contributing  ](https://fastapi.tiangolo.com/contributing/)
    * [ Full Stack FastAPI Template  ](https://fastapi.tiangolo.com/project-generation/)
    * [ External Links and Articles  ](https://fastapi.tiangolo.com/external-links/)
    * [ FastAPI and friends newsletter  ](https://fastapi.tiangolo.com/newsletter/)
    * [ Repository Management Tasks  ](https://fastapi.tiangolo.com/management-tasks/)
  * [ About  ](https://fastapi.tiangolo.com/about/)
About 
    * [ Alternatives, Inspiration and Comparisons  ](https://fastapi.tiangolo.com/alternatives/)
    * [ History, Design and Future  ](https://fastapi.tiangolo.com/history-design-future/)
    * [ Benchmarks  ](https://fastapi.tiangolo.com/benchmarks/)
    * [ Repository Management  ](https://fastapi.tiangolo.com/management/)
  * [ Release Notes  ](https://fastapi.tiangolo.com/release-notes/)


Table of contents 
  * [ About JWT  ](https://fastapi.tiangolo.com/tutorial/security/oauth2-jwt/#about-jwt)
  * [ Install `PyJWT` ](https://fastapi.tiangolo.com/tutorial/security/oauth2-jwt/#install-pyjwt)
  * [ Password hashing  ](https://fastapi.tiangolo.com/tutorial/security/oauth2-jwt/#password-hashing)
    * [ Why use password hashing  ](https://fastapi.tiangolo.com/tutorial/security/oauth2-jwt/#why-use-password-hashing)
  * [ Install `passlib` ](https://fastapi.tiangolo.com/tutorial/security/oauth2-jwt/#install-passlib)
  * [ Hash and verify the passwords  ](https://fastapi.tiangolo.com/tutorial/security/oauth2-jwt/#hash-and-verify-the-passwords)
  * [ Handle JWT tokens  ](https://fastapi.tiangolo.com/tutorial/security/oauth2-jwt/#handle-jwt-tokens)
  * [ Update the dependencies  ](https://fastapi.tiangolo.com/tutorial/security/oauth2-jwt/#update-the-dependencies)
  * [ Update the `/token` _path operation_ ](https://fastapi.tiangolo.com/tutorial/security/oauth2-jwt/#update-the-token-path-operation)
    * [ Technical details about the JWT "subject" `sub` ](https://fastapi.tiangolo.com/tutorial/security/oauth2-jwt/#technical-details-about-the-jwt-subject-sub)
  * [ Check it  ](https://fastapi.tiangolo.com/tutorial/security/oauth2-jwt/#check-it)
  * [ Advanced usage with `scopes` ](https://fastapi.tiangolo.com/tutorial/security/oauth2-jwt/#advanced-usage-with-scopes)
  * [ Recap  ](https://fastapi.tiangolo.com/tutorial/security/oauth2-jwt/#recap)


  1. [ FastAPI  ](https://fastapi.tiangolo.com/)
  2. [ Learn  ](https://fastapi.tiangolo.com/learn/)
  3. [ Tutorial - User Guide  ](https://fastapi.tiangolo.com/tutorial/)
  4. [ Security  ](https://fastapi.tiangolo.com/tutorial/security/)


# OAuth2 with Password (and hashing), Bearer with JWT tokens[¶](https://fastapi.tiangolo.com/tutorial/security/oauth2-jwt/#oauth2-with-password-and-hashing-bearer-with-jwt-tokens "Permanent link")
Now that we have all the security flow, let's make the application actually secure, using JWT tokens and secure password hashing.
This code is something you can actually use in your application, save the password hashes in your database, etc.
We are going to start from where we left in the previous chapter and increment it.
## About JWT[¶](https://fastapi.tiangolo.com/tutorial/security/oauth2-jwt/#about-jwt "Permanent link")
JWT means "JSON Web Tokens".
It's a standard to codify a JSON object in a long dense string without spaces. It looks like this:
```
eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c