Title: Full Stack FastAPI Template Overview
URL: https://fastapi.tiangolo.com/project-generation/
Summary: The Full Stack FastAPI Template provides a flexible and customizable starting point for projects, featuring initial setup, security, database integrations, and pre-built API endpoints. It utilizes FastAPI for the backend and SQLModel for database interactions.
---

# Full Stack FastAPI Template[¶](https://fastapi.tiangolo.com/project-generation/#full-stack-fastapi-template "Permanent link")
Templates, while typically come with a specific setup, are designed to be flexible and customizable. This allows you to modify and adapt them to your project's requirements, making them an excellent starting point. 🏁
You can use this template to get started, as it includes a lot of the initial set up, security, database and some API endpoints already done for you.
GitHub Repository: [Full Stack FastAPI Template](https://github.com/tiangolo/full-stack-fastapi-template)
## Full Stack FastAPI Template - Technology Stack and Features[¶](https://fastapi.tiangolo.com/project-generation/#full-stack-fastapi-template-technology-stack-and-features "Permanent link")
  * ⚡ [**FastAPI**](https://fastapi.tiangolo.com) for the Python backend API.
    * 🧰 [SQLModel](https://sqlmodel.tiangolo.com) for the Python SQL database interactions (ORM).
    * 🔍 [Pydantic](https://docs.pydantic.dev), used by FastAPI, for the data validation and settings management.
    * 💾 [PostgreSQL](https://www.postgresql.org) as the SQL database.
  * 🚀 [React](https://react.dev) for the frontend.
    * 💃 Using TypeScript, hooks, [Vite](https://vitejs.dev), and other parts of a modern frontend stack.
    * 🎨 [Chakra UI](https://chakra-ui.com) for the frontend components.
    * 🤖 An automatically generated frontend client.
    * 🧪 [Playwright](https://playwright.dev) for End-to-End testing.
    * 🦇 Dark mode support.
  * 🐋 [Docker Compose](https://www.docker.com) for development and production.
  * 🔒 Secure password hashing by default.
  * 🔑 JWT token authentication.
  * 📫 Email based password recovery.
  * ✅ Tests with [Pytest](https://pytest.org).
  * 📞 [Traefik](https://traefik.io) as a reverse proxy / load balancer.
  * 🚢 Deployment instructions using Docker Compose, including how to set up a frontend Traefik proxy to handle automatic HTTPS certificates.
  * 🏭 CI (continuous integration) and CD (continuous deployment) based on GitHub Actions.

Was this page helpful? 
Thanks for your feedback! 
Thanks for your feedback! 
Back to top  [ Previous  Development - Contributing  ](https://fastapi.tiangolo.com/contributing/) [ Next  External Links and Articles  ](https://fastapi.tiangolo.com/external-links/)
The FastAPI trademark is owned by [@tiangolo](https://tiangolo.com) and is registered in the US and across other regions 
Made with [ Material for MkDocs ](https://squidfunk.github.io/mkdocs-material/)
[ ](https://github.com/fastapi/fastapi "github.com") [ ](https://discord.gg/VQjSZaeJmf "discord.gg") [ ](https://twitter.com/fastapi "twitter.com") [ ](https://www.linkedin.com/in/tiangolo "www.linkedin.com") [ ](https://dev.to/tiangolo "dev.to") [ ](https://medium.com/@tiangolo "medium.com") [ ](https://tiangolo.com "tiangolo.com")