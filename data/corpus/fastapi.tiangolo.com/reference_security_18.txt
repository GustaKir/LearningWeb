Title: OAuth2 Security in FastAPI
URL: https://fastapi.tiangolo.com/reference/security/
Summary: This documentation chunk outlines the initialization parameters for setting up OAuth2 authorization in FastAPI, including the URLs for authorization, token acquisition, and optional parameters like refresh URL, scheme name, and authorization scopes.
---

```
494
495
496
497
498
499
500
501
502
503
504
505
506
507
508
509
510
511
512
513
514
515
516
517
518
519
520
521
522
523
524
525
526
527
528
529
530
531
532
533
534
535
536
537
538
539
540
541
542
543
544
545
546
547
548
549
550
551
552
553
554
555
556
557
558
559
560
561
562
563
564
565
566
567
568
569
570
571
572
573
574
575
576
577
578
579
580
581
```
| ```
def__init__(
  self,
  authorizationUrl: str,
  tokenUrl: Annotated[
    str,
    Doc(
"""
      The URL to obtain the OAuth2 token.
      """
    ),
  ],
  refreshUrl: Annotated[
    Optional[str],
    Doc(
"""
      The URL to refresh the token and obtain a new one.
      """
    ),
  ] = None,
  scheme_name: Annotated[
    Optional[str],
    Doc(
"""
      Security scheme name.
      It will be included in the generated OpenAPI (e.g. visible at `/docs`).
      """
    ),
  ] = None,
  scopes: Annotated[
    Optional[Dict[str, str]],
    Doc(
"""
      The OAuth2 scopes that would be required by the *path operations* that
      use this dependency.
      """
    ),
  ] = None,
  description: Annotated[
    Optional[str],
    Doc(
"""
      Security scheme description.
      It will be included in the generated OpenAPI (e.g. visible at `/docs`).
      """
    ),
  ] = None,
  auto_error: Annotated[
    bool,
    Doc(
"""
      By default, if no HTTP Authorization header is provided, required for
      OAuth2 authentication, it will automatically cancel the request and
      send the client an error.
      If `auto_error` is set to `False`, when the HTTP Authorization header
      is not available, instead of erroring out, the dependency result will
      be `None`.
      This is useful when you want to have optional authentication.
      It is also useful when you want to have authentication that can be
      provided in one of multiple optional ways (for example, with OAuth2
      or in a cookie).
      """
    ),
  ] = True,
):
  if not scopes:
    scopes = {}
  flows = OAuthFlowsModel(
    authorizationCode=cast(
      Any,
      {
        "authorizationUrl": authorizationUrl,
        "tokenUrl": tokenUrl,
        "refreshUrl": refreshUrl,
        "scopes": scopes,
      },
    )
  )
  super().__init__(
    flows=flows,
    scheme_name=scheme_name,
    description=description,
    auto_error=auto_error,
  )

```
  
---|---  
###  model `instance-attribute` [¶](https://fastapi.tiangolo.com/reference/security/#fastapi.security.OAuth2AuthorizationCodeBearer.model "Permanent link")
```
model = OAuth2[](https://fastapi.tiangolo.com/reference/openapi/models/#fastapi.openapi.models.OAuth2 "<code class="doc-symbol doc-symbol-heading doc-symbol-class"></code>      <span class="doc doc-object-name doc-class-name">OAuth2</span> \(<code>fastapi.openapi.models.OAuth2</code>\)")(
  flows=cast(OAuthFlows[](https://fastapi.tiangolo.com/reference/openapi/models/#fastapi.openapi.models.OAuthFlows "<code class="doc-symbol doc-symbol-heading doc-symbol-class"></code>      <span class="doc doc-object-name doc-class-name">OAuthFlows</span> \(<code>fastapi.openapi.models.OAuthFlows</code>\)"), flows), description=description
)

```

###  scheme_name `instance-attribute` [¶](https://fastapi.tiangolo.com/reference/security/#fastapi.security.OAuth2AuthorizationCodeBearer.scheme_name "Permanent link")
```
scheme_name = scheme_name or __name__

```

###  auto_error `instance-attribute` [¶](https://fastapi.tiangolo.com/reference/security/#fastapi.security.OAuth2AuthorizationCodeBearer.auto_error "Permanent link")
```
auto_error = auto_error

```

##  fastapi.security.OAuth2PasswordBearer [¶](https://fastapi.tiangolo.com/reference/security/#fastapi.security.OAuth2PasswordBearer "Permanent link")
```
OAuth2PasswordBearer(
  tokenUrl,
  scheme_name=None,
  scopes=None,
  description=None,
  auto_error=True,
)