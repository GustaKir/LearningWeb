Title: Using PATCH for Partial Updates in FastAPI
URL: https://fastapi.tiangolo.com/tutorial/body-updates/
Summary: This section explains the use of the PATCH method for partial updates in FastAPI. It emphasizes the need for an input model with optional attributes to allow for receiving updates that can omit certain fields. The document also references a method to differentiate between models used for updates versus those used for creation.
---

```

Tip
You can actually use this same technique with an HTTP `PUT` operation.
But the example here uses `PATCH` because it was created for these use cases.
Note
Notice that the input model is still validated.
So, if you want to receive partial updates that can omit all the attributes, you need to have a model with all the attributes marked as optional (with default values or `None`).
To distinguish from the models with all optional values for **updates** and models with required values for **creation** , you can use the ideas described in [Extra Models](https://fastapi.tiangolo.com/tutorial/extra-models/).
Was this page helpful? 
Thanks for your feedback! 
Thanks for your feedback! 
Back to top  [ Previous  JSON Compatible Encoder  ](https://fastapi.tiangolo.com/tutorial/encoder/) [ Next  Dependencies  ](https://fastapi.tiangolo.com/tutorial/dependencies/)
The FastAPI trademark is owned by [@tiangolo](https://tiangolo.com) and is registered in the US and across other regions 
Made with [ Material for MkDocs ](https://squidfunk.github.io/mkdocs-material/)
[ ](https://github.com/fastapi/fastapi "github.com") [ ](https://discord.gg/VQjSZaeJmf "discord.gg") [ ](https://twitter.com/fastapi "twitter.com") [ ](https://www.linkedin.com/in/tiangolo "www.linkedin.com") [ ](https://dev.to/tiangolo "dev.to") [ ](https://medium.com/@tiangolo "medium.com") [ ](https://tiangolo.com "tiangolo.com")