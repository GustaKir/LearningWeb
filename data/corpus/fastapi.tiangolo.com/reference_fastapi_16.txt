Title: FastAPI Item Handling for Input and Output
URL: https://fastapi.tiangolo.com/reference/fastapi/
Summary: This section describes how the `Item` class is utilized in FastAPI for handling request and response bodies. While `tags` is optional in input requests, it is always included in output responses due to its default value. This necessitates the creation of distinct schemas for input and output.
---

```
      When `Item` is used for input, a request body, `tags` is not required,
      the client doesn't have to provide it.
      But when using `Item` for output, for a response body, `tags` is always
      available because it has a default value, even if it's just an empty
      list. So, the client should be able to always expect it.
      In this case, there would be two different schemas, one for input and
      another one for output.
      """
    ),
  ] = True,
  **extra: Annotated[
    Any,
    Doc(
"""
      Extra keyword arguments to be stored in the app, not used by FastAPI
      anywhere.
      """
    ),
  ],
) -> None:
  self.debug = debug
  self.title = title
  self.summary = summary
  self.description = description
  self.version = version
  self.terms_of_service = terms_of_service
  self.contact = contact
  self.license_info = license_info
  self.openapi_url = openapi_url
  self.openapi_tags = openapi_tags
  self.root_path_in_servers = root_path_in_servers
  self.docs_url = docs_url
  self.redoc_url = redoc_url
  self.swagger_ui_oauth2_redirect_url = swagger_ui_oauth2_redirect_url
  self.swagger_ui_init_oauth = swagger_ui_init_oauth
  self.swagger_ui_parameters = swagger_ui_parameters
  self.servers = servers or []
  self.separate_input_output_schemas = separate_input_output_schemas
  self.extra = extra
  self.openapi_version: Annotated[
    str,
    Doc(
"""
      The version string of OpenAPI.
      FastAPI will generate OpenAPI version 3.1.0, and will output that as
      the OpenAPI version. But some tools, even though they might be
      compatible with OpenAPI 3.1.0, might not recognize it as a valid.
      So you could override this value to trick those tools into using
      the generated OpenAPI. Have in mind that this is a hack. But if you
      avoid using features added in OpenAPI 3.1.0, it might work for your
      use case.
      This is not passed as a parameter to the `FastAPI` class to avoid
      giving the false idea that FastAPI would generate a different OpenAPI
      schema. It is only available as an attribute.
      **Example**
  ```python
      from fastapi import FastAPI
      app = FastAPI()
      app.openapi_version = "3.0.2"