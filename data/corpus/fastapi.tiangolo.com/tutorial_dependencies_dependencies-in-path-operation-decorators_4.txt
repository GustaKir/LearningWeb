Title: Dependencies in Path Operation Decorators
URL: https://fastapi.tiangolo.com/tutorial/dependencies/dependencies-in-path-operation-decorators/
Summary: This document covers how to add dependencies to path operation decorators in FastAPI, including handling dependency errors, managing return values, specifying dependency requirements, and raising exceptions. It also addresses using dependencies for a group of path operations.
---

Table of contents 
  * [ Add `dependencies` to the _path operation decorator_ ](https://fastapi.tiangolo.com/tutorial/dependencies/dependencies-in-path-operation-decorators/#add-dependencies-to-the-path-operation-decorator)
  * [ Dependencies errors and return values  ](https://fastapi.tiangolo.com/tutorial/dependencies/dependencies-in-path-operation-decorators/#dependencies-errors-and-return-values)
    * [ Dependency requirements  ](https://fastapi.tiangolo.com/tutorial/dependencies/dependencies-in-path-operation-decorators/#dependency-requirements)
    * [ Raise exceptions  ](https://fastapi.tiangolo.com/tutorial/dependencies/dependencies-in-path-operation-decorators/#raise-exceptions)
    * [ Return values  ](https://fastapi.tiangolo.com/tutorial/dependencies/dependencies-in-path-operation-decorators/#return-values)
  * [ Dependencies for a group of _path operations_ ](https://fastapi.tiangolo.com/tutorial/dependencies/dependencies-in-path-operation-decorators/#dependencies-for-a-group-of-path-operations)
  * [ Global Dependencies  ](https://fastapi.tiangolo.com/tutorial/dependencies/dependencies-in-path-operation-decorators/#global-dependencies)


  1. [ FastAPI  ](https://fastapi.tiangolo.com/)
  2. [ Learn  ](https://fastapi.tiangolo.com/learn/)
  3. [ Tutorial - User Guide  ](https://fastapi.tiangolo.com/tutorial/)
  4. [ Dependencies  ](https://fastapi.tiangolo.com/tutorial/dependencies/)


# Dependencies in path operation decorators[Â¶](https://fastapi.tiangolo.com/tutorial/dependencies/dependencies-in-path-operation-decorators/#dependencies-in-path-operation-decorators "Permanent link")
In some cases you don't really need the return value of a dependency inside your _path operation function_.
Or the dependency doesn't return a value.
But you still need it to be executed/solved.
For those cases, instead of declaring a _path operation function_ parameter with `Depends`, you can add a `list` of `dependencies` to the _path operation decorator_.
## Add `dependencies` to the _path operation decorator_[Â¶](https://fastapi.tiangolo.com/tutorial/dependencies/dependencies-in-path-operation-decorators/#add-dependencies-to-the-path-operation-decorator "Permanent link")
The _path operation decorator_ receives an optional argument `dependencies`.
It should be a `list` of `Depends()`:
[Python 3.9+](https://fastapi.tiangolo.com/tutorial/dependencies/dependencies-in-path-operation-decorators/#__tabbed_1_1)
```
fromtypingimport Annotated
fromfastapiimport Depends, FastAPI, Header, HTTPException
app = FastAPI()
async defverify_token(x_token: Annotated[str, Header()]):
  if x_token != "fake-super-secret-token":
    raise HTTPException(status_code=400, detail="X-Token header invalid")
async defverify_key(x_key: Annotated[str, Header()]):
  if x_key != "fake-super-secret-key":
    raise HTTPException(status_code=400, detail="X-Key header invalid")
  return x_key
@app.get("/items/", dependencies=[Depends(verify_token), Depends(verify_key)])
async defread_items():
  return [{"item": "Foo"}, {"item": "Bar"}]

```

ðŸ¤“ Other versions and variants
[Python 3.8+](https://fastapi.tiangolo.com/tutorial/dependencies/dependencies-in-path-operation-decorators/#__tabbed_2_1)[Python 3.8+ - non-Annotated](https://fastapi.tiangolo.com/tutorial/dependencies/dependencies-in-path-operation-decorators/#__tabbed_2_2)
```
fromfastapiimport Depends, FastAPI, Header, HTTPException
fromtyping_extensionsimport Annotated
app = FastAPI()
async defverify_token(x_token: Annotated[str, Header()]):
  if x_token != "fake-super-secret-token":
    raise HTTPException(status_code=400, detail="X-Token header invalid")
async defverify_key(x_key: Annotated[str, Header()]):
  if x_key != "fake-super-secret-key":
    raise HTTPException(status_code=400, detail="X-Key header invalid")
  return x_key
@app.get("/items/", dependencies=[Depends(verify_token), Depends(verify_key)])
async defread_items():
  return [{"item": "Foo"}, {"item": "Bar"}]

```

Tip
Prefer to use the `Annotated` version if possible.
```
fromfastapiimport Depends, FastAPI, Header, HTTPException
app = FastAPI()
async defverify_token(x_token: str = Header()):
  if x_token != "fake-super-secret-token":
    raise HTTPException(status_code=400, detail="X-Token header invalid")
async defverify_key(x_key: str = Header()):
  if x_key != "fake-super-secret-key":
    raise HTTPException(status_code=400, detail="X-Key header invalid")
  return x_key
@app.get("/items/", dependencies=[Depends(verify_token), Depends(verify_key)])
async defread_items():
  return [{"item": "Foo"}, {"item": "Bar"}]