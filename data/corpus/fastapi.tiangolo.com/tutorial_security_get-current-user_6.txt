Title: Getting the Current User in FastAPI
URL: https://fastapi.tiangolo.com/tutorial/security/get-current-user/
Summary: This tutorial section demonstrates how to retrieve the current user in a FastAPI application using OAuth2. It introduces the `User` model, the `fake_decode_token` function to simulate token decoding, and the use of `Depends` for dependency injection. The example includes an endpoint (`/users/me`) that returns the current user's information.
---

```
fromtypingimport Union
fromfastapiimport Depends, FastAPI
fromfastapi.securityimport OAuth2PasswordBearer
frompydanticimport BaseModel
fromtyping_extensionsimport Annotated
app = FastAPI()
oauth2_scheme = OAuth2PasswordBearer(tokenUrl="token")
classUser(BaseModel):
  username: str
  email: Union[str, None] = None
  full_name: Union[str, None] = None
  disabled: Union[bool, None] = None
deffake_decode_token(token):
  return User(
    username=token + "fakedecoded", email="john@example.com", full_name="John Doe"
  )
async defget_current_user(token: Annotated[str, Depends(oauth2_scheme)]):
  user = fake_decode_token(token)
  return user
@app.get("/users/me")
async defread_users_me(current_user: Annotated[User, Depends(get_current_user)]):
  return current_user

```

Tip
Prefer to use the `Annotated` version if possible.
```
fromfastapiimport Depends, FastAPI
fromfastapi.securityimport OAuth2PasswordBearer
frompydanticimport BaseModel
app = FastAPI()
oauth2_scheme = OAuth2PasswordBearer(tokenUrl="token")
classUser(BaseModel):
  username: str
  email: str | None = None
  full_name: str | None = None
  disabled: bool | None = None
deffake_decode_token(token):
  return User(
    username=token + "fakedecoded", email="john@example.com", full_name="John Doe"
  )
async defget_current_user(token: str = Depends(oauth2_scheme)):
  user = fake_decode_token(token)
  return user
@app.get("/users/me")
async defread_users_me(current_user: User = Depends(get_current_user)):
  return current_user

```

Tip
Prefer to use the `Annotated` version if possible.
```
fromtypingimport Union
fromfastapiimport Depends, FastAPI
fromfastapi.securityimport OAuth2PasswordBearer
frompydanticimport BaseModel
app = FastAPI()
oauth2_scheme = OAuth2PasswordBearer(tokenUrl="token")
classUser(BaseModel):
  username: str
  email: Union[str, None] = None
  full_name: Union[str, None] = None
  disabled: Union[bool, None] = None
deffake_decode_token(token):
  return User(
    username=token + "fakedecoded", email="john@example.com", full_name="John Doe"
  )
async defget_current_user(token: str = Depends(oauth2_scheme)):
  user = fake_decode_token(token)
  return user
@app.get("/users/me")
async defread_users_me(current_user: User = Depends(get_current_user)):
  return current_user

```

## Get the user[Â¶](https://fastapi.tiangolo.com/tutorial/security/get-current-user/#get-the-user "Permanent link")
`get_current_user` will use a (fake) utility function we created, that takes a token as a `str` and returns our Pydantic `User` model:
[Python 3.10+](https://fastapi.tiangolo.com/tutorial/security/get-current-user/#__tabbed_7_1)
```
fromtypingimport Annotated
fromfastapiimport Depends, FastAPI
fromfastapi.securityimport OAuth2PasswordBearer
frompydanticimport BaseModel
app = FastAPI()
oauth2_scheme = OAuth2PasswordBearer(tokenUrl="token")
classUser(BaseModel):
  username: str
  email: str | None = None
  full_name: str | None = None
  disabled: bool | None = None
deffake_decode_token(token):
  return User(
    username=token + "fakedecoded", email="john@example.com", full_name="John Doe"
  )
async defget_current_user(token: Annotated[str, Depends(oauth2_scheme)]):
  user = fake_decode_token(token)
  return user
@app.get("/users/me")
async defread_users_me(current_user: Annotated[User, Depends(get_current_user)]):
  return current_user

```

ðŸ¤“ Other versions and variants
[Python 3.9+](https://fastapi.tiangolo.com/tutorial/security/get-current-user/#__tabbed_8_1)[Python 3.8+](https://fastapi.tiangolo.com/tutorial/security/get-current-user/#__tabbed_8_2)[Python 3.10+ - non-Annotated](https://fastapi.tiangolo.com/tutorial/security/get-current-user/#__tabbed_8_3)[Python 3.8+ - non-Annotated](https://fastapi.tiangolo.com/tutorial/security/get-current-user/#__tabbed_8_4)
```
fromtypingimport Annotated, Union
fromfastapiimport Depends, FastAPI
fromfastapi.securityimport OAuth2PasswordBearer
frompydanticimport BaseModel
app = FastAPI()
oauth2_scheme = OAuth2PasswordBearer(tokenUrl="token")
classUser(BaseModel):
  username: str
  email: Union[str, None] = None
  full_name: Union[str, None] = None
  disabled: Union[bool, None] = None
deffake_decode_token(token):
  return User(
    username=token + "fakedecoded", email="john@example.com", full_name="John Doe"
  )
async defget_current_user(token: Annotated[str, Depends(oauth2_scheme)]):
  user = fake_decode_token(token)
  return user
@app.get("/users/me")
async defread_users_me(current_user: Annotated[User, Depends(get_current_user)]):
  return current_user

```