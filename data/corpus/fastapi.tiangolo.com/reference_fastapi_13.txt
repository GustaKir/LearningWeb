Title: FastAPI Configuration Options
URL: https://fastapi.tiangolo.com/reference/fastapi/
Summary: This section describes configuration options for FastAPI, specifically focusing on 'redirect_slashes' which automatically redirects URLs without trailing slashes and 'docs_url' that defines the path for interactive API documentation. An example shows how to enable redirecting slashes.
---

```
      """
    ),
  ] = Default(JSONResponse),
  redirect_slashes: Annotated[
    bool,
    Doc(
"""
      Whether to detect and redirect slashes in URLs when the client doesn't
      use the same format.
      **Example**
  ```python
      from fastapi import FastAPI
      app = FastAPI(redirect_slashes=True) # the default
      @app.get("/items/")
      async def read_items():
        return [{"item_id": "Foo"}]
  ```
      With this app, if a client goes to `/items` (without a trailing slash),
      they will be automatically redirected with an HTTP status code of 307
      to `/items/`.
      """
    ),
  ] = True,
  docs_url: Annotated[
    Optional[str],
    Doc(
"""
      The path to the automatic interactive API documentation.
      It is handled in the browser by Swagger UI.
      The default URL is `/docs`. You can disable it by setting it to `None`.
      If `openapi_url` is set to `None`, this will be automatically disabled.
      Read more in the
      [FastAPI docs for Metadata and Docs URLs](https://fastapi.tiangolo.com/tutorial/metadata/#docs-urls).
      **Example**
  ```python
      from fastapi import FastAPI
      app = FastAPI(docs_url="/documentation", redoc_url=None)
  ```
      """
    ),
  ] = "/docs",
  redoc_url: Annotated[
    Optional[str],
    Doc(
"""
      The path to the alternative automatic interactive API documentation
      provided by ReDoc.
      The default URL is `/redoc`. You can disable it by setting it to `None`.
      If `openapi_url` is set to `None`, this will be automatically disabled.
      Read more in the
      [FastAPI docs for Metadata and Docs URLs](https://fastapi.tiangolo.com/tutorial/metadata/#docs-urls).
      **Example**
  ```python
      from fastapi import FastAPI
      app = FastAPI(docs_url="/documentation", redoc_url="redocumentation")
  ```
      """
    ),
  ] = "/redoc",
  swagger_ui_oauth2_redirect_url: Annotated[
    Optional[str],
    Doc(
"""
      The OAuth2 redirect endpoint for the Swagger UI.
      By default it is `/docs/oauth2-redirect`.
      This is only used if you use OAuth2 (with the "Authorize" button)
      with Swagger UI.
      """
    ),
  ] = "/docs/oauth2-redirect",
  swagger_ui_init_oauth: Annotated[
    Optional[Dict[str, Any]],
    Doc(
"""
      OAuth2 configuration for the Swagger UI, by default shown at `/docs`.
      Read more about the available configuration options in the
      [Swagger UI docs](https://swagger.io/docs/open-source-tools/swagger-ui/usage/oauth2/).
      """
    ),
  ] = None,
  middleware: Annotated[
    Optional[Sequence[Middleware]],
    Doc(
"""
      List of middleware to be added when creating the application.
      In FastAPI you would normally do this with `app.add_middleware()`
      instead.
      Read more in the
      [FastAPI docs for Middleware](https://fastapi.tiangolo.com/tutorial/middleware/).
      """
    ),
  ] = None,
  exception_handlers: Annotated[
    Optional[
      Dict[
        Union[int, Type[Exception]],
        Callable[[Request, Any], Coroutine[Any, Any, Response]],
      ]
    ],
    Doc(
"""
      A dictionary with handlers for exceptions.
      In FastAPI, you would normally use the decorator
      `@app.exception_handler()`.
      Read more in the
      [FastAPI docs for Handling Errors](https://fastapi.tiangolo.com/tutorial/handling-errors/).
      """
    ),
  ] = None,
  on_startup: Annotated[
    Optional[Sequence[Callable[[], Any]]],
    Doc(
"""
      A list of startup event handler functions.
      You should instead use the `lifespan` handlers.
      Read more in the [FastAPI docs for `lifespan`](https://fastapi.tiangolo.com/advanced/events/).
      """
    ),
  ] = None,
  on_shutdown: Annotated[
    Optional[Sequence[Callable[[], Any]]],
    Doc(
"""
      A list of shutdown event handler functions.
      You should instead use the `lifespan` handlers.
      Read more in the
      [FastAPI docs for `lifespan`](https://fastapi.tiangolo.com/advanced/events/).
      """
    ),
  ] = None,
  lifespan: Annotated[
    Optional[Lifespan[AppType]],
    Doc(
"""
      A `Lifespan` context manager handler. This replaces `startup` and
      `shutdown` functions with a single context manager.
      Read more in the
      [FastAPI docs for `lifespan`](https://fastapi.tiangolo.com/advanced/events/).
      """
    ),
  ] = None,
  terms_of_service: Annotated[
    Optional[str],
    Doc(
"""
      A URL to the Terms of Service for your API.
      It will be added to the generated OpenAPI (e.g. visible at `/docs`).
      Read more at the
      [FastAPI docs for Metadata and Docs URLs](https://fastapi.tiangolo.com/tutorial/metadata/#metadata-for-api).
      **Example**
  ```python
      app = FastAPI(terms_of_service="http://example.com/terms/")