Title: Middleware Reference in FastAPI
URL: https://fastapi.tiangolo.com/reference/middleware/
Summary: This section discusses the available middlewares in FastAPI, specifically focusing on the CORSMiddleware for managing Cross-Origin Resource Sharing (CORS). It outlines the parameters for configuring the middleware, including options for allowed origins, methods, and headers.
---

# Middleware[¶](https://fastapi.tiangolo.com/reference/middleware/#middleware "Permanent link")
There are several middlewares available provided by Starlette directly.
Read more about them in the [FastAPI docs for Middleware](https://fastapi.tiangolo.com/advanced/middleware/).
##  fastapi.middleware.cors.CORSMiddleware [¶](https://fastapi.tiangolo.com/reference/middleware/#fastapi.middleware.cors.CORSMiddleware "Permanent link")
```
CORSMiddleware(
  app,
  allow_origins=(),
  allow_methods=("GET",),
  allow_headers=(),
  allow_credentials=False,
  allow_origin_regex=None,
  expose_headers=(),
  max_age=600,
)

```

PARAMETER | DESCRIPTION  
---|---  
`app` |  **TYPE:** `ASGIApp`  
`allow_origins` |  **TYPE:** `Sequence[str]` **DEFAULT:** `()`  
`allow_methods` |  **TYPE:** `Sequence[str]` **DEFAULT:** `('GET',)`  
`allow_headers` |  **TYPE:** `Sequence[str]` **DEFAULT:** `()`  
`allow_credentials` |  **TYPE:** `bool` **DEFAULT:** `False`  
`allow_origin_regex` |  **TYPE:** `str | None` **DEFAULT:** `None`  
`expose_headers` |  **TYPE:** `Sequence[str]` **DEFAULT:** `()`  
`max_age` |  **TYPE:** `int` **DEFAULT:** `600`  
Source code in `starlette/middleware/cors.py`
```
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
```
| ```
def__init__(
  self,
  app: ASGIApp,
  allow_origins: typing.Sequence[str] = (),
  allow_methods: typing.Sequence[str] = ("GET",),
  allow_headers: typing.Sequence[str] = (),
  allow_credentials: bool = False,
  allow_origin_regex: str | None = None,
  expose_headers: typing.Sequence[str] = (),
  max_age: int = 600,
) -> None:
  if "*" in allow_methods:
    allow_methods = ALL_METHODS
  compiled_allow_origin_regex = None
  if allow_origin_regex is not None:
    compiled_allow_origin_regex = re.compile(allow_origin_regex)
  allow_all_origins = "*" in allow_origins
  allow_all_headers = "*" in allow_headers
  preflight_explicit_allow_origin = not allow_all_origins or allow_credentials
  simple_headers = {}
  if allow_all_origins:
    simple_headers["Access-Control-Allow-Origin"] = "*"
  if allow_credentials:
    simple_headers["Access-Control-Allow-Credentials"] = "true"
  if expose_headers:
    simple_headers["Access-Control-Expose-Headers"] = ", ".join(expose_headers)
  preflight_headers = {}
  if preflight_explicit_allow_origin:
    # The origin value will be set in preflight_response() if it is allowed.
    preflight_headers["Vary"] = "Origin"
  else:
    preflight_headers["Access-Control-Allow-Origin"] = "*"
  preflight_headers.update(
    {
      "Access-Control-Allow-Methods": ", ".join(allow_methods),
      "Access-Control-Max-Age": str(max_age),
    }
  )
  allow_headers = sorted(SAFELISTED_HEADERS | set(allow_headers))
  if allow_headers and not allow_all_headers:
    preflight_headers["Access-Control-Allow-Headers"] = ", ".join(allow_headers)
  if allow_credentials:
    preflight_headers["Access-Control-Allow-Credentials"] = "true"
  self.app = app
  self.allow_origins = allow_origins
  self.allow_methods = allow_methods
  self.allow_headers = [h.lower() for h in allow_headers]
  self.allow_all_origins = allow_all_origins
  self.allow_all_headers = allow_all_headers
  self.preflight_explicit_allow_origin = preflight_explicit_allow_origin
  self.allow_origin_regex = compiled_allow_origin_regex
  self.simple_headers = simple_headers
  self.preflight_headers = preflight_headers

```
  
---|---  
###  app `instance-attribute` [¶](https://fastapi.tiangolo.com/reference/middleware/#fastapi.middleware.cors.CORSMiddleware.app "Permanent link")
```
app = app

```

###  allow_origins `instance-attribute` [¶](https://fastapi.tiangolo.com/reference/middleware/#fastapi.middleware.cors.CORSMiddleware.allow_origins "Permanent link")
```
allow_origins = allow_origins

```

###  allow_methods `instance-attribute` [¶](https://fastapi.tiangolo.com/reference/middleware/#fastapi.middleware.cors.CORSMiddleware.allow_methods "Permanent link")
```
allow_methods = allow_methods

```

###  allow_headers `instance-attribute` [¶](https://fastapi.tiangolo.com/reference/middleware/#fastapi.middleware.cors.CORSMiddleware.allow_headers "Permanent link")
```
allow_headers = [lower() for h in allow_headers]

```

###  allow_all_origins `instance-attribute` [¶](https://fastapi.tiangolo.com/reference/middleware/#fastapi.middleware.cors.CORSMiddleware.allow_all_origins "Permanent link")
```
allow_all_origins = allow_all_origins

```

###  allow_all_headers `instance-attribute` [¶](https://fastapi.tiangolo.com/reference/middleware/#fastapi.middleware.cors.CORSMiddleware.allow_all_headers "Permanent link")
```
allow_all_headers = allow_all_headers

```

###  preflight_explicit_allow_origin `instance-attribute` [¶](https://fastapi.tiangolo.com/reference/middleware/#fastapi.middleware.cors.CORSMiddleware.preflight_explicit_allow_origin "Permanent link")