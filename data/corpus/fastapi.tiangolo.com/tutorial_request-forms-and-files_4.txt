Title: Handling File Uploads and Form Data in FastAPI
URL: https://fastapi.tiangolo.com/tutorial/request-forms-and-files/
Summary: This section demonstrates how to import and use the `File` and `Form` classes in FastAPI to handle file uploads and form data. An example function `create_file` is provided, which processes uploaded files and a token, returning their respective details.
---

```

## Import `File` and `Form`[Â¶](https://fastapi.tiangolo.com/tutorial/request-forms-and-files/#import-file-and-form "Permanent link")
[Python 3.9+](https://fastapi.tiangolo.com/tutorial/request-forms-and-files/#__tabbed_1_1)
```
fromtypingimport Annotated
fromfastapiimport FastAPI, File, Form, UploadFile
app = FastAPI()
@app.post("/files/")
async defcreate_file(
  file: Annotated[bytes, File()],
  fileb: Annotated[UploadFile, File()],
  token: Annotated[str, Form()],
):
  return {
    "file_size": len(file),
    "token": token,
    "fileb_content_type": fileb.content_type,
  }

```

ðŸ¤“ Other versions and variants
[Python 3.8+](https://fastapi.tiangolo.com/tutorial/request-forms-and-files/#__tabbed_2_1)[Python 3.8+ - non-Annotated](https://fastapi.tiangolo.com/tutorial/request-forms-and-files/#__tabbed_2_2)
```
fromfastapiimport FastAPI, File, Form, UploadFile
fromtyping_extensionsimport Annotated
app = FastAPI()
@app.post("/files/")
async defcreate_file(
  file: Annotated[bytes, File()],
  fileb: Annotated[UploadFile, File()],
  token: Annotated[str, Form()],
):
  return {
    "file_size": len(file),
    "token": token,
    "fileb_content_type": fileb.content_type,
  }

```

Tip
Prefer to use the `Annotated` version if possible.
```
fromfastapiimport FastAPI, File, Form, UploadFile
app = FastAPI()
@app.post("/files/")
async defcreate_file(
  file: bytes = File(), fileb: UploadFile = File(), token: str = Form()
):
  return {
    "file_size": len(file),
    "token": token,
    "fileb_content_type": fileb.content_type,
  }

```

## Define `File` and `Form` parameters[Â¶](https://fastapi.tiangolo.com/tutorial/request-forms-and-files/#define-file-and-form-parameters "Permanent link")
Create file and form parameters the same way you would for `Body` or `Query`:
[Python 3.9+](https://fastapi.tiangolo.com/tutorial/request-forms-and-files/#__tabbed_3_1)
```
fromtypingimport Annotated
fromfastapiimport FastAPI, File, Form, UploadFile
app = FastAPI()
@app.post("/files/")
async defcreate_file(
  file: Annotated[bytes, File()],
  fileb: Annotated[UploadFile, File()],
  token: Annotated[str, Form()],
):
  return {
    "file_size": len(file),
    "token": token,
    "fileb_content_type": fileb.content_type,
  }

```

ðŸ¤“ Other versions and variants
[Python 3.8+](https://fastapi.tiangolo.com/tutorial/request-forms-and-files/#__tabbed_4_1)[Python 3.8+ - non-Annotated](https://fastapi.tiangolo.com/tutorial/request-forms-and-files/#__tabbed_4_2)
```
fromfastapiimport FastAPI, File, Form, UploadFile
fromtyping_extensionsimport Annotated
app = FastAPI()
@app.post("/files/")
async defcreate_file(
  file: Annotated[bytes, File()],
  fileb: Annotated[UploadFile, File()],
  token: Annotated[str, Form()],
):
  return {
    "file_size": len(file),
    "token": token,
    "fileb_content_type": fileb.content_type,
  }

```

Tip
Prefer to use the `Annotated` version if possible.
```
fromfastapiimport FastAPI, File, Form, UploadFile
app = FastAPI()
@app.post("/files/")
async defcreate_file(
  file: bytes = File(), fileb: UploadFile = File(), token: str = Form()
):
  return {
    "file_size": len(file),
    "token": token,
    "fileb_content_type": fileb.content_type,
  }

```

The files and form fields will be uploaded as form data and you will receive the files and form fields.
And you can declare some of the files as `bytes` and some as `UploadFile`.
Warning
You can declare multiple `File` and `Form` parameters in a _path operation_ , but you can't also declare `Body` fields that you expect to receive as JSON, as the request will have the body encoded using `multipart/form-data` instead of `application/json`.
This is not a limitation of **FastAPI** , it's part of the HTTP protocol.
## Recap[Â¶](https://fastapi.tiangolo.com/tutorial/request-forms-and-files/#recap "Permanent link")
Use `File` and `Form` together when you need to receive data and files in the same request.
Was this page helpful? 
Thanks for your feedback! 
Thanks for your feedback! 
Back to top  [ Previous  Request Files  ](https://fastapi.tiangolo.com/tutorial/request-files/) [ Next  Handling Errors  ](https://fastapi.tiangolo.com/tutorial/handling-errors/)
The FastAPI trademark is owned by [@tiangolo](https://tiangolo.com) and is registered in the US and across other regions 
Made with [ Material for MkDocs ](https://squidfunk.github.io/mkdocs-material/)
[ ](https://github.com/fastapi/fastapi "github.com") [ ](https://discord.gg/VQjSZaeJmf "discord.gg") [ ](https://twitter.com/fastapi "twitter.com") [ ](https://www.linkedin.com/in/tiangolo "www.linkedin.com") [ ](https://dev.to/tiangolo "dev.to") [ ](https://medium.com/@tiangolo "medium.com") [ ](https://tiangolo.com "tiangolo.com")