Title: FastAPI Advanced Settings and Deployment
URL: https://fastapi.tiangolo.com/advanced/settings/
Summary: This documentation covers advanced settings for FastAPI, including caching with LRU, OpenAPI callbacks, webhooks, and instructions on including WSGI applications such as Flask and Django. It also includes details on FastAPI's command-line interface and deployment guidelines, discussing version management, HTTPS setup, and manual server running.
---

astapi.tiangolo.com/advanced/settings/#lru_cache-technical-details)
        * [ Recap  ](https://fastapi.tiangolo.com/advanced/settings/#recap)
      * [ OpenAPI Callbacks  ](https://fastapi.tiangolo.com/advanced/openapi-callbacks/)
      * [ OpenAPI Webhooks  ](https://fastapi.tiangolo.com/advanced/openapi-webhooks/)
      * [ Including WSGI - Flask, Django, others  ](https://fastapi.tiangolo.com/advanced/wsgi/)
      * [ Generate Clients  ](https://fastapi.tiangolo.com/advanced/generate-clients/)
    * [ FastAPI CLI  ](https://fastapi.tiangolo.com/fastapi-cli/)
    * [ Deployment  ](https://fastapi.tiangolo.com/deployment/)
Deployment 
      * [ About FastAPI versions  ](https://fastapi.tiangolo.com/deployment/versions/)
      * [ About HTTPS  ](https://fastapi.tiangolo.com/deployment/https/)
      * [ Run a Server Manually  ](https://fastapi.tiangolo.com/deployment/manually/)
      * [ Deployments Concepts  ](https://fastapi.tiangolo.com/deployment/concepts/)
      * [ Deploy FastAPI on Cloud Providers  ](https://fastapi.tiangolo.com/deployment/cloud/)
      * [ Server Workers - Uvicorn with Workers  ](https://fastapi.tiangolo.com/deployment/server-workers/)
      * [ FastAPI in Containers - Docker  ](https://fastapi.tiangolo.com/deployment/docker/)
    * [ How To - Recipes  ](https://fastapi.tiangolo.com/how-to/)
How To - Recipes 
      * [ General - How To - Recipes  ](https://fastapi.tiangolo.com/how-to/general/)
      * [ GraphQL  ](https://fastapi.tiangolo.com/how-to/graphql/)
      * [ Custom Request and APIRoute class  ](https://fastapi.tiangolo.com/how-to/custom-request-and-route/)
      * [ Conditional OpenAPI  ](https://fastapi.tiangolo.com/how-to/conditional-openapi/)
      * [ Extending OpenAPI  ](https://fastapi.tiangolo.com/how-to/extending-openapi/)
      * [ Separate OpenAPI Schemas for Input and Output or Not  ](https://fastapi.tiangolo.com/how-to/separate-openapi-schemas/)
      * [ Custom Docs UI Static Assets (Self-Hosting)  ](https://fastapi.tiangolo.com/how-to/custom-docs-ui-assets/)
      * [ Configure Swagger UI  ](https://fastapi.tiangolo.com/how-to/configure-swagger-ui/)
      * [ Testing a Database  ](https://fastapi.tiangolo.com/how-to/testing-database/)
  * [ Reference  ](https://fastapi.tiangolo.com/reference/)
Reference 
    * [ `FastAPI` class  ](https://fastapi.tiangolo.com/reference/fastapi/)
    * [ Request Parameters  ](https://fastapi.tiangolo.com/reference/parameters/)
    * [ Status Codes  ](https://fastapi.tiangolo.com/reference/status/)
    * [ `UploadFile` class  ](https://fastapi.tiangolo.com/reference/uploadfile/)
    * [ Exceptions - `HTTPException` and `WebSocketException` ](https://fastapi.tiangolo.com/reference/exceptions/)
    * [ Dependencies - `Depends()` and `Security()` ](https://fastapi.tiangolo.com/reference/dependencies/)
    * [ `APIRouter` class  ](https://fastapi.tiangolo.com/reference/apirouter/)
    * [ Background Tasks - `BackgroundTasks` ](https://fastapi.tiangolo.com/reference/background/)
    * [ `Request` class  ](https://fastapi.tiangolo.com/reference/request/)
    * [ WebSockets  ](https://fastapi.tiangolo.com/reference/websockets/)
    * [ `HTTPConnection` class  ](https://fastapi.tiangolo.com/reference/httpconnection/)
    * [ `Response` class  ](https://fastapi.tiangolo.com/reference/response/)
    * [ Custom Response Classes - File, HTML, Redirect, Streaming, etc.