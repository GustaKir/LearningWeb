Title: Using Virtual Environments in FastAPI
URL: https://fastapi.tiangolo.com/virtual-environments/
Summary: This section discusses verifying the installation of Python binaries in a virtual environment. It also advises on upgrading `pip` to avoid common installation errors, especially if you are using `pip` for package management instead of `uv`.
---

```

fast →[](https://fastapi.tiangolo.com/virtual-environments/)which python/home/user/code/awesome-project/.venv/bin/pythonrestart ↻[](https://fastapi.tiangolo.com/virtual-environments/)

```

If it shows the `python` binary at `.venv/bin/python`, inside of your project (in this case `awesome-project`), then it worked. 🎉
```

fast →[](https://fastapi.tiangolo.com/virtual-environments/)

```

If it shows the `python` binary at `.venv\Scripts\python`, inside of your project (in this case `awesome-project`), then it worked. 🎉
## Upgrade `pip`[¶](https://fastapi.tiangolo.com/virtual-environments/#upgrade-pip "Permanent link")
Tip
If you use [`uv`](https://github.com/astral-sh/uv) you would use it to install things instead of `pip`, so you don't need to upgrade `pip`. 😎
If you are using `pip` to install packages (it comes by default with Python), you should **upgrade** it to the latest version.
Many exotic errors while installing a package are solved by just upgrading `pip` first.
Tip
You would normally do this **once** , right after you create the virtual environment.
Make sure the virtual environment is active (with the command above) and then run:
```

fast →[](https://fastapi.tiangolo.com/virtual-environments/)python -m pip install --upgrade piprestart ↻[](https://fastapi.tiangolo.com/virtual-environments/)

```

## Add `.gitignore`[¶](https://fastapi.tiangolo.com/virtual-environments/#add-gitignore "Permanent link")
If you are using **Git** (you should), add a `.gitignore` file to exclude everything in your `.venv` from Git.
Tip
If you used [`uv`](https://github.com/astral-sh/uv) to create the virtual environment, it already did this for you, you can skip this step. 😎
Tip
Do this **once** , right after you create the virtual environment.
```

fast →[](https://fastapi.tiangolo.com/virtual-environments/)echo "*" > .venv/.gitignorerestart ↻[](https://fastapi.tiangolo.com/virtual-environments/)

```

What that command means
  * `echo "*"`: will "print" the text `*` in the terminal (the next part changes that a bit)
  * `>`: anything printed to the terminal by the command to the left of `>` should not be printed but instead written to the file that goes to the right of `>`
  * `.gitignore`: the name of the file where the text should be written


And `*` for Git means "everything". So, it will ignore everything in the `.venv` directory.
That command will create a file `.gitignore` with the content:
```
*

```

## Install Packages[¶](https://fastapi.tiangolo.com/virtual-environments/#install-packages "Permanent link")
After activating the environment, you can install packages in it.
Tip
Do this **once** when installing or upgrading the packages your project needs.
If you need to upgrade a version or add a new package you would **do this again**.
### Install Packages Directly[¶](https://fastapi.tiangolo.com/virtual-environments/#install-packages-directly "Permanent link")
If you're in a hurry and don't want to use a file to declare your project's package requirements, you can install them directly.
Tip
It's a (very) good idea to put the packages and versions your program needs in a file (for example `requirements.txt` or `pyproject.toml`).
[`pip`](https://fastapi.tiangolo.com/virtual-environments/#__tabbed_4_1)[`uv`](https://fastapi.tiangolo.com/virtual-environments/#__tabbed_4_2)
```

fast →[](https://fastapi.tiangolo.com/virtual-environments/)pip install "fastapi[standard]"restart ↻[](https://fastapi.tiangolo.com/virtual-environments/)

```

If you have [`uv`](https://github.com/astral-sh/uv):
```

fast →[](https://fastapi.tiangolo.com/virtual-environments/)

```

### Install from `requirements.txt`[¶](https://fastapi.tiangolo.com/virtual-environments/#install-from-requirementstxt "Permanent link")
If you have a `requirements.txt`, you can now use it to install its packages.
[`pip`](https://fastapi.tiangolo.com/virtual-environments/#__tabbed_5_1)[`uv`](https://fastapi.tiangolo.com/virtual-environments/#__tabbed_5_2)
```

fast →[](https://fastapi.tiangolo.com/virtual-environments/)pip install -r requirements.txtrestart ↻[](https://fastapi.tiangolo.com/virtual-environments/)

```

If you have [`uv`](https://github.com/astral-sh/uv):
```

fast →[](https://fastapi.tiangolo.com/virtual-environments/)

```

`requirements.txt`
A `requirements.txt` with some packages could look like:
```
fastapi[standard]==0.113.0
pydantic==2.8.0

```

## Run Your Program[¶](https://fastapi.tiangolo.com/virtual-environments/#run-your-program "Permanent link")
After you activated the virtual environment, you can run your program, and it will use the Python inside of your virtual environment with the packages you installed there.
```

fast →[](https://fastapi.tiangolo.com/virtual-environments/)python main.pyHello Worldrestart ↻[](https://fastapi.tiangolo.com/virtual-environments/)