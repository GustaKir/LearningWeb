Title: Extending OpenAPI in FastAPI
URL: https://fastapi.tiangolo.com/how-to/extending-openapi/
Summary: This section demonstrates how to customize the OpenAPI schema in FastAPI by defining a `custom_openapi` function. It includes modifying the schema's title, version, and description, as well as adding a custom logo. The example features an asynchronous route to retrieve items.
---

```
fromfastapiimport FastAPI
fromfastapi.openapi.utilsimport get_openapi
app = FastAPI()
@app.get("/items/")
async defread_items():
  return [{"name": "Foo"}]
defcustom_openapi():
  if app.openapi_schema:
    return app.openapi_schema
  openapi_schema = get_openapi(
    title="Custom title",
    version="2.5.0",
    summary="This is a very custom OpenAPI schema",
    description="Here's a longer description of the custom **OpenAPI** schema",
    routes=app.routes,
  )
  openapi_schema["info"]["x-logo"] = {
    "url": "https://fastapi.tiangolo.com/img/logo-margin/logo-teal.png"
  }
  app.openapi_schema = openapi_schema
  return app.openapi_schema
app.openapi = custom_openapi

```

### Modify the OpenAPI schema[¶](https://fastapi.tiangolo.com/how-to/extending-openapi/#modify-the-openapi-schema "Permanent link")
Now you can add the ReDoc extension, adding a custom `x-logo` to the `info` "object" in the OpenAPI schema:
[Python 3.8+](https://fastapi.tiangolo.com/how-to/extending-openapi/#__tabbed_3_1)
```
fromfastapiimport FastAPI
fromfastapi.openapi.utilsimport get_openapi
app = FastAPI()
@app.get("/items/")
async defread_items():
  return [{"name": "Foo"}]
defcustom_openapi():
  if app.openapi_schema:
    return app.openapi_schema
  openapi_schema = get_openapi(
    title="Custom title",
    version="2.5.0",
    summary="This is a very custom OpenAPI schema",
    description="Here's a longer description of the custom **OpenAPI** schema",
    routes=app.routes,
  )
  openapi_schema["info"]["x-logo"] = {
    "url": "https://fastapi.tiangolo.com/img/logo-margin/logo-teal.png"
  }
  app.openapi_schema = openapi_schema
  return app.openapi_schema
app.openapi = custom_openapi

```

### Cache the OpenAPI schema[¶](https://fastapi.tiangolo.com/how-to/extending-openapi/#cache-the-openapi-schema "Permanent link")
You can use the property `.openapi_schema` as a "cache", to store your generated schema.
That way, your application won't have to generate the schema every time a user opens your API docs.
It will be generated only once, and then the same cached schema will be used for the next requests.
[Python 3.8+](https://fastapi.tiangolo.com/how-to/extending-openapi/#__tabbed_4_1)
```
fromfastapiimport FastAPI
fromfastapi.openapi.utilsimport get_openapi
app = FastAPI()
@app.get("/items/")
async defread_items():
  return [{"name": "Foo"}]
defcustom_openapi():
  if app.openapi_schema:
    return app.openapi_schema
  openapi_schema = get_openapi(
    title="Custom title",
    version="2.5.0",
    summary="This is a very custom OpenAPI schema",
    description="Here's a longer description of the custom **OpenAPI** schema",
    routes=app.routes,
  )
  openapi_schema["info"]["x-logo"] = {
    "url": "https://fastapi.tiangolo.com/img/logo-margin/logo-teal.png"
  }
  app.openapi_schema = openapi_schema
  return app.openapi_schema
app.openapi = custom_openapi

```

### Override the method[¶](https://fastapi.tiangolo.com/how-to/extending-openapi/#override-the-method "Permanent link")
Now you can replace the `.openapi()` method with your new function.
[Python 3.8+](https://fastapi.tiangolo.com/how-to/extending-openapi/#__tabbed_5_1)
```
fromfastapiimport FastAPI
fromfastapi.openapi.utilsimport get_openapi
app = FastAPI()
@app.get("/items/")
async defread_items():
  return [{"name": "Foo"}]
defcustom_openapi():
  if app.openapi_schema:
    return app.openapi_schema
  openapi_schema = get_openapi(
    title="Custom title",
    version="2.5.0",
    summary="This is a very custom OpenAPI schema",
    description="Here's a longer description of the custom **OpenAPI** schema",
    routes=app.routes,
  )
  openapi_schema["info"]["x-logo"] = {
    "url": "https://fastapi.tiangolo.com/img/logo-margin/logo-teal.png"
  }
  app.openapi_schema = openapi_schema
  return app.openapi_schema
app.openapi = custom_openapi