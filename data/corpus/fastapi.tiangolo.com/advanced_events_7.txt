Title: Managing Startup and Shutdown Events in FastAPI
URL: https://fastapi.tiangolo.com/advanced/events/
Summary: This section explains how to handle `shutdown` events in FastAPI by writing a message to a log file without overwriting previous contents. It emphasizes using standard Python I/O functions for such operations and the importance of managing related `startup` and `shutdown` logic within the same context.
---

```

Here, the `shutdown` event handler function will write a text line `"Application shutdown"` to a file `log.txt`.
Info
In the `open()` function, the `mode="a"` means "append", so, the line will be added after whatever is on that file, without overwriting the previous contents.
Tip
Notice that in this case we are using a standard Python `open()` function that interacts with a file.
So, it involves I/O (input/output), that requires "waiting" for things to be written to disk.
But `open()` doesn't use `async` and `await`.
So, we declare the event handler function with standard `def` instead of `async def`.
### `startup` and `shutdown` together[Â¶](https://fastapi.tiangolo.com/advanced/events/#startup-and-shutdown-together "Permanent link")
There's a high chance that the logic for your _startup_ and _shutdown_ is connected, you might want to start something and then finish it, acquire a resource and then release it, etc.
Doing that in separated functions that don't share logic or variables together is more difficult as you would need to store values in global variables or similar tricks.
Because of that, it's now recommended to instead use the `lifespan` as explained above.
## Technical Details[Â¶](https://fastapi.tiangolo.com/advanced/events/#technical-details "Permanent link")
Just a technical detail for the curious nerds. ðŸ¤“
Underneath, in the ASGI technical specification, this is part of the [Lifespan Protocol](https://asgi.readthedocs.io/en/latest/specs/lifespan.html), and it defines events called `startup` and `shutdown`.
Info
You can read more about the Starlette `lifespan` handlers in [Starlette's Lifespan' docs](https://www.starlette.io/lifespan/).
Including how to handle lifespan state that can be used in other areas of your code.
## Sub Applications[Â¶](https://fastapi.tiangolo.com/advanced/events/#sub-applications "Permanent link")
ðŸš¨ Keep in mind that these lifespan events (startup and shutdown) will only be executed for the main application, not for [Sub Applications - Mounts](https://fastapi.tiangolo.com/advanced/sub-applications/).
Was this page helpful? 
Thanks for your feedback! 
Thanks for your feedback! 
Back to top  [ Previous  WebSockets  ](https://fastapi.tiangolo.com/advanced/websockets/) [ Next  Testing WebSockets  ](https://fastapi.tiangolo.com/advanced/testing-websockets/)
The FastAPI trademark is owned by [@tiangolo](https://tiangolo.com) and is registered in the US and across other regions 
Made with [ Material for MkDocs ](https://squidfunk.github.io/mkdocs-material/)
[ ](https://github.com/fastapi/fastapi "github.com") [ ](https://discord.gg/VQjSZaeJmf "discord.gg") [ ](https://twitter.com/fastapi "twitter.com") [ ](https://www.linkedin.com/in/tiangolo "www.linkedin.com") [ ](https://dev.to/tiangolo "dev.to") [ ](https://medium.com/@tiangolo "medium.com") [ ](https://tiangolo.com "tiangolo.com")