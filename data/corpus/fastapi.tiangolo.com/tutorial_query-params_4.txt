Title: Understanding Query Parameters in FastAPI
URL: https://fastapi.tiangolo.com/tutorial/query-params/
Summary: This section explains how to declare query parameters in FastAPI by introducing additional function parameters. It describes how query parameters appear in the URL as key-value pairs after the '?' symbol, with an example demonstrating their usage in an endpoint to paginate items from a database.
---

# Query Parameters[Â¶](https://fastapi.tiangolo.com/tutorial/query-params/#query-parameters "Permanent link")
When you declare other function parameters that are not part of the path parameters, they are automatically interpreted as "query" parameters.
[Python 3.8+](https://fastapi.tiangolo.com/tutorial/query-params/#__tabbed_1_1)
```
fromfastapiimport FastAPI
app = FastAPI()
fake_items_db = [{"item_name": "Foo"}, {"item_name": "Bar"}, {"item_name": "Baz"}]
@app.get("/items/")
async defread_item(skip: int = 0, limit: int = 10):
  return fake_items_db[skip : skip + limit]

```

The query is the set of key-value pairs that go after the `?` in a URL, separated by `&` characters.
For example, in the URL:
```
http://127.0.0.1:8000/items/?skip=0&limit=10

```

...the query parameters are:
  * `skip`: with a value of `0`
  * `limit`: with a value of `10`


As they are part of the URL, they are "naturally" strings.
But when you declare them with Python types (in the example above, as `int`), they are converted to that type and validated against it.
All the same process that applied for path parameters also applies for query parameters:
  * Editor support (obviously)
  * Data "parsing"
  * Data validation
  * Automatic documentation


## Defaults[Â¶](https://fastapi.tiangolo.com/tutorial/query-params/#defaults "Permanent link")
As query parameters are not a fixed part of a path, they can be optional and can have default values.
In the example above they have default values of `skip=0` and `limit=10`.
So, going to the URL:
```
http://127.0.0.1:8000/items/

```

would be the same as going to:
```
http://127.0.0.1:8000/items/?skip=0&limit=10

```

But if you go to, for example:
```
http://127.0.0.1:8000/items/?skip=20

```

The parameter values in your function will be:
  * `skip=20`: because you set it in the URL
  * `limit=10`: because that was the default value


## Optional parameters[Â¶](https://fastapi.tiangolo.com/tutorial/query-params/#optional-parameters "Permanent link")
The same way, you can declare optional query parameters, by setting their default to `None`:
[Python 3.10+](https://fastapi.tiangolo.com/tutorial/query-params/#__tabbed_2_1)
```
fromfastapiimport FastAPI
app = FastAPI()
@app.get("/items/{item_id}")
async defread_item(item_id: str, q: str | None = None):
  if q:
    return {"item_id": item_id, "q": q}
  return {"item_id": item_id}

```

ðŸ¤“ Other versions and variants
[Python 3.8+](https://fastapi.tiangolo.com/tutorial/query-params/#__tabbed_3_1)
```
fromtypingimport Union
fromfastapiimport FastAPI
app = FastAPI()
@app.get("/items/{item_id}")
async defread_item(item_id: str, q: Union[str, None] = None):
  if q:
    return {"item_id": item_id, "q": q}
  return {"item_id": item_id}

```

In this case, the function parameter `q` will be optional, and will be `None` by default.
Check
Also notice that **FastAPI** is smart enough to notice that the path parameter `item_id` is a path parameter and `q` is not, so, it's a query parameter.
## Query parameter type conversion[Â¶](https://fastapi.tiangolo.com/tutorial/query-params/#query-parameter-type-conversion "Permanent link")
You can also declare `bool` types, and they will be converted:
[Python 3.10+](https://fastapi.tiangolo.com/tutorial/query-params/#__tabbed_4_1)
```
fromfastapiimport FastAPI
app = FastAPI()
@app.get("/items/{item_id}")
async defread_item(item_id: str, q: str | None = None, short: bool = False):
  item = {"item_id": item_id}
  if q:
    item.update({"q": q})
  if not short:
    item.update(
      {"description": "This is an amazing item that has a long description"}
    )
  return item

```

ðŸ¤“ Other versions and variants
[Python 3.8+](https://fastapi.tiangolo.com/tutorial/query-params/#__tabbed_5_1)
```
fromtypingimport Union
fromfastapiimport FastAPI
app = FastAPI()
@app.get("/items/{item_id}")
async defread_item(item_id: str, q: Union[str, None] = None, short: bool = False):
  item = {"item_id": item_id}
  if q:
    item.update({"q": q})
  if not short:
    item.update(
      {"description": "This is an amazing item that has a long description"}
    )
  return item

```

In this case, if you go to:
```
http://127.0.0.1:8000/items/foo?short=1

```

or
```
http://127.0.0.1:8000/items/foo?short=True

```

or
```
http://127.0.0.1:8000/items/foo?short=true

```

or
```
http://127.0.0.1:8000/items/foo?short=on

```

or
```
http://127.0.0.1:8000/items/foo?short=yes