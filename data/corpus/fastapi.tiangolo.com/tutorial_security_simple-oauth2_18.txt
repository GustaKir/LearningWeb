Title: Implementing OAuth2 with FastAPI
URL: https://fastapi.tiangolo.com/tutorial/security/simple-oauth2/
Summary: This section highlights the importance of returning a JSON response with `access_token` and `token_type` for OAuth2 compliance in FastAPI. It also explains how to create a new dependency `get_current_active_user` to ensure that only active users are retrieved, building on top of the existing `get_current_user` dependency.
---

```

Tip
By the spec, you should return a JSON with an `access_token` and a `token_type`, the same as in this example.
This is something that you have to do yourself in your code, and make sure you use those JSON keys.
It's almost the only thing that you have to remember to do correctly yourself, to be compliant with the specifications.
For the rest, **FastAPI** handles it for you.
## Update the dependencies[Â¶](https://fastapi.tiangolo.com/tutorial/security/simple-oauth2/#update-the-dependencies "Permanent link")
Now we are going to update our dependencies.
We want to get the `current_user` _only_ if this user is active.
So, we create an additional dependency `get_current_active_user` that in turn uses `get_current_user` as a dependency.
Both of these dependencies will just return an HTTP error if the user doesn't exist, or if is inactive.
So, in our endpoint, we will only get a user if the user exists, was correctly authenticated, and is active:
[Python 3.10+](https://fastapi.tiangolo.com/tutorial/security/simple-oauth2/#__tabbed_9_1)
```
fromtypingimport Annotated
fromfastapiimport Depends, FastAPI, HTTPException, status
fromfastapi.securityimport OAuth2PasswordBearer, OAuth2PasswordRequestForm
frompydanticimport BaseModel
fake_users_db = {
  "johndoe": {
    "username": "johndoe",
    "full_name": "John Doe",
    "email": "johndoe@example.com",
    "hashed_password": "fakehashedsecret",
    "disabled": False,
  },
  "alice": {
    "username": "alice",
    "full_name": "Alice Wonderson",
    "email": "alice@example.com",
    "hashed_password": "fakehashedsecret2",
    "disabled": True,
  },
}
app = FastAPI()
deffake_hash_password(password: str):
  return "fakehashed" + password
oauth2_scheme = OAuth2PasswordBearer(tokenUrl="token")
classUser(BaseModel):
  username: str
  email: str | None = None
  full_name: str | None = None
  disabled: bool | None = None
classUserInDB(User):
  hashed_password: str
defget_user(db, username: str):
  if username in db:
    user_dict = db[username]
    return UserInDB(**user_dict)
deffake_decode_token(token):
  # This doesn't provide any security at all
  # Check the next version
  user = get_user(fake_users_db, token)
  return user
async defget_current_user(token: Annotated[str, Depends(oauth2_scheme)]):
  user = fake_decode_token(token)
  if not user:
    raise HTTPException(
      status_code=status.HTTP_401_UNAUTHORIZED,
      detail="Invalid authentication credentials",
      headers={"WWW-Authenticate": "Bearer"},
    )
  return user
async defget_current_active_user(
  current_user: Annotated[User, Depends(get_current_user)],
):
  if current_user.disabled:
    raise HTTPException(status_code=400, detail="Inactive user")
  return current_user
@app.post("/token")
async deflogin(form_data: Annotated[OAuth2PasswordRequestForm, Depends()]):
  user_dict = fake_users_db.get(form_data.username)
  if not user_dict:
    raise HTTPException(status_code=400, detail="Incorrect username or password")
  user = UserInDB(**user_dict)
  hashed_password = fake_hash_password(form_data.password)
  if not hashed_password == user.hashed_password:
    raise HTTPException(status_code=400, detail="Incorrect username or password")
  return {"access_token": user.username, "token_type": "bearer"}
@app.get("/users/me")
async defread_users_me(
  current_user: Annotated[User, Depends(get_current_active_user)],
):
  return current_user

```

ðŸ¤“ Other versions and variants
[Python 3.9+](https://fastapi.tiangolo.com/tutorial/security/simple-oauth2/#__tabbed_10_1)[Python 3.8+](https://fastapi.tiangolo.com/tutorial/security/simple-oauth2/#__tabbed_10_2)[Python 3.10+ - non-Annotated](https://fastapi.tiangolo.com/tutorial/security/simple-oauth2/#__tabbed_10_3)[Python 3.8+ - non-Annotated](https://fastapi.tiangolo.com/tutorial/security/simple-oauth2/#__tabbed_10_4)