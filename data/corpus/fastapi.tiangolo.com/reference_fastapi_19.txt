Title: WebSocket Decorator in FastAPI
URL: https://fastapi.tiangolo.com/reference/fastapi/
Summary: This section describes the `websocket` decorator in FastAPI, which is used to define WebSocket endpoints. It provides parameters for specifying the WebSocket path, an optional name, and a list of dependencies. The documentation includes a reference to further details on handling WebSockets in FastAPI.
---

```
defwebsocket(
  self,
  path: Annotated[
    str,
    Doc(
"""
      WebSocket path.
      """
    ),
  ],
  name: Annotated[
    Optional[str],
    Doc(
"""
      A name for the WebSocket. Only used internally.
      """
    ),
  ] = None,
  *,
  dependencies: Annotated[
    Optional[Sequence[Depends]],
    Doc(
"""
      A list of dependencies (using `Depends()`) to be used for this
      WebSocket.
      Read more about it in the
      [FastAPI docs for WebSockets](https://fastapi.tiangolo.com/advanced/websockets/).
      """
    ),
  ] = None,
) -> Callable[[DecoratedCallable], DecoratedCallable]:
"""
  Decorate a WebSocket function.
  Read more about it in the
  [FastAPI docs for WebSockets](https://fastapi.tiangolo.com/advanced/websockets/).
  **Example**
  ```python
  from fastapi import FastAPI, WebSocket
  app = FastAPI()
  @app.websocket("/ws")
  async def websocket_endpoint(websocket: WebSocket):
    await websocket.accept()
    while True:
      data = await websocket.receive_text()
      await websocket.send_text(f"Message text was: {data}")
  ```
  """
  defdecorator(func: DecoratedCallable) -> DecoratedCallable:
    self.add_api_websocket_route(
      path,
      func,
      name=name,
      dependencies=dependencies,
    )
    return func
  return decorator

```
  
---|---  
###  include_router [¶](https://fastapi.tiangolo.com/reference/fastapi/#fastapi.FastAPI.include_router "Permanent link")
```
include_router(
  router,
  *,
  prefix="",
  tags=None,
  dependencies=None,
  responses=None,
  deprecated=None,
  include_in_schema=True,
  default_response_class=Default(JSONResponse[](https://fastapi.tiangolo.com/reference/responses/#fastapi.responses.JSONResponse "<code class="doc-symbol doc-symbol-heading doc-symbol-class"></code>      <span class="doc doc-object-name doc-class-name">fastapi.responses.JSONResponse</span> \(<code>starlette.responses.JSONResponse</code>\)")),
  callbacks=None,
  generate_unique_id_function=Default(generate_unique_id)
)

```

Include an `APIRouter` in the same app.
Read more about it in the [FastAPI docs for Bigger Applications](https://fastapi.tiangolo.com/tutorial/bigger-applications/).
##### Example[¶](https://fastapi.tiangolo.com/reference/fastapi/#fastapi.FastAPI.include_router--example "Permanent link")
```
fromfastapiimport FastAPI
from.usersimport users_router
app = FastAPI()
app.include_router(users_router)

```

PARAMETER | DESCRIPTION  
---|---  
`router` |  The `APIRouter` to include. **TYPE:** `APIRouter[](https://fastapi.tiangolo.com/reference/apirouter/#fastapi.APIRouter "<code class="doc-symbol doc-symbol-heading doc-symbol-class"></code>      <span class="doc doc-object-name doc-class-name">fastapi.APIRouter</span> \(<code>fastapi.routing.APIRouter</code>\)")`  
`prefix` |  An optional path prefix for the router. **TYPE:** `str` **DEFAULT:** `''`  
`tags` |  A list of tags to be applied to all the _path operations_ in this router. It will be added to the generated OpenAPI (e.g. visible at `/docs`). Read more about it in the [FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/). **TYPE:** `Optional[List[Union[str, Enum]]]` **DEFAULT:** `None`  
`dependencies` |  A list of dependencies (using `Depends()`) to be applied to all the _path operations_ in this router. Read more about it in the [FastAPI docs for Bigger Applications - Multiple Files](https://fastapi.tiangolo.com/tutorial/bigger-applications/#include-an-apirouter-with-a-custom-prefix-tags-responses-and-dependencies). **Example** ```
fromfastapiimport Depends, FastAPI
from.dependenciesimport get_token_header
from.internalimport admin
app = FastAPI()
app.include_router(
  admin.router,
  dependencies=[Depends(get_token_header)],
)

```
**TYPE:** `Optional[Sequence[Depends]]` **DEFAULT:** `None`  
`responses` |  Additional responses to be shown in OpenAPI. It will be added to the generated OpenAPI (e.g. visible at `/docs`). Read more about it in the [FastAPI docs for Additional Responses in OpenAPI](https://fastapi.tiangolo.com/advanced/additional-responses/). And in the [FastAPI docs for Bigger Applications](https://fastapi.tiangolo.com/tutorial/bigger-applications/#include-an-apirouter-with-a-custom-prefix-tags-responses-and-dependencies). **TYPE:** `Optional[Dict[Union[int, str], Dict[str, Any]]]` **DEFAULT:** `None`  
`deprecated` |  Mark all the _path operations_ in this router as deprecated. It will be added to the generated OpenAPI (e.g. visible at `/docs`). **Example** ```
fromfastapiimport FastAPI
from.internalimport old_api
app = FastAPI()
app.include_router(
  old_api.router,
  deprecated=True,
)

```
**TYPE:** `Optional[bool]` **DEFAULT:** `None`  
`include_in_schema` |  Include (or not) all the _path operations_ in this router in the generated OpenAPI schema. This affects the generated OpenAPI (e.g. visible at `/docs`). **Example**