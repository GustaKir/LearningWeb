Title: UploadFile.write Method in FastAPI
URL: https://fastapi.tiangolo.com/reference/uploadfile/
Summary: The `write` method allows writing bytes to a file in FastAPI. It is designed to be awaitable and is executed in a threadpool for compatibility with async operations. The method accepts a parameter `data` which consists of the bytes to be written.
---

```
  
---|---  
###  write `async` [¶](https://fastapi.tiangolo.com/reference/uploadfile/#fastapi.UploadFile.write "Permanent link")
```
write(data)

```

Write some bytes to the file.
You normally wouldn't use this from a file you read in a request.
To be awaitable, compatible with async, this is run in threadpool.
PARAMETER | DESCRIPTION  
---|---  
`data` |  The bytes to write to the file. **TYPE:** `bytes`  
Source code in `fastapi/datastructures.py`
```
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
```
| ```
async defwrite(
  self,
  data: Annotated[
    bytes,
    Doc(
"""
      The bytes to write to the file.
      """
    ),
  ],
) -> None:
"""
  Write some bytes to the file.
  You normally wouldn't use this from a file you read in a request.
  To be awaitable, compatible with async, this is run in threadpool.
  """
  return await super().write(data)

```
  
---|---  
###  seek `async` [¶](https://fastapi.tiangolo.com/reference/uploadfile/#fastapi.UploadFile.seek "Permanent link")
```
seek(offset)

```

Move to a position in the file.
Any next read or write will be done from that position.
To be awaitable, compatible with async, this is run in threadpool.
PARAMETER | DESCRIPTION  
---|---  
`offset` |  The position in bytes to seek to in the file. **TYPE:** `int`  
Source code in `fastapi/datastructures.py`
```
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
```
| ```
async defseek(
  self,
  offset: Annotated[
    int,
    Doc(
"""
      The position in bytes to seek to in the file.
      """
    ),
  ],
) -> None:
"""
  Move to a position in the file.
  Any next read or write will be done from that position.
  To be awaitable, compatible with async, this is run in threadpool.
  """
  return await super().seek(offset)

```
  
---|---  
###  close `async` [¶](https://fastapi.tiangolo.com/reference/uploadfile/#fastapi.UploadFile.close "Permanent link")
```
close()

```

Close the file.
To be awaitable, compatible with async, this is run in threadpool.
Source code in `fastapi/datastructures.py`
```
133
134
135
136
137
138
139
```
| ```
async defclose(self) -> None:
"""
  Close the file.
  To be awaitable, compatible with async, this is run in threadpool.
  """
  return await super().close()

```
  
---|---  
Was this page helpful? 
Thanks for your feedback! 
Thanks for your feedback! 
Back to top  [ Previous  Status Codes  ](https://fastapi.tiangolo.com/reference/status/) [ Next  Exceptions - HTTPException and WebSocketException  ](https://fastapi.tiangolo.com/reference/exceptions/)
The FastAPI trademark is owned by [@tiangolo](https://tiangolo.com) and is registered in the US and across other regions 
Made with [ Material for MkDocs ](https://squidfunk.github.io/mkdocs-material/)
[ ](https://github.com/fastapi/fastapi "github.com") [ ](https://discord.gg/VQjSZaeJmf "discord.gg") [ ](https://twitter.com/fastapi "twitter.com") [ ](https://www.linkedin.com/in/tiangolo "www.linkedin.com") [ ](https://dev.to/tiangolo "dev.to") [ ](https://medium.com/@tiangolo "medium.com") [ ](https://tiangolo.com "tiangolo.com")