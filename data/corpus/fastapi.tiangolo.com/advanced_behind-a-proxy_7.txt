Title: Using FastAPI Behind a Proxy
URL: https://fastapi.tiangolo.com/advanced/behind-a-proxy/
Summary: This section demonstrates how to configure a FastAPI application to work behind a proxy, using the `FastAPI` constructor to set server URLs and root paths. It also explains how to mount sub-applications while maintaining the correct routing with `root_path`.
---

```
fromfastapiimport FastAPI, Request
app = FastAPI(
  servers=[
    {"url": "https://stag.example.com", "description": "Staging environment"},
    {"url": "https://prod.example.com", "description": "Production environment"},
  ],
  root_path="/api/v1",
  root_path_in_servers=False,
)
@app.get("/app")
defread_main(request: Request):
  return {"message": "Hello World", "root_path": request.scope.get("root_path")}

```

and then it won't include it in the OpenAPI schema.
## Mounting a sub-application[¶](https://fastapi.tiangolo.com/advanced/behind-a-proxy/#mounting-a-sub-application "Permanent link")
If you need to mount a sub-application (as described in [Sub Applications - Mounts](https://fastapi.tiangolo.com/advanced/sub-applications/)) while also using a proxy with `root_path`, you can do it normally, as you would expect.
FastAPI will internally use the `root_path` smartly, so it will just work. ✨
Was this page helpful? 
Thanks for your feedback! 
Thanks for your feedback! 
Back to top  [ Previous  Sub Applications - Mounts  ](https://fastapi.tiangolo.com/advanced/sub-applications/) [ Next  Templates  ](https://fastapi.tiangolo.com/advanced/templates/)
The FastAPI trademark is owned by [@tiangolo](https://tiangolo.com) and is registered in the US and across other regions 
Made with [ Material for MkDocs ](https://squidfunk.github.io/mkdocs-material/)
[ ](https://github.com/fastapi/fastapi "github.com") [ ](https://discord.gg/VQjSZaeJmf "discord.gg") [ ](https://twitter.com/fastapi "twitter.com") [ ](https://www.linkedin.com/in/tiangolo "www.linkedin.com") [ ](https://dev.to/tiangolo "dev.to") [ ](https://medium.com/@tiangolo "medium.com") [ ](https://tiangolo.com "tiangolo.com")