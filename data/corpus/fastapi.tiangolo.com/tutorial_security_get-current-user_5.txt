Title: Getting the Current User in FastAPI
URL: https://fastapi.tiangolo.com/tutorial/security/get-current-user/
Summary: This tutorial section demonstrates how to retrieve the current user in a FastAPI application using OAuth2PasswordBearer for token authentication. It defines a User model and a fake token decoding function, and provides an endpoint to read user details. The use of 'Annotated' for dependency injection is recommended for better clarity.
---

```
fromtypingimport Union
fromfastapiimport Depends, FastAPI
fromfastapi.securityimport OAuth2PasswordBearer
frompydanticimport BaseModel
fromtyping_extensionsimport Annotated
app = FastAPI()
oauth2_scheme = OAuth2PasswordBearer(tokenUrl="token")
classUser(BaseModel):
  username: str
  email: Union[str, None] = None
  full_name: Union[str, None] = None
  disabled: Union[bool, None] = None
deffake_decode_token(token):
  return User(
    username=token + "fakedecoded", email="john@example.com", full_name="John Doe"
  )
async defget_current_user(token: Annotated[str, Depends(oauth2_scheme)]):
  user = fake_decode_token(token)
  return user
@app.get("/users/me")
async defread_users_me(current_user: Annotated[User, Depends(get_current_user)]):
  return current_user

```

Tip
Prefer to use the `Annotated` version if possible.
```
fromfastapiimport Depends, FastAPI
fromfastapi.securityimport OAuth2PasswordBearer
frompydanticimport BaseModel
app = FastAPI()
oauth2_scheme = OAuth2PasswordBearer(tokenUrl="token")
classUser(BaseModel):
  username: str
  email: str | None = None
  full_name: str | None = None
  disabled: bool | None = None
deffake_decode_token(token):
  return User(
    username=token + "fakedecoded", email="john@example.com", full_name="John Doe"
  )
async defget_current_user(token: str = Depends(oauth2_scheme)):
  user = fake_decode_token(token)
  return user
@app.get("/users/me")
async defread_users_me(current_user: User = Depends(get_current_user)):
  return current_user

```

Tip
Prefer to use the `Annotated` version if possible.
```
fromtypingimport Union
fromfastapiimport Depends, FastAPI
fromfastapi.securityimport OAuth2PasswordBearer
frompydanticimport BaseModel
app = FastAPI()
oauth2_scheme = OAuth2PasswordBearer(tokenUrl="token")
classUser(BaseModel):
  username: str
  email: Union[str, None] = None
  full_name: Union[str, None] = None
  disabled: Union[bool, None] = None
deffake_decode_token(token):
  return User(
    username=token + "fakedecoded", email="john@example.com", full_name="John Doe"
  )
async defget_current_user(token: str = Depends(oauth2_scheme)):
  user = fake_decode_token(token)
  return user
@app.get("/users/me")
async defread_users_me(current_user: User = Depends(get_current_user)):
  return current_user

```

## Create a `get_current_user` dependency[Â¶](https://fastapi.tiangolo.com/tutorial/security/get-current-user/#create-a-get_current_user-dependency "Permanent link")
Let's create a dependency `get_current_user`.
Remember that dependencies can have sub-dependencies?
`get_current_user` will have a dependency with the same `oauth2_scheme` we created before.
The same as we were doing before in the _path operation_ directly, our new dependency `get_current_user` will receive a `token` as a `str` from the sub-dependency `oauth2_scheme`:
[Python 3.10+](https://fastapi.tiangolo.com/tutorial/security/get-current-user/#__tabbed_5_1)
```
fromtypingimport Annotated
fromfastapiimport Depends, FastAPI
fromfastapi.securityimport OAuth2PasswordBearer
frompydanticimport BaseModel
app = FastAPI()
oauth2_scheme = OAuth2PasswordBearer(tokenUrl="token")
classUser(BaseModel):
  username: str
  email: str | None = None
  full_name: str | None = None
  disabled: bool | None = None
deffake_decode_token(token):
  return User(
    username=token + "fakedecoded", email="john@example.com", full_name="John Doe"
  )
async defget_current_user(token: Annotated[str, Depends(oauth2_scheme)]):
  user = fake_decode_token(token)
  return user
@app.get("/users/me")
async defread_users_me(current_user: Annotated[User, Depends(get_current_user)]):
  return current_user

```

ðŸ¤“ Other versions and variants
[Python 3.9+](https://fastapi.tiangolo.com/tutorial/security/get-current-user/#__tabbed_6_1)[Python 3.8+](https://fastapi.tiangolo.com/tutorial/security/get-current-user/#__tabbed_6_2)[Python 3.10+ - non-Annotated](https://fastapi.tiangolo.com/tutorial/security/get-current-user/#__tabbed_6_3)[Python 3.8+ - non-Annotated](https://fastapi.tiangolo.com/tutorial/security/get-current-user/#__tabbed_6_4)
```
fromtypingimport Annotated, Union
fromfastapiimport Depends, FastAPI
fromfastapi.securityimport OAuth2PasswordBearer
frompydanticimport BaseModel
app = FastAPI()
oauth2_scheme = OAuth2PasswordBearer(tokenUrl="token")
classUser(BaseModel):
  username: str
  email: Union[str, None] = None
  full_name: Union[str, None] = None
  disabled: Union[bool, None] = None
deffake_decode_token(token):
  return User(
    username=token + "fakedecoded", email="john@example.com", full_name="John Doe"
  )
async defget_current_user(token: Annotated[str, Depends(oauth2_scheme)]):
  user = fake_decode_token(token)
  return user
@app.get("/users/me")
async defread_users_me(current_user: Annotated[User, Depends(get_current_user)]):
  return current_user

```