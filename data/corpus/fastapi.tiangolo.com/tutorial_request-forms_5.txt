Title: Using Form Fields in FastAPI
URL: https://fastapi.tiangolo.com/tutorial/request-forms/
Summary: This section discusses the implementation of form fields in FastAPI, particularly for OAuth2's password flow, which requires 'username' and 'password' as form fields. It explains the use of the `Form` class for specifying these fields, including configurations like validation and aliasing. Additionally, it emphasizes the need to use `Form` explicitly to avoid misinterpretation of parameters as query or JSON body parameters.
---

```

For example, in one of the ways the OAuth2 specification can be used (called "password flow") it is required to send a `username` and `password` as form fields.
The spec requires the fields to be exactly named `username` and `password`, and to be sent as form fields, not JSON.
With `Form` you can declare the same configurations as with `Body` (and `Query`, `Path`, `Cookie`), including validation, examples, an alias (e.g. `user-name` instead of `username`), etc.
Info
`Form` is a class that inherits directly from `Body`.
Tip
To declare form bodies, you need to use `Form` explicitly, because without it the parameters would be interpreted as query parameters or body (JSON) parameters.
## About "Form Fields"[¶](https://fastapi.tiangolo.com/tutorial/request-forms/#about-form-fields "Permanent link")
The way HTML forms (`<form></form>`) sends the data to the server normally uses a "special" encoding for that data, it's different from JSON.
**FastAPI** will make sure to read that data from the right place instead of JSON.
Technical Details
Data from forms is normally encoded using the "media type" `application/x-www-form-urlencoded`.
But when the form includes files, it is encoded as `multipart/form-data`. You'll read about handling files in the next chapter.
If you want to read more about these encodings and form fields, head to the [MDN web docs for `POST`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST).
Warning
You can declare multiple `Form` parameters in a _path operation_ , but you can't also declare `Body` fields that you expect to receive as JSON, as the request will have the body encoded using `application/x-www-form-urlencoded` instead of `application/json`.
This is not a limitation of **FastAPI** , it's part of the HTTP protocol.
## Recap[¶](https://fastapi.tiangolo.com/tutorial/request-forms/#recap "Permanent link")
Use `Form` to declare form data input parameters.
Was this page helpful? 
Thanks for your feedback! 
Thanks for your feedback! 
Back to top  [ Previous  Response Status Code  ](https://fastapi.tiangolo.com/tutorial/response-status-code/) [ Next  Form Models  ](https://fastapi.tiangolo.com/tutorial/request-form-models/)
The FastAPI trademark is owned by [@tiangolo](https://tiangolo.com) and is registered in the US and across other regions 
Made with [ Material for MkDocs ](https://squidfunk.github.io/mkdocs-material/)
[ ](https://github.com/fastapi/fastapi "github.com") [ ](https://discord.gg/VQjSZaeJmf "discord.gg") [ ](https://twitter.com/fastapi "twitter.com") [ ](https://www.linkedin.com/in/tiangolo "www.linkedin.com") [ ](https://dev.to/tiangolo "dev.to") [ ](https://medium.com/@tiangolo "medium.com") [ ](https://tiangolo.com "tiangolo.com")
  *[spec]: specification
  *[MDN]: Mozilla Developer Network