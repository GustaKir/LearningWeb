Title: FastAPI Documentation Overview
URL: https://fastapi.tiangolo.com/async/
Summary: This chunk provides links to various FastAPI documentation resources, covering topics such as OpenAPI, middleware, security tools, encoders, static files, templating, and testing with TestClient. It also includes additional resources and ways to get help with FastAPI.
---

](https://fastapi.tiangolo.com/reference/responses/)
    * [ Middleware  ](https://fastapi.tiangolo.com/reference/middleware/)
    * [ OpenAPI  ](https://fastapi.tiangolo.com/reference/openapi/)
OpenAPI 
      * [ OpenAPI `docs` ](https://fastapi.tiangolo.com/reference/openapi/docs/)
      * [ OpenAPI `models` ](https://fastapi.tiangolo.com/reference/openapi/models/)
    * [ Security Tools  ](https://fastapi.tiangolo.com/reference/security/)
    * [ Encoders - `jsonable_encoder` ](https://fastapi.tiangolo.com/reference/encoders/)
    * [ Static Files - `StaticFiles` ](https://fastapi.tiangolo.com/reference/staticfiles/)
    * [ Templating - `Jinja2Templates` ](https://fastapi.tiangolo.com/reference/templating/)
    * [ Test Client - `TestClient` ](https://fastapi.tiangolo.com/reference/testclient/)
  * [ FastAPI People  ](https://fastapi.tiangolo.com/fastapi-people/)
  * [ Resources  ](https://fastapi.tiangolo.com/resources/)
Resources 
    * [ Help FastAPI - Get Help  ](https://fastapi.tiangolo.com/help-fastapi/)
    * [ Development - Contributing  ](https://fastapi.tiangolo.com/contributing/)
    * [ Full Stack FastAPI Template  ](https://fastapi.tiangolo.com/project-generation/)
    * [ External Links and Articles  ](https://fastapi.tiangolo.com/external-links/)
    * [ FastAPI and friends newsletter  ](https://fastapi.tiangolo.com/newsletter/)
    * [ Repository Management Tasks  ](https://fastapi.tiangolo.com/management-tasks/)
  * [ About  ](https://fastapi.tiangolo.com/about/)
About 
    * [ Alternatives, Inspiration and Comparisons  ](https://fastapi.tiangolo.com/alternatives/)
    * [ History, Design and Future  ](https://fastapi.tiangolo.com/history-design-future/)
    * [ Benchmarks  ](https://fastapi.tiangolo.com/benchmarks/)
    * [ Repository Management  ](https://fastapi.tiangolo.com/management/)
  * [ Release Notes  ](https://fastapi.tiangolo.com/release-notes/)


Table of contents 
  * [ In a hurry?  ](https://fastapi.tiangolo.com/async/#in-a-hurry)
  * [ Technical Details  ](https://fastapi.tiangolo.com/async/#technical-details)
  * [ Asynchronous Code  ](https://fastapi.tiangolo.com/async/#asynchronous-code)
    * [ Concurrency and Burgers  ](https://fastapi.tiangolo.com/async/#concurrency-and-burgers)
    * [ Concurrent Burgers  ](https://fastapi.tiangolo.com/async/#concurrent-burgers)
    * [ Parallel Burgers  ](https://fastapi.tiangolo.com/async/#parallel-burgers)
    * [ Burger Conclusion  ](https://fastapi.tiangolo.com/async/#burger-conclusion)
    * [ Is concurrency better than parallelism?  ](https://fastapi.tiangolo.com/async/#is-concurrency-better-than-parallelism)
    * [ Concurrency + Parallelism: Web + Machine Learning  ](https://fastapi.tiangolo.com/async/#concurrency-parallelism-web-machine-learning)
  * [ `async` and `await` ](https://fastapi.tiangolo.com/async/#async-and-await)
    * [ More technical details  ](https://fastapi.tiangolo.com/async/#more-technical-details)
    * [ Write your own async code  ](https://fastapi.tiangolo.com/async/#write-your-own-async-code)
    * [ Other forms of asynchronous code  ](https://fastapi.tiangolo.com/async/#other-forms-of-asynchronous-code)
  * [ Coroutines  ](https://fastapi.tiangolo.com/async/#coroutines)
  * [ Conclusion  ](https://fastapi.tiangolo.com/async/#conclusion)
  * [ Very Technical Details  ](https://fastapi.tiangolo.com/async/#very-technical-details)
    * [ Path operation functions  ](https://fastapi.tiangolo.com/async/#path-operation-functions)
    * [ Dependencies  ](https://fastapi.tiangolo.com/async/#dependencies)
    * [ Sub-dependencies  ](https://fastapi.tiangolo.com/async/#sub-dependencies)
    * [ Other utility functions  ](https://fastapi.tiangolo.com/async/#other-utility-functions)


  1. [ FastAPI  ](https://fastapi.tiangolo.com/)
  2. [ Learn  ](https://fastapi.tiangolo.com/learn/)


# Concurrency and async / await[¶](https://fastapi.tiangolo.com/async/#concurrency-and-async-await "Permanent link")
Details about the `async def` syntax for _path operation functions_ and some background about asynchronous code, concurrency, and parallelism.
## In a hurry?[¶](https://fastapi.tiangolo.com/async/#in-a-hurry "Permanent link")
**TL;DR:**
If you are using third party libraries that tell you to call them with `await`, like:
```
results = await some_library()

```

Then, declare your _path operation functions_ with `async def` like:
```
@app.get('/')
async defread_results():
  results = await some_library()
  return results

```

Note
You can only use `await` inside of functions created with `async def`.
If you are using a third party library that communicates with something (a database, an API, the file system, etc.) and doesn't have support for using `await`, (this is currently the case for most database libraries), then declare your _path operation functions_ as normally, with just `def`, like:
```
@app.get('/')
defresults():
  results = some_library()
  return results