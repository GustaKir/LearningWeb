Title: Number Validations in FastAPI
URL: https://fastapi.tiangolo.com/tutorial/path-params-numeric-validations/
Summary: This section explains how to implement numeric validations for float values in FastAPI, specifically using greater than (`gt`) and less than (`lt`) constraints. It highlights the ability to enforce that values must exceed specific thresholds while showing code examples for setting up path parameters and query parameters with these validations.
---

```

## Number validations: floats, greater than and less than[Â¶](https://fastapi.tiangolo.com/tutorial/path-params-numeric-validations/#number-validations-floats-greater-than-and-less-than "Permanent link")
Number validations also work for `float` values.
Here's where it becomes important to be able to declare `gt` and not just `ge`. As with it you can require, for example, that a value must be greater than `0`, even if it is less than `1`.
So, `0.5` would be a valid value. But `0.0` or `0` would not.
And the same for `lt`.
[Python 3.9+](https://fastapi.tiangolo.com/tutorial/path-params-numeric-validations/#__tabbed_18_1)
```
fromtypingimport Annotated
fromfastapiimport FastAPI, Path, Query
app = FastAPI()
@app.get("/items/{item_id}")
async defread_items(
  *,
  item_id: Annotated[int, Path(title="The ID of the item to get", ge=0, le=1000)],
  q: str,
  size: Annotated[float, Query(gt=0, lt=10.5)],
):
  results = {"item_id": item_id}
  if q:
    results.update({"q": q})
  if size:
    results.update({"size": size})
  return results

```

ðŸ¤“ Other versions and variants
[Python 3.8+](https://fastapi.tiangolo.com/tutorial/path-params-numeric-validations/#__tabbed_19_1)[Python 3.8+ - non-Annotated](https://fastapi.tiangolo.com/tutorial/path-params-numeric-validations/#__tabbed_19_2)
```
fromfastapiimport FastAPI, Path, Query
fromtyping_extensionsimport Annotated
app = FastAPI()
@app.get("/items/{item_id}")
async defread_items(
  *,
  item_id: Annotated[int, Path(title="The ID of the item to get", ge=0, le=1000)],
  q: str,
  size: Annotated[float, Query(gt=0, lt=10.5)],
):
  results = {"item_id": item_id}
  if q:
    results.update({"q": q})
  if size:
    results.update({"size": size})
  return results

```

Tip
Prefer to use the `Annotated` version if possible.
```
fromfastapiimport FastAPI, Path, Query
app = FastAPI()
@app.get("/items/{item_id}")
async defread_items(
  *,
  item_id: int = Path(title="The ID of the item to get", ge=0, le=1000),
  q: str,
  size: float = Query(gt=0, lt=10.5),
):
  results = {"item_id": item_id}
  if q:
    results.update({"q": q})
  if size:
    results.update({"size": size})
  return results

```

## Recap[Â¶](https://fastapi.tiangolo.com/tutorial/path-params-numeric-validations/#recap "Permanent link")
With `Query`, `Path` (and others you haven't seen yet) you can declare metadata and string validations in the same ways as with [Query Parameters and String Validations](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/).
And you can also declare numeric validations:
  * `gt`: `g`reater `t`han
  * `ge`: `g`reater than or `e`qual
  * `lt`: `l`ess `t`han
  * `le`: `l`ess than or `e`qual


Info
`Query`, `Path`, and other classes you will see later are subclasses of a common `Param` class.
All of them share the same parameters for additional validation and metadata you have seen.
Technical Details
When you import `Query`, `Path` and others from `fastapi`, they are actually functions.
That when called, return instances of classes of the same name.
So, you import `Query`, which is a function. And when you call it, it returns an instance of a class also named `Query`.
These functions are there (instead of just using the classes directly) so that your editor doesn't mark errors about their types.
That way you can use your normal editor and coding tools without having to add custom configurations to disregard those errors.
Was this page helpful? 
Thanks for your feedback! 
Thanks for your feedback! 
Back to top  [ Previous  Query Parameters and String Validations  ](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/) [ Next  Query Parameter Models  ](https://fastapi.tiangolo.com/tutorial/query-param-models/)
The FastAPI trademark is owned by [@tiangolo](https://tiangolo.com) and is registered in the US and across other regions 
Made with [ Material for MkDocs ](https://squidfunk.github.io/mkdocs-material/)
[ ](https://github.com/fastapi/fastapi "github.com") [ ](https://discord.gg/VQjSZaeJmf "discord.gg") [ ](https://twitter.com/fastapi "twitter.com") [ ](https://www.linkedin.com/in/tiangolo "www.linkedin.com") [ ](https://dev.to/tiangolo "dev.to") [ ](https://medium.com/@tiangolo "medium.com") [ ](https://tiangolo.com "tiangolo.com")
  *[`kwargs`]: From: K-ey W-ord Arg-uments
  *[`gt`]: greater than
  *[`ge`]: greater than or equal
  *[`lt`]: less than