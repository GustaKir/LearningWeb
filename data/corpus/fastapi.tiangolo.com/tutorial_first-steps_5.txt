Title: Getting Started with FastAPI Development
URL: https://fastapi.tiangolo.com/tutorial/first-steps/
Summary: This section outlines the initial steps for developing a FastAPI application. It covers the setup of the development server, including importing the FastAPI app object from the main module and starting the server at http://127.0.0.1:8000. It also provides information on accessing the documentation and running the application in development mode, along with logging details to monitor changes.
---

```

fast ‚Üí[](https://fastapi.tiangolo.com/tutorial/first-steps/)fastapi dev _main.py_  FastAPI  Starting development server üöÄ       Searching for package file structure from directories       with __init__.py files       Importing from /home/user/code/awesomeapp   module  üêç main.py    code  Importing the FastAPI app object from the module with       the following code:       _from __**main**__ import __**app**_    app  Using import string: main:app   server  Server started at _http://127.0.0.1:8000_   server  Documentation at _http://127.0.0.1:8000/docs_    tip  Running in development mode, for production use:       **fastapi run**       Logs:    INFO  Will watch for changes in these directories:       **[**'/home/user/code/awesomeapp'**]**    INFO  Uvicorn running on _http://127.0.0.1:8000_ **(**Press CTRL+C       to quit**)**    INFO  Started reloader process **[****383138****]** using WatchFiles    INFO  Started server process **[****383153****]**    INFO  Waiting for application startup.    INFO  Application startup complete.restart ‚Üª[](https://fastapi.tiangolo.com/tutorial/first-steps/)

```

In the output, there's a line with something like:
```
INFO:   Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)

```

That line shows the URL where your app is being served, in your local machine.
### Check it[¬∂](https://fastapi.tiangolo.com/tutorial/first-steps/#check-it "Permanent link")
Open your browser at <http://127.0.0.1:8000>.
You will see the JSON response as:
```
{"message":"Hello World"}

```

### Interactive API docs[¬∂](https://fastapi.tiangolo.com/tutorial/first-steps/#interactive-api-docs "Permanent link")
Now go to <http://127.0.0.1:8000/docs>.
You will see the automatic interactive API documentation (provided by [Swagger UI](https://github.com/swagger-api/swagger-ui)):
![Swagger UI](https://fastapi.tiangolo.com/img/index/index-01-swagger-ui-simple.png)
### Alternative API docs[¬∂](https://fastapi.tiangolo.com/tutorial/first-steps/#alternative-api-docs "Permanent link")
And now, go to <http://127.0.0.1:8000/redoc>.
You will see the alternative automatic documentation (provided by [ReDoc](https://github.com/Rebilly/ReDoc)):
![ReDoc](https://fastapi.tiangolo.com/img/index/index-02-redoc-simple.png)
### OpenAPI[¬∂](https://fastapi.tiangolo.com/tutorial/first-steps/#openapi "Permanent link")
**FastAPI** generates a "schema" with all your API using the **OpenAPI** standard for defining APIs.
#### "Schema"[¬∂](https://fastapi.tiangolo.com/tutorial/first-steps/#schema "Permanent link")
A "schema" is a definition or description of something. Not the code that implements it, but just an abstract description.
#### API "schema"[¬∂](https://fastapi.tiangolo.com/tutorial/first-steps/#api-schema "Permanent link")
In this case, [OpenAPI](https://github.com/OAI/OpenAPI-Specification) is a specification that dictates how to define a schema of your API.
This schema definition includes your API paths, the possible parameters they take, etc.
#### Data "schema"[¬∂](https://fastapi.tiangolo.com/tutorial/first-steps/#data-schema "Permanent link")
The term "schema" might also refer to the shape of some data, like a JSON content.
In that case, it would mean the JSON attributes, and data types they have, etc.
#### OpenAPI and JSON Schema[¬∂](https://fastapi.tiangolo.com/tutorial/first-steps/#openapi-and-json-schema "Permanent link")
OpenAPI defines an API schema for your API. And that schema includes definitions (or "schemas") of the data sent and received by your API using **JSON Schema** , the standard for JSON data schemas.
#### Check the `openapi.json`[¬∂](https://fastapi.tiangolo.com/tutorial/first-steps/#check-the-openapijson "Permanent link")
If you are curious about how the raw OpenAPI schema looks like, FastAPI automatically generates a JSON (schema) with the descriptions of all your API.
You can see it directly at: <http://127.0.0.1:8000/openapi.json>.
It will show a JSON starting with something like:
```
{
"openapi":"3.1.0",
"info":{
"title":"FastAPI",
"version":"0.1.0"
},
"paths":{
"/items/":{
"get":{
"responses":{
"200":{
"description":"Successful Response",
"content":{
"application/json":{
...