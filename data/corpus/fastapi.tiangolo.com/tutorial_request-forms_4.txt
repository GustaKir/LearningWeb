Title: Handling Forms in FastAPI
URL: https://fastapi.tiangolo.com/tutorial/request-forms/
Summary: This section explains how to import the `Form` class from FastAPI to handle form data in requests. It provides examples of using `Annotated` for type hinting in Python 3.9+ and includes variants for Python 3.8. The recommended approach is to use the `Annotated` version for better code clarity.
---

```

## Import `Form`[Â¶](https://fastapi.tiangolo.com/tutorial/request-forms/#import-form "Permanent link")
Import `Form` from `fastapi`:
[Python 3.9+](https://fastapi.tiangolo.com/tutorial/request-forms/#__tabbed_1_1)
```
fromtypingimport Annotated
fromfastapiimport FastAPI, Form
app = FastAPI()
@app.post("/login/")
async deflogin(username: Annotated[str, Form()], password: Annotated[str, Form()]):
  return {"username": username}

```

ðŸ¤“ Other versions and variants
[Python 3.8+](https://fastapi.tiangolo.com/tutorial/request-forms/#__tabbed_2_1)[Python 3.8+ - non-Annotated](https://fastapi.tiangolo.com/tutorial/request-forms/#__tabbed_2_2)
```
fromfastapiimport FastAPI, Form
fromtyping_extensionsimport Annotated
app = FastAPI()
@app.post("/login/")
async deflogin(username: Annotated[str, Form()], password: Annotated[str, Form()]):
  return {"username": username}

```

Tip
Prefer to use the `Annotated` version if possible.
```
fromfastapiimport FastAPI, Form
app = FastAPI()
@app.post("/login/")
async deflogin(username: str = Form(), password: str = Form()):
  return {"username": username}

```

## Define `Form` parameters[Â¶](https://fastapi.tiangolo.com/tutorial/request-forms/#define-form-parameters "Permanent link")
Create form parameters the same way you would for `Body` or `Query`:
[Python 3.9+](https://fastapi.tiangolo.com/tutorial/request-forms/#__tabbed_3_1)
```
fromtypingimport Annotated
fromfastapiimport FastAPI, Form
app = FastAPI()
@app.post("/login/")
async deflogin(username: Annotated[str, Form()], password: Annotated[str, Form()]):
  return {"username": username}

```

ðŸ¤“ Other versions and variants
[Python 3.8+](https://fastapi.tiangolo.com/tutorial/request-forms/#__tabbed_4_1)[Python 3.8+ - non-Annotated](https://fastapi.tiangolo.com/tutorial/request-forms/#__tabbed_4_2)
```
fromfastapiimport FastAPI, Form
fromtyping_extensionsimport Annotated
app = FastAPI()
@app.post("/login/")
async deflogin(username: Annotated[str, Form()], password: Annotated[str, Form()]):
  return {"username": username}

```

Tip
Prefer to use the `Annotated` version if possible.
```
fromfastapiimport FastAPI, Form
app = FastAPI()
@app.post("/login/")
async deflogin(username: str = Form(), password: str = Form()):
  return {"username": username}