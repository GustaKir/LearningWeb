Title: FastAPI Request Body Handling and JSON Parsing
URL: https://fastapi.tiangolo.com/reference/request/
Summary: This documentation section covers methods for handling request bodies in FastAPI, particularly the `body()` and `json()` methods. The `body()` method asynchronously retrieves the raw bytes of the request body, while the `json()` method decodes the JSON from the body, caching the result to improve efficiency. Additional information on the `form()` method is also provided, detailing parameters such as maximum files and fields allowed.
---

```
async defbody(self) -> bytes:
  if not hasattr(self, "_body"):
    chunks: list[bytes] = []
    async for chunk in self.stream():
      chunks.append(chunk)
    self._body = b"".join(chunks)
  return self._body

```
  
---|---  
###  json `async` [¶](https://fastapi.tiangolo.com/reference/request/#fastapi.Request.json "Permanent link")
```
json()

```

Source code in `starlette/requests.py`
```
246
247
248
249
250
```
| ```
async defjson(self) -> typing.Any:
  if not hasattr(self, "_json"): # pragma: no branch
    body = await self.body()
    self._json = json.loads(body)
  return self._json

```
  
---|---  
###  form [¶](https://fastapi.tiangolo.com/reference/request/#fastapi.Request.form "Permanent link")
```
form(
  *,
  max_files=1000,
  max_fields=1000,
  max_part_size=1024 * 1024
)

```

PARAMETER | DESCRIPTION  
---|---  
`max_files` |  **TYPE:** `int | float` **DEFAULT:** `1000`  
`max_fields` |  **TYPE:** `int | float` **DEFAULT:** `1000`  
`max_part_size` |  **TYPE:** `int` **DEFAULT:** `1024 * 1024`  
Source code in `starlette/requests.py`
```
287
288
289
290
291
292
293
294
295
296
```
| ```
defform(
  self,
  *,
  max_files: int | float = 1000,
  max_fields: int | float = 1000,
  max_part_size: int = 1024 * 1024,
) -> AwaitableOrContextManager[FormData]:
  return AwaitableOrContextManagerWrapper(
    self._get_form(max_files=max_files, max_fields=max_fields, max_part_size=max_part_size)
  )

```
  
---|---  
###  close `async` [¶](https://fastapi.tiangolo.com/reference/request/#fastapi.Request.close "Permanent link")
```
close()

```

Source code in `starlette/requests.py`
```
298
299
300
```
| ```
async defclose(self) -> None:
  if self._form is not None: # pragma: no branch
    await self._form.close()

```
  
---|---  
###  is_disconnected `async` [¶](https://fastapi.tiangolo.com/reference/request/#fastapi.Request.is_disconnected "Permanent link")
```
is_disconnected()

```

Source code in `starlette/requests.py`
```
302
303
304
305
306
307
308
309
310
311
312
313
314
```
| ```
async defis_disconnected(self) -> bool:
  if not self._is_disconnected:
    message: Message = {}
    # If message isn't immediately available, move on
    with anyio.CancelScope() as cs:
      cs.cancel()
      message = await self._receive()
    if message.get("type") == "http.disconnect":
      self._is_disconnected = True
  return self._is_disconnected

```
  
---|---  
###  send_push_promise `async` [¶](https://fastapi.tiangolo.com/reference/request/#fastapi.Request.send_push_promise "Permanent link")
```
send_push_promise(path)

```

PARAMETER | DESCRIPTION  
---|---  
`path` |  **TYPE:** `str`  
Source code in `starlette/requests.py`
```
316
317
318
319
320
321
322
```
| ```
async defsend_push_promise(self, path: str) -> None:
  if "http.response.push" in self.scope.get("extensions", {}):
    raw_headers: list[tuple[bytes, bytes]] = []
    for name in SERVER_PUSH_HEADERS_TO_COPY:
      for value in self.headers.getlist(name):
        raw_headers.append((name.encode("latin-1"), value.encode("latin-1")))
    await self._send({"type": "http.response.push", "path": path, "headers": raw_headers})

```
  
---|---  
Was this page helpful? 
Thanks for your feedback! 
Thanks for your feedback! 
Back to top  [ Previous  Background Tasks - BackgroundTasks  ](https://fastapi.tiangolo.com/reference/background/) [ Next  WebSockets  ](https://fastapi.tiangolo.com/reference/websockets/)
The FastAPI trademark is owned by [@tiangolo](https://tiangolo.com) and is registered in the US and across other regions 
Made with [ Material for MkDocs ](https://squidfunk.github.io/mkdocs-material/)
[ ](https://github.com/fastapi/fastapi "github.com") [ ](https://discord.gg/VQjSZaeJmf "discord.gg") [ ](https://twitter.com/fastapi "twitter.com") [ ](https://www.linkedin.com/in/tiangolo "www.linkedin.com") [ ](https://dev.to/tiangolo "dev.to") [ ](https://medium.com/@tiangolo "medium.com") [ ](https://tiangolo.com "tiangolo.com")