Title: OpenID Connect Security Configuration in FastAPI
URL: https://fastapi.tiangolo.com/reference/security/
Summary: This section details the initialization parameters for setting up OpenID Connect security in FastAPI, including the OpenID Connect URL, optional scheme name, description, and the auto_error behavior, which determines error handling for missing authorization headers.
---

```
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
```
| ```
def__init__(
  self,
  *,
  openIdConnectUrl: Annotated[
    str,
    Doc(
"""
    The OpenID Connect URL.
    """
    ),
  ],
  scheme_name: Annotated[
    Optional[str],
    Doc(
"""
      Security scheme name.
      It will be included in the generated OpenAPI (e.g. visible at `/docs`).
      """
    ),
  ] = None,
  description: Annotated[
    Optional[str],
    Doc(
"""
      Security scheme description.
      It will be included in the generated OpenAPI (e.g. visible at `/docs`).
      """
    ),
  ] = None,
  auto_error: Annotated[
    bool,
    Doc(
"""
      By default, if no HTTP Authorization header is provided, required for
      OpenID Connect authentication, it will automatically cancel the request
      and send the client an error.
      If `auto_error` is set to `False`, when the HTTP Authorization header
      is not available, instead of erroring out, the dependency result will
      be `None`.
      This is useful when you want to have optional authentication.
      It is also useful when you want to have authentication that can be
      provided in one of multiple optional ways (for example, with OpenID
      Connect or in a cookie).
      """
    ),
  ] = True,
):
  self.model = OpenIdConnectModel(
    openIdConnectUrl=openIdConnectUrl, description=description
  )
  self.scheme_name = scheme_name or self.__class__.__name__
  self.auto_error = auto_error

```
  
---|---  
###  model `instance-attribute` [¶](https://fastapi.tiangolo.com/reference/security/#fastapi.security.OpenIdConnect.model "Permanent link")
```
model = OpenIdConnect[](https://fastapi.tiangolo.com/reference/openapi/models/#fastapi.openapi.models.OpenIdConnect "<code class="doc-symbol doc-symbol-heading doc-symbol-class"></code>      <span class="doc doc-object-name doc-class-name">OpenIdConnect</span> \(<code>fastapi.openapi.models.OpenIdConnect</code>\)")(
  openIdConnectUrl=openIdConnectUrl,
  description=description,
)

```

###  scheme_name `instance-attribute` [¶](https://fastapi.tiangolo.com/reference/security/#fastapi.security.OpenIdConnect.scheme_name "Permanent link")
```
scheme_name = scheme_name or __name__

```

###  auto_error `instance-attribute` [¶](https://fastapi.tiangolo.com/reference/security/#fastapi.security.OpenIdConnect.auto_error "Permanent link")
```
auto_error = auto_error

```

Was this page helpful? 
Thanks for your feedback! 
Thanks for your feedback! 
Back to top  [ Previous  OpenAPI models  ](https://fastapi.tiangolo.com/reference/openapi/models/) [ Next  Encoders - jsonable_encoder  ](https://fastapi.tiangolo.com/reference/encoders/)
The FastAPI trademark is owned by [@tiangolo](https://tiangolo.com) and is registered in the US and across other regions 
Made with [ Material for MkDocs ](https://squidfunk.github.io/mkdocs-material/)
[ ](https://github.com/fastapi/fastapi "github.com") [ ](https://discord.gg/VQjSZaeJmf "discord.gg") [ ](https://twitter.com/fastapi "twitter.com") [ ](https://www.linkedin.com/in/tiangolo "www.linkedin.com") [ ](https://dev.to/tiangolo "dev.to") [ ](https://medium.com/@tiangolo "medium.com") [ ](https://tiangolo.com "tiangolo.com")