Title: Path Parameters and Numeric Validations in FastAPI
URL: https://fastapi.tiangolo.com/tutorial/path-params-numeric-validations/
Summary: This document provides an example of using path parameters in FastAPI with numeric validations, specifically using the `Annotated` type for defining parameters. It demonstrates defining a GET endpoint that retrieves items based on an `item_id` path parameter and includes an optional query parameter `q`.
---

```

ðŸ¤“ Other versions and variants
[Python 3.9+](https://fastapi.tiangolo.com/tutorial/path-params-numeric-validations/#__tabbed_7_1)[Python 3.8+](https://fastapi.tiangolo.com/tutorial/path-params-numeric-validations/#__tabbed_7_2)
```
fromtypingimport Annotated
fromfastapiimport FastAPI, Path
app = FastAPI()
@app.get("/items/{item_id}")
async defread_items(
  q: str, item_id: Annotated[int, Path(title="The ID of the item to get")]
):
  results = {"item_id": item_id}
  if q:
    results.update({"q": q})
  return results

```

```
fromfastapiimport FastAPI, Path
fromtyping_extensionsimport Annotated
app = FastAPI()
@app.get("/items/{item_id}")
async defread_items(
  q: str, item_id: Annotated[int, Path(title="The ID of the item to get")]
):
  results = {"item_id": item_id}
  if q:
    results.update({"q": q})
  return results

```

But keep in mind that if you use `Annotated`, you won't have this problem, it won't matter as you're not using the function parameter default values for `Query()` or `Path()`.
[Python 3.9+](https://fastapi.tiangolo.com/tutorial/path-params-numeric-validations/#__tabbed_8_1)
```
fromtypingimport Annotated
fromfastapiimport FastAPI, Path
app = FastAPI()
@app.get("/items/{item_id}")
async defread_items(
  q: str, item_id: Annotated[int, Path(title="The ID of the item to get")]
):
  results = {"item_id": item_id}
  if q:
    results.update({"q": q})
  return results

```

ðŸ¤“ Other versions and variants
[Python 3.8+](https://fastapi.tiangolo.com/tutorial/path-params-numeric-validations/#__tabbed_9_1)[Python 3.8+ - non-Annotated](https://fastapi.tiangolo.com/tutorial/path-params-numeric-validations/#__tabbed_9_2)
```
fromfastapiimport FastAPI, Path
fromtyping_extensionsimport Annotated
app = FastAPI()
@app.get("/items/{item_id}")
async defread_items(
  q: str, item_id: Annotated[int, Path(title="The ID of the item to get")]
):
  results = {"item_id": item_id}
  if q:
    results.update({"q": q})
  return results

```

Tip
Prefer to use the `Annotated` version if possible.
```
fromfastapiimport FastAPI, Path
app = FastAPI()
@app.get("/items/{item_id}")
async defread_items(q: str, item_id: int = Path(title="The ID of the item to get")):
  results = {"item_id": item_id}
  if q:
    results.update({"q": q})
  return results

```

## Order the parameters as you need, tricks[Â¶](https://fastapi.tiangolo.com/tutorial/path-params-numeric-validations/#order-the-parameters-as-you-need-tricks "Permanent link")
Tip
This is probably not as important or necessary if you use `Annotated`.
Here's a **small trick** that can be handy, but you won't need it often.
If you want to:
  * declare the `q` query parameter without a `Query` nor any default value
  * declare the path parameter `item_id` using `Path`
  * have them in a different order
  * not use `Annotated`


...Python has a little special syntax for that.
Pass `*`, as the first parameter of the function.
Python won't do anything with that `*`, but it will know that all the following parameters should be called as keyword arguments (key-value pairs), also known as `kwargs`. Even if they don't have a default value.
[Python 3.8+ - non-Annotated](https://fastapi.tiangolo.com/tutorial/path-params-numeric-validations/#__tabbed_10_1)
```
fromfastapiimport FastAPI, Path
app = FastAPI()
@app.get("/items/{item_id}")
async defread_items(*, item_id: int = Path(title="The ID of the item to get"), q: str):
  results = {"item_id": item_id}
  if q:
    results.update({"q": q})
  return results

```

ðŸ¤“ Other versions and variants
[Python 3.9+](https://fastapi.tiangolo.com/tutorial/path-params-numeric-validations/#__tabbed_11_1)[Python 3.8+](https://fastapi.tiangolo.com/tutorial/path-params-numeric-validations/#__tabbed_11_2)
```
fromtypingimport Annotated
fromfastapiimport FastAPI, Path
app = FastAPI()
@app.get("/items/{item_id}")
async defread_items(
  item_id: Annotated[int, Path(title="The ID of the item to get")], q: str
):
  results = {"item_id": item_id}
  if q:
    results.update({"q": q})
  return results

```

```
fromfastapiimport FastAPI, Path
fromtyping_extensionsimport Annotated
app = FastAPI()
@app.get("/items/{item_id}")
async defread_items(
  item_id: Annotated[int, Path(title="The ID of the item to get")], q: str
):
  results = {"item_id": item_id}
  if q:
    results.update({"q": q})
  return results

```

### Better with `Annotated`[Â¶](https://fastapi.tiangolo.com/tutorial/path-params-numeric-validations/#better-with-annotated "Permanent link")
Keep in mind that if you use `Annotated`, as you are not using function parameter default values, you won't have this problem, and you probably won't need to use `*`.
[Python 3.9+](https://fastapi.tiangolo.com/tutorial/path-params-numeric-validations/#__tabbed_12_1)