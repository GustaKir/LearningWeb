Title: HTTPConnection Properties in FastAPI
URL: https://fastapi.tiangolo.com/reference/httpconnection/
Summary: This document outlines the properties of the `HTTPConnection` class in FastAPI, including `scope`, `app`, `url`, `base_url`, `headers`, and `query_params`. Each section likely provides information on how to access and utilize these properties when working with HTTP connections in a FastAPI application.
---

```
  
---|---  
###  scope `instance-attribute` [¶](https://fastapi.tiangolo.com/reference/httpconnection/#fastapi.requests.HTTPConnection.scope "Permanent link")
```
scope = scope

```

###  app `property` [¶](https://fastapi.tiangolo.com/reference/httpconnection/#fastapi.requests.HTTPConnection.app "Permanent link")
```
app

```

###  url `property` [¶](https://fastapi.tiangolo.com/reference/httpconnection/#fastapi.requests.HTTPConnection.url "Permanent link")
```
url

```

###  base_url `property` [¶](https://fastapi.tiangolo.com/reference/httpconnection/#fastapi.requests.HTTPConnection.base_url "Permanent link")
```
base_url

```

###  headers `property` [¶](https://fastapi.tiangolo.com/reference/httpconnection/#fastapi.requests.HTTPConnection.headers "Permanent link")
```
headers

```

###  query_params `property` [¶](https://fastapi.tiangolo.com/reference/httpconnection/#fastapi.requests.HTTPConnection.query_params "Permanent link")
```
query_params

```

###  path_params `property` [¶](https://fastapi.tiangolo.com/reference/httpconnection/#fastapi.requests.HTTPConnection.path_params "Permanent link")
```
path_params

```

###  cookies `property` [¶](https://fastapi.tiangolo.com/reference/httpconnection/#fastapi.requests.HTTPConnection.cookies "Permanent link")
```
cookies

```

###  client `property` [¶](https://fastapi.tiangolo.com/reference/httpconnection/#fastapi.requests.HTTPConnection.client "Permanent link")
```
client

```

###  session `property` [¶](https://fastapi.tiangolo.com/reference/httpconnection/#fastapi.requests.HTTPConnection.session "Permanent link")
```
session

```

###  auth `property` [¶](https://fastapi.tiangolo.com/reference/httpconnection/#fastapi.requests.HTTPConnection.auth "Permanent link")
```
auth

```

###  user `property` [¶](https://fastapi.tiangolo.com/reference/httpconnection/#fastapi.requests.HTTPConnection.user "Permanent link")
```
user

```

###  state `property` [¶](https://fastapi.tiangolo.com/reference/httpconnection/#fastapi.requests.HTTPConnection.state "Permanent link")
```
state

```

###  url_for [¶](https://fastapi.tiangolo.com/reference/httpconnection/#fastapi.requests.HTTPConnection.url_for "Permanent link")
```
url_for(name, /, **path_params)

```

PARAMETER | DESCRIPTION  
---|---  
`name` |  **TYPE:** `str`  
`**path_params` |  **TYPE:** `Any` **DEFAULT:** `{}`  
Source code in `starlette/requests.py`
```
182
183
184
185
186
187
```
| ```
defurl_for(self, name: str, /, **path_params: typing.Any) -> URL:
  url_path_provider: Router | Starlette | None = self.scope.get("router") or self.scope.get("app")
  if url_path_provider is None:
    raise RuntimeError("The `url_for` method can only be used inside a Starlette application or with a router.")
  url_path = url_path_provider.url_path_for(name, **path_params)
  return url_path.make_absolute_url(base_url=self.base_url)

```
  
---|---  
Was this page helpful? 
Thanks for your feedback! 
Thanks for your feedback! 
Back to top  [ Previous  WebSockets  ](https://fastapi.tiangolo.com/reference/websockets/) [ Next  Response class  ](https://fastapi.tiangolo.com/reference/response/)
The FastAPI trademark is owned by [@tiangolo](https://tiangolo.com) and is registered in the US and across other regions 
Made with [ Material for MkDocs ](https://squidfunk.github.io/mkdocs-material/)
[ ](https://github.com/fastapi/fastapi "github.com") [ ](https://discord.gg/VQjSZaeJmf "discord.gg") [ ](https://twitter.com/fastapi "twitter.com") [ ](https://www.linkedin.com/in/tiangolo "www.linkedin.com") [ ](https://dev.to/tiangolo "dev.to") [ ](https://medium.com/@tiangolo "medium.com") [ ](https://tiangolo.com "tiangolo.com")