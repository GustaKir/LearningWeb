Title: Cookie Parameter Models in FastAPI
URL: https://fastapi.tiangolo.com/tutorial/cookie-param-models/
Summary: This document provides code examples demonstrating how to define cookie parameters using Pydantic models in FastAPI. It includes the creation of a 'Cookies' model to specify expected cookies and how to access these cookies in an endpoint.
---

```

ü§ì Other versions and variants
[Python 3.10+](https://fastapi.tiangolo.com/tutorial/cookie-param-models/#__tabbed_4_1)[Python 3.8+](https://fastapi.tiangolo.com/tutorial/cookie-param-models/#__tabbed_4_2)[Python 3.10+ - non-Annotated](https://fastapi.tiangolo.com/tutorial/cookie-param-models/#__tabbed_4_3)[Python 3.8+ - non-Annotated](https://fastapi.tiangolo.com/tutorial/cookie-param-models/#__tabbed_4_4)
```
fromtypingimport Annotated
fromfastapiimport Cookie, FastAPI
frompydanticimport BaseModel
app = FastAPI()
classCookies(BaseModel):
  model_config = {"extra": "forbid"}
  session_id: str
  fatebook_tracker: str | None = None
  googall_tracker: str | None = None
@app.get("/items/")
async defread_items(cookies: Annotated[Cookies, Cookie()]):
  return cookies

```

```
fromtypingimport Union
fromfastapiimport Cookie, FastAPI
frompydanticimport BaseModel
fromtyping_extensionsimport Annotated
app = FastAPI()
classCookies(BaseModel):
  model_config = {"extra": "forbid"}
  session_id: str
  fatebook_tracker: Union[str, None] = None
  googall_tracker: Union[str, None] = None
@app.get("/items/")
async defread_items(cookies: Annotated[Cookies, Cookie()]):
  return cookies

```

Tip
Prefer to use the `Annotated` version if possible.
```
fromfastapiimport Cookie, FastAPI
frompydanticimport BaseModel
app = FastAPI()
classCookies(BaseModel):
  model_config = {"extra": "forbid"}
  session_id: str
  fatebook_tracker: str | None = None
  googall_tracker: str | None = None
@app.get("/items/")
async defread_items(cookies: Cookies = Cookie()):
  return cookies

```

Tip
Prefer to use the `Annotated` version if possible.
```
fromtypingimport Union
fromfastapiimport Cookie, FastAPI
frompydanticimport BaseModel
app = FastAPI()
classCookies(BaseModel):
  model_config = {"extra": "forbid"}
  session_id: str
  fatebook_tracker: Union[str, None] = None
  googall_tracker: Union[str, None] = None
@app.get("/items/")
async defread_items(cookies: Cookies = Cookie()):
  return cookies

```

If a client tries to send some **extra cookies** , they will receive an **error** response.
Poor cookie banners with all their effort to get your consent for the API to reject it. üç™
For example, if the client tries to send a `santa_tracker` cookie with a value of `good-list-please`, the client will receive an **error** response telling them that the `santa_tracker` cookie is not allowed:
```
{
"detail":[
{
"type":"extra_forbidden",
"loc":["cookie","santa_tracker"],
"msg":"Extra inputs are not permitted",
"input":"good-list-please",
}
]
}

```

## Summary[¬∂](https://fastapi.tiangolo.com/tutorial/cookie-param-models/#summary "Permanent link")
You can use **Pydantic models** to declare **cookies** in **FastAPI**. üòé
Was this page helpful? 
Thanks for your feedback! 
Thanks for your feedback! 
Back to top  [ Previous  Header Parameters  ](https://fastapi.tiangolo.com/tutorial/header-params/) [ Next  Header Parameter Models  ](https://fastapi.tiangolo.com/tutorial/header-param-models/)
The FastAPI trademark is owned by [@tiangolo](https://tiangolo.com) and is registered in the US and across other regions 
Made with [ Material for MkDocs ](https://squidfunk.github.io/mkdocs-material/)
[ ](https://github.com/fastapi/fastapi "github.com") [ ](https://discord.gg/VQjSZaeJmf "discord.gg") [ ](https://twitter.com/fastapi "twitter.com") [ ](https://www.linkedin.com/in/tiangolo "www.linkedin.com") [ ](https://dev.to/tiangolo "dev.to") [ ](https://medium.com/@tiangolo "medium.com") [ ](https://tiangolo.com "tiangolo.com")
  *[cookie consent]: This is a joke, just in case. It has nothing to do with cookie consents, but it's funny that even the API can now reject the poor cookies. Have a cookie. üç™
  *[API to reject it]: This is another joke. Don't pay attention to me. Have some coffee for your cookie. ‚òï
  *[cookie is not allowed]: Santa disapproves the lack of cookies. üéÖ Okay, no more cookie jokes.
  *[**cookies**]: Have a last cookie before you go. üç™