Title: Defining a Path Operation with FastAPI
URL: https://fastapi.tiangolo.com/reference/fastapi/
Summary: This section explains how to create a path operation using an HTTP GET request in FastAPI. It includes an example showing how to define a route that returns a list of items, and details the parameters such as `path` and `response_model`, explaining their roles in URL mapping, documentation, serialization, and response filtering.
---

```

Add a _path operation_ using an HTTP GET operation.
##### Example[Â¶](https://fastapi.tiangolo.com/reference/fastapi/#fastapi.FastAPI.get--example "Permanent link")
```
fromfastapiimport FastAPI
app = FastAPI()
@app.get("/items/")
defread_items():
  return [{"name": "Empanada"}, {"name": "Arepa"}]

```

PARAMETER | DESCRIPTION  
---|---  
`path` |  The URL path to be used for this _path operation_. For example, in `http://example.com/items`, the path is `/items`. **TYPE:** `str`  
`response_model` |  The type to use for the response. It could be any valid Pydantic _field_ type. So, it doesn't have to be a Pydantic model, it could be other things, like a `list`, `dict`, etc. It will be used for:
  * Documentation: the generated OpenAPI (and the UI at `/docs`) will show it as the response (JSON Schema).
  * Serialization: you could return an arbitrary object and the `response_model` would be used to serialize that object into the corresponding JSON.
  * Filtering: the JSON sent to the client will only contain the data (fields) defined in the `response_model`. If you returned an object that contains an attribute `password` but the `response_model` does not include that field, the JSON sent to the client would not have that `password`.
  * Validation: whatever you return will be serialized with the `response_model`, converting any data as necessary to generate the corresponding JSON. But if the data in the object returned is not valid, that would mean a violation of the contract with the client, so it's an error from the API developer. So, FastAPI will raise an error and return a 500 error code (Internal Server Error).