Title: Understanding Dependency Injection in FastAPI
URL: https://fastapi.tiangolo.com/tutorial/dependencies/
Summary: FastAPI's hierarchical dependency injection system is simple yet powerful, allowing the definition of dependencies that can include their own sub-dependencies. This enables the creation of a dependency tree that efficiently resolves and injects results for various API endpoints, accommodating different permission requirements.
---

## Simple and Powerful[¶](https://fastapi.tiangolo.com/tutorial/dependencies/#simple-and-powerful "Permanent link")
Although the hierarchical dependency injection system is very simple to define and use, it's still very powerful.
You can define dependencies that in turn can define dependencies themselves.
In the end, a hierarchical tree of dependencies is built, and the **Dependency Injection** system takes care of solving all these dependencies for you (and their sub-dependencies) and providing (injecting) the results at each step.
For example, let's say you have 4 API endpoints (_path operations_):
  * `/items/public/`
  * `/items/private/`
  * `/users/{user_id}/activate`
  * `/items/pro/`


then you could add different permission requirements for each of them just with dependencies and sub-dependencies:
```
graph TB
current_user(["current_user"])
active_user(["active_user"])
admin_user(["admin_user"])
paying_user(["paying_user"])
public["/items/public/"]
private["/items/private/"]
activate_user["/users/{user_id}/activate"]
pro_items["/items/pro/"]
current_user --> active_user
active_user --> admin_user
active_user --> paying_user
current_user --> public
active_user --> private
admin_user --> activate_user
paying_user --> pro_items
```

## Integrated with **OpenAPI**[¶](https://fastapi.tiangolo.com/tutorial/dependencies/#integrated-with-openapi_1 "Permanent link")
All these dependencies, while declaring their requirements, also add parameters, validations, etc. to your _path operations_.
**FastAPI** will take care of adding it all to the OpenAPI schema, so that it is shown in the interactive documentation systems.
Was this page helpful? 
Thanks for your feedback! 
Thanks for your feedback! 
Back to top  [ Previous  Body - Updates  ](https://fastapi.tiangolo.com/tutorial/body-updates/) [ Next  Classes as Dependencies  ](https://fastapi.tiangolo.com/tutorial/dependencies/classes-as-dependencies/)
The FastAPI trademark is owned by [@tiangolo](https://tiangolo.com) and is registered in the US and across other regions 
Made with [ Material for MkDocs ](https://squidfunk.github.io/mkdocs-material/)
[ ](https://github.com/fastapi/fastapi "github.com") [ ](https://discord.gg/VQjSZaeJmf "discord.gg") [ ](https://twitter.com/fastapi "twitter.com") [ ](https://www.linkedin.com/in/tiangolo "www.linkedin.com") [ ](https://dev.to/tiangolo "dev.to") [ ](https://medium.com/@tiangolo "medium.com") [ ](https://tiangolo.com "tiangolo.com")
  *[Dependency Injection]: also known as components, resources, providers, services, injectables