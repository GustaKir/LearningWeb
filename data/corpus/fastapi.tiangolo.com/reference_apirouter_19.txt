Title: APIRouter Callbacks and Metadata in FastAPI
URL: https://fastapi.tiangolo.com/reference/apirouter/
Summary: This section highlights the use of callbacks in FastAPI's OpenAPI documentation, describing how they appear in the generated OpenAPI and guiding users to additional resources on OpenAPI callbacks and path operation metadata.
---

Only used internally.
      """
    ),
  ] = None,
  callbacks: Annotated[
    Optional[List[BaseRoute]],
    Doc(
"""
      List of *path operations* that will be used as OpenAPI callbacks.
      This is only for OpenAPI documentation, the callbacks won't be used
      directly.
      It will be added to the generated OpenAPI (e.g. visible at `/docs`).
      Read more about it in the
      [FastAPI docs for OpenAPI Callbacks](https://fastapi.tiangolo.com/advanced/openapi-callbacks/).
      """
    ),
  ] = None,
  openapi_extra: Annotated[
    Optional[Dict[str, Any]],
    Doc(
"""
      Extra metadata to be included in the OpenAPI schema for this *path
      operation*.
      Read more about it in the
      [FastAPI docs for Path Operation Advanced Configuration](https://fastapi.tiangolo.com/advanced/path-operation-advanced-configuration/#custom-openapi-path-operation-schema).
      """
    ),
  ] = None,
  generate_unique_id_function: Annotated[
    Callable[[APIRoute], str],
    Doc(
"""
      Customize the function used to generate unique IDs for the *path
      operations* shown in the generated OpenAPI.
      This is particularly useful when automatically generating clients or
      SDKs for your API.
      Read more about it in the
      [FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).
      """
    ),
  ] = Default(generate_unique_id),
) -> Callable[[DecoratedCallable], DecoratedCallable]:
"""
  Add a *path operation* using an HTTP GET operation.
  ## Example
  ```python
  from fastapi import APIRouter, FastAPI
  app = FastAPI()
  router = APIRouter()
  @router.get("/items/")
  def read_items():
    return [{"name": "Empanada"}, {"name": "Arepa"}]
  app.include_router(router)
  ```
  """
  return self.api_route(
    path=path,
    response_model=response_model,
    status_code=status_code,
    tags=tags,
    dependencies=dependencies,
    summary=summary,
    description=description,
    response_description=response_description,
    responses=responses,
    deprecated=deprecated,
    methods=["GET"],
    operation_id=operation_id,
    response_model_include=response_model_include,
    response_model_exclude=response_model_exclude,
    response_model_by_alias=response_model_by_alias,
    response_model_exclude_unset=response_model_exclude_unset,
    response_model_exclude_defaults=response_model_exclude_defaults,
    response_model_exclude_none=response_model_exclude_none,
    include_in_schema=include_in_schema,
    response_class=response_class,
    name=name,
    callbacks=callbacks,
    openapi_extra=openapi_extra,
    generate_unique_id_function=generate_unique_id_function,
  )

```
  
---|---  
###  put [¶](https://fastapi.tiangolo.com/reference/apirouter/#fastapi.APIRouter.put "Permanent link")
```
put(
  path,
  *,
  response_model=Default(None),
  status_code=None,
  tags=None,
  dependencies=None,
  summary=None,
  description=None,
  response_description="Successful Response",
  responses=None,
  deprecated=None,
  operation_id=None,
  response_model_include=None,
  response_model_exclude=None,
  response_model_by_alias=True,
  response_model_exclude_unset=False,
  response_model_exclude_defaults=False,
  response_model_exclude_none=False,
  include_in_schema=True,
  response_class=Default(JSONResponse[](https://fastapi.tiangolo.com/reference/responses/#fastapi.responses.JSONResponse "<code class="doc-symbol doc-symbol-heading doc-symbol-class"></code>      <span class="doc doc-object-name doc-class-name">fastapi.responses.JSONResponse</span> \(<code>starlette.responses.JSONResponse</code>\)")),
  name=None,
  callbacks=None,
  openapi_extra=None,
  generate_unique_id_function=Default(generate_unique_id)
)

```

Add a _path operation_ using an HTTP PUT operation.
##### Example[¶](https://fastapi.tiangolo.com/reference/apirouter/#fastapi.APIRouter.put--example "Permanent link")
```
fromfastapiimport APIRouter, FastAPI
frompydanticimport BaseModel
classItem(BaseModel):
  name: str
  description: str | None = None
app = FastAPI()
router = APIRouter()
@router.put("/items/{item_id}")
defreplace_item(item_id: str, item: Item):
  return {"message": "Item replaced", "id": item_id}
app.include_router(router)