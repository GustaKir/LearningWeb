Title: FastAPI Exception Reference
URL: https://fastapi.tiangolo.com/reference/exceptions/
Summary: This document outlines the FastAPI exceptions, focusing on HTTPException and WebSocketException. It details their properties, such as status_code, detail, headers for HTTPException, and code, reason for WebSocketException, along with examples for clarity.
---

Table of contents 
  * [ HTTPException  ](https://fastapi.tiangolo.com/reference/exceptions/#fastapi.HTTPException)
    * [ Example  ](https://fastapi.tiangolo.com/reference/exceptions/#fastapi.HTTPException--example)
    * [ status_code  ](https://fastapi.tiangolo.com/reference/exceptions/#fastapi.HTTPException.status_code)
    * [ detail  ](https://fastapi.tiangolo.com/reference/exceptions/#fastapi.HTTPException.detail)
    * [ headers  ](https://fastapi.tiangolo.com/reference/exceptions/#fastapi.HTTPException.headers)
  * [ WebSocketException  ](https://fastapi.tiangolo.com/reference/exceptions/#fastapi.WebSocketException)
    * [ Example  ](https://fastapi.tiangolo.com/reference/exceptions/#fastapi.WebSocketException--example)
    * [ code  ](https://fastapi.tiangolo.com/reference/exceptions/#fastapi.WebSocketException.code)
    * [ reason  ](https://fastapi.tiangolo.com/reference/exceptions/#fastapi.WebSocketException.reason)


  1. [ FastAPI  ](https://fastapi.tiangolo.com/)
  2. [ Reference  ](https://fastapi.tiangolo.com/reference/)


# Exceptions - `HTTPException` and `WebSocketException`[¶](https://fastapi.tiangolo.com/reference/exceptions/#exceptions-httpexception-and-websocketexception "Permanent link")
These are the exceptions that you can raise to show errors to the client.
When you raise an exception, as would happen with normal Python, the rest of the execution is aborted. This way you can raise these exceptions from anywhere in the code to abort a request and show the error to the client.
You can use:
  * `HTTPException`
  * `WebSocketException`


These exceptions can be imported directly from `fastapi`:
```
fromfastapiimport HTTPException, WebSocketException

```

##  fastapi.HTTPException [¶](https://fastapi.tiangolo.com/reference/exceptions/#fastapi.HTTPException "Permanent link")
```
HTTPException(status_code, detail=None, headers=None)

```

Bases: `HTTPException`
An HTTP exception you can raise in your own code to show errors to the client.
This is for client errors, invalid authentication, invalid data, etc. Not for server errors in your code.
Read more about it in the [FastAPI docs for Handling Errors](https://fastapi.tiangolo.com/tutorial/handling-errors/).
#### Example[¶](https://fastapi.tiangolo.com/reference/exceptions/#fastapi.HTTPException--example "Permanent link")
```
fromfastapiimport FastAPI, HTTPException
app = FastAPI()
items = {"foo": "The Foo Wrestlers"}
@app.get("/items/{item_id}")
async defread_item(item_id: str):
  if item_id not in items:
    raise HTTPException(status_code=404, detail="Item not found")
  return {"item": items[item_id]}

```

PARAMETER | DESCRIPTION  
---|---  
`status_code` |  HTTP status code to send to the client. **TYPE:** `int`  
`detail` |  Any data to be sent to the client in the `detail` key of the JSON response. **TYPE:** `Any` **DEFAULT:** `None`  
`headers` |  Any headers to send to the client in the response. **TYPE:** `Optional[Dict[str, str]]` **DEFAULT:** `None`  
Source code in `fastapi/exceptions.py`
```
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
```
| ```
def__init__(
  self,
  status_code: Annotated[
    int,
    Doc(
"""
      HTTP status code to send to the client.
      """
    ),
  ],
  detail: Annotated[
    Any,
    Doc(
"""
      Any data to be sent to the client in the `detail` key of the JSON
      response.
      """
    ),
  ] = None,
  headers: Annotated[
    Optional[Dict[str, str]],
    Doc(
"""
      Any headers to send to the client in the response.
      """
    ),
  ] = None,
) -> None:
  super().__init__(status_code=status_code, detail=detail, headers=headers)

```
  
---|---  
###  status_code `instance-attribute` [¶](https://fastapi.tiangolo.com/reference/exceptions/#fastapi.HTTPException.status_code "Permanent link")
```
status_code = status_code

```

###  detail `instance-attribute` [¶](https://fastapi.tiangolo.com/reference/exceptions/#fastapi.HTTPException.detail "Permanent link")
```
detail = detail

```

###  headers `instance-attribute` [¶](https://fastapi.tiangolo.com/reference/exceptions/#fastapi.HTTPException.headers "Permanent link")
```
headers = headers

```

##  fastapi.WebSocketException [¶](https://fastapi.tiangolo.com/reference/exceptions/#fastapi.WebSocketException "Permanent link")
```
WebSocketException(code, reason=None)

```

Bases: `WebSocketException`
A WebSocket exception you can raise in your own code to show errors to the client.
This is for client errors, invalid authentication, invalid data, etc. Not for server errors in your code.
Read more about it in the [FastAPI docs for WebSockets](https://fastapi.tiangolo.com/advanced/websockets/).
#### Example[¶](https://fastapi.tiangolo.com/reference/exceptions/#fastapi.WebSocketException--example "Permanent link")