Title: Using Header Parameters with FastAPI and Pydantic Models
URL: https://fastapi.tiangolo.com/tutorial/header-param-models/
Summary: This document explains how to define header parameters in FastAPI using Pydantic models. It demonstrates the creation of a `CommonHeaders` model to structure headers and provides an example endpoint that reads these headers. The use of `Annotated` for type hinting and header conversion is also highlighted.
---

```
fromtypingimport Annotated, Union
fromfastapiimport FastAPI, Header
frompydanticimport BaseModel
app = FastAPI()
classCommonHeaders(BaseModel):
  host: str
  save_data: bool
  if_modified_since: Union[str, None] = None
  traceparent: Union[str, None] = None
  x_tag: list[str] = []
@app.get("/items/")
async defread_items(
  headers: Annotated[CommonHeaders, Header(convert_underscores=False)],
):
  return headers

```

```
fromtypingimport List, Union
fromfastapiimport FastAPI, Header
frompydanticimport BaseModel
fromtyping_extensionsimport Annotated
app = FastAPI()
classCommonHeaders(BaseModel):
  host: str
  save_data: bool
  if_modified_since: Union[str, None] = None
  traceparent: Union[str, None] = None
  x_tag: List[str] = []
@app.get("/items/")
async defread_items(
  headers: Annotated[CommonHeaders, Header(convert_underscores=False)],
):
  return headers

```

Tip
Prefer to use the `Annotated` version if possible.
```
fromfastapiimport FastAPI, Header
frompydanticimport BaseModel
app = FastAPI()
classCommonHeaders(BaseModel):
  host: str
  save_data: bool
  if_modified_since: str | None = None
  traceparent: str | None = None
  x_tag: list[str] = []
@app.get("/items/")
async defread_items(headers: CommonHeaders = Header(convert_underscores=False)):
  return headers

```

Tip
Prefer to use the `Annotated` version if possible.
```
fromtypingimport Union
fromfastapiimport FastAPI, Header
frompydanticimport BaseModel
app = FastAPI()
classCommonHeaders(BaseModel):
  host: str
  save_data: bool
  if_modified_since: Union[str, None] = None
  traceparent: Union[str, None] = None
  x_tag: list[str] = []
@app.get("/items/")
async defread_items(headers: CommonHeaders = Header(convert_underscores=False)):
  return headers

```

Tip
Prefer to use the `Annotated` version if possible.
```
fromtypingimport List, Union
fromfastapiimport FastAPI, Header
frompydanticimport BaseModel
app = FastAPI()
classCommonHeaders(BaseModel):
  host: str
  save_data: bool
  if_modified_since: Union[str, None] = None
  traceparent: Union[str, None] = None
  x_tag: List[str] = []
@app.get("/items/")
async defread_items(headers: CommonHeaders = Header(convert_underscores=False)):
  return headers

```

Warning
Before setting `convert_underscores` to `False`, bear in mind that some HTTP proxies and servers disallow the usage of headers with underscores.
## Summary[Â¶](https://fastapi.tiangolo.com/tutorial/header-param-models/#summary "Permanent link")
You can use **Pydantic models** to declare **headers** in **FastAPI**. ðŸ˜Ž
Was this page helpful? 
Thanks for your feedback! 
Thanks for your feedback! 
Back to top  [ Previous  Cookie Parameter Models  ](https://fastapi.tiangolo.com/tutorial/cookie-param-models/) [ Next  Response Model - Return Type  ](https://fastapi.tiangolo.com/tutorial/response-model/)
The FastAPI trademark is owned by [@tiangolo](https://tiangolo.com) and is registered in the US and across other regions 
Made with [ Material for MkDocs ](https://squidfunk.github.io/mkdocs-material/)
[ ](https://github.com/fastapi/fastapi "github.com") [ ](https://discord.gg/VQjSZaeJmf "discord.gg") [ ](https://twitter.com/fastapi "twitter.com") [ ](https://www.linkedin.com/in/tiangolo "www.linkedin.com") [ ](https://dev.to/tiangolo "dev.to") [ ](https://medium.com/@tiangolo "medium.com") [ ](https://tiangolo.com "tiangolo.com")