Title: Alternatives to Managing Virtual Environments
URL: https://fastapi.tiangolo.com/virtual-environments/
Summary: This section discusses various alternatives for managing virtual environments, package dependencies, and project management. It highlights the tool 'uv' which can install Python, manage virtual environments, handle package installations, and ensure consistent package versions for production use.
---

```

## Alternatives[Â¶](https://fastapi.tiangolo.com/virtual-environments/#alternatives "Permanent link")
This is a simple guide to get you started and teach you how everything works **underneath**.
There are many **alternatives** to managing virtual environments, package dependencies (requirements), projects.
Once you are ready and want to use a tool to **manage the entire project** , packages dependencies, virtual environments, etc. I would suggest you try [uv](https://github.com/astral-sh/uv).
`uv` can do a lot of things, it can:
  * **Install Python** for you, including different versions
  * Manage the **virtual environment** for your projects
  * Install **packages**
  * Manage package **dependencies and versions** for your project
  * Make sure you have an **exact** set of packages and versions to install, including their dependencies, so that you can be sure that you can run your project in production exactly the same as in your computer while developing, this is called **locking**
  * And many other things


## Conclusion[Â¶](https://fastapi.tiangolo.com/virtual-environments/#conclusion "Permanent link")
If you read and understood all this, now **you know much more** about virtual environments than many developers out there. ðŸ¤“
Knowing these details will most probably be useful in a future time when you are debugging something that seems complex, but you will know **how it all works underneath**. ðŸ˜Ž
Was this page helpful? 
Thanks for your feedback! 
Thanks for your feedback! 
Back to top  [ Previous  Environment Variables  ](https://fastapi.tiangolo.com/environment-variables/) [ Next  Tutorial - User Guide  ](https://fastapi.tiangolo.com/tutorial/)
The FastAPI trademark is owned by [@tiangolo](https://tiangolo.com) and is registered in the US and across other regions 
Made with [ Material for MkDocs ](https://squidfunk.github.io/mkdocs-material/)
[ ](https://github.com/fastapi/fastapi "github.com") [ ](https://discord.gg/VQjSZaeJmf "discord.gg") [ ](https://twitter.com/fastapi "twitter.com") [ ](https://www.linkedin.com/in/tiangolo "www.linkedin.com") [ ](https://dev.to/tiangolo "dev.to") [ ](https://medium.com/@tiangolo "medium.com") [ ](https://tiangolo.com "tiangolo.com")
  *[inside your project]: there are other options, this is a simple guideline
  *[ CLI]: command line interface