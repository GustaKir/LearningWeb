Title: Using Header Parameters in FastAPI
URL: https://fastapi.tiangolo.com/tutorial/header-params/
Summary: This section covers the `Header` class in FastAPI, which is used to declare header parameters, distinguishing them from query parameters. It explains the automatic conversion feature of `Header`, converting underscores to hyphens for standard headers, and notes the case-insensitivity of HTTP headers.
---

```

Technical Details
`Header` is a "sister" class of `Path`, `Query` and `Cookie`. It also inherits from the same common `Param` class.
But remember that when you import `Query`, `Path`, `Header`, and others from `fastapi`, those are actually functions that return special classes.
Info
To declare headers, you need to use `Header`, because otherwise the parameters would be interpreted as query parameters.
## Automatic conversion[Â¶](https://fastapi.tiangolo.com/tutorial/header-params/#automatic-conversion "Permanent link")
`Header` has a little extra functionality on top of what `Path`, `Query` and `Cookie` provide.
Most of the standard headers are separated by a "hyphen" character, also known as the "minus symbol" (`-`).
But a variable like `user-agent` is invalid in Python.
So, by default, `Header` will convert the parameter names characters from underscore (`_`) to hyphen (`-`) to extract and document the headers.
Also, HTTP headers are case-insensitive, so, you can declare them with standard Python style (also known as "snake_case").
So, you can use `user_agent` as you normally would in Python code, instead of needing to capitalize the first letters as `User_Agent` or something similar.
If for some reason you need to disable automatic conversion of underscores to hyphens, set the parameter `convert_underscores` of `Header` to `False`:
[Python 3.10+](https://fastapi.tiangolo.com/tutorial/header-params/#__tabbed_5_1)
```
fromtypingimport Annotated
fromfastapiimport FastAPI, Header
app = FastAPI()
@app.get("/items/")
async defread_items(
  strange_header: Annotated[str | None, Header(convert_underscores=False)] = None,
):
  return {"strange_header": strange_header}

```

ðŸ¤“ Other versions and variants
[Python 3.9+](https://fastapi.tiangolo.com/tutorial/header-params/#__tabbed_6_1)[Python 3.8+](https://fastapi.tiangolo.com/tutorial/header-params/#__tabbed_6_2)[Python 3.10+ - non-Annotated](https://fastapi.tiangolo.com/tutorial/header-params/#__tabbed_6_3)[Python 3.8+ - non-Annotated](https://fastapi.tiangolo.com/tutorial/header-params/#__tabbed_6_4)
```
fromtypingimport Annotated, Union
fromfastapiimport FastAPI, Header
app = FastAPI()
@app.get("/items/")
async defread_items(
  strange_header: Annotated[
    Union[str, None], Header(convert_underscores=False)
  ] = None,
):
  return {"strange_header": strange_header}

```

```
fromtypingimport Union
fromfastapiimport FastAPI, Header
fromtyping_extensionsimport Annotated
app = FastAPI()
@app.get("/items/")
async defread_items(
  strange_header: Annotated[
    Union[str, None], Header(convert_underscores=False)
  ] = None,
):
  return {"strange_header": strange_header}

```

Tip
Prefer to use the `Annotated` version if possible.
```
fromfastapiimport FastAPI, Header
app = FastAPI()
@app.get("/items/")
async defread_items(
  strange_header: str | None = Header(default=None, convert_underscores=False),
):
  return {"strange_header": strange_header}

```

Tip
Prefer to use the `Annotated` version if possible.
```
fromtypingimport Union
fromfastapiimport FastAPI, Header
app = FastAPI()
@app.get("/items/")
async defread_items(
  strange_header: Union[str, None] = Header(default=None, convert_underscores=False),
):
  return {"strange_header": strange_header}

```

Warning
Before setting `convert_underscores` to `False`, bear in mind that some HTTP proxies and servers disallow the usage of headers with underscores.
## Duplicate headers[Â¶](https://fastapi.tiangolo.com/tutorial/header-params/#duplicate-headers "Permanent link")
It is possible to receive duplicate headers. That means, the same header with multiple values.
You can define those cases using a list in the type declaration.
You will receive all the values from the duplicate header as a Python `list`.
For example, to declare a header of `X-Token` that can appear more than once, you can write:
[Python 3.10+](https://fastapi.tiangolo.com/tutorial/header-params/#__tabbed_7_1)
```
fromtypingimport Annotated
fromfastapiimport FastAPI, Header
app = FastAPI()
@app.get("/items/")
async defread_items(x_token: Annotated[list[str] | None, Header()] = None):
  return {"X-Token values": x_token}

```

ðŸ¤“ Other versions and variants
[Python 3.9+](https://fastapi.tiangolo.com/tutorial/header-params/#__tabbed_8_1)[Python 3.8+](https://fastapi.tiangolo.com/tutorial/header-params/#__tabbed_8_2)[Python 3.10+ - non-Annotated](https://fastapi.tiangolo.com/tutorial/header-params/#__tabbed_8_3)[Python 3.9+ - non-Annotated](https://fastapi.tiangolo.com/tutorial/header-params/#__tabbed_8_4)[Python 3.8+ - non-Annotated](https://fastapi.tiangolo.com/tutorial/header-params/#__tabbed_8_5)
```
fromtypingimport Annotated, List, Union
fromfastapiimport FastAPI, Header
app = FastAPI()
@app.get("/items/")
async defread_items(x_token: Annotated[Union[List[str], None], Header()] = None):
  return {"X-Token values": x_token}

```