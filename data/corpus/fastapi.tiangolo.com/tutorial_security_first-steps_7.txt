Title: Understanding OAuth2PasswordBearer in FastAPI
URL: https://fastapi.tiangolo.com/tutorial/security/first-steps/
Summary: This section explains how FastAPI utilizes the `OAuth2PasswordBearer` class as a dependency to create a security scheme in the OpenAPI schema. It details the integration of security utilities with OpenAPI and describes the function of this class in extracting the `Authorization` header from requests.
---

```

This dependency will provide a `str` that is assigned to the parameter `token` of the _path operation function_.
**FastAPI** will know that it can use this dependency to define a "security scheme" in the OpenAPI schema (and the automatic API docs).
Technical Details
**FastAPI** will know that it can use the class `OAuth2PasswordBearer` (declared in a dependency) to define the security scheme in OpenAPI because it inherits from `fastapi.security.oauth2.OAuth2`, which in turn inherits from `fastapi.security.base.SecurityBase`.
All the security utilities that integrate with OpenAPI (and the automatic API docs) inherit from `SecurityBase`, that's how **FastAPI** can know how to integrate them in OpenAPI.
## What it does[¶](https://fastapi.tiangolo.com/tutorial/security/first-steps/#what-it-does "Permanent link")
It will go and look in the request for that `Authorization` header, check if the value is `Bearer` plus some token, and will return the token as a `str`.
If it doesn't see an `Authorization` header, or the value doesn't have a `Bearer` token, it will respond with a 401 status code error (`UNAUTHORIZED`) directly.
You don't even have to check if the token exists to return an error. You can be sure that if your function is executed, it will have a `str` in that token.
You can try it already in the interactive docs:
![](https://fastapi.tiangolo.com/img/tutorial/security/image03.png)
We are not verifying the validity of the token yet, but that's a start already.
## Recap[¶](https://fastapi.tiangolo.com/tutorial/security/first-steps/#recap "Permanent link")
So, in just 3 or 4 extra lines, you already have some primitive form of security.
Was this page helpful? 
Thanks for your feedback! 
Thanks for your feedback! 
Back to top  [ Previous  Security  ](https://fastapi.tiangolo.com/tutorial/security/) [ Next  Get Current User  ](https://fastapi.tiangolo.com/tutorial/security/get-current-user/)
The FastAPI trademark is owned by [@tiangolo](https://tiangolo.com) and is registered in the US and across other regions 
Made with [ Material for MkDocs ](https://squidfunk.github.io/mkdocs-material/)
[ ](https://github.com/fastapi/fastapi "github.com") [ ](https://discord.gg/VQjSZaeJmf "discord.gg") [ ](https://twitter.com/fastapi "twitter.com") [ ](https://www.linkedin.com/in/tiangolo "www.linkedin.com") [ ](https://dev.to/tiangolo "dev.to") [ ](https://medium.com/@tiangolo "medium.com") [ ](https://tiangolo.com "tiangolo.com")