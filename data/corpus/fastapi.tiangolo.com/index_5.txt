Title: FastAPI Overview
URL: https://fastapi.tiangolo.com/
Summary: FastAPI is a high-performance web framework designed for ease of learning and speed of development, suitable for production use. The documentation includes links to test statuses, coverage, version information, and the source code on GitHub.
---

# FastAPI[Â¶](https://fastapi.tiangolo.com/#fastapi "Permanent link")
[![FastAPI](https://fastapi.tiangolo.com/img/logo-margin/logo-teal.png)](https://fastapi.tiangolo.com)
_FastAPI framework, high performance, easy to learn, fast to code, ready for production_
[ ![Test](https://github.com/fastapi/fastapi/actions/workflows/test.yml/badge.svg?event=push&branch=master) ](https://github.com/fastapi/fastapi/actions?query=workflow%3ATest+event%3Apush+branch%3Amaster) [ ![Coverage](https://coverage-badge.samuelcolvin.workers.dev/fastapi/fastapi.svg) ](https://coverage-badge.samuelcolvin.workers.dev/redirect/fastapi/fastapi) [ ![Package version](https://img.shields.io/pypi/v/fastapi?color=%2334D058&label=pypi%20package) ](https://pypi.org/project/fastapi) [ ![Supported Python versions](https://img.shields.io/pypi/pyversions/fastapi.svg?color=%2334D058) ](https://pypi.org/project/fastapi)
**Documentation** : <https://fastapi.tiangolo.com>
**Source Code** : <https://github.com/fastapi/fastapi>
FastAPI is a modern, fast (high-performance), web framework for building APIs with Python based on standard Python type hints.
The key features are:
  * **Fast** : Very high performance, on par with **NodeJS** and **Go** (thanks to Starlette and Pydantic). [One of the fastest Python frameworks available](https://fastapi.tiangolo.com/#performance).
  * **Fast to code** : Increase the speed to develop features by about 200% to 300%. *
  * **Fewer bugs** : Reduce about 40% of human (developer) induced errors. *
  * **Intuitive** : Great editor support. Completion everywhere. Less time debugging.
  * **Easy** : Designed to be easy to use and learn. Less time reading docs.
  * **Short** : Minimize code duplication. Multiple features from each parameter declaration. Fewer bugs.
  * **Robust** : Get production-ready code. With automatic interactive documentation.
  * **Standards-based** : Based on (and fully compatible with) the open standards for APIs: [OpenAPI](https://github.com/OAI/OpenAPI-Specification) (previously known as Swagger) and [JSON Schema](https://json-schema.org/).