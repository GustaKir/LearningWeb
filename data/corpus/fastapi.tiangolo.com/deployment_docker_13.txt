Title: Deploying FastAPI with Docker
URL: https://fastapi.tiangolo.com/deployment/docker/
Summary: This section outlines various methods to deploy a FastAPI container image, including options such as Docker Compose, Kubernetes, Docker Swarm Mode, and cloud services. It also mentions using 'uv' for Docker management.
---

(and the `fastapi` command) support using `--workers`, there's no reason to use a base Docker image instead of building your own (it's pretty much the same amount of code ðŸ˜…).
## Deploy the Container Image[Â¶](https://fastapi.tiangolo.com/deployment/docker/#deploy-the-container-image "Permanent link")
After having a Container (Docker) Image there are several ways to deploy it.
For example:
  * With **Docker Compose** in a single server
  * With a **Kubernetes** cluster
  * With a Docker Swarm Mode cluster
  * With another tool like Nomad
  * With a cloud service that takes your container image and deploys it


## Docker Image with `uv`[Â¶](https://fastapi.tiangolo.com/deployment/docker/#docker-image-with-uv "Permanent link")
If you are using [uv](https://github.com/astral-sh/uv) to install and manage your project, you can follow their [uv Docker guide](https://docs.astral.sh/uv/guides/integration/docker/).
## Recap[Â¶](https://fastapi.tiangolo.com/deployment/docker/#recap "Permanent link")
Using container systems (e.g. with **Docker** and **Kubernetes**) it becomes fairly straightforward to handle all the **deployment concepts** :
  * HTTPS
  * Running on startup
  * Restarts
  * Replication (the number of processes running)
  * Memory
  * Previous steps before starting


In most cases, you probably won't want to use any base image, and instead **build a container image from scratch** based on the official Python Docker image.
Taking care of the **order** of instructions in the `Dockerfile` and the **Docker cache** you can **minimize build times** , to maximize your productivity (and avoid boredom). ðŸ˜Ž
Was this page helpful? 
Thanks for your feedback! 
Thanks for your feedback! 
Back to top  [ Previous  Server Workers - Uvicorn with Workers  ](https://fastapi.tiangolo.com/deployment/server-workers/) [ Next  How To - Recipes  ](https://fastapi.tiangolo.com/how-to/)
The FastAPI trademark is owned by [@tiangolo](https://tiangolo.com) and is registered in the US and across other regions 
Made with [ Material for MkDocs ](https://squidfunk.github.io/mkdocs-material/)
[ ](https://github.com/fastapi/fastapi "github.com") [ ](https://discord.gg/VQjSZaeJmf "discord.gg") [ ](https://twitter.com/fastapi "twitter.com") [ ](https://www.linkedin.com/in/tiangolo "www.linkedin.com") [ ](https://dev.to/tiangolo "dev.to") [ ](https://medium.com/@tiangolo "medium.com") [ ](https://tiangolo.com "tiangolo.com")
  *[cluster]: A group of machines that are configured to be connected and work together in some way.