Title: FastAPI WebSocket Reference
URL: https://fastapi.tiangolo.com/reference/websockets/
Summary: This document outlines the WebSocket class in FastAPI, detailing its parameters such as `scope`, `receive`, and `send`, which are essential for WebSocket connections. It includes related source code and initialization methods that assert the type of the connection and manage the state of the WebSocket.
---

```

Bases: `HTTPConnection[](https://fastapi.tiangolo.com/reference/httpconnection/#fastapi.requests.HTTPConnection "<code class="doc-symbol doc-symbol-heading doc-symbol-class"></code>      <span class="doc doc-object-name doc-class-name">fastapi.requests.HTTPConnection</span> \(<code>starlette.requests.HTTPConnection</code>\)")`
PARAMETER | DESCRIPTION  
---|---  
`scope` |  **TYPE:** `Scope`  
`receive` |  **TYPE:** `Receive`  
`send` |  **TYPE:** `Send`  
Source code in `starlette/websockets.py`
```
26
27
28
29
30
31
32
```
| ```
def__init__(self, scope: Scope, receive: Receive, send: Send) -> None:
  super().__init__(scope)
  assert scope["type"] == "websocket"
  self._receive = receive
  self._send = send
  self.client_state = WebSocketState.CONNECTING
  self.application_state = WebSocketState.CONNECTING

```
  
---|---  
###  scope `instance-attribute` [¶](https://fastapi.tiangolo.com/reference/websockets/#fastapi.WebSocket.scope "Permanent link")
```
scope = scope

```

###  app `property` [¶](https://fastapi.tiangolo.com/reference/websockets/#fastapi.WebSocket.app "Permanent link")
```
app

```

###  url `property` [¶](https://fastapi.tiangolo.com/reference/websockets/#fastapi.WebSocket.url "Permanent link")
```
url

```

###  base_url `property` [¶](https://fastapi.tiangolo.com/reference/websockets/#fastapi.WebSocket.base_url "Permanent link")
```
base_url

```

###  headers `property` [¶](https://fastapi.tiangolo.com/reference/websockets/#fastapi.WebSocket.headers "Permanent link")
```
headers

```

###  query_params `property` [¶](https://fastapi.tiangolo.com/reference/websockets/#fastapi.WebSocket.query_params "Permanent link")
```
query_params

```

###  path_params `property` [¶](https://fastapi.tiangolo.com/reference/websockets/#fastapi.WebSocket.path_params "Permanent link")
```
path_params

```

###  cookies `property` [¶](https://fastapi.tiangolo.com/reference/websockets/#fastapi.WebSocket.cookies "Permanent link")
```
cookies

```

###  client `property` [¶](https://fastapi.tiangolo.com/reference/websockets/#fastapi.WebSocket.client "Permanent link")
```
client

```

###  state `property` [¶](https://fastapi.tiangolo.com/reference/websockets/#fastapi.WebSocket.state "Permanent link")
```
state

```

###  client_state `instance-attribute` [¶](https://fastapi.tiangolo.com/reference/websockets/#fastapi.WebSocket.client_state "Permanent link")
```
client_state = CONNECTING[](https://fastapi.tiangolo.com/reference/websockets/#fastapi.websockets.WebSocketState.CONNECTING "<code class="doc-symbol doc-symbol-heading doc-symbol-attribute"></code>      <span class="doc doc-object-name doc-attribute-name">CONNECTING</span>

 <span class="doc doc-labels">
   <small class="doc doc-label doc-label-class-attribute"><code>class-attribute</code></small>
   <small class="doc doc-label doc-label-instance-attribute"><code>instance-attribute</code></small>
 </span> \(<code>starlette.websockets.WebSocketState.CONNECTING</code>\)")

```

###  application_state `instance-attribute` [¶](https://fastapi.tiangolo.com/reference/websockets/#fastapi.WebSocket.application_state "Permanent link")
```
application_state = CONNECTING[](https://fastapi.tiangolo.com/reference/websockets/#fastapi.websockets.WebSocketState.CONNECTING "<code class="doc-symbol doc-symbol-heading doc-symbol-attribute"></code>      <span class="doc doc-object-name doc-attribute-name">CONNECTING</span>

 <span class="doc doc-labels">
   <small class="doc doc-label doc-label-class-attribute"><code>class-attribute</code></small>
   <small class="doc doc-label doc-label-instance-attribute"><code>instance-attribute</code></small>
 </span> \(<code>starlette.websockets.WebSocketState.CONNECTING</code>\)")

```

###  url_for [¶](https://fastapi.tiangolo.com/reference/websockets/#fastapi.WebSocket.url_for "Permanent link")
```
url_for(name, /, **path_params)

```

PARAMETER | DESCRIPTION  
---|---  
`name` |  **TYPE:** `str`  
`**path_params` |  **TYPE:** `Any` **DEFAULT:** `{}`  
Source code in `starlette/requests.py`
```
182
183
184
185
186
187
```
| ```
defurl_for(self, name: str, /, **path_params: typing.Any) -> URL:
  url_path_provider: Router | Starlette | None = self.scope.get("router") or self.scope.get("app")
  if url_path_provider is None:
    raise RuntimeError("The `url_for` method can only be used inside a Starlette application or with a router.")
  url_path = url_path_provider.url_path_for(name, **path_params)
  return url_path.make_absolute_url(base_url=self.base_url)

```
  
---|---  
###  receive `async` [¶](https://fastapi.tiangolo.com/reference/websockets/#fastapi.WebSocket.receive "Permanent link")
```
receive()

```

Receive ASGI websocket messages, ensuring valid state transitions.
Source code in `starlette/websockets.py`
```
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
```
|