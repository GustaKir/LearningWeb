Title: Response with Arbitrary Dictionary in FastAPI
URL: https://fastapi.tiangolo.com/tutorial/extra-models/
Summary: This section discusses how to declare a response using an arbitrary dictionary in FastAPI, allowing for dynamic key and value types without the need for a Pydantic model. It demonstrates the use of `typing.Dict` or `dict` in Python 3.9+ for defining response models.
---

```

## Response with arbitrary `dict`[Â¶](https://fastapi.tiangolo.com/tutorial/extra-models/#response-with-arbitrary-dict "Permanent link")
You can also declare a response using a plain arbitrary `dict`, declaring just the type of the keys and values, without using a Pydantic model.
This is useful if you don't know the valid field/attribute names (that would be needed for a Pydantic model) beforehand.
In this case, you can use `typing.Dict` (or just `dict` in Python 3.9 and above):
[Python 3.9+](https://fastapi.tiangolo.com/tutorial/extra-models/#__tabbed_9_1)
```
fromfastapiimport FastAPI
app = FastAPI()
@app.get("/keyword-weights/", response_model=dict[str, float])
async defread_keyword_weights():
  return {"foo": 2.3, "bar": 3.4}

```

ðŸ¤“ Other versions and variants
[Python 3.8+](https://fastapi.tiangolo.com/tutorial/extra-models/#__tabbed_10_1)
```
fromtypingimport Dict
fromfastapiimport FastAPI
app = FastAPI()
@app.get("/keyword-weights/", response_model=Dict[str, float])
async defread_keyword_weights():
  return {"foo": 2.3, "bar": 3.4}

```

## Recap[Â¶](https://fastapi.tiangolo.com/tutorial/extra-models/#recap "Permanent link")
Use multiple Pydantic models and inherit freely for each case.
You don't need to have a single data model per entity if that entity must be able to have different "states". As the case with the user "entity" with a state including `password`, `password_hash` and no password.
Was this page helpful? 
Thanks for your feedback! 
Thanks for your feedback! 
Back to top  [ Previous  Response Model - Return Type  ](https://fastapi.tiangolo.com/tutorial/response-model/) [ Next  Response Status Code  ](https://fastapi.tiangolo.com/tutorial/response-status-code/)
The FastAPI trademark is owned by [@tiangolo](https://tiangolo.com) and is registered in the US and across other regions 
Made with [ Material for MkDocs ](https://squidfunk.github.io/mkdocs-material/)
[ ](https://github.com/fastapi/fastapi "github.com") [ ](https://discord.gg/VQjSZaeJmf "discord.gg") [ ](https://twitter.com/fastapi "twitter.com") [ ](https://www.linkedin.com/in/tiangolo "www.linkedin.com") [ ](https://dev.to/tiangolo "dev.to") [ ](https://medium.com/@tiangolo "medium.com") [ ](https://tiangolo.com "tiangolo.com")