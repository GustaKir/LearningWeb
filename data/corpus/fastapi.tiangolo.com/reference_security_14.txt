Title: HTTP Bearer Token Authentication
URL: https://fastapi.tiangolo.com/reference/security/
Summary: This section outlines the usage of HTTPBearer for token authentication in FastAPI. It describes the creation of an instance object used as a dependency and the expected return type, HTTPAuthorizationCredentials, which contains the authentication scheme and credentials. An example is provided demonstrating how to implement this in a FastAPI application.
---

```
HTTPBearer(
  *,
  bearerFormat=None,
  scheme_name=None,
  description=None,
  auto_error=True
)

```

Bases: `HTTPBase`
HTTP Bearer token authentication.
#### Usage[¶](https://fastapi.tiangolo.com/reference/security/#fastapi.security.HTTPBearer--usage "Permanent link")
Create an instance object and use that object as the dependency in `Depends()`.
The dependency result will be an `HTTPAuthorizationCredentials` object containing the `scheme` and the `credentials`.
#### Example[¶](https://fastapi.tiangolo.com/reference/security/#fastapi.security.HTTPBearer--example "Permanent link")
```
fromtypingimport Annotated
fromfastapiimport Depends, FastAPI
fromfastapi.securityimport HTTPAuthorizationCredentials, HTTPBearer
app = FastAPI()
security = HTTPBearer()
@app.get("/users/me")
defread_current_user(
  credentials: Annotated[HTTPAuthorizationCredentials, Depends(security)]
):
  return {"scheme": credentials.scheme, "credentials": credentials.credentials}

```

PARAMETER | DESCRIPTION  
---|---  
`bearerFormat` |  Bearer token format. **TYPE:** `Optional[str]` **DEFAULT:** `None`  
`scheme_name` |  Security scheme name. It will be included in the generated OpenAPI (e.g. visible at `/docs`). **TYPE:** `Optional[str]` **DEFAULT:** `None`  
`description` |  Security scheme description. It will be included in the generated OpenAPI (e.g. visible at `/docs`). **TYPE:** `Optional[str]` **DEFAULT:** `None`  
`auto_error` |  By default, if the HTTP Bearer token is not provided (in an `Authorization` header), `HTTPBearer` will automatically cancel the request and send the client an error. If `auto_error` is set to `False`, when the HTTP Bearer token is not available, instead of erroring out, the dependency result will be `None`. This is useful when you want to have optional authentication. It is also useful when you want to have authentication that can be provided in one of multiple optional ways (for example, in an HTTP Bearer token or in a cookie). **TYPE:** `bool` **DEFAULT:** `True`  
Source code in `fastapi/security/http.py`
```
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
```
| ```
def__init__(
  self,
  *,
  bearerFormat: Annotated[Optional[str], Doc("Bearer token format.")] = None,
  scheme_name: Annotated[
    Optional[str],
    Doc(
"""
      Security scheme name.
      It will be included in the generated OpenAPI (e.g. visible at `/docs`).
      """
    ),
  ] = None,
  description: Annotated[
    Optional[str],
    Doc(
"""
      Security scheme description.
      It will be included in the generated OpenAPI (e.g. visible at `/docs`).
      """
    ),
  ] = None,
  auto_error: Annotated[
    bool,
    Doc(
"""
      By default, if the HTTP Bearer token is not provided (in an
      `Authorization` header), `HTTPBearer` will automatically cancel the
      request and send the client an error.
      If `auto_error` is set to `False`, when the HTTP Bearer token
      is not available, instead of erroring out, the dependency result will
      be `None`.
      This is useful when you want to have optional authentication.
      It is also useful when you want to have authentication that can be
      provided in one of multiple optional ways (for example, in an HTTP
      Bearer token or in a cookie).
      """
    ),
  ] = True,
):
  self.model = HTTPBearerModel(bearerFormat=bearerFormat, description=description)
  self.scheme_name = scheme_name or self.__class__.__name__
  self.auto_error = auto_error

```
  
---|---  
###  model `instance-attribute` [¶](https://fastapi.tiangolo.com/reference/security/#fastapi.security.HTTPBearer.model "Permanent link")
```
model = HTTPBearer[](https://fastapi.tiangolo.com/reference/openapi/models/#fastapi.openapi.models.HTTPBearer "<code class="doc-symbol doc-symbol-heading doc-symbol-class"></code>      <span class="doc doc-object-name doc-class-name">HTTPBearer</span> \(<code>fastapi.openapi.models.HTTPBearer</code>\)")(
  bearerFormat=bearerFormat, description=description
)

```

###  scheme_name `instance-attribute` [¶](https://fastapi.tiangolo.com/reference/security/#fastapi.security.HTTPBearer.scheme_name "Permanent link")
```
scheme_name = scheme_name or __name__

```

###  auto_error `instance-attribute` [¶](https://fastapi.tiangolo.com/reference/security/#fastapi.security.HTTPBearer.auto_error "Permanent link")
```
auto_error = auto_error

```

##  fastapi.security.HTTPDigest [¶](https://fastapi.tiangolo.com/reference/security/#fastapi.security.HTTPDigest "Permanent link")
```
HTTPDigest(
  *, scheme_name=None, description=None, auto_error=True
)