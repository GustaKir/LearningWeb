Title: Managing Pull Requests in FastAPI
URL: https://fastapi.tiangolo.com/management-tasks/
Summary: This section outlines the steps for updating language labels for pull requests (PRs) and the review process. When updating languages, a new label must be created and added to the PR. The review process emphasizes that PRs should be clear in their purpose, include documentation for new features, and provide example files instead of direct Python code in Markdown.
---

```

Update "Bosnian" with the new language.
And update the search link to point to the new language label that will be created, like `lang-bs`.
Create and add the label to that new Discussion just created, like `lang-bs`.
Then go back to the PR, and add the label, like `lang-bs`, and `lang-all` and `awaiting-review`.
Now the GitHub action will automatically detect the label `lang-bs` and will post in that Discussion that this PR is waiting to be reviewed.
## Review PRs[Â¶](https://fastapi.tiangolo.com/management-tasks/#review-prs "Permanent link")
If a PR doesn't explain what it does or why, ask for more information.
A PR should have a specific use case that it is solving.
  * If the PR is for a feature, it should have docs.
    * Unless it's a feature we want to discourage, like support for a corner case that we don't want users to use.
  * The docs should include a source example file, not write Python directly in Markdown.
  * If the source example(s) file can have different syntax for Python 3.8, 3.9, 3.10, there should be different versions of the file, and they should be shown in tabs in the docs.
  * There should be tests testing the source example.
  * Before the PR is applied, the new tests should fail.
  * After applying the PR, the new tests should pass.
  * Coverage should stay at 100%.
  * If you see the PR makes sense, or we discussed it and considered it should be accepted, you can add commits on top of the PR to tweak it, to add docs, tests, format, refactor, remove extra files, etc.
  * Feel free to comment in the PR to ask for more information, to suggest changes, etc.
  * Once you think the PR is ready, move it in the internal GitHub project for me to review it.


## FastAPI People PRs[Â¶](https://fastapi.tiangolo.com/management-tasks/#fastapi-people-prs "Permanent link")
Every month, a GitHub Action updates the FastAPI People data. Those PRs look like this one: [ðŸ‘¥ Update FastAPI People](https://github.com/fastapi/fastapi/pull/11669).
If the tests are passing, you can merge it right away.
## External Links PRs[Â¶](https://fastapi.tiangolo.com/management-tasks/#external-links-prs "Permanent link")
When people add external links they edit this file [external_links.yml](https://github.com/fastapi/fastapi/blob/master/docs/en/data/external_links.yml).
  * Make sure the new link is in the correct category (e.g. "Podcasts") and language (e.g. "Japanese").
  * A new link should be at the top of its list.
  * The link URL should work (it should not return a 404).
  * The content of the link should be about FastAPI.
  * The new addition should have these fields:
    * `author`: The name of the author.
    * `link`: The URL with the content.
    * `title`: The title of the link (the title of the article, podcast, etc).


After checking all these things and ensuring the PR has the right labels, you can merge it.
## Dependabot PRs[Â¶](https://fastapi.tiangolo.com/management-tasks/#dependabot-prs "Permanent link")
Dependabot will create PRs to update dependencies for several things, and those PRs all look similar, but some are way more delicate than others.
  * If the PR is for a direct dependency, so, Dependabot is modifying `pyproject.toml`, **don't merge it**. ðŸ˜± Let me check it first. There's a good chance that some additional tweaks or updates are needed.
  * If the PR updates one of the internal dependencies, for example it's modifying `requirements.txt` files, or GitHub Action versions, if the tests are passing, the release notes (shown in a summary in the PR) don't show any obvious potential breaking change, you can merge it. ðŸ˜Ž


## Mark GitHub Discussions Answers[Â¶](https://fastapi.tiangolo.com/management-tasks/#mark-github-discussions-answers "Permanent link")
When a question in GitHub Discussions has been answered, mark the answer by clicking "Mark as answer".
You can filter discussions by [`Questions` that are `Unanswered`](https://github.com/tiangolo/fastapi/discussions/categories/questions?discussions_q=category:Questions+is:open+is:unanswered).
Was this page helpful? 
Thanks for your feedback! 
Thanks for your feedback! 
Back to top  [ Previous  FastAPI and friends newsletter  ](https://fastapi.tiangolo.com/newsletter/) [ Next  About  ](https://fastapi.tiangolo.com/about/)
The FastAPI trademark is owned by [@tiangolo](https://tiangolo.com) and is registered in the US and across other regions 
Made with [ Material for MkDocs ](https://squidfunk.github.io/mkdocs-material/)
[ ](https://github.com/fastapi/fastapi "github.com") [ ](https://discord.gg/VQjSZaeJmf "discord.gg") [ ](https://twitter.com/fastapi "twitter.com") [ ](https://www.linkedin.com/in/tiangolo "www.linkedin.com") [ ](https://dev.to/tiangolo "dev.to") [ ](https://medium.com/@tiangolo "medium.com") [ ](https://tiangolo.com "tiangolo.com")