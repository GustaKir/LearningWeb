Title: Sub Applications - Mounts in FastAPI
URL: https://fastapi.tiangolo.com/advanced/sub-applications/
Summary: This section covers how to create independent FastAPI applications by mounting sub-applications to a main app. It explains the concept of 'mounting' and the benefits of having separate OpenAPI documentation and UIs for each application under specific paths.
---

1. [ FastAPI  ](https://fastapi.tiangolo.com/)
  2. [ Learn  ](https://fastapi.tiangolo.com/learn/)
  3. [ Advanced User Guide  ](https://fastapi.tiangolo.com/advanced/)


# Sub Applications - Mounts[¶](https://fastapi.tiangolo.com/advanced/sub-applications/#sub-applications-mounts "Permanent link")
If you need to have two independent FastAPI applications, with their own independent OpenAPI and their own docs UIs, you can have a main app and "mount" one (or more) sub-application(s).
## Mounting a **FastAPI** application[¶](https://fastapi.tiangolo.com/advanced/sub-applications/#mounting-a-fastapi-application "Permanent link")
"Mounting" means adding a completely "independent" application in a specific path, that then takes care of handling everything under that path, with the _path operations_ declared in that sub-application.
### Top-level application[¶](https://fastapi.tiangolo.com/advanced/sub-applications/#top-level-application "Permanent link")
First, create the main, top-level, **FastAPI** application, and its _path operations_ :
[Python 3.8+](https://fastapi.tiangolo.com/advanced/sub-applications/#__tabbed_1_1)
```
fromfastapiimport FastAPI
app = FastAPI()
@app.get("/app")
defread_main():
  return {"message": "Hello World from main app"}
subapi = FastAPI()
@subapi.get("/sub")
defread_sub():
  return {"message": "Hello World from sub API"}
app.mount("/subapi", subapi)

```

### Sub-application[¶](https://fastapi.tiangolo.com/advanced/sub-applications/#sub-application "Permanent link")
Then, create your sub-application, and its _path operations_.
This sub-application is just another standard FastAPI application, but this is the one that will be "mounted":
[Python 3.8+](https://fastapi.tiangolo.com/advanced/sub-applications/#__tabbed_2_1)
```
fromfastapiimport FastAPI
app = FastAPI()
@app.get("/app")
defread_main():
  return {"message": "Hello World from main app"}
subapi = FastAPI()
@subapi.get("/sub")
defread_sub():
  return {"message": "Hello World from sub API"}
app.mount("/subapi", subapi)

```

### Mount the sub-application[¶](https://fastapi.tiangolo.com/advanced/sub-applications/#mount-the-sub-application "Permanent link")
In your top-level application, `app`, mount the sub-application, `subapi`.
In this case, it will be mounted at the path `/subapi`:
[Python 3.8+](https://fastapi.tiangolo.com/advanced/sub-applications/#__tabbed_3_1)
```
fromfastapiimport FastAPI
app = FastAPI()
@app.get("/app")
defread_main():
  return {"message": "Hello World from main app"}
subapi = FastAPI()
@subapi.get("/sub")
defread_sub():
  return {"message": "Hello World from sub API"}
app.mount("/subapi", subapi)

```

### Check the automatic API docs[¶](https://fastapi.tiangolo.com/advanced/sub-applications/#check-the-automatic-api-docs "Permanent link")
Now, run the `fastapi` command with your file:
```

fast →[](https://fastapi.tiangolo.com/advanced/sub-applications/)fastapi dev main.pyINFO:   Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)restart ↻[](https://fastapi.tiangolo.com/advanced/sub-applications/)