Title: Handling Errors in FastAPI
URL: https://fastapi.tiangolo.com/tutorial/handling-errors/
Summary: This section covers the strategies for managing errors in FastAPI applications, providing guidance on how to create and handle custom error responses, middleware for error handling, and best practices for ensuring users receive informative feedback on errors.
---

](https://fastapi.tiangolo.com/reference/responses/)
    * [ Middleware  ](https://fastapi.tiangolo.com/reference/middleware/)
    * [ OpenAPI  ](https://fastapi.tiangolo.com/reference/openapi/)
OpenAPI 
      * [ OpenAPI `docs` ](https://fastapi.tiangolo.com/reference/openapi/docs/)
      * [ OpenAPI `models` ](https://fastapi.tiangolo.com/reference/openapi/models/)
    * [ Security Tools  ](https://fastapi.tiangolo.com/reference/security/)
    * [ Encoders - `jsonable_encoder` ](https://fastapi.tiangolo.com/reference/encoders/)
    * [ Static Files - `StaticFiles` ](https://fastapi.tiangolo.com/reference/staticfiles/)
    * [ Templating - `Jinja2Templates` ](https://fastapi.tiangolo.com/reference/templating/)
    * [ Test Client - `TestClient` ](https://fastapi.tiangolo.com/reference/testclient/)
  * [ FastAPI People  ](https://fastapi.tiangolo.com/fastapi-people/)
  * [ Resources  ](https://fastapi.tiangolo.com/resources/)
Resources 
    * [ Help FastAPI - Get Help  ](https://fastapi.tiangolo.com/help-fastapi/)
    * [ Development - Contributing  ](https://fastapi.tiangolo.com/contributing/)
    * [ Full Stack FastAPI Template  ](https://fastapi.tiangolo.com/project-generation/)
    * [ External Links and Articles  ](https://fastapi.tiangolo.com/external-links/)
    * [ FastAPI and friends newsletter  ](https://fastapi.tiangolo.com/newsletter/)
    * [ Repository Management Tasks  ](https://fastapi.tiangolo.com/management-tasks/)
  * [ About  ](https://fastapi.tiangolo.com/about/)
About 
    * [ Alternatives, Inspiration and Comparisons  ](https://fastapi.tiangolo.com/alternatives/)
    * [ History, Design and Future  ](https://fastapi.tiangolo.com/history-design-future/)
    * [ Benchmarks  ](https://fastapi.tiangolo.com/benchmarks/)
    * [ Repository Management  ](https://fastapi.tiangolo.com/management/)
  * [ Release Notes  ](https://fastapi.tiangolo.com/release-notes/)


Table of contents 
  * [ Use `HTTPException` ](https://fastapi.tiangolo.com/tutorial/handling-errors/#use-httpexception)
    * [ Import `HTTPException` ](https://fastapi.tiangolo.com/tutorial/handling-errors/#import-httpexception)
    * [ Raise an `HTTPException` in your code  ](https://fastapi.tiangolo.com/tutorial/handling-errors/#raise-an-httpexception-in-your-code)
    * [ The resulting response  ](https://fastapi.tiangolo.com/tutorial/handling-errors/#the-resulting-response)
  * [ Add custom headers  ](https://fastapi.tiangolo.com/tutorial/handling-errors/#add-custom-headers)
  * [ Install custom exception handlers  ](https://fastapi.tiangolo.com/tutorial/handling-errors/#install-custom-exception-handlers)
  * [ Override the default exception handlers  ](https://fastapi.tiangolo.com/tutorial/handling-errors/#override-the-default-exception-handlers)
    * [ Override request validation exceptions  ](https://fastapi.tiangolo.com/tutorial/handling-errors/#override-request-validation-exceptions)
      * [ `RequestValidationError` vs `ValidationError` ](https://fastapi.tiangolo.com/tutorial/handling-errors/#requestvalidationerror-vs-validationerror)
    * [ Override the `HTTPException` error handler  ](https://fastapi.tiangolo.com/tutorial/handling-errors/#override-the-httpexception-error-handler)
    * [ Use the `RequestValidationError` body  ](https://fastapi.tiangolo.com/tutorial/handling-errors/#use-the-requestvalidationerror-body)
      * [ FastAPI's `HTTPException` vs Starlette's `HTTPException` ](https://fastapi.tiangolo.com/tutorial/handling-errors/#fastapis-httpexception-vs-starlettes-httpexception)
    * [ Reuse **FastAPI** 's exception handlers  ](https://fastapi.tiangolo.com/tutorial/handling-errors/#reuse-fastapis-exception-handlers)


  1. [ FastAPI  ](https://fastapi.tiangolo.com/)
  2. [ Learn  ](https://fastapi.tiangolo.com/learn/)
  3. [ Tutorial - User Guide  ](https://fastapi.tiangolo.com/tutorial/)


# Handling Errors[Â¶](https://fastapi.tiangolo.com/tutorial/handling-errors/#handling-errors "Permanent link")
There are many situations in which you need to notify an error to a client that is using your API.
This client could be a browser with a frontend, a code from someone else, an IoT device, etc.
You could need to tell the client that:
  * The client doesn't have enough privileges for that operation.
  * The client doesn't have access to that resource.
  * The item the client was trying to access doesn't exist.
  * etc.