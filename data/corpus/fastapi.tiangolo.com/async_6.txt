Title: Understanding Asynchronous Programming
URL: https://fastapi.tiangolo.com/async/
Summary: This section explains asynchronous programming, highlighting its efficiency in handling I/O bound operations without waiting for tasks to complete sequentially. It contrasts asynchronous behavior with synchronous processes, illustrating how asynchronous systems can utilize idle time effectively.
---

As the execution time is consumed mostly by waiting for I/O operations, they call them "I/O bound" operations.
It's called "asynchronous" because the computer / program doesn't have to be "synchronized" with the slow task, waiting for the exact moment that the task finishes, while doing nothing, to be able to take the task result and continue the work.
Instead of that, by being an "asynchronous" system, once finished, the task can wait in line a little bit (some microseconds) for the computer / program to finish whatever it went to do, and then come back to take the results and continue working with them.
For "synchronous" (contrary to "asynchronous") they commonly also use the term "sequential", because the computer / program follows all the steps in sequence before switching to a different task, even if those steps involve waiting.
### Concurrency and Burgers[¶](https://fastapi.tiangolo.com/async/#concurrency-and-burgers "Permanent link")
This idea of **asynchronous** code described above is also sometimes called **"concurrency"**. It is different from **"parallelism"**.
**Concurrency** and **parallelism** both relate to "different things happening more or less at the same time".
But the details between _concurrency_ and _parallelism_ are quite different.
To see the difference, imagine the following story about burgers:
### Concurrent Burgers[¶](https://fastapi.tiangolo.com/async/#concurrent-burgers "Permanent link")
You go with your crush to get fast food, you stand in line while the cashier takes the orders from the people in front of you. 😍
![](https://fastapi.tiangolo.com/img/async/concurrent-burgers/concurrent-burgers-01.png)
Then it's your turn, you place your order of 2 very fancy burgers for your crush and you. 🍔🍔
![](https://fastapi.tiangolo.com/img/async/concurrent-burgers/concurrent-burgers-02.png)
The cashier says something to the cook in the kitchen so they know they have to prepare your burgers (even though they are currently preparing the ones for the previous clients).
![](https://fastapi.tiangolo.com/img/async/concurrent-burgers/concurrent-burgers-03.png)
You pay. 💸
The cashier gives you the number of your turn.
![](https://fastapi.tiangolo.com/img/async/concurrent-burgers/concurrent-burgers-04.png)
While you are waiting, you go with your crush and pick a table, you sit and talk with your crush for a long time (as your burgers are very fancy and take some time to prepare).
As you are sitting at the table with your crush, while you wait for the burgers, you can spend that time admiring how awesome, cute and smart your crush is ✨😍✨.
![](https://fastapi.tiangolo.com/img/async/concurrent-burgers/concurrent-burgers-05.png)
While waiting and talking to your crush, from time to time, you check the number displayed on the counter to see if it's your turn already.
Then at some point, it finally is your turn. You go to the counter, get your burgers and come back to the table.
![](https://fastapi.tiangolo.com/img/async/concurrent-burgers/concurrent-burgers-06.png)
You and your crush eat the burgers and have a nice time. ✨
![](https://fastapi.tiangolo.com/img/async/concurrent-burgers/concurrent-burgers-07.png)
Info
Beautiful illustrations by [Ketrina Thompson](https://www.instagram.com/ketrinadrawsalot). 🎨
Imagine you are the computer / program 🤖 in that story.
While you are at the line, you are just idle 😴, waiting for your turn, not doing anything very "productive". But the line is fast because the cashier is only taking the orders (not preparing them), so that's fine.
Then, when it's your turn, you do actual "productive" work, you process the menu, decide what you want, get your crush's choice, pay, check that you give the correct bill or card, check that you are charged correctly, check that the order has the correct items, etc.
But then, even though you still don't have your burgers, your work with the cashier is "on pause" ⏸, because you have to wait 🕙 for your burgers to be ready.
But as you go away from the counter and sit at the table with a number for your turn, you can switch 🔀 your attention to your crush, and "work" ⏯ 🤓 on that. Then you are again doing something very "productive" as is flirting with your crush 😍.
Then the cashier 💁 says "I'm finished with doing the burgers" by putting your number on the counter's display, but you don't jump like crazy immediately when the displayed number changes to your turn number. You know no one will steal your burgers because you have the number of your turn, and they have theirs.
So you wait for your crush to finish the story (finish the current work ⏯ / task being processed 🤓), smile gently and say that you are going for the burgers ⏸.
Then you go to the counter 🔀, to the initial task that is now finished ⏯, pick the burgers, say thanks and take them to the table. That finishes that step / task of interaction with the counter ⏹. That in turn, creates a new task, of "eating burgers" 🔀 ⏯, but the previous one of "getting burgers" is finished ⏹.
#