Title: FastAPI Documentation Overview
URL: https://fastapi.tiangolo.com/python-types/
Summary: This chunk provides links to various FastAPI documentation resources, including OpenAPI references, middleware, security tools, encoders, static files, templating, and testing tools. It serves as a navigational guide for developers exploring FastAPI functionalities.
---

](https://fastapi.tiangolo.com/reference/responses/)
    * [ Middleware  ](https://fastapi.tiangolo.com/reference/middleware/)
    * [ OpenAPI  ](https://fastapi.tiangolo.com/reference/openapi/)
OpenAPI 
      * [ OpenAPI `docs` ](https://fastapi.tiangolo.com/reference/openapi/docs/)
      * [ OpenAPI `models` ](https://fastapi.tiangolo.com/reference/openapi/models/)
    * [ Security Tools  ](https://fastapi.tiangolo.com/reference/security/)
    * [ Encoders - `jsonable_encoder` ](https://fastapi.tiangolo.com/reference/encoders/)
    * [ Static Files - `StaticFiles` ](https://fastapi.tiangolo.com/reference/staticfiles/)
    * [ Templating - `Jinja2Templates` ](https://fastapi.tiangolo.com/reference/templating/)
    * [ Test Client - `TestClient` ](https://fastapi.tiangolo.com/reference/testclient/)
  * [ FastAPI People  ](https://fastapi.tiangolo.com/fastapi-people/)
  * [ Resources  ](https://fastapi.tiangolo.com/resources/)
Resources 
    * [ Help FastAPI - Get Help  ](https://fastapi.tiangolo.com/help-fastapi/)
    * [ Development - Contributing  ](https://fastapi.tiangolo.com/contributing/)
    * [ Full Stack FastAPI Template  ](https://fastapi.tiangolo.com/project-generation/)
    * [ External Links and Articles  ](https://fastapi.tiangolo.com/external-links/)
    * [ FastAPI and friends newsletter  ](https://fastapi.tiangolo.com/newsletter/)
    * [ Repository Management Tasks  ](https://fastapi.tiangolo.com/management-tasks/)
  * [ About  ](https://fastapi.tiangolo.com/about/)
About 
    * [ Alternatives, Inspiration and Comparisons  ](https://fastapi.tiangolo.com/alternatives/)
    * [ History, Design and Future  ](https://fastapi.tiangolo.com/history-design-future/)
    * [ Benchmarks  ](https://fastapi.tiangolo.com/benchmarks/)
    * [ Repository Management  ](https://fastapi.tiangolo.com/management/)
  * [ Release Notes  ](https://fastapi.tiangolo.com/release-notes/)


Table of contents 
  * [ Motivation  ](https://fastapi.tiangolo.com/python-types/#motivation)
    * [ Edit it  ](https://fastapi.tiangolo.com/python-types/#edit-it)
    * [ Add types  ](https://fastapi.tiangolo.com/python-types/#add-types)
  * [ More motivation  ](https://fastapi.tiangolo.com/python-types/#more-motivation)
  * [ Declaring types  ](https://fastapi.tiangolo.com/python-types/#declaring-types)
    * [ Simple types  ](https://fastapi.tiangolo.com/python-types/#simple-types)
    * [ Generic types with type parameters  ](https://fastapi.tiangolo.com/python-types/#generic-types-with-type-parameters)
      * [ Newer versions of Python  ](https://fastapi.tiangolo.com/python-types/#newer-versions-of-python)
      * [ List  ](https://fastapi.tiangolo.com/python-types/#list)
      * [ Tuple and Set  ](https://fastapi.tiangolo.com/python-types/#tuple-and-set)
      * [ Dict  ](https://fastapi.tiangolo.com/python-types/#dict)
      * [ Union  ](https://fastapi.tiangolo.com/python-types/#union)
      * [ Possibly `None` ](https://fastapi.tiangolo.com/python-types/#possibly-none)
      * [ Using `Union` or `Optional` ](https://fastapi.tiangolo.com/python-types/#using-union-or-optional)
      * [ Generic types  ](https://fastapi.tiangolo.com/python-types/#generic-types)
    * [ Classes as types  ](https://fastapi.tiangolo.com/python-types/#classes-as-types)
  * [ Pydantic models  ](https://fastapi.tiangolo.com/python-types/#pydantic-models)
  * [ Type Hints with Metadata Annotations  ](https://fastapi.tiangolo.com/python-types/#type-hints-with-metadata-annotations)
  * [ Type hints in **FastAPI** ](https://fastapi.tiangolo.com/python-types/#type-hints-in-fastapi)


  1. [ FastAPI  ](https://fastapi.tiangolo.com/)
  2. [ Learn  ](https://fastapi.tiangolo.com/learn/)


# Python Types Intro[¶](https://fastapi.tiangolo.com/python-types/#python-types-intro "Permanent link")
Python has support for optional "type hints" (also called "type annotations").
These **"type hints"** or annotations are a special syntax that allow declaring the type of a variable.
By declaring types for your variables, editors and tools can give you better support.
This is just a **quick tutorial / refresher** about Python type hints. It covers only the minimum necessary to use them with **FastAPI**... which is actually very little.
**FastAPI** is all based on these type hints, they give it many advantages and benefits.
But even if you never use **FastAPI** , you would benefit from learning a bit about them.
Note
If you are a Python expert, and you already know everything about type hints, skip to the next chapter.
## Motivation[¶](https://fastapi.tiangolo.com/python-types/#motivation "Permanent link")
Let's start with a simple example:
[Python 3.8+](https://fastapi.tiangolo.com/python-types/#__tabbed_1_1)
```
defget_full_name(first_name, last_name):
  full_name = first_name.title() + " " + last_name.title()
  return full_name
print(get_full_name("john", "doe"))

```

Calling this program outputs:
```
John Doe