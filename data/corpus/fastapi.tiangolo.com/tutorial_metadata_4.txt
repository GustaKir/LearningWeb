Title: Metadata for FastAPI
URL: https://fastapi.tiangolo.com/tutorial/metadata/
Summary: This document provides an overview of how to implement and utilize metadata in FastAPI, including API metadata, license identifiers, and tag metadata. It covers the creation, usage, documentation checks, and ordering of tags, as well as details on OpenAPI and documentation URLs.
---

Table of contents 
  * [ Metadata for API  ](https://fastapi.tiangolo.com/tutorial/metadata/#metadata-for-api)
  * [ License identifier  ](https://fastapi.tiangolo.com/tutorial/metadata/#license-identifier)
  * [ Metadata for tags  ](https://fastapi.tiangolo.com/tutorial/metadata/#metadata-for-tags)
    * [ Create metadata for tags  ](https://fastapi.tiangolo.com/tutorial/metadata/#create-metadata-for-tags)
    * [ Use your tags  ](https://fastapi.tiangolo.com/tutorial/metadata/#use-your-tags)
    * [ Check the docs  ](https://fastapi.tiangolo.com/tutorial/metadata/#check-the-docs)
    * [ Order of tags  ](https://fastapi.tiangolo.com/tutorial/metadata/#order-of-tags)
  * [ OpenAPI URL  ](https://fastapi.tiangolo.com/tutorial/metadata/#openapi-url)
  * [ Docs URLs  ](https://fastapi.tiangolo.com/tutorial/metadata/#docs-urls)


  1. [ FastAPI  ](https://fastapi.tiangolo.com/)
  2. [ Learn  ](https://fastapi.tiangolo.com/learn/)
  3. [ Tutorial - User Guide  ](https://fastapi.tiangolo.com/tutorial/)


# Metadata and Docs URLs[Â¶](https://fastapi.tiangolo.com/tutorial/metadata/#metadata-and-docs-urls "Permanent link")
You can customize several metadata configurations in your **FastAPI** application.
## Metadata for API[Â¶](https://fastapi.tiangolo.com/tutorial/metadata/#metadata-for-api "Permanent link")
You can set the following fields that are used in the OpenAPI specification and the automatic API docs UIs:
Parameter | Type | Description  
---|---|---  
`title` | `str` | The title of the API.  
`summary` | `str` | A short summary of the API. Available since OpenAPI 3.1.0, FastAPI 0.99.0.  
`description` | `str` | A short description of the API. It can use Markdown.  
`version` | `string` | The version of the API. This is the version of your own application, not of OpenAPI. For example `2.5.0`.  
`terms_of_service` | `str` | A URL to the Terms of Service for the API. If provided, this has to be a URL.  
`contact` | `dict` | The contact information for the exposed API. It can contain several fields. `contact` fields| Parameter| Type| Description  
---|---|---  
`name`| `str`| The identifying name of the contact person/organization.  
`url`| `str`| The URL pointing to the contact information. MUST be in the format of a URL.  
`email`| `str`| The email address of the contact person/organization. MUST be in the format of an email address.  
`license_info` | `dict` | The license information for the exposed API. It can contain several fields. `license_info` fields| Parameter| Type| Description  
---|---|---  
`name`| `str`| **REQUIRED** (if a `license_info` is set). The license name used for the API.  
`identifier`| `str`| An [SPDX](https://spdx.org/licenses/) license expression for the API. The `identifier` field is mutually exclusive of the `url` field. Available since OpenAPI 3.1.0, FastAPI 0.99.0.  
`url`| `str`| A URL to the license used for the API. MUST be in the format of a URL.  
You can set them as follows:
[Python 3.8+](https://fastapi.tiangolo.com/tutorial/metadata/#__tabbed_1_1)
```
fromfastapiimport FastAPI
description = """
ChimichangApp API helps you do awesome stuff. ðŸš€
## Items
You can **read items**.
## Users
You will be able to:
* **Create users** (_not implemented_).
* **Read users** (_not implemented_).
"""
app = FastAPI(
  title="ChimichangApp",
  description=description,
  summary="Deadpool's favorite app. Nuff said.",
  version="0.0.1",
  terms_of_service="http://example.com/terms/",
  contact={
    "name": "Deadpoolio the Amazing",
    "url": "http://x-force.example.com/contact/",
    "email": "dp@x-force.example.com",
  },
  license_info={
    "name": "Apache 2.0",
    "url": "https://www.apache.org/licenses/LICENSE-2.0.html",
  },
)
@app.get("/items/")
async defread_items():
  return [{"name": "Katana"}]

```

Tip
You can write Markdown in the `description` field and it will be rendered in the output.
With this configuration, the automatic API docs would look like:
![](https://fastapi.tiangolo.com/img/tutorial/metadata/image01.png)
## License identifier[Â¶](https://fastapi.tiangolo.com/tutorial/metadata/#license-identifier "Permanent link")
Since OpenAPI 3.1.0 and FastAPI 0.99.0, you can also set the `license_info` with an `identifier` instead of a `url`.
For example:
[Python 3.8+](https://fastapi.tiangolo.com/tutorial/metadata/#__tabbed_2_1)